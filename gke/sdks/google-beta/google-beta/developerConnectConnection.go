// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeveloperConnectConnection struct {
	pulumi.CustomResourceState

	// Optional. Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will
	// only manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of
	// the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and connection_id from the
	// method_signature of Create RPC
	ConnectionId pulumi.StringOutput `pulumi:"connectionId"`
	// Output only. [Output only] Create timestamp
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The crypto key configuration. This field is used by the Customer-managed encryption keys (CMEK) feature.
	CryptoKeyConfig DeveloperConnectConnectionCryptoKeyConfigPtrOutput `pulumi:"cryptoKeyConfig"`
	// Output only. [Output only] Delete timestamp
	DeleteTime                   pulumi.StringOutput `pulumi:"deleteTime"`
	DeveloperConnectConnectionId pulumi.StringOutput `pulumi:"developerConnectConnectionId"`
	// Optional. If disabled is set to true, functionality is disabled for this connection. Repository based API methods and
	// webhooks processing for repositories in this connection will be disabled.
	Disabled             pulumi.BoolPtrOutput   `pulumi:"disabled"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
	// delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Configuration for connections to github.com.
	GithubConfig DeveloperConnectConnectionGithubConfigPtrOutput `pulumi:"githubConfig"`
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig DeveloperConnectConnectionGithubEnterpriseConfigPtrOutput `pulumi:"githubEnterpriseConfig"`
	// Configuration for connections to gitlab.com.
	GitlabConfig DeveloperConnectConnectionGitlabConfigPtrOutput `pulumi:"gitlabConfig"`
	// Configuration for connections to an instance of GitLab Enterprise.
	GitlabEnterpriseConfig DeveloperConnectConnectionGitlabEnterpriseConfigPtrOutput `pulumi:"gitlabEnterpriseConfig"`
	// Describes stage and necessary actions to be taken by the user to complete the installation. Used for GitHub and GitHub
	// Enterprise based connections.
	InstallationStates DeveloperConnectConnectionInstallationStateArrayOutput `pulumi:"installationStates"`
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The resource name of the connection, in the format
	// 'projects/{project}/locations/{location}/connections/{connection_id}'.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Output only. Set to true when the connection is being set up or updated in the background.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                      `pulumi:"terraformLabels"`
	Timeouts        DeveloperConnectConnectionTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. A system-assigned unique identifier for a the GitRepositoryLink.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. [Output only] Update timestamp
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewDeveloperConnectConnection registers a new resource with the given unique name, arguments, and options.
func NewDeveloperConnectConnection(ctx *pulumi.Context,
	name string, args *DeveloperConnectConnectionArgs, opts ...pulumi.ResourceOption) (*DeveloperConnectConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DeveloperConnectConnection
	err = ctx.RegisterPackageResource("google-beta:index/developerConnectConnection:DeveloperConnectConnection", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeveloperConnectConnection gets an existing DeveloperConnectConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeveloperConnectConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeveloperConnectConnectionState, opts ...pulumi.ResourceOption) (*DeveloperConnectConnection, error) {
	var resource DeveloperConnectConnection
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/developerConnectConnection:DeveloperConnectConnection", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeveloperConnectConnection resources.
type developerConnectConnectionState struct {
	// Optional. Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will
	// only manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of
	// the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and connection_id from the
	// method_signature of Create RPC
	ConnectionId *string `pulumi:"connectionId"`
	// Output only. [Output only] Create timestamp
	CreateTime *string `pulumi:"createTime"`
	// The crypto key configuration. This field is used by the Customer-managed encryption keys (CMEK) feature.
	CryptoKeyConfig *DeveloperConnectConnectionCryptoKeyConfig `pulumi:"cryptoKeyConfig"`
	// Output only. [Output only] Delete timestamp
	DeleteTime                   *string `pulumi:"deleteTime"`
	DeveloperConnectConnectionId *string `pulumi:"developerConnectConnectionId"`
	// Optional. If disabled is set to true, functionality is disabled for this connection. Repository based API methods and
	// webhooks processing for repositories in this connection will be disabled.
	Disabled             *bool             `pulumi:"disabled"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
	// delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// Configuration for connections to github.com.
	GithubConfig *DeveloperConnectConnectionGithubConfig `pulumi:"githubConfig"`
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig *DeveloperConnectConnectionGithubEnterpriseConfig `pulumi:"githubEnterpriseConfig"`
	// Configuration for connections to gitlab.com.
	GitlabConfig *DeveloperConnectConnectionGitlabConfig `pulumi:"gitlabConfig"`
	// Configuration for connections to an instance of GitLab Enterprise.
	GitlabEnterpriseConfig *DeveloperConnectConnectionGitlabEnterpriseConfig `pulumi:"gitlabEnterpriseConfig"`
	// Describes stage and necessary actions to be taken by the user to complete the installation. Used for GitHub and GitHub
	// Enterprise based connections.
	InstallationStates []DeveloperConnectConnectionInstallationState `pulumi:"installationStates"`
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122.
	Location *string `pulumi:"location"`
	// Identifier. The resource name of the connection, in the format
	// 'projects/{project}/locations/{location}/connections/{connection_id}'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Output only. Set to true when the connection is being set up or updated in the background.
	Reconciling *bool `pulumi:"reconciling"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                   `pulumi:"terraformLabels"`
	Timeouts        *DeveloperConnectConnectionTimeouts `pulumi:"timeouts"`
	// Output only. A system-assigned unique identifier for a the GitRepositoryLink.
	Uid *string `pulumi:"uid"`
	// Output only. [Output only] Update timestamp
	UpdateTime *string `pulumi:"updateTime"`
}

type DeveloperConnectConnectionState struct {
	// Optional. Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will
	// only manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of
	// the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and connection_id from the
	// method_signature of Create RPC
	ConnectionId pulumi.StringPtrInput
	// Output only. [Output only] Create timestamp
	CreateTime pulumi.StringPtrInput
	// The crypto key configuration. This field is used by the Customer-managed encryption keys (CMEK) feature.
	CryptoKeyConfig DeveloperConnectConnectionCryptoKeyConfigPtrInput
	// Output only. [Output only] Delete timestamp
	DeleteTime                   pulumi.StringPtrInput
	DeveloperConnectConnectionId pulumi.StringPtrInput
	// Optional. If disabled is set to true, functionality is disabled for this connection. Repository based API methods and
	// webhooks processing for repositories in this connection will be disabled.
	Disabled             pulumi.BoolPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
	// delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// Configuration for connections to github.com.
	GithubConfig DeveloperConnectConnectionGithubConfigPtrInput
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig DeveloperConnectConnectionGithubEnterpriseConfigPtrInput
	// Configuration for connections to gitlab.com.
	GitlabConfig DeveloperConnectConnectionGitlabConfigPtrInput
	// Configuration for connections to an instance of GitLab Enterprise.
	GitlabEnterpriseConfig DeveloperConnectConnectionGitlabEnterpriseConfigPtrInput
	// Describes stage and necessary actions to be taken by the user to complete the installation. Used for GitHub and GitHub
	// Enterprise based connections.
	InstallationStates DeveloperConnectConnectionInstallationStateArrayInput
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122.
	Location pulumi.StringPtrInput
	// Identifier. The resource name of the connection, in the format
	// 'projects/{project}/locations/{location}/connections/{connection_id}'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Output only. Set to true when the connection is being set up or updated in the background.
	Reconciling pulumi.BoolPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DeveloperConnectConnectionTimeoutsPtrInput
	// Output only. A system-assigned unique identifier for a the GitRepositoryLink.
	Uid pulumi.StringPtrInput
	// Output only. [Output only] Update timestamp
	UpdateTime pulumi.StringPtrInput
}

func (DeveloperConnectConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*developerConnectConnectionState)(nil)).Elem()
}

type developerConnectConnectionArgs struct {
	// Optional. Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will
	// only manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of
	// the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and connection_id from the
	// method_signature of Create RPC
	ConnectionId string `pulumi:"connectionId"`
	// The crypto key configuration. This field is used by the Customer-managed encryption keys (CMEK) feature.
	CryptoKeyConfig              *DeveloperConnectConnectionCryptoKeyConfig `pulumi:"cryptoKeyConfig"`
	DeveloperConnectConnectionId *string                                    `pulumi:"developerConnectConnectionId"`
	// Optional. If disabled is set to true, functionality is disabled for this connection. Repository based API methods and
	// webhooks processing for repositories in this connection will be disabled.
	Disabled *bool `pulumi:"disabled"`
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
	// delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// Configuration for connections to github.com.
	GithubConfig *DeveloperConnectConnectionGithubConfig `pulumi:"githubConfig"`
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig *DeveloperConnectConnectionGithubEnterpriseConfig `pulumi:"githubEnterpriseConfig"`
	// Configuration for connections to gitlab.com.
	GitlabConfig *DeveloperConnectConnectionGitlabConfig `pulumi:"gitlabConfig"`
	// Configuration for connections to an instance of GitLab Enterprise.
	GitlabEnterpriseConfig *DeveloperConnectConnectionGitlabEnterpriseConfig `pulumi:"gitlabEnterpriseConfig"`
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122.
	Location string                              `pulumi:"location"`
	Project  *string                             `pulumi:"project"`
	Timeouts *DeveloperConnectConnectionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DeveloperConnectConnection resource.
type DeveloperConnectConnectionArgs struct {
	// Optional. Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will
	// only manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of
	// the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and connection_id from the
	// method_signature of Create RPC
	ConnectionId pulumi.StringInput
	// The crypto key configuration. This field is used by the Customer-managed encryption keys (CMEK) feature.
	CryptoKeyConfig              DeveloperConnectConnectionCryptoKeyConfigPtrInput
	DeveloperConnectConnectionId pulumi.StringPtrInput
	// Optional. If disabled is set to true, functionality is disabled for this connection. Repository based API methods and
	// webhooks processing for repositories in this connection will be disabled.
	Disabled pulumi.BoolPtrInput
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
	// delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// Configuration for connections to github.com.
	GithubConfig DeveloperConnectConnectionGithubConfigPtrInput
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig DeveloperConnectConnectionGithubEnterpriseConfigPtrInput
	// Configuration for connections to gitlab.com.
	GitlabConfig DeveloperConnectConnectionGitlabConfigPtrInput
	// Configuration for connections to an instance of GitLab Enterprise.
	GitlabEnterpriseConfig DeveloperConnectConnectionGitlabEnterpriseConfigPtrInput
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122.
	Location pulumi.StringInput
	Project  pulumi.StringPtrInput
	Timeouts DeveloperConnectConnectionTimeoutsPtrInput
}

func (DeveloperConnectConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*developerConnectConnectionArgs)(nil)).Elem()
}

type DeveloperConnectConnectionInput interface {
	pulumi.Input

	ToDeveloperConnectConnectionOutput() DeveloperConnectConnectionOutput
	ToDeveloperConnectConnectionOutputWithContext(ctx context.Context) DeveloperConnectConnectionOutput
}

func (*DeveloperConnectConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**DeveloperConnectConnection)(nil)).Elem()
}

func (i *DeveloperConnectConnection) ToDeveloperConnectConnectionOutput() DeveloperConnectConnectionOutput {
	return i.ToDeveloperConnectConnectionOutputWithContext(context.Background())
}

func (i *DeveloperConnectConnection) ToDeveloperConnectConnectionOutputWithContext(ctx context.Context) DeveloperConnectConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeveloperConnectConnectionOutput)
}

type DeveloperConnectConnectionOutput struct{ *pulumi.OutputState }

func (DeveloperConnectConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeveloperConnectConnection)(nil)).Elem()
}

func (o DeveloperConnectConnectionOutput) ToDeveloperConnectConnectionOutput() DeveloperConnectConnectionOutput {
	return o
}

func (o DeveloperConnectConnectionOutput) ToDeveloperConnectConnectionOutputWithContext(ctx context.Context) DeveloperConnectConnectionOutput {
	return o
}

// Optional. Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will
// only manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of
// the annotations present on the resource.
func (o DeveloperConnectConnectionOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Required. Id of the requesting object If auto-generating Id server-side, remove this field and connection_id from the
// method_signature of Create RPC
func (o DeveloperConnectConnectionOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

// Output only. [Output only] Create timestamp
func (o DeveloperConnectConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The crypto key configuration. This field is used by the Customer-managed encryption keys (CMEK) feature.
func (o DeveloperConnectConnectionOutput) CryptoKeyConfig() DeveloperConnectConnectionCryptoKeyConfigPtrOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) DeveloperConnectConnectionCryptoKeyConfigPtrOutput {
		return v.CryptoKeyConfig
	}).(DeveloperConnectConnectionCryptoKeyConfigPtrOutput)
}

// Output only. [Output only] Delete timestamp
func (o DeveloperConnectConnectionOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

func (o DeveloperConnectConnectionOutput) DeveloperConnectConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringOutput { return v.DeveloperConnectConnectionId }).(pulumi.StringOutput)
}

// Optional. If disabled is set to true, functionality is disabled for this connection. Repository based API methods and
// webhooks processing for repositories in this connection will be disabled.
func (o DeveloperConnectConnectionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o DeveloperConnectConnectionOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o DeveloperConnectConnectionOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
// delete requests to ensure the client has an up-to-date value before proceeding.
func (o DeveloperConnectConnectionOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// Configuration for connections to github.com.
func (o DeveloperConnectConnectionOutput) GithubConfig() DeveloperConnectConnectionGithubConfigPtrOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) DeveloperConnectConnectionGithubConfigPtrOutput {
		return v.GithubConfig
	}).(DeveloperConnectConnectionGithubConfigPtrOutput)
}

// Configuration for connections to an instance of GitHub Enterprise.
func (o DeveloperConnectConnectionOutput) GithubEnterpriseConfig() DeveloperConnectConnectionGithubEnterpriseConfigPtrOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) DeveloperConnectConnectionGithubEnterpriseConfigPtrOutput {
		return v.GithubEnterpriseConfig
	}).(DeveloperConnectConnectionGithubEnterpriseConfigPtrOutput)
}

// Configuration for connections to gitlab.com.
func (o DeveloperConnectConnectionOutput) GitlabConfig() DeveloperConnectConnectionGitlabConfigPtrOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) DeveloperConnectConnectionGitlabConfigPtrOutput {
		return v.GitlabConfig
	}).(DeveloperConnectConnectionGitlabConfigPtrOutput)
}

// Configuration for connections to an instance of GitLab Enterprise.
func (o DeveloperConnectConnectionOutput) GitlabEnterpriseConfig() DeveloperConnectConnectionGitlabEnterpriseConfigPtrOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) DeveloperConnectConnectionGitlabEnterpriseConfigPtrOutput {
		return v.GitlabEnterpriseConfig
	}).(DeveloperConnectConnectionGitlabEnterpriseConfigPtrOutput)
}

// Describes stage and necessary actions to be taken by the user to complete the installation. Used for GitHub and GitHub
// Enterprise based connections.
func (o DeveloperConnectConnectionOutput) InstallationStates() DeveloperConnectConnectionInstallationStateArrayOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) DeveloperConnectConnectionInstallationStateArrayOutput {
		return v.InstallationStates
	}).(DeveloperConnectConnectionInstallationStateArrayOutput)
}

// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o DeveloperConnectConnectionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
// https://google.aip.dev/122.
func (o DeveloperConnectConnectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The resource name of the connection, in the format
// 'projects/{project}/locations/{location}/connections/{connection_id}'.
func (o DeveloperConnectConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DeveloperConnectConnectionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. Set to true when the connection is being set up or updated in the background.
func (o DeveloperConnectConnectionOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DeveloperConnectConnectionOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DeveloperConnectConnectionOutput) Timeouts() DeveloperConnectConnectionTimeoutsPtrOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) DeveloperConnectConnectionTimeoutsPtrOutput { return v.Timeouts }).(DeveloperConnectConnectionTimeoutsPtrOutput)
}

// Output only. A system-assigned unique identifier for a the GitRepositoryLink.
func (o DeveloperConnectConnectionOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. [Output only] Update timestamp
func (o DeveloperConnectConnectionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DeveloperConnectConnection) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeveloperConnectConnectionInput)(nil)).Elem(), &DeveloperConnectConnection{})
	pulumi.RegisterOutputType(DeveloperConnectConnectionOutput{})
}
