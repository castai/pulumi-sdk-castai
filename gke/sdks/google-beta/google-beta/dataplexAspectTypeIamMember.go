// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexAspectTypeIamMember struct {
	pulumi.CustomResourceState

	AspectTypeId                  pulumi.StringOutput                           `pulumi:"aspectTypeId"`
	Condition                     DataplexAspectTypeIamMemberConditionPtrOutput `pulumi:"condition"`
	DataplexAspectTypeIamMemberId pulumi.StringOutput                           `pulumi:"dataplexAspectTypeIamMemberId"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	Location                      pulumi.StringOutput                           `pulumi:"location"`
	Member                        pulumi.StringOutput                           `pulumi:"member"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
}

// NewDataplexAspectTypeIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataplexAspectTypeIamMember(ctx *pulumi.Context,
	name string, args *DataplexAspectTypeIamMemberArgs, opts ...pulumi.ResourceOption) (*DataplexAspectTypeIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AspectTypeId == nil {
		return nil, errors.New("invalid value for required argument 'AspectTypeId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexAspectTypeIamMember
	err = ctx.RegisterPackageResource("google-beta:index/dataplexAspectTypeIamMember:DataplexAspectTypeIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexAspectTypeIamMember gets an existing DataplexAspectTypeIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexAspectTypeIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexAspectTypeIamMemberState, opts ...pulumi.ResourceOption) (*DataplexAspectTypeIamMember, error) {
	var resource DataplexAspectTypeIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexAspectTypeIamMember:DataplexAspectTypeIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexAspectTypeIamMember resources.
type dataplexAspectTypeIamMemberState struct {
	AspectTypeId                  *string                               `pulumi:"aspectTypeId"`
	Condition                     *DataplexAspectTypeIamMemberCondition `pulumi:"condition"`
	DataplexAspectTypeIamMemberId *string                               `pulumi:"dataplexAspectTypeIamMemberId"`
	Etag                          *string                               `pulumi:"etag"`
	Location                      *string                               `pulumi:"location"`
	Member                        *string                               `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	Role                          *string                               `pulumi:"role"`
}

type DataplexAspectTypeIamMemberState struct {
	AspectTypeId                  pulumi.StringPtrInput
	Condition                     DataplexAspectTypeIamMemberConditionPtrInput
	DataplexAspectTypeIamMemberId pulumi.StringPtrInput
	Etag                          pulumi.StringPtrInput
	Location                      pulumi.StringPtrInput
	Member                        pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
}

func (DataplexAspectTypeIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAspectTypeIamMemberState)(nil)).Elem()
}

type dataplexAspectTypeIamMemberArgs struct {
	AspectTypeId                  string                                `pulumi:"aspectTypeId"`
	Condition                     *DataplexAspectTypeIamMemberCondition `pulumi:"condition"`
	DataplexAspectTypeIamMemberId *string                               `pulumi:"dataplexAspectTypeIamMemberId"`
	Location                      *string                               `pulumi:"location"`
	Member                        string                                `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	Role                          string                                `pulumi:"role"`
}

// The set of arguments for constructing a DataplexAspectTypeIamMember resource.
type DataplexAspectTypeIamMemberArgs struct {
	AspectTypeId                  pulumi.StringInput
	Condition                     DataplexAspectTypeIamMemberConditionPtrInput
	DataplexAspectTypeIamMemberId pulumi.StringPtrInput
	Location                      pulumi.StringPtrInput
	Member                        pulumi.StringInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringInput
}

func (DataplexAspectTypeIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAspectTypeIamMemberArgs)(nil)).Elem()
}

type DataplexAspectTypeIamMemberInput interface {
	pulumi.Input

	ToDataplexAspectTypeIamMemberOutput() DataplexAspectTypeIamMemberOutput
	ToDataplexAspectTypeIamMemberOutputWithContext(ctx context.Context) DataplexAspectTypeIamMemberOutput
}

func (*DataplexAspectTypeIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAspectTypeIamMember)(nil)).Elem()
}

func (i *DataplexAspectTypeIamMember) ToDataplexAspectTypeIamMemberOutput() DataplexAspectTypeIamMemberOutput {
	return i.ToDataplexAspectTypeIamMemberOutputWithContext(context.Background())
}

func (i *DataplexAspectTypeIamMember) ToDataplexAspectTypeIamMemberOutputWithContext(ctx context.Context) DataplexAspectTypeIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexAspectTypeIamMemberOutput)
}

type DataplexAspectTypeIamMemberOutput struct{ *pulumi.OutputState }

func (DataplexAspectTypeIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAspectTypeIamMember)(nil)).Elem()
}

func (o DataplexAspectTypeIamMemberOutput) ToDataplexAspectTypeIamMemberOutput() DataplexAspectTypeIamMemberOutput {
	return o
}

func (o DataplexAspectTypeIamMemberOutput) ToDataplexAspectTypeIamMemberOutputWithContext(ctx context.Context) DataplexAspectTypeIamMemberOutput {
	return o
}

func (o DataplexAspectTypeIamMemberOutput) AspectTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamMember) pulumi.StringOutput { return v.AspectTypeId }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamMemberOutput) Condition() DataplexAspectTypeIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamMember) DataplexAspectTypeIamMemberConditionPtrOutput { return v.Condition }).(DataplexAspectTypeIamMemberConditionPtrOutput)
}

func (o DataplexAspectTypeIamMemberOutput) DataplexAspectTypeIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamMember) pulumi.StringOutput { return v.DataplexAspectTypeIamMemberId }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexAspectTypeIamMemberInput)(nil)).Elem(), &DataplexAspectTypeIamMember{})
	pulumi.RegisterOutputType(DataplexAspectTypeIamMemberOutput{})
}
