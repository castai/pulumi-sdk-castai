// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlloydbCluster struct {
	pulumi.CustomResourceState

	AlloydbClusterId pulumi.StringOutput `pulumi:"alloydbClusterId"`
	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.
	// https://google.aip.dev/128 An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
	// "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
	AutomatedBackupPolicy AlloydbClusterAutomatedBackupPolicyPtrOutput `pulumi:"automatedBackupPolicy"`
	// Cluster created from backup.
	BackupSources AlloydbClusterBackupSourceArrayOutput `pulumi:"backupSources"`
	// The ID of the alloydb cluster.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The type of cluster. If not set, defaults to PRIMARY. Default value: "PRIMARY" Possible values: ["PRIMARY", "SECONDARY"]
	ClusterType pulumi.StringPtrOutput `pulumi:"clusterType"`
	// The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The
	// default policy takes one backup a day and retains backups for 14 days.
	ContinuousBackupConfig AlloydbClusterContinuousBackupConfigPtrOutput `pulumi:"continuousBackupConfig"`
	// ContinuousBackupInfo describes the continuous backup properties of a cluster.
	ContinuousBackupInfos AlloydbClusterContinuousBackupInfoArrayOutput `pulumi:"continuousBackupInfos"`
	// The database engine major version. This is an optional field and it's populated at the Cluster creation time. Note:
	// Changing this field to a higer version results in upgrading the AlloyDB cluster which is an irreversible change.
	DatabaseVersion pulumi.StringOutput `pulumi:"databaseVersion"`
	// Policy to determine if the cluster should be deleted forcefully. Deleting a cluster forcefully, deletes the cluster and
	// all its associated instances within the cluster. Deleting a Secondary cluster with a secondary instance REQUIRES setting
	// deletion_policy = "FORCE" otherwise an error is returned. This is needed as there is no support to delete just the
	// secondary instance, and the only way to delete secondary instance is to delete the associated secondary cluster
	// forcefully which also deletes the secondary instance. Possible values: DEFAULT, FORCE
	DeletionPolicy pulumi.StringPtrOutput `pulumi:"deletionPolicy"`
	// User-settable and human-readable display name for the Cluster.
	DisplayName          pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK
	// (customer-managed encryption key).
	EncryptionConfig AlloydbClusterEncryptionConfigPtrOutput `pulumi:"encryptionConfig"`
	// EncryptionInfo describes the encryption information of a cluster or a backup.
	EncryptionInfos AlloydbClusterEncryptionInfoArrayOutput `pulumi:"encryptionInfos"`
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Initial user to setup during cluster creation.
	InitialUser AlloydbClusterInitialUserPtrOutput `pulumi:"initialUser"`
	// User-defined labels for the alloydb cluster. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location where the alloydb cluster should reside.
	Location pulumi.StringOutput `pulumi:"location"`
	// MaintenanceUpdatePolicy defines the policy for system updates.
	MaintenanceUpdatePolicy AlloydbClusterMaintenanceUpdatePolicyPtrOutput `pulumi:"maintenanceUpdatePolicy"`
	// Cluster created via DMS migration.
	MigrationSources AlloydbClusterMigrationSourceArrayOutput `pulumi:"migrationSources"`
	// The name of the cluster resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Metadata related to network configuration.
	NetworkConfig AlloydbClusterNetworkConfigPtrOutput `pulumi:"networkConfig"`
	Project       pulumi.StringOutput                  `pulumi:"project"`
	// Configuration for Private Service Connect (PSC) for the cluster.
	PscConfig AlloydbClusterPscConfigPtrOutput `pulumi:"pscConfig"`
	// Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does
	// not match the user's intended state, and the service is actively updating the resource to reconcile them. This can
	// happen due to user-triggered updates or system actions like failover or maintenance.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// The source when restoring from a backup. Conflicts with 'restore_continuous_backup_source', both can't be set together.
	RestoreBackupSource AlloydbClusterRestoreBackupSourcePtrOutput `pulumi:"restoreBackupSource"`
	// The source when restoring via point in time recovery (PITR). Conflicts with 'restore_backup_source', both can't be set
	// together.
	RestoreContinuousBackupSource AlloydbClusterRestoreContinuousBackupSourcePtrOutput `pulumi:"restoreContinuousBackupSource"`
	// Configuration of the secondary cluster for Cross Region Replication. This should be set if and only if the cluster is of
	// type SECONDARY.
	SecondaryConfig AlloydbClusterSecondaryConfigPtrOutput `pulumi:"secondaryConfig"`
	// Set to true to skip awaiting on the major version upgrade of the cluster. Possible values: true, false Default value:
	// "true"
	SkipAwaitMajorVersionUpgrade pulumi.BoolPtrOutput `pulumi:"skipAwaitMajorVersionUpgrade"`
	// Output only. The current serving state of the cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// The subscrition type of cluster. Possible values: ["TRIAL", "STANDARD"]
	SubscriptionType pulumi.StringOutput `pulumi:"subscriptionType"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput          `pulumi:"terraformLabels"`
	Timeouts        AlloydbClusterTimeoutsPtrOutput `pulumi:"timeouts"`
	// Contains information and all metadata related to TRIAL clusters.
	TrialMetadatas AlloydbClusterTrialMetadataArrayOutput `pulumi:"trialMetadatas"`
	// The system-generated UID of the resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
}

// NewAlloydbCluster registers a new resource with the given unique name, arguments, and options.
func NewAlloydbCluster(ctx *pulumi.Context,
	name string, args *AlloydbClusterArgs, opts ...pulumi.ResourceOption) (*AlloydbCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource AlloydbCluster
	err = ctx.RegisterPackageResource("google-beta:index/alloydbCluster:AlloydbCluster", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlloydbCluster gets an existing AlloydbCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlloydbCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlloydbClusterState, opts ...pulumi.ResourceOption) (*AlloydbCluster, error) {
	var resource AlloydbCluster
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/alloydbCluster:AlloydbCluster", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlloydbCluster resources.
type alloydbClusterState struct {
	AlloydbClusterId *string `pulumi:"alloydbClusterId"`
	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.
	// https://google.aip.dev/128 An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
	// "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
	AutomatedBackupPolicy *AlloydbClusterAutomatedBackupPolicy `pulumi:"automatedBackupPolicy"`
	// Cluster created from backup.
	BackupSources []AlloydbClusterBackupSource `pulumi:"backupSources"`
	// The ID of the alloydb cluster.
	ClusterId *string `pulumi:"clusterId"`
	// The type of cluster. If not set, defaults to PRIMARY. Default value: "PRIMARY" Possible values: ["PRIMARY", "SECONDARY"]
	ClusterType *string `pulumi:"clusterType"`
	// The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The
	// default policy takes one backup a day and retains backups for 14 days.
	ContinuousBackupConfig *AlloydbClusterContinuousBackupConfig `pulumi:"continuousBackupConfig"`
	// ContinuousBackupInfo describes the continuous backup properties of a cluster.
	ContinuousBackupInfos []AlloydbClusterContinuousBackupInfo `pulumi:"continuousBackupInfos"`
	// The database engine major version. This is an optional field and it's populated at the Cluster creation time. Note:
	// Changing this field to a higer version results in upgrading the AlloyDB cluster which is an irreversible change.
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// Policy to determine if the cluster should be deleted forcefully. Deleting a cluster forcefully, deletes the cluster and
	// all its associated instances within the cluster. Deleting a Secondary cluster with a secondary instance REQUIRES setting
	// deletion_policy = "FORCE" otherwise an error is returned. This is needed as there is no support to delete just the
	// secondary instance, and the only way to delete secondary instance is to delete the associated secondary cluster
	// forcefully which also deletes the secondary instance. Possible values: DEFAULT, FORCE
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// User-settable and human-readable display name for the Cluster.
	DisplayName          *string           `pulumi:"displayName"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK
	// (customer-managed encryption key).
	EncryptionConfig *AlloydbClusterEncryptionConfig `pulumi:"encryptionConfig"`
	// EncryptionInfo describes the encryption information of a cluster or a backup.
	EncryptionInfos []AlloydbClusterEncryptionInfo `pulumi:"encryptionInfos"`
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag *string `pulumi:"etag"`
	// Initial user to setup during cluster creation.
	InitialUser *AlloydbClusterInitialUser `pulumi:"initialUser"`
	// User-defined labels for the alloydb cluster. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the alloydb cluster should reside.
	Location *string `pulumi:"location"`
	// MaintenanceUpdatePolicy defines the policy for system updates.
	MaintenanceUpdatePolicy *AlloydbClusterMaintenanceUpdatePolicy `pulumi:"maintenanceUpdatePolicy"`
	// Cluster created via DMS migration.
	MigrationSources []AlloydbClusterMigrationSource `pulumi:"migrationSources"`
	// The name of the cluster resource.
	Name *string `pulumi:"name"`
	// Metadata related to network configuration.
	NetworkConfig *AlloydbClusterNetworkConfig `pulumi:"networkConfig"`
	Project       *string                      `pulumi:"project"`
	// Configuration for Private Service Connect (PSC) for the cluster.
	PscConfig *AlloydbClusterPscConfig `pulumi:"pscConfig"`
	// Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does
	// not match the user's intended state, and the service is actively updating the resource to reconcile them. This can
	// happen due to user-triggered updates or system actions like failover or maintenance.
	Reconciling *bool `pulumi:"reconciling"`
	// The source when restoring from a backup. Conflicts with 'restore_continuous_backup_source', both can't be set together.
	RestoreBackupSource *AlloydbClusterRestoreBackupSource `pulumi:"restoreBackupSource"`
	// The source when restoring via point in time recovery (PITR). Conflicts with 'restore_backup_source', both can't be set
	// together.
	RestoreContinuousBackupSource *AlloydbClusterRestoreContinuousBackupSource `pulumi:"restoreContinuousBackupSource"`
	// Configuration of the secondary cluster for Cross Region Replication. This should be set if and only if the cluster is of
	// type SECONDARY.
	SecondaryConfig *AlloydbClusterSecondaryConfig `pulumi:"secondaryConfig"`
	// Set to true to skip awaiting on the major version upgrade of the cluster. Possible values: true, false Default value:
	// "true"
	SkipAwaitMajorVersionUpgrade *bool `pulumi:"skipAwaitMajorVersionUpgrade"`
	// Output only. The current serving state of the cluster.
	State *string `pulumi:"state"`
	// The subscrition type of cluster. Possible values: ["TRIAL", "STANDARD"]
	SubscriptionType *string `pulumi:"subscriptionType"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string       `pulumi:"terraformLabels"`
	Timeouts        *AlloydbClusterTimeouts `pulumi:"timeouts"`
	// Contains information and all metadata related to TRIAL clusters.
	TrialMetadatas []AlloydbClusterTrialMetadata `pulumi:"trialMetadatas"`
	// The system-generated UID of the resource.
	Uid *string `pulumi:"uid"`
}

type AlloydbClusterState struct {
	AlloydbClusterId pulumi.StringPtrInput
	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.
	// https://google.aip.dev/128 An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
	// "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
	AutomatedBackupPolicy AlloydbClusterAutomatedBackupPolicyPtrInput
	// Cluster created from backup.
	BackupSources AlloydbClusterBackupSourceArrayInput
	// The ID of the alloydb cluster.
	ClusterId pulumi.StringPtrInput
	// The type of cluster. If not set, defaults to PRIMARY. Default value: "PRIMARY" Possible values: ["PRIMARY", "SECONDARY"]
	ClusterType pulumi.StringPtrInput
	// The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The
	// default policy takes one backup a day and retains backups for 14 days.
	ContinuousBackupConfig AlloydbClusterContinuousBackupConfigPtrInput
	// ContinuousBackupInfo describes the continuous backup properties of a cluster.
	ContinuousBackupInfos AlloydbClusterContinuousBackupInfoArrayInput
	// The database engine major version. This is an optional field and it's populated at the Cluster creation time. Note:
	// Changing this field to a higer version results in upgrading the AlloyDB cluster which is an irreversible change.
	DatabaseVersion pulumi.StringPtrInput
	// Policy to determine if the cluster should be deleted forcefully. Deleting a cluster forcefully, deletes the cluster and
	// all its associated instances within the cluster. Deleting a Secondary cluster with a secondary instance REQUIRES setting
	// deletion_policy = "FORCE" otherwise an error is returned. This is needed as there is no support to delete just the
	// secondary instance, and the only way to delete secondary instance is to delete the associated secondary cluster
	// forcefully which also deletes the secondary instance. Possible values: DEFAULT, FORCE
	DeletionPolicy pulumi.StringPtrInput
	// User-settable and human-readable display name for the Cluster.
	DisplayName          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK
	// (customer-managed encryption key).
	EncryptionConfig AlloydbClusterEncryptionConfigPtrInput
	// EncryptionInfo describes the encryption information of a cluster or a backup.
	EncryptionInfos AlloydbClusterEncryptionInfoArrayInput
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag pulumi.StringPtrInput
	// Initial user to setup during cluster creation.
	InitialUser AlloydbClusterInitialUserPtrInput
	// User-defined labels for the alloydb cluster. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location where the alloydb cluster should reside.
	Location pulumi.StringPtrInput
	// MaintenanceUpdatePolicy defines the policy for system updates.
	MaintenanceUpdatePolicy AlloydbClusterMaintenanceUpdatePolicyPtrInput
	// Cluster created via DMS migration.
	MigrationSources AlloydbClusterMigrationSourceArrayInput
	// The name of the cluster resource.
	Name pulumi.StringPtrInput
	// Metadata related to network configuration.
	NetworkConfig AlloydbClusterNetworkConfigPtrInput
	Project       pulumi.StringPtrInput
	// Configuration for Private Service Connect (PSC) for the cluster.
	PscConfig AlloydbClusterPscConfigPtrInput
	// Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does
	// not match the user's intended state, and the service is actively updating the resource to reconcile them. This can
	// happen due to user-triggered updates or system actions like failover or maintenance.
	Reconciling pulumi.BoolPtrInput
	// The source when restoring from a backup. Conflicts with 'restore_continuous_backup_source', both can't be set together.
	RestoreBackupSource AlloydbClusterRestoreBackupSourcePtrInput
	// The source when restoring via point in time recovery (PITR). Conflicts with 'restore_backup_source', both can't be set
	// together.
	RestoreContinuousBackupSource AlloydbClusterRestoreContinuousBackupSourcePtrInput
	// Configuration of the secondary cluster for Cross Region Replication. This should be set if and only if the cluster is of
	// type SECONDARY.
	SecondaryConfig AlloydbClusterSecondaryConfigPtrInput
	// Set to true to skip awaiting on the major version upgrade of the cluster. Possible values: true, false Default value:
	// "true"
	SkipAwaitMajorVersionUpgrade pulumi.BoolPtrInput
	// Output only. The current serving state of the cluster.
	State pulumi.StringPtrInput
	// The subscrition type of cluster. Possible values: ["TRIAL", "STANDARD"]
	SubscriptionType pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        AlloydbClusterTimeoutsPtrInput
	// Contains information and all metadata related to TRIAL clusters.
	TrialMetadatas AlloydbClusterTrialMetadataArrayInput
	// The system-generated UID of the resource.
	Uid pulumi.StringPtrInput
}

func (AlloydbClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*alloydbClusterState)(nil)).Elem()
}

type alloydbClusterArgs struct {
	AlloydbClusterId *string `pulumi:"alloydbClusterId"`
	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.
	// https://google.aip.dev/128 An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
	// "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
	AutomatedBackupPolicy *AlloydbClusterAutomatedBackupPolicy `pulumi:"automatedBackupPolicy"`
	// The ID of the alloydb cluster.
	ClusterId string `pulumi:"clusterId"`
	// The type of cluster. If not set, defaults to PRIMARY. Default value: "PRIMARY" Possible values: ["PRIMARY", "SECONDARY"]
	ClusterType *string `pulumi:"clusterType"`
	// The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The
	// default policy takes one backup a day and retains backups for 14 days.
	ContinuousBackupConfig *AlloydbClusterContinuousBackupConfig `pulumi:"continuousBackupConfig"`
	// The database engine major version. This is an optional field and it's populated at the Cluster creation time. Note:
	// Changing this field to a higer version results in upgrading the AlloyDB cluster which is an irreversible change.
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// Policy to determine if the cluster should be deleted forcefully. Deleting a cluster forcefully, deletes the cluster and
	// all its associated instances within the cluster. Deleting a Secondary cluster with a secondary instance REQUIRES setting
	// deletion_policy = "FORCE" otherwise an error is returned. This is needed as there is no support to delete just the
	// secondary instance, and the only way to delete secondary instance is to delete the associated secondary cluster
	// forcefully which also deletes the secondary instance. Possible values: DEFAULT, FORCE
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// User-settable and human-readable display name for the Cluster.
	DisplayName *string `pulumi:"displayName"`
	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK
	// (customer-managed encryption key).
	EncryptionConfig *AlloydbClusterEncryptionConfig `pulumi:"encryptionConfig"`
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag *string `pulumi:"etag"`
	// Initial user to setup during cluster creation.
	InitialUser *AlloydbClusterInitialUser `pulumi:"initialUser"`
	// User-defined labels for the alloydb cluster. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the alloydb cluster should reside.
	Location string `pulumi:"location"`
	// MaintenanceUpdatePolicy defines the policy for system updates.
	MaintenanceUpdatePolicy *AlloydbClusterMaintenanceUpdatePolicy `pulumi:"maintenanceUpdatePolicy"`
	// Metadata related to network configuration.
	NetworkConfig *AlloydbClusterNetworkConfig `pulumi:"networkConfig"`
	Project       *string                      `pulumi:"project"`
	// Configuration for Private Service Connect (PSC) for the cluster.
	PscConfig *AlloydbClusterPscConfig `pulumi:"pscConfig"`
	// The source when restoring from a backup. Conflicts with 'restore_continuous_backup_source', both can't be set together.
	RestoreBackupSource *AlloydbClusterRestoreBackupSource `pulumi:"restoreBackupSource"`
	// The source when restoring via point in time recovery (PITR). Conflicts with 'restore_backup_source', both can't be set
	// together.
	RestoreContinuousBackupSource *AlloydbClusterRestoreContinuousBackupSource `pulumi:"restoreContinuousBackupSource"`
	// Configuration of the secondary cluster for Cross Region Replication. This should be set if and only if the cluster is of
	// type SECONDARY.
	SecondaryConfig *AlloydbClusterSecondaryConfig `pulumi:"secondaryConfig"`
	// Set to true to skip awaiting on the major version upgrade of the cluster. Possible values: true, false Default value:
	// "true"
	SkipAwaitMajorVersionUpgrade *bool `pulumi:"skipAwaitMajorVersionUpgrade"`
	// The subscrition type of cluster. Possible values: ["TRIAL", "STANDARD"]
	SubscriptionType *string                 `pulumi:"subscriptionType"`
	Timeouts         *AlloydbClusterTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a AlloydbCluster resource.
type AlloydbClusterArgs struct {
	AlloydbClusterId pulumi.StringPtrInput
	// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.
	// https://google.aip.dev/128 An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
	// "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the annotations present in your
	// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
	AutomatedBackupPolicy AlloydbClusterAutomatedBackupPolicyPtrInput
	// The ID of the alloydb cluster.
	ClusterId pulumi.StringInput
	// The type of cluster. If not set, defaults to PRIMARY. Default value: "PRIMARY" Possible values: ["PRIMARY", "SECONDARY"]
	ClusterType pulumi.StringPtrInput
	// The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The
	// default policy takes one backup a day and retains backups for 14 days.
	ContinuousBackupConfig AlloydbClusterContinuousBackupConfigPtrInput
	// The database engine major version. This is an optional field and it's populated at the Cluster creation time. Note:
	// Changing this field to a higer version results in upgrading the AlloyDB cluster which is an irreversible change.
	DatabaseVersion pulumi.StringPtrInput
	// Policy to determine if the cluster should be deleted forcefully. Deleting a cluster forcefully, deletes the cluster and
	// all its associated instances within the cluster. Deleting a Secondary cluster with a secondary instance REQUIRES setting
	// deletion_policy = "FORCE" otherwise an error is returned. This is needed as there is no support to delete just the
	// secondary instance, and the only way to delete secondary instance is to delete the associated secondary cluster
	// forcefully which also deletes the secondary instance. Possible values: DEFAULT, FORCE
	DeletionPolicy pulumi.StringPtrInput
	// User-settable and human-readable display name for the Cluster.
	DisplayName pulumi.StringPtrInput
	// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK
	// (customer-managed encryption key).
	EncryptionConfig AlloydbClusterEncryptionConfigPtrInput
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag pulumi.StringPtrInput
	// Initial user to setup during cluster creation.
	InitialUser AlloydbClusterInitialUserPtrInput
	// User-defined labels for the alloydb cluster. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location where the alloydb cluster should reside.
	Location pulumi.StringInput
	// MaintenanceUpdatePolicy defines the policy for system updates.
	MaintenanceUpdatePolicy AlloydbClusterMaintenanceUpdatePolicyPtrInput
	// Metadata related to network configuration.
	NetworkConfig AlloydbClusterNetworkConfigPtrInput
	Project       pulumi.StringPtrInput
	// Configuration for Private Service Connect (PSC) for the cluster.
	PscConfig AlloydbClusterPscConfigPtrInput
	// The source when restoring from a backup. Conflicts with 'restore_continuous_backup_source', both can't be set together.
	RestoreBackupSource AlloydbClusterRestoreBackupSourcePtrInput
	// The source when restoring via point in time recovery (PITR). Conflicts with 'restore_backup_source', both can't be set
	// together.
	RestoreContinuousBackupSource AlloydbClusterRestoreContinuousBackupSourcePtrInput
	// Configuration of the secondary cluster for Cross Region Replication. This should be set if and only if the cluster is of
	// type SECONDARY.
	SecondaryConfig AlloydbClusterSecondaryConfigPtrInput
	// Set to true to skip awaiting on the major version upgrade of the cluster. Possible values: true, false Default value:
	// "true"
	SkipAwaitMajorVersionUpgrade pulumi.BoolPtrInput
	// The subscrition type of cluster. Possible values: ["TRIAL", "STANDARD"]
	SubscriptionType pulumi.StringPtrInput
	Timeouts         AlloydbClusterTimeoutsPtrInput
}

func (AlloydbClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alloydbClusterArgs)(nil)).Elem()
}

type AlloydbClusterInput interface {
	pulumi.Input

	ToAlloydbClusterOutput() AlloydbClusterOutput
	ToAlloydbClusterOutputWithContext(ctx context.Context) AlloydbClusterOutput
}

func (*AlloydbCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**AlloydbCluster)(nil)).Elem()
}

func (i *AlloydbCluster) ToAlloydbClusterOutput() AlloydbClusterOutput {
	return i.ToAlloydbClusterOutputWithContext(context.Background())
}

func (i *AlloydbCluster) ToAlloydbClusterOutputWithContext(ctx context.Context) AlloydbClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlloydbClusterOutput)
}

type AlloydbClusterOutput struct{ *pulumi.OutputState }

func (AlloydbClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlloydbCluster)(nil)).Elem()
}

func (o AlloydbClusterOutput) ToAlloydbClusterOutput() AlloydbClusterOutput {
	return o
}

func (o AlloydbClusterOutput) ToAlloydbClusterOutputWithContext(ctx context.Context) AlloydbClusterOutput {
	return o
}

func (o AlloydbClusterOutput) AlloydbClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringOutput { return v.AlloydbClusterId }).(pulumi.StringOutput)
}

// Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.
// https://google.aip.dev/128 An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass":
// "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the annotations present in your
// configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
func (o AlloydbClusterOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default.
func (o AlloydbClusterOutput) AutomatedBackupPolicy() AlloydbClusterAutomatedBackupPolicyPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterAutomatedBackupPolicyPtrOutput { return v.AutomatedBackupPolicy }).(AlloydbClusterAutomatedBackupPolicyPtrOutput)
}

// Cluster created from backup.
func (o AlloydbClusterOutput) BackupSources() AlloydbClusterBackupSourceArrayOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterBackupSourceArrayOutput { return v.BackupSources }).(AlloydbClusterBackupSourceArrayOutput)
}

// The ID of the alloydb cluster.
func (o AlloydbClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The type of cluster. If not set, defaults to PRIMARY. Default value: "PRIMARY" Possible values: ["PRIMARY", "SECONDARY"]
func (o AlloydbClusterOutput) ClusterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringPtrOutput { return v.ClusterType }).(pulumi.StringPtrOutput)
}

// The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The
// default policy takes one backup a day and retains backups for 14 days.
func (o AlloydbClusterOutput) ContinuousBackupConfig() AlloydbClusterContinuousBackupConfigPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterContinuousBackupConfigPtrOutput { return v.ContinuousBackupConfig }).(AlloydbClusterContinuousBackupConfigPtrOutput)
}

// ContinuousBackupInfo describes the continuous backup properties of a cluster.
func (o AlloydbClusterOutput) ContinuousBackupInfos() AlloydbClusterContinuousBackupInfoArrayOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterContinuousBackupInfoArrayOutput { return v.ContinuousBackupInfos }).(AlloydbClusterContinuousBackupInfoArrayOutput)
}

// The database engine major version. This is an optional field and it's populated at the Cluster creation time. Note:
// Changing this field to a higer version results in upgrading the AlloyDB cluster which is an irreversible change.
func (o AlloydbClusterOutput) DatabaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringOutput { return v.DatabaseVersion }).(pulumi.StringOutput)
}

// Policy to determine if the cluster should be deleted forcefully. Deleting a cluster forcefully, deletes the cluster and
// all its associated instances within the cluster. Deleting a Secondary cluster with a secondary instance REQUIRES setting
// deletion_policy = "FORCE" otherwise an error is returned. This is needed as there is no support to delete just the
// secondary instance, and the only way to delete secondary instance is to delete the associated secondary cluster
// forcefully which also deletes the secondary instance. Possible values: DEFAULT, FORCE
func (o AlloydbClusterOutput) DeletionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringPtrOutput { return v.DeletionPolicy }).(pulumi.StringPtrOutput)
}

// User-settable and human-readable display name for the Cluster.
func (o AlloydbClusterOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o AlloydbClusterOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o AlloydbClusterOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK
// (customer-managed encryption key).
func (o AlloydbClusterOutput) EncryptionConfig() AlloydbClusterEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterEncryptionConfigPtrOutput { return v.EncryptionConfig }).(AlloydbClusterEncryptionConfigPtrOutput)
}

// EncryptionInfo describes the encryption information of a cluster or a backup.
func (o AlloydbClusterOutput) EncryptionInfos() AlloydbClusterEncryptionInfoArrayOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterEncryptionInfoArrayOutput { return v.EncryptionInfos }).(AlloydbClusterEncryptionInfoArrayOutput)
}

// For Resource freshness validation (https://google.aip.dev/154)
func (o AlloydbClusterOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringPtrOutput { return v.Etag }).(pulumi.StringPtrOutput)
}

// Initial user to setup during cluster creation.
func (o AlloydbClusterOutput) InitialUser() AlloydbClusterInitialUserPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterInitialUserPtrOutput { return v.InitialUser }).(AlloydbClusterInitialUserPtrOutput)
}

// User-defined labels for the alloydb cluster. **Note**: This field is non-authoritative, and will only manage the labels
// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o AlloydbClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location where the alloydb cluster should reside.
func (o AlloydbClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// MaintenanceUpdatePolicy defines the policy for system updates.
func (o AlloydbClusterOutput) MaintenanceUpdatePolicy() AlloydbClusterMaintenanceUpdatePolicyPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterMaintenanceUpdatePolicyPtrOutput {
		return v.MaintenanceUpdatePolicy
	}).(AlloydbClusterMaintenanceUpdatePolicyPtrOutput)
}

// Cluster created via DMS migration.
func (o AlloydbClusterOutput) MigrationSources() AlloydbClusterMigrationSourceArrayOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterMigrationSourceArrayOutput { return v.MigrationSources }).(AlloydbClusterMigrationSourceArrayOutput)
}

// The name of the cluster resource.
func (o AlloydbClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Metadata related to network configuration.
func (o AlloydbClusterOutput) NetworkConfig() AlloydbClusterNetworkConfigPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterNetworkConfigPtrOutput { return v.NetworkConfig }).(AlloydbClusterNetworkConfigPtrOutput)
}

func (o AlloydbClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Configuration for Private Service Connect (PSC) for the cluster.
func (o AlloydbClusterOutput) PscConfig() AlloydbClusterPscConfigPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterPscConfigPtrOutput { return v.PscConfig }).(AlloydbClusterPscConfigPtrOutput)
}

// Output only. Reconciling (https://google.aip.dev/128#reconciliation). Set to true if the current state of Cluster does
// not match the user's intended state, and the service is actively updating the resource to reconcile them. This can
// happen due to user-triggered updates or system actions like failover or maintenance.
func (o AlloydbClusterOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// The source when restoring from a backup. Conflicts with 'restore_continuous_backup_source', both can't be set together.
func (o AlloydbClusterOutput) RestoreBackupSource() AlloydbClusterRestoreBackupSourcePtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterRestoreBackupSourcePtrOutput { return v.RestoreBackupSource }).(AlloydbClusterRestoreBackupSourcePtrOutput)
}

// The source when restoring via point in time recovery (PITR). Conflicts with 'restore_backup_source', both can't be set
// together.
func (o AlloydbClusterOutput) RestoreContinuousBackupSource() AlloydbClusterRestoreContinuousBackupSourcePtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterRestoreContinuousBackupSourcePtrOutput {
		return v.RestoreContinuousBackupSource
	}).(AlloydbClusterRestoreContinuousBackupSourcePtrOutput)
}

// Configuration of the secondary cluster for Cross Region Replication. This should be set if and only if the cluster is of
// type SECONDARY.
func (o AlloydbClusterOutput) SecondaryConfig() AlloydbClusterSecondaryConfigPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterSecondaryConfigPtrOutput { return v.SecondaryConfig }).(AlloydbClusterSecondaryConfigPtrOutput)
}

// Set to true to skip awaiting on the major version upgrade of the cluster. Possible values: true, false Default value:
// "true"
func (o AlloydbClusterOutput) SkipAwaitMajorVersionUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.BoolPtrOutput { return v.SkipAwaitMajorVersionUpgrade }).(pulumi.BoolPtrOutput)
}

// Output only. The current serving state of the cluster.
func (o AlloydbClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The subscrition type of cluster. Possible values: ["TRIAL", "STANDARD"]
func (o AlloydbClusterOutput) SubscriptionType() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringOutput { return v.SubscriptionType }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o AlloydbClusterOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o AlloydbClusterOutput) Timeouts() AlloydbClusterTimeoutsPtrOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterTimeoutsPtrOutput { return v.Timeouts }).(AlloydbClusterTimeoutsPtrOutput)
}

// Contains information and all metadata related to TRIAL clusters.
func (o AlloydbClusterOutput) TrialMetadatas() AlloydbClusterTrialMetadataArrayOutput {
	return o.ApplyT(func(v *AlloydbCluster) AlloydbClusterTrialMetadataArrayOutput { return v.TrialMetadatas }).(AlloydbClusterTrialMetadataArrayOutput)
}

// The system-generated UID of the resource.
func (o AlloydbClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *AlloydbCluster) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlloydbClusterInput)(nil)).Elem(), &AlloydbCluster{})
	pulumi.RegisterOutputType(AlloydbClusterOutput{})
}
