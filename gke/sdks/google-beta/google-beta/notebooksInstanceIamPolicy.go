// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NotebooksInstanceIamPolicy struct {
	pulumi.CustomResourceState

	Etag                         pulumi.StringOutput `pulumi:"etag"`
	InstanceName                 pulumi.StringOutput `pulumi:"instanceName"`
	Location                     pulumi.StringOutput `pulumi:"location"`
	NotebooksInstanceIamPolicyId pulumi.StringOutput `pulumi:"notebooksInstanceIamPolicyId"`
	PolicyData                   pulumi.StringOutput `pulumi:"policyData"`
	Project                      pulumi.StringOutput `pulumi:"project"`
}

// NewNotebooksInstanceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewNotebooksInstanceIamPolicy(ctx *pulumi.Context,
	name string, args *NotebooksInstanceIamPolicyArgs, opts ...pulumi.ResourceOption) (*NotebooksInstanceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NotebooksInstanceIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/notebooksInstanceIamPolicy:NotebooksInstanceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotebooksInstanceIamPolicy gets an existing NotebooksInstanceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebooksInstanceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotebooksInstanceIamPolicyState, opts ...pulumi.ResourceOption) (*NotebooksInstanceIamPolicy, error) {
	var resource NotebooksInstanceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/notebooksInstanceIamPolicy:NotebooksInstanceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotebooksInstanceIamPolicy resources.
type notebooksInstanceIamPolicyState struct {
	Etag                         *string `pulumi:"etag"`
	InstanceName                 *string `pulumi:"instanceName"`
	Location                     *string `pulumi:"location"`
	NotebooksInstanceIamPolicyId *string `pulumi:"notebooksInstanceIamPolicyId"`
	PolicyData                   *string `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
}

type NotebooksInstanceIamPolicyState struct {
	Etag                         pulumi.StringPtrInput
	InstanceName                 pulumi.StringPtrInput
	Location                     pulumi.StringPtrInput
	NotebooksInstanceIamPolicyId pulumi.StringPtrInput
	PolicyData                   pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
}

func (NotebooksInstanceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*notebooksInstanceIamPolicyState)(nil)).Elem()
}

type notebooksInstanceIamPolicyArgs struct {
	InstanceName                 string  `pulumi:"instanceName"`
	Location                     *string `pulumi:"location"`
	NotebooksInstanceIamPolicyId *string `pulumi:"notebooksInstanceIamPolicyId"`
	PolicyData                   string  `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
}

// The set of arguments for constructing a NotebooksInstanceIamPolicy resource.
type NotebooksInstanceIamPolicyArgs struct {
	InstanceName                 pulumi.StringInput
	Location                     pulumi.StringPtrInput
	NotebooksInstanceIamPolicyId pulumi.StringPtrInput
	PolicyData                   pulumi.StringInput
	Project                      pulumi.StringPtrInput
}

func (NotebooksInstanceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notebooksInstanceIamPolicyArgs)(nil)).Elem()
}

type NotebooksInstanceIamPolicyInput interface {
	pulumi.Input

	ToNotebooksInstanceIamPolicyOutput() NotebooksInstanceIamPolicyOutput
	ToNotebooksInstanceIamPolicyOutputWithContext(ctx context.Context) NotebooksInstanceIamPolicyOutput
}

func (*NotebooksInstanceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebooksInstanceIamPolicy)(nil)).Elem()
}

func (i *NotebooksInstanceIamPolicy) ToNotebooksInstanceIamPolicyOutput() NotebooksInstanceIamPolicyOutput {
	return i.ToNotebooksInstanceIamPolicyOutputWithContext(context.Background())
}

func (i *NotebooksInstanceIamPolicy) ToNotebooksInstanceIamPolicyOutputWithContext(ctx context.Context) NotebooksInstanceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebooksInstanceIamPolicyOutput)
}

type NotebooksInstanceIamPolicyOutput struct{ *pulumi.OutputState }

func (NotebooksInstanceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebooksInstanceIamPolicy)(nil)).Elem()
}

func (o NotebooksInstanceIamPolicyOutput) ToNotebooksInstanceIamPolicyOutput() NotebooksInstanceIamPolicyOutput {
	return o
}

func (o NotebooksInstanceIamPolicyOutput) ToNotebooksInstanceIamPolicyOutputWithContext(ctx context.Context) NotebooksInstanceIamPolicyOutput {
	return o
}

func (o NotebooksInstanceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksInstanceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o NotebooksInstanceIamPolicyOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksInstanceIamPolicy) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

func (o NotebooksInstanceIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksInstanceIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o NotebooksInstanceIamPolicyOutput) NotebooksInstanceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksInstanceIamPolicy) pulumi.StringOutput { return v.NotebooksInstanceIamPolicyId }).(pulumi.StringOutput)
}

func (o NotebooksInstanceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksInstanceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o NotebooksInstanceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksInstanceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NotebooksInstanceIamPolicyInput)(nil)).Elem(), &NotebooksInstanceIamPolicy{})
	pulumi.RegisterOutputType(NotebooksInstanceIamPolicyOutput{})
}
