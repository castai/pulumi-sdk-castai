// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceDirectoryServiceIamPolicy struct {
	pulumi.CustomResourceState

	Etag                               pulumi.StringOutput `pulumi:"etag"`
	Name                               pulumi.StringOutput `pulumi:"name"`
	PolicyData                         pulumi.StringOutput `pulumi:"policyData"`
	ServiceDirectoryServiceIamPolicyId pulumi.StringOutput `pulumi:"serviceDirectoryServiceIamPolicyId"`
}

// NewServiceDirectoryServiceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewServiceDirectoryServiceIamPolicy(ctx *pulumi.Context,
	name string, args *ServiceDirectoryServiceIamPolicyArgs, opts ...pulumi.ResourceOption) (*ServiceDirectoryServiceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceDirectoryServiceIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/serviceDirectoryServiceIamPolicy:ServiceDirectoryServiceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceDirectoryServiceIamPolicy gets an existing ServiceDirectoryServiceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceDirectoryServiceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceDirectoryServiceIamPolicyState, opts ...pulumi.ResourceOption) (*ServiceDirectoryServiceIamPolicy, error) {
	var resource ServiceDirectoryServiceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/serviceDirectoryServiceIamPolicy:ServiceDirectoryServiceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceDirectoryServiceIamPolicy resources.
type serviceDirectoryServiceIamPolicyState struct {
	Etag                               *string `pulumi:"etag"`
	Name                               *string `pulumi:"name"`
	PolicyData                         *string `pulumi:"policyData"`
	ServiceDirectoryServiceIamPolicyId *string `pulumi:"serviceDirectoryServiceIamPolicyId"`
}

type ServiceDirectoryServiceIamPolicyState struct {
	Etag                               pulumi.StringPtrInput
	Name                               pulumi.StringPtrInput
	PolicyData                         pulumi.StringPtrInput
	ServiceDirectoryServiceIamPolicyId pulumi.StringPtrInput
}

func (ServiceDirectoryServiceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryServiceIamPolicyState)(nil)).Elem()
}

type serviceDirectoryServiceIamPolicyArgs struct {
	Name                               *string `pulumi:"name"`
	PolicyData                         string  `pulumi:"policyData"`
	ServiceDirectoryServiceIamPolicyId *string `pulumi:"serviceDirectoryServiceIamPolicyId"`
}

// The set of arguments for constructing a ServiceDirectoryServiceIamPolicy resource.
type ServiceDirectoryServiceIamPolicyArgs struct {
	Name                               pulumi.StringPtrInput
	PolicyData                         pulumi.StringInput
	ServiceDirectoryServiceIamPolicyId pulumi.StringPtrInput
}

func (ServiceDirectoryServiceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryServiceIamPolicyArgs)(nil)).Elem()
}

type ServiceDirectoryServiceIamPolicyInput interface {
	pulumi.Input

	ToServiceDirectoryServiceIamPolicyOutput() ServiceDirectoryServiceIamPolicyOutput
	ToServiceDirectoryServiceIamPolicyOutputWithContext(ctx context.Context) ServiceDirectoryServiceIamPolicyOutput
}

func (*ServiceDirectoryServiceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryServiceIamPolicy)(nil)).Elem()
}

func (i *ServiceDirectoryServiceIamPolicy) ToServiceDirectoryServiceIamPolicyOutput() ServiceDirectoryServiceIamPolicyOutput {
	return i.ToServiceDirectoryServiceIamPolicyOutputWithContext(context.Background())
}

func (i *ServiceDirectoryServiceIamPolicy) ToServiceDirectoryServiceIamPolicyOutputWithContext(ctx context.Context) ServiceDirectoryServiceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDirectoryServiceIamPolicyOutput)
}

type ServiceDirectoryServiceIamPolicyOutput struct{ *pulumi.OutputState }

func (ServiceDirectoryServiceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryServiceIamPolicy)(nil)).Elem()
}

func (o ServiceDirectoryServiceIamPolicyOutput) ToServiceDirectoryServiceIamPolicyOutput() ServiceDirectoryServiceIamPolicyOutput {
	return o
}

func (o ServiceDirectoryServiceIamPolicyOutput) ToServiceDirectoryServiceIamPolicyOutputWithContext(ctx context.Context) ServiceDirectoryServiceIamPolicyOutput {
	return o
}

func (o ServiceDirectoryServiceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamPolicyOutput) ServiceDirectoryServiceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamPolicy) pulumi.StringOutput {
		return v.ServiceDirectoryServiceIamPolicyId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDirectoryServiceIamPolicyInput)(nil)).Elem(), &ServiceDirectoryServiceIamPolicy{})
	pulumi.RegisterOutputType(ServiceDirectoryServiceIamPolicyOutput{})
}
