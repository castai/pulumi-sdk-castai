// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FilestoreSnapshot struct {
	pulumi.CustomResourceState

	// The time when the snapshot was created in RFC3339 text format.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description         pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels     pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	FilestoreSnapshotId pulumi.StringOutput    `pulumi:"filestoreSnapshotId"`
	// The amount of bytes needed to allocate a full copy of the snapshot content.
	FilesystemUsedBytes pulumi.StringOutput `pulumi:"filesystemUsedBytes"`
	// The resource name of the filestore instance.
	Instance pulumi.StringOutput `pulumi:"instance"`
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the snapshot. The name must be unique within the specified instance. The name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The snapshot state.
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput             `pulumi:"terraformLabels"`
	Timeouts        FilestoreSnapshotTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewFilestoreSnapshot registers a new resource with the given unique name, arguments, and options.
func NewFilestoreSnapshot(ctx *pulumi.Context,
	name string, args *FilestoreSnapshotArgs, opts ...pulumi.ResourceOption) (*FilestoreSnapshot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Instance == nil {
		return nil, errors.New("invalid value for required argument 'Instance'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource FilestoreSnapshot
	err = ctx.RegisterPackageResource("google-beta:index/filestoreSnapshot:FilestoreSnapshot", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFilestoreSnapshot gets an existing FilestoreSnapshot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFilestoreSnapshot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FilestoreSnapshotState, opts ...pulumi.ResourceOption) (*FilestoreSnapshot, error) {
	var resource FilestoreSnapshot
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/filestoreSnapshot:FilestoreSnapshot", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FilestoreSnapshot resources.
type filestoreSnapshotState struct {
	// The time when the snapshot was created in RFC3339 text format.
	CreateTime *string `pulumi:"createTime"`
	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description         *string           `pulumi:"description"`
	EffectiveLabels     map[string]string `pulumi:"effectiveLabels"`
	FilestoreSnapshotId *string           `pulumi:"filestoreSnapshotId"`
	// The amount of bytes needed to allocate a full copy of the snapshot content.
	FilesystemUsedBytes *string `pulumi:"filesystemUsedBytes"`
	// The resource name of the filestore instance.
	Instance *string `pulumi:"instance"`
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location *string `pulumi:"location"`
	// The resource name of the snapshot. The name must be unique within the specified instance. The name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The snapshot state.
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string          `pulumi:"terraformLabels"`
	Timeouts        *FilestoreSnapshotTimeouts `pulumi:"timeouts"`
}

type FilestoreSnapshotState struct {
	// The time when the snapshot was created in RFC3339 text format.
	CreateTime pulumi.StringPtrInput
	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description         pulumi.StringPtrInput
	EffectiveLabels     pulumi.StringMapInput
	FilestoreSnapshotId pulumi.StringPtrInput
	// The amount of bytes needed to allocate a full copy of the snapshot content.
	FilesystemUsedBytes pulumi.StringPtrInput
	// The resource name of the filestore instance.
	Instance pulumi.StringPtrInput
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location pulumi.StringPtrInput
	// The resource name of the snapshot. The name must be unique within the specified instance. The name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The snapshot state.
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        FilestoreSnapshotTimeoutsPtrInput
}

func (FilestoreSnapshotState) ElementType() reflect.Type {
	return reflect.TypeOf((*filestoreSnapshotState)(nil)).Elem()
}

type filestoreSnapshotArgs struct {
	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description         *string `pulumi:"description"`
	FilestoreSnapshotId *string `pulumi:"filestoreSnapshotId"`
	// The resource name of the filestore instance.
	Instance string `pulumi:"instance"`
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location string `pulumi:"location"`
	// The resource name of the snapshot. The name must be unique within the specified instance. The name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name     *string                    `pulumi:"name"`
	Project  *string                    `pulumi:"project"`
	Timeouts *FilestoreSnapshotTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a FilestoreSnapshot resource.
type FilestoreSnapshotArgs struct {
	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description         pulumi.StringPtrInput
	FilestoreSnapshotId pulumi.StringPtrInput
	// The resource name of the filestore instance.
	Instance pulumi.StringInput
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location pulumi.StringInput
	// The resource name of the snapshot. The name must be unique within the specified instance. The name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts FilestoreSnapshotTimeoutsPtrInput
}

func (FilestoreSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*filestoreSnapshotArgs)(nil)).Elem()
}

type FilestoreSnapshotInput interface {
	pulumi.Input

	ToFilestoreSnapshotOutput() FilestoreSnapshotOutput
	ToFilestoreSnapshotOutputWithContext(ctx context.Context) FilestoreSnapshotOutput
}

func (*FilestoreSnapshot) ElementType() reflect.Type {
	return reflect.TypeOf((**FilestoreSnapshot)(nil)).Elem()
}

func (i *FilestoreSnapshot) ToFilestoreSnapshotOutput() FilestoreSnapshotOutput {
	return i.ToFilestoreSnapshotOutputWithContext(context.Background())
}

func (i *FilestoreSnapshot) ToFilestoreSnapshotOutputWithContext(ctx context.Context) FilestoreSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilestoreSnapshotOutput)
}

type FilestoreSnapshotOutput struct{ *pulumi.OutputState }

func (FilestoreSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilestoreSnapshot)(nil)).Elem()
}

func (o FilestoreSnapshotOutput) ToFilestoreSnapshotOutput() FilestoreSnapshotOutput {
	return o
}

func (o FilestoreSnapshotOutput) ToFilestoreSnapshotOutputWithContext(ctx context.Context) FilestoreSnapshotOutput {
	return o
}

// The time when the snapshot was created in RFC3339 text format.
func (o FilestoreSnapshotOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
func (o FilestoreSnapshotOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o FilestoreSnapshotOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o FilestoreSnapshotOutput) FilestoreSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringOutput { return v.FilestoreSnapshotId }).(pulumi.StringOutput)
}

// The amount of bytes needed to allocate a full copy of the snapshot content.
func (o FilestoreSnapshotOutput) FilesystemUsedBytes() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringOutput { return v.FilesystemUsedBytes }).(pulumi.StringOutput)
}

// The resource name of the filestore instance.
func (o FilestoreSnapshotOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringOutput { return v.Instance }).(pulumi.StringOutput)
}

// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o FilestoreSnapshotOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
func (o FilestoreSnapshotOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the snapshot. The name must be unique within the specified instance. The name must be 1-63
// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
// expression 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a
// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o FilestoreSnapshotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FilestoreSnapshotOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The snapshot state.
func (o FilestoreSnapshotOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o FilestoreSnapshotOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o FilestoreSnapshotOutput) Timeouts() FilestoreSnapshotTimeoutsPtrOutput {
	return o.ApplyT(func(v *FilestoreSnapshot) FilestoreSnapshotTimeoutsPtrOutput { return v.Timeouts }).(FilestoreSnapshotTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FilestoreSnapshotInput)(nil)).Elem(), &FilestoreSnapshot{})
	pulumi.RegisterOutputType(FilestoreSnapshotOutput{})
}
