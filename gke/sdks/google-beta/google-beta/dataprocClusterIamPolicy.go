// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataprocClusterIamPolicy struct {
	pulumi.CustomResourceState

	Cluster                    pulumi.StringOutput `pulumi:"cluster"`
	DataprocClusterIamPolicyId pulumi.StringOutput `pulumi:"dataprocClusterIamPolicyId"`
	Etag                       pulumi.StringOutput `pulumi:"etag"`
	PolicyData                 pulumi.StringOutput `pulumi:"policyData"`
	Project                    pulumi.StringOutput `pulumi:"project"`
	Region                     pulumi.StringOutput `pulumi:"region"`
}

// NewDataprocClusterIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDataprocClusterIamPolicy(ctx *pulumi.Context,
	name string, args *DataprocClusterIamPolicyArgs, opts ...pulumi.ResourceOption) (*DataprocClusterIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cluster == nil {
		return nil, errors.New("invalid value for required argument 'Cluster'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataprocClusterIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/dataprocClusterIamPolicy:DataprocClusterIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocClusterIamPolicy gets an existing DataprocClusterIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocClusterIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocClusterIamPolicyState, opts ...pulumi.ResourceOption) (*DataprocClusterIamPolicy, error) {
	var resource DataprocClusterIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataprocClusterIamPolicy:DataprocClusterIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocClusterIamPolicy resources.
type dataprocClusterIamPolicyState struct {
	Cluster                    *string `pulumi:"cluster"`
	DataprocClusterIamPolicyId *string `pulumi:"dataprocClusterIamPolicyId"`
	Etag                       *string `pulumi:"etag"`
	PolicyData                 *string `pulumi:"policyData"`
	Project                    *string `pulumi:"project"`
	Region                     *string `pulumi:"region"`
}

type DataprocClusterIamPolicyState struct {
	Cluster                    pulumi.StringPtrInput
	DataprocClusterIamPolicyId pulumi.StringPtrInput
	Etag                       pulumi.StringPtrInput
	PolicyData                 pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	Region                     pulumi.StringPtrInput
}

func (DataprocClusterIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterIamPolicyState)(nil)).Elem()
}

type dataprocClusterIamPolicyArgs struct {
	Cluster                    string  `pulumi:"cluster"`
	DataprocClusterIamPolicyId *string `pulumi:"dataprocClusterIamPolicyId"`
	PolicyData                 string  `pulumi:"policyData"`
	Project                    *string `pulumi:"project"`
	Region                     *string `pulumi:"region"`
}

// The set of arguments for constructing a DataprocClusterIamPolicy resource.
type DataprocClusterIamPolicyArgs struct {
	Cluster                    pulumi.StringInput
	DataprocClusterIamPolicyId pulumi.StringPtrInput
	PolicyData                 pulumi.StringInput
	Project                    pulumi.StringPtrInput
	Region                     pulumi.StringPtrInput
}

func (DataprocClusterIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterIamPolicyArgs)(nil)).Elem()
}

type DataprocClusterIamPolicyInput interface {
	pulumi.Input

	ToDataprocClusterIamPolicyOutput() DataprocClusterIamPolicyOutput
	ToDataprocClusterIamPolicyOutputWithContext(ctx context.Context) DataprocClusterIamPolicyOutput
}

func (*DataprocClusterIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterIamPolicy)(nil)).Elem()
}

func (i *DataprocClusterIamPolicy) ToDataprocClusterIamPolicyOutput() DataprocClusterIamPolicyOutput {
	return i.ToDataprocClusterIamPolicyOutputWithContext(context.Background())
}

func (i *DataprocClusterIamPolicy) ToDataprocClusterIamPolicyOutputWithContext(ctx context.Context) DataprocClusterIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterIamPolicyOutput)
}

type DataprocClusterIamPolicyOutput struct{ *pulumi.OutputState }

func (DataprocClusterIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterIamPolicy)(nil)).Elem()
}

func (o DataprocClusterIamPolicyOutput) ToDataprocClusterIamPolicyOutput() DataprocClusterIamPolicyOutput {
	return o
}

func (o DataprocClusterIamPolicyOutput) ToDataprocClusterIamPolicyOutputWithContext(ctx context.Context) DataprocClusterIamPolicyOutput {
	return o
}

func (o DataprocClusterIamPolicyOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamPolicy) pulumi.StringOutput { return v.Cluster }).(pulumi.StringOutput)
}

func (o DataprocClusterIamPolicyOutput) DataprocClusterIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamPolicy) pulumi.StringOutput { return v.DataprocClusterIamPolicyId }).(pulumi.StringOutput)
}

func (o DataprocClusterIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataprocClusterIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o DataprocClusterIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataprocClusterIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocClusterIamPolicyInput)(nil)).Elem(), &DataprocClusterIamPolicy{})
	pulumi.RegisterOutputType(DataprocClusterIamPolicyOutput{})
}
