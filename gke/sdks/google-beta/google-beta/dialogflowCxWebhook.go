// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DialogflowCxWebhook struct {
	pulumi.CustomResourceState

	DialogflowCxWebhookId pulumi.StringOutput `pulumi:"dialogflowCxWebhookId"`
	// Indicates whether the webhook is disabled.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// The human-readable name of the webhook, unique within the agent.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection pulumi.BoolPtrOutput `pulumi:"enableSpellCorrection"`
	// Determines whether this agent should log conversation queries.
	EnableStackdriverLogging pulumi.BoolPtrOutput `pulumi:"enableStackdriverLogging"`
	// Configuration for a generic web service.
	GenericWebService DialogflowCxWebhookGenericWebServicePtrOutput `pulumi:"genericWebService"`
	// The unique identifier of the webhook. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
	// ID>/webhooks/<Webhook ID>.
	Name pulumi.StringOutput `pulumi:"name"`
	// The agent to create a webhook for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent pulumi.StringPtrOutput `pulumi:"parent"`
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location
	// ID>/securitySettings/<Security Settings ID>.
	SecuritySettings pulumi.StringPtrOutput `pulumi:"securitySettings"`
	// Configuration for a Service Directory service.
	ServiceDirectory DialogflowCxWebhookServiceDirectoryPtrOutput `pulumi:"serviceDirectory"`
	// Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only
	// be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow
	// ID>.
	StartFlow pulumi.StringOutput `pulumi:"startFlow"`
	// Webhook execution timeout.
	Timeout  pulumi.StringPtrOutput               `pulumi:"timeout"`
	Timeouts DialogflowCxWebhookTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDialogflowCxWebhook registers a new resource with the given unique name, arguments, and options.
func NewDialogflowCxWebhook(ctx *pulumi.Context,
	name string, args *DialogflowCxWebhookArgs, opts ...pulumi.ResourceOption) (*DialogflowCxWebhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DialogflowCxWebhook
	err = ctx.RegisterPackageResource("google-beta:index/dialogflowCxWebhook:DialogflowCxWebhook", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDialogflowCxWebhook gets an existing DialogflowCxWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDialogflowCxWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DialogflowCxWebhookState, opts ...pulumi.ResourceOption) (*DialogflowCxWebhook, error) {
	var resource DialogflowCxWebhook
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dialogflowCxWebhook:DialogflowCxWebhook", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DialogflowCxWebhook resources.
type dialogflowCxWebhookState struct {
	DialogflowCxWebhookId *string `pulumi:"dialogflowCxWebhookId"`
	// Indicates whether the webhook is disabled.
	Disabled *bool `pulumi:"disabled"`
	// The human-readable name of the webhook, unique within the agent.
	DisplayName *string `pulumi:"displayName"`
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection *bool `pulumi:"enableSpellCorrection"`
	// Determines whether this agent should log conversation queries.
	EnableStackdriverLogging *bool `pulumi:"enableStackdriverLogging"`
	// Configuration for a generic web service.
	GenericWebService *DialogflowCxWebhookGenericWebService `pulumi:"genericWebService"`
	// The unique identifier of the webhook. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
	// ID>/webhooks/<Webhook ID>.
	Name *string `pulumi:"name"`
	// The agent to create a webhook for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent *string `pulumi:"parent"`
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location
	// ID>/securitySettings/<Security Settings ID>.
	SecuritySettings *string `pulumi:"securitySettings"`
	// Configuration for a Service Directory service.
	ServiceDirectory *DialogflowCxWebhookServiceDirectory `pulumi:"serviceDirectory"`
	// Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only
	// be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow
	// ID>.
	StartFlow *string `pulumi:"startFlow"`
	// Webhook execution timeout.
	Timeout  *string                      `pulumi:"timeout"`
	Timeouts *DialogflowCxWebhookTimeouts `pulumi:"timeouts"`
}

type DialogflowCxWebhookState struct {
	DialogflowCxWebhookId pulumi.StringPtrInput
	// Indicates whether the webhook is disabled.
	Disabled pulumi.BoolPtrInput
	// The human-readable name of the webhook, unique within the agent.
	DisplayName pulumi.StringPtrInput
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection pulumi.BoolPtrInput
	// Determines whether this agent should log conversation queries.
	EnableStackdriverLogging pulumi.BoolPtrInput
	// Configuration for a generic web service.
	GenericWebService DialogflowCxWebhookGenericWebServicePtrInput
	// The unique identifier of the webhook. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
	// ID>/webhooks/<Webhook ID>.
	Name pulumi.StringPtrInput
	// The agent to create a webhook for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent pulumi.StringPtrInput
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location
	// ID>/securitySettings/<Security Settings ID>.
	SecuritySettings pulumi.StringPtrInput
	// Configuration for a Service Directory service.
	ServiceDirectory DialogflowCxWebhookServiceDirectoryPtrInput
	// Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only
	// be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow
	// ID>.
	StartFlow pulumi.StringPtrInput
	// Webhook execution timeout.
	Timeout  pulumi.StringPtrInput
	Timeouts DialogflowCxWebhookTimeoutsPtrInput
}

func (DialogflowCxWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowCxWebhookState)(nil)).Elem()
}

type dialogflowCxWebhookArgs struct {
	DialogflowCxWebhookId *string `pulumi:"dialogflowCxWebhookId"`
	// Indicates whether the webhook is disabled.
	Disabled *bool `pulumi:"disabled"`
	// The human-readable name of the webhook, unique within the agent.
	DisplayName string `pulumi:"displayName"`
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection *bool `pulumi:"enableSpellCorrection"`
	// Determines whether this agent should log conversation queries.
	EnableStackdriverLogging *bool `pulumi:"enableStackdriverLogging"`
	// Configuration for a generic web service.
	GenericWebService *DialogflowCxWebhookGenericWebService `pulumi:"genericWebService"`
	// The agent to create a webhook for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent *string `pulumi:"parent"`
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location
	// ID>/securitySettings/<Security Settings ID>.
	SecuritySettings *string `pulumi:"securitySettings"`
	// Configuration for a Service Directory service.
	ServiceDirectory *DialogflowCxWebhookServiceDirectory `pulumi:"serviceDirectory"`
	// Webhook execution timeout.
	Timeout  *string                      `pulumi:"timeout"`
	Timeouts *DialogflowCxWebhookTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DialogflowCxWebhook resource.
type DialogflowCxWebhookArgs struct {
	DialogflowCxWebhookId pulumi.StringPtrInput
	// Indicates whether the webhook is disabled.
	Disabled pulumi.BoolPtrInput
	// The human-readable name of the webhook, unique within the agent.
	DisplayName pulumi.StringInput
	// Indicates if automatic spell correction is enabled in detect intent requests.
	EnableSpellCorrection pulumi.BoolPtrInput
	// Determines whether this agent should log conversation queries.
	EnableStackdriverLogging pulumi.BoolPtrInput
	// Configuration for a generic web service.
	GenericWebService DialogflowCxWebhookGenericWebServicePtrInput
	// The agent to create a webhook for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent pulumi.StringPtrInput
	// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location
	// ID>/securitySettings/<Security Settings ID>.
	SecuritySettings pulumi.StringPtrInput
	// Configuration for a Service Directory service.
	ServiceDirectory DialogflowCxWebhookServiceDirectoryPtrInput
	// Webhook execution timeout.
	Timeout  pulumi.StringPtrInput
	Timeouts DialogflowCxWebhookTimeoutsPtrInput
}

func (DialogflowCxWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowCxWebhookArgs)(nil)).Elem()
}

type DialogflowCxWebhookInput interface {
	pulumi.Input

	ToDialogflowCxWebhookOutput() DialogflowCxWebhookOutput
	ToDialogflowCxWebhookOutputWithContext(ctx context.Context) DialogflowCxWebhookOutput
}

func (*DialogflowCxWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowCxWebhook)(nil)).Elem()
}

func (i *DialogflowCxWebhook) ToDialogflowCxWebhookOutput() DialogflowCxWebhookOutput {
	return i.ToDialogflowCxWebhookOutputWithContext(context.Background())
}

func (i *DialogflowCxWebhook) ToDialogflowCxWebhookOutputWithContext(ctx context.Context) DialogflowCxWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DialogflowCxWebhookOutput)
}

type DialogflowCxWebhookOutput struct{ *pulumi.OutputState }

func (DialogflowCxWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowCxWebhook)(nil)).Elem()
}

func (o DialogflowCxWebhookOutput) ToDialogflowCxWebhookOutput() DialogflowCxWebhookOutput {
	return o
}

func (o DialogflowCxWebhookOutput) ToDialogflowCxWebhookOutputWithContext(ctx context.Context) DialogflowCxWebhookOutput {
	return o
}

func (o DialogflowCxWebhookOutput) DialogflowCxWebhookId() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.StringOutput { return v.DialogflowCxWebhookId }).(pulumi.StringOutput)
}

// Indicates whether the webhook is disabled.
func (o DialogflowCxWebhookOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The human-readable name of the webhook, unique within the agent.
func (o DialogflowCxWebhookOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Indicates if automatic spell correction is enabled in detect intent requests.
func (o DialogflowCxWebhookOutput) EnableSpellCorrection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.BoolPtrOutput { return v.EnableSpellCorrection }).(pulumi.BoolPtrOutput)
}

// Determines whether this agent should log conversation queries.
func (o DialogflowCxWebhookOutput) EnableStackdriverLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.BoolPtrOutput { return v.EnableStackdriverLogging }).(pulumi.BoolPtrOutput)
}

// Configuration for a generic web service.
func (o DialogflowCxWebhookOutput) GenericWebService() DialogflowCxWebhookGenericWebServicePtrOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) DialogflowCxWebhookGenericWebServicePtrOutput { return v.GenericWebService }).(DialogflowCxWebhookGenericWebServicePtrOutput)
}

// The unique identifier of the webhook. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
// ID>/webhooks/<Webhook ID>.
func (o DialogflowCxWebhookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The agent to create a webhook for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
func (o DialogflowCxWebhookOutput) Parent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.StringPtrOutput { return v.Parent }).(pulumi.StringPtrOutput)
}

// Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location
// ID>/securitySettings/<Security Settings ID>.
func (o DialogflowCxWebhookOutput) SecuritySettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.StringPtrOutput { return v.SecuritySettings }).(pulumi.StringPtrOutput)
}

// Configuration for a Service Directory service.
func (o DialogflowCxWebhookOutput) ServiceDirectory() DialogflowCxWebhookServiceDirectoryPtrOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) DialogflowCxWebhookServiceDirectoryPtrOutput { return v.ServiceDirectory }).(DialogflowCxWebhookServiceDirectoryPtrOutput)
}

// Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only
// be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow
// ID>.
func (o DialogflowCxWebhookOutput) StartFlow() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.StringOutput { return v.StartFlow }).(pulumi.StringOutput)
}

// Webhook execution timeout.
func (o DialogflowCxWebhookOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) pulumi.StringPtrOutput { return v.Timeout }).(pulumi.StringPtrOutput)
}

func (o DialogflowCxWebhookOutput) Timeouts() DialogflowCxWebhookTimeoutsPtrOutput {
	return o.ApplyT(func(v *DialogflowCxWebhook) DialogflowCxWebhookTimeoutsPtrOutput { return v.Timeouts }).(DialogflowCxWebhookTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DialogflowCxWebhookInput)(nil)).Elem(), &DialogflowCxWebhook{})
	pulumi.RegisterOutputType(DialogflowCxWebhookOutput{})
}
