// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiGatewayApiConfigIamPolicy struct {
	pulumi.CustomResourceState

	Api                            pulumi.StringOutput `pulumi:"api"`
	ApiConfig                      pulumi.StringOutput `pulumi:"apiConfig"`
	ApiGatewayApiConfigIamPolicyId pulumi.StringOutput `pulumi:"apiGatewayApiConfigIamPolicyId"`
	Etag                           pulumi.StringOutput `pulumi:"etag"`
	PolicyData                     pulumi.StringOutput `pulumi:"policyData"`
	Project                        pulumi.StringOutput `pulumi:"project"`
}

// NewApiGatewayApiConfigIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewApiGatewayApiConfigIamPolicy(ctx *pulumi.Context,
	name string, args *ApiGatewayApiConfigIamPolicyArgs, opts ...pulumi.ResourceOption) (*ApiGatewayApiConfigIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Api == nil {
		return nil, errors.New("invalid value for required argument 'Api'")
	}
	if args.ApiConfig == nil {
		return nil, errors.New("invalid value for required argument 'ApiConfig'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ApiGatewayApiConfigIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/apiGatewayApiConfigIamPolicy:ApiGatewayApiConfigIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiGatewayApiConfigIamPolicy gets an existing ApiGatewayApiConfigIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiGatewayApiConfigIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiGatewayApiConfigIamPolicyState, opts ...pulumi.ResourceOption) (*ApiGatewayApiConfigIamPolicy, error) {
	var resource ApiGatewayApiConfigIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/apiGatewayApiConfigIamPolicy:ApiGatewayApiConfigIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiGatewayApiConfigIamPolicy resources.
type apiGatewayApiConfigIamPolicyState struct {
	Api                            *string `pulumi:"api"`
	ApiConfig                      *string `pulumi:"apiConfig"`
	ApiGatewayApiConfigIamPolicyId *string `pulumi:"apiGatewayApiConfigIamPolicyId"`
	Etag                           *string `pulumi:"etag"`
	PolicyData                     *string `pulumi:"policyData"`
	Project                        *string `pulumi:"project"`
}

type ApiGatewayApiConfigIamPolicyState struct {
	Api                            pulumi.StringPtrInput
	ApiConfig                      pulumi.StringPtrInput
	ApiGatewayApiConfigIamPolicyId pulumi.StringPtrInput
	Etag                           pulumi.StringPtrInput
	PolicyData                     pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
}

func (ApiGatewayApiConfigIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayApiConfigIamPolicyState)(nil)).Elem()
}

type apiGatewayApiConfigIamPolicyArgs struct {
	Api                            string  `pulumi:"api"`
	ApiConfig                      string  `pulumi:"apiConfig"`
	ApiGatewayApiConfigIamPolicyId *string `pulumi:"apiGatewayApiConfigIamPolicyId"`
	PolicyData                     string  `pulumi:"policyData"`
	Project                        *string `pulumi:"project"`
}

// The set of arguments for constructing a ApiGatewayApiConfigIamPolicy resource.
type ApiGatewayApiConfigIamPolicyArgs struct {
	Api                            pulumi.StringInput
	ApiConfig                      pulumi.StringInput
	ApiGatewayApiConfigIamPolicyId pulumi.StringPtrInput
	PolicyData                     pulumi.StringInput
	Project                        pulumi.StringPtrInput
}

func (ApiGatewayApiConfigIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayApiConfigIamPolicyArgs)(nil)).Elem()
}

type ApiGatewayApiConfigIamPolicyInput interface {
	pulumi.Input

	ToApiGatewayApiConfigIamPolicyOutput() ApiGatewayApiConfigIamPolicyOutput
	ToApiGatewayApiConfigIamPolicyOutputWithContext(ctx context.Context) ApiGatewayApiConfigIamPolicyOutput
}

func (*ApiGatewayApiConfigIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApiConfigIamPolicy)(nil)).Elem()
}

func (i *ApiGatewayApiConfigIamPolicy) ToApiGatewayApiConfigIamPolicyOutput() ApiGatewayApiConfigIamPolicyOutput {
	return i.ToApiGatewayApiConfigIamPolicyOutputWithContext(context.Background())
}

func (i *ApiGatewayApiConfigIamPolicy) ToApiGatewayApiConfigIamPolicyOutputWithContext(ctx context.Context) ApiGatewayApiConfigIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayApiConfigIamPolicyOutput)
}

type ApiGatewayApiConfigIamPolicyOutput struct{ *pulumi.OutputState }

func (ApiGatewayApiConfigIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayApiConfigIamPolicy)(nil)).Elem()
}

func (o ApiGatewayApiConfigIamPolicyOutput) ToApiGatewayApiConfigIamPolicyOutput() ApiGatewayApiConfigIamPolicyOutput {
	return o
}

func (o ApiGatewayApiConfigIamPolicyOutput) ToApiGatewayApiConfigIamPolicyOutputWithContext(ctx context.Context) ApiGatewayApiConfigIamPolicyOutput {
	return o
}

func (o ApiGatewayApiConfigIamPolicyOutput) Api() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApiConfigIamPolicy) pulumi.StringOutput { return v.Api }).(pulumi.StringOutput)
}

func (o ApiGatewayApiConfigIamPolicyOutput) ApiConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApiConfigIamPolicy) pulumi.StringOutput { return v.ApiConfig }).(pulumi.StringOutput)
}

func (o ApiGatewayApiConfigIamPolicyOutput) ApiGatewayApiConfigIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApiConfigIamPolicy) pulumi.StringOutput { return v.ApiGatewayApiConfigIamPolicyId }).(pulumi.StringOutput)
}

func (o ApiGatewayApiConfigIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApiConfigIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ApiGatewayApiConfigIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApiConfigIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ApiGatewayApiConfigIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayApiConfigIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayApiConfigIamPolicyInput)(nil)).Elem(), &ApiGatewayApiConfigIamPolicy{})
	pulumi.RegisterOutputType(ApiGatewayApiConfigIamPolicyOutput{})
}
