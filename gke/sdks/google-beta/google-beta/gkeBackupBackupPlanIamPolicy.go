// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeBackupBackupPlanIamPolicy struct {
	pulumi.CustomResourceState

	Etag                           pulumi.StringOutput `pulumi:"etag"`
	GkeBackupBackupPlanIamPolicyId pulumi.StringOutput `pulumi:"gkeBackupBackupPlanIamPolicyId"`
	Location                       pulumi.StringOutput `pulumi:"location"`
	Name                           pulumi.StringOutput `pulumi:"name"`
	PolicyData                     pulumi.StringOutput `pulumi:"policyData"`
	Project                        pulumi.StringOutput `pulumi:"project"`
}

// NewGkeBackupBackupPlanIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewGkeBackupBackupPlanIamPolicy(ctx *pulumi.Context,
	name string, args *GkeBackupBackupPlanIamPolicyArgs, opts ...pulumi.ResourceOption) (*GkeBackupBackupPlanIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeBackupBackupPlanIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/gkeBackupBackupPlanIamPolicy:GkeBackupBackupPlanIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeBackupBackupPlanIamPolicy gets an existing GkeBackupBackupPlanIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeBackupBackupPlanIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeBackupBackupPlanIamPolicyState, opts ...pulumi.ResourceOption) (*GkeBackupBackupPlanIamPolicy, error) {
	var resource GkeBackupBackupPlanIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/gkeBackupBackupPlanIamPolicy:GkeBackupBackupPlanIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeBackupBackupPlanIamPolicy resources.
type gkeBackupBackupPlanIamPolicyState struct {
	Etag                           *string `pulumi:"etag"`
	GkeBackupBackupPlanIamPolicyId *string `pulumi:"gkeBackupBackupPlanIamPolicyId"`
	Location                       *string `pulumi:"location"`
	Name                           *string `pulumi:"name"`
	PolicyData                     *string `pulumi:"policyData"`
	Project                        *string `pulumi:"project"`
}

type GkeBackupBackupPlanIamPolicyState struct {
	Etag                           pulumi.StringPtrInput
	GkeBackupBackupPlanIamPolicyId pulumi.StringPtrInput
	Location                       pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	PolicyData                     pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
}

func (GkeBackupBackupPlanIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeBackupBackupPlanIamPolicyState)(nil)).Elem()
}

type gkeBackupBackupPlanIamPolicyArgs struct {
	GkeBackupBackupPlanIamPolicyId *string `pulumi:"gkeBackupBackupPlanIamPolicyId"`
	Location                       *string `pulumi:"location"`
	Name                           *string `pulumi:"name"`
	PolicyData                     string  `pulumi:"policyData"`
	Project                        *string `pulumi:"project"`
}

// The set of arguments for constructing a GkeBackupBackupPlanIamPolicy resource.
type GkeBackupBackupPlanIamPolicyArgs struct {
	GkeBackupBackupPlanIamPolicyId pulumi.StringPtrInput
	Location                       pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	PolicyData                     pulumi.StringInput
	Project                        pulumi.StringPtrInput
}

func (GkeBackupBackupPlanIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeBackupBackupPlanIamPolicyArgs)(nil)).Elem()
}

type GkeBackupBackupPlanIamPolicyInput interface {
	pulumi.Input

	ToGkeBackupBackupPlanIamPolicyOutput() GkeBackupBackupPlanIamPolicyOutput
	ToGkeBackupBackupPlanIamPolicyOutputWithContext(ctx context.Context) GkeBackupBackupPlanIamPolicyOutput
}

func (*GkeBackupBackupPlanIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeBackupBackupPlanIamPolicy)(nil)).Elem()
}

func (i *GkeBackupBackupPlanIamPolicy) ToGkeBackupBackupPlanIamPolicyOutput() GkeBackupBackupPlanIamPolicyOutput {
	return i.ToGkeBackupBackupPlanIamPolicyOutputWithContext(context.Background())
}

func (i *GkeBackupBackupPlanIamPolicy) ToGkeBackupBackupPlanIamPolicyOutputWithContext(ctx context.Context) GkeBackupBackupPlanIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeBackupBackupPlanIamPolicyOutput)
}

type GkeBackupBackupPlanIamPolicyOutput struct{ *pulumi.OutputState }

func (GkeBackupBackupPlanIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeBackupBackupPlanIamPolicy)(nil)).Elem()
}

func (o GkeBackupBackupPlanIamPolicyOutput) ToGkeBackupBackupPlanIamPolicyOutput() GkeBackupBackupPlanIamPolicyOutput {
	return o
}

func (o GkeBackupBackupPlanIamPolicyOutput) ToGkeBackupBackupPlanIamPolicyOutputWithContext(ctx context.Context) GkeBackupBackupPlanIamPolicyOutput {
	return o
}

func (o GkeBackupBackupPlanIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamPolicyOutput) GkeBackupBackupPlanIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamPolicy) pulumi.StringOutput { return v.GkeBackupBackupPlanIamPolicyId }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeBackupBackupPlanIamPolicyInput)(nil)).Elem(), &GkeBackupBackupPlanIamPolicy{})
	pulumi.RegisterOutputType(GkeBackupBackupPlanIamPolicyOutput{})
}
