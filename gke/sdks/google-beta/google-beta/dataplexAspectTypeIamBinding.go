// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexAspectTypeIamBinding struct {
	pulumi.CustomResourceState

	AspectTypeId                   pulumi.StringOutput                            `pulumi:"aspectTypeId"`
	Condition                      DataplexAspectTypeIamBindingConditionPtrOutput `pulumi:"condition"`
	DataplexAspectTypeIamBindingId pulumi.StringOutput                            `pulumi:"dataplexAspectTypeIamBindingId"`
	Etag                           pulumi.StringOutput                            `pulumi:"etag"`
	Location                       pulumi.StringOutput                            `pulumi:"location"`
	Members                        pulumi.StringArrayOutput                       `pulumi:"members"`
	Project                        pulumi.StringOutput                            `pulumi:"project"`
	Role                           pulumi.StringOutput                            `pulumi:"role"`
}

// NewDataplexAspectTypeIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDataplexAspectTypeIamBinding(ctx *pulumi.Context,
	name string, args *DataplexAspectTypeIamBindingArgs, opts ...pulumi.ResourceOption) (*DataplexAspectTypeIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AspectTypeId == nil {
		return nil, errors.New("invalid value for required argument 'AspectTypeId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexAspectTypeIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/dataplexAspectTypeIamBinding:DataplexAspectTypeIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexAspectTypeIamBinding gets an existing DataplexAspectTypeIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexAspectTypeIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexAspectTypeIamBindingState, opts ...pulumi.ResourceOption) (*DataplexAspectTypeIamBinding, error) {
	var resource DataplexAspectTypeIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexAspectTypeIamBinding:DataplexAspectTypeIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexAspectTypeIamBinding resources.
type dataplexAspectTypeIamBindingState struct {
	AspectTypeId                   *string                                `pulumi:"aspectTypeId"`
	Condition                      *DataplexAspectTypeIamBindingCondition `pulumi:"condition"`
	DataplexAspectTypeIamBindingId *string                                `pulumi:"dataplexAspectTypeIamBindingId"`
	Etag                           *string                                `pulumi:"etag"`
	Location                       *string                                `pulumi:"location"`
	Members                        []string                               `pulumi:"members"`
	Project                        *string                                `pulumi:"project"`
	Role                           *string                                `pulumi:"role"`
}

type DataplexAspectTypeIamBindingState struct {
	AspectTypeId                   pulumi.StringPtrInput
	Condition                      DataplexAspectTypeIamBindingConditionPtrInput
	DataplexAspectTypeIamBindingId pulumi.StringPtrInput
	Etag                           pulumi.StringPtrInput
	Location                       pulumi.StringPtrInput
	Members                        pulumi.StringArrayInput
	Project                        pulumi.StringPtrInput
	Role                           pulumi.StringPtrInput
}

func (DataplexAspectTypeIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAspectTypeIamBindingState)(nil)).Elem()
}

type dataplexAspectTypeIamBindingArgs struct {
	AspectTypeId                   string                                 `pulumi:"aspectTypeId"`
	Condition                      *DataplexAspectTypeIamBindingCondition `pulumi:"condition"`
	DataplexAspectTypeIamBindingId *string                                `pulumi:"dataplexAspectTypeIamBindingId"`
	Location                       *string                                `pulumi:"location"`
	Members                        []string                               `pulumi:"members"`
	Project                        *string                                `pulumi:"project"`
	Role                           string                                 `pulumi:"role"`
}

// The set of arguments for constructing a DataplexAspectTypeIamBinding resource.
type DataplexAspectTypeIamBindingArgs struct {
	AspectTypeId                   pulumi.StringInput
	Condition                      DataplexAspectTypeIamBindingConditionPtrInput
	DataplexAspectTypeIamBindingId pulumi.StringPtrInput
	Location                       pulumi.StringPtrInput
	Members                        pulumi.StringArrayInput
	Project                        pulumi.StringPtrInput
	Role                           pulumi.StringInput
}

func (DataplexAspectTypeIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAspectTypeIamBindingArgs)(nil)).Elem()
}

type DataplexAspectTypeIamBindingInput interface {
	pulumi.Input

	ToDataplexAspectTypeIamBindingOutput() DataplexAspectTypeIamBindingOutput
	ToDataplexAspectTypeIamBindingOutputWithContext(ctx context.Context) DataplexAspectTypeIamBindingOutput
}

func (*DataplexAspectTypeIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAspectTypeIamBinding)(nil)).Elem()
}

func (i *DataplexAspectTypeIamBinding) ToDataplexAspectTypeIamBindingOutput() DataplexAspectTypeIamBindingOutput {
	return i.ToDataplexAspectTypeIamBindingOutputWithContext(context.Background())
}

func (i *DataplexAspectTypeIamBinding) ToDataplexAspectTypeIamBindingOutputWithContext(ctx context.Context) DataplexAspectTypeIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexAspectTypeIamBindingOutput)
}

type DataplexAspectTypeIamBindingOutput struct{ *pulumi.OutputState }

func (DataplexAspectTypeIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAspectTypeIamBinding)(nil)).Elem()
}

func (o DataplexAspectTypeIamBindingOutput) ToDataplexAspectTypeIamBindingOutput() DataplexAspectTypeIamBindingOutput {
	return o
}

func (o DataplexAspectTypeIamBindingOutput) ToDataplexAspectTypeIamBindingOutputWithContext(ctx context.Context) DataplexAspectTypeIamBindingOutput {
	return o
}

func (o DataplexAspectTypeIamBindingOutput) AspectTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamBinding) pulumi.StringOutput { return v.AspectTypeId }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamBindingOutput) Condition() DataplexAspectTypeIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamBinding) DataplexAspectTypeIamBindingConditionPtrOutput {
		return v.Condition
	}).(DataplexAspectTypeIamBindingConditionPtrOutput)
}

func (o DataplexAspectTypeIamBindingOutput) DataplexAspectTypeIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamBinding) pulumi.StringOutput { return v.DataplexAspectTypeIamBindingId }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DataplexAspectTypeIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataplexAspectTypeIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAspectTypeIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexAspectTypeIamBindingInput)(nil)).Elem(), &DataplexAspectTypeIamBinding{})
	pulumi.RegisterOutputType(DataplexAspectTypeIamBindingOutput{})
}
