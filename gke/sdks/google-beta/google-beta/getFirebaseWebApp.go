// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupFirebaseWebApp(ctx *pulumi.Context, args *LookupFirebaseWebAppArgs, opts ...pulumi.InvokeOption) (*LookupFirebaseWebAppResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupFirebaseWebAppResult
	err = ctx.InvokePackage("google-beta:index/getFirebaseWebApp:getFirebaseWebApp", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFirebaseWebApp.
type LookupFirebaseWebAppArgs struct {
	AppId   string  `pulumi:"appId"`
	Id      *string `pulumi:"id"`
	Project *string `pulumi:"project"`
}

// A collection of values returned by getFirebaseWebApp.
type LookupFirebaseWebAppResult struct {
	ApiKeyId       string   `pulumi:"apiKeyId"`
	AppId          string   `pulumi:"appId"`
	AppUrls        []string `pulumi:"appUrls"`
	DeletionPolicy string   `pulumi:"deletionPolicy"`
	DisplayName    string   `pulumi:"displayName"`
	Id             string   `pulumi:"id"`
	Name           string   `pulumi:"name"`
	Project        *string  `pulumi:"project"`
}

func LookupFirebaseWebAppOutput(ctx *pulumi.Context, args LookupFirebaseWebAppOutputArgs, opts ...pulumi.InvokeOption) LookupFirebaseWebAppResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFirebaseWebAppResultOutput, error) {
			args := v.(LookupFirebaseWebAppArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupFirebaseWebAppResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getFirebaseWebApp:getFirebaseWebApp", args, LookupFirebaseWebAppResultOutput{}, options).(LookupFirebaseWebAppResultOutput), nil
		}).(LookupFirebaseWebAppResultOutput)
}

// A collection of arguments for invoking getFirebaseWebApp.
type LookupFirebaseWebAppOutputArgs struct {
	AppId   pulumi.StringInput    `pulumi:"appId"`
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupFirebaseWebAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirebaseWebAppArgs)(nil)).Elem()
}

// A collection of values returned by getFirebaseWebApp.
type LookupFirebaseWebAppResultOutput struct{ *pulumi.OutputState }

func (LookupFirebaseWebAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirebaseWebAppResult)(nil)).Elem()
}

func (o LookupFirebaseWebAppResultOutput) ToLookupFirebaseWebAppResultOutput() LookupFirebaseWebAppResultOutput {
	return o
}

func (o LookupFirebaseWebAppResultOutput) ToLookupFirebaseWebAppResultOutputWithContext(ctx context.Context) LookupFirebaseWebAppResultOutput {
	return o
}

func (o LookupFirebaseWebAppResultOutput) ApiKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseWebAppResult) string { return v.ApiKeyId }).(pulumi.StringOutput)
}

func (o LookupFirebaseWebAppResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseWebAppResult) string { return v.AppId }).(pulumi.StringOutput)
}

func (o LookupFirebaseWebAppResultOutput) AppUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupFirebaseWebAppResult) []string { return v.AppUrls }).(pulumi.StringArrayOutput)
}

func (o LookupFirebaseWebAppResultOutput) DeletionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseWebAppResult) string { return v.DeletionPolicy }).(pulumi.StringOutput)
}

func (o LookupFirebaseWebAppResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseWebAppResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupFirebaseWebAppResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseWebAppResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFirebaseWebAppResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseWebAppResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupFirebaseWebAppResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFirebaseWebAppResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirebaseWebAppResultOutput{})
}
