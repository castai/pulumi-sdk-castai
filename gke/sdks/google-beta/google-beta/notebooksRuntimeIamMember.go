// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NotebooksRuntimeIamMember struct {
	pulumi.CustomResourceState

	Condition                   NotebooksRuntimeIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                        pulumi.StringOutput                         `pulumi:"etag"`
	Location                    pulumi.StringOutput                         `pulumi:"location"`
	Member                      pulumi.StringOutput                         `pulumi:"member"`
	NotebooksRuntimeIamMemberId pulumi.StringOutput                         `pulumi:"notebooksRuntimeIamMemberId"`
	Project                     pulumi.StringOutput                         `pulumi:"project"`
	Role                        pulumi.StringOutput                         `pulumi:"role"`
	RuntimeName                 pulumi.StringOutput                         `pulumi:"runtimeName"`
}

// NewNotebooksRuntimeIamMember registers a new resource with the given unique name, arguments, and options.
func NewNotebooksRuntimeIamMember(ctx *pulumi.Context,
	name string, args *NotebooksRuntimeIamMemberArgs, opts ...pulumi.ResourceOption) (*NotebooksRuntimeIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.RuntimeName == nil {
		return nil, errors.New("invalid value for required argument 'RuntimeName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NotebooksRuntimeIamMember
	err = ctx.RegisterPackageResource("google-beta:index/notebooksRuntimeIamMember:NotebooksRuntimeIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotebooksRuntimeIamMember gets an existing NotebooksRuntimeIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebooksRuntimeIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotebooksRuntimeIamMemberState, opts ...pulumi.ResourceOption) (*NotebooksRuntimeIamMember, error) {
	var resource NotebooksRuntimeIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/notebooksRuntimeIamMember:NotebooksRuntimeIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotebooksRuntimeIamMember resources.
type notebooksRuntimeIamMemberState struct {
	Condition                   *NotebooksRuntimeIamMemberCondition `pulumi:"condition"`
	Etag                        *string                             `pulumi:"etag"`
	Location                    *string                             `pulumi:"location"`
	Member                      *string                             `pulumi:"member"`
	NotebooksRuntimeIamMemberId *string                             `pulumi:"notebooksRuntimeIamMemberId"`
	Project                     *string                             `pulumi:"project"`
	Role                        *string                             `pulumi:"role"`
	RuntimeName                 *string                             `pulumi:"runtimeName"`
}

type NotebooksRuntimeIamMemberState struct {
	Condition                   NotebooksRuntimeIamMemberConditionPtrInput
	Etag                        pulumi.StringPtrInput
	Location                    pulumi.StringPtrInput
	Member                      pulumi.StringPtrInput
	NotebooksRuntimeIamMemberId pulumi.StringPtrInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringPtrInput
	RuntimeName                 pulumi.StringPtrInput
}

func (NotebooksRuntimeIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*notebooksRuntimeIamMemberState)(nil)).Elem()
}

type notebooksRuntimeIamMemberArgs struct {
	Condition                   *NotebooksRuntimeIamMemberCondition `pulumi:"condition"`
	Location                    *string                             `pulumi:"location"`
	Member                      string                              `pulumi:"member"`
	NotebooksRuntimeIamMemberId *string                             `pulumi:"notebooksRuntimeIamMemberId"`
	Project                     *string                             `pulumi:"project"`
	Role                        string                              `pulumi:"role"`
	RuntimeName                 string                              `pulumi:"runtimeName"`
}

// The set of arguments for constructing a NotebooksRuntimeIamMember resource.
type NotebooksRuntimeIamMemberArgs struct {
	Condition                   NotebooksRuntimeIamMemberConditionPtrInput
	Location                    pulumi.StringPtrInput
	Member                      pulumi.StringInput
	NotebooksRuntimeIamMemberId pulumi.StringPtrInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringInput
	RuntimeName                 pulumi.StringInput
}

func (NotebooksRuntimeIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notebooksRuntimeIamMemberArgs)(nil)).Elem()
}

type NotebooksRuntimeIamMemberInput interface {
	pulumi.Input

	ToNotebooksRuntimeIamMemberOutput() NotebooksRuntimeIamMemberOutput
	ToNotebooksRuntimeIamMemberOutputWithContext(ctx context.Context) NotebooksRuntimeIamMemberOutput
}

func (*NotebooksRuntimeIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebooksRuntimeIamMember)(nil)).Elem()
}

func (i *NotebooksRuntimeIamMember) ToNotebooksRuntimeIamMemberOutput() NotebooksRuntimeIamMemberOutput {
	return i.ToNotebooksRuntimeIamMemberOutputWithContext(context.Background())
}

func (i *NotebooksRuntimeIamMember) ToNotebooksRuntimeIamMemberOutputWithContext(ctx context.Context) NotebooksRuntimeIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebooksRuntimeIamMemberOutput)
}

type NotebooksRuntimeIamMemberOutput struct{ *pulumi.OutputState }

func (NotebooksRuntimeIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebooksRuntimeIamMember)(nil)).Elem()
}

func (o NotebooksRuntimeIamMemberOutput) ToNotebooksRuntimeIamMemberOutput() NotebooksRuntimeIamMemberOutput {
	return o
}

func (o NotebooksRuntimeIamMemberOutput) ToNotebooksRuntimeIamMemberOutputWithContext(ctx context.Context) NotebooksRuntimeIamMemberOutput {
	return o
}

func (o NotebooksRuntimeIamMemberOutput) Condition() NotebooksRuntimeIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamMember) NotebooksRuntimeIamMemberConditionPtrOutput { return v.Condition }).(NotebooksRuntimeIamMemberConditionPtrOutput)
}

func (o NotebooksRuntimeIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamMemberOutput) NotebooksRuntimeIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamMember) pulumi.StringOutput { return v.NotebooksRuntimeIamMemberId }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamMemberOutput) RuntimeName() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamMember) pulumi.StringOutput { return v.RuntimeName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NotebooksRuntimeIamMemberInput)(nil)).Elem(), &NotebooksRuntimeIamMember{})
	pulumi.RegisterOutputType(NotebooksRuntimeIamMemberOutput{})
}
