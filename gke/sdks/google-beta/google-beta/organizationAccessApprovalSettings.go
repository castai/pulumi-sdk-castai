// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationAccessApprovalSettings struct {
	pulumi.CustomResourceState

	// The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a
	// Google-managed key should be used for signing.
	ActiveKeyVersion pulumi.StringPtrOutput `pulumi:"activeKeyVersion"`
	// This field will always be unset for the organization since organizations do not have ancestors.
	AncestorHasActiveKeyVersion pulumi.BoolOutput `pulumi:"ancestorHasActiveKeyVersion"`
	// This field will always be unset for the organization since organizations do not have ancestors.
	EnrolledAncestor pulumi.BoolOutput `pulumi:"enrolledAncestor"`
	// A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the
	// resource given by name against any of these services contained here will be required to have explicit approval.
	// Enrollment can be done for individual services. A maximum of 10 enrolled services will be enforced, to be expanded as
	// the set of supported services is expanded.
	EnrolledServices OrganizationAccessApprovalSettingsEnrolledServiceArrayOutput `pulumi:"enrolledServices"`
	// If the field is true, that indicates that there is some configuration issue with the active_key_version configured on
	// this Organization (e.g. it doesn't exist or the Access Approval service account doesn't have the correct permissions on
	// it, etc.).
	InvalidKeyVersion pulumi.BoolOutput `pulumi:"invalidKeyVersion"`
	// The resource name of the settings. Format is "organizations/{organization_id}/accessApprovalSettings"
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to
	// a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email
	// addresses are allowed.
	NotificationEmails                   pulumi.StringArrayOutput `pulumi:"notificationEmails"`
	OrganizationAccessApprovalSettingsId pulumi.StringOutput      `pulumi:"organizationAccessApprovalSettingsId"`
	// ID of the organization of the access approval settings.
	OrganizationId pulumi.StringOutput                                 `pulumi:"organizationId"`
	Timeouts       OrganizationAccessApprovalSettingsTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewOrganizationAccessApprovalSettings registers a new resource with the given unique name, arguments, and options.
func NewOrganizationAccessApprovalSettings(ctx *pulumi.Context,
	name string, args *OrganizationAccessApprovalSettingsArgs, opts ...pulumi.ResourceOption) (*OrganizationAccessApprovalSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnrolledServices == nil {
		return nil, errors.New("invalid value for required argument 'EnrolledServices'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource OrganizationAccessApprovalSettings
	err = ctx.RegisterPackageResource("google-beta:index/organizationAccessApprovalSettings:OrganizationAccessApprovalSettings", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationAccessApprovalSettings gets an existing OrganizationAccessApprovalSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationAccessApprovalSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationAccessApprovalSettingsState, opts ...pulumi.ResourceOption) (*OrganizationAccessApprovalSettings, error) {
	var resource OrganizationAccessApprovalSettings
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/organizationAccessApprovalSettings:OrganizationAccessApprovalSettings", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationAccessApprovalSettings resources.
type organizationAccessApprovalSettingsState struct {
	// The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a
	// Google-managed key should be used for signing.
	ActiveKeyVersion *string `pulumi:"activeKeyVersion"`
	// This field will always be unset for the organization since organizations do not have ancestors.
	AncestorHasActiveKeyVersion *bool `pulumi:"ancestorHasActiveKeyVersion"`
	// This field will always be unset for the organization since organizations do not have ancestors.
	EnrolledAncestor *bool `pulumi:"enrolledAncestor"`
	// A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the
	// resource given by name against any of these services contained here will be required to have explicit approval.
	// Enrollment can be done for individual services. A maximum of 10 enrolled services will be enforced, to be expanded as
	// the set of supported services is expanded.
	EnrolledServices []OrganizationAccessApprovalSettingsEnrolledService `pulumi:"enrolledServices"`
	// If the field is true, that indicates that there is some configuration issue with the active_key_version configured on
	// this Organization (e.g. it doesn't exist or the Access Approval service account doesn't have the correct permissions on
	// it, etc.).
	InvalidKeyVersion *bool `pulumi:"invalidKeyVersion"`
	// The resource name of the settings. Format is "organizations/{organization_id}/accessApprovalSettings"
	Name *string `pulumi:"name"`
	// A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to
	// a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email
	// addresses are allowed.
	NotificationEmails                   []string `pulumi:"notificationEmails"`
	OrganizationAccessApprovalSettingsId *string  `pulumi:"organizationAccessApprovalSettingsId"`
	// ID of the organization of the access approval settings.
	OrganizationId *string                                     `pulumi:"organizationId"`
	Timeouts       *OrganizationAccessApprovalSettingsTimeouts `pulumi:"timeouts"`
}

type OrganizationAccessApprovalSettingsState struct {
	// The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a
	// Google-managed key should be used for signing.
	ActiveKeyVersion pulumi.StringPtrInput
	// This field will always be unset for the organization since organizations do not have ancestors.
	AncestorHasActiveKeyVersion pulumi.BoolPtrInput
	// This field will always be unset for the organization since organizations do not have ancestors.
	EnrolledAncestor pulumi.BoolPtrInput
	// A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the
	// resource given by name against any of these services contained here will be required to have explicit approval.
	// Enrollment can be done for individual services. A maximum of 10 enrolled services will be enforced, to be expanded as
	// the set of supported services is expanded.
	EnrolledServices OrganizationAccessApprovalSettingsEnrolledServiceArrayInput
	// If the field is true, that indicates that there is some configuration issue with the active_key_version configured on
	// this Organization (e.g. it doesn't exist or the Access Approval service account doesn't have the correct permissions on
	// it, etc.).
	InvalidKeyVersion pulumi.BoolPtrInput
	// The resource name of the settings. Format is "organizations/{organization_id}/accessApprovalSettings"
	Name pulumi.StringPtrInput
	// A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to
	// a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email
	// addresses are allowed.
	NotificationEmails                   pulumi.StringArrayInput
	OrganizationAccessApprovalSettingsId pulumi.StringPtrInput
	// ID of the organization of the access approval settings.
	OrganizationId pulumi.StringPtrInput
	Timeouts       OrganizationAccessApprovalSettingsTimeoutsPtrInput
}

func (OrganizationAccessApprovalSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationAccessApprovalSettingsState)(nil)).Elem()
}

type organizationAccessApprovalSettingsArgs struct {
	// The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a
	// Google-managed key should be used for signing.
	ActiveKeyVersion *string `pulumi:"activeKeyVersion"`
	// A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the
	// resource given by name against any of these services contained here will be required to have explicit approval.
	// Enrollment can be done for individual services. A maximum of 10 enrolled services will be enforced, to be expanded as
	// the set of supported services is expanded.
	EnrolledServices []OrganizationAccessApprovalSettingsEnrolledService `pulumi:"enrolledServices"`
	// A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to
	// a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email
	// addresses are allowed.
	NotificationEmails                   []string `pulumi:"notificationEmails"`
	OrganizationAccessApprovalSettingsId *string  `pulumi:"organizationAccessApprovalSettingsId"`
	// ID of the organization of the access approval settings.
	OrganizationId string                                      `pulumi:"organizationId"`
	Timeouts       *OrganizationAccessApprovalSettingsTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a OrganizationAccessApprovalSettings resource.
type OrganizationAccessApprovalSettingsArgs struct {
	// The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a
	// Google-managed key should be used for signing.
	ActiveKeyVersion pulumi.StringPtrInput
	// A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the
	// resource given by name against any of these services contained here will be required to have explicit approval.
	// Enrollment can be done for individual services. A maximum of 10 enrolled services will be enforced, to be expanded as
	// the set of supported services is expanded.
	EnrolledServices OrganizationAccessApprovalSettingsEnrolledServiceArrayInput
	// A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to
	// a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email
	// addresses are allowed.
	NotificationEmails                   pulumi.StringArrayInput
	OrganizationAccessApprovalSettingsId pulumi.StringPtrInput
	// ID of the organization of the access approval settings.
	OrganizationId pulumi.StringInput
	Timeouts       OrganizationAccessApprovalSettingsTimeoutsPtrInput
}

func (OrganizationAccessApprovalSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationAccessApprovalSettingsArgs)(nil)).Elem()
}

type OrganizationAccessApprovalSettingsInput interface {
	pulumi.Input

	ToOrganizationAccessApprovalSettingsOutput() OrganizationAccessApprovalSettingsOutput
	ToOrganizationAccessApprovalSettingsOutputWithContext(ctx context.Context) OrganizationAccessApprovalSettingsOutput
}

func (*OrganizationAccessApprovalSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationAccessApprovalSettings)(nil)).Elem()
}

func (i *OrganizationAccessApprovalSettings) ToOrganizationAccessApprovalSettingsOutput() OrganizationAccessApprovalSettingsOutput {
	return i.ToOrganizationAccessApprovalSettingsOutputWithContext(context.Background())
}

func (i *OrganizationAccessApprovalSettings) ToOrganizationAccessApprovalSettingsOutputWithContext(ctx context.Context) OrganizationAccessApprovalSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAccessApprovalSettingsOutput)
}

type OrganizationAccessApprovalSettingsOutput struct{ *pulumi.OutputState }

func (OrganizationAccessApprovalSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationAccessApprovalSettings)(nil)).Elem()
}

func (o OrganizationAccessApprovalSettingsOutput) ToOrganizationAccessApprovalSettingsOutput() OrganizationAccessApprovalSettingsOutput {
	return o
}

func (o OrganizationAccessApprovalSettingsOutput) ToOrganizationAccessApprovalSettingsOutputWithContext(ctx context.Context) OrganizationAccessApprovalSettingsOutput {
	return o
}

// The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a
// Google-managed key should be used for signing.
func (o OrganizationAccessApprovalSettingsOutput) ActiveKeyVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) pulumi.StringPtrOutput { return v.ActiveKeyVersion }).(pulumi.StringPtrOutput)
}

// This field will always be unset for the organization since organizations do not have ancestors.
func (o OrganizationAccessApprovalSettingsOutput) AncestorHasActiveKeyVersion() pulumi.BoolOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) pulumi.BoolOutput { return v.AncestorHasActiveKeyVersion }).(pulumi.BoolOutput)
}

// This field will always be unset for the organization since organizations do not have ancestors.
func (o OrganizationAccessApprovalSettingsOutput) EnrolledAncestor() pulumi.BoolOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) pulumi.BoolOutput { return v.EnrolledAncestor }).(pulumi.BoolOutput)
}

// A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the
// resource given by name against any of these services contained here will be required to have explicit approval.
// Enrollment can be done for individual services. A maximum of 10 enrolled services will be enforced, to be expanded as
// the set of supported services is expanded.
func (o OrganizationAccessApprovalSettingsOutput) EnrolledServices() OrganizationAccessApprovalSettingsEnrolledServiceArrayOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) OrganizationAccessApprovalSettingsEnrolledServiceArrayOutput {
		return v.EnrolledServices
	}).(OrganizationAccessApprovalSettingsEnrolledServiceArrayOutput)
}

// If the field is true, that indicates that there is some configuration issue with the active_key_version configured on
// this Organization (e.g. it doesn't exist or the Access Approval service account doesn't have the correct permissions on
// it, etc.).
func (o OrganizationAccessApprovalSettingsOutput) InvalidKeyVersion() pulumi.BoolOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) pulumi.BoolOutput { return v.InvalidKeyVersion }).(pulumi.BoolOutput)
}

// The resource name of the settings. Format is "organizations/{organization_id}/accessApprovalSettings"
func (o OrganizationAccessApprovalSettingsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to
// a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email
// addresses are allowed.
func (o OrganizationAccessApprovalSettingsOutput) NotificationEmails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) pulumi.StringArrayOutput { return v.NotificationEmails }).(pulumi.StringArrayOutput)
}

func (o OrganizationAccessApprovalSettingsOutput) OrganizationAccessApprovalSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) pulumi.StringOutput {
		return v.OrganizationAccessApprovalSettingsId
	}).(pulumi.StringOutput)
}

// ID of the organization of the access approval settings.
func (o OrganizationAccessApprovalSettingsOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o OrganizationAccessApprovalSettingsOutput) Timeouts() OrganizationAccessApprovalSettingsTimeoutsPtrOutput {
	return o.ApplyT(func(v *OrganizationAccessApprovalSettings) OrganizationAccessApprovalSettingsTimeoutsPtrOutput {
		return v.Timeouts
	}).(OrganizationAccessApprovalSettingsTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationAccessApprovalSettingsInput)(nil)).Elem(), &OrganizationAccessApprovalSettings{})
	pulumi.RegisterOutputType(OrganizationAccessApprovalSettingsOutput{})
}
