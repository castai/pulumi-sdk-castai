// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSourcerepoRepository(ctx *pulumi.Context, args *LookupSourcerepoRepositoryArgs, opts ...pulumi.InvokeOption) (*LookupSourcerepoRepositoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupSourcerepoRepositoryResult
	err = ctx.InvokePackage("google-beta:index/getSourcerepoRepository:getSourcerepoRepository", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSourcerepoRepository.
type LookupSourcerepoRepositoryArgs struct {
	Id      *string `pulumi:"id"`
	Name    string  `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// A collection of values returned by getSourcerepoRepository.
type LookupSourcerepoRepositoryResult struct {
	CreateIgnoreAlreadyExists bool                                  `pulumi:"createIgnoreAlreadyExists"`
	Id                        string                                `pulumi:"id"`
	Name                      string                                `pulumi:"name"`
	Project                   *string                               `pulumi:"project"`
	PubsubConfigs             []GetSourcerepoRepositoryPubsubConfig `pulumi:"pubsubConfigs"`
	Size                      float64                               `pulumi:"size"`
	Url                       string                                `pulumi:"url"`
}

func LookupSourcerepoRepositoryOutput(ctx *pulumi.Context, args LookupSourcerepoRepositoryOutputArgs, opts ...pulumi.InvokeOption) LookupSourcerepoRepositoryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSourcerepoRepositoryResultOutput, error) {
			args := v.(LookupSourcerepoRepositoryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupSourcerepoRepositoryResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getSourcerepoRepository:getSourcerepoRepository", args, LookupSourcerepoRepositoryResultOutput{}, options).(LookupSourcerepoRepositoryResultOutput), nil
		}).(LookupSourcerepoRepositoryResultOutput)
}

// A collection of arguments for invoking getSourcerepoRepository.
type LookupSourcerepoRepositoryOutputArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Name    pulumi.StringInput    `pulumi:"name"`
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupSourcerepoRepositoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourcerepoRepositoryArgs)(nil)).Elem()
}

// A collection of values returned by getSourcerepoRepository.
type LookupSourcerepoRepositoryResultOutput struct{ *pulumi.OutputState }

func (LookupSourcerepoRepositoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSourcerepoRepositoryResult)(nil)).Elem()
}

func (o LookupSourcerepoRepositoryResultOutput) ToLookupSourcerepoRepositoryResultOutput() LookupSourcerepoRepositoryResultOutput {
	return o
}

func (o LookupSourcerepoRepositoryResultOutput) ToLookupSourcerepoRepositoryResultOutputWithContext(ctx context.Context) LookupSourcerepoRepositoryResultOutput {
	return o
}

func (o LookupSourcerepoRepositoryResultOutput) CreateIgnoreAlreadyExists() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSourcerepoRepositoryResult) bool { return v.CreateIgnoreAlreadyExists }).(pulumi.BoolOutput)
}

func (o LookupSourcerepoRepositoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcerepoRepositoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSourcerepoRepositoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcerepoRepositoryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSourcerepoRepositoryResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSourcerepoRepositoryResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupSourcerepoRepositoryResultOutput) PubsubConfigs() GetSourcerepoRepositoryPubsubConfigArrayOutput {
	return o.ApplyT(func(v LookupSourcerepoRepositoryResult) []GetSourcerepoRepositoryPubsubConfig { return v.PubsubConfigs }).(GetSourcerepoRepositoryPubsubConfigArrayOutput)
}

func (o LookupSourcerepoRepositoryResultOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v LookupSourcerepoRepositoryResult) float64 { return v.Size }).(pulumi.Float64Output)
}

func (o LookupSourcerepoRepositoryResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSourcerepoRepositoryResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSourcerepoRepositoryResultOutput{})
}
