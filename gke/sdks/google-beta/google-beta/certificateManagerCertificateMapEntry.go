// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CertificateManagerCertificateMapEntry struct {
	pulumi.CustomResourceState

	CertificateManagerCertificateMapEntryId pulumi.StringOutput `pulumi:"certificateManagerCertificateMapEntryId"`
	// A set of Certificates defines for the given hostname. There can be defined up to fifteen certificates in each
	// Certificate Map Entry. Each certificate must match pattern projects/*/locations/*/certificates/*.
	Certificates pulumi.StringArrayOutput `pulumi:"certificates"`
	// Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A human-readable description of the resource.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com) for a set of hostnames with common
	// suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
	Hostname pulumi.StringPtrOutput `pulumi:"hostname"`
	// Set of labels associated with a Certificate Map Entry. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// A map entry that is inputted into the cetrificate map
	Map pulumi.StringOutput `pulumi:"map"`
	// A predefined matcher for particular cases, other than SNI selection
	Matcher pulumi.StringPtrOutput `pulumi:"matcher"`
	// A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern
	// 'projects/*/locations/*/certificateMaps/*/certificateMapEntries/*'
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// A serving state of this Certificate Map Entry.
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                                 `pulumi:"terraformLabels"`
	Timeouts        CertificateManagerCertificateMapEntryTimeoutsPtrOutput `pulumi:"timeouts"`
	// Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCertificateManagerCertificateMapEntry registers a new resource with the given unique name, arguments, and options.
func NewCertificateManagerCertificateMapEntry(ctx *pulumi.Context,
	name string, args *CertificateManagerCertificateMapEntryArgs, opts ...pulumi.ResourceOption) (*CertificateManagerCertificateMapEntry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Certificates == nil {
		return nil, errors.New("invalid value for required argument 'Certificates'")
	}
	if args.Map == nil {
		return nil, errors.New("invalid value for required argument 'Map'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CertificateManagerCertificateMapEntry
	err = ctx.RegisterPackageResource("google-beta:index/certificateManagerCertificateMapEntry:CertificateManagerCertificateMapEntry", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateManagerCertificateMapEntry gets an existing CertificateManagerCertificateMapEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificateManagerCertificateMapEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateManagerCertificateMapEntryState, opts ...pulumi.ResourceOption) (*CertificateManagerCertificateMapEntry, error) {
	var resource CertificateManagerCertificateMapEntry
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/certificateManagerCertificateMapEntry:CertificateManagerCertificateMapEntry", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CertificateManagerCertificateMapEntry resources.
type certificateManagerCertificateMapEntryState struct {
	CertificateManagerCertificateMapEntryId *string `pulumi:"certificateManagerCertificateMapEntryId"`
	// A set of Certificates defines for the given hostname. There can be defined up to fifteen certificates in each
	// Certificate Map Entry. Each certificate must match pattern projects/*/locations/*/certificates/*.
	Certificates []string `pulumi:"certificates"`
	// Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// A human-readable description of the resource.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com) for a set of hostnames with common
	// suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
	Hostname *string `pulumi:"hostname"`
	// Set of labels associated with a Certificate Map Entry. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// A map entry that is inputted into the cetrificate map
	Map *string `pulumi:"map"`
	// A predefined matcher for particular cases, other than SNI selection
	Matcher *string `pulumi:"matcher"`
	// A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern
	// 'projects/*/locations/*/certificateMaps/*/certificateMapEntries/*'
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// A serving state of this Certificate Map Entry.
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                              `pulumi:"terraformLabels"`
	Timeouts        *CertificateManagerCertificateMapEntryTimeouts `pulumi:"timeouts"`
	// Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
}

type CertificateManagerCertificateMapEntryState struct {
	CertificateManagerCertificateMapEntryId pulumi.StringPtrInput
	// A set of Certificates defines for the given hostname. There can be defined up to fifteen certificates in each
	// Certificate Map Entry. Each certificate must match pattern projects/*/locations/*/certificates/*.
	Certificates pulumi.StringArrayInput
	// Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// A human-readable description of the resource.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com) for a set of hostnames with common
	// suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
	Hostname pulumi.StringPtrInput
	// Set of labels associated with a Certificate Map Entry. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// A map entry that is inputted into the cetrificate map
	Map pulumi.StringPtrInput
	// A predefined matcher for particular cases, other than SNI selection
	Matcher pulumi.StringPtrInput
	// A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern
	// 'projects/*/locations/*/certificateMaps/*/certificateMapEntries/*'
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// A serving state of this Certificate Map Entry.
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        CertificateManagerCertificateMapEntryTimeoutsPtrInput
	// Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
}

func (CertificateManagerCertificateMapEntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateManagerCertificateMapEntryState)(nil)).Elem()
}

type certificateManagerCertificateMapEntryArgs struct {
	CertificateManagerCertificateMapEntryId *string `pulumi:"certificateManagerCertificateMapEntryId"`
	// A set of Certificates defines for the given hostname. There can be defined up to fifteen certificates in each
	// Certificate Map Entry. Each certificate must match pattern projects/*/locations/*/certificates/*.
	Certificates []string `pulumi:"certificates"`
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com) for a set of hostnames with common
	// suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
	Hostname *string `pulumi:"hostname"`
	// Set of labels associated with a Certificate Map Entry. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// A map entry that is inputted into the cetrificate map
	Map string `pulumi:"map"`
	// A predefined matcher for particular cases, other than SNI selection
	Matcher *string `pulumi:"matcher"`
	// A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern
	// 'projects/*/locations/*/certificateMaps/*/certificateMapEntries/*'
	Name     *string                                        `pulumi:"name"`
	Project  *string                                        `pulumi:"project"`
	Timeouts *CertificateManagerCertificateMapEntryTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CertificateManagerCertificateMapEntry resource.
type CertificateManagerCertificateMapEntryArgs struct {
	CertificateManagerCertificateMapEntryId pulumi.StringPtrInput
	// A set of Certificates defines for the given hostname. There can be defined up to fifteen certificates in each
	// Certificate Map Entry. Each certificate must match pattern projects/*/locations/*/certificates/*.
	Certificates pulumi.StringArrayInput
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com) for a set of hostnames with common
	// suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
	Hostname pulumi.StringPtrInput
	// Set of labels associated with a Certificate Map Entry. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// A map entry that is inputted into the cetrificate map
	Map pulumi.StringInput
	// A predefined matcher for particular cases, other than SNI selection
	Matcher pulumi.StringPtrInput
	// A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern
	// 'projects/*/locations/*/certificateMaps/*/certificateMapEntries/*'
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts CertificateManagerCertificateMapEntryTimeoutsPtrInput
}

func (CertificateManagerCertificateMapEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateManagerCertificateMapEntryArgs)(nil)).Elem()
}

type CertificateManagerCertificateMapEntryInput interface {
	pulumi.Input

	ToCertificateManagerCertificateMapEntryOutput() CertificateManagerCertificateMapEntryOutput
	ToCertificateManagerCertificateMapEntryOutputWithContext(ctx context.Context) CertificateManagerCertificateMapEntryOutput
}

func (*CertificateManagerCertificateMapEntry) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateManagerCertificateMapEntry)(nil)).Elem()
}

func (i *CertificateManagerCertificateMapEntry) ToCertificateManagerCertificateMapEntryOutput() CertificateManagerCertificateMapEntryOutput {
	return i.ToCertificateManagerCertificateMapEntryOutputWithContext(context.Background())
}

func (i *CertificateManagerCertificateMapEntry) ToCertificateManagerCertificateMapEntryOutputWithContext(ctx context.Context) CertificateManagerCertificateMapEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateManagerCertificateMapEntryOutput)
}

type CertificateManagerCertificateMapEntryOutput struct{ *pulumi.OutputState }

func (CertificateManagerCertificateMapEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateManagerCertificateMapEntry)(nil)).Elem()
}

func (o CertificateManagerCertificateMapEntryOutput) ToCertificateManagerCertificateMapEntryOutput() CertificateManagerCertificateMapEntryOutput {
	return o
}

func (o CertificateManagerCertificateMapEntryOutput) ToCertificateManagerCertificateMapEntryOutputWithContext(ctx context.Context) CertificateManagerCertificateMapEntryOutput {
	return o
}

func (o CertificateManagerCertificateMapEntryOutput) CertificateManagerCertificateMapEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringOutput {
		return v.CertificateManagerCertificateMapEntryId
	}).(pulumi.StringOutput)
}

// A set of Certificates defines for the given hostname. There can be defined up to fifteen certificates in each
// Certificate Map Entry. Each certificate must match pattern projects/*/locations/*/certificates/*.
func (o CertificateManagerCertificateMapEntryOutput) Certificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringArrayOutput { return v.Certificates }).(pulumi.StringArrayOutput)
}

// Creation timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o CertificateManagerCertificateMapEntryOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A human-readable description of the resource.
func (o CertificateManagerCertificateMapEntryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CertificateManagerCertificateMapEntryOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A Hostname (FQDN, e.g. example.com) or a wildcard hostname expression (*.example.com) for a set of hostnames with common
// suffix. Used as Server Name Indication (SNI) for selecting a proper certificate.
func (o CertificateManagerCertificateMapEntryOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringPtrOutput { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Set of labels associated with a Certificate Map Entry. An object containing a list of "key": value pairs. Example: {
// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o CertificateManagerCertificateMapEntryOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// A map entry that is inputted into the cetrificate map
func (o CertificateManagerCertificateMapEntryOutput) Map() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringOutput { return v.Map }).(pulumi.StringOutput)
}

// A predefined matcher for particular cases, other than SNI selection
func (o CertificateManagerCertificateMapEntryOutput) Matcher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringPtrOutput { return v.Matcher }).(pulumi.StringPtrOutput)
}

// A user-defined name of the Certificate Map Entry. Certificate Map Entry names must be unique globally and match pattern
// 'projects/*/locations/*/certificateMaps/*/certificateMapEntries/*'
func (o CertificateManagerCertificateMapEntryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CertificateManagerCertificateMapEntryOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// A serving state of this Certificate Map Entry.
func (o CertificateManagerCertificateMapEntryOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o CertificateManagerCertificateMapEntryOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o CertificateManagerCertificateMapEntryOutput) Timeouts() CertificateManagerCertificateMapEntryTimeoutsPtrOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) CertificateManagerCertificateMapEntryTimeoutsPtrOutput {
		return v.Timeouts
	}).(CertificateManagerCertificateMapEntryTimeoutsPtrOutput)
}

// Update timestamp of a Certificate Map Entry. Timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o CertificateManagerCertificateMapEntryOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMapEntry) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateManagerCertificateMapEntryInput)(nil)).Elem(), &CertificateManagerCertificateMapEntry{})
	pulumi.RegisterOutputType(CertificateManagerCertificateMapEntryOutput{})
}
