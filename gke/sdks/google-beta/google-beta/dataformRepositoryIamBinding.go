// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataformRepositoryIamBinding struct {
	pulumi.CustomResourceState

	Condition                      DataformRepositoryIamBindingConditionPtrOutput `pulumi:"condition"`
	DataformRepositoryIamBindingId pulumi.StringOutput                            `pulumi:"dataformRepositoryIamBindingId"`
	Etag                           pulumi.StringOutput                            `pulumi:"etag"`
	Members                        pulumi.StringArrayOutput                       `pulumi:"members"`
	Project                        pulumi.StringOutput                            `pulumi:"project"`
	Region                         pulumi.StringOutput                            `pulumi:"region"`
	Repository                     pulumi.StringOutput                            `pulumi:"repository"`
	Role                           pulumi.StringOutput                            `pulumi:"role"`
}

// NewDataformRepositoryIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDataformRepositoryIamBinding(ctx *pulumi.Context,
	name string, args *DataformRepositoryIamBindingArgs, opts ...pulumi.ResourceOption) (*DataformRepositoryIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Repository == nil {
		return nil, errors.New("invalid value for required argument 'Repository'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataformRepositoryIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/dataformRepositoryIamBinding:DataformRepositoryIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataformRepositoryIamBinding gets an existing DataformRepositoryIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataformRepositoryIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataformRepositoryIamBindingState, opts ...pulumi.ResourceOption) (*DataformRepositoryIamBinding, error) {
	var resource DataformRepositoryIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataformRepositoryIamBinding:DataformRepositoryIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataformRepositoryIamBinding resources.
type dataformRepositoryIamBindingState struct {
	Condition                      *DataformRepositoryIamBindingCondition `pulumi:"condition"`
	DataformRepositoryIamBindingId *string                                `pulumi:"dataformRepositoryIamBindingId"`
	Etag                           *string                                `pulumi:"etag"`
	Members                        []string                               `pulumi:"members"`
	Project                        *string                                `pulumi:"project"`
	Region                         *string                                `pulumi:"region"`
	Repository                     *string                                `pulumi:"repository"`
	Role                           *string                                `pulumi:"role"`
}

type DataformRepositoryIamBindingState struct {
	Condition                      DataformRepositoryIamBindingConditionPtrInput
	DataformRepositoryIamBindingId pulumi.StringPtrInput
	Etag                           pulumi.StringPtrInput
	Members                        pulumi.StringArrayInput
	Project                        pulumi.StringPtrInput
	Region                         pulumi.StringPtrInput
	Repository                     pulumi.StringPtrInput
	Role                           pulumi.StringPtrInput
}

func (DataformRepositoryIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataformRepositoryIamBindingState)(nil)).Elem()
}

type dataformRepositoryIamBindingArgs struct {
	Condition                      *DataformRepositoryIamBindingCondition `pulumi:"condition"`
	DataformRepositoryIamBindingId *string                                `pulumi:"dataformRepositoryIamBindingId"`
	Members                        []string                               `pulumi:"members"`
	Project                        *string                                `pulumi:"project"`
	Region                         *string                                `pulumi:"region"`
	Repository                     string                                 `pulumi:"repository"`
	Role                           string                                 `pulumi:"role"`
}

// The set of arguments for constructing a DataformRepositoryIamBinding resource.
type DataformRepositoryIamBindingArgs struct {
	Condition                      DataformRepositoryIamBindingConditionPtrInput
	DataformRepositoryIamBindingId pulumi.StringPtrInput
	Members                        pulumi.StringArrayInput
	Project                        pulumi.StringPtrInput
	Region                         pulumi.StringPtrInput
	Repository                     pulumi.StringInput
	Role                           pulumi.StringInput
}

func (DataformRepositoryIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataformRepositoryIamBindingArgs)(nil)).Elem()
}

type DataformRepositoryIamBindingInput interface {
	pulumi.Input

	ToDataformRepositoryIamBindingOutput() DataformRepositoryIamBindingOutput
	ToDataformRepositoryIamBindingOutputWithContext(ctx context.Context) DataformRepositoryIamBindingOutput
}

func (*DataformRepositoryIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DataformRepositoryIamBinding)(nil)).Elem()
}

func (i *DataformRepositoryIamBinding) ToDataformRepositoryIamBindingOutput() DataformRepositoryIamBindingOutput {
	return i.ToDataformRepositoryIamBindingOutputWithContext(context.Background())
}

func (i *DataformRepositoryIamBinding) ToDataformRepositoryIamBindingOutputWithContext(ctx context.Context) DataformRepositoryIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataformRepositoryIamBindingOutput)
}

type DataformRepositoryIamBindingOutput struct{ *pulumi.OutputState }

func (DataformRepositoryIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataformRepositoryIamBinding)(nil)).Elem()
}

func (o DataformRepositoryIamBindingOutput) ToDataformRepositoryIamBindingOutput() DataformRepositoryIamBindingOutput {
	return o
}

func (o DataformRepositoryIamBindingOutput) ToDataformRepositoryIamBindingOutputWithContext(ctx context.Context) DataformRepositoryIamBindingOutput {
	return o
}

func (o DataformRepositoryIamBindingOutput) Condition() DataformRepositoryIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DataformRepositoryIamBinding) DataformRepositoryIamBindingConditionPtrOutput {
		return v.Condition
	}).(DataformRepositoryIamBindingConditionPtrOutput)
}

func (o DataformRepositoryIamBindingOutput) DataformRepositoryIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamBinding) pulumi.StringOutput { return v.DataformRepositoryIamBindingId }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataformRepositoryIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DataformRepositoryIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamBindingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamBinding) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamBindingOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamBinding) pulumi.StringOutput { return v.Repository }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataformRepositoryIamBindingInput)(nil)).Elem(), &DataformRepositoryIamBinding{})
	pulumi.RegisterOutputType(DataformRepositoryIamBindingOutput{})
}
