// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CertificateManagerCertificateMap struct {
	pulumi.CustomResourceState

	CertificateManagerCertificateMapId pulumi.StringOutput `pulumi:"certificateManagerCertificateMapId"`
	// Creation timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format, accurate to nanoseconds with up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A human-readable description of the resource.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A list of target proxies that use this Certificate Map
	GclbTargets CertificateManagerCertificateMapGclbTargetArrayOutput `pulumi:"gclbTargets"`
	// Set of labels associated with a Certificate Map resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match the pattern
	// 'projects/*/locations/*/certificateMaps/*'.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                            `pulumi:"terraformLabels"`
	Timeouts        CertificateManagerCertificateMapTimeoutsPtrOutput `pulumi:"timeouts"`
	// Update timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format, accurate to nanoseconds with up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCertificateManagerCertificateMap registers a new resource with the given unique name, arguments, and options.
func NewCertificateManagerCertificateMap(ctx *pulumi.Context,
	name string, args *CertificateManagerCertificateMapArgs, opts ...pulumi.ResourceOption) (*CertificateManagerCertificateMap, error) {
	if args == nil {
		args = &CertificateManagerCertificateMapArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CertificateManagerCertificateMap
	err = ctx.RegisterPackageResource("google-beta:index/certificateManagerCertificateMap:CertificateManagerCertificateMap", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCertificateManagerCertificateMap gets an existing CertificateManagerCertificateMap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCertificateManagerCertificateMap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CertificateManagerCertificateMapState, opts ...pulumi.ResourceOption) (*CertificateManagerCertificateMap, error) {
	var resource CertificateManagerCertificateMap
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/certificateManagerCertificateMap:CertificateManagerCertificateMap", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CertificateManagerCertificateMap resources.
type certificateManagerCertificateMapState struct {
	CertificateManagerCertificateMapId *string `pulumi:"certificateManagerCertificateMapId"`
	// Creation timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format, accurate to nanoseconds with up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// A human-readable description of the resource.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// A list of target proxies that use this Certificate Map
	GclbTargets []CertificateManagerCertificateMapGclbTarget `pulumi:"gclbTargets"`
	// Set of labels associated with a Certificate Map resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match the pattern
	// 'projects/*/locations/*/certificateMaps/*'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                         `pulumi:"terraformLabels"`
	Timeouts        *CertificateManagerCertificateMapTimeouts `pulumi:"timeouts"`
	// Update timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format, accurate to nanoseconds with up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
}

type CertificateManagerCertificateMapState struct {
	CertificateManagerCertificateMapId pulumi.StringPtrInput
	// Creation timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format, accurate to nanoseconds with up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// A human-readable description of the resource.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// A list of target proxies that use this Certificate Map
	GclbTargets CertificateManagerCertificateMapGclbTargetArrayInput
	// Set of labels associated with a Certificate Map resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match the pattern
	// 'projects/*/locations/*/certificateMaps/*'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        CertificateManagerCertificateMapTimeoutsPtrInput
	// Update timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format, accurate to nanoseconds with up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
}

func (CertificateManagerCertificateMapState) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateManagerCertificateMapState)(nil)).Elem()
}

type certificateManagerCertificateMapArgs struct {
	CertificateManagerCertificateMapId *string `pulumi:"certificateManagerCertificateMapId"`
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// Set of labels associated with a Certificate Map resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match the pattern
	// 'projects/*/locations/*/certificateMaps/*'.
	Name     *string                                   `pulumi:"name"`
	Project  *string                                   `pulumi:"project"`
	Timeouts *CertificateManagerCertificateMapTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CertificateManagerCertificateMap resource.
type CertificateManagerCertificateMapArgs struct {
	CertificateManagerCertificateMapId pulumi.StringPtrInput
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// Set of labels associated with a Certificate Map resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match the pattern
	// 'projects/*/locations/*/certificateMaps/*'.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts CertificateManagerCertificateMapTimeoutsPtrInput
}

func (CertificateManagerCertificateMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*certificateManagerCertificateMapArgs)(nil)).Elem()
}

type CertificateManagerCertificateMapInput interface {
	pulumi.Input

	ToCertificateManagerCertificateMapOutput() CertificateManagerCertificateMapOutput
	ToCertificateManagerCertificateMapOutputWithContext(ctx context.Context) CertificateManagerCertificateMapOutput
}

func (*CertificateManagerCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateManagerCertificateMap)(nil)).Elem()
}

func (i *CertificateManagerCertificateMap) ToCertificateManagerCertificateMapOutput() CertificateManagerCertificateMapOutput {
	return i.ToCertificateManagerCertificateMapOutputWithContext(context.Background())
}

func (i *CertificateManagerCertificateMap) ToCertificateManagerCertificateMapOutputWithContext(ctx context.Context) CertificateManagerCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateManagerCertificateMapOutput)
}

type CertificateManagerCertificateMapOutput struct{ *pulumi.OutputState }

func (CertificateManagerCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateManagerCertificateMap)(nil)).Elem()
}

func (o CertificateManagerCertificateMapOutput) ToCertificateManagerCertificateMapOutput() CertificateManagerCertificateMapOutput {
	return o
}

func (o CertificateManagerCertificateMapOutput) ToCertificateManagerCertificateMapOutputWithContext(ctx context.Context) CertificateManagerCertificateMapOutput {
	return o
}

func (o CertificateManagerCertificateMapOutput) CertificateManagerCertificateMapId() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) pulumi.StringOutput {
		return v.CertificateManagerCertificateMapId
	}).(pulumi.StringOutput)
}

// Creation timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format, accurate to nanoseconds with up to
// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o CertificateManagerCertificateMapOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A human-readable description of the resource.
func (o CertificateManagerCertificateMapOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CertificateManagerCertificateMapOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A list of target proxies that use this Certificate Map
func (o CertificateManagerCertificateMapOutput) GclbTargets() CertificateManagerCertificateMapGclbTargetArrayOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) CertificateManagerCertificateMapGclbTargetArrayOutput {
		return v.GclbTargets
	}).(CertificateManagerCertificateMapGclbTargetArrayOutput)
}

// Set of labels associated with a Certificate Map resource. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o CertificateManagerCertificateMapOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match the pattern
// 'projects/*/locations/*/certificateMaps/*'.
func (o CertificateManagerCertificateMapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o CertificateManagerCertificateMapOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o CertificateManagerCertificateMapOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o CertificateManagerCertificateMapOutput) Timeouts() CertificateManagerCertificateMapTimeoutsPtrOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) CertificateManagerCertificateMapTimeoutsPtrOutput {
		return v.Timeouts
	}).(CertificateManagerCertificateMapTimeoutsPtrOutput)
}

// Update timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format, accurate to nanoseconds with up to
// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o CertificateManagerCertificateMapOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CertificateManagerCertificateMap) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateManagerCertificateMapInput)(nil)).Elem(), &CertificateManagerCertificateMap{})
	pulumi.RegisterOutputType(CertificateManagerCertificateMapOutput{})
}
