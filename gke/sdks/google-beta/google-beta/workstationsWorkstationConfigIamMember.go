// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkstationsWorkstationConfigIamMember struct {
	pulumi.CustomResourceState

	Condition                                WorkstationsWorkstationConfigIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                                     pulumi.StringOutput                                      `pulumi:"etag"`
	Location                                 pulumi.StringOutput                                      `pulumi:"location"`
	Member                                   pulumi.StringOutput                                      `pulumi:"member"`
	Project                                  pulumi.StringOutput                                      `pulumi:"project"`
	Role                                     pulumi.StringOutput                                      `pulumi:"role"`
	WorkstationClusterId                     pulumi.StringOutput                                      `pulumi:"workstationClusterId"`
	WorkstationConfigId                      pulumi.StringOutput                                      `pulumi:"workstationConfigId"`
	WorkstationsWorkstationConfigIamMemberId pulumi.StringOutput                                      `pulumi:"workstationsWorkstationConfigIamMemberId"`
}

// NewWorkstationsWorkstationConfigIamMember registers a new resource with the given unique name, arguments, and options.
func NewWorkstationsWorkstationConfigIamMember(ctx *pulumi.Context,
	name string, args *WorkstationsWorkstationConfigIamMemberArgs, opts ...pulumi.ResourceOption) (*WorkstationsWorkstationConfigIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.WorkstationClusterId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationClusterId'")
	}
	if args.WorkstationConfigId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationConfigId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource WorkstationsWorkstationConfigIamMember
	err = ctx.RegisterPackageResource("google-beta:index/workstationsWorkstationConfigIamMember:WorkstationsWorkstationConfigIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkstationsWorkstationConfigIamMember gets an existing WorkstationsWorkstationConfigIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkstationsWorkstationConfigIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkstationsWorkstationConfigIamMemberState, opts ...pulumi.ResourceOption) (*WorkstationsWorkstationConfigIamMember, error) {
	var resource WorkstationsWorkstationConfigIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/workstationsWorkstationConfigIamMember:WorkstationsWorkstationConfigIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkstationsWorkstationConfigIamMember resources.
type workstationsWorkstationConfigIamMemberState struct {
	Condition                                *WorkstationsWorkstationConfigIamMemberCondition `pulumi:"condition"`
	Etag                                     *string                                          `pulumi:"etag"`
	Location                                 *string                                          `pulumi:"location"`
	Member                                   *string                                          `pulumi:"member"`
	Project                                  *string                                          `pulumi:"project"`
	Role                                     *string                                          `pulumi:"role"`
	WorkstationClusterId                     *string                                          `pulumi:"workstationClusterId"`
	WorkstationConfigId                      *string                                          `pulumi:"workstationConfigId"`
	WorkstationsWorkstationConfigIamMemberId *string                                          `pulumi:"workstationsWorkstationConfigIamMemberId"`
}

type WorkstationsWorkstationConfigIamMemberState struct {
	Condition                                WorkstationsWorkstationConfigIamMemberConditionPtrInput
	Etag                                     pulumi.StringPtrInput
	Location                                 pulumi.StringPtrInput
	Member                                   pulumi.StringPtrInput
	Project                                  pulumi.StringPtrInput
	Role                                     pulumi.StringPtrInput
	WorkstationClusterId                     pulumi.StringPtrInput
	WorkstationConfigId                      pulumi.StringPtrInput
	WorkstationsWorkstationConfigIamMemberId pulumi.StringPtrInput
}

func (WorkstationsWorkstationConfigIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*workstationsWorkstationConfigIamMemberState)(nil)).Elem()
}

type workstationsWorkstationConfigIamMemberArgs struct {
	Condition                                *WorkstationsWorkstationConfigIamMemberCondition `pulumi:"condition"`
	Location                                 *string                                          `pulumi:"location"`
	Member                                   string                                           `pulumi:"member"`
	Project                                  *string                                          `pulumi:"project"`
	Role                                     string                                           `pulumi:"role"`
	WorkstationClusterId                     string                                           `pulumi:"workstationClusterId"`
	WorkstationConfigId                      string                                           `pulumi:"workstationConfigId"`
	WorkstationsWorkstationConfigIamMemberId *string                                          `pulumi:"workstationsWorkstationConfigIamMemberId"`
}

// The set of arguments for constructing a WorkstationsWorkstationConfigIamMember resource.
type WorkstationsWorkstationConfigIamMemberArgs struct {
	Condition                                WorkstationsWorkstationConfigIamMemberConditionPtrInput
	Location                                 pulumi.StringPtrInput
	Member                                   pulumi.StringInput
	Project                                  pulumi.StringPtrInput
	Role                                     pulumi.StringInput
	WorkstationClusterId                     pulumi.StringInput
	WorkstationConfigId                      pulumi.StringInput
	WorkstationsWorkstationConfigIamMemberId pulumi.StringPtrInput
}

func (WorkstationsWorkstationConfigIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workstationsWorkstationConfigIamMemberArgs)(nil)).Elem()
}

type WorkstationsWorkstationConfigIamMemberInput interface {
	pulumi.Input

	ToWorkstationsWorkstationConfigIamMemberOutput() WorkstationsWorkstationConfigIamMemberOutput
	ToWorkstationsWorkstationConfigIamMemberOutputWithContext(ctx context.Context) WorkstationsWorkstationConfigIamMemberOutput
}

func (*WorkstationsWorkstationConfigIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkstationsWorkstationConfigIamMember)(nil)).Elem()
}

func (i *WorkstationsWorkstationConfigIamMember) ToWorkstationsWorkstationConfigIamMemberOutput() WorkstationsWorkstationConfigIamMemberOutput {
	return i.ToWorkstationsWorkstationConfigIamMemberOutputWithContext(context.Background())
}

func (i *WorkstationsWorkstationConfigIamMember) ToWorkstationsWorkstationConfigIamMemberOutputWithContext(ctx context.Context) WorkstationsWorkstationConfigIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkstationsWorkstationConfigIamMemberOutput)
}

type WorkstationsWorkstationConfigIamMemberOutput struct{ *pulumi.OutputState }

func (WorkstationsWorkstationConfigIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkstationsWorkstationConfigIamMember)(nil)).Elem()
}

func (o WorkstationsWorkstationConfigIamMemberOutput) ToWorkstationsWorkstationConfigIamMemberOutput() WorkstationsWorkstationConfigIamMemberOutput {
	return o
}

func (o WorkstationsWorkstationConfigIamMemberOutput) ToWorkstationsWorkstationConfigIamMemberOutputWithContext(ctx context.Context) WorkstationsWorkstationConfigIamMemberOutput {
	return o
}

func (o WorkstationsWorkstationConfigIamMemberOutput) Condition() WorkstationsWorkstationConfigIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfigIamMember) WorkstationsWorkstationConfigIamMemberConditionPtrOutput {
		return v.Condition
	}).(WorkstationsWorkstationConfigIamMemberConditionPtrOutput)
}

func (o WorkstationsWorkstationConfigIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfigIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationConfigIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfigIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationConfigIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfigIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationConfigIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfigIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationConfigIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfigIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationConfigIamMemberOutput) WorkstationClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfigIamMember) pulumi.StringOutput { return v.WorkstationClusterId }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationConfigIamMemberOutput) WorkstationConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfigIamMember) pulumi.StringOutput { return v.WorkstationConfigId }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationConfigIamMemberOutput) WorkstationsWorkstationConfigIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfigIamMember) pulumi.StringOutput {
		return v.WorkstationsWorkstationConfigIamMemberId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkstationsWorkstationConfigIamMemberInput)(nil)).Elem(), &WorkstationsWorkstationConfigIamMember{})
	pulumi.RegisterOutputType(WorkstationsWorkstationConfigIamMemberOutput{})
}
