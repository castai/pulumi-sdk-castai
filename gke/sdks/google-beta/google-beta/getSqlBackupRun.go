// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSqlBackupRun(ctx *pulumi.Context, args *GetSqlBackupRunArgs, opts ...pulumi.InvokeOption) (*GetSqlBackupRunResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetSqlBackupRunResult
	err = ctx.InvokePackage("google-beta:index/getSqlBackupRun:getSqlBackupRun", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlBackupRun.
type GetSqlBackupRunArgs struct {
	BackupId   *float64 `pulumi:"backupId"`
	Id         *string  `pulumi:"id"`
	Instance   string   `pulumi:"instance"`
	MostRecent *bool    `pulumi:"mostRecent"`
	Project    *string  `pulumi:"project"`
}

// A collection of values returned by getSqlBackupRun.
type GetSqlBackupRunResult struct {
	BackupId   float64 `pulumi:"backupId"`
	Id         string  `pulumi:"id"`
	Instance   string  `pulumi:"instance"`
	Location   string  `pulumi:"location"`
	MostRecent *bool   `pulumi:"mostRecent"`
	Project    string  `pulumi:"project"`
	StartTime  string  `pulumi:"startTime"`
	Status     string  `pulumi:"status"`
}

func GetSqlBackupRunOutput(ctx *pulumi.Context, args GetSqlBackupRunOutputArgs, opts ...pulumi.InvokeOption) GetSqlBackupRunResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSqlBackupRunResultOutput, error) {
			args := v.(GetSqlBackupRunArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetSqlBackupRunResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getSqlBackupRun:getSqlBackupRun", args, GetSqlBackupRunResultOutput{}, options).(GetSqlBackupRunResultOutput), nil
		}).(GetSqlBackupRunResultOutput)
}

// A collection of arguments for invoking getSqlBackupRun.
type GetSqlBackupRunOutputArgs struct {
	BackupId   pulumi.Float64PtrInput `pulumi:"backupId"`
	Id         pulumi.StringPtrInput  `pulumi:"id"`
	Instance   pulumi.StringInput     `pulumi:"instance"`
	MostRecent pulumi.BoolPtrInput    `pulumi:"mostRecent"`
	Project    pulumi.StringPtrInput  `pulumi:"project"`
}

func (GetSqlBackupRunOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlBackupRunArgs)(nil)).Elem()
}

// A collection of values returned by getSqlBackupRun.
type GetSqlBackupRunResultOutput struct{ *pulumi.OutputState }

func (GetSqlBackupRunResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlBackupRunResult)(nil)).Elem()
}

func (o GetSqlBackupRunResultOutput) ToGetSqlBackupRunResultOutput() GetSqlBackupRunResultOutput {
	return o
}

func (o GetSqlBackupRunResultOutput) ToGetSqlBackupRunResultOutputWithContext(ctx context.Context) GetSqlBackupRunResultOutput {
	return o
}

func (o GetSqlBackupRunResultOutput) BackupId() pulumi.Float64Output {
	return o.ApplyT(func(v GetSqlBackupRunResult) float64 { return v.BackupId }).(pulumi.Float64Output)
}

func (o GetSqlBackupRunResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlBackupRunResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSqlBackupRunResultOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlBackupRunResult) string { return v.Instance }).(pulumi.StringOutput)
}

func (o GetSqlBackupRunResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlBackupRunResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetSqlBackupRunResultOutput) MostRecent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSqlBackupRunResult) *bool { return v.MostRecent }).(pulumi.BoolPtrOutput)
}

func (o GetSqlBackupRunResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlBackupRunResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetSqlBackupRunResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlBackupRunResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func (o GetSqlBackupRunResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlBackupRunResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlBackupRunResultOutput{})
}
