// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BackupDrBackupVault struct {
	pulumi.CustomResourceState

	// Access restriction for the backup vault. Default value is 'WITHIN_ORGANIZATION' if not provided during creation. Default
	// value: "WITHIN_ORGANIZATION" Possible values: ["ACCESS_RESTRICTION_UNSPECIFIED", "WITHIN_PROJECT",
	// "WITHIN_ORGANIZATION", "UNRESTRICTED", "WITHIN_ORG_BUT_UNRESTRICTED_FOR_BA"]
	AccessRestriction pulumi.StringPtrOutput `pulumi:"accessRestriction"`
	// Allow idempotent deletion of backup vault. The request will still succeed in case the backup vault does not exist.
	AllowMissing pulumi.BoolPtrOutput `pulumi:"allowMissing"`
	// Optional. User annotations. See https://google.aip.dev/128#annotations Stores small amounts of arbitrary data. **Note**:
	// This field is non-authoritative, and will only manage the annotations present in your configuration. Please refer to the
	// field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Output only. The number of backups in this backup vault.
	BackupCount           pulumi.StringOutput `pulumi:"backupCount"`
	BackupDrBackupVaultId pulumi.StringOutput `pulumi:"backupDrBackupVaultId"`
	// Required. The default and minimum enforced retention for each backup within the backup vault. The enforced retention for
	// each backup can be extended.
	BackupMinimumEnforcedRetentionDuration pulumi.StringOutput `pulumi:"backupMinimumEnforcedRetentionDuration"`
	// Required. ID of the requesting object.
	BackupVaultId pulumi.StringOutput `pulumi:"backupVaultId"`
	// Output only. The time when the instance was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Output only. Set to true when there are no backups nested under this resource.
	Deletable pulumi.BoolOutput `pulumi:"deletable"`
	// Optional. The description of the BackupVault instance (2048 characters or less).
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. Time after which the BackupVault resource is locked.
	EffectiveTime pulumi.StringPtrOutput `pulumi:"effectiveTime"`
	// Optional. Server specified ETag for the backup vault resource to prevent simultaneous updates from overwiting each
	// other.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources. * deletion of a backup vault
	// instance that is being referenced by an active backup plan.
	//
	// Deprecated: Deprecated
	ForceDelete pulumi.BoolPtrOutput `pulumi:"forceDelete"`
	// If set, allow update to extend the minimum enforced retention for backup vault. This overrides the restriction against
	// conflicting retention periods. This conflict may occur when the expiration schedule defined by the associated backup
	// plan is shorter than the minimum retention set by the backup vault.
	ForceUpdate pulumi.BoolPtrOutput `pulumi:"forceUpdate"`
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance that is being referenced by an active backup plan.
	IgnoreBackupPlanReferences pulumi.BoolPtrOutput `pulumi:"ignoreBackupPlanReferences"`
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources.
	IgnoreInactiveDatasources pulumi.BoolPtrOutput `pulumi:"ignoreInactiveDatasources"`
	// Optional. Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The GCP location for the backup vault.
	Location pulumi.StringOutput `pulumi:"location"`
	// Output only. Identifier. The resource name.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Output only. Service account used by the BackupVault Service for this BackupVault. The user should grant this account
	// permissions in their workload project to enable the service to run backups and restores there.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// Output only. The BackupVault resource instance state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING ERROR
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput               `pulumi:"terraformLabels"`
	Timeouts        BackupDrBackupVaultTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. Total size of the storage used by all backup resources.
	TotalStoredBytes pulumi.StringOutput `pulumi:"totalStoredBytes"`
	// Output only. Output only Immutable after resource creation until resource deletion.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. The time when the instance was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewBackupDrBackupVault registers a new resource with the given unique name, arguments, and options.
func NewBackupDrBackupVault(ctx *pulumi.Context,
	name string, args *BackupDrBackupVaultArgs, opts ...pulumi.ResourceOption) (*BackupDrBackupVault, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupMinimumEnforcedRetentionDuration == nil {
		return nil, errors.New("invalid value for required argument 'BackupMinimumEnforcedRetentionDuration'")
	}
	if args.BackupVaultId == nil {
		return nil, errors.New("invalid value for required argument 'BackupVaultId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BackupDrBackupVault
	err = ctx.RegisterPackageResource("google-beta:index/backupDrBackupVault:BackupDrBackupVault", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupDrBackupVault gets an existing BackupDrBackupVault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupDrBackupVault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupDrBackupVaultState, opts ...pulumi.ResourceOption) (*BackupDrBackupVault, error) {
	var resource BackupDrBackupVault
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/backupDrBackupVault:BackupDrBackupVault", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupDrBackupVault resources.
type backupDrBackupVaultState struct {
	// Access restriction for the backup vault. Default value is 'WITHIN_ORGANIZATION' if not provided during creation. Default
	// value: "WITHIN_ORGANIZATION" Possible values: ["ACCESS_RESTRICTION_UNSPECIFIED", "WITHIN_PROJECT",
	// "WITHIN_ORGANIZATION", "UNRESTRICTED", "WITHIN_ORG_BUT_UNRESTRICTED_FOR_BA"]
	AccessRestriction *string `pulumi:"accessRestriction"`
	// Allow idempotent deletion of backup vault. The request will still succeed in case the backup vault does not exist.
	AllowMissing *bool `pulumi:"allowMissing"`
	// Optional. User annotations. See https://google.aip.dev/128#annotations Stores small amounts of arbitrary data. **Note**:
	// This field is non-authoritative, and will only manage the annotations present in your configuration. Please refer to the
	// field 'effective_annotations' for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Output only. The number of backups in this backup vault.
	BackupCount           *string `pulumi:"backupCount"`
	BackupDrBackupVaultId *string `pulumi:"backupDrBackupVaultId"`
	// Required. The default and minimum enforced retention for each backup within the backup vault. The enforced retention for
	// each backup can be extended.
	BackupMinimumEnforcedRetentionDuration *string `pulumi:"backupMinimumEnforcedRetentionDuration"`
	// Required. ID of the requesting object.
	BackupVaultId *string `pulumi:"backupVaultId"`
	// Output only. The time when the instance was created.
	CreateTime *string `pulumi:"createTime"`
	// Output only. Set to true when there are no backups nested under this resource.
	Deletable *bool `pulumi:"deletable"`
	// Optional. The description of the BackupVault instance (2048 characters or less).
	Description          *string           `pulumi:"description"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// Optional. Time after which the BackupVault resource is locked.
	EffectiveTime *string `pulumi:"effectiveTime"`
	// Optional. Server specified ETag for the backup vault resource to prevent simultaneous updates from overwiting each
	// other.
	Etag *string `pulumi:"etag"`
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources. * deletion of a backup vault
	// instance that is being referenced by an active backup plan.
	//
	// Deprecated: Deprecated
	ForceDelete *bool `pulumi:"forceDelete"`
	// If set, allow update to extend the minimum enforced retention for backup vault. This overrides the restriction against
	// conflicting retention periods. This conflict may occur when the expiration schedule defined by the associated backup
	// plan is shorter than the minimum retention set by the backup vault.
	ForceUpdate *bool `pulumi:"forceUpdate"`
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance that is being referenced by an active backup plan.
	IgnoreBackupPlanReferences *bool `pulumi:"ignoreBackupPlanReferences"`
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources.
	IgnoreInactiveDatasources *bool `pulumi:"ignoreInactiveDatasources"`
	// Optional. Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The GCP location for the backup vault.
	Location *string `pulumi:"location"`
	// Output only. Identifier. The resource name.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Output only. Service account used by the BackupVault Service for this BackupVault. The user should grant this account
	// permissions in their workload project to enable the service to run backups and restores there.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Output only. The BackupVault resource instance state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING ERROR
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string            `pulumi:"terraformLabels"`
	Timeouts        *BackupDrBackupVaultTimeouts `pulumi:"timeouts"`
	// Output only. Total size of the storage used by all backup resources.
	TotalStoredBytes *string `pulumi:"totalStoredBytes"`
	// Output only. Output only Immutable after resource creation until resource deletion.
	Uid *string `pulumi:"uid"`
	// Output only. The time when the instance was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type BackupDrBackupVaultState struct {
	// Access restriction for the backup vault. Default value is 'WITHIN_ORGANIZATION' if not provided during creation. Default
	// value: "WITHIN_ORGANIZATION" Possible values: ["ACCESS_RESTRICTION_UNSPECIFIED", "WITHIN_PROJECT",
	// "WITHIN_ORGANIZATION", "UNRESTRICTED", "WITHIN_ORG_BUT_UNRESTRICTED_FOR_BA"]
	AccessRestriction pulumi.StringPtrInput
	// Allow idempotent deletion of backup vault. The request will still succeed in case the backup vault does not exist.
	AllowMissing pulumi.BoolPtrInput
	// Optional. User annotations. See https://google.aip.dev/128#annotations Stores small amounts of arbitrary data. **Note**:
	// This field is non-authoritative, and will only manage the annotations present in your configuration. Please refer to the
	// field 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Output only. The number of backups in this backup vault.
	BackupCount           pulumi.StringPtrInput
	BackupDrBackupVaultId pulumi.StringPtrInput
	// Required. The default and minimum enforced retention for each backup within the backup vault. The enforced retention for
	// each backup can be extended.
	BackupMinimumEnforcedRetentionDuration pulumi.StringPtrInput
	// Required. ID of the requesting object.
	BackupVaultId pulumi.StringPtrInput
	// Output only. The time when the instance was created.
	CreateTime pulumi.StringPtrInput
	// Output only. Set to true when there are no backups nested under this resource.
	Deletable pulumi.BoolPtrInput
	// Optional. The description of the BackupVault instance (2048 characters or less).
	Description          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// Optional. Time after which the BackupVault resource is locked.
	EffectiveTime pulumi.StringPtrInput
	// Optional. Server specified ETag for the backup vault resource to prevent simultaneous updates from overwiting each
	// other.
	Etag pulumi.StringPtrInput
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources. * deletion of a backup vault
	// instance that is being referenced by an active backup plan.
	//
	// Deprecated: Deprecated
	ForceDelete pulumi.BoolPtrInput
	// If set, allow update to extend the minimum enforced retention for backup vault. This overrides the restriction against
	// conflicting retention periods. This conflict may occur when the expiration schedule defined by the associated backup
	// plan is shorter than the minimum retention set by the backup vault.
	ForceUpdate pulumi.BoolPtrInput
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance that is being referenced by an active backup plan.
	IgnoreBackupPlanReferences pulumi.BoolPtrInput
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources.
	IgnoreInactiveDatasources pulumi.BoolPtrInput
	// Optional. Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The GCP location for the backup vault.
	Location pulumi.StringPtrInput
	// Output only. Identifier. The resource name.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Output only. Service account used by the BackupVault Service for this BackupVault. The user should grant this account
	// permissions in their workload project to enable the service to run backups and restores there.
	ServiceAccount pulumi.StringPtrInput
	// Output only. The BackupVault resource instance state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING ERROR
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        BackupDrBackupVaultTimeoutsPtrInput
	// Output only. Total size of the storage used by all backup resources.
	TotalStoredBytes pulumi.StringPtrInput
	// Output only. Output only Immutable after resource creation until resource deletion.
	Uid pulumi.StringPtrInput
	// Output only. The time when the instance was updated.
	UpdateTime pulumi.StringPtrInput
}

func (BackupDrBackupVaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupDrBackupVaultState)(nil)).Elem()
}

type backupDrBackupVaultArgs struct {
	// Access restriction for the backup vault. Default value is 'WITHIN_ORGANIZATION' if not provided during creation. Default
	// value: "WITHIN_ORGANIZATION" Possible values: ["ACCESS_RESTRICTION_UNSPECIFIED", "WITHIN_PROJECT",
	// "WITHIN_ORGANIZATION", "UNRESTRICTED", "WITHIN_ORG_BUT_UNRESTRICTED_FOR_BA"]
	AccessRestriction *string `pulumi:"accessRestriction"`
	// Allow idempotent deletion of backup vault. The request will still succeed in case the backup vault does not exist.
	AllowMissing *bool `pulumi:"allowMissing"`
	// Optional. User annotations. See https://google.aip.dev/128#annotations Stores small amounts of arbitrary data. **Note**:
	// This field is non-authoritative, and will only manage the annotations present in your configuration. Please refer to the
	// field 'effective_annotations' for all of the annotations present on the resource.
	Annotations           map[string]string `pulumi:"annotations"`
	BackupDrBackupVaultId *string           `pulumi:"backupDrBackupVaultId"`
	// Required. The default and minimum enforced retention for each backup within the backup vault. The enforced retention for
	// each backup can be extended.
	BackupMinimumEnforcedRetentionDuration string `pulumi:"backupMinimumEnforcedRetentionDuration"`
	// Required. ID of the requesting object.
	BackupVaultId string `pulumi:"backupVaultId"`
	// Optional. The description of the BackupVault instance (2048 characters or less).
	Description *string `pulumi:"description"`
	// Optional. Time after which the BackupVault resource is locked.
	EffectiveTime *string `pulumi:"effectiveTime"`
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources. * deletion of a backup vault
	// instance that is being referenced by an active backup plan.
	//
	// Deprecated: Deprecated
	ForceDelete *bool `pulumi:"forceDelete"`
	// If set, allow update to extend the minimum enforced retention for backup vault. This overrides the restriction against
	// conflicting retention periods. This conflict may occur when the expiration schedule defined by the associated backup
	// plan is shorter than the minimum retention set by the backup vault.
	ForceUpdate *bool `pulumi:"forceUpdate"`
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance that is being referenced by an active backup plan.
	IgnoreBackupPlanReferences *bool `pulumi:"ignoreBackupPlanReferences"`
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources.
	IgnoreInactiveDatasources *bool `pulumi:"ignoreInactiveDatasources"`
	// Optional. Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The GCP location for the backup vault.
	Location string                       `pulumi:"location"`
	Project  *string                      `pulumi:"project"`
	Timeouts *BackupDrBackupVaultTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BackupDrBackupVault resource.
type BackupDrBackupVaultArgs struct {
	// Access restriction for the backup vault. Default value is 'WITHIN_ORGANIZATION' if not provided during creation. Default
	// value: "WITHIN_ORGANIZATION" Possible values: ["ACCESS_RESTRICTION_UNSPECIFIED", "WITHIN_PROJECT",
	// "WITHIN_ORGANIZATION", "UNRESTRICTED", "WITHIN_ORG_BUT_UNRESTRICTED_FOR_BA"]
	AccessRestriction pulumi.StringPtrInput
	// Allow idempotent deletion of backup vault. The request will still succeed in case the backup vault does not exist.
	AllowMissing pulumi.BoolPtrInput
	// Optional. User annotations. See https://google.aip.dev/128#annotations Stores small amounts of arbitrary data. **Note**:
	// This field is non-authoritative, and will only manage the annotations present in your configuration. Please refer to the
	// field 'effective_annotations' for all of the annotations present on the resource.
	Annotations           pulumi.StringMapInput
	BackupDrBackupVaultId pulumi.StringPtrInput
	// Required. The default and minimum enforced retention for each backup within the backup vault. The enforced retention for
	// each backup can be extended.
	BackupMinimumEnforcedRetentionDuration pulumi.StringInput
	// Required. ID of the requesting object.
	BackupVaultId pulumi.StringInput
	// Optional. The description of the BackupVault instance (2048 characters or less).
	Description pulumi.StringPtrInput
	// Optional. Time after which the BackupVault resource is locked.
	EffectiveTime pulumi.StringPtrInput
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources. * deletion of a backup vault
	// instance that is being referenced by an active backup plan.
	//
	// Deprecated: Deprecated
	ForceDelete pulumi.BoolPtrInput
	// If set, allow update to extend the minimum enforced retention for backup vault. This overrides the restriction against
	// conflicting retention periods. This conflict may occur when the expiration schedule defined by the associated backup
	// plan is shorter than the minimum retention set by the backup vault.
	ForceUpdate pulumi.BoolPtrInput
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance that is being referenced by an active backup plan.
	IgnoreBackupPlanReferences pulumi.BoolPtrInput
	// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
	// backup vault instance containing no backups, but still containing empty datasources.
	IgnoreInactiveDatasources pulumi.BoolPtrInput
	// Optional. Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The GCP location for the backup vault.
	Location pulumi.StringInput
	Project  pulumi.StringPtrInput
	Timeouts BackupDrBackupVaultTimeoutsPtrInput
}

func (BackupDrBackupVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupDrBackupVaultArgs)(nil)).Elem()
}

type BackupDrBackupVaultInput interface {
	pulumi.Input

	ToBackupDrBackupVaultOutput() BackupDrBackupVaultOutput
	ToBackupDrBackupVaultOutputWithContext(ctx context.Context) BackupDrBackupVaultOutput
}

func (*BackupDrBackupVault) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupDrBackupVault)(nil)).Elem()
}

func (i *BackupDrBackupVault) ToBackupDrBackupVaultOutput() BackupDrBackupVaultOutput {
	return i.ToBackupDrBackupVaultOutputWithContext(context.Background())
}

func (i *BackupDrBackupVault) ToBackupDrBackupVaultOutputWithContext(ctx context.Context) BackupDrBackupVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupDrBackupVaultOutput)
}

type BackupDrBackupVaultOutput struct{ *pulumi.OutputState }

func (BackupDrBackupVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupDrBackupVault)(nil)).Elem()
}

func (o BackupDrBackupVaultOutput) ToBackupDrBackupVaultOutput() BackupDrBackupVaultOutput {
	return o
}

func (o BackupDrBackupVaultOutput) ToBackupDrBackupVaultOutputWithContext(ctx context.Context) BackupDrBackupVaultOutput {
	return o
}

// Access restriction for the backup vault. Default value is 'WITHIN_ORGANIZATION' if not provided during creation. Default
// value: "WITHIN_ORGANIZATION" Possible values: ["ACCESS_RESTRICTION_UNSPECIFIED", "WITHIN_PROJECT",
// "WITHIN_ORGANIZATION", "UNRESTRICTED", "WITHIN_ORG_BUT_UNRESTRICTED_FOR_BA"]
func (o BackupDrBackupVaultOutput) AccessRestriction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringPtrOutput { return v.AccessRestriction }).(pulumi.StringPtrOutput)
}

// Allow idempotent deletion of backup vault. The request will still succeed in case the backup vault does not exist.
func (o BackupDrBackupVaultOutput) AllowMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.BoolPtrOutput { return v.AllowMissing }).(pulumi.BoolPtrOutput)
}

// Optional. User annotations. See https://google.aip.dev/128#annotations Stores small amounts of arbitrary data. **Note**:
// This field is non-authoritative, and will only manage the annotations present in your configuration. Please refer to the
// field 'effective_annotations' for all of the annotations present on the resource.
func (o BackupDrBackupVaultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Output only. The number of backups in this backup vault.
func (o BackupDrBackupVaultOutput) BackupCount() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.BackupCount }).(pulumi.StringOutput)
}

func (o BackupDrBackupVaultOutput) BackupDrBackupVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.BackupDrBackupVaultId }).(pulumi.StringOutput)
}

// Required. The default and minimum enforced retention for each backup within the backup vault. The enforced retention for
// each backup can be extended.
func (o BackupDrBackupVaultOutput) BackupMinimumEnforcedRetentionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.BackupMinimumEnforcedRetentionDuration }).(pulumi.StringOutput)
}

// Required. ID of the requesting object.
func (o BackupDrBackupVaultOutput) BackupVaultId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.BackupVaultId }).(pulumi.StringOutput)
}

// Output only. The time when the instance was created.
func (o BackupDrBackupVaultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Output only. Set to true when there are no backups nested under this resource.
func (o BackupDrBackupVaultOutput) Deletable() pulumi.BoolOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.BoolOutput { return v.Deletable }).(pulumi.BoolOutput)
}

// Optional. The description of the BackupVault instance (2048 characters or less).
func (o BackupDrBackupVaultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BackupDrBackupVaultOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o BackupDrBackupVaultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. Time after which the BackupVault resource is locked.
func (o BackupDrBackupVaultOutput) EffectiveTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringPtrOutput { return v.EffectiveTime }).(pulumi.StringPtrOutput)
}

// Optional. Server specified ETag for the backup vault resource to prevent simultaneous updates from overwiting each
// other.
func (o BackupDrBackupVaultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
// backup vault instance containing no backups, but still containing empty datasources. * deletion of a backup vault
// instance that is being referenced by an active backup plan.
//
// Deprecated: Deprecated
func (o BackupDrBackupVaultOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// If set, allow update to extend the minimum enforced retention for backup vault. This overrides the restriction against
// conflicting retention periods. This conflict may occur when the expiration schedule defined by the associated backup
// plan is shorter than the minimum retention set by the backup vault.
func (o BackupDrBackupVaultOutput) ForceUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.BoolPtrOutput { return v.ForceUpdate }).(pulumi.BoolPtrOutput)
}

// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
// backup vault instance that is being referenced by an active backup plan.
func (o BackupDrBackupVaultOutput) IgnoreBackupPlanReferences() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.BoolPtrOutput { return v.IgnoreBackupPlanReferences }).(pulumi.BoolPtrOutput)
}

// If set, the following restrictions against deletion of the backup vault instance can be overridden: * deletion of a
// backup vault instance containing no backups, but still containing empty datasources.
func (o BackupDrBackupVaultOutput) IgnoreInactiveDatasources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.BoolPtrOutput { return v.IgnoreInactiveDatasources }).(pulumi.BoolPtrOutput)
}

// Optional. Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o BackupDrBackupVaultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The GCP location for the backup vault.
func (o BackupDrBackupVaultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Output only. Identifier. The resource name.
func (o BackupDrBackupVaultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BackupDrBackupVaultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. Service account used by the BackupVault Service for this BackupVault. The user should grant this account
// permissions in their workload project to enable the service to run backups and restores there.
func (o BackupDrBackupVaultOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Output only. The BackupVault resource instance state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING ERROR
func (o BackupDrBackupVaultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o BackupDrBackupVaultOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o BackupDrBackupVaultOutput) Timeouts() BackupDrBackupVaultTimeoutsPtrOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) BackupDrBackupVaultTimeoutsPtrOutput { return v.Timeouts }).(BackupDrBackupVaultTimeoutsPtrOutput)
}

// Output only. Total size of the storage used by all backup resources.
func (o BackupDrBackupVaultOutput) TotalStoredBytes() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.TotalStoredBytes }).(pulumi.StringOutput)
}

// Output only. Output only Immutable after resource creation until resource deletion.
func (o BackupDrBackupVaultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. The time when the instance was updated.
func (o BackupDrBackupVaultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrBackupVault) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupDrBackupVaultInput)(nil)).Elem(), &BackupDrBackupVault{})
	pulumi.RegisterOutputType(BackupDrBackupVaultOutput{})
}
