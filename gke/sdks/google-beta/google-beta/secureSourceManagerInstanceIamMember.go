// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecureSourceManagerInstanceIamMember struct {
	pulumi.CustomResourceState

	Condition                              SecureSourceManagerInstanceIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                                   pulumi.StringOutput                                    `pulumi:"etag"`
	InstanceId                             pulumi.StringOutput                                    `pulumi:"instanceId"`
	Location                               pulumi.StringOutput                                    `pulumi:"location"`
	Member                                 pulumi.StringOutput                                    `pulumi:"member"`
	Project                                pulumi.StringOutput                                    `pulumi:"project"`
	Role                                   pulumi.StringOutput                                    `pulumi:"role"`
	SecureSourceManagerInstanceIamMemberId pulumi.StringOutput                                    `pulumi:"secureSourceManagerInstanceIamMemberId"`
}

// NewSecureSourceManagerInstanceIamMember registers a new resource with the given unique name, arguments, and options.
func NewSecureSourceManagerInstanceIamMember(ctx *pulumi.Context,
	name string, args *SecureSourceManagerInstanceIamMemberArgs, opts ...pulumi.ResourceOption) (*SecureSourceManagerInstanceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SecureSourceManagerInstanceIamMember
	err = ctx.RegisterPackageResource("google-beta:index/secureSourceManagerInstanceIamMember:SecureSourceManagerInstanceIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecureSourceManagerInstanceIamMember gets an existing SecureSourceManagerInstanceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecureSourceManagerInstanceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecureSourceManagerInstanceIamMemberState, opts ...pulumi.ResourceOption) (*SecureSourceManagerInstanceIamMember, error) {
	var resource SecureSourceManagerInstanceIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/secureSourceManagerInstanceIamMember:SecureSourceManagerInstanceIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecureSourceManagerInstanceIamMember resources.
type secureSourceManagerInstanceIamMemberState struct {
	Condition                              *SecureSourceManagerInstanceIamMemberCondition `pulumi:"condition"`
	Etag                                   *string                                        `pulumi:"etag"`
	InstanceId                             *string                                        `pulumi:"instanceId"`
	Location                               *string                                        `pulumi:"location"`
	Member                                 *string                                        `pulumi:"member"`
	Project                                *string                                        `pulumi:"project"`
	Role                                   *string                                        `pulumi:"role"`
	SecureSourceManagerInstanceIamMemberId *string                                        `pulumi:"secureSourceManagerInstanceIamMemberId"`
}

type SecureSourceManagerInstanceIamMemberState struct {
	Condition                              SecureSourceManagerInstanceIamMemberConditionPtrInput
	Etag                                   pulumi.StringPtrInput
	InstanceId                             pulumi.StringPtrInput
	Location                               pulumi.StringPtrInput
	Member                                 pulumi.StringPtrInput
	Project                                pulumi.StringPtrInput
	Role                                   pulumi.StringPtrInput
	SecureSourceManagerInstanceIamMemberId pulumi.StringPtrInput
}

func (SecureSourceManagerInstanceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*secureSourceManagerInstanceIamMemberState)(nil)).Elem()
}

type secureSourceManagerInstanceIamMemberArgs struct {
	Condition                              *SecureSourceManagerInstanceIamMemberCondition `pulumi:"condition"`
	InstanceId                             string                                         `pulumi:"instanceId"`
	Location                               *string                                        `pulumi:"location"`
	Member                                 string                                         `pulumi:"member"`
	Project                                *string                                        `pulumi:"project"`
	Role                                   string                                         `pulumi:"role"`
	SecureSourceManagerInstanceIamMemberId *string                                        `pulumi:"secureSourceManagerInstanceIamMemberId"`
}

// The set of arguments for constructing a SecureSourceManagerInstanceIamMember resource.
type SecureSourceManagerInstanceIamMemberArgs struct {
	Condition                              SecureSourceManagerInstanceIamMemberConditionPtrInput
	InstanceId                             pulumi.StringInput
	Location                               pulumi.StringPtrInput
	Member                                 pulumi.StringInput
	Project                                pulumi.StringPtrInput
	Role                                   pulumi.StringInput
	SecureSourceManagerInstanceIamMemberId pulumi.StringPtrInput
}

func (SecureSourceManagerInstanceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secureSourceManagerInstanceIamMemberArgs)(nil)).Elem()
}

type SecureSourceManagerInstanceIamMemberInput interface {
	pulumi.Input

	ToSecureSourceManagerInstanceIamMemberOutput() SecureSourceManagerInstanceIamMemberOutput
	ToSecureSourceManagerInstanceIamMemberOutputWithContext(ctx context.Context) SecureSourceManagerInstanceIamMemberOutput
}

func (*SecureSourceManagerInstanceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**SecureSourceManagerInstanceIamMember)(nil)).Elem()
}

func (i *SecureSourceManagerInstanceIamMember) ToSecureSourceManagerInstanceIamMemberOutput() SecureSourceManagerInstanceIamMemberOutput {
	return i.ToSecureSourceManagerInstanceIamMemberOutputWithContext(context.Background())
}

func (i *SecureSourceManagerInstanceIamMember) ToSecureSourceManagerInstanceIamMemberOutputWithContext(ctx context.Context) SecureSourceManagerInstanceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecureSourceManagerInstanceIamMemberOutput)
}

type SecureSourceManagerInstanceIamMemberOutput struct{ *pulumi.OutputState }

func (SecureSourceManagerInstanceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecureSourceManagerInstanceIamMember)(nil)).Elem()
}

func (o SecureSourceManagerInstanceIamMemberOutput) ToSecureSourceManagerInstanceIamMemberOutput() SecureSourceManagerInstanceIamMemberOutput {
	return o
}

func (o SecureSourceManagerInstanceIamMemberOutput) ToSecureSourceManagerInstanceIamMemberOutputWithContext(ctx context.Context) SecureSourceManagerInstanceIamMemberOutput {
	return o
}

func (o SecureSourceManagerInstanceIamMemberOutput) Condition() SecureSourceManagerInstanceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamMember) SecureSourceManagerInstanceIamMemberConditionPtrOutput {
		return v.Condition
	}).(SecureSourceManagerInstanceIamMemberConditionPtrOutput)
}

func (o SecureSourceManagerInstanceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamMemberOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamMember) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamMemberOutput) SecureSourceManagerInstanceIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamMember) pulumi.StringOutput {
		return v.SecureSourceManagerInstanceIamMemberId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecureSourceManagerInstanceIamMemberInput)(nil)).Elem(), &SecureSourceManagerInstanceIamMember{})
	pulumi.RegisterOutputType(SecureSourceManagerInstanceIamMemberOutput{})
}
