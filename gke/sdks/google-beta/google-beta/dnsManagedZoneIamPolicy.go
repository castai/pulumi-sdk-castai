// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DnsManagedZoneIamPolicy struct {
	pulumi.CustomResourceState

	DnsManagedZoneIamPolicyId pulumi.StringOutput `pulumi:"dnsManagedZoneIamPolicyId"`
	Etag                      pulumi.StringOutput `pulumi:"etag"`
	ManagedZone               pulumi.StringOutput `pulumi:"managedZone"`
	PolicyData                pulumi.StringOutput `pulumi:"policyData"`
	Project                   pulumi.StringOutput `pulumi:"project"`
}

// NewDnsManagedZoneIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDnsManagedZoneIamPolicy(ctx *pulumi.Context,
	name string, args *DnsManagedZoneIamPolicyArgs, opts ...pulumi.ResourceOption) (*DnsManagedZoneIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedZone == nil {
		return nil, errors.New("invalid value for required argument 'ManagedZone'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DnsManagedZoneIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/dnsManagedZoneIamPolicy:DnsManagedZoneIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsManagedZoneIamPolicy gets an existing DnsManagedZoneIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsManagedZoneIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsManagedZoneIamPolicyState, opts ...pulumi.ResourceOption) (*DnsManagedZoneIamPolicy, error) {
	var resource DnsManagedZoneIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dnsManagedZoneIamPolicy:DnsManagedZoneIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsManagedZoneIamPolicy resources.
type dnsManagedZoneIamPolicyState struct {
	DnsManagedZoneIamPolicyId *string `pulumi:"dnsManagedZoneIamPolicyId"`
	Etag                      *string `pulumi:"etag"`
	ManagedZone               *string `pulumi:"managedZone"`
	PolicyData                *string `pulumi:"policyData"`
	Project                   *string `pulumi:"project"`
}

type DnsManagedZoneIamPolicyState struct {
	DnsManagedZoneIamPolicyId pulumi.StringPtrInput
	Etag                      pulumi.StringPtrInput
	ManagedZone               pulumi.StringPtrInput
	PolicyData                pulumi.StringPtrInput
	Project                   pulumi.StringPtrInput
}

func (DnsManagedZoneIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsManagedZoneIamPolicyState)(nil)).Elem()
}

type dnsManagedZoneIamPolicyArgs struct {
	DnsManagedZoneIamPolicyId *string `pulumi:"dnsManagedZoneIamPolicyId"`
	ManagedZone               string  `pulumi:"managedZone"`
	PolicyData                string  `pulumi:"policyData"`
	Project                   *string `pulumi:"project"`
}

// The set of arguments for constructing a DnsManagedZoneIamPolicy resource.
type DnsManagedZoneIamPolicyArgs struct {
	DnsManagedZoneIamPolicyId pulumi.StringPtrInput
	ManagedZone               pulumi.StringInput
	PolicyData                pulumi.StringInput
	Project                   pulumi.StringPtrInput
}

func (DnsManagedZoneIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsManagedZoneIamPolicyArgs)(nil)).Elem()
}

type DnsManagedZoneIamPolicyInput interface {
	pulumi.Input

	ToDnsManagedZoneIamPolicyOutput() DnsManagedZoneIamPolicyOutput
	ToDnsManagedZoneIamPolicyOutputWithContext(ctx context.Context) DnsManagedZoneIamPolicyOutput
}

func (*DnsManagedZoneIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsManagedZoneIamPolicy)(nil)).Elem()
}

func (i *DnsManagedZoneIamPolicy) ToDnsManagedZoneIamPolicyOutput() DnsManagedZoneIamPolicyOutput {
	return i.ToDnsManagedZoneIamPolicyOutputWithContext(context.Background())
}

func (i *DnsManagedZoneIamPolicy) ToDnsManagedZoneIamPolicyOutputWithContext(ctx context.Context) DnsManagedZoneIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsManagedZoneIamPolicyOutput)
}

type DnsManagedZoneIamPolicyOutput struct{ *pulumi.OutputState }

func (DnsManagedZoneIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsManagedZoneIamPolicy)(nil)).Elem()
}

func (o DnsManagedZoneIamPolicyOutput) ToDnsManagedZoneIamPolicyOutput() DnsManagedZoneIamPolicyOutput {
	return o
}

func (o DnsManagedZoneIamPolicyOutput) ToDnsManagedZoneIamPolicyOutputWithContext(ctx context.Context) DnsManagedZoneIamPolicyOutput {
	return o
}

func (o DnsManagedZoneIamPolicyOutput) DnsManagedZoneIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamPolicy) pulumi.StringOutput { return v.DnsManagedZoneIamPolicyId }).(pulumi.StringOutput)
}

func (o DnsManagedZoneIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DnsManagedZoneIamPolicyOutput) ManagedZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamPolicy) pulumi.StringOutput { return v.ManagedZone }).(pulumi.StringOutput)
}

func (o DnsManagedZoneIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o DnsManagedZoneIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DnsManagedZoneIamPolicyInput)(nil)).Elem(), &DnsManagedZoneIamPolicy{})
	pulumi.RegisterOutputType(DnsManagedZoneIamPolicyOutput{})
}
