// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataprocClusterIamBinding struct {
	pulumi.CustomResourceState

	Cluster                     pulumi.StringOutput                         `pulumi:"cluster"`
	Condition                   DataprocClusterIamBindingConditionPtrOutput `pulumi:"condition"`
	DataprocClusterIamBindingId pulumi.StringOutput                         `pulumi:"dataprocClusterIamBindingId"`
	Etag                        pulumi.StringOutput                         `pulumi:"etag"`
	Members                     pulumi.StringArrayOutput                    `pulumi:"members"`
	Project                     pulumi.StringOutput                         `pulumi:"project"`
	Region                      pulumi.StringOutput                         `pulumi:"region"`
	Role                        pulumi.StringOutput                         `pulumi:"role"`
}

// NewDataprocClusterIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDataprocClusterIamBinding(ctx *pulumi.Context,
	name string, args *DataprocClusterIamBindingArgs, opts ...pulumi.ResourceOption) (*DataprocClusterIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cluster == nil {
		return nil, errors.New("invalid value for required argument 'Cluster'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataprocClusterIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/dataprocClusterIamBinding:DataprocClusterIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocClusterIamBinding gets an existing DataprocClusterIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocClusterIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocClusterIamBindingState, opts ...pulumi.ResourceOption) (*DataprocClusterIamBinding, error) {
	var resource DataprocClusterIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataprocClusterIamBinding:DataprocClusterIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocClusterIamBinding resources.
type dataprocClusterIamBindingState struct {
	Cluster                     *string                             `pulumi:"cluster"`
	Condition                   *DataprocClusterIamBindingCondition `pulumi:"condition"`
	DataprocClusterIamBindingId *string                             `pulumi:"dataprocClusterIamBindingId"`
	Etag                        *string                             `pulumi:"etag"`
	Members                     []string                            `pulumi:"members"`
	Project                     *string                             `pulumi:"project"`
	Region                      *string                             `pulumi:"region"`
	Role                        *string                             `pulumi:"role"`
}

type DataprocClusterIamBindingState struct {
	Cluster                     pulumi.StringPtrInput
	Condition                   DataprocClusterIamBindingConditionPtrInput
	DataprocClusterIamBindingId pulumi.StringPtrInput
	Etag                        pulumi.StringPtrInput
	Members                     pulumi.StringArrayInput
	Project                     pulumi.StringPtrInput
	Region                      pulumi.StringPtrInput
	Role                        pulumi.StringPtrInput
}

func (DataprocClusterIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterIamBindingState)(nil)).Elem()
}

type dataprocClusterIamBindingArgs struct {
	Cluster                     string                              `pulumi:"cluster"`
	Condition                   *DataprocClusterIamBindingCondition `pulumi:"condition"`
	DataprocClusterIamBindingId *string                             `pulumi:"dataprocClusterIamBindingId"`
	Members                     []string                            `pulumi:"members"`
	Project                     *string                             `pulumi:"project"`
	Region                      *string                             `pulumi:"region"`
	Role                        string                              `pulumi:"role"`
}

// The set of arguments for constructing a DataprocClusterIamBinding resource.
type DataprocClusterIamBindingArgs struct {
	Cluster                     pulumi.StringInput
	Condition                   DataprocClusterIamBindingConditionPtrInput
	DataprocClusterIamBindingId pulumi.StringPtrInput
	Members                     pulumi.StringArrayInput
	Project                     pulumi.StringPtrInput
	Region                      pulumi.StringPtrInput
	Role                        pulumi.StringInput
}

func (DataprocClusterIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterIamBindingArgs)(nil)).Elem()
}

type DataprocClusterIamBindingInput interface {
	pulumi.Input

	ToDataprocClusterIamBindingOutput() DataprocClusterIamBindingOutput
	ToDataprocClusterIamBindingOutputWithContext(ctx context.Context) DataprocClusterIamBindingOutput
}

func (*DataprocClusterIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterIamBinding)(nil)).Elem()
}

func (i *DataprocClusterIamBinding) ToDataprocClusterIamBindingOutput() DataprocClusterIamBindingOutput {
	return i.ToDataprocClusterIamBindingOutputWithContext(context.Background())
}

func (i *DataprocClusterIamBinding) ToDataprocClusterIamBindingOutputWithContext(ctx context.Context) DataprocClusterIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterIamBindingOutput)
}

type DataprocClusterIamBindingOutput struct{ *pulumi.OutputState }

func (DataprocClusterIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterIamBinding)(nil)).Elem()
}

func (o DataprocClusterIamBindingOutput) ToDataprocClusterIamBindingOutput() DataprocClusterIamBindingOutput {
	return o
}

func (o DataprocClusterIamBindingOutput) ToDataprocClusterIamBindingOutputWithContext(ctx context.Context) DataprocClusterIamBindingOutput {
	return o
}

func (o DataprocClusterIamBindingOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamBinding) pulumi.StringOutput { return v.Cluster }).(pulumi.StringOutput)
}

func (o DataprocClusterIamBindingOutput) Condition() DataprocClusterIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DataprocClusterIamBinding) DataprocClusterIamBindingConditionPtrOutput { return v.Condition }).(DataprocClusterIamBindingConditionPtrOutput)
}

func (o DataprocClusterIamBindingOutput) DataprocClusterIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamBinding) pulumi.StringOutput { return v.DataprocClusterIamBindingId }).(pulumi.StringOutput)
}

func (o DataprocClusterIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataprocClusterIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataprocClusterIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DataprocClusterIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataprocClusterIamBindingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamBinding) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DataprocClusterIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocClusterIamBindingInput)(nil)).Elem(), &DataprocClusterIamBinding{})
	pulumi.RegisterOutputType(DataprocClusterIamBindingOutput{})
}
