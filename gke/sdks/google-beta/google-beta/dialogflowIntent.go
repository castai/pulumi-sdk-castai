// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DialogflowIntent struct {
	pulumi.CustomResourceState

	// The name of the action associated with the intent. Note: The action name must not contain whitespaces.
	Action pulumi.StringOutput `pulumi:"action"`
	// The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e.
	// default platform). Possible values: ["FACEBOOK", "SLACK", "TELEGRAM", "KIK", "SKYPE", "LINE", "VIBER",
	// "ACTIONS_ON_GOOGLE", "GOOGLE_HANGOUTS"]
	DefaultResponsePlatforms pulumi.StringArrayOutput `pulumi:"defaultResponsePlatforms"`
	DialogflowIntentId       pulumi.StringOutput      `pulumi:"dialogflowIntentId"`
	// The name of this intent to be displayed on the console.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the
	// contexts must be present in the active user session for an event to trigger this intent. See the [events
	// reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
	Events pulumi.StringArrayOutput `pulumi:"events"`
	// Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only
	// in the output.
	FollowupIntentInfos DialogflowIntentFollowupIntentInfoArrayOutput `pulumi:"followupIntentInfos"`
	// The list of context names required for this intent to be triggered. Format: projects/<Project
	// ID>/agent/sessions/-/contexts/<Context ID>.
	InputContextNames pulumi.StringArrayOutput `pulumi:"inputContextNames"`
	// Indicates whether this is a fallback intent.
	IsFallback pulumi.BoolOutput `pulumi:"isFallback"`
	// Indicates whether Machine Learning is disabled for the intent. Note: If mlDisabled setting is set to true, then this
	// intent is not taken into account during inference in ML ONLY match mode. Also, auto-markup in the UI is turned off.
	MlDisabled pulumi.BoolOutput `pulumi:"mlDisabled"`
	// The unique identifier of this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique identifier of the parent intent in the chain of followup intents. Format: projects/<Project
	// ID>/agent/intents/<Intent ID>.
	ParentFollowupIntentName pulumi.StringOutput `pulumi:"parentFollowupIntentName"`
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0,
	// the service translates the value to 500,000, which corresponds to the Normal priority in the console. - If the supplied
	// value is negative, the intent is ignored in runtime detect intent requests.
	Priority pulumi.Float64Output `pulumi:"priority"`
	Project  pulumi.StringOutput  `pulumi:"project"`
	// Indicates whether to delete all contexts in the current session when this intent is matched.
	ResetContexts pulumi.BoolOutput `pulumi:"resetContexts"`
	// The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents
	// chain for this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
	RootFollowupIntentName pulumi.StringOutput               `pulumi:"rootFollowupIntentName"`
	Timeouts               DialogflowIntentTimeoutsPtrOutput `pulumi:"timeouts"`
	// Indicates whether webhooks are enabled for the intent. * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in
	// the intent. * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
	// filling prompt is forwarded to the webhook. Possible values: ["WEBHOOK_STATE_ENABLED",
	// "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"]
	WebhookState pulumi.StringOutput `pulumi:"webhookState"`
}

// NewDialogflowIntent registers a new resource with the given unique name, arguments, and options.
func NewDialogflowIntent(ctx *pulumi.Context,
	name string, args *DialogflowIntentArgs, opts ...pulumi.ResourceOption) (*DialogflowIntent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DialogflowIntent
	err = ctx.RegisterPackageResource("google-beta:index/dialogflowIntent:DialogflowIntent", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDialogflowIntent gets an existing DialogflowIntent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDialogflowIntent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DialogflowIntentState, opts ...pulumi.ResourceOption) (*DialogflowIntent, error) {
	var resource DialogflowIntent
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dialogflowIntent:DialogflowIntent", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DialogflowIntent resources.
type dialogflowIntentState struct {
	// The name of the action associated with the intent. Note: The action name must not contain whitespaces.
	Action *string `pulumi:"action"`
	// The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e.
	// default platform). Possible values: ["FACEBOOK", "SLACK", "TELEGRAM", "KIK", "SKYPE", "LINE", "VIBER",
	// "ACTIONS_ON_GOOGLE", "GOOGLE_HANGOUTS"]
	DefaultResponsePlatforms []string `pulumi:"defaultResponsePlatforms"`
	DialogflowIntentId       *string  `pulumi:"dialogflowIntentId"`
	// The name of this intent to be displayed on the console.
	DisplayName *string `pulumi:"displayName"`
	// The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the
	// contexts must be present in the active user session for an event to trigger this intent. See the [events
	// reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
	Events []string `pulumi:"events"`
	// Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only
	// in the output.
	FollowupIntentInfos []DialogflowIntentFollowupIntentInfo `pulumi:"followupIntentInfos"`
	// The list of context names required for this intent to be triggered. Format: projects/<Project
	// ID>/agent/sessions/-/contexts/<Context ID>.
	InputContextNames []string `pulumi:"inputContextNames"`
	// Indicates whether this is a fallback intent.
	IsFallback *bool `pulumi:"isFallback"`
	// Indicates whether Machine Learning is disabled for the intent. Note: If mlDisabled setting is set to true, then this
	// intent is not taken into account during inference in ML ONLY match mode. Also, auto-markup in the UI is turned off.
	MlDisabled *bool `pulumi:"mlDisabled"`
	// The unique identifier of this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
	Name *string `pulumi:"name"`
	// The unique identifier of the parent intent in the chain of followup intents. Format: projects/<Project
	// ID>/agent/intents/<Intent ID>.
	ParentFollowupIntentName *string `pulumi:"parentFollowupIntentName"`
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0,
	// the service translates the value to 500,000, which corresponds to the Normal priority in the console. - If the supplied
	// value is negative, the intent is ignored in runtime detect intent requests.
	Priority *float64 `pulumi:"priority"`
	Project  *string  `pulumi:"project"`
	// Indicates whether to delete all contexts in the current session when this intent is matched.
	ResetContexts *bool `pulumi:"resetContexts"`
	// The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents
	// chain for this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
	RootFollowupIntentName *string                   `pulumi:"rootFollowupIntentName"`
	Timeouts               *DialogflowIntentTimeouts `pulumi:"timeouts"`
	// Indicates whether webhooks are enabled for the intent. * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in
	// the intent. * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
	// filling prompt is forwarded to the webhook. Possible values: ["WEBHOOK_STATE_ENABLED",
	// "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"]
	WebhookState *string `pulumi:"webhookState"`
}

type DialogflowIntentState struct {
	// The name of the action associated with the intent. Note: The action name must not contain whitespaces.
	Action pulumi.StringPtrInput
	// The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e.
	// default platform). Possible values: ["FACEBOOK", "SLACK", "TELEGRAM", "KIK", "SKYPE", "LINE", "VIBER",
	// "ACTIONS_ON_GOOGLE", "GOOGLE_HANGOUTS"]
	DefaultResponsePlatforms pulumi.StringArrayInput
	DialogflowIntentId       pulumi.StringPtrInput
	// The name of this intent to be displayed on the console.
	DisplayName pulumi.StringPtrInput
	// The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the
	// contexts must be present in the active user session for an event to trigger this intent. See the [events
	// reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
	Events pulumi.StringArrayInput
	// Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only
	// in the output.
	FollowupIntentInfos DialogflowIntentFollowupIntentInfoArrayInput
	// The list of context names required for this intent to be triggered. Format: projects/<Project
	// ID>/agent/sessions/-/contexts/<Context ID>.
	InputContextNames pulumi.StringArrayInput
	// Indicates whether this is a fallback intent.
	IsFallback pulumi.BoolPtrInput
	// Indicates whether Machine Learning is disabled for the intent. Note: If mlDisabled setting is set to true, then this
	// intent is not taken into account during inference in ML ONLY match mode. Also, auto-markup in the UI is turned off.
	MlDisabled pulumi.BoolPtrInput
	// The unique identifier of this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
	Name pulumi.StringPtrInput
	// The unique identifier of the parent intent in the chain of followup intents. Format: projects/<Project
	// ID>/agent/intents/<Intent ID>.
	ParentFollowupIntentName pulumi.StringPtrInput
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0,
	// the service translates the value to 500,000, which corresponds to the Normal priority in the console. - If the supplied
	// value is negative, the intent is ignored in runtime detect intent requests.
	Priority pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	// Indicates whether to delete all contexts in the current session when this intent is matched.
	ResetContexts pulumi.BoolPtrInput
	// The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents
	// chain for this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
	RootFollowupIntentName pulumi.StringPtrInput
	Timeouts               DialogflowIntentTimeoutsPtrInput
	// Indicates whether webhooks are enabled for the intent. * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in
	// the intent. * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
	// filling prompt is forwarded to the webhook. Possible values: ["WEBHOOK_STATE_ENABLED",
	// "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"]
	WebhookState pulumi.StringPtrInput
}

func (DialogflowIntentState) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowIntentState)(nil)).Elem()
}

type dialogflowIntentArgs struct {
	// The name of the action associated with the intent. Note: The action name must not contain whitespaces.
	Action *string `pulumi:"action"`
	// The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e.
	// default platform). Possible values: ["FACEBOOK", "SLACK", "TELEGRAM", "KIK", "SKYPE", "LINE", "VIBER",
	// "ACTIONS_ON_GOOGLE", "GOOGLE_HANGOUTS"]
	DefaultResponsePlatforms []string `pulumi:"defaultResponsePlatforms"`
	DialogflowIntentId       *string  `pulumi:"dialogflowIntentId"`
	// The name of this intent to be displayed on the console.
	DisplayName string `pulumi:"displayName"`
	// The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the
	// contexts must be present in the active user session for an event to trigger this intent. See the [events
	// reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
	Events []string `pulumi:"events"`
	// The list of context names required for this intent to be triggered. Format: projects/<Project
	// ID>/agent/sessions/-/contexts/<Context ID>.
	InputContextNames []string `pulumi:"inputContextNames"`
	// Indicates whether this is a fallback intent.
	IsFallback *bool `pulumi:"isFallback"`
	// Indicates whether Machine Learning is disabled for the intent. Note: If mlDisabled setting is set to true, then this
	// intent is not taken into account during inference in ML ONLY match mode. Also, auto-markup in the UI is turned off.
	MlDisabled *bool `pulumi:"mlDisabled"`
	// The unique identifier of the parent intent in the chain of followup intents. Format: projects/<Project
	// ID>/agent/intents/<Intent ID>.
	ParentFollowupIntentName *string `pulumi:"parentFollowupIntentName"`
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0,
	// the service translates the value to 500,000, which corresponds to the Normal priority in the console. - If the supplied
	// value is negative, the intent is ignored in runtime detect intent requests.
	Priority *float64 `pulumi:"priority"`
	Project  *string  `pulumi:"project"`
	// Indicates whether to delete all contexts in the current session when this intent is matched.
	ResetContexts *bool                     `pulumi:"resetContexts"`
	Timeouts      *DialogflowIntentTimeouts `pulumi:"timeouts"`
	// Indicates whether webhooks are enabled for the intent. * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in
	// the intent. * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
	// filling prompt is forwarded to the webhook. Possible values: ["WEBHOOK_STATE_ENABLED",
	// "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"]
	WebhookState *string `pulumi:"webhookState"`
}

// The set of arguments for constructing a DialogflowIntent resource.
type DialogflowIntentArgs struct {
	// The name of the action associated with the intent. Note: The action name must not contain whitespaces.
	Action pulumi.StringPtrInput
	// The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e.
	// default platform). Possible values: ["FACEBOOK", "SLACK", "TELEGRAM", "KIK", "SKYPE", "LINE", "VIBER",
	// "ACTIONS_ON_GOOGLE", "GOOGLE_HANGOUTS"]
	DefaultResponsePlatforms pulumi.StringArrayInput
	DialogflowIntentId       pulumi.StringPtrInput
	// The name of this intent to be displayed on the console.
	DisplayName pulumi.StringInput
	// The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the
	// contexts must be present in the active user session for an event to trigger this intent. See the [events
	// reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
	Events pulumi.StringArrayInput
	// The list of context names required for this intent to be triggered. Format: projects/<Project
	// ID>/agent/sessions/-/contexts/<Context ID>.
	InputContextNames pulumi.StringArrayInput
	// Indicates whether this is a fallback intent.
	IsFallback pulumi.BoolPtrInput
	// Indicates whether Machine Learning is disabled for the intent. Note: If mlDisabled setting is set to true, then this
	// intent is not taken into account during inference in ML ONLY match mode. Also, auto-markup in the UI is turned off.
	MlDisabled pulumi.BoolPtrInput
	// The unique identifier of the parent intent in the chain of followup intents. Format: projects/<Project
	// ID>/agent/intents/<Intent ID>.
	ParentFollowupIntentName pulumi.StringPtrInput
	// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0,
	// the service translates the value to 500,000, which corresponds to the Normal priority in the console. - If the supplied
	// value is negative, the intent is ignored in runtime detect intent requests.
	Priority pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	// Indicates whether to delete all contexts in the current session when this intent is matched.
	ResetContexts pulumi.BoolPtrInput
	Timeouts      DialogflowIntentTimeoutsPtrInput
	// Indicates whether webhooks are enabled for the intent. * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in
	// the intent. * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
	// filling prompt is forwarded to the webhook. Possible values: ["WEBHOOK_STATE_ENABLED",
	// "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"]
	WebhookState pulumi.StringPtrInput
}

func (DialogflowIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowIntentArgs)(nil)).Elem()
}

type DialogflowIntentInput interface {
	pulumi.Input

	ToDialogflowIntentOutput() DialogflowIntentOutput
	ToDialogflowIntentOutputWithContext(ctx context.Context) DialogflowIntentOutput
}

func (*DialogflowIntent) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowIntent)(nil)).Elem()
}

func (i *DialogflowIntent) ToDialogflowIntentOutput() DialogflowIntentOutput {
	return i.ToDialogflowIntentOutputWithContext(context.Background())
}

func (i *DialogflowIntent) ToDialogflowIntentOutputWithContext(ctx context.Context) DialogflowIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DialogflowIntentOutput)
}

type DialogflowIntentOutput struct{ *pulumi.OutputState }

func (DialogflowIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowIntent)(nil)).Elem()
}

func (o DialogflowIntentOutput) ToDialogflowIntentOutput() DialogflowIntentOutput {
	return o
}

func (o DialogflowIntentOutput) ToDialogflowIntentOutputWithContext(ctx context.Context) DialogflowIntentOutput {
	return o
}

// The name of the action associated with the intent. Note: The action name must not contain whitespaces.
func (o DialogflowIntentOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e.
// default platform). Possible values: ["FACEBOOK", "SLACK", "TELEGRAM", "KIK", "SKYPE", "LINE", "VIBER",
// "ACTIONS_ON_GOOGLE", "GOOGLE_HANGOUTS"]
func (o DialogflowIntentOutput) DefaultResponsePlatforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringArrayOutput { return v.DefaultResponsePlatforms }).(pulumi.StringArrayOutput)
}

func (o DialogflowIntentOutput) DialogflowIntentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringOutput { return v.DialogflowIntentId }).(pulumi.StringOutput)
}

// The name of this intent to be displayed on the console.
func (o DialogflowIntentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the
// contexts must be present in the active user session for an event to trigger this intent. See the [events
// reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
func (o DialogflowIntentOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringArrayOutput { return v.Events }).(pulumi.StringArrayOutput)
}

// Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only
// in the output.
func (o DialogflowIntentOutput) FollowupIntentInfos() DialogflowIntentFollowupIntentInfoArrayOutput {
	return o.ApplyT(func(v *DialogflowIntent) DialogflowIntentFollowupIntentInfoArrayOutput { return v.FollowupIntentInfos }).(DialogflowIntentFollowupIntentInfoArrayOutput)
}

// The list of context names required for this intent to be triggered. Format: projects/<Project
// ID>/agent/sessions/-/contexts/<Context ID>.
func (o DialogflowIntentOutput) InputContextNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringArrayOutput { return v.InputContextNames }).(pulumi.StringArrayOutput)
}

// Indicates whether this is a fallback intent.
func (o DialogflowIntentOutput) IsFallback() pulumi.BoolOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.BoolOutput { return v.IsFallback }).(pulumi.BoolOutput)
}

// Indicates whether Machine Learning is disabled for the intent. Note: If mlDisabled setting is set to true, then this
// intent is not taken into account during inference in ML ONLY match mode. Also, auto-markup in the UI is turned off.
func (o DialogflowIntentOutput) MlDisabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.BoolOutput { return v.MlDisabled }).(pulumi.BoolOutput)
}

// The unique identifier of this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
func (o DialogflowIntentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The unique identifier of the parent intent in the chain of followup intents. Format: projects/<Project
// ID>/agent/intents/<Intent ID>.
func (o DialogflowIntentOutput) ParentFollowupIntentName() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringOutput { return v.ParentFollowupIntentName }).(pulumi.StringOutput)
}

// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0,
// the service translates the value to 500,000, which corresponds to the Normal priority in the console. - If the supplied
// value is negative, the intent is ignored in runtime detect intent requests.
func (o DialogflowIntentOutput) Priority() pulumi.Float64Output {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.Float64Output { return v.Priority }).(pulumi.Float64Output)
}

func (o DialogflowIntentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Indicates whether to delete all contexts in the current session when this intent is matched.
func (o DialogflowIntentOutput) ResetContexts() pulumi.BoolOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.BoolOutput { return v.ResetContexts }).(pulumi.BoolOutput)
}

// The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents
// chain for this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
func (o DialogflowIntentOutput) RootFollowupIntentName() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringOutput { return v.RootFollowupIntentName }).(pulumi.StringOutput)
}

func (o DialogflowIntentOutput) Timeouts() DialogflowIntentTimeoutsPtrOutput {
	return o.ApplyT(func(v *DialogflowIntent) DialogflowIntentTimeoutsPtrOutput { return v.Timeouts }).(DialogflowIntentTimeoutsPtrOutput)
}

// Indicates whether webhooks are enabled for the intent. * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in
// the intent. * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
// filling prompt is forwarded to the webhook. Possible values: ["WEBHOOK_STATE_ENABLED",
// "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"]
func (o DialogflowIntentOutput) WebhookState() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowIntent) pulumi.StringOutput { return v.WebhookState }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DialogflowIntentInput)(nil)).Elem(), &DialogflowIntent{})
	pulumi.RegisterOutputType(DialogflowIntentOutput{})
}
