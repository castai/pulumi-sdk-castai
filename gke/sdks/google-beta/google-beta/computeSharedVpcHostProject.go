// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeSharedVpcHostProject struct {
	pulumi.CustomResourceState

	ComputeSharedVpcHostProjectId pulumi.StringOutput `pulumi:"computeSharedVpcHostProjectId"`
	// The ID of the project that will serve as a Shared VPC host project
	Project  pulumi.StringOutput                          `pulumi:"project"`
	Timeouts ComputeSharedVpcHostProjectTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeSharedVpcHostProject registers a new resource with the given unique name, arguments, and options.
func NewComputeSharedVpcHostProject(ctx *pulumi.Context,
	name string, args *ComputeSharedVpcHostProjectArgs, opts ...pulumi.ResourceOption) (*ComputeSharedVpcHostProject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeSharedVpcHostProject
	err = ctx.RegisterPackageResource("google-beta:index/computeSharedVpcHostProject:ComputeSharedVpcHostProject", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeSharedVpcHostProject gets an existing ComputeSharedVpcHostProject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeSharedVpcHostProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeSharedVpcHostProjectState, opts ...pulumi.ResourceOption) (*ComputeSharedVpcHostProject, error) {
	var resource ComputeSharedVpcHostProject
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeSharedVpcHostProject:ComputeSharedVpcHostProject", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeSharedVpcHostProject resources.
type computeSharedVpcHostProjectState struct {
	ComputeSharedVpcHostProjectId *string `pulumi:"computeSharedVpcHostProjectId"`
	// The ID of the project that will serve as a Shared VPC host project
	Project  *string                              `pulumi:"project"`
	Timeouts *ComputeSharedVpcHostProjectTimeouts `pulumi:"timeouts"`
}

type ComputeSharedVpcHostProjectState struct {
	ComputeSharedVpcHostProjectId pulumi.StringPtrInput
	// The ID of the project that will serve as a Shared VPC host project
	Project  pulumi.StringPtrInput
	Timeouts ComputeSharedVpcHostProjectTimeoutsPtrInput
}

func (ComputeSharedVpcHostProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSharedVpcHostProjectState)(nil)).Elem()
}

type computeSharedVpcHostProjectArgs struct {
	ComputeSharedVpcHostProjectId *string `pulumi:"computeSharedVpcHostProjectId"`
	// The ID of the project that will serve as a Shared VPC host project
	Project  string                               `pulumi:"project"`
	Timeouts *ComputeSharedVpcHostProjectTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeSharedVpcHostProject resource.
type ComputeSharedVpcHostProjectArgs struct {
	ComputeSharedVpcHostProjectId pulumi.StringPtrInput
	// The ID of the project that will serve as a Shared VPC host project
	Project  pulumi.StringInput
	Timeouts ComputeSharedVpcHostProjectTimeoutsPtrInput
}

func (ComputeSharedVpcHostProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSharedVpcHostProjectArgs)(nil)).Elem()
}

type ComputeSharedVpcHostProjectInput interface {
	pulumi.Input

	ToComputeSharedVpcHostProjectOutput() ComputeSharedVpcHostProjectOutput
	ToComputeSharedVpcHostProjectOutputWithContext(ctx context.Context) ComputeSharedVpcHostProjectOutput
}

func (*ComputeSharedVpcHostProject) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSharedVpcHostProject)(nil)).Elem()
}

func (i *ComputeSharedVpcHostProject) ToComputeSharedVpcHostProjectOutput() ComputeSharedVpcHostProjectOutput {
	return i.ToComputeSharedVpcHostProjectOutputWithContext(context.Background())
}

func (i *ComputeSharedVpcHostProject) ToComputeSharedVpcHostProjectOutputWithContext(ctx context.Context) ComputeSharedVpcHostProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeSharedVpcHostProjectOutput)
}

type ComputeSharedVpcHostProjectOutput struct{ *pulumi.OutputState }

func (ComputeSharedVpcHostProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSharedVpcHostProject)(nil)).Elem()
}

func (o ComputeSharedVpcHostProjectOutput) ToComputeSharedVpcHostProjectOutput() ComputeSharedVpcHostProjectOutput {
	return o
}

func (o ComputeSharedVpcHostProjectOutput) ToComputeSharedVpcHostProjectOutputWithContext(ctx context.Context) ComputeSharedVpcHostProjectOutput {
	return o
}

func (o ComputeSharedVpcHostProjectOutput) ComputeSharedVpcHostProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSharedVpcHostProject) pulumi.StringOutput { return v.ComputeSharedVpcHostProjectId }).(pulumi.StringOutput)
}

// The ID of the project that will serve as a Shared VPC host project
func (o ComputeSharedVpcHostProjectOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSharedVpcHostProject) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeSharedVpcHostProjectOutput) Timeouts() ComputeSharedVpcHostProjectTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeSharedVpcHostProject) ComputeSharedVpcHostProjectTimeoutsPtrOutput { return v.Timeouts }).(ComputeSharedVpcHostProjectTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeSharedVpcHostProjectInput)(nil)).Elem(), &ComputeSharedVpcHostProject{})
	pulumi.RegisterOutputType(ComputeSharedVpcHostProjectOutput{})
}
