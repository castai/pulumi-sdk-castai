// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkSecurityTlsInspectionPolicy struct {
	pulumi.CustomResourceState

	// A CA pool resource used to issue interception certificates.
	CaPool pulumi.StringOutput `pulumi:"caPool"`
	// The timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The
	// compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list.
	// Note that Secure Web Proxy does not yet honor this field.
	CustomTlsFeatures pulumi.StringArrayOutput `pulumi:"customTlsFeatures"`
	// Free-text description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public
	// CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our
	// default set of public CAs. Only CAs specified in trustConfig will be accepted.
	ExcludePublicCaSet pulumi.BoolPtrOutput `pulumi:"excludePublicCaSet"`
	// The location of the tls inspection policy.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is
	// not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to
	// more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or
	// servers. Note that Secure Web Proxy does not yet honor this field. Possible values: ["TLS_VERSION_UNSPECIFIED",
	// "TLS_1_0", "TLS_1_1", "TLS_1_2", "TLS_1_3"]
	MinTlsVersion pulumi.StringPtrOutput `pulumi:"minTlsVersion"`
	// Short name of the TlsInspectionPolicy resource to be created.
	Name                                 pulumi.StringOutput                                 `pulumi:"name"`
	NetworkSecurityTlsInspectionPolicyId pulumi.StringOutput                                 `pulumi:"networkSecurityTlsInspectionPolicyId"`
	Project                              pulumi.StringOutput                                 `pulumi:"project"`
	Timeouts                             NetworkSecurityTlsInspectionPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
	// The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers
	// (\"PROFILE_COMPATIBLE\"). Setting this to more restrictive values may improve security, but may also prevent the TLS
	// inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
	// Possible values: ["PROFILE_UNSPECIFIED", "PROFILE_COMPATIBLE", "PROFILE_MODERN", "PROFILE_RESTRICTED", "PROFILE_CUSTOM"]
	TlsFeatureProfile pulumi.StringPtrOutput `pulumi:"tlsFeatureProfile"`
	// A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the
	// form \"projects/{project}/locations/{location}/trustConfigs/{trust_config}\". This is necessary to intercept TLS
	// connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS
	// inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
	TrustConfig pulumi.StringPtrOutput `pulumi:"trustConfig"`
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkSecurityTlsInspectionPolicy registers a new resource with the given unique name, arguments, and options.
func NewNetworkSecurityTlsInspectionPolicy(ctx *pulumi.Context,
	name string, args *NetworkSecurityTlsInspectionPolicyArgs, opts ...pulumi.ResourceOption) (*NetworkSecurityTlsInspectionPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CaPool == nil {
		return nil, errors.New("invalid value for required argument 'CaPool'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkSecurityTlsInspectionPolicy
	err = ctx.RegisterPackageResource("google-beta:index/networkSecurityTlsInspectionPolicy:NetworkSecurityTlsInspectionPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkSecurityTlsInspectionPolicy gets an existing NetworkSecurityTlsInspectionPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSecurityTlsInspectionPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkSecurityTlsInspectionPolicyState, opts ...pulumi.ResourceOption) (*NetworkSecurityTlsInspectionPolicy, error) {
	var resource NetworkSecurityTlsInspectionPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkSecurityTlsInspectionPolicy:NetworkSecurityTlsInspectionPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkSecurityTlsInspectionPolicy resources.
type networkSecurityTlsInspectionPolicyState struct {
	// A CA pool resource used to issue interception certificates.
	CaPool *string `pulumi:"caPool"`
	// The timestamp when the resource was created.
	CreateTime *string `pulumi:"createTime"`
	// List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The
	// compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list.
	// Note that Secure Web Proxy does not yet honor this field.
	CustomTlsFeatures []string `pulumi:"customTlsFeatures"`
	// Free-text description of the resource.
	Description *string `pulumi:"description"`
	// If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public
	// CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our
	// default set of public CAs. Only CAs specified in trustConfig will be accepted.
	ExcludePublicCaSet *bool `pulumi:"excludePublicCaSet"`
	// The location of the tls inspection policy.
	Location *string `pulumi:"location"`
	// Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is
	// not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to
	// more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or
	// servers. Note that Secure Web Proxy does not yet honor this field. Possible values: ["TLS_VERSION_UNSPECIFIED",
	// "TLS_1_0", "TLS_1_1", "TLS_1_2", "TLS_1_3"]
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// Short name of the TlsInspectionPolicy resource to be created.
	Name                                 *string                                     `pulumi:"name"`
	NetworkSecurityTlsInspectionPolicyId *string                                     `pulumi:"networkSecurityTlsInspectionPolicyId"`
	Project                              *string                                     `pulumi:"project"`
	Timeouts                             *NetworkSecurityTlsInspectionPolicyTimeouts `pulumi:"timeouts"`
	// The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers
	// (\"PROFILE_COMPATIBLE\"). Setting this to more restrictive values may improve security, but may also prevent the TLS
	// inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
	// Possible values: ["PROFILE_UNSPECIFIED", "PROFILE_COMPATIBLE", "PROFILE_MODERN", "PROFILE_RESTRICTED", "PROFILE_CUSTOM"]
	TlsFeatureProfile *string `pulumi:"tlsFeatureProfile"`
	// A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the
	// form \"projects/{project}/locations/{location}/trustConfigs/{trust_config}\". This is necessary to intercept TLS
	// connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS
	// inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
	TrustConfig *string `pulumi:"trustConfig"`
	// The timestamp when the resource was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkSecurityTlsInspectionPolicyState struct {
	// A CA pool resource used to issue interception certificates.
	CaPool pulumi.StringPtrInput
	// The timestamp when the resource was created.
	CreateTime pulumi.StringPtrInput
	// List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The
	// compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list.
	// Note that Secure Web Proxy does not yet honor this field.
	CustomTlsFeatures pulumi.StringArrayInput
	// Free-text description of the resource.
	Description pulumi.StringPtrInput
	// If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public
	// CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our
	// default set of public CAs. Only CAs specified in trustConfig will be accepted.
	ExcludePublicCaSet pulumi.BoolPtrInput
	// The location of the tls inspection policy.
	Location pulumi.StringPtrInput
	// Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is
	// not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to
	// more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or
	// servers. Note that Secure Web Proxy does not yet honor this field. Possible values: ["TLS_VERSION_UNSPECIFIED",
	// "TLS_1_0", "TLS_1_1", "TLS_1_2", "TLS_1_3"]
	MinTlsVersion pulumi.StringPtrInput
	// Short name of the TlsInspectionPolicy resource to be created.
	Name                                 pulumi.StringPtrInput
	NetworkSecurityTlsInspectionPolicyId pulumi.StringPtrInput
	Project                              pulumi.StringPtrInput
	Timeouts                             NetworkSecurityTlsInspectionPolicyTimeoutsPtrInput
	// The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers
	// (\"PROFILE_COMPATIBLE\"). Setting this to more restrictive values may improve security, but may also prevent the TLS
	// inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
	// Possible values: ["PROFILE_UNSPECIFIED", "PROFILE_COMPATIBLE", "PROFILE_MODERN", "PROFILE_RESTRICTED", "PROFILE_CUSTOM"]
	TlsFeatureProfile pulumi.StringPtrInput
	// A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the
	// form \"projects/{project}/locations/{location}/trustConfigs/{trust_config}\". This is necessary to intercept TLS
	// connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS
	// inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
	TrustConfig pulumi.StringPtrInput
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkSecurityTlsInspectionPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityTlsInspectionPolicyState)(nil)).Elem()
}

type networkSecurityTlsInspectionPolicyArgs struct {
	// A CA pool resource used to issue interception certificates.
	CaPool string `pulumi:"caPool"`
	// List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The
	// compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list.
	// Note that Secure Web Proxy does not yet honor this field.
	CustomTlsFeatures []string `pulumi:"customTlsFeatures"`
	// Free-text description of the resource.
	Description *string `pulumi:"description"`
	// If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public
	// CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our
	// default set of public CAs. Only CAs specified in trustConfig will be accepted.
	ExcludePublicCaSet *bool `pulumi:"excludePublicCaSet"`
	// The location of the tls inspection policy.
	Location *string `pulumi:"location"`
	// Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is
	// not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to
	// more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or
	// servers. Note that Secure Web Proxy does not yet honor this field. Possible values: ["TLS_VERSION_UNSPECIFIED",
	// "TLS_1_0", "TLS_1_1", "TLS_1_2", "TLS_1_3"]
	MinTlsVersion *string `pulumi:"minTlsVersion"`
	// Short name of the TlsInspectionPolicy resource to be created.
	Name                                 *string                                     `pulumi:"name"`
	NetworkSecurityTlsInspectionPolicyId *string                                     `pulumi:"networkSecurityTlsInspectionPolicyId"`
	Project                              *string                                     `pulumi:"project"`
	Timeouts                             *NetworkSecurityTlsInspectionPolicyTimeouts `pulumi:"timeouts"`
	// The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers
	// (\"PROFILE_COMPATIBLE\"). Setting this to more restrictive values may improve security, but may also prevent the TLS
	// inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
	// Possible values: ["PROFILE_UNSPECIFIED", "PROFILE_COMPATIBLE", "PROFILE_MODERN", "PROFILE_RESTRICTED", "PROFILE_CUSTOM"]
	TlsFeatureProfile *string `pulumi:"tlsFeatureProfile"`
	// A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the
	// form \"projects/{project}/locations/{location}/trustConfigs/{trust_config}\". This is necessary to intercept TLS
	// connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS
	// inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
	TrustConfig *string `pulumi:"trustConfig"`
}

// The set of arguments for constructing a NetworkSecurityTlsInspectionPolicy resource.
type NetworkSecurityTlsInspectionPolicyArgs struct {
	// A CA pool resource used to issue interception certificates.
	CaPool pulumi.StringInput
	// List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The
	// compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list.
	// Note that Secure Web Proxy does not yet honor this field.
	CustomTlsFeatures pulumi.StringArrayInput
	// Free-text description of the resource.
	Description pulumi.StringPtrInput
	// If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public
	// CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our
	// default set of public CAs. Only CAs specified in trustConfig will be accepted.
	ExcludePublicCaSet pulumi.BoolPtrInput
	// The location of the tls inspection policy.
	Location pulumi.StringPtrInput
	// Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is
	// not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to
	// more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or
	// servers. Note that Secure Web Proxy does not yet honor this field. Possible values: ["TLS_VERSION_UNSPECIFIED",
	// "TLS_1_0", "TLS_1_1", "TLS_1_2", "TLS_1_3"]
	MinTlsVersion pulumi.StringPtrInput
	// Short name of the TlsInspectionPolicy resource to be created.
	Name                                 pulumi.StringPtrInput
	NetworkSecurityTlsInspectionPolicyId pulumi.StringPtrInput
	Project                              pulumi.StringPtrInput
	Timeouts                             NetworkSecurityTlsInspectionPolicyTimeoutsPtrInput
	// The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers
	// (\"PROFILE_COMPATIBLE\"). Setting this to more restrictive values may improve security, but may also prevent the TLS
	// inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
	// Possible values: ["PROFILE_UNSPECIFIED", "PROFILE_COMPATIBLE", "PROFILE_MODERN", "PROFILE_RESTRICTED", "PROFILE_CUSTOM"]
	TlsFeatureProfile pulumi.StringPtrInput
	// A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the
	// form \"projects/{project}/locations/{location}/trustConfigs/{trust_config}\". This is necessary to intercept TLS
	// connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS
	// inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
	TrustConfig pulumi.StringPtrInput
}

func (NetworkSecurityTlsInspectionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityTlsInspectionPolicyArgs)(nil)).Elem()
}

type NetworkSecurityTlsInspectionPolicyInput interface {
	pulumi.Input

	ToNetworkSecurityTlsInspectionPolicyOutput() NetworkSecurityTlsInspectionPolicyOutput
	ToNetworkSecurityTlsInspectionPolicyOutputWithContext(ctx context.Context) NetworkSecurityTlsInspectionPolicyOutput
}

func (*NetworkSecurityTlsInspectionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityTlsInspectionPolicy)(nil)).Elem()
}

func (i *NetworkSecurityTlsInspectionPolicy) ToNetworkSecurityTlsInspectionPolicyOutput() NetworkSecurityTlsInspectionPolicyOutput {
	return i.ToNetworkSecurityTlsInspectionPolicyOutputWithContext(context.Background())
}

func (i *NetworkSecurityTlsInspectionPolicy) ToNetworkSecurityTlsInspectionPolicyOutputWithContext(ctx context.Context) NetworkSecurityTlsInspectionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityTlsInspectionPolicyOutput)
}

type NetworkSecurityTlsInspectionPolicyOutput struct{ *pulumi.OutputState }

func (NetworkSecurityTlsInspectionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityTlsInspectionPolicy)(nil)).Elem()
}

func (o NetworkSecurityTlsInspectionPolicyOutput) ToNetworkSecurityTlsInspectionPolicyOutput() NetworkSecurityTlsInspectionPolicyOutput {
	return o
}

func (o NetworkSecurityTlsInspectionPolicyOutput) ToNetworkSecurityTlsInspectionPolicyOutputWithContext(ctx context.Context) NetworkSecurityTlsInspectionPolicyOutput {
	return o
}

// A CA pool resource used to issue interception certificates.
func (o NetworkSecurityTlsInspectionPolicyOutput) CaPool() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringOutput { return v.CaPool }).(pulumi.StringOutput)
}

// The timestamp when the resource was created.
func (o NetworkSecurityTlsInspectionPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// List of custom TLS cipher suites selected. This field is valid only if the selected tls_feature_profile is CUSTOM. The
// compute.SslPoliciesService.ListAvailableFeatures method returns the set of features that can be specified in this list.
// Note that Secure Web Proxy does not yet honor this field.
func (o NetworkSecurityTlsInspectionPolicyOutput) CustomTlsFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringArrayOutput { return v.CustomTlsFeatures }).(pulumi.StringArrayOutput)
}

// Free-text description of the resource.
func (o NetworkSecurityTlsInspectionPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// If FALSE (the default), use our default set of public CAs in addition to any CAs specified in trustConfig. These public
// CAs are currently based on the Mozilla Root Program and are subject to change over time. If TRUE, do not accept our
// default set of public CAs. Only CAs specified in trustConfig will be accepted.
func (o NetworkSecurityTlsInspectionPolicyOutput) ExcludePublicCaSet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.BoolPtrOutput { return v.ExcludePublicCaSet }).(pulumi.BoolPtrOutput)
}

// The location of the tls inspection policy.
func (o NetworkSecurityTlsInspectionPolicyOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Minimum TLS version that the firewall should use when negotiating connections with both clients and servers. If this is
// not set, then the default value is to allow the broadest set of clients and servers (TLS 1.0 or higher). Setting this to
// more restrictive values may improve security, but may also prevent the firewall from connecting to some clients or
// servers. Note that Secure Web Proxy does not yet honor this field. Possible values: ["TLS_VERSION_UNSPECIFIED",
// "TLS_1_0", "TLS_1_1", "TLS_1_2", "TLS_1_3"]
func (o NetworkSecurityTlsInspectionPolicyOutput) MinTlsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringPtrOutput { return v.MinTlsVersion }).(pulumi.StringPtrOutput)
}

// Short name of the TlsInspectionPolicy resource to be created.
func (o NetworkSecurityTlsInspectionPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityTlsInspectionPolicyOutput) NetworkSecurityTlsInspectionPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringOutput {
		return v.NetworkSecurityTlsInspectionPolicyId
	}).(pulumi.StringOutput)
}

func (o NetworkSecurityTlsInspectionPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o NetworkSecurityTlsInspectionPolicyOutput) Timeouts() NetworkSecurityTlsInspectionPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) NetworkSecurityTlsInspectionPolicyTimeoutsPtrOutput {
		return v.Timeouts
	}).(NetworkSecurityTlsInspectionPolicyTimeoutsPtrOutput)
}

// The selected Profile. If this is not set, then the default value is to allow the broadest set of clients and servers
// (\"PROFILE_COMPATIBLE\"). Setting this to more restrictive values may improve security, but may also prevent the TLS
// inspection proxy from connecting to some clients or servers. Note that Secure Web Proxy does not yet honor this field.
// Possible values: ["PROFILE_UNSPECIFIED", "PROFILE_COMPATIBLE", "PROFILE_MODERN", "PROFILE_RESTRICTED", "PROFILE_CUSTOM"]
func (o NetworkSecurityTlsInspectionPolicyOutput) TlsFeatureProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringPtrOutput { return v.TlsFeatureProfile }).(pulumi.StringPtrOutput)
}

// A TrustConfig resource used when making a connection to the TLS server. This is a relative resource path following the
// form \"projects/{project}/locations/{location}/trustConfigs/{trust_config}\". This is necessary to intercept TLS
// connections to servers with certificates signed by a private CA or self-signed certificates. Trust config and the TLS
// inspection policy must be in the same region. Note that Secure Web Proxy does not yet honor this field.
func (o NetworkSecurityTlsInspectionPolicyOutput) TrustConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringPtrOutput { return v.TrustConfig }).(pulumi.StringPtrOutput)
}

// The timestamp when the resource was updated.
func (o NetworkSecurityTlsInspectionPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityTlsInspectionPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityTlsInspectionPolicyInput)(nil)).Elem(), &NetworkSecurityTlsInspectionPolicy{})
	pulumi.RegisterOutputType(NetworkSecurityTlsInspectionPolicyOutput{})
}
