// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RuntimeconfigConfigIamBinding struct {
	pulumi.CustomResourceState

	Condition                       RuntimeconfigConfigIamBindingConditionPtrOutput `pulumi:"condition"`
	Config                          pulumi.StringOutput                             `pulumi:"config"`
	Etag                            pulumi.StringOutput                             `pulumi:"etag"`
	Members                         pulumi.StringArrayOutput                        `pulumi:"members"`
	Project                         pulumi.StringOutput                             `pulumi:"project"`
	Role                            pulumi.StringOutput                             `pulumi:"role"`
	RuntimeconfigConfigIamBindingId pulumi.StringOutput                             `pulumi:"runtimeconfigConfigIamBindingId"`
}

// NewRuntimeconfigConfigIamBinding registers a new resource with the given unique name, arguments, and options.
func NewRuntimeconfigConfigIamBinding(ctx *pulumi.Context,
	name string, args *RuntimeconfigConfigIamBindingArgs, opts ...pulumi.ResourceOption) (*RuntimeconfigConfigIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource RuntimeconfigConfigIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/runtimeconfigConfigIamBinding:RuntimeconfigConfigIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuntimeconfigConfigIamBinding gets an existing RuntimeconfigConfigIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuntimeconfigConfigIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuntimeconfigConfigIamBindingState, opts ...pulumi.ResourceOption) (*RuntimeconfigConfigIamBinding, error) {
	var resource RuntimeconfigConfigIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/runtimeconfigConfigIamBinding:RuntimeconfigConfigIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuntimeconfigConfigIamBinding resources.
type runtimeconfigConfigIamBindingState struct {
	Condition                       *RuntimeconfigConfigIamBindingCondition `pulumi:"condition"`
	Config                          *string                                 `pulumi:"config"`
	Etag                            *string                                 `pulumi:"etag"`
	Members                         []string                                `pulumi:"members"`
	Project                         *string                                 `pulumi:"project"`
	Role                            *string                                 `pulumi:"role"`
	RuntimeconfigConfigIamBindingId *string                                 `pulumi:"runtimeconfigConfigIamBindingId"`
}

type RuntimeconfigConfigIamBindingState struct {
	Condition                       RuntimeconfigConfigIamBindingConditionPtrInput
	Config                          pulumi.StringPtrInput
	Etag                            pulumi.StringPtrInput
	Members                         pulumi.StringArrayInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringPtrInput
	RuntimeconfigConfigIamBindingId pulumi.StringPtrInput
}

func (RuntimeconfigConfigIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*runtimeconfigConfigIamBindingState)(nil)).Elem()
}

type runtimeconfigConfigIamBindingArgs struct {
	Condition                       *RuntimeconfigConfigIamBindingCondition `pulumi:"condition"`
	Config                          string                                  `pulumi:"config"`
	Members                         []string                                `pulumi:"members"`
	Project                         *string                                 `pulumi:"project"`
	Role                            string                                  `pulumi:"role"`
	RuntimeconfigConfigIamBindingId *string                                 `pulumi:"runtimeconfigConfigIamBindingId"`
}

// The set of arguments for constructing a RuntimeconfigConfigIamBinding resource.
type RuntimeconfigConfigIamBindingArgs struct {
	Condition                       RuntimeconfigConfigIamBindingConditionPtrInput
	Config                          pulumi.StringInput
	Members                         pulumi.StringArrayInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringInput
	RuntimeconfigConfigIamBindingId pulumi.StringPtrInput
}

func (RuntimeconfigConfigIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runtimeconfigConfigIamBindingArgs)(nil)).Elem()
}

type RuntimeconfigConfigIamBindingInput interface {
	pulumi.Input

	ToRuntimeconfigConfigIamBindingOutput() RuntimeconfigConfigIamBindingOutput
	ToRuntimeconfigConfigIamBindingOutputWithContext(ctx context.Context) RuntimeconfigConfigIamBindingOutput
}

func (*RuntimeconfigConfigIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimeconfigConfigIamBinding)(nil)).Elem()
}

func (i *RuntimeconfigConfigIamBinding) ToRuntimeconfigConfigIamBindingOutput() RuntimeconfigConfigIamBindingOutput {
	return i.ToRuntimeconfigConfigIamBindingOutputWithContext(context.Background())
}

func (i *RuntimeconfigConfigIamBinding) ToRuntimeconfigConfigIamBindingOutputWithContext(ctx context.Context) RuntimeconfigConfigIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimeconfigConfigIamBindingOutput)
}

type RuntimeconfigConfigIamBindingOutput struct{ *pulumi.OutputState }

func (RuntimeconfigConfigIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimeconfigConfigIamBinding)(nil)).Elem()
}

func (o RuntimeconfigConfigIamBindingOutput) ToRuntimeconfigConfigIamBindingOutput() RuntimeconfigConfigIamBindingOutput {
	return o
}

func (o RuntimeconfigConfigIamBindingOutput) ToRuntimeconfigConfigIamBindingOutputWithContext(ctx context.Context) RuntimeconfigConfigIamBindingOutput {
	return o
}

func (o RuntimeconfigConfigIamBindingOutput) Condition() RuntimeconfigConfigIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamBinding) RuntimeconfigConfigIamBindingConditionPtrOutput {
		return v.Condition
	}).(RuntimeconfigConfigIamBindingConditionPtrOutput)
}

func (o RuntimeconfigConfigIamBindingOutput) Config() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamBinding) pulumi.StringOutput { return v.Config }).(pulumi.StringOutput)
}

func (o RuntimeconfigConfigIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o RuntimeconfigConfigIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o RuntimeconfigConfigIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o RuntimeconfigConfigIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o RuntimeconfigConfigIamBindingOutput) RuntimeconfigConfigIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamBinding) pulumi.StringOutput { return v.RuntimeconfigConfigIamBindingId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuntimeconfigConfigIamBindingInput)(nil)).Elem(), &RuntimeconfigConfigIamBinding{})
	pulumi.RegisterOutputType(RuntimeconfigConfigIamBindingOutput{})
}
