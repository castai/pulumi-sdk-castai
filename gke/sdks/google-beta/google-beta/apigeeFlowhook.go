// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApigeeFlowhook struct {
	pulumi.CustomResourceState

	ApigeeFlowhookId pulumi.StringOutput `pulumi:"apigeeFlowhookId"`
	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue
	// execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError pulumi.BoolPtrOutput `pulumi:"continueOnError"`
	// Description of the flow hook.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The resource ID of the environment.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook,
	// PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint pulumi.StringOutput `pulumi:"flowHookPoint"`
	// The Apigee Organization associated with the environment
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow pulumi.StringOutput             `pulumi:"sharedflow"`
	Timeouts   ApigeeFlowhookTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewApigeeFlowhook registers a new resource with the given unique name, arguments, and options.
func NewApigeeFlowhook(ctx *pulumi.Context,
	name string, args *ApigeeFlowhookArgs, opts ...pulumi.ResourceOption) (*ApigeeFlowhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.FlowHookPoint == nil {
		return nil, errors.New("invalid value for required argument 'FlowHookPoint'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.Sharedflow == nil {
		return nil, errors.New("invalid value for required argument 'Sharedflow'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ApigeeFlowhook
	err = ctx.RegisterPackageResource("google-beta:index/apigeeFlowhook:ApigeeFlowhook", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigeeFlowhook gets an existing ApigeeFlowhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigeeFlowhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigeeFlowhookState, opts ...pulumi.ResourceOption) (*ApigeeFlowhook, error) {
	var resource ApigeeFlowhook
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/apigeeFlowhook:ApigeeFlowhook", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigeeFlowhook resources.
type apigeeFlowhookState struct {
	ApigeeFlowhookId *string `pulumi:"apigeeFlowhookId"`
	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue
	// execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// Description of the flow hook.
	Description *string `pulumi:"description"`
	// The resource ID of the environment.
	Environment *string `pulumi:"environment"`
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook,
	// PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint *string `pulumi:"flowHookPoint"`
	// The Apigee Organization associated with the environment
	OrgId *string `pulumi:"orgId"`
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow *string                 `pulumi:"sharedflow"`
	Timeouts   *ApigeeFlowhookTimeouts `pulumi:"timeouts"`
}

type ApigeeFlowhookState struct {
	ApigeeFlowhookId pulumi.StringPtrInput
	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue
	// execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError pulumi.BoolPtrInput
	// Description of the flow hook.
	Description pulumi.StringPtrInput
	// The resource ID of the environment.
	Environment pulumi.StringPtrInput
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook,
	// PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint pulumi.StringPtrInput
	// The Apigee Organization associated with the environment
	OrgId pulumi.StringPtrInput
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow pulumi.StringPtrInput
	Timeouts   ApigeeFlowhookTimeoutsPtrInput
}

func (ApigeeFlowhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigeeFlowhookState)(nil)).Elem()
}

type apigeeFlowhookArgs struct {
	ApigeeFlowhookId *string `pulumi:"apigeeFlowhookId"`
	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue
	// execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError *bool `pulumi:"continueOnError"`
	// Description of the flow hook.
	Description *string `pulumi:"description"`
	// The resource ID of the environment.
	Environment string `pulumi:"environment"`
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook,
	// PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint string `pulumi:"flowHookPoint"`
	// The Apigee Organization associated with the environment
	OrgId string `pulumi:"orgId"`
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow string                  `pulumi:"sharedflow"`
	Timeouts   *ApigeeFlowhookTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ApigeeFlowhook resource.
type ApigeeFlowhookArgs struct {
	ApigeeFlowhookId pulumi.StringPtrInput
	// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue
	// execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
	ContinueOnError pulumi.BoolPtrInput
	// Description of the flow hook.
	Description pulumi.StringPtrInput
	// The resource ID of the environment.
	Environment pulumi.StringInput
	// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook,
	// PreTargetFlowHook, or PostTargetFlowHook.
	FlowHookPoint pulumi.StringInput
	// The Apigee Organization associated with the environment
	OrgId pulumi.StringInput
	// Id of the Sharedflow attaching to a flowhook point.
	Sharedflow pulumi.StringInput
	Timeouts   ApigeeFlowhookTimeoutsPtrInput
}

func (ApigeeFlowhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigeeFlowhookArgs)(nil)).Elem()
}

type ApigeeFlowhookInput interface {
	pulumi.Input

	ToApigeeFlowhookOutput() ApigeeFlowhookOutput
	ToApigeeFlowhookOutputWithContext(ctx context.Context) ApigeeFlowhookOutput
}

func (*ApigeeFlowhook) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigeeFlowhook)(nil)).Elem()
}

func (i *ApigeeFlowhook) ToApigeeFlowhookOutput() ApigeeFlowhookOutput {
	return i.ToApigeeFlowhookOutputWithContext(context.Background())
}

func (i *ApigeeFlowhook) ToApigeeFlowhookOutputWithContext(ctx context.Context) ApigeeFlowhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigeeFlowhookOutput)
}

type ApigeeFlowhookOutput struct{ *pulumi.OutputState }

func (ApigeeFlowhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigeeFlowhook)(nil)).Elem()
}

func (o ApigeeFlowhookOutput) ToApigeeFlowhookOutput() ApigeeFlowhookOutput {
	return o
}

func (o ApigeeFlowhookOutput) ToApigeeFlowhookOutputWithContext(ctx context.Context) ApigeeFlowhookOutput {
	return o
}

func (o ApigeeFlowhookOutput) ApigeeFlowhookId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeFlowhook) pulumi.StringOutput { return v.ApigeeFlowhookId }).(pulumi.StringOutput)
}

// Flag that specifies whether execution should continue if the flow hook throws an exception. Set to true to continue
// execution. Set to false to stop execution if the flow hook throws an exception. Defaults to true.
func (o ApigeeFlowhookOutput) ContinueOnError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApigeeFlowhook) pulumi.BoolPtrOutput { return v.ContinueOnError }).(pulumi.BoolPtrOutput)
}

// Description of the flow hook.
func (o ApigeeFlowhookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigeeFlowhook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The resource ID of the environment.
func (o ApigeeFlowhookOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeFlowhook) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// Where in the API call flow the flow hook is invoked. Must be one of PreProxyFlowHook, PostProxyFlowHook,
// PreTargetFlowHook, or PostTargetFlowHook.
func (o ApigeeFlowhookOutput) FlowHookPoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeFlowhook) pulumi.StringOutput { return v.FlowHookPoint }).(pulumi.StringOutput)
}

// The Apigee Organization associated with the environment
func (o ApigeeFlowhookOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeFlowhook) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Id of the Sharedflow attaching to a flowhook point.
func (o ApigeeFlowhookOutput) Sharedflow() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeFlowhook) pulumi.StringOutput { return v.Sharedflow }).(pulumi.StringOutput)
}

func (o ApigeeFlowhookOutput) Timeouts() ApigeeFlowhookTimeoutsPtrOutput {
	return o.ApplyT(func(v *ApigeeFlowhook) ApigeeFlowhookTimeoutsPtrOutput { return v.Timeouts }).(ApigeeFlowhookTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigeeFlowhookInput)(nil)).Elem(), &ApigeeFlowhook{})
	pulumi.RegisterOutputType(ApigeeFlowhookOutput{})
}
