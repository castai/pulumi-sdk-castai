// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionHealthCheck struct {
	pulumi.CustomResourceState

	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec           pulumi.Float64PtrOutput `pulumi:"checkIntervalSec"`
	ComputeRegionHealthCheckId pulumi.StringOutput     `pulumi:"computeRegionHealthCheckId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A nested object resource.
	GrpcHealthCheck ComputeRegionHealthCheckGrpcHealthCheckPtrOutput `pulumi:"grpcHealthCheck"`
	// The unique identifier number for the resource. This identifier is defined by the server.
	HealthCheckId pulumi.Float64Output `pulumi:"healthCheckId"`
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold pulumi.Float64PtrOutput `pulumi:"healthyThreshold"`
	// A nested object resource.
	Http2HealthCheck ComputeRegionHealthCheckHttp2HealthCheckPtrOutput `pulumi:"http2HealthCheck"`
	// A nested object resource.
	HttpHealthCheck ComputeRegionHealthCheckHttpHealthCheckPtrOutput `pulumi:"httpHealthCheck"`
	// A nested object resource.
	HttpsHealthCheck ComputeRegionHealthCheckHttpsHealthCheckPtrOutput `pulumi:"httpsHealthCheck"`
	// Configure logging on this health check.
	LogConfig ComputeRegionHealthCheckLogConfigPtrOutput `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The Region in which the created health check should reside. If it is not provided, the provider region is used.
	Region   pulumi.StringOutput `pulumi:"region"`
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// A nested object resource.
	SslHealthCheck ComputeRegionHealthCheckSslHealthCheckPtrOutput `pulumi:"sslHealthCheck"`
	// A nested object resource.
	TcpHealthCheck ComputeRegionHealthCheckTcpHealthCheckPtrOutput `pulumi:"tcpHealthCheck"`
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec pulumi.Float64PtrOutput                   `pulumi:"timeoutSec"`
	Timeouts   ComputeRegionHealthCheckTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type of the health check. One of HTTP, HTTP2, HTTPS, TCP, or SSL.
	Type pulumi.StringOutput `pulumi:"type"`
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold pulumi.Float64PtrOutput `pulumi:"unhealthyThreshold"`
}

// NewComputeRegionHealthCheck registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionHealthCheck(ctx *pulumi.Context,
	name string, args *ComputeRegionHealthCheckArgs, opts ...pulumi.ResourceOption) (*ComputeRegionHealthCheck, error) {
	if args == nil {
		args = &ComputeRegionHealthCheckArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionHealthCheck
	err = ctx.RegisterPackageResource("google-beta:index/computeRegionHealthCheck:ComputeRegionHealthCheck", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionHealthCheck gets an existing ComputeRegionHealthCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionHealthCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionHealthCheckState, opts ...pulumi.ResourceOption) (*ComputeRegionHealthCheck, error) {
	var resource ComputeRegionHealthCheck
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeRegionHealthCheck:ComputeRegionHealthCheck", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionHealthCheck resources.
type computeRegionHealthCheckState struct {
	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec           *float64 `pulumi:"checkIntervalSec"`
	ComputeRegionHealthCheckId *string  `pulumi:"computeRegionHealthCheckId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// A nested object resource.
	GrpcHealthCheck *ComputeRegionHealthCheckGrpcHealthCheck `pulumi:"grpcHealthCheck"`
	// The unique identifier number for the resource. This identifier is defined by the server.
	HealthCheckId *float64 `pulumi:"healthCheckId"`
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold *float64 `pulumi:"healthyThreshold"`
	// A nested object resource.
	Http2HealthCheck *ComputeRegionHealthCheckHttp2HealthCheck `pulumi:"http2HealthCheck"`
	// A nested object resource.
	HttpHealthCheck *ComputeRegionHealthCheckHttpHealthCheck `pulumi:"httpHealthCheck"`
	// A nested object resource.
	HttpsHealthCheck *ComputeRegionHealthCheckHttpsHealthCheck `pulumi:"httpsHealthCheck"`
	// Configure logging on this health check.
	LogConfig *ComputeRegionHealthCheckLogConfig `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The Region in which the created health check should reside. If it is not provided, the provider region is used.
	Region   *string `pulumi:"region"`
	SelfLink *string `pulumi:"selfLink"`
	// A nested object resource.
	SslHealthCheck *ComputeRegionHealthCheckSslHealthCheck `pulumi:"sslHealthCheck"`
	// A nested object resource.
	TcpHealthCheck *ComputeRegionHealthCheckTcpHealthCheck `pulumi:"tcpHealthCheck"`
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec *float64                          `pulumi:"timeoutSec"`
	Timeouts   *ComputeRegionHealthCheckTimeouts `pulumi:"timeouts"`
	// The type of the health check. One of HTTP, HTTP2, HTTPS, TCP, or SSL.
	Type *string `pulumi:"type"`
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold *float64 `pulumi:"unhealthyThreshold"`
}

type ComputeRegionHealthCheckState struct {
	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec           pulumi.Float64PtrInput
	ComputeRegionHealthCheckId pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// A nested object resource.
	GrpcHealthCheck ComputeRegionHealthCheckGrpcHealthCheckPtrInput
	// The unique identifier number for the resource. This identifier is defined by the server.
	HealthCheckId pulumi.Float64PtrInput
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold pulumi.Float64PtrInput
	// A nested object resource.
	Http2HealthCheck ComputeRegionHealthCheckHttp2HealthCheckPtrInput
	// A nested object resource.
	HttpHealthCheck ComputeRegionHealthCheckHttpHealthCheckPtrInput
	// A nested object resource.
	HttpsHealthCheck ComputeRegionHealthCheckHttpsHealthCheckPtrInput
	// Configure logging on this health check.
	LogConfig ComputeRegionHealthCheckLogConfigPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The Region in which the created health check should reside. If it is not provided, the provider region is used.
	Region   pulumi.StringPtrInput
	SelfLink pulumi.StringPtrInput
	// A nested object resource.
	SslHealthCheck ComputeRegionHealthCheckSslHealthCheckPtrInput
	// A nested object resource.
	TcpHealthCheck ComputeRegionHealthCheckTcpHealthCheckPtrInput
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec pulumi.Float64PtrInput
	Timeouts   ComputeRegionHealthCheckTimeoutsPtrInput
	// The type of the health check. One of HTTP, HTTP2, HTTPS, TCP, or SSL.
	Type pulumi.StringPtrInput
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold pulumi.Float64PtrInput
}

func (ComputeRegionHealthCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionHealthCheckState)(nil)).Elem()
}

type computeRegionHealthCheckArgs struct {
	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec           *float64 `pulumi:"checkIntervalSec"`
	ComputeRegionHealthCheckId *string  `pulumi:"computeRegionHealthCheckId"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// A nested object resource.
	GrpcHealthCheck *ComputeRegionHealthCheckGrpcHealthCheck `pulumi:"grpcHealthCheck"`
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold *float64 `pulumi:"healthyThreshold"`
	// A nested object resource.
	Http2HealthCheck *ComputeRegionHealthCheckHttp2HealthCheck `pulumi:"http2HealthCheck"`
	// A nested object resource.
	HttpHealthCheck *ComputeRegionHealthCheckHttpHealthCheck `pulumi:"httpHealthCheck"`
	// A nested object resource.
	HttpsHealthCheck *ComputeRegionHealthCheckHttpsHealthCheck `pulumi:"httpsHealthCheck"`
	// Configure logging on this health check.
	LogConfig *ComputeRegionHealthCheckLogConfig `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The Region in which the created health check should reside. If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// A nested object resource.
	SslHealthCheck *ComputeRegionHealthCheckSslHealthCheck `pulumi:"sslHealthCheck"`
	// A nested object resource.
	TcpHealthCheck *ComputeRegionHealthCheckTcpHealthCheck `pulumi:"tcpHealthCheck"`
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec *float64                          `pulumi:"timeoutSec"`
	Timeouts   *ComputeRegionHealthCheckTimeouts `pulumi:"timeouts"`
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold *float64 `pulumi:"unhealthyThreshold"`
}

// The set of arguments for constructing a ComputeRegionHealthCheck resource.
type ComputeRegionHealthCheckArgs struct {
	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec           pulumi.Float64PtrInput
	ComputeRegionHealthCheckId pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// A nested object resource.
	GrpcHealthCheck ComputeRegionHealthCheckGrpcHealthCheckPtrInput
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold pulumi.Float64PtrInput
	// A nested object resource.
	Http2HealthCheck ComputeRegionHealthCheckHttp2HealthCheckPtrInput
	// A nested object resource.
	HttpHealthCheck ComputeRegionHealthCheckHttpHealthCheckPtrInput
	// A nested object resource.
	HttpsHealthCheck ComputeRegionHealthCheckHttpsHealthCheckPtrInput
	// Configure logging on this health check.
	LogConfig ComputeRegionHealthCheckLogConfigPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The Region in which the created health check should reside. If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// A nested object resource.
	SslHealthCheck ComputeRegionHealthCheckSslHealthCheckPtrInput
	// A nested object resource.
	TcpHealthCheck ComputeRegionHealthCheckTcpHealthCheckPtrInput
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec pulumi.Float64PtrInput
	Timeouts   ComputeRegionHealthCheckTimeoutsPtrInput
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold pulumi.Float64PtrInput
}

func (ComputeRegionHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionHealthCheckArgs)(nil)).Elem()
}

type ComputeRegionHealthCheckInput interface {
	pulumi.Input

	ToComputeRegionHealthCheckOutput() ComputeRegionHealthCheckOutput
	ToComputeRegionHealthCheckOutputWithContext(ctx context.Context) ComputeRegionHealthCheckOutput
}

func (*ComputeRegionHealthCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionHealthCheck)(nil)).Elem()
}

func (i *ComputeRegionHealthCheck) ToComputeRegionHealthCheckOutput() ComputeRegionHealthCheckOutput {
	return i.ToComputeRegionHealthCheckOutputWithContext(context.Background())
}

func (i *ComputeRegionHealthCheck) ToComputeRegionHealthCheckOutputWithContext(ctx context.Context) ComputeRegionHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionHealthCheckOutput)
}

type ComputeRegionHealthCheckOutput struct{ *pulumi.OutputState }

func (ComputeRegionHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionHealthCheck)(nil)).Elem()
}

func (o ComputeRegionHealthCheckOutput) ToComputeRegionHealthCheckOutput() ComputeRegionHealthCheckOutput {
	return o
}

func (o ComputeRegionHealthCheckOutput) ToComputeRegionHealthCheckOutputWithContext(ctx context.Context) ComputeRegionHealthCheckOutput {
	return o
}

// How often (in seconds) to send a health check. The default value is 5 seconds.
func (o ComputeRegionHealthCheckOutput) CheckIntervalSec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.Float64PtrOutput { return v.CheckIntervalSec }).(pulumi.Float64PtrOutput)
}

func (o ComputeRegionHealthCheckOutput) ComputeRegionHealthCheckId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.StringOutput { return v.ComputeRegionHealthCheckId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeRegionHealthCheckOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o ComputeRegionHealthCheckOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A nested object resource.
func (o ComputeRegionHealthCheckOutput) GrpcHealthCheck() ComputeRegionHealthCheckGrpcHealthCheckPtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) ComputeRegionHealthCheckGrpcHealthCheckPtrOutput {
		return v.GrpcHealthCheck
	}).(ComputeRegionHealthCheckGrpcHealthCheckPtrOutput)
}

// The unique identifier number for the resource. This identifier is defined by the server.
func (o ComputeRegionHealthCheckOutput) HealthCheckId() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.Float64Output { return v.HealthCheckId }).(pulumi.Float64Output)
}

// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
func (o ComputeRegionHealthCheckOutput) HealthyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.Float64PtrOutput { return v.HealthyThreshold }).(pulumi.Float64PtrOutput)
}

// A nested object resource.
func (o ComputeRegionHealthCheckOutput) Http2HealthCheck() ComputeRegionHealthCheckHttp2HealthCheckPtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) ComputeRegionHealthCheckHttp2HealthCheckPtrOutput {
		return v.Http2HealthCheck
	}).(ComputeRegionHealthCheckHttp2HealthCheckPtrOutput)
}

// A nested object resource.
func (o ComputeRegionHealthCheckOutput) HttpHealthCheck() ComputeRegionHealthCheckHttpHealthCheckPtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) ComputeRegionHealthCheckHttpHealthCheckPtrOutput {
		return v.HttpHealthCheck
	}).(ComputeRegionHealthCheckHttpHealthCheckPtrOutput)
}

// A nested object resource.
func (o ComputeRegionHealthCheckOutput) HttpsHealthCheck() ComputeRegionHealthCheckHttpsHealthCheckPtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) ComputeRegionHealthCheckHttpsHealthCheckPtrOutput {
		return v.HttpsHealthCheck
	}).(ComputeRegionHealthCheckHttpsHealthCheckPtrOutput)
}

// Configure logging on this health check.
func (o ComputeRegionHealthCheckOutput) LogConfig() ComputeRegionHealthCheckLogConfigPtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) ComputeRegionHealthCheckLogConfigPtrOutput { return v.LogConfig }).(ComputeRegionHealthCheckLogConfigPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeRegionHealthCheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeRegionHealthCheckOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The Region in which the created health check should reside. If it is not provided, the provider region is used.
func (o ComputeRegionHealthCheckOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComputeRegionHealthCheckOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// A nested object resource.
func (o ComputeRegionHealthCheckOutput) SslHealthCheck() ComputeRegionHealthCheckSslHealthCheckPtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) ComputeRegionHealthCheckSslHealthCheckPtrOutput {
		return v.SslHealthCheck
	}).(ComputeRegionHealthCheckSslHealthCheckPtrOutput)
}

// A nested object resource.
func (o ComputeRegionHealthCheckOutput) TcpHealthCheck() ComputeRegionHealthCheckTcpHealthCheckPtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) ComputeRegionHealthCheckTcpHealthCheckPtrOutput {
		return v.TcpHealthCheck
	}).(ComputeRegionHealthCheckTcpHealthCheckPtrOutput)
}

// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
// have greater value than checkIntervalSec.
func (o ComputeRegionHealthCheckOutput) TimeoutSec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.Float64PtrOutput { return v.TimeoutSec }).(pulumi.Float64PtrOutput)
}

func (o ComputeRegionHealthCheckOutput) Timeouts() ComputeRegionHealthCheckTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) ComputeRegionHealthCheckTimeoutsPtrOutput { return v.Timeouts }).(ComputeRegionHealthCheckTimeoutsPtrOutput)
}

// The type of the health check. One of HTTP, HTTP2, HTTPS, TCP, or SSL.
func (o ComputeRegionHealthCheckOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
func (o ComputeRegionHealthCheckOutput) UnhealthyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeRegionHealthCheck) pulumi.Float64PtrOutput { return v.UnhealthyThreshold }).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionHealthCheckInput)(nil)).Elem(), &ComputeRegionHealthCheck{})
	pulumi.RegisterOutputType(ComputeRegionHealthCheckOutput{})
}
