// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeInstanceIamBinding struct {
	pulumi.CustomResourceState

	ComputeInstanceIamBindingId pulumi.StringOutput                         `pulumi:"computeInstanceIamBindingId"`
	Condition                   ComputeInstanceIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                        pulumi.StringOutput                         `pulumi:"etag"`
	InstanceName                pulumi.StringOutput                         `pulumi:"instanceName"`
	Members                     pulumi.StringArrayOutput                    `pulumi:"members"`
	Project                     pulumi.StringOutput                         `pulumi:"project"`
	Role                        pulumi.StringOutput                         `pulumi:"role"`
	Zone                        pulumi.StringOutput                         `pulumi:"zone"`
}

// NewComputeInstanceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewComputeInstanceIamBinding(ctx *pulumi.Context,
	name string, args *ComputeInstanceIamBindingArgs, opts ...pulumi.ResourceOption) (*ComputeInstanceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeInstanceIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/computeInstanceIamBinding:ComputeInstanceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInstanceIamBinding gets an existing ComputeInstanceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInstanceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInstanceIamBindingState, opts ...pulumi.ResourceOption) (*ComputeInstanceIamBinding, error) {
	var resource ComputeInstanceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeInstanceIamBinding:ComputeInstanceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInstanceIamBinding resources.
type computeInstanceIamBindingState struct {
	ComputeInstanceIamBindingId *string                             `pulumi:"computeInstanceIamBindingId"`
	Condition                   *ComputeInstanceIamBindingCondition `pulumi:"condition"`
	Etag                        *string                             `pulumi:"etag"`
	InstanceName                *string                             `pulumi:"instanceName"`
	Members                     []string                            `pulumi:"members"`
	Project                     *string                             `pulumi:"project"`
	Role                        *string                             `pulumi:"role"`
	Zone                        *string                             `pulumi:"zone"`
}

type ComputeInstanceIamBindingState struct {
	ComputeInstanceIamBindingId pulumi.StringPtrInput
	Condition                   ComputeInstanceIamBindingConditionPtrInput
	Etag                        pulumi.StringPtrInput
	InstanceName                pulumi.StringPtrInput
	Members                     pulumi.StringArrayInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringPtrInput
	Zone                        pulumi.StringPtrInput
}

func (ComputeInstanceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceIamBindingState)(nil)).Elem()
}

type computeInstanceIamBindingArgs struct {
	ComputeInstanceIamBindingId *string                             `pulumi:"computeInstanceIamBindingId"`
	Condition                   *ComputeInstanceIamBindingCondition `pulumi:"condition"`
	InstanceName                string                              `pulumi:"instanceName"`
	Members                     []string                            `pulumi:"members"`
	Project                     *string                             `pulumi:"project"`
	Role                        string                              `pulumi:"role"`
	Zone                        *string                             `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeInstanceIamBinding resource.
type ComputeInstanceIamBindingArgs struct {
	ComputeInstanceIamBindingId pulumi.StringPtrInput
	Condition                   ComputeInstanceIamBindingConditionPtrInput
	InstanceName                pulumi.StringInput
	Members                     pulumi.StringArrayInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringInput
	Zone                        pulumi.StringPtrInput
}

func (ComputeInstanceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceIamBindingArgs)(nil)).Elem()
}

type ComputeInstanceIamBindingInput interface {
	pulumi.Input

	ToComputeInstanceIamBindingOutput() ComputeInstanceIamBindingOutput
	ToComputeInstanceIamBindingOutputWithContext(ctx context.Context) ComputeInstanceIamBindingOutput
}

func (*ComputeInstanceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceIamBinding)(nil)).Elem()
}

func (i *ComputeInstanceIamBinding) ToComputeInstanceIamBindingOutput() ComputeInstanceIamBindingOutput {
	return i.ToComputeInstanceIamBindingOutputWithContext(context.Background())
}

func (i *ComputeInstanceIamBinding) ToComputeInstanceIamBindingOutputWithContext(ctx context.Context) ComputeInstanceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceIamBindingOutput)
}

type ComputeInstanceIamBindingOutput struct{ *pulumi.OutputState }

func (ComputeInstanceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceIamBinding)(nil)).Elem()
}

func (o ComputeInstanceIamBindingOutput) ToComputeInstanceIamBindingOutput() ComputeInstanceIamBindingOutput {
	return o
}

func (o ComputeInstanceIamBindingOutput) ToComputeInstanceIamBindingOutputWithContext(ctx context.Context) ComputeInstanceIamBindingOutput {
	return o
}

func (o ComputeInstanceIamBindingOutput) ComputeInstanceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamBinding) pulumi.StringOutput { return v.ComputeInstanceIamBindingId }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamBindingOutput) Condition() ComputeInstanceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceIamBinding) ComputeInstanceIamBindingConditionPtrOutput { return v.Condition }).(ComputeInstanceIamBindingConditionPtrOutput)
}

func (o ComputeInstanceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamBindingOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamBinding) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeInstanceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o ComputeInstanceIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamBindingOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamBinding) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceIamBindingInput)(nil)).Elem(), &ComputeInstanceIamBinding{})
	pulumi.RegisterOutputType(ComputeInstanceIamBindingOutput{})
}
