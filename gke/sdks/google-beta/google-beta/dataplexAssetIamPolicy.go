// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexAssetIamPolicy struct {
	pulumi.CustomResourceState

	Asset                    pulumi.StringOutput `pulumi:"asset"`
	DataplexAssetIamPolicyId pulumi.StringOutput `pulumi:"dataplexAssetIamPolicyId"`
	DataplexZone             pulumi.StringOutput `pulumi:"dataplexZone"`
	Etag                     pulumi.StringOutput `pulumi:"etag"`
	Lake                     pulumi.StringOutput `pulumi:"lake"`
	Location                 pulumi.StringOutput `pulumi:"location"`
	PolicyData               pulumi.StringOutput `pulumi:"policyData"`
	Project                  pulumi.StringOutput `pulumi:"project"`
}

// NewDataplexAssetIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDataplexAssetIamPolicy(ctx *pulumi.Context,
	name string, args *DataplexAssetIamPolicyArgs, opts ...pulumi.ResourceOption) (*DataplexAssetIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Asset == nil {
		return nil, errors.New("invalid value for required argument 'Asset'")
	}
	if args.DataplexZone == nil {
		return nil, errors.New("invalid value for required argument 'DataplexZone'")
	}
	if args.Lake == nil {
		return nil, errors.New("invalid value for required argument 'Lake'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexAssetIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/dataplexAssetIamPolicy:DataplexAssetIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexAssetIamPolicy gets an existing DataplexAssetIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexAssetIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexAssetIamPolicyState, opts ...pulumi.ResourceOption) (*DataplexAssetIamPolicy, error) {
	var resource DataplexAssetIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexAssetIamPolicy:DataplexAssetIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexAssetIamPolicy resources.
type dataplexAssetIamPolicyState struct {
	Asset                    *string `pulumi:"asset"`
	DataplexAssetIamPolicyId *string `pulumi:"dataplexAssetIamPolicyId"`
	DataplexZone             *string `pulumi:"dataplexZone"`
	Etag                     *string `pulumi:"etag"`
	Lake                     *string `pulumi:"lake"`
	Location                 *string `pulumi:"location"`
	PolicyData               *string `pulumi:"policyData"`
	Project                  *string `pulumi:"project"`
}

type DataplexAssetIamPolicyState struct {
	Asset                    pulumi.StringPtrInput
	DataplexAssetIamPolicyId pulumi.StringPtrInput
	DataplexZone             pulumi.StringPtrInput
	Etag                     pulumi.StringPtrInput
	Lake                     pulumi.StringPtrInput
	Location                 pulumi.StringPtrInput
	PolicyData               pulumi.StringPtrInput
	Project                  pulumi.StringPtrInput
}

func (DataplexAssetIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAssetIamPolicyState)(nil)).Elem()
}

type dataplexAssetIamPolicyArgs struct {
	Asset                    string  `pulumi:"asset"`
	DataplexAssetIamPolicyId *string `pulumi:"dataplexAssetIamPolicyId"`
	DataplexZone             string  `pulumi:"dataplexZone"`
	Lake                     string  `pulumi:"lake"`
	Location                 *string `pulumi:"location"`
	PolicyData               string  `pulumi:"policyData"`
	Project                  *string `pulumi:"project"`
}

// The set of arguments for constructing a DataplexAssetIamPolicy resource.
type DataplexAssetIamPolicyArgs struct {
	Asset                    pulumi.StringInput
	DataplexAssetIamPolicyId pulumi.StringPtrInput
	DataplexZone             pulumi.StringInput
	Lake                     pulumi.StringInput
	Location                 pulumi.StringPtrInput
	PolicyData               pulumi.StringInput
	Project                  pulumi.StringPtrInput
}

func (DataplexAssetIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAssetIamPolicyArgs)(nil)).Elem()
}

type DataplexAssetIamPolicyInput interface {
	pulumi.Input

	ToDataplexAssetIamPolicyOutput() DataplexAssetIamPolicyOutput
	ToDataplexAssetIamPolicyOutputWithContext(ctx context.Context) DataplexAssetIamPolicyOutput
}

func (*DataplexAssetIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAssetIamPolicy)(nil)).Elem()
}

func (i *DataplexAssetIamPolicy) ToDataplexAssetIamPolicyOutput() DataplexAssetIamPolicyOutput {
	return i.ToDataplexAssetIamPolicyOutputWithContext(context.Background())
}

func (i *DataplexAssetIamPolicy) ToDataplexAssetIamPolicyOutputWithContext(ctx context.Context) DataplexAssetIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexAssetIamPolicyOutput)
}

type DataplexAssetIamPolicyOutput struct{ *pulumi.OutputState }

func (DataplexAssetIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAssetIamPolicy)(nil)).Elem()
}

func (o DataplexAssetIamPolicyOutput) ToDataplexAssetIamPolicyOutput() DataplexAssetIamPolicyOutput {
	return o
}

func (o DataplexAssetIamPolicyOutput) ToDataplexAssetIamPolicyOutputWithContext(ctx context.Context) DataplexAssetIamPolicyOutput {
	return o
}

func (o DataplexAssetIamPolicyOutput) Asset() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamPolicy) pulumi.StringOutput { return v.Asset }).(pulumi.StringOutput)
}

func (o DataplexAssetIamPolicyOutput) DataplexAssetIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamPolicy) pulumi.StringOutput { return v.DataplexAssetIamPolicyId }).(pulumi.StringOutput)
}

func (o DataplexAssetIamPolicyOutput) DataplexZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamPolicy) pulumi.StringOutput { return v.DataplexZone }).(pulumi.StringOutput)
}

func (o DataplexAssetIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexAssetIamPolicyOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamPolicy) pulumi.StringOutput { return v.Lake }).(pulumi.StringOutput)
}

func (o DataplexAssetIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexAssetIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o DataplexAssetIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexAssetIamPolicyInput)(nil)).Elem(), &DataplexAssetIamPolicy{})
	pulumi.RegisterOutputType(DataplexAssetIamPolicyOutput{})
}
