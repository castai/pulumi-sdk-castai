// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VertexAiMetadataStore struct {
	pulumi.CustomResourceState

	// The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Description of the MetadataStore.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this
	// MetadataStore will be secured by this key.
	EncryptionSpec VertexAiMetadataStoreEncryptionSpecPtrOutput `pulumi:"encryptionSpec"`
	// The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first
	// character cannot be a number.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The region of the Metadata Store. eg us-central1
	Region pulumi.StringOutput `pulumi:"region"`
	// State information of the MetadataStore.
	States   VertexAiMetadataStoreStateTypeArrayOutput `pulumi:"states"`
	Timeouts VertexAiMetadataStoreTimeoutsPtrOutput    `pulumi:"timeouts"`
	// The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	UpdateTime              pulumi.StringOutput `pulumi:"updateTime"`
	VertexAiMetadataStoreId pulumi.StringOutput `pulumi:"vertexAiMetadataStoreId"`
}

// NewVertexAiMetadataStore registers a new resource with the given unique name, arguments, and options.
func NewVertexAiMetadataStore(ctx *pulumi.Context,
	name string, args *VertexAiMetadataStoreArgs, opts ...pulumi.ResourceOption) (*VertexAiMetadataStore, error) {
	if args == nil {
		args = &VertexAiMetadataStoreArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VertexAiMetadataStore
	err = ctx.RegisterPackageResource("google-beta:index/vertexAiMetadataStore:VertexAiMetadataStore", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVertexAiMetadataStore gets an existing VertexAiMetadataStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVertexAiMetadataStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VertexAiMetadataStoreState, opts ...pulumi.ResourceOption) (*VertexAiMetadataStore, error) {
	var resource VertexAiMetadataStore
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vertexAiMetadataStore:VertexAiMetadataStore", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VertexAiMetadataStore resources.
type vertexAiMetadataStoreState struct {
	// The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// Description of the MetadataStore.
	Description *string `pulumi:"description"`
	// Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this
	// MetadataStore will be secured by this key.
	EncryptionSpec *VertexAiMetadataStoreEncryptionSpec `pulumi:"encryptionSpec"`
	// The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first
	// character cannot be a number.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The region of the Metadata Store. eg us-central1
	Region *string `pulumi:"region"`
	// State information of the MetadataStore.
	States   []VertexAiMetadataStoreStateType `pulumi:"states"`
	Timeouts *VertexAiMetadataStoreTimeouts   `pulumi:"timeouts"`
	// The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	UpdateTime              *string `pulumi:"updateTime"`
	VertexAiMetadataStoreId *string `pulumi:"vertexAiMetadataStoreId"`
}

type VertexAiMetadataStoreState struct {
	// The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	CreateTime pulumi.StringPtrInput
	// Description of the MetadataStore.
	Description pulumi.StringPtrInput
	// Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this
	// MetadataStore will be secured by this key.
	EncryptionSpec VertexAiMetadataStoreEncryptionSpecPtrInput
	// The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first
	// character cannot be a number.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The region of the Metadata Store. eg us-central1
	Region pulumi.StringPtrInput
	// State information of the MetadataStore.
	States   VertexAiMetadataStoreStateTypeArrayInput
	Timeouts VertexAiMetadataStoreTimeoutsPtrInput
	// The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	UpdateTime              pulumi.StringPtrInput
	VertexAiMetadataStoreId pulumi.StringPtrInput
}

func (VertexAiMetadataStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiMetadataStoreState)(nil)).Elem()
}

type vertexAiMetadataStoreArgs struct {
	// Description of the MetadataStore.
	Description *string `pulumi:"description"`
	// Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this
	// MetadataStore will be secured by this key.
	EncryptionSpec *VertexAiMetadataStoreEncryptionSpec `pulumi:"encryptionSpec"`
	// The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first
	// character cannot be a number.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The region of the Metadata Store. eg us-central1
	Region                  *string                        `pulumi:"region"`
	Timeouts                *VertexAiMetadataStoreTimeouts `pulumi:"timeouts"`
	VertexAiMetadataStoreId *string                        `pulumi:"vertexAiMetadataStoreId"`
}

// The set of arguments for constructing a VertexAiMetadataStore resource.
type VertexAiMetadataStoreArgs struct {
	// Description of the MetadataStore.
	Description pulumi.StringPtrInput
	// Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this
	// MetadataStore will be secured by this key.
	EncryptionSpec VertexAiMetadataStoreEncryptionSpecPtrInput
	// The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first
	// character cannot be a number.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The region of the Metadata Store. eg us-central1
	Region                  pulumi.StringPtrInput
	Timeouts                VertexAiMetadataStoreTimeoutsPtrInput
	VertexAiMetadataStoreId pulumi.StringPtrInput
}

func (VertexAiMetadataStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiMetadataStoreArgs)(nil)).Elem()
}

type VertexAiMetadataStoreInput interface {
	pulumi.Input

	ToVertexAiMetadataStoreOutput() VertexAiMetadataStoreOutput
	ToVertexAiMetadataStoreOutputWithContext(ctx context.Context) VertexAiMetadataStoreOutput
}

func (*VertexAiMetadataStore) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiMetadataStore)(nil)).Elem()
}

func (i *VertexAiMetadataStore) ToVertexAiMetadataStoreOutput() VertexAiMetadataStoreOutput {
	return i.ToVertexAiMetadataStoreOutputWithContext(context.Background())
}

func (i *VertexAiMetadataStore) ToVertexAiMetadataStoreOutputWithContext(ctx context.Context) VertexAiMetadataStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VertexAiMetadataStoreOutput)
}

type VertexAiMetadataStoreOutput struct{ *pulumi.OutputState }

func (VertexAiMetadataStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiMetadataStore)(nil)).Elem()
}

func (o VertexAiMetadataStoreOutput) ToVertexAiMetadataStoreOutput() VertexAiMetadataStoreOutput {
	return o
}

func (o VertexAiMetadataStoreOutput) ToVertexAiMetadataStoreOutputWithContext(ctx context.Context) VertexAiMetadataStoreOutput {
	return o
}

// The timestamp of when the MetadataStore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
// nine fractional digits.
func (o VertexAiMetadataStoreOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the MetadataStore.
func (o VertexAiMetadataStoreOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Customer-managed encryption key spec for a MetadataStore. If set, this MetadataStore and all sub-resources of this
// MetadataStore will be secured by this key.
func (o VertexAiMetadataStoreOutput) EncryptionSpec() VertexAiMetadataStoreEncryptionSpecPtrOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) VertexAiMetadataStoreEncryptionSpecPtrOutput { return v.EncryptionSpec }).(VertexAiMetadataStoreEncryptionSpecPtrOutput)
}

// The name of the MetadataStore. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first
// character cannot be a number.
func (o VertexAiMetadataStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VertexAiMetadataStoreOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of the Metadata Store. eg us-central1
func (o VertexAiMetadataStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// State information of the MetadataStore.
func (o VertexAiMetadataStoreOutput) States() VertexAiMetadataStoreStateTypeArrayOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) VertexAiMetadataStoreStateTypeArrayOutput { return v.States }).(VertexAiMetadataStoreStateTypeArrayOutput)
}

func (o VertexAiMetadataStoreOutput) Timeouts() VertexAiMetadataStoreTimeoutsPtrOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) VertexAiMetadataStoreTimeoutsPtrOutput { return v.Timeouts }).(VertexAiMetadataStoreTimeoutsPtrOutput)
}

// The timestamp of when the MetadataStore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
func (o VertexAiMetadataStoreOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o VertexAiMetadataStoreOutput) VertexAiMetadataStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiMetadataStore) pulumi.StringOutput { return v.VertexAiMetadataStoreId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VertexAiMetadataStoreInput)(nil)).Elem(), &VertexAiMetadataStore{})
	pulumi.RegisterOutputType(VertexAiMetadataStoreOutput{})
}
