// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkServicesGrpcRoute struct {
	pulumi.CustomResourceState

	// Time the GrpcRoute was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// List of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway.
	Gateways pulumi.StringArrayOutput `pulumi:"gateways"`
	// Required. Service hostnames with an optional port for which this route describes traffic.
	Hostnames pulumi.StringArrayOutput `pulumi:"hostnames"`
	// Set of label tags associated with the GrpcRoute resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// List of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh.
	Meshes pulumi.StringArrayOutput `pulumi:"meshes"`
	// Name of the GrpcRoute resource.
	Name                       pulumi.StringOutput `pulumi:"name"`
	NetworkServicesGrpcRouteId pulumi.StringOutput `pulumi:"networkServicesGrpcRouteId"`
	Project                    pulumi.StringOutput `pulumi:"project"`
	// Rules that define how traffic is routed and handled.
	Rules NetworkServicesGrpcRouteRuleArrayOutput `pulumi:"rules"`
	// Server-defined URL of this resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                    `pulumi:"terraformLabels"`
	Timeouts        NetworkServicesGrpcRouteTimeoutsPtrOutput `pulumi:"timeouts"`
	// Time the GrpcRoute was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkServicesGrpcRoute registers a new resource with the given unique name, arguments, and options.
func NewNetworkServicesGrpcRoute(ctx *pulumi.Context,
	name string, args *NetworkServicesGrpcRouteArgs, opts ...pulumi.ResourceOption) (*NetworkServicesGrpcRoute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Hostnames == nil {
		return nil, errors.New("invalid value for required argument 'Hostnames'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkServicesGrpcRoute
	err = ctx.RegisterPackageResource("google-beta:index/networkServicesGrpcRoute:NetworkServicesGrpcRoute", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkServicesGrpcRoute gets an existing NetworkServicesGrpcRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkServicesGrpcRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkServicesGrpcRouteState, opts ...pulumi.ResourceOption) (*NetworkServicesGrpcRoute, error) {
	var resource NetworkServicesGrpcRoute
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkServicesGrpcRoute:NetworkServicesGrpcRoute", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkServicesGrpcRoute resources.
type networkServicesGrpcRouteState struct {
	// Time the GrpcRoute was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// List of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway.
	Gateways []string `pulumi:"gateways"`
	// Required. Service hostnames with an optional port for which this route describes traffic.
	Hostnames []string `pulumi:"hostnames"`
	// Set of label tags associated with the GrpcRoute resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// List of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh.
	Meshes []string `pulumi:"meshes"`
	// Name of the GrpcRoute resource.
	Name                       *string `pulumi:"name"`
	NetworkServicesGrpcRouteId *string `pulumi:"networkServicesGrpcRouteId"`
	Project                    *string `pulumi:"project"`
	// Rules that define how traffic is routed and handled.
	Rules []NetworkServicesGrpcRouteRule `pulumi:"rules"`
	// Server-defined URL of this resource.
	SelfLink *string `pulumi:"selfLink"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                 `pulumi:"terraformLabels"`
	Timeouts        *NetworkServicesGrpcRouteTimeouts `pulumi:"timeouts"`
	// Time the GrpcRoute was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkServicesGrpcRouteState struct {
	// Time the GrpcRoute was created in UTC.
	CreateTime pulumi.StringPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// List of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway.
	Gateways pulumi.StringArrayInput
	// Required. Service hostnames with an optional port for which this route describes traffic.
	Hostnames pulumi.StringArrayInput
	// Set of label tags associated with the GrpcRoute resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// List of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh.
	Meshes pulumi.StringArrayInput
	// Name of the GrpcRoute resource.
	Name                       pulumi.StringPtrInput
	NetworkServicesGrpcRouteId pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	// Rules that define how traffic is routed and handled.
	Rules NetworkServicesGrpcRouteRuleArrayInput
	// Server-defined URL of this resource.
	SelfLink pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkServicesGrpcRouteTimeoutsPtrInput
	// Time the GrpcRoute was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkServicesGrpcRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesGrpcRouteState)(nil)).Elem()
}

type networkServicesGrpcRouteArgs struct {
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// List of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway.
	Gateways []string `pulumi:"gateways"`
	// Required. Service hostnames with an optional port for which this route describes traffic.
	Hostnames []string `pulumi:"hostnames"`
	// Set of label tags associated with the GrpcRoute resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// List of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh.
	Meshes []string `pulumi:"meshes"`
	// Name of the GrpcRoute resource.
	Name                       *string `pulumi:"name"`
	NetworkServicesGrpcRouteId *string `pulumi:"networkServicesGrpcRouteId"`
	Project                    *string `pulumi:"project"`
	// Rules that define how traffic is routed and handled.
	Rules    []NetworkServicesGrpcRouteRule    `pulumi:"rules"`
	Timeouts *NetworkServicesGrpcRouteTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NetworkServicesGrpcRoute resource.
type NetworkServicesGrpcRouteArgs struct {
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// List of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway.
	Gateways pulumi.StringArrayInput
	// Required. Service hostnames with an optional port for which this route describes traffic.
	Hostnames pulumi.StringArrayInput
	// Set of label tags associated with the GrpcRoute resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// List of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh.
	Meshes pulumi.StringArrayInput
	// Name of the GrpcRoute resource.
	Name                       pulumi.StringPtrInput
	NetworkServicesGrpcRouteId pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	// Rules that define how traffic is routed and handled.
	Rules    NetworkServicesGrpcRouteRuleArrayInput
	Timeouts NetworkServicesGrpcRouteTimeoutsPtrInput
}

func (NetworkServicesGrpcRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesGrpcRouteArgs)(nil)).Elem()
}

type NetworkServicesGrpcRouteInput interface {
	pulumi.Input

	ToNetworkServicesGrpcRouteOutput() NetworkServicesGrpcRouteOutput
	ToNetworkServicesGrpcRouteOutputWithContext(ctx context.Context) NetworkServicesGrpcRouteOutput
}

func (*NetworkServicesGrpcRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesGrpcRoute)(nil)).Elem()
}

func (i *NetworkServicesGrpcRoute) ToNetworkServicesGrpcRouteOutput() NetworkServicesGrpcRouteOutput {
	return i.ToNetworkServicesGrpcRouteOutputWithContext(context.Background())
}

func (i *NetworkServicesGrpcRoute) ToNetworkServicesGrpcRouteOutputWithContext(ctx context.Context) NetworkServicesGrpcRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicesGrpcRouteOutput)
}

type NetworkServicesGrpcRouteOutput struct{ *pulumi.OutputState }

func (NetworkServicesGrpcRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesGrpcRoute)(nil)).Elem()
}

func (o NetworkServicesGrpcRouteOutput) ToNetworkServicesGrpcRouteOutput() NetworkServicesGrpcRouteOutput {
	return o
}

func (o NetworkServicesGrpcRouteOutput) ToNetworkServicesGrpcRouteOutputWithContext(ctx context.Context) NetworkServicesGrpcRouteOutput {
	return o
}

// Time the GrpcRoute was created in UTC.
func (o NetworkServicesGrpcRouteOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A free-text description of the resource. Max length 1024 characters.
func (o NetworkServicesGrpcRouteOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkServicesGrpcRouteOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// List of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway.
func (o NetworkServicesGrpcRouteOutput) Gateways() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringArrayOutput { return v.Gateways }).(pulumi.StringArrayOutput)
}

// Required. Service hostnames with an optional port for which this route describes traffic.
func (o NetworkServicesGrpcRouteOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringArrayOutput { return v.Hostnames }).(pulumi.StringArrayOutput)
}

// Set of label tags associated with the GrpcRoute resource. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o NetworkServicesGrpcRouteOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// List of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh.
func (o NetworkServicesGrpcRouteOutput) Meshes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringArrayOutput { return v.Meshes }).(pulumi.StringArrayOutput)
}

// Name of the GrpcRoute resource.
func (o NetworkServicesGrpcRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkServicesGrpcRouteOutput) NetworkServicesGrpcRouteId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringOutput { return v.NetworkServicesGrpcRouteId }).(pulumi.StringOutput)
}

func (o NetworkServicesGrpcRouteOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Rules that define how traffic is routed and handled.
func (o NetworkServicesGrpcRouteOutput) Rules() NetworkServicesGrpcRouteRuleArrayOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) NetworkServicesGrpcRouteRuleArrayOutput { return v.Rules }).(NetworkServicesGrpcRouteRuleArrayOutput)
}

// Server-defined URL of this resource.
func (o NetworkServicesGrpcRouteOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkServicesGrpcRouteOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkServicesGrpcRouteOutput) Timeouts() NetworkServicesGrpcRouteTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) NetworkServicesGrpcRouteTimeoutsPtrOutput { return v.Timeouts }).(NetworkServicesGrpcRouteTimeoutsPtrOutput)
}

// Time the GrpcRoute was updated in UTC.
func (o NetworkServicesGrpcRouteOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGrpcRoute) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicesGrpcRouteInput)(nil)).Elem(), &NetworkServicesGrpcRoute{})
	pulumi.RegisterOutputType(NetworkServicesGrpcRouteOutput{})
}
