// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeBackendBucketIamMember struct {
	pulumi.CustomResourceState

	ComputeBackendBucketIamMemberId pulumi.StringOutput                             `pulumi:"computeBackendBucketIamMemberId"`
	Condition                       ComputeBackendBucketIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                            pulumi.StringOutput                             `pulumi:"etag"`
	Member                          pulumi.StringOutput                             `pulumi:"member"`
	Name                            pulumi.StringOutput                             `pulumi:"name"`
	Project                         pulumi.StringOutput                             `pulumi:"project"`
	Role                            pulumi.StringOutput                             `pulumi:"role"`
}

// NewComputeBackendBucketIamMember registers a new resource with the given unique name, arguments, and options.
func NewComputeBackendBucketIamMember(ctx *pulumi.Context,
	name string, args *ComputeBackendBucketIamMemberArgs, opts ...pulumi.ResourceOption) (*ComputeBackendBucketIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeBackendBucketIamMember
	err = ctx.RegisterPackageResource("google-beta:index/computeBackendBucketIamMember:ComputeBackendBucketIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeBackendBucketIamMember gets an existing ComputeBackendBucketIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeBackendBucketIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeBackendBucketIamMemberState, opts ...pulumi.ResourceOption) (*ComputeBackendBucketIamMember, error) {
	var resource ComputeBackendBucketIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeBackendBucketIamMember:ComputeBackendBucketIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeBackendBucketIamMember resources.
type computeBackendBucketIamMemberState struct {
	ComputeBackendBucketIamMemberId *string                                 `pulumi:"computeBackendBucketIamMemberId"`
	Condition                       *ComputeBackendBucketIamMemberCondition `pulumi:"condition"`
	Etag                            *string                                 `pulumi:"etag"`
	Member                          *string                                 `pulumi:"member"`
	Name                            *string                                 `pulumi:"name"`
	Project                         *string                                 `pulumi:"project"`
	Role                            *string                                 `pulumi:"role"`
}

type ComputeBackendBucketIamMemberState struct {
	ComputeBackendBucketIamMemberId pulumi.StringPtrInput
	Condition                       ComputeBackendBucketIamMemberConditionPtrInput
	Etag                            pulumi.StringPtrInput
	Member                          pulumi.StringPtrInput
	Name                            pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringPtrInput
}

func (ComputeBackendBucketIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendBucketIamMemberState)(nil)).Elem()
}

type computeBackendBucketIamMemberArgs struct {
	ComputeBackendBucketIamMemberId *string                                 `pulumi:"computeBackendBucketIamMemberId"`
	Condition                       *ComputeBackendBucketIamMemberCondition `pulumi:"condition"`
	Member                          string                                  `pulumi:"member"`
	Name                            *string                                 `pulumi:"name"`
	Project                         *string                                 `pulumi:"project"`
	Role                            string                                  `pulumi:"role"`
}

// The set of arguments for constructing a ComputeBackendBucketIamMember resource.
type ComputeBackendBucketIamMemberArgs struct {
	ComputeBackendBucketIamMemberId pulumi.StringPtrInput
	Condition                       ComputeBackendBucketIamMemberConditionPtrInput
	Member                          pulumi.StringInput
	Name                            pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringInput
}

func (ComputeBackendBucketIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendBucketIamMemberArgs)(nil)).Elem()
}

type ComputeBackendBucketIamMemberInput interface {
	pulumi.Input

	ToComputeBackendBucketIamMemberOutput() ComputeBackendBucketIamMemberOutput
	ToComputeBackendBucketIamMemberOutputWithContext(ctx context.Context) ComputeBackendBucketIamMemberOutput
}

func (*ComputeBackendBucketIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendBucketIamMember)(nil)).Elem()
}

func (i *ComputeBackendBucketIamMember) ToComputeBackendBucketIamMemberOutput() ComputeBackendBucketIamMemberOutput {
	return i.ToComputeBackendBucketIamMemberOutputWithContext(context.Background())
}

func (i *ComputeBackendBucketIamMember) ToComputeBackendBucketIamMemberOutputWithContext(ctx context.Context) ComputeBackendBucketIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBackendBucketIamMemberOutput)
}

type ComputeBackendBucketIamMemberOutput struct{ *pulumi.OutputState }

func (ComputeBackendBucketIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendBucketIamMember)(nil)).Elem()
}

func (o ComputeBackendBucketIamMemberOutput) ToComputeBackendBucketIamMemberOutput() ComputeBackendBucketIamMemberOutput {
	return o
}

func (o ComputeBackendBucketIamMemberOutput) ToComputeBackendBucketIamMemberOutputWithContext(ctx context.Context) ComputeBackendBucketIamMemberOutput {
	return o
}

func (o ComputeBackendBucketIamMemberOutput) ComputeBackendBucketIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamMember) pulumi.StringOutput { return v.ComputeBackendBucketIamMemberId }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamMemberOutput) Condition() ComputeBackendBucketIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamMember) ComputeBackendBucketIamMemberConditionPtrOutput {
		return v.Condition
	}).(ComputeBackendBucketIamMemberConditionPtrOutput)
}

func (o ComputeBackendBucketIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeBackendBucketIamMemberInput)(nil)).Elem(), &ComputeBackendBucketIamMember{})
	pulumi.RegisterOutputType(ComputeBackendBucketIamMemberOutput{})
}
