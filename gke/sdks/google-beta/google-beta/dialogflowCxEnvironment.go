// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DialogflowCxEnvironment struct {
	pulumi.CustomResourceState

	// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is
	// rejected.
	Description               pulumi.StringPtrOutput `pulumi:"description"`
	DialogflowCxEnvironmentId pulumi.StringOutput    `pulumi:"dialogflowCxEnvironmentId"`
	// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The name of the environment.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Agent to create an Environment for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent   pulumi.StringPtrOutput                   `pulumi:"parent"`
	Timeouts DialogflowCxEnvironmentTimeoutsPtrOutput `pulumi:"timeouts"`
	// Update time of this environment. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// A list of configurations for flow versions. You should include version configs for all flows that are reachable from
	// [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
	VersionConfigs DialogflowCxEnvironmentVersionConfigArrayOutput `pulumi:"versionConfigs"`
}

// NewDialogflowCxEnvironment registers a new resource with the given unique name, arguments, and options.
func NewDialogflowCxEnvironment(ctx *pulumi.Context,
	name string, args *DialogflowCxEnvironmentArgs, opts ...pulumi.ResourceOption) (*DialogflowCxEnvironment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.VersionConfigs == nil {
		return nil, errors.New("invalid value for required argument 'VersionConfigs'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DialogflowCxEnvironment
	err = ctx.RegisterPackageResource("google-beta:index/dialogflowCxEnvironment:DialogflowCxEnvironment", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDialogflowCxEnvironment gets an existing DialogflowCxEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDialogflowCxEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DialogflowCxEnvironmentState, opts ...pulumi.ResourceOption) (*DialogflowCxEnvironment, error) {
	var resource DialogflowCxEnvironment
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dialogflowCxEnvironment:DialogflowCxEnvironment", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DialogflowCxEnvironment resources.
type dialogflowCxEnvironmentState struct {
	// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is
	// rejected.
	Description               *string `pulumi:"description"`
	DialogflowCxEnvironmentId *string `pulumi:"dialogflowCxEnvironmentId"`
	// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// The name of the environment.
	Name *string `pulumi:"name"`
	// The Agent to create an Environment for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent   *string                          `pulumi:"parent"`
	Timeouts *DialogflowCxEnvironmentTimeouts `pulumi:"timeouts"`
	// Update time of this environment. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
	// A list of configurations for flow versions. You should include version configs for all flows that are reachable from
	// [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
	VersionConfigs []DialogflowCxEnvironmentVersionConfig `pulumi:"versionConfigs"`
}

type DialogflowCxEnvironmentState struct {
	// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is
	// rejected.
	Description               pulumi.StringPtrInput
	DialogflowCxEnvironmentId pulumi.StringPtrInput
	// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
	DisplayName pulumi.StringPtrInput
	// The name of the environment.
	Name pulumi.StringPtrInput
	// The Agent to create an Environment for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent   pulumi.StringPtrInput
	Timeouts DialogflowCxEnvironmentTimeoutsPtrInput
	// Update time of this environment. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
	// A list of configurations for flow versions. You should include version configs for all flows that are reachable from
	// [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
	VersionConfigs DialogflowCxEnvironmentVersionConfigArrayInput
}

func (DialogflowCxEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowCxEnvironmentState)(nil)).Elem()
}

type dialogflowCxEnvironmentArgs struct {
	// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is
	// rejected.
	Description               *string `pulumi:"description"`
	DialogflowCxEnvironmentId *string `pulumi:"dialogflowCxEnvironmentId"`
	// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
	DisplayName string `pulumi:"displayName"`
	// The Agent to create an Environment for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent   *string                          `pulumi:"parent"`
	Timeouts *DialogflowCxEnvironmentTimeouts `pulumi:"timeouts"`
	// A list of configurations for flow versions. You should include version configs for all flows that are reachable from
	// [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
	VersionConfigs []DialogflowCxEnvironmentVersionConfig `pulumi:"versionConfigs"`
}

// The set of arguments for constructing a DialogflowCxEnvironment resource.
type DialogflowCxEnvironmentArgs struct {
	// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is
	// rejected.
	Description               pulumi.StringPtrInput
	DialogflowCxEnvironmentId pulumi.StringPtrInput
	// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
	DisplayName pulumi.StringInput
	// The Agent to create an Environment for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent   pulumi.StringPtrInput
	Timeouts DialogflowCxEnvironmentTimeoutsPtrInput
	// A list of configurations for flow versions. You should include version configs for all flows that are reachable from
	// [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
	VersionConfigs DialogflowCxEnvironmentVersionConfigArrayInput
}

func (DialogflowCxEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowCxEnvironmentArgs)(nil)).Elem()
}

type DialogflowCxEnvironmentInput interface {
	pulumi.Input

	ToDialogflowCxEnvironmentOutput() DialogflowCxEnvironmentOutput
	ToDialogflowCxEnvironmentOutputWithContext(ctx context.Context) DialogflowCxEnvironmentOutput
}

func (*DialogflowCxEnvironment) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowCxEnvironment)(nil)).Elem()
}

func (i *DialogflowCxEnvironment) ToDialogflowCxEnvironmentOutput() DialogflowCxEnvironmentOutput {
	return i.ToDialogflowCxEnvironmentOutputWithContext(context.Background())
}

func (i *DialogflowCxEnvironment) ToDialogflowCxEnvironmentOutputWithContext(ctx context.Context) DialogflowCxEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DialogflowCxEnvironmentOutput)
}

type DialogflowCxEnvironmentOutput struct{ *pulumi.OutputState }

func (DialogflowCxEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowCxEnvironment)(nil)).Elem()
}

func (o DialogflowCxEnvironmentOutput) ToDialogflowCxEnvironmentOutput() DialogflowCxEnvironmentOutput {
	return o
}

func (o DialogflowCxEnvironmentOutput) ToDialogflowCxEnvironmentOutputWithContext(ctx context.Context) DialogflowCxEnvironmentOutput {
	return o
}

// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is
// rejected.
func (o DialogflowCxEnvironmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxEnvironment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DialogflowCxEnvironmentOutput) DialogflowCxEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxEnvironment) pulumi.StringOutput { return v.DialogflowCxEnvironmentId }).(pulumi.StringOutput)
}

// The human-readable name of the environment (unique in an agent). Limit of 64 characters.
func (o DialogflowCxEnvironmentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxEnvironment) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The name of the environment.
func (o DialogflowCxEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxEnvironment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Agent to create an Environment for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
func (o DialogflowCxEnvironmentOutput) Parent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxEnvironment) pulumi.StringPtrOutput { return v.Parent }).(pulumi.StringPtrOutput)
}

func (o DialogflowCxEnvironmentOutput) Timeouts() DialogflowCxEnvironmentTimeoutsPtrOutput {
	return o.ApplyT(func(v *DialogflowCxEnvironment) DialogflowCxEnvironmentTimeoutsPtrOutput { return v.Timeouts }).(DialogflowCxEnvironmentTimeoutsPtrOutput)
}

// Update time of this environment. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o DialogflowCxEnvironmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxEnvironment) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// A list of configurations for flow versions. You should include version configs for all flows that are reachable from
// [Start Flow][Agent.start_flow] in the agent. Otherwise, an error will be returned.
func (o DialogflowCxEnvironmentOutput) VersionConfigs() DialogflowCxEnvironmentVersionConfigArrayOutput {
	return o.ApplyT(func(v *DialogflowCxEnvironment) DialogflowCxEnvironmentVersionConfigArrayOutput {
		return v.VersionConfigs
	}).(DialogflowCxEnvironmentVersionConfigArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DialogflowCxEnvironmentInput)(nil)).Elem(), &DialogflowCxEnvironment{})
	pulumi.RegisterOutputType(DialogflowCxEnvironmentOutput{})
}
