// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceDirectoryNamespaceIamPolicy struct {
	pulumi.CustomResourceState

	Etag                                 pulumi.StringOutput `pulumi:"etag"`
	Name                                 pulumi.StringOutput `pulumi:"name"`
	PolicyData                           pulumi.StringOutput `pulumi:"policyData"`
	ServiceDirectoryNamespaceIamPolicyId pulumi.StringOutput `pulumi:"serviceDirectoryNamespaceIamPolicyId"`
}

// NewServiceDirectoryNamespaceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewServiceDirectoryNamespaceIamPolicy(ctx *pulumi.Context,
	name string, args *ServiceDirectoryNamespaceIamPolicyArgs, opts ...pulumi.ResourceOption) (*ServiceDirectoryNamespaceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceDirectoryNamespaceIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/serviceDirectoryNamespaceIamPolicy:ServiceDirectoryNamespaceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceDirectoryNamespaceIamPolicy gets an existing ServiceDirectoryNamespaceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceDirectoryNamespaceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceDirectoryNamespaceIamPolicyState, opts ...pulumi.ResourceOption) (*ServiceDirectoryNamespaceIamPolicy, error) {
	var resource ServiceDirectoryNamespaceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/serviceDirectoryNamespaceIamPolicy:ServiceDirectoryNamespaceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceDirectoryNamespaceIamPolicy resources.
type serviceDirectoryNamespaceIamPolicyState struct {
	Etag                                 *string `pulumi:"etag"`
	Name                                 *string `pulumi:"name"`
	PolicyData                           *string `pulumi:"policyData"`
	ServiceDirectoryNamespaceIamPolicyId *string `pulumi:"serviceDirectoryNamespaceIamPolicyId"`
}

type ServiceDirectoryNamespaceIamPolicyState struct {
	Etag                                 pulumi.StringPtrInput
	Name                                 pulumi.StringPtrInput
	PolicyData                           pulumi.StringPtrInput
	ServiceDirectoryNamespaceIamPolicyId pulumi.StringPtrInput
}

func (ServiceDirectoryNamespaceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryNamespaceIamPolicyState)(nil)).Elem()
}

type serviceDirectoryNamespaceIamPolicyArgs struct {
	Name                                 *string `pulumi:"name"`
	PolicyData                           string  `pulumi:"policyData"`
	ServiceDirectoryNamespaceIamPolicyId *string `pulumi:"serviceDirectoryNamespaceIamPolicyId"`
}

// The set of arguments for constructing a ServiceDirectoryNamespaceIamPolicy resource.
type ServiceDirectoryNamespaceIamPolicyArgs struct {
	Name                                 pulumi.StringPtrInput
	PolicyData                           pulumi.StringInput
	ServiceDirectoryNamespaceIamPolicyId pulumi.StringPtrInput
}

func (ServiceDirectoryNamespaceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryNamespaceIamPolicyArgs)(nil)).Elem()
}

type ServiceDirectoryNamespaceIamPolicyInput interface {
	pulumi.Input

	ToServiceDirectoryNamespaceIamPolicyOutput() ServiceDirectoryNamespaceIamPolicyOutput
	ToServiceDirectoryNamespaceIamPolicyOutputWithContext(ctx context.Context) ServiceDirectoryNamespaceIamPolicyOutput
}

func (*ServiceDirectoryNamespaceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryNamespaceIamPolicy)(nil)).Elem()
}

func (i *ServiceDirectoryNamespaceIamPolicy) ToServiceDirectoryNamespaceIamPolicyOutput() ServiceDirectoryNamespaceIamPolicyOutput {
	return i.ToServiceDirectoryNamespaceIamPolicyOutputWithContext(context.Background())
}

func (i *ServiceDirectoryNamespaceIamPolicy) ToServiceDirectoryNamespaceIamPolicyOutputWithContext(ctx context.Context) ServiceDirectoryNamespaceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDirectoryNamespaceIamPolicyOutput)
}

type ServiceDirectoryNamespaceIamPolicyOutput struct{ *pulumi.OutputState }

func (ServiceDirectoryNamespaceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryNamespaceIamPolicy)(nil)).Elem()
}

func (o ServiceDirectoryNamespaceIamPolicyOutput) ToServiceDirectoryNamespaceIamPolicyOutput() ServiceDirectoryNamespaceIamPolicyOutput {
	return o
}

func (o ServiceDirectoryNamespaceIamPolicyOutput) ToServiceDirectoryNamespaceIamPolicyOutputWithContext(ctx context.Context) ServiceDirectoryNamespaceIamPolicyOutput {
	return o
}

func (o ServiceDirectoryNamespaceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespaceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ServiceDirectoryNamespaceIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespaceIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceDirectoryNamespaceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespaceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ServiceDirectoryNamespaceIamPolicyOutput) ServiceDirectoryNamespaceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespaceIamPolicy) pulumi.StringOutput {
		return v.ServiceDirectoryNamespaceIamPolicyId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDirectoryNamespaceIamPolicyInput)(nil)).Elem(), &ServiceDirectoryNamespaceIamPolicy{})
	pulumi.RegisterOutputType(ServiceDirectoryNamespaceIamPolicyOutput{})
}
