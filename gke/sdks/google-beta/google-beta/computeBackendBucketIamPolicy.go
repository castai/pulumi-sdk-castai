// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeBackendBucketIamPolicy struct {
	pulumi.CustomResourceState

	ComputeBackendBucketIamPolicyId pulumi.StringOutput `pulumi:"computeBackendBucketIamPolicyId"`
	Etag                            pulumi.StringOutput `pulumi:"etag"`
	Name                            pulumi.StringOutput `pulumi:"name"`
	PolicyData                      pulumi.StringOutput `pulumi:"policyData"`
	Project                         pulumi.StringOutput `pulumi:"project"`
}

// NewComputeBackendBucketIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewComputeBackendBucketIamPolicy(ctx *pulumi.Context,
	name string, args *ComputeBackendBucketIamPolicyArgs, opts ...pulumi.ResourceOption) (*ComputeBackendBucketIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeBackendBucketIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/computeBackendBucketIamPolicy:ComputeBackendBucketIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeBackendBucketIamPolicy gets an existing ComputeBackendBucketIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeBackendBucketIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeBackendBucketIamPolicyState, opts ...pulumi.ResourceOption) (*ComputeBackendBucketIamPolicy, error) {
	var resource ComputeBackendBucketIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeBackendBucketIamPolicy:ComputeBackendBucketIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeBackendBucketIamPolicy resources.
type computeBackendBucketIamPolicyState struct {
	ComputeBackendBucketIamPolicyId *string `pulumi:"computeBackendBucketIamPolicyId"`
	Etag                            *string `pulumi:"etag"`
	Name                            *string `pulumi:"name"`
	PolicyData                      *string `pulumi:"policyData"`
	Project                         *string `pulumi:"project"`
}

type ComputeBackendBucketIamPolicyState struct {
	ComputeBackendBucketIamPolicyId pulumi.StringPtrInput
	Etag                            pulumi.StringPtrInput
	Name                            pulumi.StringPtrInput
	PolicyData                      pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
}

func (ComputeBackendBucketIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendBucketIamPolicyState)(nil)).Elem()
}

type computeBackendBucketIamPolicyArgs struct {
	ComputeBackendBucketIamPolicyId *string `pulumi:"computeBackendBucketIamPolicyId"`
	Name                            *string `pulumi:"name"`
	PolicyData                      string  `pulumi:"policyData"`
	Project                         *string `pulumi:"project"`
}

// The set of arguments for constructing a ComputeBackendBucketIamPolicy resource.
type ComputeBackendBucketIamPolicyArgs struct {
	ComputeBackendBucketIamPolicyId pulumi.StringPtrInput
	Name                            pulumi.StringPtrInput
	PolicyData                      pulumi.StringInput
	Project                         pulumi.StringPtrInput
}

func (ComputeBackendBucketIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendBucketIamPolicyArgs)(nil)).Elem()
}

type ComputeBackendBucketIamPolicyInput interface {
	pulumi.Input

	ToComputeBackendBucketIamPolicyOutput() ComputeBackendBucketIamPolicyOutput
	ToComputeBackendBucketIamPolicyOutputWithContext(ctx context.Context) ComputeBackendBucketIamPolicyOutput
}

func (*ComputeBackendBucketIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendBucketIamPolicy)(nil)).Elem()
}

func (i *ComputeBackendBucketIamPolicy) ToComputeBackendBucketIamPolicyOutput() ComputeBackendBucketIamPolicyOutput {
	return i.ToComputeBackendBucketIamPolicyOutputWithContext(context.Background())
}

func (i *ComputeBackendBucketIamPolicy) ToComputeBackendBucketIamPolicyOutputWithContext(ctx context.Context) ComputeBackendBucketIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBackendBucketIamPolicyOutput)
}

type ComputeBackendBucketIamPolicyOutput struct{ *pulumi.OutputState }

func (ComputeBackendBucketIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendBucketIamPolicy)(nil)).Elem()
}

func (o ComputeBackendBucketIamPolicyOutput) ToComputeBackendBucketIamPolicyOutput() ComputeBackendBucketIamPolicyOutput {
	return o
}

func (o ComputeBackendBucketIamPolicyOutput) ToComputeBackendBucketIamPolicyOutputWithContext(ctx context.Context) ComputeBackendBucketIamPolicyOutput {
	return o
}

func (o ComputeBackendBucketIamPolicyOutput) ComputeBackendBucketIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamPolicy) pulumi.StringOutput { return v.ComputeBackendBucketIamPolicyId }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeBackendBucketIamPolicyInput)(nil)).Elem(), &ComputeBackendBucketIamPolicy{})
	pulumi.RegisterOutputType(ComputeBackendBucketIamPolicyOutput{})
}
