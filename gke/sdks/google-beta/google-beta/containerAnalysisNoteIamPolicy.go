// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContainerAnalysisNoteIamPolicy struct {
	pulumi.CustomResourceState

	ContainerAnalysisNoteIamPolicyId pulumi.StringOutput `pulumi:"containerAnalysisNoteIamPolicyId"`
	Etag                             pulumi.StringOutput `pulumi:"etag"`
	Note                             pulumi.StringOutput `pulumi:"note"`
	PolicyData                       pulumi.StringOutput `pulumi:"policyData"`
	Project                          pulumi.StringOutput `pulumi:"project"`
}

// NewContainerAnalysisNoteIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewContainerAnalysisNoteIamPolicy(ctx *pulumi.Context,
	name string, args *ContainerAnalysisNoteIamPolicyArgs, opts ...pulumi.ResourceOption) (*ContainerAnalysisNoteIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Note == nil {
		return nil, errors.New("invalid value for required argument 'Note'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ContainerAnalysisNoteIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/containerAnalysisNoteIamPolicy:ContainerAnalysisNoteIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerAnalysisNoteIamPolicy gets an existing ContainerAnalysisNoteIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerAnalysisNoteIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerAnalysisNoteIamPolicyState, opts ...pulumi.ResourceOption) (*ContainerAnalysisNoteIamPolicy, error) {
	var resource ContainerAnalysisNoteIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/containerAnalysisNoteIamPolicy:ContainerAnalysisNoteIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerAnalysisNoteIamPolicy resources.
type containerAnalysisNoteIamPolicyState struct {
	ContainerAnalysisNoteIamPolicyId *string `pulumi:"containerAnalysisNoteIamPolicyId"`
	Etag                             *string `pulumi:"etag"`
	Note                             *string `pulumi:"note"`
	PolicyData                       *string `pulumi:"policyData"`
	Project                          *string `pulumi:"project"`
}

type ContainerAnalysisNoteIamPolicyState struct {
	ContainerAnalysisNoteIamPolicyId pulumi.StringPtrInput
	Etag                             pulumi.StringPtrInput
	Note                             pulumi.StringPtrInput
	PolicyData                       pulumi.StringPtrInput
	Project                          pulumi.StringPtrInput
}

func (ContainerAnalysisNoteIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAnalysisNoteIamPolicyState)(nil)).Elem()
}

type containerAnalysisNoteIamPolicyArgs struct {
	ContainerAnalysisNoteIamPolicyId *string `pulumi:"containerAnalysisNoteIamPolicyId"`
	Note                             string  `pulumi:"note"`
	PolicyData                       string  `pulumi:"policyData"`
	Project                          *string `pulumi:"project"`
}

// The set of arguments for constructing a ContainerAnalysisNoteIamPolicy resource.
type ContainerAnalysisNoteIamPolicyArgs struct {
	ContainerAnalysisNoteIamPolicyId pulumi.StringPtrInput
	Note                             pulumi.StringInput
	PolicyData                       pulumi.StringInput
	Project                          pulumi.StringPtrInput
}

func (ContainerAnalysisNoteIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAnalysisNoteIamPolicyArgs)(nil)).Elem()
}

type ContainerAnalysisNoteIamPolicyInput interface {
	pulumi.Input

	ToContainerAnalysisNoteIamPolicyOutput() ContainerAnalysisNoteIamPolicyOutput
	ToContainerAnalysisNoteIamPolicyOutputWithContext(ctx context.Context) ContainerAnalysisNoteIamPolicyOutput
}

func (*ContainerAnalysisNoteIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerAnalysisNoteIamPolicy)(nil)).Elem()
}

func (i *ContainerAnalysisNoteIamPolicy) ToContainerAnalysisNoteIamPolicyOutput() ContainerAnalysisNoteIamPolicyOutput {
	return i.ToContainerAnalysisNoteIamPolicyOutputWithContext(context.Background())
}

func (i *ContainerAnalysisNoteIamPolicy) ToContainerAnalysisNoteIamPolicyOutputWithContext(ctx context.Context) ContainerAnalysisNoteIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerAnalysisNoteIamPolicyOutput)
}

type ContainerAnalysisNoteIamPolicyOutput struct{ *pulumi.OutputState }

func (ContainerAnalysisNoteIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerAnalysisNoteIamPolicy)(nil)).Elem()
}

func (o ContainerAnalysisNoteIamPolicyOutput) ToContainerAnalysisNoteIamPolicyOutput() ContainerAnalysisNoteIamPolicyOutput {
	return o
}

func (o ContainerAnalysisNoteIamPolicyOutput) ToContainerAnalysisNoteIamPolicyOutputWithContext(ctx context.Context) ContainerAnalysisNoteIamPolicyOutput {
	return o
}

func (o ContainerAnalysisNoteIamPolicyOutput) ContainerAnalysisNoteIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamPolicy) pulumi.StringOutput { return v.ContainerAnalysisNoteIamPolicyId }).(pulumi.StringOutput)
}

func (o ContainerAnalysisNoteIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ContainerAnalysisNoteIamPolicyOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamPolicy) pulumi.StringOutput { return v.Note }).(pulumi.StringOutput)
}

func (o ContainerAnalysisNoteIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ContainerAnalysisNoteIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerAnalysisNoteIamPolicyInput)(nil)).Elem(), &ContainerAnalysisNoteIamPolicy{})
	pulumi.RegisterOutputType(ContainerAnalysisNoteIamPolicyOutput{})
}
