// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeBackendServiceIamBinding struct {
	pulumi.CustomResourceState

	ComputeBackendServiceIamBindingId pulumi.StringOutput                               `pulumi:"computeBackendServiceIamBindingId"`
	Condition                         ComputeBackendServiceIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                              pulumi.StringOutput                               `pulumi:"etag"`
	Members                           pulumi.StringArrayOutput                          `pulumi:"members"`
	Name                              pulumi.StringOutput                               `pulumi:"name"`
	Project                           pulumi.StringOutput                               `pulumi:"project"`
	Role                              pulumi.StringOutput                               `pulumi:"role"`
}

// NewComputeBackendServiceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewComputeBackendServiceIamBinding(ctx *pulumi.Context,
	name string, args *ComputeBackendServiceIamBindingArgs, opts ...pulumi.ResourceOption) (*ComputeBackendServiceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeBackendServiceIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/computeBackendServiceIamBinding:ComputeBackendServiceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeBackendServiceIamBinding gets an existing ComputeBackendServiceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeBackendServiceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeBackendServiceIamBindingState, opts ...pulumi.ResourceOption) (*ComputeBackendServiceIamBinding, error) {
	var resource ComputeBackendServiceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeBackendServiceIamBinding:ComputeBackendServiceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeBackendServiceIamBinding resources.
type computeBackendServiceIamBindingState struct {
	ComputeBackendServiceIamBindingId *string                                   `pulumi:"computeBackendServiceIamBindingId"`
	Condition                         *ComputeBackendServiceIamBindingCondition `pulumi:"condition"`
	Etag                              *string                                   `pulumi:"etag"`
	Members                           []string                                  `pulumi:"members"`
	Name                              *string                                   `pulumi:"name"`
	Project                           *string                                   `pulumi:"project"`
	Role                              *string                                   `pulumi:"role"`
}

type ComputeBackendServiceIamBindingState struct {
	ComputeBackendServiceIamBindingId pulumi.StringPtrInput
	Condition                         ComputeBackendServiceIamBindingConditionPtrInput
	Etag                              pulumi.StringPtrInput
	Members                           pulumi.StringArrayInput
	Name                              pulumi.StringPtrInput
	Project                           pulumi.StringPtrInput
	Role                              pulumi.StringPtrInput
}

func (ComputeBackendServiceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendServiceIamBindingState)(nil)).Elem()
}

type computeBackendServiceIamBindingArgs struct {
	ComputeBackendServiceIamBindingId *string                                   `pulumi:"computeBackendServiceIamBindingId"`
	Condition                         *ComputeBackendServiceIamBindingCondition `pulumi:"condition"`
	Members                           []string                                  `pulumi:"members"`
	Name                              *string                                   `pulumi:"name"`
	Project                           *string                                   `pulumi:"project"`
	Role                              string                                    `pulumi:"role"`
}

// The set of arguments for constructing a ComputeBackendServiceIamBinding resource.
type ComputeBackendServiceIamBindingArgs struct {
	ComputeBackendServiceIamBindingId pulumi.StringPtrInput
	Condition                         ComputeBackendServiceIamBindingConditionPtrInput
	Members                           pulumi.StringArrayInput
	Name                              pulumi.StringPtrInput
	Project                           pulumi.StringPtrInput
	Role                              pulumi.StringInput
}

func (ComputeBackendServiceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendServiceIamBindingArgs)(nil)).Elem()
}

type ComputeBackendServiceIamBindingInput interface {
	pulumi.Input

	ToComputeBackendServiceIamBindingOutput() ComputeBackendServiceIamBindingOutput
	ToComputeBackendServiceIamBindingOutputWithContext(ctx context.Context) ComputeBackendServiceIamBindingOutput
}

func (*ComputeBackendServiceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendServiceIamBinding)(nil)).Elem()
}

func (i *ComputeBackendServiceIamBinding) ToComputeBackendServiceIamBindingOutput() ComputeBackendServiceIamBindingOutput {
	return i.ToComputeBackendServiceIamBindingOutputWithContext(context.Background())
}

func (i *ComputeBackendServiceIamBinding) ToComputeBackendServiceIamBindingOutputWithContext(ctx context.Context) ComputeBackendServiceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBackendServiceIamBindingOutput)
}

type ComputeBackendServiceIamBindingOutput struct{ *pulumi.OutputState }

func (ComputeBackendServiceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendServiceIamBinding)(nil)).Elem()
}

func (o ComputeBackendServiceIamBindingOutput) ToComputeBackendServiceIamBindingOutput() ComputeBackendServiceIamBindingOutput {
	return o
}

func (o ComputeBackendServiceIamBindingOutput) ToComputeBackendServiceIamBindingOutputWithContext(ctx context.Context) ComputeBackendServiceIamBindingOutput {
	return o
}

func (o ComputeBackendServiceIamBindingOutput) ComputeBackendServiceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceIamBinding) pulumi.StringOutput {
		return v.ComputeBackendServiceIamBindingId
	}).(pulumi.StringOutput)
}

func (o ComputeBackendServiceIamBindingOutput) Condition() ComputeBackendServiceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *ComputeBackendServiceIamBinding) ComputeBackendServiceIamBindingConditionPtrOutput {
		return v.Condition
	}).(ComputeBackendServiceIamBindingConditionPtrOutput)
}

func (o ComputeBackendServiceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeBackendServiceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeBackendServiceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o ComputeBackendServiceIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeBackendServiceIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeBackendServiceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeBackendServiceIamBindingInput)(nil)).Elem(), &ComputeBackendServiceIamBinding{})
	pulumi.RegisterOutputType(ComputeBackendServiceIamBindingOutput{})
}
