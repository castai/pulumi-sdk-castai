// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EndpointsServiceIamPolicy struct {
	pulumi.CustomResourceState

	EndpointsServiceIamPolicyId pulumi.StringOutput `pulumi:"endpointsServiceIamPolicyId"`
	Etag                        pulumi.StringOutput `pulumi:"etag"`
	PolicyData                  pulumi.StringOutput `pulumi:"policyData"`
	ServiceName                 pulumi.StringOutput `pulumi:"serviceName"`
}

// NewEndpointsServiceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewEndpointsServiceIamPolicy(ctx *pulumi.Context,
	name string, args *EndpointsServiceIamPolicyArgs, opts ...pulumi.ResourceOption) (*EndpointsServiceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource EndpointsServiceIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/endpointsServiceIamPolicy:EndpointsServiceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointsServiceIamPolicy gets an existing EndpointsServiceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointsServiceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointsServiceIamPolicyState, opts ...pulumi.ResourceOption) (*EndpointsServiceIamPolicy, error) {
	var resource EndpointsServiceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/endpointsServiceIamPolicy:EndpointsServiceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointsServiceIamPolicy resources.
type endpointsServiceIamPolicyState struct {
	EndpointsServiceIamPolicyId *string `pulumi:"endpointsServiceIamPolicyId"`
	Etag                        *string `pulumi:"etag"`
	PolicyData                  *string `pulumi:"policyData"`
	ServiceName                 *string `pulumi:"serviceName"`
}

type EndpointsServiceIamPolicyState struct {
	EndpointsServiceIamPolicyId pulumi.StringPtrInput
	Etag                        pulumi.StringPtrInput
	PolicyData                  pulumi.StringPtrInput
	ServiceName                 pulumi.StringPtrInput
}

func (EndpointsServiceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointsServiceIamPolicyState)(nil)).Elem()
}

type endpointsServiceIamPolicyArgs struct {
	EndpointsServiceIamPolicyId *string `pulumi:"endpointsServiceIamPolicyId"`
	PolicyData                  string  `pulumi:"policyData"`
	ServiceName                 string  `pulumi:"serviceName"`
}

// The set of arguments for constructing a EndpointsServiceIamPolicy resource.
type EndpointsServiceIamPolicyArgs struct {
	EndpointsServiceIamPolicyId pulumi.StringPtrInput
	PolicyData                  pulumi.StringInput
	ServiceName                 pulumi.StringInput
}

func (EndpointsServiceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointsServiceIamPolicyArgs)(nil)).Elem()
}

type EndpointsServiceIamPolicyInput interface {
	pulumi.Input

	ToEndpointsServiceIamPolicyOutput() EndpointsServiceIamPolicyOutput
	ToEndpointsServiceIamPolicyOutputWithContext(ctx context.Context) EndpointsServiceIamPolicyOutput
}

func (*EndpointsServiceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsServiceIamPolicy)(nil)).Elem()
}

func (i *EndpointsServiceIamPolicy) ToEndpointsServiceIamPolicyOutput() EndpointsServiceIamPolicyOutput {
	return i.ToEndpointsServiceIamPolicyOutputWithContext(context.Background())
}

func (i *EndpointsServiceIamPolicy) ToEndpointsServiceIamPolicyOutputWithContext(ctx context.Context) EndpointsServiceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsServiceIamPolicyOutput)
}

type EndpointsServiceIamPolicyOutput struct{ *pulumi.OutputState }

func (EndpointsServiceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsServiceIamPolicy)(nil)).Elem()
}

func (o EndpointsServiceIamPolicyOutput) ToEndpointsServiceIamPolicyOutput() EndpointsServiceIamPolicyOutput {
	return o
}

func (o EndpointsServiceIamPolicyOutput) ToEndpointsServiceIamPolicyOutputWithContext(ctx context.Context) EndpointsServiceIamPolicyOutput {
	return o
}

func (o EndpointsServiceIamPolicyOutput) EndpointsServiceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceIamPolicy) pulumi.StringOutput { return v.EndpointsServiceIamPolicyId }).(pulumi.StringOutput)
}

func (o EndpointsServiceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o EndpointsServiceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o EndpointsServiceIamPolicyOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceIamPolicy) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointsServiceIamPolicyInput)(nil)).Elem(), &EndpointsServiceIamPolicy{})
	pulumi.RegisterOutputType(EndpointsServiceIamPolicyOutput{})
}
