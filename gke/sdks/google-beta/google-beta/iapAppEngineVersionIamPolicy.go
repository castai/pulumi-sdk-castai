// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IapAppEngineVersionIamPolicy struct {
	pulumi.CustomResourceState

	AppId                          pulumi.StringOutput `pulumi:"appId"`
	Etag                           pulumi.StringOutput `pulumi:"etag"`
	IapAppEngineVersionIamPolicyId pulumi.StringOutput `pulumi:"iapAppEngineVersionIamPolicyId"`
	PolicyData                     pulumi.StringOutput `pulumi:"policyData"`
	Project                        pulumi.StringOutput `pulumi:"project"`
	Service                        pulumi.StringOutput `pulumi:"service"`
	VersionId                      pulumi.StringOutput `pulumi:"versionId"`
}

// NewIapAppEngineVersionIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewIapAppEngineVersionIamPolicy(ctx *pulumi.Context,
	name string, args *IapAppEngineVersionIamPolicyArgs, opts ...pulumi.ResourceOption) (*IapAppEngineVersionIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.VersionId == nil {
		return nil, errors.New("invalid value for required argument 'VersionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IapAppEngineVersionIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/iapAppEngineVersionIamPolicy:IapAppEngineVersionIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIapAppEngineVersionIamPolicy gets an existing IapAppEngineVersionIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIapAppEngineVersionIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IapAppEngineVersionIamPolicyState, opts ...pulumi.ResourceOption) (*IapAppEngineVersionIamPolicy, error) {
	var resource IapAppEngineVersionIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/iapAppEngineVersionIamPolicy:IapAppEngineVersionIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IapAppEngineVersionIamPolicy resources.
type iapAppEngineVersionIamPolicyState struct {
	AppId                          *string `pulumi:"appId"`
	Etag                           *string `pulumi:"etag"`
	IapAppEngineVersionIamPolicyId *string `pulumi:"iapAppEngineVersionIamPolicyId"`
	PolicyData                     *string `pulumi:"policyData"`
	Project                        *string `pulumi:"project"`
	Service                        *string `pulumi:"service"`
	VersionId                      *string `pulumi:"versionId"`
}

type IapAppEngineVersionIamPolicyState struct {
	AppId                          pulumi.StringPtrInput
	Etag                           pulumi.StringPtrInput
	IapAppEngineVersionIamPolicyId pulumi.StringPtrInput
	PolicyData                     pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
	Service                        pulumi.StringPtrInput
	VersionId                      pulumi.StringPtrInput
}

func (IapAppEngineVersionIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*iapAppEngineVersionIamPolicyState)(nil)).Elem()
}

type iapAppEngineVersionIamPolicyArgs struct {
	AppId                          string  `pulumi:"appId"`
	IapAppEngineVersionIamPolicyId *string `pulumi:"iapAppEngineVersionIamPolicyId"`
	PolicyData                     string  `pulumi:"policyData"`
	Project                        *string `pulumi:"project"`
	Service                        string  `pulumi:"service"`
	VersionId                      string  `pulumi:"versionId"`
}

// The set of arguments for constructing a IapAppEngineVersionIamPolicy resource.
type IapAppEngineVersionIamPolicyArgs struct {
	AppId                          pulumi.StringInput
	IapAppEngineVersionIamPolicyId pulumi.StringPtrInput
	PolicyData                     pulumi.StringInput
	Project                        pulumi.StringPtrInput
	Service                        pulumi.StringInput
	VersionId                      pulumi.StringInput
}

func (IapAppEngineVersionIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iapAppEngineVersionIamPolicyArgs)(nil)).Elem()
}

type IapAppEngineVersionIamPolicyInput interface {
	pulumi.Input

	ToIapAppEngineVersionIamPolicyOutput() IapAppEngineVersionIamPolicyOutput
	ToIapAppEngineVersionIamPolicyOutputWithContext(ctx context.Context) IapAppEngineVersionIamPolicyOutput
}

func (*IapAppEngineVersionIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**IapAppEngineVersionIamPolicy)(nil)).Elem()
}

func (i *IapAppEngineVersionIamPolicy) ToIapAppEngineVersionIamPolicyOutput() IapAppEngineVersionIamPolicyOutput {
	return i.ToIapAppEngineVersionIamPolicyOutputWithContext(context.Background())
}

func (i *IapAppEngineVersionIamPolicy) ToIapAppEngineVersionIamPolicyOutputWithContext(ctx context.Context) IapAppEngineVersionIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapAppEngineVersionIamPolicyOutput)
}

type IapAppEngineVersionIamPolicyOutput struct{ *pulumi.OutputState }

func (IapAppEngineVersionIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapAppEngineVersionIamPolicy)(nil)).Elem()
}

func (o IapAppEngineVersionIamPolicyOutput) ToIapAppEngineVersionIamPolicyOutput() IapAppEngineVersionIamPolicyOutput {
	return o
}

func (o IapAppEngineVersionIamPolicyOutput) ToIapAppEngineVersionIamPolicyOutputWithContext(ctx context.Context) IapAppEngineVersionIamPolicyOutput {
	return o
}

func (o IapAppEngineVersionIamPolicyOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineVersionIamPolicy) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

func (o IapAppEngineVersionIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineVersionIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o IapAppEngineVersionIamPolicyOutput) IapAppEngineVersionIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineVersionIamPolicy) pulumi.StringOutput { return v.IapAppEngineVersionIamPolicyId }).(pulumi.StringOutput)
}

func (o IapAppEngineVersionIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineVersionIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o IapAppEngineVersionIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineVersionIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o IapAppEngineVersionIamPolicyOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineVersionIamPolicy) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func (o IapAppEngineVersionIamPolicyOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineVersionIamPolicy) pulumi.StringOutput { return v.VersionId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IapAppEngineVersionIamPolicyInput)(nil)).Elem(), &IapAppEngineVersionIamPolicy{})
	pulumi.RegisterOutputType(IapAppEngineVersionIamPolicyOutput{})
}
