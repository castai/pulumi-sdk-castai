// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StorageObjectAcl struct {
	pulumi.CustomResourceState

	Bucket             pulumi.StringOutput      `pulumi:"bucket"`
	Object             pulumi.StringOutput      `pulumi:"object"`
	PredefinedAcl      pulumi.StringPtrOutput   `pulumi:"predefinedAcl"`
	RoleEntities       pulumi.StringArrayOutput `pulumi:"roleEntities"`
	StorageObjectAclId pulumi.StringOutput      `pulumi:"storageObjectAclId"`
}

// NewStorageObjectAcl registers a new resource with the given unique name, arguments, and options.
func NewStorageObjectAcl(ctx *pulumi.Context,
	name string, args *StorageObjectAclArgs, opts ...pulumi.ResourceOption) (*StorageObjectAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Object == nil {
		return nil, errors.New("invalid value for required argument 'Object'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource StorageObjectAcl
	err = ctx.RegisterPackageResource("google-beta:index/storageObjectAcl:StorageObjectAcl", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageObjectAcl gets an existing StorageObjectAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageObjectAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageObjectAclState, opts ...pulumi.ResourceOption) (*StorageObjectAcl, error) {
	var resource StorageObjectAcl
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/storageObjectAcl:StorageObjectAcl", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageObjectAcl resources.
type storageObjectAclState struct {
	Bucket             *string  `pulumi:"bucket"`
	Object             *string  `pulumi:"object"`
	PredefinedAcl      *string  `pulumi:"predefinedAcl"`
	RoleEntities       []string `pulumi:"roleEntities"`
	StorageObjectAclId *string  `pulumi:"storageObjectAclId"`
}

type StorageObjectAclState struct {
	Bucket             pulumi.StringPtrInput
	Object             pulumi.StringPtrInput
	PredefinedAcl      pulumi.StringPtrInput
	RoleEntities       pulumi.StringArrayInput
	StorageObjectAclId pulumi.StringPtrInput
}

func (StorageObjectAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageObjectAclState)(nil)).Elem()
}

type storageObjectAclArgs struct {
	Bucket             string   `pulumi:"bucket"`
	Object             string   `pulumi:"object"`
	PredefinedAcl      *string  `pulumi:"predefinedAcl"`
	RoleEntities       []string `pulumi:"roleEntities"`
	StorageObjectAclId *string  `pulumi:"storageObjectAclId"`
}

// The set of arguments for constructing a StorageObjectAcl resource.
type StorageObjectAclArgs struct {
	Bucket             pulumi.StringInput
	Object             pulumi.StringInput
	PredefinedAcl      pulumi.StringPtrInput
	RoleEntities       pulumi.StringArrayInput
	StorageObjectAclId pulumi.StringPtrInput
}

func (StorageObjectAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageObjectAclArgs)(nil)).Elem()
}

type StorageObjectAclInput interface {
	pulumi.Input

	ToStorageObjectAclOutput() StorageObjectAclOutput
	ToStorageObjectAclOutputWithContext(ctx context.Context) StorageObjectAclOutput
}

func (*StorageObjectAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageObjectAcl)(nil)).Elem()
}

func (i *StorageObjectAcl) ToStorageObjectAclOutput() StorageObjectAclOutput {
	return i.ToStorageObjectAclOutputWithContext(context.Background())
}

func (i *StorageObjectAcl) ToStorageObjectAclOutputWithContext(ctx context.Context) StorageObjectAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageObjectAclOutput)
}

type StorageObjectAclOutput struct{ *pulumi.OutputState }

func (StorageObjectAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageObjectAcl)(nil)).Elem()
}

func (o StorageObjectAclOutput) ToStorageObjectAclOutput() StorageObjectAclOutput {
	return o
}

func (o StorageObjectAclOutput) ToStorageObjectAclOutputWithContext(ctx context.Context) StorageObjectAclOutput {
	return o
}

func (o StorageObjectAclOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageObjectAcl) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

func (o StorageObjectAclOutput) Object() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageObjectAcl) pulumi.StringOutput { return v.Object }).(pulumi.StringOutput)
}

func (o StorageObjectAclOutput) PredefinedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageObjectAcl) pulumi.StringPtrOutput { return v.PredefinedAcl }).(pulumi.StringPtrOutput)
}

func (o StorageObjectAclOutput) RoleEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageObjectAcl) pulumi.StringArrayOutput { return v.RoleEntities }).(pulumi.StringArrayOutput)
}

func (o StorageObjectAclOutput) StorageObjectAclId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageObjectAcl) pulumi.StringOutput { return v.StorageObjectAclId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageObjectAclInput)(nil)).Elem(), &StorageObjectAcl{})
	pulumi.RegisterOutputType(StorageObjectAclOutput{})
}
