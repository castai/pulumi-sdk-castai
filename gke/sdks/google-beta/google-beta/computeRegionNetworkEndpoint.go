// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionNetworkEndpoint struct {
	pulumi.CustomResourceState

	// Client destination port for the 'GCE_VM_IP_PORTMAP' NEG.
	ClientDestinationPort          pulumi.Float64PtrOutput `pulumi:"clientDestinationPort"`
	ComputeRegionNetworkEndpointId pulumi.StringOutput     `pulumi:"computeRegionNetworkEndpointId"`
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn pulumi.StringPtrOutput `pulumi:"fqdn"`
	// The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type
	// GCE_VM_IP_PORTMAP.
	Instance pulumi.StringPtrOutput `pulumi:"instance"`
	// IPv4 address external endpoint. This can only be specified when network_endpoint_type of the NEG is INTERNET_IP_PORT.
	IpAddress pulumi.StringPtrOutput `pulumi:"ipAddress"`
	// The unique identifier number for the resource. This identifier is defined by the server.
	NetworkEndpointId pulumi.Float64Output `pulumi:"networkEndpointId"`
	// Port number of network endpoint.
	Port    pulumi.Float64Output `pulumi:"port"`
	Project pulumi.StringOutput  `pulumi:"project"`
	// Region where the containing network endpoint group is located.
	Region pulumi.StringOutput `pulumi:"region"`
	// The network endpoint group this endpoint is part of.
	RegionNetworkEndpointGroup pulumi.StringOutput                           `pulumi:"regionNetworkEndpointGroup"`
	Timeouts                   ComputeRegionNetworkEndpointTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeRegionNetworkEndpoint registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionNetworkEndpoint(ctx *pulumi.Context,
	name string, args *ComputeRegionNetworkEndpointArgs, opts ...pulumi.ResourceOption) (*ComputeRegionNetworkEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.RegionNetworkEndpointGroup == nil {
		return nil, errors.New("invalid value for required argument 'RegionNetworkEndpointGroup'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionNetworkEndpoint
	err = ctx.RegisterPackageResource("google-beta:index/computeRegionNetworkEndpoint:ComputeRegionNetworkEndpoint", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionNetworkEndpoint gets an existing ComputeRegionNetworkEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionNetworkEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionNetworkEndpointState, opts ...pulumi.ResourceOption) (*ComputeRegionNetworkEndpoint, error) {
	var resource ComputeRegionNetworkEndpoint
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeRegionNetworkEndpoint:ComputeRegionNetworkEndpoint", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionNetworkEndpoint resources.
type computeRegionNetworkEndpointState struct {
	// Client destination port for the 'GCE_VM_IP_PORTMAP' NEG.
	ClientDestinationPort          *float64 `pulumi:"clientDestinationPort"`
	ComputeRegionNetworkEndpointId *string  `pulumi:"computeRegionNetworkEndpointId"`
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn *string `pulumi:"fqdn"`
	// The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type
	// GCE_VM_IP_PORTMAP.
	Instance *string `pulumi:"instance"`
	// IPv4 address external endpoint. This can only be specified when network_endpoint_type of the NEG is INTERNET_IP_PORT.
	IpAddress *string `pulumi:"ipAddress"`
	// The unique identifier number for the resource. This identifier is defined by the server.
	NetworkEndpointId *float64 `pulumi:"networkEndpointId"`
	// Port number of network endpoint.
	Port    *float64 `pulumi:"port"`
	Project *string  `pulumi:"project"`
	// Region where the containing network endpoint group is located.
	Region *string `pulumi:"region"`
	// The network endpoint group this endpoint is part of.
	RegionNetworkEndpointGroup *string                               `pulumi:"regionNetworkEndpointGroup"`
	Timeouts                   *ComputeRegionNetworkEndpointTimeouts `pulumi:"timeouts"`
}

type ComputeRegionNetworkEndpointState struct {
	// Client destination port for the 'GCE_VM_IP_PORTMAP' NEG.
	ClientDestinationPort          pulumi.Float64PtrInput
	ComputeRegionNetworkEndpointId pulumi.StringPtrInput
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn pulumi.StringPtrInput
	// The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type
	// GCE_VM_IP_PORTMAP.
	Instance pulumi.StringPtrInput
	// IPv4 address external endpoint. This can only be specified when network_endpoint_type of the NEG is INTERNET_IP_PORT.
	IpAddress pulumi.StringPtrInput
	// The unique identifier number for the resource. This identifier is defined by the server.
	NetworkEndpointId pulumi.Float64PtrInput
	// Port number of network endpoint.
	Port    pulumi.Float64PtrInput
	Project pulumi.StringPtrInput
	// Region where the containing network endpoint group is located.
	Region pulumi.StringPtrInput
	// The network endpoint group this endpoint is part of.
	RegionNetworkEndpointGroup pulumi.StringPtrInput
	Timeouts                   ComputeRegionNetworkEndpointTimeoutsPtrInput
}

func (ComputeRegionNetworkEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionNetworkEndpointState)(nil)).Elem()
}

type computeRegionNetworkEndpointArgs struct {
	// Client destination port for the 'GCE_VM_IP_PORTMAP' NEG.
	ClientDestinationPort          *float64 `pulumi:"clientDestinationPort"`
	ComputeRegionNetworkEndpointId *string  `pulumi:"computeRegionNetworkEndpointId"`
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn *string `pulumi:"fqdn"`
	// The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type
	// GCE_VM_IP_PORTMAP.
	Instance *string `pulumi:"instance"`
	// IPv4 address external endpoint. This can only be specified when network_endpoint_type of the NEG is INTERNET_IP_PORT.
	IpAddress *string `pulumi:"ipAddress"`
	// Port number of network endpoint.
	Port    float64 `pulumi:"port"`
	Project *string `pulumi:"project"`
	// Region where the containing network endpoint group is located.
	Region *string `pulumi:"region"`
	// The network endpoint group this endpoint is part of.
	RegionNetworkEndpointGroup string                                `pulumi:"regionNetworkEndpointGroup"`
	Timeouts                   *ComputeRegionNetworkEndpointTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeRegionNetworkEndpoint resource.
type ComputeRegionNetworkEndpointArgs struct {
	// Client destination port for the 'GCE_VM_IP_PORTMAP' NEG.
	ClientDestinationPort          pulumi.Float64PtrInput
	ComputeRegionNetworkEndpointId pulumi.StringPtrInput
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn pulumi.StringPtrInput
	// The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type
	// GCE_VM_IP_PORTMAP.
	Instance pulumi.StringPtrInput
	// IPv4 address external endpoint. This can only be specified when network_endpoint_type of the NEG is INTERNET_IP_PORT.
	IpAddress pulumi.StringPtrInput
	// Port number of network endpoint.
	Port    pulumi.Float64Input
	Project pulumi.StringPtrInput
	// Region where the containing network endpoint group is located.
	Region pulumi.StringPtrInput
	// The network endpoint group this endpoint is part of.
	RegionNetworkEndpointGroup pulumi.StringInput
	Timeouts                   ComputeRegionNetworkEndpointTimeoutsPtrInput
}

func (ComputeRegionNetworkEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionNetworkEndpointArgs)(nil)).Elem()
}

type ComputeRegionNetworkEndpointInput interface {
	pulumi.Input

	ToComputeRegionNetworkEndpointOutput() ComputeRegionNetworkEndpointOutput
	ToComputeRegionNetworkEndpointOutputWithContext(ctx context.Context) ComputeRegionNetworkEndpointOutput
}

func (*ComputeRegionNetworkEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionNetworkEndpoint)(nil)).Elem()
}

func (i *ComputeRegionNetworkEndpoint) ToComputeRegionNetworkEndpointOutput() ComputeRegionNetworkEndpointOutput {
	return i.ToComputeRegionNetworkEndpointOutputWithContext(context.Background())
}

func (i *ComputeRegionNetworkEndpoint) ToComputeRegionNetworkEndpointOutputWithContext(ctx context.Context) ComputeRegionNetworkEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionNetworkEndpointOutput)
}

type ComputeRegionNetworkEndpointOutput struct{ *pulumi.OutputState }

func (ComputeRegionNetworkEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionNetworkEndpoint)(nil)).Elem()
}

func (o ComputeRegionNetworkEndpointOutput) ToComputeRegionNetworkEndpointOutput() ComputeRegionNetworkEndpointOutput {
	return o
}

func (o ComputeRegionNetworkEndpointOutput) ToComputeRegionNetworkEndpointOutputWithContext(ctx context.Context) ComputeRegionNetworkEndpointOutput {
	return o
}

// Client destination port for the 'GCE_VM_IP_PORTMAP' NEG.
func (o ComputeRegionNetworkEndpointOutput) ClientDestinationPort() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.Float64PtrOutput { return v.ClientDestinationPort }).(pulumi.Float64PtrOutput)
}

func (o ComputeRegionNetworkEndpointOutput) ComputeRegionNetworkEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.StringOutput { return v.ComputeRegionNetworkEndpointId }).(pulumi.StringOutput)
}

// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
// INTERNET_FQDN_PORT.
func (o ComputeRegionNetworkEndpointOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.StringPtrOutput { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The name for a specific VM instance that the IP address belongs to. This is required for network endpoints of type
// GCE_VM_IP_PORTMAP.
func (o ComputeRegionNetworkEndpointOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.StringPtrOutput { return v.Instance }).(pulumi.StringPtrOutput)
}

// IPv4 address external endpoint. This can only be specified when network_endpoint_type of the NEG is INTERNET_IP_PORT.
func (o ComputeRegionNetworkEndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.StringPtrOutput { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The unique identifier number for the resource. This identifier is defined by the server.
func (o ComputeRegionNetworkEndpointOutput) NetworkEndpointId() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.Float64Output { return v.NetworkEndpointId }).(pulumi.Float64Output)
}

// Port number of network endpoint.
func (o ComputeRegionNetworkEndpointOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.Float64Output { return v.Port }).(pulumi.Float64Output)
}

func (o ComputeRegionNetworkEndpointOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Region where the containing network endpoint group is located.
func (o ComputeRegionNetworkEndpointOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The network endpoint group this endpoint is part of.
func (o ComputeRegionNetworkEndpointOutput) RegionNetworkEndpointGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) pulumi.StringOutput { return v.RegionNetworkEndpointGroup }).(pulumi.StringOutput)
}

func (o ComputeRegionNetworkEndpointOutput) Timeouts() ComputeRegionNetworkEndpointTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkEndpoint) ComputeRegionNetworkEndpointTimeoutsPtrOutput { return v.Timeouts }).(ComputeRegionNetworkEndpointTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionNetworkEndpointInput)(nil)).Elem(), &ComputeRegionNetworkEndpoint{})
	pulumi.RegisterOutputType(ComputeRegionNetworkEndpointOutput{})
}
