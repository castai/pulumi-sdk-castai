// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeFirewallPolicyRule struct {
	pulumi.CustomResourceState

	// The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny", "goto_next" and
	// "apply_security_profile_group".
	Action                      pulumi.StringOutput `pulumi:"action"`
	ComputeFirewallPolicyRuleId pulumi.StringOutput `pulumi:"computeFirewallPolicyRuleId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description for this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured
	// export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on
	// "goto_next" rules.
	EnableLogging pulumi.BoolPtrOutput `pulumi:"enableLogging"`
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringOutput `pulumi:"firewallPolicy"`
	// Type of the resource. Always 'compute#firewallPolicyRule' for firewall policy rules
	Kind pulumi.StringOutput `pulumi:"kind"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match ComputeFirewallPolicyRuleMatchOutput `pulumi:"match"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest prority.
	Priority pulumi.Float64Output `pulumi:"priority"`
	// Calculation of the complexity of a single firewall policy rule.
	RuleTupleCount pulumi.Float64Output `pulumi:"ruleTupleCount"`
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
	SecurityProfileGroup pulumi.StringPtrOutput `pulumi:"securityProfileGroup"`
	// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get
	// this rule. If this field is left blank, all VMs within the organization will receive the rule.
	TargetResources pulumi.StringArrayOutput `pulumi:"targetResources"`
	// A list of service accounts indicating the sets of instances that are applied with this rule.
	TargetServiceAccounts pulumi.StringArrayOutput                   `pulumi:"targetServiceAccounts"`
	Timeouts              ComputeFirewallPolicyRuleTimeoutsPtrOutput `pulumi:"timeouts"`
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action =
	// 'apply_security_profile_group' and cannot be set for other actions.
	TlsInspect pulumi.BoolPtrOutput `pulumi:"tlsInspect"`
}

// NewComputeFirewallPolicyRule registers a new resource with the given unique name, arguments, and options.
func NewComputeFirewallPolicyRule(ctx *pulumi.Context,
	name string, args *ComputeFirewallPolicyRuleArgs, opts ...pulumi.ResourceOption) (*ComputeFirewallPolicyRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.FirewallPolicy == nil {
		return nil, errors.New("invalid value for required argument 'FirewallPolicy'")
	}
	if args.Match == nil {
		return nil, errors.New("invalid value for required argument 'Match'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeFirewallPolicyRule
	err = ctx.RegisterPackageResource("google-beta:index/computeFirewallPolicyRule:ComputeFirewallPolicyRule", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeFirewallPolicyRule gets an existing ComputeFirewallPolicyRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeFirewallPolicyRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeFirewallPolicyRuleState, opts ...pulumi.ResourceOption) (*ComputeFirewallPolicyRule, error) {
	var resource ComputeFirewallPolicyRule
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeFirewallPolicyRule:ComputeFirewallPolicyRule", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeFirewallPolicyRule resources.
type computeFirewallPolicyRuleState struct {
	// The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny", "goto_next" and
	// "apply_security_profile_group".
	Action                      *string `pulumi:"action"`
	ComputeFirewallPolicyRuleId *string `pulumi:"computeFirewallPolicyRuleId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description for this resource.
	Description *string `pulumi:"description"`
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction *string `pulumi:"direction"`
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled *bool `pulumi:"disabled"`
	// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured
	// export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on
	// "goto_next" rules.
	EnableLogging *bool `pulumi:"enableLogging"`
	// The firewall policy of the resource.
	FirewallPolicy *string `pulumi:"firewallPolicy"`
	// Type of the resource. Always 'compute#firewallPolicyRule' for firewall policy rules
	Kind *string `pulumi:"kind"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match *ComputeFirewallPolicyRuleMatch `pulumi:"match"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest prority.
	Priority *float64 `pulumi:"priority"`
	// Calculation of the complexity of a single firewall policy rule.
	RuleTupleCount *float64 `pulumi:"ruleTupleCount"`
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
	SecurityProfileGroup *string `pulumi:"securityProfileGroup"`
	// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get
	// this rule. If this field is left blank, all VMs within the organization will receive the rule.
	TargetResources []string `pulumi:"targetResources"`
	// A list of service accounts indicating the sets of instances that are applied with this rule.
	TargetServiceAccounts []string                           `pulumi:"targetServiceAccounts"`
	Timeouts              *ComputeFirewallPolicyRuleTimeouts `pulumi:"timeouts"`
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action =
	// 'apply_security_profile_group' and cannot be set for other actions.
	TlsInspect *bool `pulumi:"tlsInspect"`
}

type ComputeFirewallPolicyRuleState struct {
	// The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny", "goto_next" and
	// "apply_security_profile_group".
	Action                      pulumi.StringPtrInput
	ComputeFirewallPolicyRuleId pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description for this resource.
	Description pulumi.StringPtrInput
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction pulumi.StringPtrInput
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled pulumi.BoolPtrInput
	// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured
	// export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on
	// "goto_next" rules.
	EnableLogging pulumi.BoolPtrInput
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringPtrInput
	// Type of the resource. Always 'compute#firewallPolicyRule' for firewall policy rules
	Kind pulumi.StringPtrInput
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match ComputeFirewallPolicyRuleMatchPtrInput
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest prority.
	Priority pulumi.Float64PtrInput
	// Calculation of the complexity of a single firewall policy rule.
	RuleTupleCount pulumi.Float64PtrInput
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
	SecurityProfileGroup pulumi.StringPtrInput
	// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get
	// this rule. If this field is left blank, all VMs within the organization will receive the rule.
	TargetResources pulumi.StringArrayInput
	// A list of service accounts indicating the sets of instances that are applied with this rule.
	TargetServiceAccounts pulumi.StringArrayInput
	Timeouts              ComputeFirewallPolicyRuleTimeoutsPtrInput
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action =
	// 'apply_security_profile_group' and cannot be set for other actions.
	TlsInspect pulumi.BoolPtrInput
}

func (ComputeFirewallPolicyRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeFirewallPolicyRuleState)(nil)).Elem()
}

type computeFirewallPolicyRuleArgs struct {
	// The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny", "goto_next" and
	// "apply_security_profile_group".
	Action                      string  `pulumi:"action"`
	ComputeFirewallPolicyRuleId *string `pulumi:"computeFirewallPolicyRuleId"`
	// An optional description for this resource.
	Description *string `pulumi:"description"`
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction string `pulumi:"direction"`
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled *bool `pulumi:"disabled"`
	// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured
	// export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on
	// "goto_next" rules.
	EnableLogging *bool `pulumi:"enableLogging"`
	// The firewall policy of the resource.
	FirewallPolicy string `pulumi:"firewallPolicy"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match ComputeFirewallPolicyRuleMatch `pulumi:"match"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest prority.
	Priority float64 `pulumi:"priority"`
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
	SecurityProfileGroup *string `pulumi:"securityProfileGroup"`
	// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get
	// this rule. If this field is left blank, all VMs within the organization will receive the rule.
	TargetResources []string `pulumi:"targetResources"`
	// A list of service accounts indicating the sets of instances that are applied with this rule.
	TargetServiceAccounts []string                           `pulumi:"targetServiceAccounts"`
	Timeouts              *ComputeFirewallPolicyRuleTimeouts `pulumi:"timeouts"`
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action =
	// 'apply_security_profile_group' and cannot be set for other actions.
	TlsInspect *bool `pulumi:"tlsInspect"`
}

// The set of arguments for constructing a ComputeFirewallPolicyRule resource.
type ComputeFirewallPolicyRuleArgs struct {
	// The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny", "goto_next" and
	// "apply_security_profile_group".
	Action                      pulumi.StringInput
	ComputeFirewallPolicyRuleId pulumi.StringPtrInput
	// An optional description for this resource.
	Description pulumi.StringPtrInput
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction pulumi.StringInput
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled pulumi.BoolPtrInput
	// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured
	// export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on
	// "goto_next" rules.
	EnableLogging pulumi.BoolPtrInput
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringInput
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match ComputeFirewallPolicyRuleMatchInput
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest prority.
	Priority pulumi.Float64Input
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
	SecurityProfileGroup pulumi.StringPtrInput
	// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get
	// this rule. If this field is left blank, all VMs within the organization will receive the rule.
	TargetResources pulumi.StringArrayInput
	// A list of service accounts indicating the sets of instances that are applied with this rule.
	TargetServiceAccounts pulumi.StringArrayInput
	Timeouts              ComputeFirewallPolicyRuleTimeoutsPtrInput
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action =
	// 'apply_security_profile_group' and cannot be set for other actions.
	TlsInspect pulumi.BoolPtrInput
}

func (ComputeFirewallPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeFirewallPolicyRuleArgs)(nil)).Elem()
}

type ComputeFirewallPolicyRuleInput interface {
	pulumi.Input

	ToComputeFirewallPolicyRuleOutput() ComputeFirewallPolicyRuleOutput
	ToComputeFirewallPolicyRuleOutputWithContext(ctx context.Context) ComputeFirewallPolicyRuleOutput
}

func (*ComputeFirewallPolicyRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeFirewallPolicyRule)(nil)).Elem()
}

func (i *ComputeFirewallPolicyRule) ToComputeFirewallPolicyRuleOutput() ComputeFirewallPolicyRuleOutput {
	return i.ToComputeFirewallPolicyRuleOutputWithContext(context.Background())
}

func (i *ComputeFirewallPolicyRule) ToComputeFirewallPolicyRuleOutputWithContext(ctx context.Context) ComputeFirewallPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeFirewallPolicyRuleOutput)
}

type ComputeFirewallPolicyRuleOutput struct{ *pulumi.OutputState }

func (ComputeFirewallPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeFirewallPolicyRule)(nil)).Elem()
}

func (o ComputeFirewallPolicyRuleOutput) ToComputeFirewallPolicyRuleOutput() ComputeFirewallPolicyRuleOutput {
	return o
}

func (o ComputeFirewallPolicyRuleOutput) ToComputeFirewallPolicyRuleOutputWithContext(ctx context.Context) ComputeFirewallPolicyRuleOutput {
	return o
}

// The Action to perform when the client connection triggers the rule. Valid actions are "allow", "deny", "goto_next" and
// "apply_security_profile_group".
func (o ComputeFirewallPolicyRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o ComputeFirewallPolicyRuleOutput) ComputeFirewallPolicyRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringOutput { return v.ComputeFirewallPolicyRuleId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeFirewallPolicyRuleOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description for this resource.
func (o ComputeFirewallPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
func (o ComputeFirewallPolicyRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
func (o ComputeFirewallPolicyRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured
// export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on
// "goto_next" rules.
func (o ComputeFirewallPolicyRuleOutput) EnableLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.BoolPtrOutput { return v.EnableLogging }).(pulumi.BoolPtrOutput)
}

// The firewall policy of the resource.
func (o ComputeFirewallPolicyRuleOutput) FirewallPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringOutput { return v.FirewallPolicy }).(pulumi.StringOutput)
}

// Type of the resource. Always 'compute#firewallPolicyRule' for firewall policy rules
func (o ComputeFirewallPolicyRuleOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
// enforced.
func (o ComputeFirewallPolicyRuleOutput) Match() ComputeFirewallPolicyRuleMatchOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) ComputeFirewallPolicyRuleMatchOutput { return v.Match }).(ComputeFirewallPolicyRuleMatchOutput)
}

// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
// lowest prority.
func (o ComputeFirewallPolicyRuleOutput) Priority() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.Float64Output { return v.Priority }).(pulumi.Float64Output)
}

// Calculation of the complexity of a single firewall policy rule.
func (o ComputeFirewallPolicyRuleOutput) RuleTupleCount() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.Float64Output { return v.RuleTupleCount }).(pulumi.Float64Output)
}

// A fully-qualified URL of a SecurityProfile resource instance. Example:
// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
// Must be specified if action = 'apply_security_profile_group' and cannot be specified for other actions.
func (o ComputeFirewallPolicyRuleOutput) SecurityProfileGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringPtrOutput { return v.SecurityProfileGroup }).(pulumi.StringPtrOutput)
}

// A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get
// this rule. If this field is left blank, all VMs within the organization will receive the rule.
func (o ComputeFirewallPolicyRuleOutput) TargetResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringArrayOutput { return v.TargetResources }).(pulumi.StringArrayOutput)
}

// A list of service accounts indicating the sets of instances that are applied with this rule.
func (o ComputeFirewallPolicyRuleOutput) TargetServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.StringArrayOutput { return v.TargetServiceAccounts }).(pulumi.StringArrayOutput)
}

func (o ComputeFirewallPolicyRuleOutput) Timeouts() ComputeFirewallPolicyRuleTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) ComputeFirewallPolicyRuleTimeoutsPtrOutput { return v.Timeouts }).(ComputeFirewallPolicyRuleTimeoutsPtrOutput)
}

// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action =
// 'apply_security_profile_group' and cannot be set for other actions.
func (o ComputeFirewallPolicyRuleOutput) TlsInspect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyRule) pulumi.BoolPtrOutput { return v.TlsInspect }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeFirewallPolicyRuleInput)(nil)).Elem(), &ComputeFirewallPolicyRule{})
	pulumi.RegisterOutputType(ComputeFirewallPolicyRuleOutput{})
}
