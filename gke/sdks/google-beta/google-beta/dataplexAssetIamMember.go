// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexAssetIamMember struct {
	pulumi.CustomResourceState

	Asset                    pulumi.StringOutput                      `pulumi:"asset"`
	Condition                DataplexAssetIamMemberConditionPtrOutput `pulumi:"condition"`
	DataplexAssetIamMemberId pulumi.StringOutput                      `pulumi:"dataplexAssetIamMemberId"`
	DataplexZone             pulumi.StringOutput                      `pulumi:"dataplexZone"`
	Etag                     pulumi.StringOutput                      `pulumi:"etag"`
	Lake                     pulumi.StringOutput                      `pulumi:"lake"`
	Location                 pulumi.StringOutput                      `pulumi:"location"`
	Member                   pulumi.StringOutput                      `pulumi:"member"`
	Project                  pulumi.StringOutput                      `pulumi:"project"`
	Role                     pulumi.StringOutput                      `pulumi:"role"`
}

// NewDataplexAssetIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataplexAssetIamMember(ctx *pulumi.Context,
	name string, args *DataplexAssetIamMemberArgs, opts ...pulumi.ResourceOption) (*DataplexAssetIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Asset == nil {
		return nil, errors.New("invalid value for required argument 'Asset'")
	}
	if args.DataplexZone == nil {
		return nil, errors.New("invalid value for required argument 'DataplexZone'")
	}
	if args.Lake == nil {
		return nil, errors.New("invalid value for required argument 'Lake'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexAssetIamMember
	err = ctx.RegisterPackageResource("google-beta:index/dataplexAssetIamMember:DataplexAssetIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexAssetIamMember gets an existing DataplexAssetIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexAssetIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexAssetIamMemberState, opts ...pulumi.ResourceOption) (*DataplexAssetIamMember, error) {
	var resource DataplexAssetIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexAssetIamMember:DataplexAssetIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexAssetIamMember resources.
type dataplexAssetIamMemberState struct {
	Asset                    *string                          `pulumi:"asset"`
	Condition                *DataplexAssetIamMemberCondition `pulumi:"condition"`
	DataplexAssetIamMemberId *string                          `pulumi:"dataplexAssetIamMemberId"`
	DataplexZone             *string                          `pulumi:"dataplexZone"`
	Etag                     *string                          `pulumi:"etag"`
	Lake                     *string                          `pulumi:"lake"`
	Location                 *string                          `pulumi:"location"`
	Member                   *string                          `pulumi:"member"`
	Project                  *string                          `pulumi:"project"`
	Role                     *string                          `pulumi:"role"`
}

type DataplexAssetIamMemberState struct {
	Asset                    pulumi.StringPtrInput
	Condition                DataplexAssetIamMemberConditionPtrInput
	DataplexAssetIamMemberId pulumi.StringPtrInput
	DataplexZone             pulumi.StringPtrInput
	Etag                     pulumi.StringPtrInput
	Lake                     pulumi.StringPtrInput
	Location                 pulumi.StringPtrInput
	Member                   pulumi.StringPtrInput
	Project                  pulumi.StringPtrInput
	Role                     pulumi.StringPtrInput
}

func (DataplexAssetIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAssetIamMemberState)(nil)).Elem()
}

type dataplexAssetIamMemberArgs struct {
	Asset                    string                           `pulumi:"asset"`
	Condition                *DataplexAssetIamMemberCondition `pulumi:"condition"`
	DataplexAssetIamMemberId *string                          `pulumi:"dataplexAssetIamMemberId"`
	DataplexZone             string                           `pulumi:"dataplexZone"`
	Lake                     string                           `pulumi:"lake"`
	Location                 *string                          `pulumi:"location"`
	Member                   string                           `pulumi:"member"`
	Project                  *string                          `pulumi:"project"`
	Role                     string                           `pulumi:"role"`
}

// The set of arguments for constructing a DataplexAssetIamMember resource.
type DataplexAssetIamMemberArgs struct {
	Asset                    pulumi.StringInput
	Condition                DataplexAssetIamMemberConditionPtrInput
	DataplexAssetIamMemberId pulumi.StringPtrInput
	DataplexZone             pulumi.StringInput
	Lake                     pulumi.StringInput
	Location                 pulumi.StringPtrInput
	Member                   pulumi.StringInput
	Project                  pulumi.StringPtrInput
	Role                     pulumi.StringInput
}

func (DataplexAssetIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAssetIamMemberArgs)(nil)).Elem()
}

type DataplexAssetIamMemberInput interface {
	pulumi.Input

	ToDataplexAssetIamMemberOutput() DataplexAssetIamMemberOutput
	ToDataplexAssetIamMemberOutputWithContext(ctx context.Context) DataplexAssetIamMemberOutput
}

func (*DataplexAssetIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAssetIamMember)(nil)).Elem()
}

func (i *DataplexAssetIamMember) ToDataplexAssetIamMemberOutput() DataplexAssetIamMemberOutput {
	return i.ToDataplexAssetIamMemberOutputWithContext(context.Background())
}

func (i *DataplexAssetIamMember) ToDataplexAssetIamMemberOutputWithContext(ctx context.Context) DataplexAssetIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexAssetIamMemberOutput)
}

type DataplexAssetIamMemberOutput struct{ *pulumi.OutputState }

func (DataplexAssetIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAssetIamMember)(nil)).Elem()
}

func (o DataplexAssetIamMemberOutput) ToDataplexAssetIamMemberOutput() DataplexAssetIamMemberOutput {
	return o
}

func (o DataplexAssetIamMemberOutput) ToDataplexAssetIamMemberOutputWithContext(ctx context.Context) DataplexAssetIamMemberOutput {
	return o
}

func (o DataplexAssetIamMemberOutput) Asset() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) pulumi.StringOutput { return v.Asset }).(pulumi.StringOutput)
}

func (o DataplexAssetIamMemberOutput) Condition() DataplexAssetIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) DataplexAssetIamMemberConditionPtrOutput { return v.Condition }).(DataplexAssetIamMemberConditionPtrOutput)
}

func (o DataplexAssetIamMemberOutput) DataplexAssetIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) pulumi.StringOutput { return v.DataplexAssetIamMemberId }).(pulumi.StringOutput)
}

func (o DataplexAssetIamMemberOutput) DataplexZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) pulumi.StringOutput { return v.DataplexZone }).(pulumi.StringOutput)
}

func (o DataplexAssetIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexAssetIamMemberOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) pulumi.StringOutput { return v.Lake }).(pulumi.StringOutput)
}

func (o DataplexAssetIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexAssetIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataplexAssetIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataplexAssetIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAssetIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexAssetIamMemberInput)(nil)).Elem(), &DataplexAssetIamMember{})
	pulumi.RegisterOutputType(DataplexAssetIamMemberOutput{})
}
