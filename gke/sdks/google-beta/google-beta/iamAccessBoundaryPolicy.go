// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamAccessBoundaryPolicy struct {
	pulumi.CustomResourceState

	// The display name of the rule.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The hash of the resource. Used internally during updates.
	Etag                      pulumi.StringOutput `pulumi:"etag"`
	IamAccessBoundaryPolicyId pulumi.StringOutput `pulumi:"iamAccessBoundaryPolicyId"`
	// The name of the policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// The attachment point is identified by its URL-encoded full resource name.
	Parent pulumi.StringOutput `pulumi:"parent"`
	// Rules to be applied.
	Rules    IamAccessBoundaryPolicyRuleArrayOutput   `pulumi:"rules"`
	Timeouts IamAccessBoundaryPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewIamAccessBoundaryPolicy registers a new resource with the given unique name, arguments, and options.
func NewIamAccessBoundaryPolicy(ctx *pulumi.Context,
	name string, args *IamAccessBoundaryPolicyArgs, opts ...pulumi.ResourceOption) (*IamAccessBoundaryPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IamAccessBoundaryPolicy
	err = ctx.RegisterPackageResource("google-beta:index/iamAccessBoundaryPolicy:IamAccessBoundaryPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamAccessBoundaryPolicy gets an existing IamAccessBoundaryPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamAccessBoundaryPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamAccessBoundaryPolicyState, opts ...pulumi.ResourceOption) (*IamAccessBoundaryPolicy, error) {
	var resource IamAccessBoundaryPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/iamAccessBoundaryPolicy:IamAccessBoundaryPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamAccessBoundaryPolicy resources.
type iamAccessBoundaryPolicyState struct {
	// The display name of the rule.
	DisplayName *string `pulumi:"displayName"`
	// The hash of the resource. Used internally during updates.
	Etag                      *string `pulumi:"etag"`
	IamAccessBoundaryPolicyId *string `pulumi:"iamAccessBoundaryPolicyId"`
	// The name of the policy.
	Name *string `pulumi:"name"`
	// The attachment point is identified by its URL-encoded full resource name.
	Parent *string `pulumi:"parent"`
	// Rules to be applied.
	Rules    []IamAccessBoundaryPolicyRule    `pulumi:"rules"`
	Timeouts *IamAccessBoundaryPolicyTimeouts `pulumi:"timeouts"`
}

type IamAccessBoundaryPolicyState struct {
	// The display name of the rule.
	DisplayName pulumi.StringPtrInput
	// The hash of the resource. Used internally during updates.
	Etag                      pulumi.StringPtrInput
	IamAccessBoundaryPolicyId pulumi.StringPtrInput
	// The name of the policy.
	Name pulumi.StringPtrInput
	// The attachment point is identified by its URL-encoded full resource name.
	Parent pulumi.StringPtrInput
	// Rules to be applied.
	Rules    IamAccessBoundaryPolicyRuleArrayInput
	Timeouts IamAccessBoundaryPolicyTimeoutsPtrInput
}

func (IamAccessBoundaryPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamAccessBoundaryPolicyState)(nil)).Elem()
}

type iamAccessBoundaryPolicyArgs struct {
	// The display name of the rule.
	DisplayName               *string `pulumi:"displayName"`
	IamAccessBoundaryPolicyId *string `pulumi:"iamAccessBoundaryPolicyId"`
	// The name of the policy.
	Name *string `pulumi:"name"`
	// The attachment point is identified by its URL-encoded full resource name.
	Parent string `pulumi:"parent"`
	// Rules to be applied.
	Rules    []IamAccessBoundaryPolicyRule    `pulumi:"rules"`
	Timeouts *IamAccessBoundaryPolicyTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a IamAccessBoundaryPolicy resource.
type IamAccessBoundaryPolicyArgs struct {
	// The display name of the rule.
	DisplayName               pulumi.StringPtrInput
	IamAccessBoundaryPolicyId pulumi.StringPtrInput
	// The name of the policy.
	Name pulumi.StringPtrInput
	// The attachment point is identified by its URL-encoded full resource name.
	Parent pulumi.StringInput
	// Rules to be applied.
	Rules    IamAccessBoundaryPolicyRuleArrayInput
	Timeouts IamAccessBoundaryPolicyTimeoutsPtrInput
}

func (IamAccessBoundaryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamAccessBoundaryPolicyArgs)(nil)).Elem()
}

type IamAccessBoundaryPolicyInput interface {
	pulumi.Input

	ToIamAccessBoundaryPolicyOutput() IamAccessBoundaryPolicyOutput
	ToIamAccessBoundaryPolicyOutputWithContext(ctx context.Context) IamAccessBoundaryPolicyOutput
}

func (*IamAccessBoundaryPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**IamAccessBoundaryPolicy)(nil)).Elem()
}

func (i *IamAccessBoundaryPolicy) ToIamAccessBoundaryPolicyOutput() IamAccessBoundaryPolicyOutput {
	return i.ToIamAccessBoundaryPolicyOutputWithContext(context.Background())
}

func (i *IamAccessBoundaryPolicy) ToIamAccessBoundaryPolicyOutputWithContext(ctx context.Context) IamAccessBoundaryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamAccessBoundaryPolicyOutput)
}

type IamAccessBoundaryPolicyOutput struct{ *pulumi.OutputState }

func (IamAccessBoundaryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamAccessBoundaryPolicy)(nil)).Elem()
}

func (o IamAccessBoundaryPolicyOutput) ToIamAccessBoundaryPolicyOutput() IamAccessBoundaryPolicyOutput {
	return o
}

func (o IamAccessBoundaryPolicyOutput) ToIamAccessBoundaryPolicyOutputWithContext(ctx context.Context) IamAccessBoundaryPolicyOutput {
	return o
}

// The display name of the rule.
func (o IamAccessBoundaryPolicyOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamAccessBoundaryPolicy) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The hash of the resource. Used internally during updates.
func (o IamAccessBoundaryPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *IamAccessBoundaryPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o IamAccessBoundaryPolicyOutput) IamAccessBoundaryPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamAccessBoundaryPolicy) pulumi.StringOutput { return v.IamAccessBoundaryPolicyId }).(pulumi.StringOutput)
}

// The name of the policy.
func (o IamAccessBoundaryPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IamAccessBoundaryPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The attachment point is identified by its URL-encoded full resource name.
func (o IamAccessBoundaryPolicyOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *IamAccessBoundaryPolicy) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// Rules to be applied.
func (o IamAccessBoundaryPolicyOutput) Rules() IamAccessBoundaryPolicyRuleArrayOutput {
	return o.ApplyT(func(v *IamAccessBoundaryPolicy) IamAccessBoundaryPolicyRuleArrayOutput { return v.Rules }).(IamAccessBoundaryPolicyRuleArrayOutput)
}

func (o IamAccessBoundaryPolicyOutput) Timeouts() IamAccessBoundaryPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *IamAccessBoundaryPolicy) IamAccessBoundaryPolicyTimeoutsPtrOutput { return v.Timeouts }).(IamAccessBoundaryPolicyTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamAccessBoundaryPolicyInput)(nil)).Elem(), &IamAccessBoundaryPolicy{})
	pulumi.RegisterOutputType(IamAccessBoundaryPolicyOutput{})
}
