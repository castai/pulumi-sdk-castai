// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataprocGdcApplicationEnvironment struct {
	pulumi.CustomResourceState

	// The annotations to associate with this application environment. Annotations may be used to store client information, but
	// are not used by the server. **Note**: This field is non-authoritative, and will only manage the annotations present in
	// your configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the
	// resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// The id of the application environment
	ApplicationEnvironmentId pulumi.StringPtrOutput `pulumi:"applicationEnvironmentId"`
	// The timestamp when the resource was created.
	CreateTime                          pulumi.StringOutput `pulumi:"createTime"`
	DataprocGdcApplicationEnvironmentId pulumi.StringOutput `pulumi:"dataprocGdcApplicationEnvironmentId"`
	// User-provided human-readable name to be used in user interfaces.
	DisplayName          pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The labels to associate with this application environment. Labels may be used for filtering and billing tracking.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the application environment
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The name of the application environment. Format:
	// projects/{project}/locations/{location}/serviceInstances/{service_instance}/applicationEnvironments/{application_environment_id}
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the
	// cluster
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
	Project   pulumi.StringOutput    `pulumi:"project"`
	// The id of the service instance to which this application environment belongs.
	Serviceinstance pulumi.StringOutput `pulumi:"serviceinstance"`
	// Represents the SparkApplicationEnvironmentConfig.
	SparkApplicationEnvironmentConfig DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigPtrOutput `pulumi:"sparkApplicationEnvironmentConfig"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                             `pulumi:"terraformLabels"`
	Timeouts        DataprocGdcApplicationEnvironmentTimeoutsPtrOutput `pulumi:"timeouts"`
	// System generated unique identifier for this application environment, formatted as UUID4.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The timestamp when the resource was most recently updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewDataprocGdcApplicationEnvironment registers a new resource with the given unique name, arguments, and options.
func NewDataprocGdcApplicationEnvironment(ctx *pulumi.Context,
	name string, args *DataprocGdcApplicationEnvironmentArgs, opts ...pulumi.ResourceOption) (*DataprocGdcApplicationEnvironment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Serviceinstance == nil {
		return nil, errors.New("invalid value for required argument 'Serviceinstance'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataprocGdcApplicationEnvironment
	err = ctx.RegisterPackageResource("google-beta:index/dataprocGdcApplicationEnvironment:DataprocGdcApplicationEnvironment", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocGdcApplicationEnvironment gets an existing DataprocGdcApplicationEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocGdcApplicationEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocGdcApplicationEnvironmentState, opts ...pulumi.ResourceOption) (*DataprocGdcApplicationEnvironment, error) {
	var resource DataprocGdcApplicationEnvironment
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataprocGdcApplicationEnvironment:DataprocGdcApplicationEnvironment", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocGdcApplicationEnvironment resources.
type dataprocGdcApplicationEnvironmentState struct {
	// The annotations to associate with this application environment. Annotations may be used to store client information, but
	// are not used by the server. **Note**: This field is non-authoritative, and will only manage the annotations present in
	// your configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the
	// resource.
	Annotations map[string]string `pulumi:"annotations"`
	// The id of the application environment
	ApplicationEnvironmentId *string `pulumi:"applicationEnvironmentId"`
	// The timestamp when the resource was created.
	CreateTime                          *string `pulumi:"createTime"`
	DataprocGdcApplicationEnvironmentId *string `pulumi:"dataprocGdcApplicationEnvironmentId"`
	// User-provided human-readable name to be used in user interfaces.
	DisplayName          *string           `pulumi:"displayName"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// The labels to associate with this application environment. Labels may be used for filtering and billing tracking.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the application environment
	Location *string `pulumi:"location"`
	// Identifier. The name of the application environment. Format:
	// projects/{project}/locations/{location}/serviceInstances/{service_instance}/applicationEnvironments/{application_environment_id}
	Name *string `pulumi:"name"`
	// The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the
	// cluster
	Namespace *string `pulumi:"namespace"`
	Project   *string `pulumi:"project"`
	// The id of the service instance to which this application environment belongs.
	Serviceinstance *string `pulumi:"serviceinstance"`
	// Represents the SparkApplicationEnvironmentConfig.
	SparkApplicationEnvironmentConfig *DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig `pulumi:"sparkApplicationEnvironmentConfig"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                          `pulumi:"terraformLabels"`
	Timeouts        *DataprocGdcApplicationEnvironmentTimeouts `pulumi:"timeouts"`
	// System generated unique identifier for this application environment, formatted as UUID4.
	Uid *string `pulumi:"uid"`
	// The timestamp when the resource was most recently updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type DataprocGdcApplicationEnvironmentState struct {
	// The annotations to associate with this application environment. Annotations may be used to store client information, but
	// are not used by the server. **Note**: This field is non-authoritative, and will only manage the annotations present in
	// your configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the
	// resource.
	Annotations pulumi.StringMapInput
	// The id of the application environment
	ApplicationEnvironmentId pulumi.StringPtrInput
	// The timestamp when the resource was created.
	CreateTime                          pulumi.StringPtrInput
	DataprocGdcApplicationEnvironmentId pulumi.StringPtrInput
	// User-provided human-readable name to be used in user interfaces.
	DisplayName          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// The labels to associate with this application environment. Labels may be used for filtering and billing tracking.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the application environment
	Location pulumi.StringPtrInput
	// Identifier. The name of the application environment. Format:
	// projects/{project}/locations/{location}/serviceInstances/{service_instance}/applicationEnvironments/{application_environment_id}
	Name pulumi.StringPtrInput
	// The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the
	// cluster
	Namespace pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	// The id of the service instance to which this application environment belongs.
	Serviceinstance pulumi.StringPtrInput
	// Represents the SparkApplicationEnvironmentConfig.
	SparkApplicationEnvironmentConfig DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DataprocGdcApplicationEnvironmentTimeoutsPtrInput
	// System generated unique identifier for this application environment, formatted as UUID4.
	Uid pulumi.StringPtrInput
	// The timestamp when the resource was most recently updated.
	UpdateTime pulumi.StringPtrInput
}

func (DataprocGdcApplicationEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocGdcApplicationEnvironmentState)(nil)).Elem()
}

type dataprocGdcApplicationEnvironmentArgs struct {
	// The annotations to associate with this application environment. Annotations may be used to store client information, but
	// are not used by the server. **Note**: This field is non-authoritative, and will only manage the annotations present in
	// your configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the
	// resource.
	Annotations map[string]string `pulumi:"annotations"`
	// The id of the application environment
	ApplicationEnvironmentId            *string `pulumi:"applicationEnvironmentId"`
	DataprocGdcApplicationEnvironmentId *string `pulumi:"dataprocGdcApplicationEnvironmentId"`
	// User-provided human-readable name to be used in user interfaces.
	DisplayName *string `pulumi:"displayName"`
	// The labels to associate with this application environment. Labels may be used for filtering and billing tracking.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the application environment
	Location string `pulumi:"location"`
	// The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the
	// cluster
	Namespace *string `pulumi:"namespace"`
	Project   *string `pulumi:"project"`
	// The id of the service instance to which this application environment belongs.
	Serviceinstance string `pulumi:"serviceinstance"`
	// Represents the SparkApplicationEnvironmentConfig.
	SparkApplicationEnvironmentConfig *DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfig `pulumi:"sparkApplicationEnvironmentConfig"`
	Timeouts                          *DataprocGdcApplicationEnvironmentTimeouts                          `pulumi:"timeouts"`
}

// The set of arguments for constructing a DataprocGdcApplicationEnvironment resource.
type DataprocGdcApplicationEnvironmentArgs struct {
	// The annotations to associate with this application environment. Annotations may be used to store client information, but
	// are not used by the server. **Note**: This field is non-authoritative, and will only manage the annotations present in
	// your configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the
	// resource.
	Annotations pulumi.StringMapInput
	// The id of the application environment
	ApplicationEnvironmentId            pulumi.StringPtrInput
	DataprocGdcApplicationEnvironmentId pulumi.StringPtrInput
	// User-provided human-readable name to be used in user interfaces.
	DisplayName pulumi.StringPtrInput
	// The labels to associate with this application environment. Labels may be used for filtering and billing tracking.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the application environment
	Location pulumi.StringInput
	// The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the
	// cluster
	Namespace pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	// The id of the service instance to which this application environment belongs.
	Serviceinstance pulumi.StringInput
	// Represents the SparkApplicationEnvironmentConfig.
	SparkApplicationEnvironmentConfig DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigPtrInput
	Timeouts                          DataprocGdcApplicationEnvironmentTimeoutsPtrInput
}

func (DataprocGdcApplicationEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocGdcApplicationEnvironmentArgs)(nil)).Elem()
}

type DataprocGdcApplicationEnvironmentInput interface {
	pulumi.Input

	ToDataprocGdcApplicationEnvironmentOutput() DataprocGdcApplicationEnvironmentOutput
	ToDataprocGdcApplicationEnvironmentOutputWithContext(ctx context.Context) DataprocGdcApplicationEnvironmentOutput
}

func (*DataprocGdcApplicationEnvironment) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocGdcApplicationEnvironment)(nil)).Elem()
}

func (i *DataprocGdcApplicationEnvironment) ToDataprocGdcApplicationEnvironmentOutput() DataprocGdcApplicationEnvironmentOutput {
	return i.ToDataprocGdcApplicationEnvironmentOutputWithContext(context.Background())
}

func (i *DataprocGdcApplicationEnvironment) ToDataprocGdcApplicationEnvironmentOutputWithContext(ctx context.Context) DataprocGdcApplicationEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocGdcApplicationEnvironmentOutput)
}

type DataprocGdcApplicationEnvironmentOutput struct{ *pulumi.OutputState }

func (DataprocGdcApplicationEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocGdcApplicationEnvironment)(nil)).Elem()
}

func (o DataprocGdcApplicationEnvironmentOutput) ToDataprocGdcApplicationEnvironmentOutput() DataprocGdcApplicationEnvironmentOutput {
	return o
}

func (o DataprocGdcApplicationEnvironmentOutput) ToDataprocGdcApplicationEnvironmentOutputWithContext(ctx context.Context) DataprocGdcApplicationEnvironmentOutput {
	return o
}

// The annotations to associate with this application environment. Annotations may be used to store client information, but
// are not used by the server. **Note**: This field is non-authoritative, and will only manage the annotations present in
// your configuration. Please refer to the field 'effective_annotations' for all of the annotations present on the
// resource.
func (o DataprocGdcApplicationEnvironmentOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// The id of the application environment
func (o DataprocGdcApplicationEnvironmentOutput) ApplicationEnvironmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringPtrOutput { return v.ApplicationEnvironmentId }).(pulumi.StringPtrOutput)
}

// The timestamp when the resource was created.
func (o DataprocGdcApplicationEnvironmentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o DataprocGdcApplicationEnvironmentOutput) DataprocGdcApplicationEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringOutput {
		return v.DataprocGdcApplicationEnvironmentId
	}).(pulumi.StringOutput)
}

// User-provided human-readable name to be used in user interfaces.
func (o DataprocGdcApplicationEnvironmentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o DataprocGdcApplicationEnvironmentOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o DataprocGdcApplicationEnvironmentOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The labels to associate with this application environment. Labels may be used for filtering and billing tracking.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
// to the field 'effective_labels' for all of the labels present on the resource.
func (o DataprocGdcApplicationEnvironmentOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the application environment
func (o DataprocGdcApplicationEnvironmentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The name of the application environment. Format:
// projects/{project}/locations/{location}/serviceInstances/{service_instance}/applicationEnvironments/{application_environment_id}
func (o DataprocGdcApplicationEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the namespace in which to create this ApplicationEnvironment. This namespace must already exist in the
// cluster
func (o DataprocGdcApplicationEnvironmentOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o DataprocGdcApplicationEnvironmentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The id of the service instance to which this application environment belongs.
func (o DataprocGdcApplicationEnvironmentOutput) Serviceinstance() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringOutput { return v.Serviceinstance }).(pulumi.StringOutput)
}

// Represents the SparkApplicationEnvironmentConfig.
func (o DataprocGdcApplicationEnvironmentOutput) SparkApplicationEnvironmentConfig() DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigPtrOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigPtrOutput {
		return v.SparkApplicationEnvironmentConfig
	}).(DataprocGdcApplicationEnvironmentSparkApplicationEnvironmentConfigPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DataprocGdcApplicationEnvironmentOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DataprocGdcApplicationEnvironmentOutput) Timeouts() DataprocGdcApplicationEnvironmentTimeoutsPtrOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) DataprocGdcApplicationEnvironmentTimeoutsPtrOutput {
		return v.Timeouts
	}).(DataprocGdcApplicationEnvironmentTimeoutsPtrOutput)
}

// System generated unique identifier for this application environment, formatted as UUID4.
func (o DataprocGdcApplicationEnvironmentOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The timestamp when the resource was most recently updated.
func (o DataprocGdcApplicationEnvironmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocGdcApplicationEnvironment) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocGdcApplicationEnvironmentInput)(nil)).Elem(), &DataprocGdcApplicationEnvironment{})
	pulumi.RegisterOutputType(DataprocGdcApplicationEnvironmentOutput{})
}
