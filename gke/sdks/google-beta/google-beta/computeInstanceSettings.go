// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeInstanceSettings struct {
	pulumi.CustomResourceState

	ComputeInstanceSettingsId pulumi.StringOutput `pulumi:"computeInstanceSettingsId"`
	// The fingerprint used for optimistic locking of this resource. Used internally during updates.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// The metadata key/value pairs assigned to all the instances in the corresponding scope.
	Metadata ComputeInstanceSettingsMetadataPtrOutput `pulumi:"metadata"`
	Project  pulumi.StringOutput                      `pulumi:"project"`
	Timeouts ComputeInstanceSettingsTimeoutsPtrOutput `pulumi:"timeouts"`
	// A reference to the zone where the machine resides.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewComputeInstanceSettings registers a new resource with the given unique name, arguments, and options.
func NewComputeInstanceSettings(ctx *pulumi.Context,
	name string, args *ComputeInstanceSettingsArgs, opts ...pulumi.ResourceOption) (*ComputeInstanceSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeInstanceSettings
	err = ctx.RegisterPackageResource("google-beta:index/computeInstanceSettings:ComputeInstanceSettings", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInstanceSettings gets an existing ComputeInstanceSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInstanceSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInstanceSettingsState, opts ...pulumi.ResourceOption) (*ComputeInstanceSettings, error) {
	var resource ComputeInstanceSettings
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeInstanceSettings:ComputeInstanceSettings", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInstanceSettings resources.
type computeInstanceSettingsState struct {
	ComputeInstanceSettingsId *string `pulumi:"computeInstanceSettingsId"`
	// The fingerprint used for optimistic locking of this resource. Used internally during updates.
	Fingerprint *string `pulumi:"fingerprint"`
	// The metadata key/value pairs assigned to all the instances in the corresponding scope.
	Metadata *ComputeInstanceSettingsMetadata `pulumi:"metadata"`
	Project  *string                          `pulumi:"project"`
	Timeouts *ComputeInstanceSettingsTimeouts `pulumi:"timeouts"`
	// A reference to the zone where the machine resides.
	Zone *string `pulumi:"zone"`
}

type ComputeInstanceSettingsState struct {
	ComputeInstanceSettingsId pulumi.StringPtrInput
	// The fingerprint used for optimistic locking of this resource. Used internally during updates.
	Fingerprint pulumi.StringPtrInput
	// The metadata key/value pairs assigned to all the instances in the corresponding scope.
	Metadata ComputeInstanceSettingsMetadataPtrInput
	Project  pulumi.StringPtrInput
	Timeouts ComputeInstanceSettingsTimeoutsPtrInput
	// A reference to the zone where the machine resides.
	Zone pulumi.StringPtrInput
}

func (ComputeInstanceSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceSettingsState)(nil)).Elem()
}

type computeInstanceSettingsArgs struct {
	ComputeInstanceSettingsId *string `pulumi:"computeInstanceSettingsId"`
	// The metadata key/value pairs assigned to all the instances in the corresponding scope.
	Metadata *ComputeInstanceSettingsMetadata `pulumi:"metadata"`
	Project  *string                          `pulumi:"project"`
	Timeouts *ComputeInstanceSettingsTimeouts `pulumi:"timeouts"`
	// A reference to the zone where the machine resides.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeInstanceSettings resource.
type ComputeInstanceSettingsArgs struct {
	ComputeInstanceSettingsId pulumi.StringPtrInput
	// The metadata key/value pairs assigned to all the instances in the corresponding scope.
	Metadata ComputeInstanceSettingsMetadataPtrInput
	Project  pulumi.StringPtrInput
	Timeouts ComputeInstanceSettingsTimeoutsPtrInput
	// A reference to the zone where the machine resides.
	Zone pulumi.StringInput
}

func (ComputeInstanceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceSettingsArgs)(nil)).Elem()
}

type ComputeInstanceSettingsInput interface {
	pulumi.Input

	ToComputeInstanceSettingsOutput() ComputeInstanceSettingsOutput
	ToComputeInstanceSettingsOutputWithContext(ctx context.Context) ComputeInstanceSettingsOutput
}

func (*ComputeInstanceSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSettings)(nil)).Elem()
}

func (i *ComputeInstanceSettings) ToComputeInstanceSettingsOutput() ComputeInstanceSettingsOutput {
	return i.ToComputeInstanceSettingsOutputWithContext(context.Background())
}

func (i *ComputeInstanceSettings) ToComputeInstanceSettingsOutputWithContext(ctx context.Context) ComputeInstanceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceSettingsOutput)
}

type ComputeInstanceSettingsOutput struct{ *pulumi.OutputState }

func (ComputeInstanceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceSettings)(nil)).Elem()
}

func (o ComputeInstanceSettingsOutput) ToComputeInstanceSettingsOutput() ComputeInstanceSettingsOutput {
	return o
}

func (o ComputeInstanceSettingsOutput) ToComputeInstanceSettingsOutputWithContext(ctx context.Context) ComputeInstanceSettingsOutput {
	return o
}

func (o ComputeInstanceSettingsOutput) ComputeInstanceSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceSettings) pulumi.StringOutput { return v.ComputeInstanceSettingsId }).(pulumi.StringOutput)
}

// The fingerprint used for optimistic locking of this resource. Used internally during updates.
func (o ComputeInstanceSettingsOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceSettings) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// The metadata key/value pairs assigned to all the instances in the corresponding scope.
func (o ComputeInstanceSettingsOutput) Metadata() ComputeInstanceSettingsMetadataPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSettings) ComputeInstanceSettingsMetadataPtrOutput { return v.Metadata }).(ComputeInstanceSettingsMetadataPtrOutput)
}

func (o ComputeInstanceSettingsOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceSettings) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeInstanceSettingsOutput) Timeouts() ComputeInstanceSettingsTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceSettings) ComputeInstanceSettingsTimeoutsPtrOutput { return v.Timeouts }).(ComputeInstanceSettingsTimeoutsPtrOutput)
}

// A reference to the zone where the machine resides.
func (o ComputeInstanceSettingsOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceSettings) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceSettingsInput)(nil)).Elem(), &ComputeInstanceSettings{})
	pulumi.RegisterOutputType(ComputeInstanceSettingsOutput{})
}
