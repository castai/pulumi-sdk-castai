// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexZoneIamMember struct {
	pulumi.CustomResourceState

	Condition               DataplexZoneIamMemberConditionPtrOutput `pulumi:"condition"`
	DataplexZone            pulumi.StringOutput                     `pulumi:"dataplexZone"`
	DataplexZoneIamMemberId pulumi.StringOutput                     `pulumi:"dataplexZoneIamMemberId"`
	Etag                    pulumi.StringOutput                     `pulumi:"etag"`
	Lake                    pulumi.StringOutput                     `pulumi:"lake"`
	Location                pulumi.StringOutput                     `pulumi:"location"`
	Member                  pulumi.StringOutput                     `pulumi:"member"`
	Project                 pulumi.StringOutput                     `pulumi:"project"`
	Role                    pulumi.StringOutput                     `pulumi:"role"`
}

// NewDataplexZoneIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataplexZoneIamMember(ctx *pulumi.Context,
	name string, args *DataplexZoneIamMemberArgs, opts ...pulumi.ResourceOption) (*DataplexZoneIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataplexZone == nil {
		return nil, errors.New("invalid value for required argument 'DataplexZone'")
	}
	if args.Lake == nil {
		return nil, errors.New("invalid value for required argument 'Lake'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexZoneIamMember
	err = ctx.RegisterPackageResource("google-beta:index/dataplexZoneIamMember:DataplexZoneIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexZoneIamMember gets an existing DataplexZoneIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexZoneIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexZoneIamMemberState, opts ...pulumi.ResourceOption) (*DataplexZoneIamMember, error) {
	var resource DataplexZoneIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexZoneIamMember:DataplexZoneIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexZoneIamMember resources.
type dataplexZoneIamMemberState struct {
	Condition               *DataplexZoneIamMemberCondition `pulumi:"condition"`
	DataplexZone            *string                         `pulumi:"dataplexZone"`
	DataplexZoneIamMemberId *string                         `pulumi:"dataplexZoneIamMemberId"`
	Etag                    *string                         `pulumi:"etag"`
	Lake                    *string                         `pulumi:"lake"`
	Location                *string                         `pulumi:"location"`
	Member                  *string                         `pulumi:"member"`
	Project                 *string                         `pulumi:"project"`
	Role                    *string                         `pulumi:"role"`
}

type DataplexZoneIamMemberState struct {
	Condition               DataplexZoneIamMemberConditionPtrInput
	DataplexZone            pulumi.StringPtrInput
	DataplexZoneIamMemberId pulumi.StringPtrInput
	Etag                    pulumi.StringPtrInput
	Lake                    pulumi.StringPtrInput
	Location                pulumi.StringPtrInput
	Member                  pulumi.StringPtrInput
	Project                 pulumi.StringPtrInput
	Role                    pulumi.StringPtrInput
}

func (DataplexZoneIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexZoneIamMemberState)(nil)).Elem()
}

type dataplexZoneIamMemberArgs struct {
	Condition               *DataplexZoneIamMemberCondition `pulumi:"condition"`
	DataplexZone            string                          `pulumi:"dataplexZone"`
	DataplexZoneIamMemberId *string                         `pulumi:"dataplexZoneIamMemberId"`
	Lake                    string                          `pulumi:"lake"`
	Location                *string                         `pulumi:"location"`
	Member                  string                          `pulumi:"member"`
	Project                 *string                         `pulumi:"project"`
	Role                    string                          `pulumi:"role"`
}

// The set of arguments for constructing a DataplexZoneIamMember resource.
type DataplexZoneIamMemberArgs struct {
	Condition               DataplexZoneIamMemberConditionPtrInput
	DataplexZone            pulumi.StringInput
	DataplexZoneIamMemberId pulumi.StringPtrInput
	Lake                    pulumi.StringInput
	Location                pulumi.StringPtrInput
	Member                  pulumi.StringInput
	Project                 pulumi.StringPtrInput
	Role                    pulumi.StringInput
}

func (DataplexZoneIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexZoneIamMemberArgs)(nil)).Elem()
}

type DataplexZoneIamMemberInput interface {
	pulumi.Input

	ToDataplexZoneIamMemberOutput() DataplexZoneIamMemberOutput
	ToDataplexZoneIamMemberOutputWithContext(ctx context.Context) DataplexZoneIamMemberOutput
}

func (*DataplexZoneIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexZoneIamMember)(nil)).Elem()
}

func (i *DataplexZoneIamMember) ToDataplexZoneIamMemberOutput() DataplexZoneIamMemberOutput {
	return i.ToDataplexZoneIamMemberOutputWithContext(context.Background())
}

func (i *DataplexZoneIamMember) ToDataplexZoneIamMemberOutputWithContext(ctx context.Context) DataplexZoneIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexZoneIamMemberOutput)
}

type DataplexZoneIamMemberOutput struct{ *pulumi.OutputState }

func (DataplexZoneIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexZoneIamMember)(nil)).Elem()
}

func (o DataplexZoneIamMemberOutput) ToDataplexZoneIamMemberOutput() DataplexZoneIamMemberOutput {
	return o
}

func (o DataplexZoneIamMemberOutput) ToDataplexZoneIamMemberOutputWithContext(ctx context.Context) DataplexZoneIamMemberOutput {
	return o
}

func (o DataplexZoneIamMemberOutput) Condition() DataplexZoneIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataplexZoneIamMember) DataplexZoneIamMemberConditionPtrOutput { return v.Condition }).(DataplexZoneIamMemberConditionPtrOutput)
}

func (o DataplexZoneIamMemberOutput) DataplexZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamMember) pulumi.StringOutput { return v.DataplexZone }).(pulumi.StringOutput)
}

func (o DataplexZoneIamMemberOutput) DataplexZoneIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamMember) pulumi.StringOutput { return v.DataplexZoneIamMemberId }).(pulumi.StringOutput)
}

func (o DataplexZoneIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexZoneIamMemberOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamMember) pulumi.StringOutput { return v.Lake }).(pulumi.StringOutput)
}

func (o DataplexZoneIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexZoneIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataplexZoneIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataplexZoneIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexZoneIamMemberInput)(nil)).Elem(), &DataplexZoneIamMember{})
	pulumi.RegisterOutputType(DataplexZoneIamMemberOutput{})
}
