// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirebaseHostingRelease struct {
	pulumi.CustomResourceState

	// The ID of the channel to which the release belongs. If not provided, the release will belong to the default "live"
	// channel
	ChannelId                pulumi.StringPtrOutput `pulumi:"channelId"`
	FirebaseHostingReleaseId pulumi.StringOutput    `pulumi:"firebaseHostingReleaseId"`
	// The deploy description when the release was created. The value can be up to 512 characters.
	Message pulumi.StringPtrOutput `pulumi:"message"`
	// The unique identifier for the release, in either of the following formats: sites/SITE_ID/releases/RELEASE_ID
	// sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique identifier for the Release.
	ReleaseId pulumi.StringOutput `pulumi:"releaseId"`
	// Required. The ID of the site to which the release belongs.
	SiteId   pulumi.StringOutput                     `pulumi:"siteId"`
	Timeouts FirebaseHostingReleaseTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type of the release; indicates what happened to the content of the site. There is no need to specify 'DEPLOY' or
	// 'ROLLBACK' type if a 'version_name' is provided. DEPLOY: A version was uploaded to Firebase Hosting and released. Output
	// only. ROLLBACK: The release points back to a previously deployed version. Output only. SITE_DISABLE: The release
	// prevents the site from serving content. Firebase Hosting acts as if the site never existed Possible values: ["DEPLOY",
	// "ROLLBACK", "SITE_DISABLE"]
	Type pulumi.StringOutput `pulumi:"type"`
	// The unique identifier for a version, in the format: sites/SITE_ID/versions/VERSION_ID. The content of the version
	// specified will be actively displayed on the appropriate URL. The Version must belong to the same site as in the
	// 'site_id'. This parameter must be empty if the 'type' of the release is 'SITE_DISABLE'.
	VersionName pulumi.StringPtrOutput `pulumi:"versionName"`
}

// NewFirebaseHostingRelease registers a new resource with the given unique name, arguments, and options.
func NewFirebaseHostingRelease(ctx *pulumi.Context,
	name string, args *FirebaseHostingReleaseArgs, opts ...pulumi.ResourceOption) (*FirebaseHostingRelease, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SiteId == nil {
		return nil, errors.New("invalid value for required argument 'SiteId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource FirebaseHostingRelease
	err = ctx.RegisterPackageResource("google-beta:index/firebaseHostingRelease:FirebaseHostingRelease", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirebaseHostingRelease gets an existing FirebaseHostingRelease resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirebaseHostingRelease(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirebaseHostingReleaseState, opts ...pulumi.ResourceOption) (*FirebaseHostingRelease, error) {
	var resource FirebaseHostingRelease
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/firebaseHostingRelease:FirebaseHostingRelease", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirebaseHostingRelease resources.
type firebaseHostingReleaseState struct {
	// The ID of the channel to which the release belongs. If not provided, the release will belong to the default "live"
	// channel
	ChannelId                *string `pulumi:"channelId"`
	FirebaseHostingReleaseId *string `pulumi:"firebaseHostingReleaseId"`
	// The deploy description when the release was created. The value can be up to 512 characters.
	Message *string `pulumi:"message"`
	// The unique identifier for the release, in either of the following formats: sites/SITE_ID/releases/RELEASE_ID
	// sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID
	Name *string `pulumi:"name"`
	// The unique identifier for the Release.
	ReleaseId *string `pulumi:"releaseId"`
	// Required. The ID of the site to which the release belongs.
	SiteId   *string                         `pulumi:"siteId"`
	Timeouts *FirebaseHostingReleaseTimeouts `pulumi:"timeouts"`
	// The type of the release; indicates what happened to the content of the site. There is no need to specify 'DEPLOY' or
	// 'ROLLBACK' type if a 'version_name' is provided. DEPLOY: A version was uploaded to Firebase Hosting and released. Output
	// only. ROLLBACK: The release points back to a previously deployed version. Output only. SITE_DISABLE: The release
	// prevents the site from serving content. Firebase Hosting acts as if the site never existed Possible values: ["DEPLOY",
	// "ROLLBACK", "SITE_DISABLE"]
	Type *string `pulumi:"type"`
	// The unique identifier for a version, in the format: sites/SITE_ID/versions/VERSION_ID. The content of the version
	// specified will be actively displayed on the appropriate URL. The Version must belong to the same site as in the
	// 'site_id'. This parameter must be empty if the 'type' of the release is 'SITE_DISABLE'.
	VersionName *string `pulumi:"versionName"`
}

type FirebaseHostingReleaseState struct {
	// The ID of the channel to which the release belongs. If not provided, the release will belong to the default "live"
	// channel
	ChannelId                pulumi.StringPtrInput
	FirebaseHostingReleaseId pulumi.StringPtrInput
	// The deploy description when the release was created. The value can be up to 512 characters.
	Message pulumi.StringPtrInput
	// The unique identifier for the release, in either of the following formats: sites/SITE_ID/releases/RELEASE_ID
	// sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID
	Name pulumi.StringPtrInput
	// The unique identifier for the Release.
	ReleaseId pulumi.StringPtrInput
	// Required. The ID of the site to which the release belongs.
	SiteId   pulumi.StringPtrInput
	Timeouts FirebaseHostingReleaseTimeoutsPtrInput
	// The type of the release; indicates what happened to the content of the site. There is no need to specify 'DEPLOY' or
	// 'ROLLBACK' type if a 'version_name' is provided. DEPLOY: A version was uploaded to Firebase Hosting and released. Output
	// only. ROLLBACK: The release points back to a previously deployed version. Output only. SITE_DISABLE: The release
	// prevents the site from serving content. Firebase Hosting acts as if the site never existed Possible values: ["DEPLOY",
	// "ROLLBACK", "SITE_DISABLE"]
	Type pulumi.StringPtrInput
	// The unique identifier for a version, in the format: sites/SITE_ID/versions/VERSION_ID. The content of the version
	// specified will be actively displayed on the appropriate URL. The Version must belong to the same site as in the
	// 'site_id'. This parameter must be empty if the 'type' of the release is 'SITE_DISABLE'.
	VersionName pulumi.StringPtrInput
}

func (FirebaseHostingReleaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*firebaseHostingReleaseState)(nil)).Elem()
}

type firebaseHostingReleaseArgs struct {
	// The ID of the channel to which the release belongs. If not provided, the release will belong to the default "live"
	// channel
	ChannelId                *string `pulumi:"channelId"`
	FirebaseHostingReleaseId *string `pulumi:"firebaseHostingReleaseId"`
	// The deploy description when the release was created. The value can be up to 512 characters.
	Message *string `pulumi:"message"`
	// Required. The ID of the site to which the release belongs.
	SiteId   string                          `pulumi:"siteId"`
	Timeouts *FirebaseHostingReleaseTimeouts `pulumi:"timeouts"`
	// The type of the release; indicates what happened to the content of the site. There is no need to specify 'DEPLOY' or
	// 'ROLLBACK' type if a 'version_name' is provided. DEPLOY: A version was uploaded to Firebase Hosting and released. Output
	// only. ROLLBACK: The release points back to a previously deployed version. Output only. SITE_DISABLE: The release
	// prevents the site from serving content. Firebase Hosting acts as if the site never existed Possible values: ["DEPLOY",
	// "ROLLBACK", "SITE_DISABLE"]
	Type *string `pulumi:"type"`
	// The unique identifier for a version, in the format: sites/SITE_ID/versions/VERSION_ID. The content of the version
	// specified will be actively displayed on the appropriate URL. The Version must belong to the same site as in the
	// 'site_id'. This parameter must be empty if the 'type' of the release is 'SITE_DISABLE'.
	VersionName *string `pulumi:"versionName"`
}

// The set of arguments for constructing a FirebaseHostingRelease resource.
type FirebaseHostingReleaseArgs struct {
	// The ID of the channel to which the release belongs. If not provided, the release will belong to the default "live"
	// channel
	ChannelId                pulumi.StringPtrInput
	FirebaseHostingReleaseId pulumi.StringPtrInput
	// The deploy description when the release was created. The value can be up to 512 characters.
	Message pulumi.StringPtrInput
	// Required. The ID of the site to which the release belongs.
	SiteId   pulumi.StringInput
	Timeouts FirebaseHostingReleaseTimeoutsPtrInput
	// The type of the release; indicates what happened to the content of the site. There is no need to specify 'DEPLOY' or
	// 'ROLLBACK' type if a 'version_name' is provided. DEPLOY: A version was uploaded to Firebase Hosting and released. Output
	// only. ROLLBACK: The release points back to a previously deployed version. Output only. SITE_DISABLE: The release
	// prevents the site from serving content. Firebase Hosting acts as if the site never existed Possible values: ["DEPLOY",
	// "ROLLBACK", "SITE_DISABLE"]
	Type pulumi.StringPtrInput
	// The unique identifier for a version, in the format: sites/SITE_ID/versions/VERSION_ID. The content of the version
	// specified will be actively displayed on the appropriate URL. The Version must belong to the same site as in the
	// 'site_id'. This parameter must be empty if the 'type' of the release is 'SITE_DISABLE'.
	VersionName pulumi.StringPtrInput
}

func (FirebaseHostingReleaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firebaseHostingReleaseArgs)(nil)).Elem()
}

type FirebaseHostingReleaseInput interface {
	pulumi.Input

	ToFirebaseHostingReleaseOutput() FirebaseHostingReleaseOutput
	ToFirebaseHostingReleaseOutputWithContext(ctx context.Context) FirebaseHostingReleaseOutput
}

func (*FirebaseHostingRelease) ElementType() reflect.Type {
	return reflect.TypeOf((**FirebaseHostingRelease)(nil)).Elem()
}

func (i *FirebaseHostingRelease) ToFirebaseHostingReleaseOutput() FirebaseHostingReleaseOutput {
	return i.ToFirebaseHostingReleaseOutputWithContext(context.Background())
}

func (i *FirebaseHostingRelease) ToFirebaseHostingReleaseOutputWithContext(ctx context.Context) FirebaseHostingReleaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirebaseHostingReleaseOutput)
}

type FirebaseHostingReleaseOutput struct{ *pulumi.OutputState }

func (FirebaseHostingReleaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirebaseHostingRelease)(nil)).Elem()
}

func (o FirebaseHostingReleaseOutput) ToFirebaseHostingReleaseOutput() FirebaseHostingReleaseOutput {
	return o
}

func (o FirebaseHostingReleaseOutput) ToFirebaseHostingReleaseOutputWithContext(ctx context.Context) FirebaseHostingReleaseOutput {
	return o
}

// The ID of the channel to which the release belongs. If not provided, the release will belong to the default "live"
// channel
func (o FirebaseHostingReleaseOutput) ChannelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirebaseHostingRelease) pulumi.StringPtrOutput { return v.ChannelId }).(pulumi.StringPtrOutput)
}

func (o FirebaseHostingReleaseOutput) FirebaseHostingReleaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseHostingRelease) pulumi.StringOutput { return v.FirebaseHostingReleaseId }).(pulumi.StringOutput)
}

// The deploy description when the release was created. The value can be up to 512 characters.
func (o FirebaseHostingReleaseOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirebaseHostingRelease) pulumi.StringPtrOutput { return v.Message }).(pulumi.StringPtrOutput)
}

// The unique identifier for the release, in either of the following formats: sites/SITE_ID/releases/RELEASE_ID
// sites/SITE_ID/channels/CHANNEL_ID/releases/RELEASE_ID
func (o FirebaseHostingReleaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseHostingRelease) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The unique identifier for the Release.
func (o FirebaseHostingReleaseOutput) ReleaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseHostingRelease) pulumi.StringOutput { return v.ReleaseId }).(pulumi.StringOutput)
}

// Required. The ID of the site to which the release belongs.
func (o FirebaseHostingReleaseOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseHostingRelease) pulumi.StringOutput { return v.SiteId }).(pulumi.StringOutput)
}

func (o FirebaseHostingReleaseOutput) Timeouts() FirebaseHostingReleaseTimeoutsPtrOutput {
	return o.ApplyT(func(v *FirebaseHostingRelease) FirebaseHostingReleaseTimeoutsPtrOutput { return v.Timeouts }).(FirebaseHostingReleaseTimeoutsPtrOutput)
}

// The type of the release; indicates what happened to the content of the site. There is no need to specify 'DEPLOY' or
// 'ROLLBACK' type if a 'version_name' is provided. DEPLOY: A version was uploaded to Firebase Hosting and released. Output
// only. ROLLBACK: The release points back to a previously deployed version. Output only. SITE_DISABLE: The release
// prevents the site from serving content. Firebase Hosting acts as if the site never existed Possible values: ["DEPLOY",
// "ROLLBACK", "SITE_DISABLE"]
func (o FirebaseHostingReleaseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseHostingRelease) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The unique identifier for a version, in the format: sites/SITE_ID/versions/VERSION_ID. The content of the version
// specified will be actively displayed on the appropriate URL. The Version must belong to the same site as in the
// 'site_id'. This parameter must be empty if the 'type' of the release is 'SITE_DISABLE'.
func (o FirebaseHostingReleaseOutput) VersionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirebaseHostingRelease) pulumi.StringPtrOutput { return v.VersionName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirebaseHostingReleaseInput)(nil)).Elem(), &FirebaseHostingRelease{})
	pulumi.RegisterOutputType(FirebaseHostingReleaseOutput{})
}
