// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ArtifactRegistryRepository struct {
	pulumi.CustomResourceState

	ArtifactRegistryRepositoryId pulumi.StringOutput `pulumi:"artifactRegistryRepositoryId"`
	// Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically
	// deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be
	// under 128 characters in length.
	CleanupPolicies ArtifactRegistryRepositoryCleanupPolicyArrayOutput `pulumi:"cleanupPolicies"`
	// If true, the cleanup pipeline is prevented from deleting versions in this repository.
	CleanupPolicyDryRun pulumi.BoolPtrOutput `pulumi:"cleanupPolicyDryRun"`
	// The time when the repository was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The user-provided description of the repository.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Docker repository config contains repository level configuration for the repositories of docker type.
	DockerConfig    ArtifactRegistryRepositoryDockerConfigPtrOutput `pulumi:"dockerConfig"`
	EffectiveLabels pulumi.StringMapOutput                          `pulumi:"effectiveLabels"`
	// The format of packages that are stored in the repository. Supported formats can be found
	// [here](https://cloud.google.com/artifact-registry/docs/supported-formats). You can only create alpha formats if you are
	// a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
	Format pulumi.StringOutput `pulumi:"format"`
	// The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the
	// Repository. Has the form: 'projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key'. This value may not
	// be changed after the Repository has been created.
	KmsKeyName pulumi.StringPtrOutput `pulumi:"kmsKeyName"`
	// Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than
	// 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters,
	// underscores, and dashes. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels   pulumi.StringMapOutput `pulumi:"labels"`
	Location pulumi.StringOutput    `pulumi:"location"`
	// MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of
	// the maven format type.
	MavenConfig ArtifactRegistryRepositoryMavenConfigPtrOutput `pulumi:"mavenConfig"`
	// The mode configures the repository to serve artifacts from different sources. Default value: "STANDARD_REPOSITORY"
	// Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"]
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// The name of the repository, for example: "repo1"
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Configuration specific for a Remote Repository.
	RemoteRepositoryConfig ArtifactRegistryRepositoryRemoteRepositoryConfigPtrOutput `pulumi:"remoteRepositoryConfig"`
	// The last part of the repository name, for example: "repo1"
	RepositoryId pulumi.StringOutput `pulumi:"repositoryId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                      `pulumi:"terraformLabels"`
	Timeouts        ArtifactRegistryRepositoryTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time when the repository was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Configuration specific for a Virtual Repository.
	VirtualRepositoryConfig ArtifactRegistryRepositoryVirtualRepositoryConfigPtrOutput `pulumi:"virtualRepositoryConfig"`
	// Configuration for vulnerability scanning of artifacts stored in this repository.
	VulnerabilityScanningConfig ArtifactRegistryRepositoryVulnerabilityScanningConfigPtrOutput `pulumi:"vulnerabilityScanningConfig"`
}

// NewArtifactRegistryRepository registers a new resource with the given unique name, arguments, and options.
func NewArtifactRegistryRepository(ctx *pulumi.Context,
	name string, args *ArtifactRegistryRepositoryArgs, opts ...pulumi.ResourceOption) (*ArtifactRegistryRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Format == nil {
		return nil, errors.New("invalid value for required argument 'Format'")
	}
	if args.RepositoryId == nil {
		return nil, errors.New("invalid value for required argument 'RepositoryId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ArtifactRegistryRepository
	err = ctx.RegisterPackageResource("google-beta:index/artifactRegistryRepository:ArtifactRegistryRepository", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetArtifactRegistryRepository gets an existing ArtifactRegistryRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetArtifactRegistryRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ArtifactRegistryRepositoryState, opts ...pulumi.ResourceOption) (*ArtifactRegistryRepository, error) {
	var resource ArtifactRegistryRepository
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/artifactRegistryRepository:ArtifactRegistryRepository", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ArtifactRegistryRepository resources.
type artifactRegistryRepositoryState struct {
	ArtifactRegistryRepositoryId *string `pulumi:"artifactRegistryRepositoryId"`
	// Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically
	// deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be
	// under 128 characters in length.
	CleanupPolicies []ArtifactRegistryRepositoryCleanupPolicy `pulumi:"cleanupPolicies"`
	// If true, the cleanup pipeline is prevented from deleting versions in this repository.
	CleanupPolicyDryRun *bool `pulumi:"cleanupPolicyDryRun"`
	// The time when the repository was created.
	CreateTime *string `pulumi:"createTime"`
	// The user-provided description of the repository.
	Description *string `pulumi:"description"`
	// Docker repository config contains repository level configuration for the repositories of docker type.
	DockerConfig    *ArtifactRegistryRepositoryDockerConfig `pulumi:"dockerConfig"`
	EffectiveLabels map[string]string                       `pulumi:"effectiveLabels"`
	// The format of packages that are stored in the repository. Supported formats can be found
	// [here](https://cloud.google.com/artifact-registry/docs/supported-formats). You can only create alpha formats if you are
	// a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
	Format *string `pulumi:"format"`
	// The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the
	// Repository. Has the form: 'projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key'. This value may not
	// be changed after the Repository has been created.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than
	// 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters,
	// underscores, and dashes. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of
	// the maven format type.
	MavenConfig *ArtifactRegistryRepositoryMavenConfig `pulumi:"mavenConfig"`
	// The mode configures the repository to serve artifacts from different sources. Default value: "STANDARD_REPOSITORY"
	// Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"]
	Mode *string `pulumi:"mode"`
	// The name of the repository, for example: "repo1"
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Configuration specific for a Remote Repository.
	RemoteRepositoryConfig *ArtifactRegistryRepositoryRemoteRepositoryConfig `pulumi:"remoteRepositoryConfig"`
	// The last part of the repository name, for example: "repo1"
	RepositoryId *string `pulumi:"repositoryId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                   `pulumi:"terraformLabels"`
	Timeouts        *ArtifactRegistryRepositoryTimeouts `pulumi:"timeouts"`
	// The time when the repository was last updated.
	UpdateTime *string `pulumi:"updateTime"`
	// Configuration specific for a Virtual Repository.
	VirtualRepositoryConfig *ArtifactRegistryRepositoryVirtualRepositoryConfig `pulumi:"virtualRepositoryConfig"`
	// Configuration for vulnerability scanning of artifacts stored in this repository.
	VulnerabilityScanningConfig *ArtifactRegistryRepositoryVulnerabilityScanningConfig `pulumi:"vulnerabilityScanningConfig"`
}

type ArtifactRegistryRepositoryState struct {
	ArtifactRegistryRepositoryId pulumi.StringPtrInput
	// Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically
	// deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be
	// under 128 characters in length.
	CleanupPolicies ArtifactRegistryRepositoryCleanupPolicyArrayInput
	// If true, the cleanup pipeline is prevented from deleting versions in this repository.
	CleanupPolicyDryRun pulumi.BoolPtrInput
	// The time when the repository was created.
	CreateTime pulumi.StringPtrInput
	// The user-provided description of the repository.
	Description pulumi.StringPtrInput
	// Docker repository config contains repository level configuration for the repositories of docker type.
	DockerConfig    ArtifactRegistryRepositoryDockerConfigPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The format of packages that are stored in the repository. Supported formats can be found
	// [here](https://cloud.google.com/artifact-registry/docs/supported-formats). You can only create alpha formats if you are
	// a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
	Format pulumi.StringPtrInput
	// The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the
	// Repository. Has the form: 'projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key'. This value may not
	// be changed after the Repository has been created.
	KmsKeyName pulumi.StringPtrInput
	// Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than
	// 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters,
	// underscores, and dashes. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of
	// the maven format type.
	MavenConfig ArtifactRegistryRepositoryMavenConfigPtrInput
	// The mode configures the repository to serve artifacts from different sources. Default value: "STANDARD_REPOSITORY"
	// Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"]
	Mode pulumi.StringPtrInput
	// The name of the repository, for example: "repo1"
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Configuration specific for a Remote Repository.
	RemoteRepositoryConfig ArtifactRegistryRepositoryRemoteRepositoryConfigPtrInput
	// The last part of the repository name, for example: "repo1"
	RepositoryId pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ArtifactRegistryRepositoryTimeoutsPtrInput
	// The time when the repository was last updated.
	UpdateTime pulumi.StringPtrInput
	// Configuration specific for a Virtual Repository.
	VirtualRepositoryConfig ArtifactRegistryRepositoryVirtualRepositoryConfigPtrInput
	// Configuration for vulnerability scanning of artifacts stored in this repository.
	VulnerabilityScanningConfig ArtifactRegistryRepositoryVulnerabilityScanningConfigPtrInput
}

func (ArtifactRegistryRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactRegistryRepositoryState)(nil)).Elem()
}

type artifactRegistryRepositoryArgs struct {
	ArtifactRegistryRepositoryId *string `pulumi:"artifactRegistryRepositoryId"`
	// Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically
	// deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be
	// under 128 characters in length.
	CleanupPolicies []ArtifactRegistryRepositoryCleanupPolicy `pulumi:"cleanupPolicies"`
	// If true, the cleanup pipeline is prevented from deleting versions in this repository.
	CleanupPolicyDryRun *bool `pulumi:"cleanupPolicyDryRun"`
	// The user-provided description of the repository.
	Description *string `pulumi:"description"`
	// Docker repository config contains repository level configuration for the repositories of docker type.
	DockerConfig *ArtifactRegistryRepositoryDockerConfig `pulumi:"dockerConfig"`
	// The format of packages that are stored in the repository. Supported formats can be found
	// [here](https://cloud.google.com/artifact-registry/docs/supported-formats). You can only create alpha formats if you are
	// a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
	Format string `pulumi:"format"`
	// The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the
	// Repository. Has the form: 'projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key'. This value may not
	// be changed after the Repository has been created.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than
	// 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters,
	// underscores, and dashes. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels   map[string]string `pulumi:"labels"`
	Location *string           `pulumi:"location"`
	// MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of
	// the maven format type.
	MavenConfig *ArtifactRegistryRepositoryMavenConfig `pulumi:"mavenConfig"`
	// The mode configures the repository to serve artifacts from different sources. Default value: "STANDARD_REPOSITORY"
	// Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"]
	Mode    *string `pulumi:"mode"`
	Project *string `pulumi:"project"`
	// Configuration specific for a Remote Repository.
	RemoteRepositoryConfig *ArtifactRegistryRepositoryRemoteRepositoryConfig `pulumi:"remoteRepositoryConfig"`
	// The last part of the repository name, for example: "repo1"
	RepositoryId string                              `pulumi:"repositoryId"`
	Timeouts     *ArtifactRegistryRepositoryTimeouts `pulumi:"timeouts"`
	// Configuration specific for a Virtual Repository.
	VirtualRepositoryConfig *ArtifactRegistryRepositoryVirtualRepositoryConfig `pulumi:"virtualRepositoryConfig"`
	// Configuration for vulnerability scanning of artifacts stored in this repository.
	VulnerabilityScanningConfig *ArtifactRegistryRepositoryVulnerabilityScanningConfig `pulumi:"vulnerabilityScanningConfig"`
}

// The set of arguments for constructing a ArtifactRegistryRepository resource.
type ArtifactRegistryRepositoryArgs struct {
	ArtifactRegistryRepositoryId pulumi.StringPtrInput
	// Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically
	// deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be
	// under 128 characters in length.
	CleanupPolicies ArtifactRegistryRepositoryCleanupPolicyArrayInput
	// If true, the cleanup pipeline is prevented from deleting versions in this repository.
	CleanupPolicyDryRun pulumi.BoolPtrInput
	// The user-provided description of the repository.
	Description pulumi.StringPtrInput
	// Docker repository config contains repository level configuration for the repositories of docker type.
	DockerConfig ArtifactRegistryRepositoryDockerConfigPtrInput
	// The format of packages that are stored in the repository. Supported formats can be found
	// [here](https://cloud.google.com/artifact-registry/docs/supported-formats). You can only create alpha formats if you are
	// a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
	Format pulumi.StringInput
	// The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the
	// Repository. Has the form: 'projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key'. This value may not
	// be changed after the Repository has been created.
	KmsKeyName pulumi.StringPtrInput
	// Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than
	// 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters,
	// underscores, and dashes. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels   pulumi.StringMapInput
	Location pulumi.StringPtrInput
	// MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of
	// the maven format type.
	MavenConfig ArtifactRegistryRepositoryMavenConfigPtrInput
	// The mode configures the repository to serve artifacts from different sources. Default value: "STANDARD_REPOSITORY"
	// Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"]
	Mode    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Configuration specific for a Remote Repository.
	RemoteRepositoryConfig ArtifactRegistryRepositoryRemoteRepositoryConfigPtrInput
	// The last part of the repository name, for example: "repo1"
	RepositoryId pulumi.StringInput
	Timeouts     ArtifactRegistryRepositoryTimeoutsPtrInput
	// Configuration specific for a Virtual Repository.
	VirtualRepositoryConfig ArtifactRegistryRepositoryVirtualRepositoryConfigPtrInput
	// Configuration for vulnerability scanning of artifacts stored in this repository.
	VulnerabilityScanningConfig ArtifactRegistryRepositoryVulnerabilityScanningConfigPtrInput
}

func (ArtifactRegistryRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*artifactRegistryRepositoryArgs)(nil)).Elem()
}

type ArtifactRegistryRepositoryInput interface {
	pulumi.Input

	ToArtifactRegistryRepositoryOutput() ArtifactRegistryRepositoryOutput
	ToArtifactRegistryRepositoryOutputWithContext(ctx context.Context) ArtifactRegistryRepositoryOutput
}

func (*ArtifactRegistryRepository) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactRegistryRepository)(nil)).Elem()
}

func (i *ArtifactRegistryRepository) ToArtifactRegistryRepositoryOutput() ArtifactRegistryRepositoryOutput {
	return i.ToArtifactRegistryRepositoryOutputWithContext(context.Background())
}

func (i *ArtifactRegistryRepository) ToArtifactRegistryRepositoryOutputWithContext(ctx context.Context) ArtifactRegistryRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArtifactRegistryRepositoryOutput)
}

type ArtifactRegistryRepositoryOutput struct{ *pulumi.OutputState }

func (ArtifactRegistryRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArtifactRegistryRepository)(nil)).Elem()
}

func (o ArtifactRegistryRepositoryOutput) ToArtifactRegistryRepositoryOutput() ArtifactRegistryRepositoryOutput {
	return o
}

func (o ArtifactRegistryRepositoryOutput) ToArtifactRegistryRepositoryOutputWithContext(ctx context.Context) ArtifactRegistryRepositoryOutput {
	return o
}

func (o ArtifactRegistryRepositoryOutput) ArtifactRegistryRepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringOutput { return v.ArtifactRegistryRepositoryId }).(pulumi.StringOutput)
}

// Cleanup policies for this repository. Cleanup policies indicate when certain package versions can be automatically
// deleted. Map keys are policy IDs supplied by users during policy creation. They must unique within a repository and be
// under 128 characters in length.
func (o ArtifactRegistryRepositoryOutput) CleanupPolicies() ArtifactRegistryRepositoryCleanupPolicyArrayOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) ArtifactRegistryRepositoryCleanupPolicyArrayOutput {
		return v.CleanupPolicies
	}).(ArtifactRegistryRepositoryCleanupPolicyArrayOutput)
}

// If true, the cleanup pipeline is prevented from deleting versions in this repository.
func (o ArtifactRegistryRepositoryOutput) CleanupPolicyDryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.BoolPtrOutput { return v.CleanupPolicyDryRun }).(pulumi.BoolPtrOutput)
}

// The time when the repository was created.
func (o ArtifactRegistryRepositoryOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The user-provided description of the repository.
func (o ArtifactRegistryRepositoryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Docker repository config contains repository level configuration for the repositories of docker type.
func (o ArtifactRegistryRepositoryOutput) DockerConfig() ArtifactRegistryRepositoryDockerConfigPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) ArtifactRegistryRepositoryDockerConfigPtrOutput {
		return v.DockerConfig
	}).(ArtifactRegistryRepositoryDockerConfigPtrOutput)
}

func (o ArtifactRegistryRepositoryOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The format of packages that are stored in the repository. Supported formats can be found
// [here](https://cloud.google.com/artifact-registry/docs/supported-formats). You can only create alpha formats if you are
// a member of the [alpha user group](https://cloud.google.com/artifact-registry/docs/supported-formats#alpha-access).
func (o ArtifactRegistryRepositoryOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

// The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the
// Repository. Has the form: 'projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key'. This value may not
// be changed after the Repository has been created.
func (o ArtifactRegistryRepositoryOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringPtrOutput { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than
// 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters,
// underscores, and dashes. **Note**: This field is non-authoritative, and will only manage the labels present in your
// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o ArtifactRegistryRepositoryOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ArtifactRegistryRepositoryOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// MavenRepositoryConfig is maven related repository details. Provides additional configuration details for repositories of
// the maven format type.
func (o ArtifactRegistryRepositoryOutput) MavenConfig() ArtifactRegistryRepositoryMavenConfigPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) ArtifactRegistryRepositoryMavenConfigPtrOutput {
		return v.MavenConfig
	}).(ArtifactRegistryRepositoryMavenConfigPtrOutput)
}

// The mode configures the repository to serve artifacts from different sources. Default value: "STANDARD_REPOSITORY"
// Possible values: ["STANDARD_REPOSITORY", "VIRTUAL_REPOSITORY", "REMOTE_REPOSITORY"]
func (o ArtifactRegistryRepositoryOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringPtrOutput { return v.Mode }).(pulumi.StringPtrOutput)
}

// The name of the repository, for example: "repo1"
func (o ArtifactRegistryRepositoryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ArtifactRegistryRepositoryOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Configuration specific for a Remote Repository.
func (o ArtifactRegistryRepositoryOutput) RemoteRepositoryConfig() ArtifactRegistryRepositoryRemoteRepositoryConfigPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) ArtifactRegistryRepositoryRemoteRepositoryConfigPtrOutput {
		return v.RemoteRepositoryConfig
	}).(ArtifactRegistryRepositoryRemoteRepositoryConfigPtrOutput)
}

// The last part of the repository name, for example: "repo1"
func (o ArtifactRegistryRepositoryOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringOutput { return v.RepositoryId }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ArtifactRegistryRepositoryOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ArtifactRegistryRepositoryOutput) Timeouts() ArtifactRegistryRepositoryTimeoutsPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) ArtifactRegistryRepositoryTimeoutsPtrOutput { return v.Timeouts }).(ArtifactRegistryRepositoryTimeoutsPtrOutput)
}

// The time when the repository was last updated.
func (o ArtifactRegistryRepositoryOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Configuration specific for a Virtual Repository.
func (o ArtifactRegistryRepositoryOutput) VirtualRepositoryConfig() ArtifactRegistryRepositoryVirtualRepositoryConfigPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) ArtifactRegistryRepositoryVirtualRepositoryConfigPtrOutput {
		return v.VirtualRepositoryConfig
	}).(ArtifactRegistryRepositoryVirtualRepositoryConfigPtrOutput)
}

// Configuration for vulnerability scanning of artifacts stored in this repository.
func (o ArtifactRegistryRepositoryOutput) VulnerabilityScanningConfig() ArtifactRegistryRepositoryVulnerabilityScanningConfigPtrOutput {
	return o.ApplyT(func(v *ArtifactRegistryRepository) ArtifactRegistryRepositoryVulnerabilityScanningConfigPtrOutput {
		return v.VulnerabilityScanningConfig
	}).(ArtifactRegistryRepositoryVulnerabilityScanningConfigPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ArtifactRegistryRepositoryInput)(nil)).Elem(), &ArtifactRegistryRepository{})
	pulumi.RegisterOutputType(ArtifactRegistryRepositoryOutput{})
}
