// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputePublicAdvertisedPrefix struct {
	pulumi.CustomResourceState

	ComputePublicAdvertisedPrefixId pulumi.StringOutput `pulumi:"computePublicAdvertisedPrefixId"`
	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The IPv4 address to be used for reverse DNS verification.
	DnsVerificationIp pulumi.StringOutput `pulumi:"dnsVerificationIp"`
	// The address range, in CIDR format, represented by this public advertised prefix.
	IpCidrRange pulumi.StringOutput `pulumi:"ipCidrRange"`
	// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
	// 1-63 characters long and match the regular expression 'a-z?' which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
	// dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies how child public delegated prefix will be scoped. pdpScope must be one of: GLOBAL, REGIONAL * REGIONAL: The
	// public delegated prefix is regional only. The provisioning will take a few minutes. * GLOBAL: The public delegated
	// prefix is global only. The provisioning will take ~4 weeks. Possible values: ["GLOBAL", "REGIONAL"]
	PdpScope pulumi.StringPtrOutput `pulumi:"pdpScope"`
	Project  pulumi.StringOutput    `pulumi:"project"`
	SelfLink pulumi.StringOutput    `pulumi:"selfLink"`
	// Output Only. The shared secret to be used for reverse DNS verification.
	SharedSecret pulumi.StringOutput                            `pulumi:"sharedSecret"`
	Timeouts     ComputePublicAdvertisedPrefixTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputePublicAdvertisedPrefix registers a new resource with the given unique name, arguments, and options.
func NewComputePublicAdvertisedPrefix(ctx *pulumi.Context,
	name string, args *ComputePublicAdvertisedPrefixArgs, opts ...pulumi.ResourceOption) (*ComputePublicAdvertisedPrefix, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DnsVerificationIp == nil {
		return nil, errors.New("invalid value for required argument 'DnsVerificationIp'")
	}
	if args.IpCidrRange == nil {
		return nil, errors.New("invalid value for required argument 'IpCidrRange'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputePublicAdvertisedPrefix
	err = ctx.RegisterPackageResource("google-beta:index/computePublicAdvertisedPrefix:ComputePublicAdvertisedPrefix", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputePublicAdvertisedPrefix gets an existing ComputePublicAdvertisedPrefix resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputePublicAdvertisedPrefix(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputePublicAdvertisedPrefixState, opts ...pulumi.ResourceOption) (*ComputePublicAdvertisedPrefix, error) {
	var resource ComputePublicAdvertisedPrefix
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computePublicAdvertisedPrefix:ComputePublicAdvertisedPrefix", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputePublicAdvertisedPrefix resources.
type computePublicAdvertisedPrefixState struct {
	ComputePublicAdvertisedPrefixId *string `pulumi:"computePublicAdvertisedPrefixId"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// The IPv4 address to be used for reverse DNS verification.
	DnsVerificationIp *string `pulumi:"dnsVerificationIp"`
	// The address range, in CIDR format, represented by this public advertised prefix.
	IpCidrRange *string `pulumi:"ipCidrRange"`
	// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
	// 1-63 characters long and match the regular expression 'a-z?' which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
	// dash.
	Name *string `pulumi:"name"`
	// Specifies how child public delegated prefix will be scoped. pdpScope must be one of: GLOBAL, REGIONAL * REGIONAL: The
	// public delegated prefix is regional only. The provisioning will take a few minutes. * GLOBAL: The public delegated
	// prefix is global only. The provisioning will take ~4 weeks. Possible values: ["GLOBAL", "REGIONAL"]
	PdpScope *string `pulumi:"pdpScope"`
	Project  *string `pulumi:"project"`
	SelfLink *string `pulumi:"selfLink"`
	// Output Only. The shared secret to be used for reverse DNS verification.
	SharedSecret *string                                `pulumi:"sharedSecret"`
	Timeouts     *ComputePublicAdvertisedPrefixTimeouts `pulumi:"timeouts"`
}

type ComputePublicAdvertisedPrefixState struct {
	ComputePublicAdvertisedPrefixId pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// The IPv4 address to be used for reverse DNS verification.
	DnsVerificationIp pulumi.StringPtrInput
	// The address range, in CIDR format, represented by this public advertised prefix.
	IpCidrRange pulumi.StringPtrInput
	// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
	// 1-63 characters long and match the regular expression 'a-z?' which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
	// dash.
	Name pulumi.StringPtrInput
	// Specifies how child public delegated prefix will be scoped. pdpScope must be one of: GLOBAL, REGIONAL * REGIONAL: The
	// public delegated prefix is regional only. The provisioning will take a few minutes. * GLOBAL: The public delegated
	// prefix is global only. The provisioning will take ~4 weeks. Possible values: ["GLOBAL", "REGIONAL"]
	PdpScope pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	SelfLink pulumi.StringPtrInput
	// Output Only. The shared secret to be used for reverse DNS verification.
	SharedSecret pulumi.StringPtrInput
	Timeouts     ComputePublicAdvertisedPrefixTimeoutsPtrInput
}

func (ComputePublicAdvertisedPrefixState) ElementType() reflect.Type {
	return reflect.TypeOf((*computePublicAdvertisedPrefixState)(nil)).Elem()
}

type computePublicAdvertisedPrefixArgs struct {
	ComputePublicAdvertisedPrefixId *string `pulumi:"computePublicAdvertisedPrefixId"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// The IPv4 address to be used for reverse DNS verification.
	DnsVerificationIp string `pulumi:"dnsVerificationIp"`
	// The address range, in CIDR format, represented by this public advertised prefix.
	IpCidrRange string `pulumi:"ipCidrRange"`
	// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
	// 1-63 characters long and match the regular expression 'a-z?' which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
	// dash.
	Name *string `pulumi:"name"`
	// Specifies how child public delegated prefix will be scoped. pdpScope must be one of: GLOBAL, REGIONAL * REGIONAL: The
	// public delegated prefix is regional only. The provisioning will take a few minutes. * GLOBAL: The public delegated
	// prefix is global only. The provisioning will take ~4 weeks. Possible values: ["GLOBAL", "REGIONAL"]
	PdpScope *string                                `pulumi:"pdpScope"`
	Project  *string                                `pulumi:"project"`
	Timeouts *ComputePublicAdvertisedPrefixTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputePublicAdvertisedPrefix resource.
type ComputePublicAdvertisedPrefixArgs struct {
	ComputePublicAdvertisedPrefixId pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// The IPv4 address to be used for reverse DNS verification.
	DnsVerificationIp pulumi.StringInput
	// The address range, in CIDR format, represented by this public advertised prefix.
	IpCidrRange pulumi.StringInput
	// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
	// 1-63 characters long and match the regular expression 'a-z?' which means the first character must be a lowercase letter,
	// and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
	// dash.
	Name pulumi.StringPtrInput
	// Specifies how child public delegated prefix will be scoped. pdpScope must be one of: GLOBAL, REGIONAL * REGIONAL: The
	// public delegated prefix is regional only. The provisioning will take a few minutes. * GLOBAL: The public delegated
	// prefix is global only. The provisioning will take ~4 weeks. Possible values: ["GLOBAL", "REGIONAL"]
	PdpScope pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts ComputePublicAdvertisedPrefixTimeoutsPtrInput
}

func (ComputePublicAdvertisedPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computePublicAdvertisedPrefixArgs)(nil)).Elem()
}

type ComputePublicAdvertisedPrefixInput interface {
	pulumi.Input

	ToComputePublicAdvertisedPrefixOutput() ComputePublicAdvertisedPrefixOutput
	ToComputePublicAdvertisedPrefixOutputWithContext(ctx context.Context) ComputePublicAdvertisedPrefixOutput
}

func (*ComputePublicAdvertisedPrefix) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputePublicAdvertisedPrefix)(nil)).Elem()
}

func (i *ComputePublicAdvertisedPrefix) ToComputePublicAdvertisedPrefixOutput() ComputePublicAdvertisedPrefixOutput {
	return i.ToComputePublicAdvertisedPrefixOutputWithContext(context.Background())
}

func (i *ComputePublicAdvertisedPrefix) ToComputePublicAdvertisedPrefixOutputWithContext(ctx context.Context) ComputePublicAdvertisedPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputePublicAdvertisedPrefixOutput)
}

type ComputePublicAdvertisedPrefixOutput struct{ *pulumi.OutputState }

func (ComputePublicAdvertisedPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputePublicAdvertisedPrefix)(nil)).Elem()
}

func (o ComputePublicAdvertisedPrefixOutput) ToComputePublicAdvertisedPrefixOutput() ComputePublicAdvertisedPrefixOutput {
	return o
}

func (o ComputePublicAdvertisedPrefixOutput) ToComputePublicAdvertisedPrefixOutputWithContext(ctx context.Context) ComputePublicAdvertisedPrefixOutput {
	return o
}

func (o ComputePublicAdvertisedPrefixOutput) ComputePublicAdvertisedPrefixId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) pulumi.StringOutput { return v.ComputePublicAdvertisedPrefixId }).(pulumi.StringOutput)
}

// An optional description of this resource.
func (o ComputePublicAdvertisedPrefixOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The IPv4 address to be used for reverse DNS verification.
func (o ComputePublicAdvertisedPrefixOutput) DnsVerificationIp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) pulumi.StringOutput { return v.DnsVerificationIp }).(pulumi.StringOutput)
}

// The address range, in CIDR format, represented by this public advertised prefix.
func (o ComputePublicAdvertisedPrefixOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) pulumi.StringOutput { return v.IpCidrRange }).(pulumi.StringOutput)
}

// Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be
// 1-63 characters long and match the regular expression 'a-z?' which means the first character must be a lowercase letter,
// and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a
// dash.
func (o ComputePublicAdvertisedPrefixOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies how child public delegated prefix will be scoped. pdpScope must be one of: GLOBAL, REGIONAL * REGIONAL: The
// public delegated prefix is regional only. The provisioning will take a few minutes. * GLOBAL: The public delegated
// prefix is global only. The provisioning will take ~4 weeks. Possible values: ["GLOBAL", "REGIONAL"]
func (o ComputePublicAdvertisedPrefixOutput) PdpScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) pulumi.StringPtrOutput { return v.PdpScope }).(pulumi.StringPtrOutput)
}

func (o ComputePublicAdvertisedPrefixOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputePublicAdvertisedPrefixOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Output Only. The shared secret to be used for reverse DNS verification.
func (o ComputePublicAdvertisedPrefixOutput) SharedSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) pulumi.StringOutput { return v.SharedSecret }).(pulumi.StringOutput)
}

func (o ComputePublicAdvertisedPrefixOutput) Timeouts() ComputePublicAdvertisedPrefixTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputePublicAdvertisedPrefix) ComputePublicAdvertisedPrefixTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputePublicAdvertisedPrefixTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputePublicAdvertisedPrefixInput)(nil)).Elem(), &ComputePublicAdvertisedPrefix{})
	pulumi.RegisterOutputType(ComputePublicAdvertisedPrefixOutput{})
}
