// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataprocClusterIamMember struct {
	pulumi.CustomResourceState

	Cluster                    pulumi.StringOutput                        `pulumi:"cluster"`
	Condition                  DataprocClusterIamMemberConditionPtrOutput `pulumi:"condition"`
	DataprocClusterIamMemberId pulumi.StringOutput                        `pulumi:"dataprocClusterIamMemberId"`
	Etag                       pulumi.StringOutput                        `pulumi:"etag"`
	Member                     pulumi.StringOutput                        `pulumi:"member"`
	Project                    pulumi.StringOutput                        `pulumi:"project"`
	Region                     pulumi.StringOutput                        `pulumi:"region"`
	Role                       pulumi.StringOutput                        `pulumi:"role"`
}

// NewDataprocClusterIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataprocClusterIamMember(ctx *pulumi.Context,
	name string, args *DataprocClusterIamMemberArgs, opts ...pulumi.ResourceOption) (*DataprocClusterIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cluster == nil {
		return nil, errors.New("invalid value for required argument 'Cluster'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataprocClusterIamMember
	err = ctx.RegisterPackageResource("google-beta:index/dataprocClusterIamMember:DataprocClusterIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocClusterIamMember gets an existing DataprocClusterIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocClusterIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocClusterIamMemberState, opts ...pulumi.ResourceOption) (*DataprocClusterIamMember, error) {
	var resource DataprocClusterIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataprocClusterIamMember:DataprocClusterIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocClusterIamMember resources.
type dataprocClusterIamMemberState struct {
	Cluster                    *string                            `pulumi:"cluster"`
	Condition                  *DataprocClusterIamMemberCondition `pulumi:"condition"`
	DataprocClusterIamMemberId *string                            `pulumi:"dataprocClusterIamMemberId"`
	Etag                       *string                            `pulumi:"etag"`
	Member                     *string                            `pulumi:"member"`
	Project                    *string                            `pulumi:"project"`
	Region                     *string                            `pulumi:"region"`
	Role                       *string                            `pulumi:"role"`
}

type DataprocClusterIamMemberState struct {
	Cluster                    pulumi.StringPtrInput
	Condition                  DataprocClusterIamMemberConditionPtrInput
	DataprocClusterIamMemberId pulumi.StringPtrInput
	Etag                       pulumi.StringPtrInput
	Member                     pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	Region                     pulumi.StringPtrInput
	Role                       pulumi.StringPtrInput
}

func (DataprocClusterIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterIamMemberState)(nil)).Elem()
}

type dataprocClusterIamMemberArgs struct {
	Cluster                    string                             `pulumi:"cluster"`
	Condition                  *DataprocClusterIamMemberCondition `pulumi:"condition"`
	DataprocClusterIamMemberId *string                            `pulumi:"dataprocClusterIamMemberId"`
	Member                     string                             `pulumi:"member"`
	Project                    *string                            `pulumi:"project"`
	Region                     *string                            `pulumi:"region"`
	Role                       string                             `pulumi:"role"`
}

// The set of arguments for constructing a DataprocClusterIamMember resource.
type DataprocClusterIamMemberArgs struct {
	Cluster                    pulumi.StringInput
	Condition                  DataprocClusterIamMemberConditionPtrInput
	DataprocClusterIamMemberId pulumi.StringPtrInput
	Member                     pulumi.StringInput
	Project                    pulumi.StringPtrInput
	Region                     pulumi.StringPtrInput
	Role                       pulumi.StringInput
}

func (DataprocClusterIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterIamMemberArgs)(nil)).Elem()
}

type DataprocClusterIamMemberInput interface {
	pulumi.Input

	ToDataprocClusterIamMemberOutput() DataprocClusterIamMemberOutput
	ToDataprocClusterIamMemberOutputWithContext(ctx context.Context) DataprocClusterIamMemberOutput
}

func (*DataprocClusterIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterIamMember)(nil)).Elem()
}

func (i *DataprocClusterIamMember) ToDataprocClusterIamMemberOutput() DataprocClusterIamMemberOutput {
	return i.ToDataprocClusterIamMemberOutputWithContext(context.Background())
}

func (i *DataprocClusterIamMember) ToDataprocClusterIamMemberOutputWithContext(ctx context.Context) DataprocClusterIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterIamMemberOutput)
}

type DataprocClusterIamMemberOutput struct{ *pulumi.OutputState }

func (DataprocClusterIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocClusterIamMember)(nil)).Elem()
}

func (o DataprocClusterIamMemberOutput) ToDataprocClusterIamMemberOutput() DataprocClusterIamMemberOutput {
	return o
}

func (o DataprocClusterIamMemberOutput) ToDataprocClusterIamMemberOutputWithContext(ctx context.Context) DataprocClusterIamMemberOutput {
	return o
}

func (o DataprocClusterIamMemberOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamMember) pulumi.StringOutput { return v.Cluster }).(pulumi.StringOutput)
}

func (o DataprocClusterIamMemberOutput) Condition() DataprocClusterIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataprocClusterIamMember) DataprocClusterIamMemberConditionPtrOutput { return v.Condition }).(DataprocClusterIamMemberConditionPtrOutput)
}

func (o DataprocClusterIamMemberOutput) DataprocClusterIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamMember) pulumi.StringOutput { return v.DataprocClusterIamMemberId }).(pulumi.StringOutput)
}

func (o DataprocClusterIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataprocClusterIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataprocClusterIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataprocClusterIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DataprocClusterIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocClusterIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocClusterIamMemberInput)(nil)).Elem(), &DataprocClusterIamMember{})
	pulumi.RegisterOutputType(DataprocClusterIamMemberOutput{})
}
