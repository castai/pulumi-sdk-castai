// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RuntimeconfigVariable struct {
	pulumi.CustomResourceState

	// The name of the variable to manage. Note that variable names can be hierarchical using slashes (e.g.
	// "prod-variables/hostname").
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the RuntimeConfig resource containing this variable.
	Parent pulumi.StringOutput `pulumi:"parent"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project                 pulumi.StringOutput    `pulumi:"project"`
	RuntimeconfigVariableId pulumi.StringOutput    `pulumi:"runtimeconfigVariableId"`
	Text                    pulumi.StringPtrOutput `pulumi:"text"`
	// The timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds, representing when the variable was last updated.
	// Example: "2016-10-09T12:33:37.578138407Z".
	UpdateTime pulumi.StringOutput    `pulumi:"updateTime"`
	Value      pulumi.StringPtrOutput `pulumi:"value"`
}

// NewRuntimeconfigVariable registers a new resource with the given unique name, arguments, and options.
func NewRuntimeconfigVariable(ctx *pulumi.Context,
	name string, args *RuntimeconfigVariableArgs, opts ...pulumi.ResourceOption) (*RuntimeconfigVariable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.Text != nil {
		args.Text = pulumi.ToSecret(args.Text).(pulumi.StringPtrInput)
	}
	if args.Value != nil {
		args.Value = pulumi.ToSecret(args.Value).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"text",
		"value",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource RuntimeconfigVariable
	err = ctx.RegisterPackageResource("google-beta:index/runtimeconfigVariable:RuntimeconfigVariable", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuntimeconfigVariable gets an existing RuntimeconfigVariable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuntimeconfigVariable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuntimeconfigVariableState, opts ...pulumi.ResourceOption) (*RuntimeconfigVariable, error) {
	var resource RuntimeconfigVariable
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/runtimeconfigVariable:RuntimeconfigVariable", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuntimeconfigVariable resources.
type runtimeconfigVariableState struct {
	// The name of the variable to manage. Note that variable names can be hierarchical using slashes (e.g.
	// "prod-variables/hostname").
	Name *string `pulumi:"name"`
	// The name of the RuntimeConfig resource containing this variable.
	Parent *string `pulumi:"parent"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project                 *string `pulumi:"project"`
	RuntimeconfigVariableId *string `pulumi:"runtimeconfigVariableId"`
	Text                    *string `pulumi:"text"`
	// The timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds, representing when the variable was last updated.
	// Example: "2016-10-09T12:33:37.578138407Z".
	UpdateTime *string `pulumi:"updateTime"`
	Value      *string `pulumi:"value"`
}

type RuntimeconfigVariableState struct {
	// The name of the variable to manage. Note that variable names can be hierarchical using slashes (e.g.
	// "prod-variables/hostname").
	Name pulumi.StringPtrInput
	// The name of the RuntimeConfig resource containing this variable.
	Parent pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project                 pulumi.StringPtrInput
	RuntimeconfigVariableId pulumi.StringPtrInput
	Text                    pulumi.StringPtrInput
	// The timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds, representing when the variable was last updated.
	// Example: "2016-10-09T12:33:37.578138407Z".
	UpdateTime pulumi.StringPtrInput
	Value      pulumi.StringPtrInput
}

func (RuntimeconfigVariableState) ElementType() reflect.Type {
	return reflect.TypeOf((*runtimeconfigVariableState)(nil)).Elem()
}

type runtimeconfigVariableArgs struct {
	// The name of the variable to manage. Note that variable names can be hierarchical using slashes (e.g.
	// "prod-variables/hostname").
	Name *string `pulumi:"name"`
	// The name of the RuntimeConfig resource containing this variable.
	Parent string `pulumi:"parent"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project                 *string `pulumi:"project"`
	RuntimeconfigVariableId *string `pulumi:"runtimeconfigVariableId"`
	Text                    *string `pulumi:"text"`
	Value                   *string `pulumi:"value"`
}

// The set of arguments for constructing a RuntimeconfigVariable resource.
type RuntimeconfigVariableArgs struct {
	// The name of the variable to manage. Note that variable names can be hierarchical using slashes (e.g.
	// "prod-variables/hostname").
	Name pulumi.StringPtrInput
	// The name of the RuntimeConfig resource containing this variable.
	Parent pulumi.StringInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project                 pulumi.StringPtrInput
	RuntimeconfigVariableId pulumi.StringPtrInput
	Text                    pulumi.StringPtrInput
	Value                   pulumi.StringPtrInput
}

func (RuntimeconfigVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runtimeconfigVariableArgs)(nil)).Elem()
}

type RuntimeconfigVariableInput interface {
	pulumi.Input

	ToRuntimeconfigVariableOutput() RuntimeconfigVariableOutput
	ToRuntimeconfigVariableOutputWithContext(ctx context.Context) RuntimeconfigVariableOutput
}

func (*RuntimeconfigVariable) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimeconfigVariable)(nil)).Elem()
}

func (i *RuntimeconfigVariable) ToRuntimeconfigVariableOutput() RuntimeconfigVariableOutput {
	return i.ToRuntimeconfigVariableOutputWithContext(context.Background())
}

func (i *RuntimeconfigVariable) ToRuntimeconfigVariableOutputWithContext(ctx context.Context) RuntimeconfigVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimeconfigVariableOutput)
}

type RuntimeconfigVariableOutput struct{ *pulumi.OutputState }

func (RuntimeconfigVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimeconfigVariable)(nil)).Elem()
}

func (o RuntimeconfigVariableOutput) ToRuntimeconfigVariableOutput() RuntimeconfigVariableOutput {
	return o
}

func (o RuntimeconfigVariableOutput) ToRuntimeconfigVariableOutputWithContext(ctx context.Context) RuntimeconfigVariableOutput {
	return o
}

// The name of the variable to manage. Note that variable names can be hierarchical using slashes (e.g.
// "prod-variables/hostname").
func (o RuntimeconfigVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigVariable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the RuntimeConfig resource containing this variable.
func (o RuntimeconfigVariableOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigVariable) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
func (o RuntimeconfigVariableOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigVariable) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o RuntimeconfigVariableOutput) RuntimeconfigVariableId() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigVariable) pulumi.StringOutput { return v.RuntimeconfigVariableId }).(pulumi.StringOutput)
}

func (o RuntimeconfigVariableOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimeconfigVariable) pulumi.StringPtrOutput { return v.Text }).(pulumi.StringPtrOutput)
}

// The timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds, representing when the variable was last updated.
// Example: "2016-10-09T12:33:37.578138407Z".
func (o RuntimeconfigVariableOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigVariable) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o RuntimeconfigVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuntimeconfigVariable) pulumi.StringPtrOutput { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuntimeconfigVariableInput)(nil)).Elem(), &RuntimeconfigVariable{})
	pulumi.RegisterOutputType(RuntimeconfigVariableOutput{})
}
