// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirebaseExtensionsInstance struct {
	pulumi.CustomResourceState

	// The current Config of the Extension Instance.
	Config FirebaseExtensionsInstanceConfigOutput `pulumi:"config"`
	// The time at which the Extension Instance was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// If this Instance has 'state: ERRORED', the error messages will be found here.
	ErrorStatuses FirebaseExtensionsInstanceErrorStatusArrayOutput `pulumi:"errorStatuses"`
	// A weak etag that is computed by the server based on other configuration values and may be sent on update and delete
	// requests to ensure the client has an up-to-date value before proceeding.
	Etag                         pulumi.StringOutput `pulumi:"etag"`
	FirebaseExtensionsInstanceId pulumi.StringOutput `pulumi:"firebaseExtensionsInstanceId"`
	// The ID to use for the Extension Instance, which will become the final component of the instance's name.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The name of the last operation that acted on this Extension Instance
	LastOperationName pulumi.StringOutput `pulumi:"lastOperationName"`
	// The type of the last operation that acted on the Extension Instance.
	LastOperationType pulumi.StringOutput `pulumi:"lastOperationType"`
	// The fully-qualified resource name of the Extension Instance.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Data set by the extension instance at runtime.
	RuntimeDatas FirebaseExtensionsInstanceRuntimeDataArrayOutput `pulumi:"runtimeDatas"`
	// The email of the service account to be used at runtime by compute resources created for the operation of the Extension
	// instance.
	ServiceAccountEmail pulumi.StringOutput `pulumi:"serviceAccountEmail"`
	// The current state of the Extension Instance. DEPLOYING: The Extension Instance is waiting on an Operation to complete.
	// Could resolve to 'ACTIVE', 'PAUSED', 'ERRORED'. UNINSTALLING: The Extension Instance is being removed from the project.
	// Could resolve to 'ERRORED', but more likely the instance will soon cease to exist. ACTIVE: The Extension Instance is
	// installed and ready. ERRORED: The Extension Instance encountered an error while 'DEPLOYING' or 'UNINSTALLING'. PAUSED:
	// The Extension's resources have been removed from the project, but the Config remains so the Instance can be restored.
	State    pulumi.StringOutput                         `pulumi:"state"`
	Timeouts FirebaseExtensionsInstanceTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time at which the Extension Instance was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewFirebaseExtensionsInstance registers a new resource with the given unique name, arguments, and options.
func NewFirebaseExtensionsInstance(ctx *pulumi.Context,
	name string, args *FirebaseExtensionsInstanceArgs, opts ...pulumi.ResourceOption) (*FirebaseExtensionsInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource FirebaseExtensionsInstance
	err = ctx.RegisterPackageResource("google-beta:index/firebaseExtensionsInstance:FirebaseExtensionsInstance", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirebaseExtensionsInstance gets an existing FirebaseExtensionsInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirebaseExtensionsInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirebaseExtensionsInstanceState, opts ...pulumi.ResourceOption) (*FirebaseExtensionsInstance, error) {
	var resource FirebaseExtensionsInstance
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/firebaseExtensionsInstance:FirebaseExtensionsInstance", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirebaseExtensionsInstance resources.
type firebaseExtensionsInstanceState struct {
	// The current Config of the Extension Instance.
	Config *FirebaseExtensionsInstanceConfig `pulumi:"config"`
	// The time at which the Extension Instance was created.
	CreateTime *string `pulumi:"createTime"`
	// If this Instance has 'state: ERRORED', the error messages will be found here.
	ErrorStatuses []FirebaseExtensionsInstanceErrorStatus `pulumi:"errorStatuses"`
	// A weak etag that is computed by the server based on other configuration values and may be sent on update and delete
	// requests to ensure the client has an up-to-date value before proceeding.
	Etag                         *string `pulumi:"etag"`
	FirebaseExtensionsInstanceId *string `pulumi:"firebaseExtensionsInstanceId"`
	// The ID to use for the Extension Instance, which will become the final component of the instance's name.
	InstanceId *string `pulumi:"instanceId"`
	// The name of the last operation that acted on this Extension Instance
	LastOperationName *string `pulumi:"lastOperationName"`
	// The type of the last operation that acted on the Extension Instance.
	LastOperationType *string `pulumi:"lastOperationType"`
	// The fully-qualified resource name of the Extension Instance.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Data set by the extension instance at runtime.
	RuntimeDatas []FirebaseExtensionsInstanceRuntimeData `pulumi:"runtimeDatas"`
	// The email of the service account to be used at runtime by compute resources created for the operation of the Extension
	// instance.
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
	// The current state of the Extension Instance. DEPLOYING: The Extension Instance is waiting on an Operation to complete.
	// Could resolve to 'ACTIVE', 'PAUSED', 'ERRORED'. UNINSTALLING: The Extension Instance is being removed from the project.
	// Could resolve to 'ERRORED', but more likely the instance will soon cease to exist. ACTIVE: The Extension Instance is
	// installed and ready. ERRORED: The Extension Instance encountered an error while 'DEPLOYING' or 'UNINSTALLING'. PAUSED:
	// The Extension's resources have been removed from the project, but the Config remains so the Instance can be restored.
	State    *string                             `pulumi:"state"`
	Timeouts *FirebaseExtensionsInstanceTimeouts `pulumi:"timeouts"`
	// The time at which the Extension Instance was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type FirebaseExtensionsInstanceState struct {
	// The current Config of the Extension Instance.
	Config FirebaseExtensionsInstanceConfigPtrInput
	// The time at which the Extension Instance was created.
	CreateTime pulumi.StringPtrInput
	// If this Instance has 'state: ERRORED', the error messages will be found here.
	ErrorStatuses FirebaseExtensionsInstanceErrorStatusArrayInput
	// A weak etag that is computed by the server based on other configuration values and may be sent on update and delete
	// requests to ensure the client has an up-to-date value before proceeding.
	Etag                         pulumi.StringPtrInput
	FirebaseExtensionsInstanceId pulumi.StringPtrInput
	// The ID to use for the Extension Instance, which will become the final component of the instance's name.
	InstanceId pulumi.StringPtrInput
	// The name of the last operation that acted on this Extension Instance
	LastOperationName pulumi.StringPtrInput
	// The type of the last operation that acted on the Extension Instance.
	LastOperationType pulumi.StringPtrInput
	// The fully-qualified resource name of the Extension Instance.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Data set by the extension instance at runtime.
	RuntimeDatas FirebaseExtensionsInstanceRuntimeDataArrayInput
	// The email of the service account to be used at runtime by compute resources created for the operation of the Extension
	// instance.
	ServiceAccountEmail pulumi.StringPtrInput
	// The current state of the Extension Instance. DEPLOYING: The Extension Instance is waiting on an Operation to complete.
	// Could resolve to 'ACTIVE', 'PAUSED', 'ERRORED'. UNINSTALLING: The Extension Instance is being removed from the project.
	// Could resolve to 'ERRORED', but more likely the instance will soon cease to exist. ACTIVE: The Extension Instance is
	// installed and ready. ERRORED: The Extension Instance encountered an error while 'DEPLOYING' or 'UNINSTALLING'. PAUSED:
	// The Extension's resources have been removed from the project, but the Config remains so the Instance can be restored.
	State    pulumi.StringPtrInput
	Timeouts FirebaseExtensionsInstanceTimeoutsPtrInput
	// The time at which the Extension Instance was updated.
	UpdateTime pulumi.StringPtrInput
}

func (FirebaseExtensionsInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*firebaseExtensionsInstanceState)(nil)).Elem()
}

type firebaseExtensionsInstanceArgs struct {
	// The current Config of the Extension Instance.
	Config                       FirebaseExtensionsInstanceConfig `pulumi:"config"`
	FirebaseExtensionsInstanceId *string                          `pulumi:"firebaseExtensionsInstanceId"`
	// The ID to use for the Extension Instance, which will become the final component of the instance's name.
	InstanceId string                              `pulumi:"instanceId"`
	Project    *string                             `pulumi:"project"`
	Timeouts   *FirebaseExtensionsInstanceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a FirebaseExtensionsInstance resource.
type FirebaseExtensionsInstanceArgs struct {
	// The current Config of the Extension Instance.
	Config                       FirebaseExtensionsInstanceConfigInput
	FirebaseExtensionsInstanceId pulumi.StringPtrInput
	// The ID to use for the Extension Instance, which will become the final component of the instance's name.
	InstanceId pulumi.StringInput
	Project    pulumi.StringPtrInput
	Timeouts   FirebaseExtensionsInstanceTimeoutsPtrInput
}

func (FirebaseExtensionsInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firebaseExtensionsInstanceArgs)(nil)).Elem()
}

type FirebaseExtensionsInstanceInput interface {
	pulumi.Input

	ToFirebaseExtensionsInstanceOutput() FirebaseExtensionsInstanceOutput
	ToFirebaseExtensionsInstanceOutputWithContext(ctx context.Context) FirebaseExtensionsInstanceOutput
}

func (*FirebaseExtensionsInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**FirebaseExtensionsInstance)(nil)).Elem()
}

func (i *FirebaseExtensionsInstance) ToFirebaseExtensionsInstanceOutput() FirebaseExtensionsInstanceOutput {
	return i.ToFirebaseExtensionsInstanceOutputWithContext(context.Background())
}

func (i *FirebaseExtensionsInstance) ToFirebaseExtensionsInstanceOutputWithContext(ctx context.Context) FirebaseExtensionsInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirebaseExtensionsInstanceOutput)
}

type FirebaseExtensionsInstanceOutput struct{ *pulumi.OutputState }

func (FirebaseExtensionsInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirebaseExtensionsInstance)(nil)).Elem()
}

func (o FirebaseExtensionsInstanceOutput) ToFirebaseExtensionsInstanceOutput() FirebaseExtensionsInstanceOutput {
	return o
}

func (o FirebaseExtensionsInstanceOutput) ToFirebaseExtensionsInstanceOutputWithContext(ctx context.Context) FirebaseExtensionsInstanceOutput {
	return o
}

// The current Config of the Extension Instance.
func (o FirebaseExtensionsInstanceOutput) Config() FirebaseExtensionsInstanceConfigOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) FirebaseExtensionsInstanceConfigOutput { return v.Config }).(FirebaseExtensionsInstanceConfigOutput)
}

// The time at which the Extension Instance was created.
func (o FirebaseExtensionsInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// If this Instance has 'state: ERRORED', the error messages will be found here.
func (o FirebaseExtensionsInstanceOutput) ErrorStatuses() FirebaseExtensionsInstanceErrorStatusArrayOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) FirebaseExtensionsInstanceErrorStatusArrayOutput {
		return v.ErrorStatuses
	}).(FirebaseExtensionsInstanceErrorStatusArrayOutput)
}

// A weak etag that is computed by the server based on other configuration values and may be sent on update and delete
// requests to ensure the client has an up-to-date value before proceeding.
func (o FirebaseExtensionsInstanceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o FirebaseExtensionsInstanceOutput) FirebaseExtensionsInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.FirebaseExtensionsInstanceId }).(pulumi.StringOutput)
}

// The ID to use for the Extension Instance, which will become the final component of the instance's name.
func (o FirebaseExtensionsInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the last operation that acted on this Extension Instance
func (o FirebaseExtensionsInstanceOutput) LastOperationName() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.LastOperationName }).(pulumi.StringOutput)
}

// The type of the last operation that acted on the Extension Instance.
func (o FirebaseExtensionsInstanceOutput) LastOperationType() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.LastOperationType }).(pulumi.StringOutput)
}

// The fully-qualified resource name of the Extension Instance.
func (o FirebaseExtensionsInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirebaseExtensionsInstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Data set by the extension instance at runtime.
func (o FirebaseExtensionsInstanceOutput) RuntimeDatas() FirebaseExtensionsInstanceRuntimeDataArrayOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) FirebaseExtensionsInstanceRuntimeDataArrayOutput {
		return v.RuntimeDatas
	}).(FirebaseExtensionsInstanceRuntimeDataArrayOutput)
}

// The email of the service account to be used at runtime by compute resources created for the operation of the Extension
// instance.
func (o FirebaseExtensionsInstanceOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// The current state of the Extension Instance. DEPLOYING: The Extension Instance is waiting on an Operation to complete.
// Could resolve to 'ACTIVE', 'PAUSED', 'ERRORED'. UNINSTALLING: The Extension Instance is being removed from the project.
// Could resolve to 'ERRORED', but more likely the instance will soon cease to exist. ACTIVE: The Extension Instance is
// installed and ready. ERRORED: The Extension Instance encountered an error while 'DEPLOYING' or 'UNINSTALLING'. PAUSED:
// The Extension's resources have been removed from the project, but the Config remains so the Instance can be restored.
func (o FirebaseExtensionsInstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o FirebaseExtensionsInstanceOutput) Timeouts() FirebaseExtensionsInstanceTimeoutsPtrOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) FirebaseExtensionsInstanceTimeoutsPtrOutput { return v.Timeouts }).(FirebaseExtensionsInstanceTimeoutsPtrOutput)
}

// The time at which the Extension Instance was updated.
func (o FirebaseExtensionsInstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseExtensionsInstance) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirebaseExtensionsInstanceInput)(nil)).Elem(), &FirebaseExtensionsInstance{})
	pulumi.RegisterOutputType(FirebaseExtensionsInstanceOutput{})
}
