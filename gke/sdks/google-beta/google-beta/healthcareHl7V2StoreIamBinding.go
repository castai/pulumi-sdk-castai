// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HealthcareHl7V2StoreIamBinding struct {
	pulumi.CustomResourceState

	Condition                        HealthcareHl7V2StoreIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                             pulumi.StringOutput                              `pulumi:"etag"`
	HealthcareHl7V2StoreIamBindingId pulumi.StringOutput                              `pulumi:"healthcareHl7V2StoreIamBindingId"`
	Hl7V2StoreId                     pulumi.StringOutput                              `pulumi:"hl7V2StoreId"`
	Members                          pulumi.StringArrayOutput                         `pulumi:"members"`
	Role                             pulumi.StringOutput                              `pulumi:"role"`
}

// NewHealthcareHl7V2StoreIamBinding registers a new resource with the given unique name, arguments, and options.
func NewHealthcareHl7V2StoreIamBinding(ctx *pulumi.Context,
	name string, args *HealthcareHl7V2StoreIamBindingArgs, opts ...pulumi.ResourceOption) (*HealthcareHl7V2StoreIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Hl7V2StoreId == nil {
		return nil, errors.New("invalid value for required argument 'Hl7V2StoreId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HealthcareHl7V2StoreIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/healthcareHl7V2StoreIamBinding:HealthcareHl7V2StoreIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthcareHl7V2StoreIamBinding gets an existing HealthcareHl7V2StoreIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthcareHl7V2StoreIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthcareHl7V2StoreIamBindingState, opts ...pulumi.ResourceOption) (*HealthcareHl7V2StoreIamBinding, error) {
	var resource HealthcareHl7V2StoreIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/healthcareHl7V2StoreIamBinding:HealthcareHl7V2StoreIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthcareHl7V2StoreIamBinding resources.
type healthcareHl7V2StoreIamBindingState struct {
	Condition                        *HealthcareHl7V2StoreIamBindingCondition `pulumi:"condition"`
	Etag                             *string                                  `pulumi:"etag"`
	HealthcareHl7V2StoreIamBindingId *string                                  `pulumi:"healthcareHl7V2StoreIamBindingId"`
	Hl7V2StoreId                     *string                                  `pulumi:"hl7V2StoreId"`
	Members                          []string                                 `pulumi:"members"`
	Role                             *string                                  `pulumi:"role"`
}

type HealthcareHl7V2StoreIamBindingState struct {
	Condition                        HealthcareHl7V2StoreIamBindingConditionPtrInput
	Etag                             pulumi.StringPtrInput
	HealthcareHl7V2StoreIamBindingId pulumi.StringPtrInput
	Hl7V2StoreId                     pulumi.StringPtrInput
	Members                          pulumi.StringArrayInput
	Role                             pulumi.StringPtrInput
}

func (HealthcareHl7V2StoreIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareHl7V2StoreIamBindingState)(nil)).Elem()
}

type healthcareHl7V2StoreIamBindingArgs struct {
	Condition                        *HealthcareHl7V2StoreIamBindingCondition `pulumi:"condition"`
	HealthcareHl7V2StoreIamBindingId *string                                  `pulumi:"healthcareHl7V2StoreIamBindingId"`
	Hl7V2StoreId                     string                                   `pulumi:"hl7V2StoreId"`
	Members                          []string                                 `pulumi:"members"`
	Role                             string                                   `pulumi:"role"`
}

// The set of arguments for constructing a HealthcareHl7V2StoreIamBinding resource.
type HealthcareHl7V2StoreIamBindingArgs struct {
	Condition                        HealthcareHl7V2StoreIamBindingConditionPtrInput
	HealthcareHl7V2StoreIamBindingId pulumi.StringPtrInput
	Hl7V2StoreId                     pulumi.StringInput
	Members                          pulumi.StringArrayInput
	Role                             pulumi.StringInput
}

func (HealthcareHl7V2StoreIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareHl7V2StoreIamBindingArgs)(nil)).Elem()
}

type HealthcareHl7V2StoreIamBindingInput interface {
	pulumi.Input

	ToHealthcareHl7V2StoreIamBindingOutput() HealthcareHl7V2StoreIamBindingOutput
	ToHealthcareHl7V2StoreIamBindingOutputWithContext(ctx context.Context) HealthcareHl7V2StoreIamBindingOutput
}

func (*HealthcareHl7V2StoreIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareHl7V2StoreIamBinding)(nil)).Elem()
}

func (i *HealthcareHl7V2StoreIamBinding) ToHealthcareHl7V2StoreIamBindingOutput() HealthcareHl7V2StoreIamBindingOutput {
	return i.ToHealthcareHl7V2StoreIamBindingOutputWithContext(context.Background())
}

func (i *HealthcareHl7V2StoreIamBinding) ToHealthcareHl7V2StoreIamBindingOutputWithContext(ctx context.Context) HealthcareHl7V2StoreIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcareHl7V2StoreIamBindingOutput)
}

type HealthcareHl7V2StoreIamBindingOutput struct{ *pulumi.OutputState }

func (HealthcareHl7V2StoreIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareHl7V2StoreIamBinding)(nil)).Elem()
}

func (o HealthcareHl7V2StoreIamBindingOutput) ToHealthcareHl7V2StoreIamBindingOutput() HealthcareHl7V2StoreIamBindingOutput {
	return o
}

func (o HealthcareHl7V2StoreIamBindingOutput) ToHealthcareHl7V2StoreIamBindingOutputWithContext(ctx context.Context) HealthcareHl7V2StoreIamBindingOutput {
	return o
}

func (o HealthcareHl7V2StoreIamBindingOutput) Condition() HealthcareHl7V2StoreIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *HealthcareHl7V2StoreIamBinding) HealthcareHl7V2StoreIamBindingConditionPtrOutput {
		return v.Condition
	}).(HealthcareHl7V2StoreIamBindingConditionPtrOutput)
}

func (o HealthcareHl7V2StoreIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareHl7V2StoreIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o HealthcareHl7V2StoreIamBindingOutput) HealthcareHl7V2StoreIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareHl7V2StoreIamBinding) pulumi.StringOutput { return v.HealthcareHl7V2StoreIamBindingId }).(pulumi.StringOutput)
}

func (o HealthcareHl7V2StoreIamBindingOutput) Hl7V2StoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareHl7V2StoreIamBinding) pulumi.StringOutput { return v.Hl7V2StoreId }).(pulumi.StringOutput)
}

func (o HealthcareHl7V2StoreIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HealthcareHl7V2StoreIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o HealthcareHl7V2StoreIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareHl7V2StoreIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcareHl7V2StoreIamBindingInput)(nil)).Elem(), &HealthcareHl7V2StoreIamBinding{})
	pulumi.RegisterOutputType(HealthcareHl7V2StoreIamBindingOutput{})
}
