// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeMachineImage struct {
	pulumi.CustomResourceState

	ComputeMachineImageId pulumi.StringOutput `pulumi:"computeMachineImageId"`
	// A text description of the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specify this to create an application consistent machine image by informing the OS to prepare for the snapshot process.
	// Currently only supported on Windows instances using the Volume Shadow Copy Service (VSS).
	GuestFlush pulumi.BoolPtrOutput `pulumi:"guestFlush"`
	// Encrypts the machine image using a customer-supplied encryption key. After you encrypt a machine image with a
	// customer-supplied key, you must provide the same key if you use the machine image later (e.g. to create a instance from
	// the image)
	MachineImageEncryptionKey ComputeMachineImageMachineImageEncryptionKeyPtrOutput `pulumi:"machineImageEncryptionKey"`
	// Name of the resource.
	Name     pulumi.StringOutput `pulumi:"name"`
	Project  pulumi.StringOutput `pulumi:"project"`
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The source instance used to create the machine image. You can provide this as a partial or full URL to the resource.
	SourceInstance pulumi.StringOutput `pulumi:"sourceInstance"`
	// The regional or multi-regional Cloud Storage bucket location where the machine image is stored.
	StorageLocations pulumi.StringArrayOutput             `pulumi:"storageLocations"`
	Timeouts         ComputeMachineImageTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeMachineImage registers a new resource with the given unique name, arguments, and options.
func NewComputeMachineImage(ctx *pulumi.Context,
	name string, args *ComputeMachineImageArgs, opts ...pulumi.ResourceOption) (*ComputeMachineImage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceInstance == nil {
		return nil, errors.New("invalid value for required argument 'SourceInstance'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeMachineImage
	err = ctx.RegisterPackageResource("google-beta:index/computeMachineImage:ComputeMachineImage", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeMachineImage gets an existing ComputeMachineImage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeMachineImage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeMachineImageState, opts ...pulumi.ResourceOption) (*ComputeMachineImage, error) {
	var resource ComputeMachineImage
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeMachineImage:ComputeMachineImage", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeMachineImage resources.
type computeMachineImageState struct {
	ComputeMachineImageId *string `pulumi:"computeMachineImageId"`
	// A text description of the resource.
	Description *string `pulumi:"description"`
	// Specify this to create an application consistent machine image by informing the OS to prepare for the snapshot process.
	// Currently only supported on Windows instances using the Volume Shadow Copy Service (VSS).
	GuestFlush *bool `pulumi:"guestFlush"`
	// Encrypts the machine image using a customer-supplied encryption key. After you encrypt a machine image with a
	// customer-supplied key, you must provide the same key if you use the machine image later (e.g. to create a instance from
	// the image)
	MachineImageEncryptionKey *ComputeMachineImageMachineImageEncryptionKey `pulumi:"machineImageEncryptionKey"`
	// Name of the resource.
	Name     *string `pulumi:"name"`
	Project  *string `pulumi:"project"`
	SelfLink *string `pulumi:"selfLink"`
	// The source instance used to create the machine image. You can provide this as a partial or full URL to the resource.
	SourceInstance *string `pulumi:"sourceInstance"`
	// The regional or multi-regional Cloud Storage bucket location where the machine image is stored.
	StorageLocations []string                     `pulumi:"storageLocations"`
	Timeouts         *ComputeMachineImageTimeouts `pulumi:"timeouts"`
}

type ComputeMachineImageState struct {
	ComputeMachineImageId pulumi.StringPtrInput
	// A text description of the resource.
	Description pulumi.StringPtrInput
	// Specify this to create an application consistent machine image by informing the OS to prepare for the snapshot process.
	// Currently only supported on Windows instances using the Volume Shadow Copy Service (VSS).
	GuestFlush pulumi.BoolPtrInput
	// Encrypts the machine image using a customer-supplied encryption key. After you encrypt a machine image with a
	// customer-supplied key, you must provide the same key if you use the machine image later (e.g. to create a instance from
	// the image)
	MachineImageEncryptionKey ComputeMachineImageMachineImageEncryptionKeyPtrInput
	// Name of the resource.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	SelfLink pulumi.StringPtrInput
	// The source instance used to create the machine image. You can provide this as a partial or full URL to the resource.
	SourceInstance pulumi.StringPtrInput
	// The regional or multi-regional Cloud Storage bucket location where the machine image is stored.
	StorageLocations pulumi.StringArrayInput
	Timeouts         ComputeMachineImageTimeoutsPtrInput
}

func (ComputeMachineImageState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeMachineImageState)(nil)).Elem()
}

type computeMachineImageArgs struct {
	ComputeMachineImageId *string `pulumi:"computeMachineImageId"`
	// A text description of the resource.
	Description *string `pulumi:"description"`
	// Specify this to create an application consistent machine image by informing the OS to prepare for the snapshot process.
	// Currently only supported on Windows instances using the Volume Shadow Copy Service (VSS).
	GuestFlush *bool `pulumi:"guestFlush"`
	// Encrypts the machine image using a customer-supplied encryption key. After you encrypt a machine image with a
	// customer-supplied key, you must provide the same key if you use the machine image later (e.g. to create a instance from
	// the image)
	MachineImageEncryptionKey *ComputeMachineImageMachineImageEncryptionKey `pulumi:"machineImageEncryptionKey"`
	// Name of the resource.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The source instance used to create the machine image. You can provide this as a partial or full URL to the resource.
	SourceInstance string                       `pulumi:"sourceInstance"`
	Timeouts       *ComputeMachineImageTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeMachineImage resource.
type ComputeMachineImageArgs struct {
	ComputeMachineImageId pulumi.StringPtrInput
	// A text description of the resource.
	Description pulumi.StringPtrInput
	// Specify this to create an application consistent machine image by informing the OS to prepare for the snapshot process.
	// Currently only supported on Windows instances using the Volume Shadow Copy Service (VSS).
	GuestFlush pulumi.BoolPtrInput
	// Encrypts the machine image using a customer-supplied encryption key. After you encrypt a machine image with a
	// customer-supplied key, you must provide the same key if you use the machine image later (e.g. to create a instance from
	// the image)
	MachineImageEncryptionKey ComputeMachineImageMachineImageEncryptionKeyPtrInput
	// Name of the resource.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The source instance used to create the machine image. You can provide this as a partial or full URL to the resource.
	SourceInstance pulumi.StringInput
	Timeouts       ComputeMachineImageTimeoutsPtrInput
}

func (ComputeMachineImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeMachineImageArgs)(nil)).Elem()
}

type ComputeMachineImageInput interface {
	pulumi.Input

	ToComputeMachineImageOutput() ComputeMachineImageOutput
	ToComputeMachineImageOutputWithContext(ctx context.Context) ComputeMachineImageOutput
}

func (*ComputeMachineImage) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeMachineImage)(nil)).Elem()
}

func (i *ComputeMachineImage) ToComputeMachineImageOutput() ComputeMachineImageOutput {
	return i.ToComputeMachineImageOutputWithContext(context.Background())
}

func (i *ComputeMachineImage) ToComputeMachineImageOutputWithContext(ctx context.Context) ComputeMachineImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeMachineImageOutput)
}

type ComputeMachineImageOutput struct{ *pulumi.OutputState }

func (ComputeMachineImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeMachineImage)(nil)).Elem()
}

func (o ComputeMachineImageOutput) ToComputeMachineImageOutput() ComputeMachineImageOutput {
	return o
}

func (o ComputeMachineImageOutput) ToComputeMachineImageOutputWithContext(ctx context.Context) ComputeMachineImageOutput {
	return o
}

func (o ComputeMachineImageOutput) ComputeMachineImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImage) pulumi.StringOutput { return v.ComputeMachineImageId }).(pulumi.StringOutput)
}

// A text description of the resource.
func (o ComputeMachineImageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeMachineImage) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specify this to create an application consistent machine image by informing the OS to prepare for the snapshot process.
// Currently only supported on Windows instances using the Volume Shadow Copy Service (VSS).
func (o ComputeMachineImageOutput) GuestFlush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeMachineImage) pulumi.BoolPtrOutput { return v.GuestFlush }).(pulumi.BoolPtrOutput)
}

// Encrypts the machine image using a customer-supplied encryption key. After you encrypt a machine image with a
// customer-supplied key, you must provide the same key if you use the machine image later (e.g. to create a instance from
// the image)
func (o ComputeMachineImageOutput) MachineImageEncryptionKey() ComputeMachineImageMachineImageEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *ComputeMachineImage) ComputeMachineImageMachineImageEncryptionKeyPtrOutput {
		return v.MachineImageEncryptionKey
	}).(ComputeMachineImageMachineImageEncryptionKeyPtrOutput)
}

// Name of the resource.
func (o ComputeMachineImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImage) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeMachineImageOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImage) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeMachineImageOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImage) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The source instance used to create the machine image. You can provide this as a partial or full URL to the resource.
func (o ComputeMachineImageOutput) SourceInstance() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImage) pulumi.StringOutput { return v.SourceInstance }).(pulumi.StringOutput)
}

// The regional or multi-regional Cloud Storage bucket location where the machine image is stored.
func (o ComputeMachineImageOutput) StorageLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeMachineImage) pulumi.StringArrayOutput { return v.StorageLocations }).(pulumi.StringArrayOutput)
}

func (o ComputeMachineImageOutput) Timeouts() ComputeMachineImageTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeMachineImage) ComputeMachineImageTimeoutsPtrOutput { return v.Timeouts }).(ComputeMachineImageTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeMachineImageInput)(nil)).Elem(), &ComputeMachineImage{})
	pulumi.RegisterOutputType(ComputeMachineImageOutput{})
}
