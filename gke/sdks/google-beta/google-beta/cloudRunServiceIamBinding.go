// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudRunServiceIamBinding struct {
	pulumi.CustomResourceState

	CloudRunServiceIamBindingId pulumi.StringOutput                         `pulumi:"cloudRunServiceIamBindingId"`
	Condition                   CloudRunServiceIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                        pulumi.StringOutput                         `pulumi:"etag"`
	Location                    pulumi.StringOutput                         `pulumi:"location"`
	Members                     pulumi.StringArrayOutput                    `pulumi:"members"`
	Project                     pulumi.StringOutput                         `pulumi:"project"`
	Role                        pulumi.StringOutput                         `pulumi:"role"`
	Service                     pulumi.StringOutput                         `pulumi:"service"`
}

// NewCloudRunServiceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewCloudRunServiceIamBinding(ctx *pulumi.Context,
	name string, args *CloudRunServiceIamBindingArgs, opts ...pulumi.ResourceOption) (*CloudRunServiceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudRunServiceIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/cloudRunServiceIamBinding:CloudRunServiceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudRunServiceIamBinding gets an existing CloudRunServiceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudRunServiceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudRunServiceIamBindingState, opts ...pulumi.ResourceOption) (*CloudRunServiceIamBinding, error) {
	var resource CloudRunServiceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/cloudRunServiceIamBinding:CloudRunServiceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudRunServiceIamBinding resources.
type cloudRunServiceIamBindingState struct {
	CloudRunServiceIamBindingId *string                             `pulumi:"cloudRunServiceIamBindingId"`
	Condition                   *CloudRunServiceIamBindingCondition `pulumi:"condition"`
	Etag                        *string                             `pulumi:"etag"`
	Location                    *string                             `pulumi:"location"`
	Members                     []string                            `pulumi:"members"`
	Project                     *string                             `pulumi:"project"`
	Role                        *string                             `pulumi:"role"`
	Service                     *string                             `pulumi:"service"`
}

type CloudRunServiceIamBindingState struct {
	CloudRunServiceIamBindingId pulumi.StringPtrInput
	Condition                   CloudRunServiceIamBindingConditionPtrInput
	Etag                        pulumi.StringPtrInput
	Location                    pulumi.StringPtrInput
	Members                     pulumi.StringArrayInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringPtrInput
	Service                     pulumi.StringPtrInput
}

func (CloudRunServiceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunServiceIamBindingState)(nil)).Elem()
}

type cloudRunServiceIamBindingArgs struct {
	CloudRunServiceIamBindingId *string                             `pulumi:"cloudRunServiceIamBindingId"`
	Condition                   *CloudRunServiceIamBindingCondition `pulumi:"condition"`
	Location                    *string                             `pulumi:"location"`
	Members                     []string                            `pulumi:"members"`
	Project                     *string                             `pulumi:"project"`
	Role                        string                              `pulumi:"role"`
	Service                     string                              `pulumi:"service"`
}

// The set of arguments for constructing a CloudRunServiceIamBinding resource.
type CloudRunServiceIamBindingArgs struct {
	CloudRunServiceIamBindingId pulumi.StringPtrInput
	Condition                   CloudRunServiceIamBindingConditionPtrInput
	Location                    pulumi.StringPtrInput
	Members                     pulumi.StringArrayInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringInput
	Service                     pulumi.StringInput
}

func (CloudRunServiceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunServiceIamBindingArgs)(nil)).Elem()
}

type CloudRunServiceIamBindingInput interface {
	pulumi.Input

	ToCloudRunServiceIamBindingOutput() CloudRunServiceIamBindingOutput
	ToCloudRunServiceIamBindingOutputWithContext(ctx context.Context) CloudRunServiceIamBindingOutput
}

func (*CloudRunServiceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunServiceIamBinding)(nil)).Elem()
}

func (i *CloudRunServiceIamBinding) ToCloudRunServiceIamBindingOutput() CloudRunServiceIamBindingOutput {
	return i.ToCloudRunServiceIamBindingOutputWithContext(context.Background())
}

func (i *CloudRunServiceIamBinding) ToCloudRunServiceIamBindingOutputWithContext(ctx context.Context) CloudRunServiceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudRunServiceIamBindingOutput)
}

type CloudRunServiceIamBindingOutput struct{ *pulumi.OutputState }

func (CloudRunServiceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunServiceIamBinding)(nil)).Elem()
}

func (o CloudRunServiceIamBindingOutput) ToCloudRunServiceIamBindingOutput() CloudRunServiceIamBindingOutput {
	return o
}

func (o CloudRunServiceIamBindingOutput) ToCloudRunServiceIamBindingOutputWithContext(ctx context.Context) CloudRunServiceIamBindingOutput {
	return o
}

func (o CloudRunServiceIamBindingOutput) CloudRunServiceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamBinding) pulumi.StringOutput { return v.CloudRunServiceIamBindingId }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamBindingOutput) Condition() CloudRunServiceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *CloudRunServiceIamBinding) CloudRunServiceIamBindingConditionPtrOutput { return v.Condition }).(CloudRunServiceIamBindingConditionPtrOutput)
}

func (o CloudRunServiceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudRunServiceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o CloudRunServiceIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamBindingOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamBinding) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudRunServiceIamBindingInput)(nil)).Elem(), &CloudRunServiceIamBinding{})
	pulumi.RegisterOutputType(CloudRunServiceIamBindingOutput{})
}
