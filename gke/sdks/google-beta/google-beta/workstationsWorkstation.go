// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkstationsWorkstation struct {
	pulumi.CustomResourceState

	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Time when this resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Human-readable name for this resource.
	DisplayName          pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// 'Client-specified environment variables passed to the workstation container's entrypoint.'
	Env pulumi.StringMapOutput `pulumi:"env"`
	// Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be
	// received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with
	// the destination port in the format "{port}-{host}".
	Host pulumi.StringOutput `pulumi:"host"`
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location where the workstation parent resources reside.
	Location pulumi.StringOutput `pulumi:"location"`
	// Full name of this resource.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Full resource name of the source workstation from which the workstation's persistent directories will be cloned from
	// during creation.
	SourceWorkstation pulumi.StringPtrOutput `pulumi:"sourceWorkstation"`
	// Current state of the workstation.
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                   `pulumi:"terraformLabels"`
	Timeouts        WorkstationsWorkstationTimeoutsPtrOutput `pulumi:"timeouts"`
	// A system-assigned unique identified for this resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The ID of the parent workstation cluster.
	WorkstationClusterId pulumi.StringOutput `pulumi:"workstationClusterId"`
	// The ID of the parent workstation cluster config.
	WorkstationConfigId pulumi.StringOutput `pulumi:"workstationConfigId"`
	// ID to use for the workstation.
	WorkstationId             pulumi.StringOutput `pulumi:"workstationId"`
	WorkstationsWorkstationId pulumi.StringOutput `pulumi:"workstationsWorkstationId"`
}

// NewWorkstationsWorkstation registers a new resource with the given unique name, arguments, and options.
func NewWorkstationsWorkstation(ctx *pulumi.Context,
	name string, args *WorkstationsWorkstationArgs, opts ...pulumi.ResourceOption) (*WorkstationsWorkstation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.WorkstationClusterId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationClusterId'")
	}
	if args.WorkstationConfigId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationConfigId'")
	}
	if args.WorkstationId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource WorkstationsWorkstation
	err = ctx.RegisterPackageResource("google-beta:index/workstationsWorkstation:WorkstationsWorkstation", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkstationsWorkstation gets an existing WorkstationsWorkstation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkstationsWorkstation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkstationsWorkstationState, opts ...pulumi.ResourceOption) (*WorkstationsWorkstation, error) {
	var resource WorkstationsWorkstation
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/workstationsWorkstation:WorkstationsWorkstation", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkstationsWorkstation resources.
type workstationsWorkstationState struct {
	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Time when this resource was created.
	CreateTime *string `pulumi:"createTime"`
	// Human-readable name for this resource.
	DisplayName          *string           `pulumi:"displayName"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// 'Client-specified environment variables passed to the workstation container's entrypoint.'
	Env map[string]string `pulumi:"env"`
	// Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be
	// received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with
	// the destination port in the format "{port}-{host}".
	Host *string `pulumi:"host"`
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the workstation parent resources reside.
	Location *string `pulumi:"location"`
	// Full name of this resource.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Full resource name of the source workstation from which the workstation's persistent directories will be cloned from
	// during creation.
	SourceWorkstation *string `pulumi:"sourceWorkstation"`
	// Current state of the workstation.
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                `pulumi:"terraformLabels"`
	Timeouts        *WorkstationsWorkstationTimeouts `pulumi:"timeouts"`
	// A system-assigned unique identified for this resource.
	Uid *string `pulumi:"uid"`
	// The ID of the parent workstation cluster.
	WorkstationClusterId *string `pulumi:"workstationClusterId"`
	// The ID of the parent workstation cluster config.
	WorkstationConfigId *string `pulumi:"workstationConfigId"`
	// ID to use for the workstation.
	WorkstationId             *string `pulumi:"workstationId"`
	WorkstationsWorkstationId *string `pulumi:"workstationsWorkstationId"`
}

type WorkstationsWorkstationState struct {
	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Time when this resource was created.
	CreateTime pulumi.StringPtrInput
	// Human-readable name for this resource.
	DisplayName          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// 'Client-specified environment variables passed to the workstation container's entrypoint.'
	Env pulumi.StringMapInput
	// Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be
	// received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with
	// the destination port in the format "{port}-{host}".
	Host pulumi.StringPtrInput
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location where the workstation parent resources reside.
	Location pulumi.StringPtrInput
	// Full name of this resource.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Full resource name of the source workstation from which the workstation's persistent directories will be cloned from
	// during creation.
	SourceWorkstation pulumi.StringPtrInput
	// Current state of the workstation.
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        WorkstationsWorkstationTimeoutsPtrInput
	// A system-assigned unique identified for this resource.
	Uid pulumi.StringPtrInput
	// The ID of the parent workstation cluster.
	WorkstationClusterId pulumi.StringPtrInput
	// The ID of the parent workstation cluster config.
	WorkstationConfigId pulumi.StringPtrInput
	// ID to use for the workstation.
	WorkstationId             pulumi.StringPtrInput
	WorkstationsWorkstationId pulumi.StringPtrInput
}

func (WorkstationsWorkstationState) ElementType() reflect.Type {
	return reflect.TypeOf((*workstationsWorkstationState)(nil)).Elem()
}

type workstationsWorkstationArgs struct {
	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Human-readable name for this resource.
	DisplayName *string `pulumi:"displayName"`
	// 'Client-specified environment variables passed to the workstation container's entrypoint.'
	Env map[string]string `pulumi:"env"`
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the workstation parent resources reside.
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// Full resource name of the source workstation from which the workstation's persistent directories will be cloned from
	// during creation.
	SourceWorkstation *string                          `pulumi:"sourceWorkstation"`
	Timeouts          *WorkstationsWorkstationTimeouts `pulumi:"timeouts"`
	// The ID of the parent workstation cluster.
	WorkstationClusterId string `pulumi:"workstationClusterId"`
	// The ID of the parent workstation cluster config.
	WorkstationConfigId string `pulumi:"workstationConfigId"`
	// ID to use for the workstation.
	WorkstationId             string  `pulumi:"workstationId"`
	WorkstationsWorkstationId *string `pulumi:"workstationsWorkstationId"`
}

// The set of arguments for constructing a WorkstationsWorkstation resource.
type WorkstationsWorkstationArgs struct {
	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Human-readable name for this resource.
	DisplayName pulumi.StringPtrInput
	// 'Client-specified environment variables passed to the workstation container's entrypoint.'
	Env pulumi.StringMapInput
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location where the workstation parent resources reside.
	Location pulumi.StringInput
	Project  pulumi.StringPtrInput
	// Full resource name of the source workstation from which the workstation's persistent directories will be cloned from
	// during creation.
	SourceWorkstation pulumi.StringPtrInput
	Timeouts          WorkstationsWorkstationTimeoutsPtrInput
	// The ID of the parent workstation cluster.
	WorkstationClusterId pulumi.StringInput
	// The ID of the parent workstation cluster config.
	WorkstationConfigId pulumi.StringInput
	// ID to use for the workstation.
	WorkstationId             pulumi.StringInput
	WorkstationsWorkstationId pulumi.StringPtrInput
}

func (WorkstationsWorkstationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workstationsWorkstationArgs)(nil)).Elem()
}

type WorkstationsWorkstationInput interface {
	pulumi.Input

	ToWorkstationsWorkstationOutput() WorkstationsWorkstationOutput
	ToWorkstationsWorkstationOutputWithContext(ctx context.Context) WorkstationsWorkstationOutput
}

func (*WorkstationsWorkstation) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkstationsWorkstation)(nil)).Elem()
}

func (i *WorkstationsWorkstation) ToWorkstationsWorkstationOutput() WorkstationsWorkstationOutput {
	return i.ToWorkstationsWorkstationOutputWithContext(context.Background())
}

func (i *WorkstationsWorkstation) ToWorkstationsWorkstationOutputWithContext(ctx context.Context) WorkstationsWorkstationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkstationsWorkstationOutput)
}

type WorkstationsWorkstationOutput struct{ *pulumi.OutputState }

func (WorkstationsWorkstationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkstationsWorkstation)(nil)).Elem()
}

func (o WorkstationsWorkstationOutput) ToWorkstationsWorkstationOutput() WorkstationsWorkstationOutput {
	return o
}

func (o WorkstationsWorkstationOutput) ToWorkstationsWorkstationOutputWithContext(ctx context.Context) WorkstationsWorkstationOutput {
	return o
}

// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
// annotations present on the resource.
func (o WorkstationsWorkstationOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Time when this resource was created.
func (o WorkstationsWorkstationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Human-readable name for this resource.
func (o WorkstationsWorkstationOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o WorkstationsWorkstationOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o WorkstationsWorkstationOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// 'Client-specified environment variables passed to the workstation container's entrypoint.'
func (o WorkstationsWorkstationOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringMapOutput { return v.Env }).(pulumi.StringMapOutput)
}

// Host to which clients can send HTTPS traffic that will be received by the workstation. Authorized traffic will be
// received to the workstation as HTTP on port 80. To send traffic to a different port, clients may prefix the host with
// the destination port in the format "{port}-{host}".
func (o WorkstationsWorkstationOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o WorkstationsWorkstationOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location where the workstation parent resources reside.
func (o WorkstationsWorkstationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Full name of this resource.
func (o WorkstationsWorkstationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Full resource name of the source workstation from which the workstation's persistent directories will be cloned from
// during creation.
func (o WorkstationsWorkstationOutput) SourceWorkstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringPtrOutput { return v.SourceWorkstation }).(pulumi.StringPtrOutput)
}

// Current state of the workstation.
func (o WorkstationsWorkstationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o WorkstationsWorkstationOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o WorkstationsWorkstationOutput) Timeouts() WorkstationsWorkstationTimeoutsPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) WorkstationsWorkstationTimeoutsPtrOutput { return v.Timeouts }).(WorkstationsWorkstationTimeoutsPtrOutput)
}

// A system-assigned unique identified for this resource.
func (o WorkstationsWorkstationOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The ID of the parent workstation cluster.
func (o WorkstationsWorkstationOutput) WorkstationClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.WorkstationClusterId }).(pulumi.StringOutput)
}

// The ID of the parent workstation cluster config.
func (o WorkstationsWorkstationOutput) WorkstationConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.WorkstationConfigId }).(pulumi.StringOutput)
}

// ID to use for the workstation.
func (o WorkstationsWorkstationOutput) WorkstationId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.WorkstationId }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationOutput) WorkstationsWorkstationId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstation) pulumi.StringOutput { return v.WorkstationsWorkstationId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkstationsWorkstationInput)(nil)).Elem(), &WorkstationsWorkstation{})
	pulumi.RegisterOutputType(WorkstationsWorkstationOutput{})
}
