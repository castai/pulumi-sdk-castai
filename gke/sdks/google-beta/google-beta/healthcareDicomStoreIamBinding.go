// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HealthcareDicomStoreIamBinding struct {
	pulumi.CustomResourceState

	Condition                        HealthcareDicomStoreIamBindingConditionPtrOutput `pulumi:"condition"`
	DicomStoreId                     pulumi.StringOutput                              `pulumi:"dicomStoreId"`
	Etag                             pulumi.StringOutput                              `pulumi:"etag"`
	HealthcareDicomStoreIamBindingId pulumi.StringOutput                              `pulumi:"healthcareDicomStoreIamBindingId"`
	Members                          pulumi.StringArrayOutput                         `pulumi:"members"`
	Role                             pulumi.StringOutput                              `pulumi:"role"`
}

// NewHealthcareDicomStoreIamBinding registers a new resource with the given unique name, arguments, and options.
func NewHealthcareDicomStoreIamBinding(ctx *pulumi.Context,
	name string, args *HealthcareDicomStoreIamBindingArgs, opts ...pulumi.ResourceOption) (*HealthcareDicomStoreIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DicomStoreId == nil {
		return nil, errors.New("invalid value for required argument 'DicomStoreId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HealthcareDicomStoreIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/healthcareDicomStoreIamBinding:HealthcareDicomStoreIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthcareDicomStoreIamBinding gets an existing HealthcareDicomStoreIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthcareDicomStoreIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthcareDicomStoreIamBindingState, opts ...pulumi.ResourceOption) (*HealthcareDicomStoreIamBinding, error) {
	var resource HealthcareDicomStoreIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/healthcareDicomStoreIamBinding:HealthcareDicomStoreIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthcareDicomStoreIamBinding resources.
type healthcareDicomStoreIamBindingState struct {
	Condition                        *HealthcareDicomStoreIamBindingCondition `pulumi:"condition"`
	DicomStoreId                     *string                                  `pulumi:"dicomStoreId"`
	Etag                             *string                                  `pulumi:"etag"`
	HealthcareDicomStoreIamBindingId *string                                  `pulumi:"healthcareDicomStoreIamBindingId"`
	Members                          []string                                 `pulumi:"members"`
	Role                             *string                                  `pulumi:"role"`
}

type HealthcareDicomStoreIamBindingState struct {
	Condition                        HealthcareDicomStoreIamBindingConditionPtrInput
	DicomStoreId                     pulumi.StringPtrInput
	Etag                             pulumi.StringPtrInput
	HealthcareDicomStoreIamBindingId pulumi.StringPtrInput
	Members                          pulumi.StringArrayInput
	Role                             pulumi.StringPtrInput
}

func (HealthcareDicomStoreIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareDicomStoreIamBindingState)(nil)).Elem()
}

type healthcareDicomStoreIamBindingArgs struct {
	Condition                        *HealthcareDicomStoreIamBindingCondition `pulumi:"condition"`
	DicomStoreId                     string                                   `pulumi:"dicomStoreId"`
	HealthcareDicomStoreIamBindingId *string                                  `pulumi:"healthcareDicomStoreIamBindingId"`
	Members                          []string                                 `pulumi:"members"`
	Role                             string                                   `pulumi:"role"`
}

// The set of arguments for constructing a HealthcareDicomStoreIamBinding resource.
type HealthcareDicomStoreIamBindingArgs struct {
	Condition                        HealthcareDicomStoreIamBindingConditionPtrInput
	DicomStoreId                     pulumi.StringInput
	HealthcareDicomStoreIamBindingId pulumi.StringPtrInput
	Members                          pulumi.StringArrayInput
	Role                             pulumi.StringInput
}

func (HealthcareDicomStoreIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareDicomStoreIamBindingArgs)(nil)).Elem()
}

type HealthcareDicomStoreIamBindingInput interface {
	pulumi.Input

	ToHealthcareDicomStoreIamBindingOutput() HealthcareDicomStoreIamBindingOutput
	ToHealthcareDicomStoreIamBindingOutputWithContext(ctx context.Context) HealthcareDicomStoreIamBindingOutput
}

func (*HealthcareDicomStoreIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareDicomStoreIamBinding)(nil)).Elem()
}

func (i *HealthcareDicomStoreIamBinding) ToHealthcareDicomStoreIamBindingOutput() HealthcareDicomStoreIamBindingOutput {
	return i.ToHealthcareDicomStoreIamBindingOutputWithContext(context.Background())
}

func (i *HealthcareDicomStoreIamBinding) ToHealthcareDicomStoreIamBindingOutputWithContext(ctx context.Context) HealthcareDicomStoreIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcareDicomStoreIamBindingOutput)
}

type HealthcareDicomStoreIamBindingOutput struct{ *pulumi.OutputState }

func (HealthcareDicomStoreIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareDicomStoreIamBinding)(nil)).Elem()
}

func (o HealthcareDicomStoreIamBindingOutput) ToHealthcareDicomStoreIamBindingOutput() HealthcareDicomStoreIamBindingOutput {
	return o
}

func (o HealthcareDicomStoreIamBindingOutput) ToHealthcareDicomStoreIamBindingOutputWithContext(ctx context.Context) HealthcareDicomStoreIamBindingOutput {
	return o
}

func (o HealthcareDicomStoreIamBindingOutput) Condition() HealthcareDicomStoreIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamBinding) HealthcareDicomStoreIamBindingConditionPtrOutput {
		return v.Condition
	}).(HealthcareDicomStoreIamBindingConditionPtrOutput)
}

func (o HealthcareDicomStoreIamBindingOutput) DicomStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamBinding) pulumi.StringOutput { return v.DicomStoreId }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamBindingOutput) HealthcareDicomStoreIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamBinding) pulumi.StringOutput { return v.HealthcareDicomStoreIamBindingId }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o HealthcareDicomStoreIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcareDicomStoreIamBindingInput)(nil)).Elem(), &HealthcareDicomStoreIamBinding{})
	pulumi.RegisterOutputType(HealthcareDicomStoreIamBindingOutput{})
}
