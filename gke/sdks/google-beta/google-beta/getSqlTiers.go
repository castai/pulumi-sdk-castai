// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSqlTiers(ctx *pulumi.Context, args *GetSqlTiersArgs, opts ...pulumi.InvokeOption) (*GetSqlTiersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetSqlTiersResult
	err = ctx.InvokePackage("google-beta:index/getSqlTiers:getSqlTiers", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlTiers.
type GetSqlTiersArgs struct {
	Id      *string `pulumi:"id"`
	Project *string `pulumi:"project"`
}

// A collection of values returned by getSqlTiers.
type GetSqlTiersResult struct {
	Id      string            `pulumi:"id"`
	Project string            `pulumi:"project"`
	Tiers   []GetSqlTiersTier `pulumi:"tiers"`
}

func GetSqlTiersOutput(ctx *pulumi.Context, args GetSqlTiersOutputArgs, opts ...pulumi.InvokeOption) GetSqlTiersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSqlTiersResultOutput, error) {
			args := v.(GetSqlTiersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetSqlTiersResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getSqlTiers:getSqlTiers", args, GetSqlTiersResultOutput{}, options).(GetSqlTiersResultOutput), nil
		}).(GetSqlTiersResultOutput)
}

// A collection of arguments for invoking getSqlTiers.
type GetSqlTiersOutputArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetSqlTiersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlTiersArgs)(nil)).Elem()
}

// A collection of values returned by getSqlTiers.
type GetSqlTiersResultOutput struct{ *pulumi.OutputState }

func (GetSqlTiersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlTiersResult)(nil)).Elem()
}

func (o GetSqlTiersResultOutput) ToGetSqlTiersResultOutput() GetSqlTiersResultOutput {
	return o
}

func (o GetSqlTiersResultOutput) ToGetSqlTiersResultOutputWithContext(ctx context.Context) GetSqlTiersResultOutput {
	return o
}

func (o GetSqlTiersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlTiersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSqlTiersResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlTiersResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetSqlTiersResultOutput) Tiers() GetSqlTiersTierArrayOutput {
	return o.ApplyT(func(v GetSqlTiersResult) []GetSqlTiersTier { return v.Tiers }).(GetSqlTiersTierArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlTiersResultOutput{})
}
