// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirebaseAppCheckRecaptchaV3Config struct {
	pulumi.CustomResourceState

	// The ID of an [Web
	// App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	AppId                               pulumi.StringOutput `pulumi:"appId"`
	FirebaseAppCheckRecaptchaV3ConfigId pulumi.StringOutput `pulumi:"firebaseAppCheckRecaptchaV3ConfigId"`
	// The relative resource name of the reCAPTCHA V3 configuration object
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never
	// be populated in any response.
	SiteSecret pulumi.StringOutput `pulumi:"siteSecret"`
	// Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way
	// to find out whether it was previously set.
	SiteSecretSet pulumi.BoolOutput                                  `pulumi:"siteSecretSet"`
	Timeouts      FirebaseAppCheckRecaptchaV3ConfigTimeoutsPtrOutput `pulumi:"timeouts"`
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid. If unset, a
	// default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive. A duration in seconds with up to
	// nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl pulumi.StringOutput `pulumi:"tokenTtl"`
}

// NewFirebaseAppCheckRecaptchaV3Config registers a new resource with the given unique name, arguments, and options.
func NewFirebaseAppCheckRecaptchaV3Config(ctx *pulumi.Context,
	name string, args *FirebaseAppCheckRecaptchaV3ConfigArgs, opts ...pulumi.ResourceOption) (*FirebaseAppCheckRecaptchaV3Config, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.SiteSecret == nil {
		return nil, errors.New("invalid value for required argument 'SiteSecret'")
	}
	if args.SiteSecret != nil {
		args.SiteSecret = pulumi.ToSecret(args.SiteSecret).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"siteSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource FirebaseAppCheckRecaptchaV3Config
	err = ctx.RegisterPackageResource("google-beta:index/firebaseAppCheckRecaptchaV3Config:FirebaseAppCheckRecaptchaV3Config", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirebaseAppCheckRecaptchaV3Config gets an existing FirebaseAppCheckRecaptchaV3Config resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirebaseAppCheckRecaptchaV3Config(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirebaseAppCheckRecaptchaV3ConfigState, opts ...pulumi.ResourceOption) (*FirebaseAppCheckRecaptchaV3Config, error) {
	var resource FirebaseAppCheckRecaptchaV3Config
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/firebaseAppCheckRecaptchaV3Config:FirebaseAppCheckRecaptchaV3Config", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirebaseAppCheckRecaptchaV3Config resources.
type firebaseAppCheckRecaptchaV3ConfigState struct {
	// The ID of an [Web
	// App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	AppId                               *string `pulumi:"appId"`
	FirebaseAppCheckRecaptchaV3ConfigId *string `pulumi:"firebaseAppCheckRecaptchaV3ConfigId"`
	// The relative resource name of the reCAPTCHA V3 configuration object
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never
	// be populated in any response.
	SiteSecret *string `pulumi:"siteSecret"`
	// Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way
	// to find out whether it was previously set.
	SiteSecretSet *bool                                      `pulumi:"siteSecretSet"`
	Timeouts      *FirebaseAppCheckRecaptchaV3ConfigTimeouts `pulumi:"timeouts"`
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid. If unset, a
	// default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive. A duration in seconds with up to
	// nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl *string `pulumi:"tokenTtl"`
}

type FirebaseAppCheckRecaptchaV3ConfigState struct {
	// The ID of an [Web
	// App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	AppId                               pulumi.StringPtrInput
	FirebaseAppCheckRecaptchaV3ConfigId pulumi.StringPtrInput
	// The relative resource name of the reCAPTCHA V3 configuration object
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never
	// be populated in any response.
	SiteSecret pulumi.StringPtrInput
	// Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way
	// to find out whether it was previously set.
	SiteSecretSet pulumi.BoolPtrInput
	Timeouts      FirebaseAppCheckRecaptchaV3ConfigTimeoutsPtrInput
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid. If unset, a
	// default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive. A duration in seconds with up to
	// nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl pulumi.StringPtrInput
}

func (FirebaseAppCheckRecaptchaV3ConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*firebaseAppCheckRecaptchaV3ConfigState)(nil)).Elem()
}

type firebaseAppCheckRecaptchaV3ConfigArgs struct {
	// The ID of an [Web
	// App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	AppId                               string  `pulumi:"appId"`
	FirebaseAppCheckRecaptchaV3ConfigId *string `pulumi:"firebaseAppCheckRecaptchaV3ConfigId"`
	Project                             *string `pulumi:"project"`
	// The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never
	// be populated in any response.
	SiteSecret string                                     `pulumi:"siteSecret"`
	Timeouts   *FirebaseAppCheckRecaptchaV3ConfigTimeouts `pulumi:"timeouts"`
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid. If unset, a
	// default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive. A duration in seconds with up to
	// nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl *string `pulumi:"tokenTtl"`
}

// The set of arguments for constructing a FirebaseAppCheckRecaptchaV3Config resource.
type FirebaseAppCheckRecaptchaV3ConfigArgs struct {
	// The ID of an [Web
	// App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
	AppId                               pulumi.StringInput
	FirebaseAppCheckRecaptchaV3ConfigId pulumi.StringPtrInput
	Project                             pulumi.StringPtrInput
	// The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never
	// be populated in any response.
	SiteSecret pulumi.StringInput
	Timeouts   FirebaseAppCheckRecaptchaV3ConfigTimeoutsPtrInput
	// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid. If unset, a
	// default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive. A duration in seconds with up to
	// nine fractional digits, ending with 's'. Example: "3.5s".
	TokenTtl pulumi.StringPtrInput
}

func (FirebaseAppCheckRecaptchaV3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firebaseAppCheckRecaptchaV3ConfigArgs)(nil)).Elem()
}

type FirebaseAppCheckRecaptchaV3ConfigInput interface {
	pulumi.Input

	ToFirebaseAppCheckRecaptchaV3ConfigOutput() FirebaseAppCheckRecaptchaV3ConfigOutput
	ToFirebaseAppCheckRecaptchaV3ConfigOutputWithContext(ctx context.Context) FirebaseAppCheckRecaptchaV3ConfigOutput
}

func (*FirebaseAppCheckRecaptchaV3Config) ElementType() reflect.Type {
	return reflect.TypeOf((**FirebaseAppCheckRecaptchaV3Config)(nil)).Elem()
}

func (i *FirebaseAppCheckRecaptchaV3Config) ToFirebaseAppCheckRecaptchaV3ConfigOutput() FirebaseAppCheckRecaptchaV3ConfigOutput {
	return i.ToFirebaseAppCheckRecaptchaV3ConfigOutputWithContext(context.Background())
}

func (i *FirebaseAppCheckRecaptchaV3Config) ToFirebaseAppCheckRecaptchaV3ConfigOutputWithContext(ctx context.Context) FirebaseAppCheckRecaptchaV3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirebaseAppCheckRecaptchaV3ConfigOutput)
}

type FirebaseAppCheckRecaptchaV3ConfigOutput struct{ *pulumi.OutputState }

func (FirebaseAppCheckRecaptchaV3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirebaseAppCheckRecaptchaV3Config)(nil)).Elem()
}

func (o FirebaseAppCheckRecaptchaV3ConfigOutput) ToFirebaseAppCheckRecaptchaV3ConfigOutput() FirebaseAppCheckRecaptchaV3ConfigOutput {
	return o
}

func (o FirebaseAppCheckRecaptchaV3ConfigOutput) ToFirebaseAppCheckRecaptchaV3ConfigOutputWithContext(ctx context.Context) FirebaseAppCheckRecaptchaV3ConfigOutput {
	return o
}

// The ID of an [Web
// App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.webApps#WebApp.FIELDS.app_id).
func (o FirebaseAppCheckRecaptchaV3ConfigOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseAppCheckRecaptchaV3Config) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

func (o FirebaseAppCheckRecaptchaV3ConfigOutput) FirebaseAppCheckRecaptchaV3ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseAppCheckRecaptchaV3Config) pulumi.StringOutput {
		return v.FirebaseAppCheckRecaptchaV3ConfigId
	}).(pulumi.StringOutput)
}

// The relative resource name of the reCAPTCHA V3 configuration object
func (o FirebaseAppCheckRecaptchaV3ConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseAppCheckRecaptchaV3Config) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FirebaseAppCheckRecaptchaV3ConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseAppCheckRecaptchaV3Config) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The site secret used to identify your service for reCAPTCHA v3 verification. For security reasons, this field will never
// be populated in any response.
func (o FirebaseAppCheckRecaptchaV3ConfigOutput) SiteSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseAppCheckRecaptchaV3Config) pulumi.StringOutput { return v.SiteSecret }).(pulumi.StringOutput)
}

// Whether the siteSecret was previously set. Since we will never return the siteSecret field, this field is the only way
// to find out whether it was previously set.
func (o FirebaseAppCheckRecaptchaV3ConfigOutput) SiteSecretSet() pulumi.BoolOutput {
	return o.ApplyT(func(v *FirebaseAppCheckRecaptchaV3Config) pulumi.BoolOutput { return v.SiteSecretSet }).(pulumi.BoolOutput)
}

func (o FirebaseAppCheckRecaptchaV3ConfigOutput) Timeouts() FirebaseAppCheckRecaptchaV3ConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *FirebaseAppCheckRecaptchaV3Config) FirebaseAppCheckRecaptchaV3ConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(FirebaseAppCheckRecaptchaV3ConfigTimeoutsPtrOutput)
}

// Specifies the duration for which App Check tokens exchanged from reCAPTCHA V3 artifacts will be valid. If unset, a
// default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive. A duration in seconds with up to
// nine fractional digits, ending with 's'. Example: "3.5s".
func (o FirebaseAppCheckRecaptchaV3ConfigOutput) TokenTtl() pulumi.StringOutput {
	return o.ApplyT(func(v *FirebaseAppCheckRecaptchaV3Config) pulumi.StringOutput { return v.TokenTtl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirebaseAppCheckRecaptchaV3ConfigInput)(nil)).Elem(), &FirebaseAppCheckRecaptchaV3Config{})
	pulumi.RegisterOutputType(FirebaseAppCheckRecaptchaV3ConfigOutput{})
}
