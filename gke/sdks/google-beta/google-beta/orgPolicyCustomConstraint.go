// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrgPolicyCustomConstraint struct {
	pulumi.CustomResourceState

	// The action to take if the condition is met. Possible values: ["ALLOW", "DENY"]
	ActionType pulumi.StringOutput `pulumi:"actionType"`
	// A CEL condition that refers to a supported service resource, for example 'resource.management.autoUpgrade == false'. For
	// details about CEL usage, see [Common Expression
	// Language](https://cloud.google.com/resource-manager/docs/organization-policy/creating-managing-custom-constraints#common_expression_language).
	Condition pulumi.StringOutput `pulumi:"condition"`
	// A human-friendly description of the constraint to display as an error message when the policy is violated.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A human-friendly name for the constraint.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// A list of RESTful methods for which to enforce the constraint. Can be 'CREATE', 'UPDATE', or both. Not all Google Cloud
	// services support both methods. To see supported methods for each service, find the service in [Supported
	// services](https://cloud.google.com/resource-manager/docs/organization-policy/custom-constraint-supported-services).
	MethodTypes pulumi.StringArrayOutput `pulumi:"methodTypes"`
	// Immutable. The name of the custom constraint. This is unique within the organization.
	Name                        pulumi.StringOutput `pulumi:"name"`
	OrgPolicyCustomConstraintId pulumi.StringOutput `pulumi:"orgPolicyCustomConstraintId"`
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent pulumi.StringOutput `pulumi:"parent"`
	// Immutable. The fully qualified name of the Google Cloud REST resource containing the object and field you want to
	// restrict. For example, 'container.googleapis.com/NodePool'.
	ResourceTypes pulumi.StringArrayOutput                   `pulumi:"resourceTypes"`
	Timeouts      OrgPolicyCustomConstraintTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. The timestamp representing when the constraint was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewOrgPolicyCustomConstraint registers a new resource with the given unique name, arguments, and options.
func NewOrgPolicyCustomConstraint(ctx *pulumi.Context,
	name string, args *OrgPolicyCustomConstraintArgs, opts ...pulumi.ResourceOption) (*OrgPolicyCustomConstraint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ActionType == nil {
		return nil, errors.New("invalid value for required argument 'ActionType'")
	}
	if args.Condition == nil {
		return nil, errors.New("invalid value for required argument 'Condition'")
	}
	if args.MethodTypes == nil {
		return nil, errors.New("invalid value for required argument 'MethodTypes'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.ResourceTypes == nil {
		return nil, errors.New("invalid value for required argument 'ResourceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource OrgPolicyCustomConstraint
	err = ctx.RegisterPackageResource("google-beta:index/orgPolicyCustomConstraint:OrgPolicyCustomConstraint", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrgPolicyCustomConstraint gets an existing OrgPolicyCustomConstraint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrgPolicyCustomConstraint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrgPolicyCustomConstraintState, opts ...pulumi.ResourceOption) (*OrgPolicyCustomConstraint, error) {
	var resource OrgPolicyCustomConstraint
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/orgPolicyCustomConstraint:OrgPolicyCustomConstraint", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrgPolicyCustomConstraint resources.
type orgPolicyCustomConstraintState struct {
	// The action to take if the condition is met. Possible values: ["ALLOW", "DENY"]
	ActionType *string `pulumi:"actionType"`
	// A CEL condition that refers to a supported service resource, for example 'resource.management.autoUpgrade == false'. For
	// details about CEL usage, see [Common Expression
	// Language](https://cloud.google.com/resource-manager/docs/organization-policy/creating-managing-custom-constraints#common_expression_language).
	Condition *string `pulumi:"condition"`
	// A human-friendly description of the constraint to display as an error message when the policy is violated.
	Description *string `pulumi:"description"`
	// A human-friendly name for the constraint.
	DisplayName *string `pulumi:"displayName"`
	// A list of RESTful methods for which to enforce the constraint. Can be 'CREATE', 'UPDATE', or both. Not all Google Cloud
	// services support both methods. To see supported methods for each service, find the service in [Supported
	// services](https://cloud.google.com/resource-manager/docs/organization-policy/custom-constraint-supported-services).
	MethodTypes []string `pulumi:"methodTypes"`
	// Immutable. The name of the custom constraint. This is unique within the organization.
	Name                        *string `pulumi:"name"`
	OrgPolicyCustomConstraintId *string `pulumi:"orgPolicyCustomConstraintId"`
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent *string `pulumi:"parent"`
	// Immutable. The fully qualified name of the Google Cloud REST resource containing the object and field you want to
	// restrict. For example, 'container.googleapis.com/NodePool'.
	ResourceTypes []string                           `pulumi:"resourceTypes"`
	Timeouts      *OrgPolicyCustomConstraintTimeouts `pulumi:"timeouts"`
	// Output only. The timestamp representing when the constraint was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type OrgPolicyCustomConstraintState struct {
	// The action to take if the condition is met. Possible values: ["ALLOW", "DENY"]
	ActionType pulumi.StringPtrInput
	// A CEL condition that refers to a supported service resource, for example 'resource.management.autoUpgrade == false'. For
	// details about CEL usage, see [Common Expression
	// Language](https://cloud.google.com/resource-manager/docs/organization-policy/creating-managing-custom-constraints#common_expression_language).
	Condition pulumi.StringPtrInput
	// A human-friendly description of the constraint to display as an error message when the policy is violated.
	Description pulumi.StringPtrInput
	// A human-friendly name for the constraint.
	DisplayName pulumi.StringPtrInput
	// A list of RESTful methods for which to enforce the constraint. Can be 'CREATE', 'UPDATE', or both. Not all Google Cloud
	// services support both methods. To see supported methods for each service, find the service in [Supported
	// services](https://cloud.google.com/resource-manager/docs/organization-policy/custom-constraint-supported-services).
	MethodTypes pulumi.StringArrayInput
	// Immutable. The name of the custom constraint. This is unique within the organization.
	Name                        pulumi.StringPtrInput
	OrgPolicyCustomConstraintId pulumi.StringPtrInput
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent pulumi.StringPtrInput
	// Immutable. The fully qualified name of the Google Cloud REST resource containing the object and field you want to
	// restrict. For example, 'container.googleapis.com/NodePool'.
	ResourceTypes pulumi.StringArrayInput
	Timeouts      OrgPolicyCustomConstraintTimeoutsPtrInput
	// Output only. The timestamp representing when the constraint was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (OrgPolicyCustomConstraintState) ElementType() reflect.Type {
	return reflect.TypeOf((*orgPolicyCustomConstraintState)(nil)).Elem()
}

type orgPolicyCustomConstraintArgs struct {
	// The action to take if the condition is met. Possible values: ["ALLOW", "DENY"]
	ActionType string `pulumi:"actionType"`
	// A CEL condition that refers to a supported service resource, for example 'resource.management.autoUpgrade == false'. For
	// details about CEL usage, see [Common Expression
	// Language](https://cloud.google.com/resource-manager/docs/organization-policy/creating-managing-custom-constraints#common_expression_language).
	Condition string `pulumi:"condition"`
	// A human-friendly description of the constraint to display as an error message when the policy is violated.
	Description *string `pulumi:"description"`
	// A human-friendly name for the constraint.
	DisplayName *string `pulumi:"displayName"`
	// A list of RESTful methods for which to enforce the constraint. Can be 'CREATE', 'UPDATE', or both. Not all Google Cloud
	// services support both methods. To see supported methods for each service, find the service in [Supported
	// services](https://cloud.google.com/resource-manager/docs/organization-policy/custom-constraint-supported-services).
	MethodTypes []string `pulumi:"methodTypes"`
	// Immutable. The name of the custom constraint. This is unique within the organization.
	Name                        *string `pulumi:"name"`
	OrgPolicyCustomConstraintId *string `pulumi:"orgPolicyCustomConstraintId"`
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent string `pulumi:"parent"`
	// Immutable. The fully qualified name of the Google Cloud REST resource containing the object and field you want to
	// restrict. For example, 'container.googleapis.com/NodePool'.
	ResourceTypes []string                           `pulumi:"resourceTypes"`
	Timeouts      *OrgPolicyCustomConstraintTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a OrgPolicyCustomConstraint resource.
type OrgPolicyCustomConstraintArgs struct {
	// The action to take if the condition is met. Possible values: ["ALLOW", "DENY"]
	ActionType pulumi.StringInput
	// A CEL condition that refers to a supported service resource, for example 'resource.management.autoUpgrade == false'. For
	// details about CEL usage, see [Common Expression
	// Language](https://cloud.google.com/resource-manager/docs/organization-policy/creating-managing-custom-constraints#common_expression_language).
	Condition pulumi.StringInput
	// A human-friendly description of the constraint to display as an error message when the policy is violated.
	Description pulumi.StringPtrInput
	// A human-friendly name for the constraint.
	DisplayName pulumi.StringPtrInput
	// A list of RESTful methods for which to enforce the constraint. Can be 'CREATE', 'UPDATE', or both. Not all Google Cloud
	// services support both methods. To see supported methods for each service, find the service in [Supported
	// services](https://cloud.google.com/resource-manager/docs/organization-policy/custom-constraint-supported-services).
	MethodTypes pulumi.StringArrayInput
	// Immutable. The name of the custom constraint. This is unique within the organization.
	Name                        pulumi.StringPtrInput
	OrgPolicyCustomConstraintId pulumi.StringPtrInput
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent pulumi.StringInput
	// Immutable. The fully qualified name of the Google Cloud REST resource containing the object and field you want to
	// restrict. For example, 'container.googleapis.com/NodePool'.
	ResourceTypes pulumi.StringArrayInput
	Timeouts      OrgPolicyCustomConstraintTimeoutsPtrInput
}

func (OrgPolicyCustomConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*orgPolicyCustomConstraintArgs)(nil)).Elem()
}

type OrgPolicyCustomConstraintInput interface {
	pulumi.Input

	ToOrgPolicyCustomConstraintOutput() OrgPolicyCustomConstraintOutput
	ToOrgPolicyCustomConstraintOutputWithContext(ctx context.Context) OrgPolicyCustomConstraintOutput
}

func (*OrgPolicyCustomConstraint) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgPolicyCustomConstraint)(nil)).Elem()
}

func (i *OrgPolicyCustomConstraint) ToOrgPolicyCustomConstraintOutput() OrgPolicyCustomConstraintOutput {
	return i.ToOrgPolicyCustomConstraintOutputWithContext(context.Background())
}

func (i *OrgPolicyCustomConstraint) ToOrgPolicyCustomConstraintOutputWithContext(ctx context.Context) OrgPolicyCustomConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgPolicyCustomConstraintOutput)
}

type OrgPolicyCustomConstraintOutput struct{ *pulumi.OutputState }

func (OrgPolicyCustomConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrgPolicyCustomConstraint)(nil)).Elem()
}

func (o OrgPolicyCustomConstraintOutput) ToOrgPolicyCustomConstraintOutput() OrgPolicyCustomConstraintOutput {
	return o
}

func (o OrgPolicyCustomConstraintOutput) ToOrgPolicyCustomConstraintOutputWithContext(ctx context.Context) OrgPolicyCustomConstraintOutput {
	return o
}

// The action to take if the condition is met. Possible values: ["ALLOW", "DENY"]
func (o OrgPolicyCustomConstraintOutput) ActionType() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringOutput { return v.ActionType }).(pulumi.StringOutput)
}

// A CEL condition that refers to a supported service resource, for example 'resource.management.autoUpgrade == false'. For
// details about CEL usage, see [Common Expression
// Language](https://cloud.google.com/resource-manager/docs/organization-policy/creating-managing-custom-constraints#common_expression_language).
func (o OrgPolicyCustomConstraintOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringOutput { return v.Condition }).(pulumi.StringOutput)
}

// A human-friendly description of the constraint to display as an error message when the policy is violated.
func (o OrgPolicyCustomConstraintOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A human-friendly name for the constraint.
func (o OrgPolicyCustomConstraintOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// A list of RESTful methods for which to enforce the constraint. Can be 'CREATE', 'UPDATE', or both. Not all Google Cloud
// services support both methods. To see supported methods for each service, find the service in [Supported
// services](https://cloud.google.com/resource-manager/docs/organization-policy/custom-constraint-supported-services).
func (o OrgPolicyCustomConstraintOutput) MethodTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringArrayOutput { return v.MethodTypes }).(pulumi.StringArrayOutput)
}

// Immutable. The name of the custom constraint. This is unique within the organization.
func (o OrgPolicyCustomConstraintOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o OrgPolicyCustomConstraintOutput) OrgPolicyCustomConstraintId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringOutput { return v.OrgPolicyCustomConstraintId }).(pulumi.StringOutput)
}

// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
func (o OrgPolicyCustomConstraintOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// Immutable. The fully qualified name of the Google Cloud REST resource containing the object and field you want to
// restrict. For example, 'container.googleapis.com/NodePool'.
func (o OrgPolicyCustomConstraintOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringArrayOutput { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

func (o OrgPolicyCustomConstraintOutput) Timeouts() OrgPolicyCustomConstraintTimeoutsPtrOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) OrgPolicyCustomConstraintTimeoutsPtrOutput { return v.Timeouts }).(OrgPolicyCustomConstraintTimeoutsPtrOutput)
}

// Output only. The timestamp representing when the constraint was last updated.
func (o OrgPolicyCustomConstraintOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrgPolicyCustomConstraint) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrgPolicyCustomConstraintInput)(nil)).Elem(), &OrgPolicyCustomConstraint{})
	pulumi.RegisterOutputType(OrgPolicyCustomConstraintOutput{})
}
