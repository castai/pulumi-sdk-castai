// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkServicesAuthzExtension struct {
	pulumi.CustomResourceState

	// The :authority header in the gRPC request sent from Envoy to the extension service.
	Authority pulumi.StringOutput `pulumi:"authority"`
	// The timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A human-readable description of the resource.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Determines how the proxy behaves if the call to the extension fails or times out. When set to TRUE, request or response
	// processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to
	// FALSE or the default setting of FALSE is used, one of the following happens: * If response headers have not been
	// delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by
	// configuring a custom error response in the load balancer. * If response headers have been delivered, then the HTTP
	// stream to the downstream client is reset.
	FailOpen pulumi.BoolOutput `pulumi:"failOpen"`
	// List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element
	// is a string indicating the header name.
	ForwardHeaders pulumi.StringArrayOutput `pulumi:"forwardHeaders"`
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
	// Possible values: ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringOutput `pulumi:"loadBalancingScheme"`
	// The location of the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the
	// ProcessingRequest message sent to the extension server. The metadata is available under the namespace
	// com.google.authz_extension.<resourceName>. The following variables are supported in the metadata Struct:
	// {forwarding_rule_id} - substituted with the forwarding rule's fully qualified resource name.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// Identifier. Name of the AuthzExtension resource.
	Name                            pulumi.StringOutput `pulumi:"name"`
	NetworkServicesAuthzExtensionId pulumi.StringOutput `pulumi:"networkServicesAuthzExtensionId"`
	Project                         pulumi.StringOutput `pulumi:"project"`
	// The reference to the service that runs the extension. To configure a callout extension, service must be a
	// fully-qualified reference to a [backend
	// service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or
	// https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
	Service pulumi.StringOutput `pulumi:"service"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput `pulumi:"terraformLabels"`
	// Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
	Timeout  pulumi.StringOutput                            `pulumi:"timeout"`
	Timeouts NetworkServicesAuthzExtensionTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The format of communication supported by the callout extension. Default value: "EXT_PROC_GRPC" Possible values:
	// ["WIRE_FORMAT_UNSPECIFIED", "EXT_PROC_GRPC"]
	WireFormat pulumi.StringPtrOutput `pulumi:"wireFormat"`
}

// NewNetworkServicesAuthzExtension registers a new resource with the given unique name, arguments, and options.
func NewNetworkServicesAuthzExtension(ctx *pulumi.Context,
	name string, args *NetworkServicesAuthzExtensionArgs, opts ...pulumi.ResourceOption) (*NetworkServicesAuthzExtension, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authority == nil {
		return nil, errors.New("invalid value for required argument 'Authority'")
	}
	if args.LoadBalancingScheme == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancingScheme'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.Timeout == nil {
		return nil, errors.New("invalid value for required argument 'Timeout'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkServicesAuthzExtension
	err = ctx.RegisterPackageResource("google-beta:index/networkServicesAuthzExtension:NetworkServicesAuthzExtension", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkServicesAuthzExtension gets an existing NetworkServicesAuthzExtension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkServicesAuthzExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkServicesAuthzExtensionState, opts ...pulumi.ResourceOption) (*NetworkServicesAuthzExtension, error) {
	var resource NetworkServicesAuthzExtension
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkServicesAuthzExtension:NetworkServicesAuthzExtension", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkServicesAuthzExtension resources.
type networkServicesAuthzExtensionState struct {
	// The :authority header in the gRPC request sent from Envoy to the extension service.
	Authority *string `pulumi:"authority"`
	// The timestamp when the resource was created.
	CreateTime *string `pulumi:"createTime"`
	// A human-readable description of the resource.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Determines how the proxy behaves if the call to the extension fails or times out. When set to TRUE, request or response
	// processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to
	// FALSE or the default setting of FALSE is used, one of the following happens: * If response headers have not been
	// delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by
	// configuring a custom error response in the load balancer. * If response headers have been delivered, then the HTTP
	// stream to the downstream client is reset.
	FailOpen *bool `pulumi:"failOpen"`
	// List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element
	// is a string indicating the header name.
	ForwardHeaders []string `pulumi:"forwardHeaders"`
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
	// Possible values: ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme *string `pulumi:"loadBalancingScheme"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the
	// ProcessingRequest message sent to the extension server. The metadata is available under the namespace
	// com.google.authz_extension.<resourceName>. The following variables are supported in the metadata Struct:
	// {forwarding_rule_id} - substituted with the forwarding rule's fully qualified resource name.
	Metadata map[string]string `pulumi:"metadata"`
	// Identifier. Name of the AuthzExtension resource.
	Name                            *string `pulumi:"name"`
	NetworkServicesAuthzExtensionId *string `pulumi:"networkServicesAuthzExtensionId"`
	Project                         *string `pulumi:"project"`
	// The reference to the service that runs the extension. To configure a callout extension, service must be a
	// fully-qualified reference to a [backend
	// service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or
	// https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
	Service *string `pulumi:"service"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string `pulumi:"terraformLabels"`
	// Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
	Timeout  *string                                `pulumi:"timeout"`
	Timeouts *NetworkServicesAuthzExtensionTimeouts `pulumi:"timeouts"`
	// The timestamp when the resource was updated.
	UpdateTime *string `pulumi:"updateTime"`
	// The format of communication supported by the callout extension. Default value: "EXT_PROC_GRPC" Possible values:
	// ["WIRE_FORMAT_UNSPECIFIED", "EXT_PROC_GRPC"]
	WireFormat *string `pulumi:"wireFormat"`
}

type NetworkServicesAuthzExtensionState struct {
	// The :authority header in the gRPC request sent from Envoy to the extension service.
	Authority pulumi.StringPtrInput
	// The timestamp when the resource was created.
	CreateTime pulumi.StringPtrInput
	// A human-readable description of the resource.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Determines how the proxy behaves if the call to the extension fails or times out. When set to TRUE, request or response
	// processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to
	// FALSE or the default setting of FALSE is used, one of the following happens: * If response headers have not been
	// delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by
	// configuring a custom error response in the load balancer. * If response headers have been delivered, then the HTTP
	// stream to the downstream client is reset.
	FailOpen pulumi.BoolPtrInput
	// List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element
	// is a string indicating the header name.
	ForwardHeaders pulumi.StringArrayInput
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
	// Possible values: ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the
	// ProcessingRequest message sent to the extension server. The metadata is available under the namespace
	// com.google.authz_extension.<resourceName>. The following variables are supported in the metadata Struct:
	// {forwarding_rule_id} - substituted with the forwarding rule's fully qualified resource name.
	Metadata pulumi.StringMapInput
	// Identifier. Name of the AuthzExtension resource.
	Name                            pulumi.StringPtrInput
	NetworkServicesAuthzExtensionId pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	// The reference to the service that runs the extension. To configure a callout extension, service must be a
	// fully-qualified reference to a [backend
	// service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or
	// https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
	Service pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	// Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
	Timeout  pulumi.StringPtrInput
	Timeouts NetworkServicesAuthzExtensionTimeoutsPtrInput
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringPtrInput
	// The format of communication supported by the callout extension. Default value: "EXT_PROC_GRPC" Possible values:
	// ["WIRE_FORMAT_UNSPECIFIED", "EXT_PROC_GRPC"]
	WireFormat pulumi.StringPtrInput
}

func (NetworkServicesAuthzExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesAuthzExtensionState)(nil)).Elem()
}

type networkServicesAuthzExtensionArgs struct {
	// The :authority header in the gRPC request sent from Envoy to the extension service.
	Authority string `pulumi:"authority"`
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// Determines how the proxy behaves if the call to the extension fails or times out. When set to TRUE, request or response
	// processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to
	// FALSE or the default setting of FALSE is used, one of the following happens: * If response headers have not been
	// delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by
	// configuring a custom error response in the load balancer. * If response headers have been delivered, then the HTTP
	// stream to the downstream client is reset.
	FailOpen *bool `pulumi:"failOpen"`
	// List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element
	// is a string indicating the header name.
	ForwardHeaders []string `pulumi:"forwardHeaders"`
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
	// Possible values: ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme string `pulumi:"loadBalancingScheme"`
	// The location of the resource.
	Location string `pulumi:"location"`
	// The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the
	// ProcessingRequest message sent to the extension server. The metadata is available under the namespace
	// com.google.authz_extension.<resourceName>. The following variables are supported in the metadata Struct:
	// {forwarding_rule_id} - substituted with the forwarding rule's fully qualified resource name.
	Metadata map[string]string `pulumi:"metadata"`
	// Identifier. Name of the AuthzExtension resource.
	Name                            *string `pulumi:"name"`
	NetworkServicesAuthzExtensionId *string `pulumi:"networkServicesAuthzExtensionId"`
	Project                         *string `pulumi:"project"`
	// The reference to the service that runs the extension. To configure a callout extension, service must be a
	// fully-qualified reference to a [backend
	// service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or
	// https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
	Service string `pulumi:"service"`
	// Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
	Timeout  string                                 `pulumi:"timeout"`
	Timeouts *NetworkServicesAuthzExtensionTimeouts `pulumi:"timeouts"`
	// The format of communication supported by the callout extension. Default value: "EXT_PROC_GRPC" Possible values:
	// ["WIRE_FORMAT_UNSPECIFIED", "EXT_PROC_GRPC"]
	WireFormat *string `pulumi:"wireFormat"`
}

// The set of arguments for constructing a NetworkServicesAuthzExtension resource.
type NetworkServicesAuthzExtensionArgs struct {
	// The :authority header in the gRPC request sent from Envoy to the extension service.
	Authority pulumi.StringInput
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// Determines how the proxy behaves if the call to the extension fails or times out. When set to TRUE, request or response
	// processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to
	// FALSE or the default setting of FALSE is used, one of the following happens: * If response headers have not been
	// delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by
	// configuring a custom error response in the load balancer. * If response headers have been delivered, then the HTTP
	// stream to the downstream client is reset.
	FailOpen pulumi.BoolPtrInput
	// List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element
	// is a string indicating the header name.
	ForwardHeaders pulumi.StringArrayInput
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
	// more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
	// Possible values: ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringInput
	// The location of the resource.
	Location pulumi.StringInput
	// The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the
	// ProcessingRequest message sent to the extension server. The metadata is available under the namespace
	// com.google.authz_extension.<resourceName>. The following variables are supported in the metadata Struct:
	// {forwarding_rule_id} - substituted with the forwarding rule's fully qualified resource name.
	Metadata pulumi.StringMapInput
	// Identifier. Name of the AuthzExtension resource.
	Name                            pulumi.StringPtrInput
	NetworkServicesAuthzExtensionId pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	// The reference to the service that runs the extension. To configure a callout extension, service must be a
	// fully-qualified reference to a [backend
	// service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or
	// https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
	Service pulumi.StringInput
	// Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
	Timeout  pulumi.StringInput
	Timeouts NetworkServicesAuthzExtensionTimeoutsPtrInput
	// The format of communication supported by the callout extension. Default value: "EXT_PROC_GRPC" Possible values:
	// ["WIRE_FORMAT_UNSPECIFIED", "EXT_PROC_GRPC"]
	WireFormat pulumi.StringPtrInput
}

func (NetworkServicesAuthzExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesAuthzExtensionArgs)(nil)).Elem()
}

type NetworkServicesAuthzExtensionInput interface {
	pulumi.Input

	ToNetworkServicesAuthzExtensionOutput() NetworkServicesAuthzExtensionOutput
	ToNetworkServicesAuthzExtensionOutputWithContext(ctx context.Context) NetworkServicesAuthzExtensionOutput
}

func (*NetworkServicesAuthzExtension) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesAuthzExtension)(nil)).Elem()
}

func (i *NetworkServicesAuthzExtension) ToNetworkServicesAuthzExtensionOutput() NetworkServicesAuthzExtensionOutput {
	return i.ToNetworkServicesAuthzExtensionOutputWithContext(context.Background())
}

func (i *NetworkServicesAuthzExtension) ToNetworkServicesAuthzExtensionOutputWithContext(ctx context.Context) NetworkServicesAuthzExtensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicesAuthzExtensionOutput)
}

type NetworkServicesAuthzExtensionOutput struct{ *pulumi.OutputState }

func (NetworkServicesAuthzExtensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesAuthzExtension)(nil)).Elem()
}

func (o NetworkServicesAuthzExtensionOutput) ToNetworkServicesAuthzExtensionOutput() NetworkServicesAuthzExtensionOutput {
	return o
}

func (o NetworkServicesAuthzExtensionOutput) ToNetworkServicesAuthzExtensionOutputWithContext(ctx context.Context) NetworkServicesAuthzExtensionOutput {
	return o
}

// The :authority header in the gRPC request sent from Envoy to the extension service.
func (o NetworkServicesAuthzExtensionOutput) Authority() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.Authority }).(pulumi.StringOutput)
}

// The timestamp when the resource was created.
func (o NetworkServicesAuthzExtensionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A human-readable description of the resource.
func (o NetworkServicesAuthzExtensionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkServicesAuthzExtensionOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Determines how the proxy behaves if the call to the extension fails or times out. When set to TRUE, request or response
// processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to
// FALSE or the default setting of FALSE is used, one of the following happens: * If response headers have not been
// delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by
// configuring a custom error response in the load balancer. * If response headers have been delivered, then the HTTP
// stream to the downstream client is reset.
func (o NetworkServicesAuthzExtensionOutput) FailOpen() pulumi.BoolOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.BoolOutput { return v.FailOpen }).(pulumi.BoolOutput)
}

// List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element
// is a string indicating the header name.
func (o NetworkServicesAuthzExtensionOutput) ForwardHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringArrayOutput { return v.ForwardHeaders }).(pulumi.StringArrayOutput)
}

// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o NetworkServicesAuthzExtensionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme. For
// more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
// Possible values: ["INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
func (o NetworkServicesAuthzExtensionOutput) LoadBalancingScheme() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.LoadBalancingScheme }).(pulumi.StringOutput)
}

// The location of the resource.
func (o NetworkServicesAuthzExtensionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The metadata provided here is included as part of the metadata_context (of type google.protobuf.Struct) in the
// ProcessingRequest message sent to the extension server. The metadata is available under the namespace
// com.google.authz_extension.<resourceName>. The following variables are supported in the metadata Struct:
// {forwarding_rule_id} - substituted with the forwarding rule's fully qualified resource name.
func (o NetworkServicesAuthzExtensionOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// Identifier. Name of the AuthzExtension resource.
func (o NetworkServicesAuthzExtensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkServicesAuthzExtensionOutput) NetworkServicesAuthzExtensionId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.NetworkServicesAuthzExtensionId }).(pulumi.StringOutput)
}

func (o NetworkServicesAuthzExtensionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The reference to the service that runs the extension. To configure a callout extension, service must be a
// fully-qualified reference to a [backend
// service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or
// https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
func (o NetworkServicesAuthzExtensionOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkServicesAuthzExtensionOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

// Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
func (o NetworkServicesAuthzExtensionOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.Timeout }).(pulumi.StringOutput)
}

func (o NetworkServicesAuthzExtensionOutput) Timeouts() NetworkServicesAuthzExtensionTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) NetworkServicesAuthzExtensionTimeoutsPtrOutput {
		return v.Timeouts
	}).(NetworkServicesAuthzExtensionTimeoutsPtrOutput)
}

// The timestamp when the resource was updated.
func (o NetworkServicesAuthzExtensionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The format of communication supported by the callout extension. Default value: "EXT_PROC_GRPC" Possible values:
// ["WIRE_FORMAT_UNSPECIFIED", "EXT_PROC_GRPC"]
func (o NetworkServicesAuthzExtensionOutput) WireFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesAuthzExtension) pulumi.StringPtrOutput { return v.WireFormat }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicesAuthzExtensionInput)(nil)).Elem(), &NetworkServicesAuthzExtension{})
	pulumi.RegisterOutputType(NetworkServicesAuthzExtensionOutput{})
}
