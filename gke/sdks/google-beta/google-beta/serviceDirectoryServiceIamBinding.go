// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceDirectoryServiceIamBinding struct {
	pulumi.CustomResourceState

	Condition                           ServiceDirectoryServiceIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                                pulumi.StringOutput                                 `pulumi:"etag"`
	Members                             pulumi.StringArrayOutput                            `pulumi:"members"`
	Name                                pulumi.StringOutput                                 `pulumi:"name"`
	Role                                pulumi.StringOutput                                 `pulumi:"role"`
	ServiceDirectoryServiceIamBindingId pulumi.StringOutput                                 `pulumi:"serviceDirectoryServiceIamBindingId"`
}

// NewServiceDirectoryServiceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewServiceDirectoryServiceIamBinding(ctx *pulumi.Context,
	name string, args *ServiceDirectoryServiceIamBindingArgs, opts ...pulumi.ResourceOption) (*ServiceDirectoryServiceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceDirectoryServiceIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/serviceDirectoryServiceIamBinding:ServiceDirectoryServiceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceDirectoryServiceIamBinding gets an existing ServiceDirectoryServiceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceDirectoryServiceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceDirectoryServiceIamBindingState, opts ...pulumi.ResourceOption) (*ServiceDirectoryServiceIamBinding, error) {
	var resource ServiceDirectoryServiceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/serviceDirectoryServiceIamBinding:ServiceDirectoryServiceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceDirectoryServiceIamBinding resources.
type serviceDirectoryServiceIamBindingState struct {
	Condition                           *ServiceDirectoryServiceIamBindingCondition `pulumi:"condition"`
	Etag                                *string                                     `pulumi:"etag"`
	Members                             []string                                    `pulumi:"members"`
	Name                                *string                                     `pulumi:"name"`
	Role                                *string                                     `pulumi:"role"`
	ServiceDirectoryServiceIamBindingId *string                                     `pulumi:"serviceDirectoryServiceIamBindingId"`
}

type ServiceDirectoryServiceIamBindingState struct {
	Condition                           ServiceDirectoryServiceIamBindingConditionPtrInput
	Etag                                pulumi.StringPtrInput
	Members                             pulumi.StringArrayInput
	Name                                pulumi.StringPtrInput
	Role                                pulumi.StringPtrInput
	ServiceDirectoryServiceIamBindingId pulumi.StringPtrInput
}

func (ServiceDirectoryServiceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryServiceIamBindingState)(nil)).Elem()
}

type serviceDirectoryServiceIamBindingArgs struct {
	Condition                           *ServiceDirectoryServiceIamBindingCondition `pulumi:"condition"`
	Members                             []string                                    `pulumi:"members"`
	Name                                *string                                     `pulumi:"name"`
	Role                                string                                      `pulumi:"role"`
	ServiceDirectoryServiceIamBindingId *string                                     `pulumi:"serviceDirectoryServiceIamBindingId"`
}

// The set of arguments for constructing a ServiceDirectoryServiceIamBinding resource.
type ServiceDirectoryServiceIamBindingArgs struct {
	Condition                           ServiceDirectoryServiceIamBindingConditionPtrInput
	Members                             pulumi.StringArrayInput
	Name                                pulumi.StringPtrInput
	Role                                pulumi.StringInput
	ServiceDirectoryServiceIamBindingId pulumi.StringPtrInput
}

func (ServiceDirectoryServiceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryServiceIamBindingArgs)(nil)).Elem()
}

type ServiceDirectoryServiceIamBindingInput interface {
	pulumi.Input

	ToServiceDirectoryServiceIamBindingOutput() ServiceDirectoryServiceIamBindingOutput
	ToServiceDirectoryServiceIamBindingOutputWithContext(ctx context.Context) ServiceDirectoryServiceIamBindingOutput
}

func (*ServiceDirectoryServiceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryServiceIamBinding)(nil)).Elem()
}

func (i *ServiceDirectoryServiceIamBinding) ToServiceDirectoryServiceIamBindingOutput() ServiceDirectoryServiceIamBindingOutput {
	return i.ToServiceDirectoryServiceIamBindingOutputWithContext(context.Background())
}

func (i *ServiceDirectoryServiceIamBinding) ToServiceDirectoryServiceIamBindingOutputWithContext(ctx context.Context) ServiceDirectoryServiceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDirectoryServiceIamBindingOutput)
}

type ServiceDirectoryServiceIamBindingOutput struct{ *pulumi.OutputState }

func (ServiceDirectoryServiceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryServiceIamBinding)(nil)).Elem()
}

func (o ServiceDirectoryServiceIamBindingOutput) ToServiceDirectoryServiceIamBindingOutput() ServiceDirectoryServiceIamBindingOutput {
	return o
}

func (o ServiceDirectoryServiceIamBindingOutput) ToServiceDirectoryServiceIamBindingOutputWithContext(ctx context.Context) ServiceDirectoryServiceIamBindingOutput {
	return o
}

func (o ServiceDirectoryServiceIamBindingOutput) Condition() ServiceDirectoryServiceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamBinding) ServiceDirectoryServiceIamBindingConditionPtrOutput {
		return v.Condition
	}).(ServiceDirectoryServiceIamBindingConditionPtrOutput)
}

func (o ServiceDirectoryServiceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o ServiceDirectoryServiceIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamBindingOutput) ServiceDirectoryServiceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamBinding) pulumi.StringOutput {
		return v.ServiceDirectoryServiceIamBindingId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDirectoryServiceIamBindingInput)(nil)).Elem(), &ServiceDirectoryServiceIamBinding{})
	pulumi.RegisterOutputType(ServiceDirectoryServiceIamBindingOutput{})
}
