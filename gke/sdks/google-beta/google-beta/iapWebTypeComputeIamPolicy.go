// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IapWebTypeComputeIamPolicy struct {
	pulumi.CustomResourceState

	Etag                         pulumi.StringOutput `pulumi:"etag"`
	IapWebTypeComputeIamPolicyId pulumi.StringOutput `pulumi:"iapWebTypeComputeIamPolicyId"`
	PolicyData                   pulumi.StringOutput `pulumi:"policyData"`
	Project                      pulumi.StringOutput `pulumi:"project"`
}

// NewIapWebTypeComputeIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewIapWebTypeComputeIamPolicy(ctx *pulumi.Context,
	name string, args *IapWebTypeComputeIamPolicyArgs, opts ...pulumi.ResourceOption) (*IapWebTypeComputeIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IapWebTypeComputeIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/iapWebTypeComputeIamPolicy:IapWebTypeComputeIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIapWebTypeComputeIamPolicy gets an existing IapWebTypeComputeIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIapWebTypeComputeIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IapWebTypeComputeIamPolicyState, opts ...pulumi.ResourceOption) (*IapWebTypeComputeIamPolicy, error) {
	var resource IapWebTypeComputeIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/iapWebTypeComputeIamPolicy:IapWebTypeComputeIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IapWebTypeComputeIamPolicy resources.
type iapWebTypeComputeIamPolicyState struct {
	Etag                         *string `pulumi:"etag"`
	IapWebTypeComputeIamPolicyId *string `pulumi:"iapWebTypeComputeIamPolicyId"`
	PolicyData                   *string `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
}

type IapWebTypeComputeIamPolicyState struct {
	Etag                         pulumi.StringPtrInput
	IapWebTypeComputeIamPolicyId pulumi.StringPtrInput
	PolicyData                   pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
}

func (IapWebTypeComputeIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*iapWebTypeComputeIamPolicyState)(nil)).Elem()
}

type iapWebTypeComputeIamPolicyArgs struct {
	IapWebTypeComputeIamPolicyId *string `pulumi:"iapWebTypeComputeIamPolicyId"`
	PolicyData                   string  `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
}

// The set of arguments for constructing a IapWebTypeComputeIamPolicy resource.
type IapWebTypeComputeIamPolicyArgs struct {
	IapWebTypeComputeIamPolicyId pulumi.StringPtrInput
	PolicyData                   pulumi.StringInput
	Project                      pulumi.StringPtrInput
}

func (IapWebTypeComputeIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iapWebTypeComputeIamPolicyArgs)(nil)).Elem()
}

type IapWebTypeComputeIamPolicyInput interface {
	pulumi.Input

	ToIapWebTypeComputeIamPolicyOutput() IapWebTypeComputeIamPolicyOutput
	ToIapWebTypeComputeIamPolicyOutputWithContext(ctx context.Context) IapWebTypeComputeIamPolicyOutput
}

func (*IapWebTypeComputeIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**IapWebTypeComputeIamPolicy)(nil)).Elem()
}

func (i *IapWebTypeComputeIamPolicy) ToIapWebTypeComputeIamPolicyOutput() IapWebTypeComputeIamPolicyOutput {
	return i.ToIapWebTypeComputeIamPolicyOutputWithContext(context.Background())
}

func (i *IapWebTypeComputeIamPolicy) ToIapWebTypeComputeIamPolicyOutputWithContext(ctx context.Context) IapWebTypeComputeIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapWebTypeComputeIamPolicyOutput)
}

type IapWebTypeComputeIamPolicyOutput struct{ *pulumi.OutputState }

func (IapWebTypeComputeIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapWebTypeComputeIamPolicy)(nil)).Elem()
}

func (o IapWebTypeComputeIamPolicyOutput) ToIapWebTypeComputeIamPolicyOutput() IapWebTypeComputeIamPolicyOutput {
	return o
}

func (o IapWebTypeComputeIamPolicyOutput) ToIapWebTypeComputeIamPolicyOutputWithContext(ctx context.Context) IapWebTypeComputeIamPolicyOutput {
	return o
}

func (o IapWebTypeComputeIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamPolicyOutput) IapWebTypeComputeIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamPolicy) pulumi.StringOutput { return v.IapWebTypeComputeIamPolicyId }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IapWebTypeComputeIamPolicyInput)(nil)).Elem(), &IapWebTypeComputeIamPolicy{})
	pulumi.RegisterOutputType(IapWebTypeComputeIamPolicyOutput{})
}
