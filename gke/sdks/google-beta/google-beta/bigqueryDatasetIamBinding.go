// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryDatasetIamBinding struct {
	pulumi.CustomResourceState

	BigqueryDatasetIamBindingId pulumi.StringOutput                         `pulumi:"bigqueryDatasetIamBindingId"`
	Condition                   BigqueryDatasetIamBindingConditionPtrOutput `pulumi:"condition"`
	DatasetId                   pulumi.StringOutput                         `pulumi:"datasetId"`
	Etag                        pulumi.StringOutput                         `pulumi:"etag"`
	Members                     pulumi.StringArrayOutput                    `pulumi:"members"`
	Project                     pulumi.StringOutput                         `pulumi:"project"`
	Role                        pulumi.StringOutput                         `pulumi:"role"`
}

// NewBigqueryDatasetIamBinding registers a new resource with the given unique name, arguments, and options.
func NewBigqueryDatasetIamBinding(ctx *pulumi.Context,
	name string, args *BigqueryDatasetIamBindingArgs, opts ...pulumi.ResourceOption) (*BigqueryDatasetIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatasetId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryDatasetIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/bigqueryDatasetIamBinding:BigqueryDatasetIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryDatasetIamBinding gets an existing BigqueryDatasetIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryDatasetIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryDatasetIamBindingState, opts ...pulumi.ResourceOption) (*BigqueryDatasetIamBinding, error) {
	var resource BigqueryDatasetIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/bigqueryDatasetIamBinding:BigqueryDatasetIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryDatasetIamBinding resources.
type bigqueryDatasetIamBindingState struct {
	BigqueryDatasetIamBindingId *string                             `pulumi:"bigqueryDatasetIamBindingId"`
	Condition                   *BigqueryDatasetIamBindingCondition `pulumi:"condition"`
	DatasetId                   *string                             `pulumi:"datasetId"`
	Etag                        *string                             `pulumi:"etag"`
	Members                     []string                            `pulumi:"members"`
	Project                     *string                             `pulumi:"project"`
	Role                        *string                             `pulumi:"role"`
}

type BigqueryDatasetIamBindingState struct {
	BigqueryDatasetIamBindingId pulumi.StringPtrInput
	Condition                   BigqueryDatasetIamBindingConditionPtrInput
	DatasetId                   pulumi.StringPtrInput
	Etag                        pulumi.StringPtrInput
	Members                     pulumi.StringArrayInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringPtrInput
}

func (BigqueryDatasetIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryDatasetIamBindingState)(nil)).Elem()
}

type bigqueryDatasetIamBindingArgs struct {
	BigqueryDatasetIamBindingId *string                             `pulumi:"bigqueryDatasetIamBindingId"`
	Condition                   *BigqueryDatasetIamBindingCondition `pulumi:"condition"`
	DatasetId                   string                              `pulumi:"datasetId"`
	Members                     []string                            `pulumi:"members"`
	Project                     *string                             `pulumi:"project"`
	Role                        string                              `pulumi:"role"`
}

// The set of arguments for constructing a BigqueryDatasetIamBinding resource.
type BigqueryDatasetIamBindingArgs struct {
	BigqueryDatasetIamBindingId pulumi.StringPtrInput
	Condition                   BigqueryDatasetIamBindingConditionPtrInput
	DatasetId                   pulumi.StringInput
	Members                     pulumi.StringArrayInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringInput
}

func (BigqueryDatasetIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryDatasetIamBindingArgs)(nil)).Elem()
}

type BigqueryDatasetIamBindingInput interface {
	pulumi.Input

	ToBigqueryDatasetIamBindingOutput() BigqueryDatasetIamBindingOutput
	ToBigqueryDatasetIamBindingOutputWithContext(ctx context.Context) BigqueryDatasetIamBindingOutput
}

func (*BigqueryDatasetIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryDatasetIamBinding)(nil)).Elem()
}

func (i *BigqueryDatasetIamBinding) ToBigqueryDatasetIamBindingOutput() BigqueryDatasetIamBindingOutput {
	return i.ToBigqueryDatasetIamBindingOutputWithContext(context.Background())
}

func (i *BigqueryDatasetIamBinding) ToBigqueryDatasetIamBindingOutputWithContext(ctx context.Context) BigqueryDatasetIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryDatasetIamBindingOutput)
}

type BigqueryDatasetIamBindingOutput struct{ *pulumi.OutputState }

func (BigqueryDatasetIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryDatasetIamBinding)(nil)).Elem()
}

func (o BigqueryDatasetIamBindingOutput) ToBigqueryDatasetIamBindingOutput() BigqueryDatasetIamBindingOutput {
	return o
}

func (o BigqueryDatasetIamBindingOutput) ToBigqueryDatasetIamBindingOutputWithContext(ctx context.Context) BigqueryDatasetIamBindingOutput {
	return o
}

func (o BigqueryDatasetIamBindingOutput) BigqueryDatasetIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatasetIamBinding) pulumi.StringOutput { return v.BigqueryDatasetIamBindingId }).(pulumi.StringOutput)
}

func (o BigqueryDatasetIamBindingOutput) Condition() BigqueryDatasetIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *BigqueryDatasetIamBinding) BigqueryDatasetIamBindingConditionPtrOutput { return v.Condition }).(BigqueryDatasetIamBindingConditionPtrOutput)
}

func (o BigqueryDatasetIamBindingOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatasetIamBinding) pulumi.StringOutput { return v.DatasetId }).(pulumi.StringOutput)
}

func (o BigqueryDatasetIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatasetIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigqueryDatasetIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BigqueryDatasetIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o BigqueryDatasetIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatasetIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigqueryDatasetIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatasetIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryDatasetIamBindingInput)(nil)).Elem(), &BigqueryDatasetIamBinding{})
	pulumi.RegisterOutputType(BigqueryDatasetIamBindingOutput{})
}
