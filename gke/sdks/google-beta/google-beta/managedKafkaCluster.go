// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ManagedKafkaCluster struct {
	pulumi.CustomResourceState

	// A capacity configuration of a Kafka cluster.
	CapacityConfig ManagedKafkaClusterCapacityConfigOutput `pulumi:"capacityConfig"`
	// The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63
	// characters long, and match the regular expression 'a-z?' to comply with RFC 1035. This value is structured like:
	// 'my-cluster-id'.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The time when the cluster was created.
	CreateTime      pulumi.StringOutput    `pulumi:"createTime"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Configuration properties for a Kafka cluster deployed to Google Cloud Platform.
	GcpConfig ManagedKafkaClusterGcpConfigOutput `pulumi:"gcpConfig"`
	// List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-),
	// underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase
	// characters, and numbers. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of
	// supported locations.
	Location              pulumi.StringOutput `pulumi:"location"`
	ManagedKafkaClusterId pulumi.StringOutput `pulumi:"managedKafkaClusterId"`
	// The name of the cluster. Structured like: 'projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID'.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Defines rebalancing behavior of a Kafka cluster.
	RebalanceConfig ManagedKafkaClusterRebalanceConfigPtrOutput `pulumi:"rebalanceConfig"`
	// The current state of the cluster. Possible values: 'STATE_UNSPECIFIED', 'CREATING', 'ACTIVE', 'DELETING'.
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput               `pulumi:"terraformLabels"`
	Timeouts        ManagedKafkaClusterTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time when the cluster was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewManagedKafkaCluster registers a new resource with the given unique name, arguments, and options.
func NewManagedKafkaCluster(ctx *pulumi.Context,
	name string, args *ManagedKafkaClusterArgs, opts ...pulumi.ResourceOption) (*ManagedKafkaCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CapacityConfig == nil {
		return nil, errors.New("invalid value for required argument 'CapacityConfig'")
	}
	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.GcpConfig == nil {
		return nil, errors.New("invalid value for required argument 'GcpConfig'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ManagedKafkaCluster
	err = ctx.RegisterPackageResource("google-beta:index/managedKafkaCluster:ManagedKafkaCluster", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedKafkaCluster gets an existing ManagedKafkaCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedKafkaCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedKafkaClusterState, opts ...pulumi.ResourceOption) (*ManagedKafkaCluster, error) {
	var resource ManagedKafkaCluster
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/managedKafkaCluster:ManagedKafkaCluster", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedKafkaCluster resources.
type managedKafkaClusterState struct {
	// A capacity configuration of a Kafka cluster.
	CapacityConfig *ManagedKafkaClusterCapacityConfig `pulumi:"capacityConfig"`
	// The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63
	// characters long, and match the regular expression 'a-z?' to comply with RFC 1035. This value is structured like:
	// 'my-cluster-id'.
	ClusterId *string `pulumi:"clusterId"`
	// The time when the cluster was created.
	CreateTime      *string           `pulumi:"createTime"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Configuration properties for a Kafka cluster deployed to Google Cloud Platform.
	GcpConfig *ManagedKafkaClusterGcpConfig `pulumi:"gcpConfig"`
	// List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-),
	// underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase
	// characters, and numbers. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of
	// supported locations.
	Location              *string `pulumi:"location"`
	ManagedKafkaClusterId *string `pulumi:"managedKafkaClusterId"`
	// The name of the cluster. Structured like: 'projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Defines rebalancing behavior of a Kafka cluster.
	RebalanceConfig *ManagedKafkaClusterRebalanceConfig `pulumi:"rebalanceConfig"`
	// The current state of the cluster. Possible values: 'STATE_UNSPECIFIED', 'CREATING', 'ACTIVE', 'DELETING'.
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string            `pulumi:"terraformLabels"`
	Timeouts        *ManagedKafkaClusterTimeouts `pulumi:"timeouts"`
	// The time when the cluster was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ManagedKafkaClusterState struct {
	// A capacity configuration of a Kafka cluster.
	CapacityConfig ManagedKafkaClusterCapacityConfigPtrInput
	// The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63
	// characters long, and match the regular expression 'a-z?' to comply with RFC 1035. This value is structured like:
	// 'my-cluster-id'.
	ClusterId pulumi.StringPtrInput
	// The time when the cluster was created.
	CreateTime      pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Configuration properties for a Kafka cluster deployed to Google Cloud Platform.
	GcpConfig ManagedKafkaClusterGcpConfigPtrInput
	// List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-),
	// underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase
	// characters, and numbers. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of
	// supported locations.
	Location              pulumi.StringPtrInput
	ManagedKafkaClusterId pulumi.StringPtrInput
	// The name of the cluster. Structured like: 'projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Defines rebalancing behavior of a Kafka cluster.
	RebalanceConfig ManagedKafkaClusterRebalanceConfigPtrInput
	// The current state of the cluster. Possible values: 'STATE_UNSPECIFIED', 'CREATING', 'ACTIVE', 'DELETING'.
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ManagedKafkaClusterTimeoutsPtrInput
	// The time when the cluster was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (ManagedKafkaClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedKafkaClusterState)(nil)).Elem()
}

type managedKafkaClusterArgs struct {
	// A capacity configuration of a Kafka cluster.
	CapacityConfig ManagedKafkaClusterCapacityConfig `pulumi:"capacityConfig"`
	// The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63
	// characters long, and match the regular expression 'a-z?' to comply with RFC 1035. This value is structured like:
	// 'my-cluster-id'.
	ClusterId string `pulumi:"clusterId"`
	// Configuration properties for a Kafka cluster deployed to Google Cloud Platform.
	GcpConfig ManagedKafkaClusterGcpConfig `pulumi:"gcpConfig"`
	// List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-),
	// underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase
	// characters, and numbers. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of
	// supported locations.
	Location              string  `pulumi:"location"`
	ManagedKafkaClusterId *string `pulumi:"managedKafkaClusterId"`
	Project               *string `pulumi:"project"`
	// Defines rebalancing behavior of a Kafka cluster.
	RebalanceConfig *ManagedKafkaClusterRebalanceConfig `pulumi:"rebalanceConfig"`
	Timeouts        *ManagedKafkaClusterTimeouts        `pulumi:"timeouts"`
}

// The set of arguments for constructing a ManagedKafkaCluster resource.
type ManagedKafkaClusterArgs struct {
	// A capacity configuration of a Kafka cluster.
	CapacityConfig ManagedKafkaClusterCapacityConfigInput
	// The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63
	// characters long, and match the regular expression 'a-z?' to comply with RFC 1035. This value is structured like:
	// 'my-cluster-id'.
	ClusterId pulumi.StringInput
	// Configuration properties for a Kafka cluster deployed to Google Cloud Platform.
	GcpConfig ManagedKafkaClusterGcpConfigInput
	// List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-),
	// underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase
	// characters, and numbers. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of
	// supported locations.
	Location              pulumi.StringInput
	ManagedKafkaClusterId pulumi.StringPtrInput
	Project               pulumi.StringPtrInput
	// Defines rebalancing behavior of a Kafka cluster.
	RebalanceConfig ManagedKafkaClusterRebalanceConfigPtrInput
	Timeouts        ManagedKafkaClusterTimeoutsPtrInput
}

func (ManagedKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedKafkaClusterArgs)(nil)).Elem()
}

type ManagedKafkaClusterInput interface {
	pulumi.Input

	ToManagedKafkaClusterOutput() ManagedKafkaClusterOutput
	ToManagedKafkaClusterOutputWithContext(ctx context.Context) ManagedKafkaClusterOutput
}

func (*ManagedKafkaCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedKafkaCluster)(nil)).Elem()
}

func (i *ManagedKafkaCluster) ToManagedKafkaClusterOutput() ManagedKafkaClusterOutput {
	return i.ToManagedKafkaClusterOutputWithContext(context.Background())
}

func (i *ManagedKafkaCluster) ToManagedKafkaClusterOutputWithContext(ctx context.Context) ManagedKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedKafkaClusterOutput)
}

type ManagedKafkaClusterOutput struct{ *pulumi.OutputState }

func (ManagedKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedKafkaCluster)(nil)).Elem()
}

func (o ManagedKafkaClusterOutput) ToManagedKafkaClusterOutput() ManagedKafkaClusterOutput {
	return o
}

func (o ManagedKafkaClusterOutput) ToManagedKafkaClusterOutputWithContext(ctx context.Context) ManagedKafkaClusterOutput {
	return o
}

// A capacity configuration of a Kafka cluster.
func (o ManagedKafkaClusterOutput) CapacityConfig() ManagedKafkaClusterCapacityConfigOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) ManagedKafkaClusterCapacityConfigOutput { return v.CapacityConfig }).(ManagedKafkaClusterCapacityConfigOutput)
}

// The ID to use for the cluster, which will become the final component of the cluster's name. The ID must be 1-63
// characters long, and match the regular expression 'a-z?' to comply with RFC 1035. This value is structured like:
// 'my-cluster-id'.
func (o ManagedKafkaClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// The time when the cluster was created.
func (o ManagedKafkaClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o ManagedKafkaClusterOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Configuration properties for a Kafka cluster deployed to Google Cloud Platform.
func (o ManagedKafkaClusterOutput) GcpConfig() ManagedKafkaClusterGcpConfigOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) ManagedKafkaClusterGcpConfigOutput { return v.GcpConfig }).(ManagedKafkaClusterGcpConfigOutput)
}

// List of label KEY=VALUE pairs to add. Keys must start with a lowercase character and contain only hyphens (-),
// underscores ( ), lowercase characters, and numbers. Values must contain only hyphens (-), underscores ( ), lowercase
// characters, and numbers. **Note**: This field is non-authoritative, and will only manage the labels present in your
// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o ManagedKafkaClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// ID of the location of the Kafka resource. See https://cloud.google.com/managed-kafka/docs/locations for a list of
// supported locations.
func (o ManagedKafkaClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o ManagedKafkaClusterOutput) ManagedKafkaClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringOutput { return v.ManagedKafkaClusterId }).(pulumi.StringOutput)
}

// The name of the cluster. Structured like: 'projects/PROJECT_ID/locations/LOCATION/clusters/CLUSTER_ID'.
func (o ManagedKafkaClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ManagedKafkaClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Defines rebalancing behavior of a Kafka cluster.
func (o ManagedKafkaClusterOutput) RebalanceConfig() ManagedKafkaClusterRebalanceConfigPtrOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) ManagedKafkaClusterRebalanceConfigPtrOutput { return v.RebalanceConfig }).(ManagedKafkaClusterRebalanceConfigPtrOutput)
}

// The current state of the cluster. Possible values: 'STATE_UNSPECIFIED', 'CREATING', 'ACTIVE', 'DELETING'.
func (o ManagedKafkaClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ManagedKafkaClusterOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ManagedKafkaClusterOutput) Timeouts() ManagedKafkaClusterTimeoutsPtrOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) ManagedKafkaClusterTimeoutsPtrOutput { return v.Timeouts }).(ManagedKafkaClusterTimeoutsPtrOutput)
}

// The time when the cluster was last updated.
func (o ManagedKafkaClusterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedKafkaCluster) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedKafkaClusterInput)(nil)).Elem(), &ManagedKafkaCluster{})
	pulumi.RegisterOutputType(ManagedKafkaClusterOutput{})
}
