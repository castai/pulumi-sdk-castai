// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ParameterManagerParameterVersion struct {
	pulumi.CustomResourceState

	// The time at which the Parameter Version was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// The resource name of the Parameter Version. Format:
	// 'projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}'
	Name pulumi.StringOutput `pulumi:"name"`
	// Parameter Manager Parameter resource.
	Parameter pulumi.StringOutput `pulumi:"parameter"`
	// The Parameter data.
	ParameterData                      pulumi.StringOutput `pulumi:"parameterData"`
	ParameterManagerParameterVersionId pulumi.StringOutput `pulumi:"parameterManagerParameterVersionId"`
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	ParameterVersionId pulumi.StringOutput                               `pulumi:"parameterVersionId"`
	Timeouts           ParameterManagerParameterVersionTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time at which the Parameter Version was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewParameterManagerParameterVersion registers a new resource with the given unique name, arguments, and options.
func NewParameterManagerParameterVersion(ctx *pulumi.Context,
	name string, args *ParameterManagerParameterVersionArgs, opts ...pulumi.ResourceOption) (*ParameterManagerParameterVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parameter == nil {
		return nil, errors.New("invalid value for required argument 'Parameter'")
	}
	if args.ParameterData == nil {
		return nil, errors.New("invalid value for required argument 'ParameterData'")
	}
	if args.ParameterVersionId == nil {
		return nil, errors.New("invalid value for required argument 'ParameterVersionId'")
	}
	if args.ParameterData != nil {
		args.ParameterData = pulumi.ToSecret(args.ParameterData).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"parameterData",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ParameterManagerParameterVersion
	err = ctx.RegisterPackageResource("google-beta:index/parameterManagerParameterVersion:ParameterManagerParameterVersion", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetParameterManagerParameterVersion gets an existing ParameterManagerParameterVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetParameterManagerParameterVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ParameterManagerParameterVersionState, opts ...pulumi.ResourceOption) (*ParameterManagerParameterVersion, error) {
	var resource ParameterManagerParameterVersion
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/parameterManagerParameterVersion:ParameterManagerParameterVersion", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ParameterManagerParameterVersion resources.
type parameterManagerParameterVersionState struct {
	// The time at which the Parameter Version was created.
	CreateTime *string `pulumi:"createTime"`
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled *bool `pulumi:"disabled"`
	// The resource name of the Parameter Version. Format:
	// 'projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}'
	Name *string `pulumi:"name"`
	// Parameter Manager Parameter resource.
	Parameter *string `pulumi:"parameter"`
	// The Parameter data.
	ParameterData                      *string `pulumi:"parameterData"`
	ParameterManagerParameterVersionId *string `pulumi:"parameterManagerParameterVersionId"`
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	ParameterVersionId *string                                   `pulumi:"parameterVersionId"`
	Timeouts           *ParameterManagerParameterVersionTimeouts `pulumi:"timeouts"`
	// The time at which the Parameter Version was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ParameterManagerParameterVersionState struct {
	// The time at which the Parameter Version was created.
	CreateTime pulumi.StringPtrInput
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled pulumi.BoolPtrInput
	// The resource name of the Parameter Version. Format:
	// 'projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}'
	Name pulumi.StringPtrInput
	// Parameter Manager Parameter resource.
	Parameter pulumi.StringPtrInput
	// The Parameter data.
	ParameterData                      pulumi.StringPtrInput
	ParameterManagerParameterVersionId pulumi.StringPtrInput
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	ParameterVersionId pulumi.StringPtrInput
	Timeouts           ParameterManagerParameterVersionTimeoutsPtrInput
	// The time at which the Parameter Version was updated.
	UpdateTime pulumi.StringPtrInput
}

func (ParameterManagerParameterVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterManagerParameterVersionState)(nil)).Elem()
}

type parameterManagerParameterVersionArgs struct {
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled *bool `pulumi:"disabled"`
	// Parameter Manager Parameter resource.
	Parameter string `pulumi:"parameter"`
	// The Parameter data.
	ParameterData                      string  `pulumi:"parameterData"`
	ParameterManagerParameterVersionId *string `pulumi:"parameterManagerParameterVersionId"`
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	ParameterVersionId string                                    `pulumi:"parameterVersionId"`
	Timeouts           *ParameterManagerParameterVersionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ParameterManagerParameterVersion resource.
type ParameterManagerParameterVersionArgs struct {
	// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
	Disabled pulumi.BoolPtrInput
	// Parameter Manager Parameter resource.
	Parameter pulumi.StringInput
	// The Parameter data.
	ParameterData                      pulumi.StringInput
	ParameterManagerParameterVersionId pulumi.StringPtrInput
	// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
	ParameterVersionId pulumi.StringInput
	Timeouts           ParameterManagerParameterVersionTimeoutsPtrInput
}

func (ParameterManagerParameterVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterManagerParameterVersionArgs)(nil)).Elem()
}

type ParameterManagerParameterVersionInput interface {
	pulumi.Input

	ToParameterManagerParameterVersionOutput() ParameterManagerParameterVersionOutput
	ToParameterManagerParameterVersionOutputWithContext(ctx context.Context) ParameterManagerParameterVersionOutput
}

func (*ParameterManagerParameterVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterManagerParameterVersion)(nil)).Elem()
}

func (i *ParameterManagerParameterVersion) ToParameterManagerParameterVersionOutput() ParameterManagerParameterVersionOutput {
	return i.ToParameterManagerParameterVersionOutputWithContext(context.Background())
}

func (i *ParameterManagerParameterVersion) ToParameterManagerParameterVersionOutputWithContext(ctx context.Context) ParameterManagerParameterVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterManagerParameterVersionOutput)
}

type ParameterManagerParameterVersionOutput struct{ *pulumi.OutputState }

func (ParameterManagerParameterVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterManagerParameterVersion)(nil)).Elem()
}

func (o ParameterManagerParameterVersionOutput) ToParameterManagerParameterVersionOutput() ParameterManagerParameterVersionOutput {
	return o
}

func (o ParameterManagerParameterVersionOutput) ToParameterManagerParameterVersionOutputWithContext(ctx context.Context) ParameterManagerParameterVersionOutput {
	return o
}

// The time at which the Parameter Version was created.
func (o ParameterManagerParameterVersionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameterVersion) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The current state of Parameter Version. This field is only applicable for updating Parameter Version.
func (o ParameterManagerParameterVersionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ParameterManagerParameterVersion) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The resource name of the Parameter Version. Format:
// 'projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}'
func (o ParameterManagerParameterVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameterVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Parameter Manager Parameter resource.
func (o ParameterManagerParameterVersionOutput) Parameter() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameterVersion) pulumi.StringOutput { return v.Parameter }).(pulumi.StringOutput)
}

// The Parameter data.
func (o ParameterManagerParameterVersionOutput) ParameterData() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameterVersion) pulumi.StringOutput { return v.ParameterData }).(pulumi.StringOutput)
}

func (o ParameterManagerParameterVersionOutput) ParameterManagerParameterVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameterVersion) pulumi.StringOutput {
		return v.ParameterManagerParameterVersionId
	}).(pulumi.StringOutput)
}

// Version ID of the Parameter Version Resource. This must be unique within the Parameter.
func (o ParameterManagerParameterVersionOutput) ParameterVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameterVersion) pulumi.StringOutput { return v.ParameterVersionId }).(pulumi.StringOutput)
}

func (o ParameterManagerParameterVersionOutput) Timeouts() ParameterManagerParameterVersionTimeoutsPtrOutput {
	return o.ApplyT(func(v *ParameterManagerParameterVersion) ParameterManagerParameterVersionTimeoutsPtrOutput {
		return v.Timeouts
	}).(ParameterManagerParameterVersionTimeoutsPtrOutput)
}

// The time at which the Parameter Version was updated.
func (o ParameterManagerParameterVersionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameterVersion) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterManagerParameterVersionInput)(nil)).Elem(), &ParameterManagerParameterVersion{})
	pulumi.RegisterOutputType(ParameterManagerParameterVersionOutput{})
}
