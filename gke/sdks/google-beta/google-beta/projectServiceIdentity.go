// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProjectServiceIdentity struct {
	pulumi.CustomResourceState

	Email pulumi.StringOutput `pulumi:"email"`
	// The Identity of the Google managed service account in the form 'serviceAccount:{email}'. This value is often used to
	// refer to the service account in order to grant IAM permissions.
	Member                   pulumi.StringOutput                     `pulumi:"member"`
	Project                  pulumi.StringOutput                     `pulumi:"project"`
	ProjectServiceIdentityId pulumi.StringOutput                     `pulumi:"projectServiceIdentityId"`
	Service                  pulumi.StringOutput                     `pulumi:"service"`
	Timeouts                 ProjectServiceIdentityTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewProjectServiceIdentity registers a new resource with the given unique name, arguments, and options.
func NewProjectServiceIdentity(ctx *pulumi.Context,
	name string, args *ProjectServiceIdentityArgs, opts ...pulumi.ResourceOption) (*ProjectServiceIdentity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ProjectServiceIdentity
	err = ctx.RegisterPackageResource("google-beta:index/projectServiceIdentity:ProjectServiceIdentity", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectServiceIdentity gets an existing ProjectServiceIdentity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectServiceIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectServiceIdentityState, opts ...pulumi.ResourceOption) (*ProjectServiceIdentity, error) {
	var resource ProjectServiceIdentity
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/projectServiceIdentity:ProjectServiceIdentity", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectServiceIdentity resources.
type projectServiceIdentityState struct {
	Email *string `pulumi:"email"`
	// The Identity of the Google managed service account in the form 'serviceAccount:{email}'. This value is often used to
	// refer to the service account in order to grant IAM permissions.
	Member                   *string                         `pulumi:"member"`
	Project                  *string                         `pulumi:"project"`
	ProjectServiceIdentityId *string                         `pulumi:"projectServiceIdentityId"`
	Service                  *string                         `pulumi:"service"`
	Timeouts                 *ProjectServiceIdentityTimeouts `pulumi:"timeouts"`
}

type ProjectServiceIdentityState struct {
	Email pulumi.StringPtrInput
	// The Identity of the Google managed service account in the form 'serviceAccount:{email}'. This value is often used to
	// refer to the service account in order to grant IAM permissions.
	Member                   pulumi.StringPtrInput
	Project                  pulumi.StringPtrInput
	ProjectServiceIdentityId pulumi.StringPtrInput
	Service                  pulumi.StringPtrInput
	Timeouts                 ProjectServiceIdentityTimeoutsPtrInput
}

func (ProjectServiceIdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectServiceIdentityState)(nil)).Elem()
}

type projectServiceIdentityArgs struct {
	Project                  *string                         `pulumi:"project"`
	ProjectServiceIdentityId *string                         `pulumi:"projectServiceIdentityId"`
	Service                  string                          `pulumi:"service"`
	Timeouts                 *ProjectServiceIdentityTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ProjectServiceIdentity resource.
type ProjectServiceIdentityArgs struct {
	Project                  pulumi.StringPtrInput
	ProjectServiceIdentityId pulumi.StringPtrInput
	Service                  pulumi.StringInput
	Timeouts                 ProjectServiceIdentityTimeoutsPtrInput
}

func (ProjectServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectServiceIdentityArgs)(nil)).Elem()
}

type ProjectServiceIdentityInput interface {
	pulumi.Input

	ToProjectServiceIdentityOutput() ProjectServiceIdentityOutput
	ToProjectServiceIdentityOutputWithContext(ctx context.Context) ProjectServiceIdentityOutput
}

func (*ProjectServiceIdentity) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectServiceIdentity)(nil)).Elem()
}

func (i *ProjectServiceIdentity) ToProjectServiceIdentityOutput() ProjectServiceIdentityOutput {
	return i.ToProjectServiceIdentityOutputWithContext(context.Background())
}

func (i *ProjectServiceIdentity) ToProjectServiceIdentityOutputWithContext(ctx context.Context) ProjectServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectServiceIdentityOutput)
}

type ProjectServiceIdentityOutput struct{ *pulumi.OutputState }

func (ProjectServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectServiceIdentity)(nil)).Elem()
}

func (o ProjectServiceIdentityOutput) ToProjectServiceIdentityOutput() ProjectServiceIdentityOutput {
	return o
}

func (o ProjectServiceIdentityOutput) ToProjectServiceIdentityOutputWithContext(ctx context.Context) ProjectServiceIdentityOutput {
	return o
}

func (o ProjectServiceIdentityOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectServiceIdentity) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// The Identity of the Google managed service account in the form 'serviceAccount:{email}'. This value is often used to
// refer to the service account in order to grant IAM permissions.
func (o ProjectServiceIdentityOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectServiceIdentity) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ProjectServiceIdentityOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectServiceIdentity) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ProjectServiceIdentityOutput) ProjectServiceIdentityId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectServiceIdentity) pulumi.StringOutput { return v.ProjectServiceIdentityId }).(pulumi.StringOutput)
}

func (o ProjectServiceIdentityOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *ProjectServiceIdentity) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func (o ProjectServiceIdentityOutput) Timeouts() ProjectServiceIdentityTimeoutsPtrOutput {
	return o.ApplyT(func(v *ProjectServiceIdentity) ProjectServiceIdentityTimeoutsPtrOutput { return v.Timeouts }).(ProjectServiceIdentityTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectServiceIdentityInput)(nil)).Elem(), &ProjectServiceIdentity{})
	pulumi.RegisterOutputType(ProjectServiceIdentityOutput{})
}
