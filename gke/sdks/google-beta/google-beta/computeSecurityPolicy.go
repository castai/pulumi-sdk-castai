// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeSecurityPolicy struct {
	pulumi.CustomResourceState

	// Adaptive Protection Config of this security policy.
	AdaptiveProtectionConfig ComputeSecurityPolicyAdaptiveProtectionConfigPtrOutput `pulumi:"adaptiveProtectionConfig"`
	// Advanced Options Config of this security policy.
	AdvancedOptionsConfig   ComputeSecurityPolicyAdvancedOptionsConfigPtrOutput `pulumi:"advancedOptionsConfig"`
	ComputeSecurityPolicyId pulumi.StringOutput                                 `pulumi:"computeSecurityPolicyId"`
	// An optional description of this security policy. Max size is 2048.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Fingerprint of this resource.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// The name of the security policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// reCAPTCHA configuration options to be applied for the security policy.
	RecaptchaOptionsConfig ComputeSecurityPolicyRecaptchaOptionsConfigPtrOutput `pulumi:"recaptchaOptionsConfig"`
	// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and
	// match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
	Rules ComputeSecurityPolicyRuleTypeArrayOutput `pulumi:"rules"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput                    `pulumi:"selfLink"`
	Timeouts ComputeSecurityPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type indicates the intended use of the security policy. CLOUD_ARMOR - Cloud Armor backend security policies can be
	// configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin
	// servers. CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests
	// targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter
	// requests before the request is served from Google's cache.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewComputeSecurityPolicy registers a new resource with the given unique name, arguments, and options.
func NewComputeSecurityPolicy(ctx *pulumi.Context,
	name string, args *ComputeSecurityPolicyArgs, opts ...pulumi.ResourceOption) (*ComputeSecurityPolicy, error) {
	if args == nil {
		args = &ComputeSecurityPolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeSecurityPolicy
	err = ctx.RegisterPackageResource("google-beta:index/computeSecurityPolicy:ComputeSecurityPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeSecurityPolicy gets an existing ComputeSecurityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeSecurityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeSecurityPolicyState, opts ...pulumi.ResourceOption) (*ComputeSecurityPolicy, error) {
	var resource ComputeSecurityPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeSecurityPolicy:ComputeSecurityPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeSecurityPolicy resources.
type computeSecurityPolicyState struct {
	// Adaptive Protection Config of this security policy.
	AdaptiveProtectionConfig *ComputeSecurityPolicyAdaptiveProtectionConfig `pulumi:"adaptiveProtectionConfig"`
	// Advanced Options Config of this security policy.
	AdvancedOptionsConfig   *ComputeSecurityPolicyAdvancedOptionsConfig `pulumi:"advancedOptionsConfig"`
	ComputeSecurityPolicyId *string                                     `pulumi:"computeSecurityPolicyId"`
	// An optional description of this security policy. Max size is 2048.
	Description *string `pulumi:"description"`
	// Fingerprint of this resource.
	Fingerprint *string `pulumi:"fingerprint"`
	// The name of the security policy.
	Name *string `pulumi:"name"`
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// reCAPTCHA configuration options to be applied for the security policy.
	RecaptchaOptionsConfig *ComputeSecurityPolicyRecaptchaOptionsConfig `pulumi:"recaptchaOptionsConfig"`
	// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and
	// match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
	Rules []ComputeSecurityPolicyRuleType `pulumi:"rules"`
	// The URI of the created resource.
	SelfLink *string                        `pulumi:"selfLink"`
	Timeouts *ComputeSecurityPolicyTimeouts `pulumi:"timeouts"`
	// The type indicates the intended use of the security policy. CLOUD_ARMOR - Cloud Armor backend security policies can be
	// configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin
	// servers. CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests
	// targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter
	// requests before the request is served from Google's cache.
	Type *string `pulumi:"type"`
}

type ComputeSecurityPolicyState struct {
	// Adaptive Protection Config of this security policy.
	AdaptiveProtectionConfig ComputeSecurityPolicyAdaptiveProtectionConfigPtrInput
	// Advanced Options Config of this security policy.
	AdvancedOptionsConfig   ComputeSecurityPolicyAdvancedOptionsConfigPtrInput
	ComputeSecurityPolicyId pulumi.StringPtrInput
	// An optional description of this security policy. Max size is 2048.
	Description pulumi.StringPtrInput
	// Fingerprint of this resource.
	Fingerprint pulumi.StringPtrInput
	// The name of the security policy.
	Name pulumi.StringPtrInput
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// reCAPTCHA configuration options to be applied for the security policy.
	RecaptchaOptionsConfig ComputeSecurityPolicyRecaptchaOptionsConfigPtrInput
	// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and
	// match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
	Rules ComputeSecurityPolicyRuleTypeArrayInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
	Timeouts ComputeSecurityPolicyTimeoutsPtrInput
	// The type indicates the intended use of the security policy. CLOUD_ARMOR - Cloud Armor backend security policies can be
	// configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin
	// servers. CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests
	// targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter
	// requests before the request is served from Google's cache.
	Type pulumi.StringPtrInput
}

func (ComputeSecurityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSecurityPolicyState)(nil)).Elem()
}

type computeSecurityPolicyArgs struct {
	// Adaptive Protection Config of this security policy.
	AdaptiveProtectionConfig *ComputeSecurityPolicyAdaptiveProtectionConfig `pulumi:"adaptiveProtectionConfig"`
	// Advanced Options Config of this security policy.
	AdvancedOptionsConfig   *ComputeSecurityPolicyAdvancedOptionsConfig `pulumi:"advancedOptionsConfig"`
	ComputeSecurityPolicyId *string                                     `pulumi:"computeSecurityPolicyId"`
	// An optional description of this security policy. Max size is 2048.
	Description *string `pulumi:"description"`
	// The name of the security policy.
	Name *string `pulumi:"name"`
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// reCAPTCHA configuration options to be applied for the security policy.
	RecaptchaOptionsConfig *ComputeSecurityPolicyRecaptchaOptionsConfig `pulumi:"recaptchaOptionsConfig"`
	// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and
	// match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
	Rules    []ComputeSecurityPolicyRuleType `pulumi:"rules"`
	Timeouts *ComputeSecurityPolicyTimeouts  `pulumi:"timeouts"`
	// The type indicates the intended use of the security policy. CLOUD_ARMOR - Cloud Armor backend security policies can be
	// configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin
	// servers. CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests
	// targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter
	// requests before the request is served from Google's cache.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a ComputeSecurityPolicy resource.
type ComputeSecurityPolicyArgs struct {
	// Adaptive Protection Config of this security policy.
	AdaptiveProtectionConfig ComputeSecurityPolicyAdaptiveProtectionConfigPtrInput
	// Advanced Options Config of this security policy.
	AdvancedOptionsConfig   ComputeSecurityPolicyAdvancedOptionsConfigPtrInput
	ComputeSecurityPolicyId pulumi.StringPtrInput
	// An optional description of this security policy. Max size is 2048.
	Description pulumi.StringPtrInput
	// The name of the security policy.
	Name pulumi.StringPtrInput
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// reCAPTCHA configuration options to be applied for the security policy.
	RecaptchaOptionsConfig ComputeSecurityPolicyRecaptchaOptionsConfigPtrInput
	// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and
	// match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
	Rules    ComputeSecurityPolicyRuleTypeArrayInput
	Timeouts ComputeSecurityPolicyTimeoutsPtrInput
	// The type indicates the intended use of the security policy. CLOUD_ARMOR - Cloud Armor backend security policies can be
	// configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin
	// servers. CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests
	// targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter
	// requests before the request is served from Google's cache.
	Type pulumi.StringPtrInput
}

func (ComputeSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSecurityPolicyArgs)(nil)).Elem()
}

type ComputeSecurityPolicyInput interface {
	pulumi.Input

	ToComputeSecurityPolicyOutput() ComputeSecurityPolicyOutput
	ToComputeSecurityPolicyOutputWithContext(ctx context.Context) ComputeSecurityPolicyOutput
}

func (*ComputeSecurityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSecurityPolicy)(nil)).Elem()
}

func (i *ComputeSecurityPolicy) ToComputeSecurityPolicyOutput() ComputeSecurityPolicyOutput {
	return i.ToComputeSecurityPolicyOutputWithContext(context.Background())
}

func (i *ComputeSecurityPolicy) ToComputeSecurityPolicyOutputWithContext(ctx context.Context) ComputeSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeSecurityPolicyOutput)
}

type ComputeSecurityPolicyOutput struct{ *pulumi.OutputState }

func (ComputeSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSecurityPolicy)(nil)).Elem()
}

func (o ComputeSecurityPolicyOutput) ToComputeSecurityPolicyOutput() ComputeSecurityPolicyOutput {
	return o
}

func (o ComputeSecurityPolicyOutput) ToComputeSecurityPolicyOutputWithContext(ctx context.Context) ComputeSecurityPolicyOutput {
	return o
}

// Adaptive Protection Config of this security policy.
func (o ComputeSecurityPolicyOutput) AdaptiveProtectionConfig() ComputeSecurityPolicyAdaptiveProtectionConfigPtrOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) ComputeSecurityPolicyAdaptiveProtectionConfigPtrOutput {
		return v.AdaptiveProtectionConfig
	}).(ComputeSecurityPolicyAdaptiveProtectionConfigPtrOutput)
}

// Advanced Options Config of this security policy.
func (o ComputeSecurityPolicyOutput) AdvancedOptionsConfig() ComputeSecurityPolicyAdvancedOptionsConfigPtrOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) ComputeSecurityPolicyAdvancedOptionsConfigPtrOutput {
		return v.AdvancedOptionsConfig
	}).(ComputeSecurityPolicyAdvancedOptionsConfigPtrOutput)
}

func (o ComputeSecurityPolicyOutput) ComputeSecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) pulumi.StringOutput { return v.ComputeSecurityPolicyId }).(pulumi.StringOutput)
}

// An optional description of this security policy. Max size is 2048.
func (o ComputeSecurityPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Fingerprint of this resource.
func (o ComputeSecurityPolicyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// The name of the security policy.
func (o ComputeSecurityPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project in which the resource belongs. If it is not provided, the provider project is used.
func (o ComputeSecurityPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// reCAPTCHA configuration options to be applied for the security policy.
func (o ComputeSecurityPolicyOutput) RecaptchaOptionsConfig() ComputeSecurityPolicyRecaptchaOptionsConfigPtrOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) ComputeSecurityPolicyRecaptchaOptionsConfigPtrOutput {
		return v.RecaptchaOptionsConfig
	}).(ComputeSecurityPolicyRecaptchaOptionsConfigPtrOutput)
}

// The set of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and
// match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
func (o ComputeSecurityPolicyOutput) Rules() ComputeSecurityPolicyRuleTypeArrayOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) ComputeSecurityPolicyRuleTypeArrayOutput { return v.Rules }).(ComputeSecurityPolicyRuleTypeArrayOutput)
}

// The URI of the created resource.
func (o ComputeSecurityPolicyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

func (o ComputeSecurityPolicyOutput) Timeouts() ComputeSecurityPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) ComputeSecurityPolicyTimeoutsPtrOutput { return v.Timeouts }).(ComputeSecurityPolicyTimeoutsPtrOutput)
}

// The type indicates the intended use of the security policy. CLOUD_ARMOR - Cloud Armor backend security policies can be
// configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin
// servers. CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests
// targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter
// requests before the request is served from Google's cache.
func (o ComputeSecurityPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSecurityPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeSecurityPolicyInput)(nil)).Elem(), &ComputeSecurityPolicy{})
	pulumi.RegisterOutputType(ComputeSecurityPolicyOutput{})
}
