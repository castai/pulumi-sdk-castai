// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionBackendServiceIamMember struct {
	pulumi.CustomResourceState

	ComputeRegionBackendServiceIamMemberId pulumi.StringOutput                                    `pulumi:"computeRegionBackendServiceIamMemberId"`
	Condition                              ComputeRegionBackendServiceIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                                   pulumi.StringOutput                                    `pulumi:"etag"`
	Member                                 pulumi.StringOutput                                    `pulumi:"member"`
	Name                                   pulumi.StringOutput                                    `pulumi:"name"`
	Project                                pulumi.StringOutput                                    `pulumi:"project"`
	Region                                 pulumi.StringOutput                                    `pulumi:"region"`
	Role                                   pulumi.StringOutput                                    `pulumi:"role"`
}

// NewComputeRegionBackendServiceIamMember registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionBackendServiceIamMember(ctx *pulumi.Context,
	name string, args *ComputeRegionBackendServiceIamMemberArgs, opts ...pulumi.ResourceOption) (*ComputeRegionBackendServiceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionBackendServiceIamMember
	err = ctx.RegisterPackageResource("google-beta:index/computeRegionBackendServiceIamMember:ComputeRegionBackendServiceIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionBackendServiceIamMember gets an existing ComputeRegionBackendServiceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionBackendServiceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionBackendServiceIamMemberState, opts ...pulumi.ResourceOption) (*ComputeRegionBackendServiceIamMember, error) {
	var resource ComputeRegionBackendServiceIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeRegionBackendServiceIamMember:ComputeRegionBackendServiceIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionBackendServiceIamMember resources.
type computeRegionBackendServiceIamMemberState struct {
	ComputeRegionBackendServiceIamMemberId *string                                        `pulumi:"computeRegionBackendServiceIamMemberId"`
	Condition                              *ComputeRegionBackendServiceIamMemberCondition `pulumi:"condition"`
	Etag                                   *string                                        `pulumi:"etag"`
	Member                                 *string                                        `pulumi:"member"`
	Name                                   *string                                        `pulumi:"name"`
	Project                                *string                                        `pulumi:"project"`
	Region                                 *string                                        `pulumi:"region"`
	Role                                   *string                                        `pulumi:"role"`
}

type ComputeRegionBackendServiceIamMemberState struct {
	ComputeRegionBackendServiceIamMemberId pulumi.StringPtrInput
	Condition                              ComputeRegionBackendServiceIamMemberConditionPtrInput
	Etag                                   pulumi.StringPtrInput
	Member                                 pulumi.StringPtrInput
	Name                                   pulumi.StringPtrInput
	Project                                pulumi.StringPtrInput
	Region                                 pulumi.StringPtrInput
	Role                                   pulumi.StringPtrInput
}

func (ComputeRegionBackendServiceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionBackendServiceIamMemberState)(nil)).Elem()
}

type computeRegionBackendServiceIamMemberArgs struct {
	ComputeRegionBackendServiceIamMemberId *string                                        `pulumi:"computeRegionBackendServiceIamMemberId"`
	Condition                              *ComputeRegionBackendServiceIamMemberCondition `pulumi:"condition"`
	Member                                 string                                         `pulumi:"member"`
	Name                                   *string                                        `pulumi:"name"`
	Project                                *string                                        `pulumi:"project"`
	Region                                 *string                                        `pulumi:"region"`
	Role                                   string                                         `pulumi:"role"`
}

// The set of arguments for constructing a ComputeRegionBackendServiceIamMember resource.
type ComputeRegionBackendServiceIamMemberArgs struct {
	ComputeRegionBackendServiceIamMemberId pulumi.StringPtrInput
	Condition                              ComputeRegionBackendServiceIamMemberConditionPtrInput
	Member                                 pulumi.StringInput
	Name                                   pulumi.StringPtrInput
	Project                                pulumi.StringPtrInput
	Region                                 pulumi.StringPtrInput
	Role                                   pulumi.StringInput
}

func (ComputeRegionBackendServiceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionBackendServiceIamMemberArgs)(nil)).Elem()
}

type ComputeRegionBackendServiceIamMemberInput interface {
	pulumi.Input

	ToComputeRegionBackendServiceIamMemberOutput() ComputeRegionBackendServiceIamMemberOutput
	ToComputeRegionBackendServiceIamMemberOutputWithContext(ctx context.Context) ComputeRegionBackendServiceIamMemberOutput
}

func (*ComputeRegionBackendServiceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionBackendServiceIamMember)(nil)).Elem()
}

func (i *ComputeRegionBackendServiceIamMember) ToComputeRegionBackendServiceIamMemberOutput() ComputeRegionBackendServiceIamMemberOutput {
	return i.ToComputeRegionBackendServiceIamMemberOutputWithContext(context.Background())
}

func (i *ComputeRegionBackendServiceIamMember) ToComputeRegionBackendServiceIamMemberOutputWithContext(ctx context.Context) ComputeRegionBackendServiceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionBackendServiceIamMemberOutput)
}

type ComputeRegionBackendServiceIamMemberOutput struct{ *pulumi.OutputState }

func (ComputeRegionBackendServiceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionBackendServiceIamMember)(nil)).Elem()
}

func (o ComputeRegionBackendServiceIamMemberOutput) ToComputeRegionBackendServiceIamMemberOutput() ComputeRegionBackendServiceIamMemberOutput {
	return o
}

func (o ComputeRegionBackendServiceIamMemberOutput) ToComputeRegionBackendServiceIamMemberOutputWithContext(ctx context.Context) ComputeRegionBackendServiceIamMemberOutput {
	return o
}

func (o ComputeRegionBackendServiceIamMemberOutput) ComputeRegionBackendServiceIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamMember) pulumi.StringOutput {
		return v.ComputeRegionBackendServiceIamMemberId
	}).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamMemberOutput) Condition() ComputeRegionBackendServiceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamMember) ComputeRegionBackendServiceIamMemberConditionPtrOutput {
		return v.Condition
	}).(ComputeRegionBackendServiceIamMemberConditionPtrOutput)
}

func (o ComputeRegionBackendServiceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionBackendServiceIamMemberInput)(nil)).Elem(), &ComputeRegionBackendServiceIamMember{})
	pulumi.RegisterOutputType(ComputeRegionBackendServiceIamMemberOutput{})
}
