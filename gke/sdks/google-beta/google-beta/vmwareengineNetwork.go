// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VmwareengineNetwork struct {
	pulumi.CustomResourceState

	// User-provided description for this VMware Engine network.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The location where the VMwareEngineNetwork should reside.
	Location pulumi.StringOutput `pulumi:"location"`
	// The ID of the VMwareEngineNetwork.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// State of the VMware Engine network.
	State    pulumi.StringOutput                  `pulumi:"state"`
	Timeouts VmwareengineNetworkTimeoutsPtrOutput `pulumi:"timeouts"`
	// VMware Engine network type. Possible values: ["LEGACY", "STANDARD"]
	Type pulumi.StringOutput `pulumi:"type"`
	// System-generated unique identifier for the resource.
	Uid                   pulumi.StringOutput `pulumi:"uid"`
	VmwareengineNetworkId pulumi.StringOutput `pulumi:"vmwareengineNetworkId"`
	// VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects, the internet,
	// and other Google Cloud services.
	VpcNetworks VmwareengineNetworkVpcNetworkArrayOutput `pulumi:"vpcNetworks"`
}

// NewVmwareengineNetwork registers a new resource with the given unique name, arguments, and options.
func NewVmwareengineNetwork(ctx *pulumi.Context,
	name string, args *VmwareengineNetworkArgs, opts ...pulumi.ResourceOption) (*VmwareengineNetwork, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VmwareengineNetwork
	err = ctx.RegisterPackageResource("google-beta:index/vmwareengineNetwork:VmwareengineNetwork", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVmwareengineNetwork gets an existing VmwareengineNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVmwareengineNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VmwareengineNetworkState, opts ...pulumi.ResourceOption) (*VmwareengineNetwork, error) {
	var resource VmwareengineNetwork
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vmwareengineNetwork:VmwareengineNetwork", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VmwareengineNetwork resources.
type vmwareengineNetworkState struct {
	// User-provided description for this VMware Engine network.
	Description *string `pulumi:"description"`
	// The location where the VMwareEngineNetwork should reside.
	Location *string `pulumi:"location"`
	// The ID of the VMwareEngineNetwork.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// State of the VMware Engine network.
	State    *string                      `pulumi:"state"`
	Timeouts *VmwareengineNetworkTimeouts `pulumi:"timeouts"`
	// VMware Engine network type. Possible values: ["LEGACY", "STANDARD"]
	Type *string `pulumi:"type"`
	// System-generated unique identifier for the resource.
	Uid                   *string `pulumi:"uid"`
	VmwareengineNetworkId *string `pulumi:"vmwareengineNetworkId"`
	// VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects, the internet,
	// and other Google Cloud services.
	VpcNetworks []VmwareengineNetworkVpcNetwork `pulumi:"vpcNetworks"`
}

type VmwareengineNetworkState struct {
	// User-provided description for this VMware Engine network.
	Description pulumi.StringPtrInput
	// The location where the VMwareEngineNetwork should reside.
	Location pulumi.StringPtrInput
	// The ID of the VMwareEngineNetwork.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// State of the VMware Engine network.
	State    pulumi.StringPtrInput
	Timeouts VmwareengineNetworkTimeoutsPtrInput
	// VMware Engine network type. Possible values: ["LEGACY", "STANDARD"]
	Type pulumi.StringPtrInput
	// System-generated unique identifier for the resource.
	Uid                   pulumi.StringPtrInput
	VmwareengineNetworkId pulumi.StringPtrInput
	// VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects, the internet,
	// and other Google Cloud services.
	VpcNetworks VmwareengineNetworkVpcNetworkArrayInput
}

func (VmwareengineNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmwareengineNetworkState)(nil)).Elem()
}

type vmwareengineNetworkArgs struct {
	// User-provided description for this VMware Engine network.
	Description *string `pulumi:"description"`
	// The location where the VMwareEngineNetwork should reside.
	Location string `pulumi:"location"`
	// The ID of the VMwareEngineNetwork.
	Name     *string                      `pulumi:"name"`
	Project  *string                      `pulumi:"project"`
	Timeouts *VmwareengineNetworkTimeouts `pulumi:"timeouts"`
	// VMware Engine network type. Possible values: ["LEGACY", "STANDARD"]
	Type                  string  `pulumi:"type"`
	VmwareengineNetworkId *string `pulumi:"vmwareengineNetworkId"`
}

// The set of arguments for constructing a VmwareengineNetwork resource.
type VmwareengineNetworkArgs struct {
	// User-provided description for this VMware Engine network.
	Description pulumi.StringPtrInput
	// The location where the VMwareEngineNetwork should reside.
	Location pulumi.StringInput
	// The ID of the VMwareEngineNetwork.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts VmwareengineNetworkTimeoutsPtrInput
	// VMware Engine network type. Possible values: ["LEGACY", "STANDARD"]
	Type                  pulumi.StringInput
	VmwareengineNetworkId pulumi.StringPtrInput
}

func (VmwareengineNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmwareengineNetworkArgs)(nil)).Elem()
}

type VmwareengineNetworkInput interface {
	pulumi.Input

	ToVmwareengineNetworkOutput() VmwareengineNetworkOutput
	ToVmwareengineNetworkOutputWithContext(ctx context.Context) VmwareengineNetworkOutput
}

func (*VmwareengineNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareengineNetwork)(nil)).Elem()
}

func (i *VmwareengineNetwork) ToVmwareengineNetworkOutput() VmwareengineNetworkOutput {
	return i.ToVmwareengineNetworkOutputWithContext(context.Background())
}

func (i *VmwareengineNetwork) ToVmwareengineNetworkOutputWithContext(ctx context.Context) VmwareengineNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareengineNetworkOutput)
}

type VmwareengineNetworkOutput struct{ *pulumi.OutputState }

func (VmwareengineNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareengineNetwork)(nil)).Elem()
}

func (o VmwareengineNetworkOutput) ToVmwareengineNetworkOutput() VmwareengineNetworkOutput {
	return o
}

func (o VmwareengineNetworkOutput) ToVmwareengineNetworkOutputWithContext(ctx context.Context) VmwareengineNetworkOutput {
	return o
}

// User-provided description for this VMware Engine network.
func (o VmwareengineNetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The location where the VMwareEngineNetwork should reside.
func (o VmwareengineNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The ID of the VMwareEngineNetwork.
func (o VmwareengineNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VmwareengineNetworkOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// State of the VMware Engine network.
func (o VmwareengineNetworkOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o VmwareengineNetworkOutput) Timeouts() VmwareengineNetworkTimeoutsPtrOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) VmwareengineNetworkTimeoutsPtrOutput { return v.Timeouts }).(VmwareengineNetworkTimeoutsPtrOutput)
}

// VMware Engine network type. Possible values: ["LEGACY", "STANDARD"]
func (o VmwareengineNetworkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// System-generated unique identifier for the resource.
func (o VmwareengineNetworkOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

func (o VmwareengineNetworkOutput) VmwareengineNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) pulumi.StringOutput { return v.VmwareengineNetworkId }).(pulumi.StringOutput)
}

// VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects, the internet,
// and other Google Cloud services.
func (o VmwareengineNetworkOutput) VpcNetworks() VmwareengineNetworkVpcNetworkArrayOutput {
	return o.ApplyT(func(v *VmwareengineNetwork) VmwareengineNetworkVpcNetworkArrayOutput { return v.VpcNetworks }).(VmwareengineNetworkVpcNetworkArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareengineNetworkInput)(nil)).Elem(), &VmwareengineNetwork{})
	pulumi.RegisterOutputType(VmwareengineNetworkOutput{})
}
