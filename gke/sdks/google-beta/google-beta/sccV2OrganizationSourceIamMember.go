// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SccV2OrganizationSourceIamMember struct {
	pulumi.CustomResourceState

	Condition                          SccV2OrganizationSourceIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                               pulumi.StringOutput                                `pulumi:"etag"`
	Member                             pulumi.StringOutput                                `pulumi:"member"`
	Organization                       pulumi.StringOutput                                `pulumi:"organization"`
	Role                               pulumi.StringOutput                                `pulumi:"role"`
	SccV2OrganizationSourceIamMemberId pulumi.StringOutput                                `pulumi:"sccV2OrganizationSourceIamMemberId"`
	Source                             pulumi.StringOutput                                `pulumi:"source"`
}

// NewSccV2OrganizationSourceIamMember registers a new resource with the given unique name, arguments, and options.
func NewSccV2OrganizationSourceIamMember(ctx *pulumi.Context,
	name string, args *SccV2OrganizationSourceIamMemberArgs, opts ...pulumi.ResourceOption) (*SccV2OrganizationSourceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SccV2OrganizationSourceIamMember
	err = ctx.RegisterPackageResource("google-beta:index/sccV2OrganizationSourceIamMember:SccV2OrganizationSourceIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSccV2OrganizationSourceIamMember gets an existing SccV2OrganizationSourceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSccV2OrganizationSourceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SccV2OrganizationSourceIamMemberState, opts ...pulumi.ResourceOption) (*SccV2OrganizationSourceIamMember, error) {
	var resource SccV2OrganizationSourceIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/sccV2OrganizationSourceIamMember:SccV2OrganizationSourceIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SccV2OrganizationSourceIamMember resources.
type sccV2OrganizationSourceIamMemberState struct {
	Condition                          *SccV2OrganizationSourceIamMemberCondition `pulumi:"condition"`
	Etag                               *string                                    `pulumi:"etag"`
	Member                             *string                                    `pulumi:"member"`
	Organization                       *string                                    `pulumi:"organization"`
	Role                               *string                                    `pulumi:"role"`
	SccV2OrganizationSourceIamMemberId *string                                    `pulumi:"sccV2OrganizationSourceIamMemberId"`
	Source                             *string                                    `pulumi:"source"`
}

type SccV2OrganizationSourceIamMemberState struct {
	Condition                          SccV2OrganizationSourceIamMemberConditionPtrInput
	Etag                               pulumi.StringPtrInput
	Member                             pulumi.StringPtrInput
	Organization                       pulumi.StringPtrInput
	Role                               pulumi.StringPtrInput
	SccV2OrganizationSourceIamMemberId pulumi.StringPtrInput
	Source                             pulumi.StringPtrInput
}

func (SccV2OrganizationSourceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*sccV2OrganizationSourceIamMemberState)(nil)).Elem()
}

type sccV2OrganizationSourceIamMemberArgs struct {
	Condition                          *SccV2OrganizationSourceIamMemberCondition `pulumi:"condition"`
	Member                             string                                     `pulumi:"member"`
	Organization                       string                                     `pulumi:"organization"`
	Role                               string                                     `pulumi:"role"`
	SccV2OrganizationSourceIamMemberId *string                                    `pulumi:"sccV2OrganizationSourceIamMemberId"`
	Source                             string                                     `pulumi:"source"`
}

// The set of arguments for constructing a SccV2OrganizationSourceIamMember resource.
type SccV2OrganizationSourceIamMemberArgs struct {
	Condition                          SccV2OrganizationSourceIamMemberConditionPtrInput
	Member                             pulumi.StringInput
	Organization                       pulumi.StringInput
	Role                               pulumi.StringInput
	SccV2OrganizationSourceIamMemberId pulumi.StringPtrInput
	Source                             pulumi.StringInput
}

func (SccV2OrganizationSourceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sccV2OrganizationSourceIamMemberArgs)(nil)).Elem()
}

type SccV2OrganizationSourceIamMemberInput interface {
	pulumi.Input

	ToSccV2OrganizationSourceIamMemberOutput() SccV2OrganizationSourceIamMemberOutput
	ToSccV2OrganizationSourceIamMemberOutputWithContext(ctx context.Context) SccV2OrganizationSourceIamMemberOutput
}

func (*SccV2OrganizationSourceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**SccV2OrganizationSourceIamMember)(nil)).Elem()
}

func (i *SccV2OrganizationSourceIamMember) ToSccV2OrganizationSourceIamMemberOutput() SccV2OrganizationSourceIamMemberOutput {
	return i.ToSccV2OrganizationSourceIamMemberOutputWithContext(context.Background())
}

func (i *SccV2OrganizationSourceIamMember) ToSccV2OrganizationSourceIamMemberOutputWithContext(ctx context.Context) SccV2OrganizationSourceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SccV2OrganizationSourceIamMemberOutput)
}

type SccV2OrganizationSourceIamMemberOutput struct{ *pulumi.OutputState }

func (SccV2OrganizationSourceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SccV2OrganizationSourceIamMember)(nil)).Elem()
}

func (o SccV2OrganizationSourceIamMemberOutput) ToSccV2OrganizationSourceIamMemberOutput() SccV2OrganizationSourceIamMemberOutput {
	return o
}

func (o SccV2OrganizationSourceIamMemberOutput) ToSccV2OrganizationSourceIamMemberOutputWithContext(ctx context.Context) SccV2OrganizationSourceIamMemberOutput {
	return o
}

func (o SccV2OrganizationSourceIamMemberOutput) Condition() SccV2OrganizationSourceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamMember) SccV2OrganizationSourceIamMemberConditionPtrOutput {
		return v.Condition
	}).(SccV2OrganizationSourceIamMemberConditionPtrOutput)
}

func (o SccV2OrganizationSourceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o SccV2OrganizationSourceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o SccV2OrganizationSourceIamMemberOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamMember) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

func (o SccV2OrganizationSourceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o SccV2OrganizationSourceIamMemberOutput) SccV2OrganizationSourceIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamMember) pulumi.StringOutput {
		return v.SccV2OrganizationSourceIamMemberId
	}).(pulumi.StringOutput)
}

func (o SccV2OrganizationSourceIamMemberOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamMember) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SccV2OrganizationSourceIamMemberInput)(nil)).Elem(), &SccV2OrganizationSourceIamMember{})
	pulumi.RegisterOutputType(SccV2OrganizationSourceIamMemberOutput{})
}
