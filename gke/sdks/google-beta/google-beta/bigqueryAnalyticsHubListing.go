// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryAnalyticsHubListing struct {
	pulumi.CustomResourceState

	BigqueryAnalyticsHubListingId pulumi.StringOutput `pulumi:"bigqueryAnalyticsHubListingId"`
	// Shared dataset i.e. BigQuery dataset source.
	BigqueryDataset BigqueryAnalyticsHubListingBigqueryDatasetOutput `pulumi:"bigqueryDataset"`
	// Categories of the listing. Up to two categories are allowed.
	Categories pulumi.StringArrayOutput `pulumi:"categories"`
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId pulumi.StringOutput `pulumi:"dataExchangeId"`
	// Details of the data provider who owns the source data.
	DataProvider BigqueryAnalyticsHubListingDataProviderPtrOutput `pulumi:"dataProvider"`
	// Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes
	// except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), ampersands (&) and can't start or end with spaces.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Documentation describing the listing.
	Documentation pulumi.StringPtrOutput `pulumi:"documentation"`
	// Base64 encoded image representing the listing.
	Icon pulumi.StringPtrOutput `pulumi:"icon"`
	// The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that
	// require URL-escaping, or characters outside of ASCII, spaces.
	ListingId pulumi.StringOutput `pulumi:"listingId"`
	// The name of the location this data exchange listing.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the listing. e.g. "projects/myproject/locations/US/dataExchanges/123/listings/456"
	Name pulumi.StringOutput `pulumi:"name"`
	// Email or URL of the primary point of contact of the listing.
	PrimaryContact pulumi.StringPtrOutput `pulumi:"primaryContact"`
	Project        pulumi.StringOutput    `pulumi:"project"`
	// Details of the publisher who owns the listing and who can share the source data.
	Publisher BigqueryAnalyticsHubListingPublisherPtrOutput `pulumi:"publisher"`
	// Email or URL of the request access of the listing. Subscribers can use this reference to request access.
	RequestAccess pulumi.StringPtrOutput `pulumi:"requestAccess"`
	// If set, restricted export configuration will be propagated and enforced on the linked dataset.
	RestrictedExportConfig BigqueryAnalyticsHubListingRestrictedExportConfigPtrOutput `pulumi:"restrictedExportConfig"`
	Timeouts               BigqueryAnalyticsHubListingTimeoutsPtrOutput               `pulumi:"timeouts"`
}

// NewBigqueryAnalyticsHubListing registers a new resource with the given unique name, arguments, and options.
func NewBigqueryAnalyticsHubListing(ctx *pulumi.Context,
	name string, args *BigqueryAnalyticsHubListingArgs, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubListing, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BigqueryDataset == nil {
		return nil, errors.New("invalid value for required argument 'BigqueryDataset'")
	}
	if args.DataExchangeId == nil {
		return nil, errors.New("invalid value for required argument 'DataExchangeId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ListingId == nil {
		return nil, errors.New("invalid value for required argument 'ListingId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryAnalyticsHubListing
	err = ctx.RegisterPackageResource("google-beta:index/bigqueryAnalyticsHubListing:BigqueryAnalyticsHubListing", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryAnalyticsHubListing gets an existing BigqueryAnalyticsHubListing resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryAnalyticsHubListing(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryAnalyticsHubListingState, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubListing, error) {
	var resource BigqueryAnalyticsHubListing
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/bigqueryAnalyticsHubListing:BigqueryAnalyticsHubListing", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryAnalyticsHubListing resources.
type bigqueryAnalyticsHubListingState struct {
	BigqueryAnalyticsHubListingId *string `pulumi:"bigqueryAnalyticsHubListingId"`
	// Shared dataset i.e. BigQuery dataset source.
	BigqueryDataset *BigqueryAnalyticsHubListingBigqueryDataset `pulumi:"bigqueryDataset"`
	// Categories of the listing. Up to two categories are allowed.
	Categories []string `pulumi:"categories"`
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId *string `pulumi:"dataExchangeId"`
	// Details of the data provider who owns the source data.
	DataProvider *BigqueryAnalyticsHubListingDataProvider `pulumi:"dataProvider"`
	// Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes
	// except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF).
	Description *string `pulumi:"description"`
	// Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), ampersands (&) and can't start or end with spaces.
	DisplayName *string `pulumi:"displayName"`
	// Documentation describing the listing.
	Documentation *string `pulumi:"documentation"`
	// Base64 encoded image representing the listing.
	Icon *string `pulumi:"icon"`
	// The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that
	// require URL-escaping, or characters outside of ASCII, spaces.
	ListingId *string `pulumi:"listingId"`
	// The name of the location this data exchange listing.
	Location *string `pulumi:"location"`
	// The resource name of the listing. e.g. "projects/myproject/locations/US/dataExchanges/123/listings/456"
	Name *string `pulumi:"name"`
	// Email or URL of the primary point of contact of the listing.
	PrimaryContact *string `pulumi:"primaryContact"`
	Project        *string `pulumi:"project"`
	// Details of the publisher who owns the listing and who can share the source data.
	Publisher *BigqueryAnalyticsHubListingPublisher `pulumi:"publisher"`
	// Email or URL of the request access of the listing. Subscribers can use this reference to request access.
	RequestAccess *string `pulumi:"requestAccess"`
	// If set, restricted export configuration will be propagated and enforced on the linked dataset.
	RestrictedExportConfig *BigqueryAnalyticsHubListingRestrictedExportConfig `pulumi:"restrictedExportConfig"`
	Timeouts               *BigqueryAnalyticsHubListingTimeouts               `pulumi:"timeouts"`
}

type BigqueryAnalyticsHubListingState struct {
	BigqueryAnalyticsHubListingId pulumi.StringPtrInput
	// Shared dataset i.e. BigQuery dataset source.
	BigqueryDataset BigqueryAnalyticsHubListingBigqueryDatasetPtrInput
	// Categories of the listing. Up to two categories are allowed.
	Categories pulumi.StringArrayInput
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId pulumi.StringPtrInput
	// Details of the data provider who owns the source data.
	DataProvider BigqueryAnalyticsHubListingDataProviderPtrInput
	// Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes
	// except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF).
	Description pulumi.StringPtrInput
	// Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), ampersands (&) and can't start or end with spaces.
	DisplayName pulumi.StringPtrInput
	// Documentation describing the listing.
	Documentation pulumi.StringPtrInput
	// Base64 encoded image representing the listing.
	Icon pulumi.StringPtrInput
	// The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that
	// require URL-escaping, or characters outside of ASCII, spaces.
	ListingId pulumi.StringPtrInput
	// The name of the location this data exchange listing.
	Location pulumi.StringPtrInput
	// The resource name of the listing. e.g. "projects/myproject/locations/US/dataExchanges/123/listings/456"
	Name pulumi.StringPtrInput
	// Email or URL of the primary point of contact of the listing.
	PrimaryContact pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	// Details of the publisher who owns the listing and who can share the source data.
	Publisher BigqueryAnalyticsHubListingPublisherPtrInput
	// Email or URL of the request access of the listing. Subscribers can use this reference to request access.
	RequestAccess pulumi.StringPtrInput
	// If set, restricted export configuration will be propagated and enforced on the linked dataset.
	RestrictedExportConfig BigqueryAnalyticsHubListingRestrictedExportConfigPtrInput
	Timeouts               BigqueryAnalyticsHubListingTimeoutsPtrInput
}

func (BigqueryAnalyticsHubListingState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubListingState)(nil)).Elem()
}

type bigqueryAnalyticsHubListingArgs struct {
	BigqueryAnalyticsHubListingId *string `pulumi:"bigqueryAnalyticsHubListingId"`
	// Shared dataset i.e. BigQuery dataset source.
	BigqueryDataset BigqueryAnalyticsHubListingBigqueryDataset `pulumi:"bigqueryDataset"`
	// Categories of the listing. Up to two categories are allowed.
	Categories []string `pulumi:"categories"`
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId string `pulumi:"dataExchangeId"`
	// Details of the data provider who owns the source data.
	DataProvider *BigqueryAnalyticsHubListingDataProvider `pulumi:"dataProvider"`
	// Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes
	// except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF).
	Description *string `pulumi:"description"`
	// Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), ampersands (&) and can't start or end with spaces.
	DisplayName string `pulumi:"displayName"`
	// Documentation describing the listing.
	Documentation *string `pulumi:"documentation"`
	// Base64 encoded image representing the listing.
	Icon *string `pulumi:"icon"`
	// The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that
	// require URL-escaping, or characters outside of ASCII, spaces.
	ListingId string `pulumi:"listingId"`
	// The name of the location this data exchange listing.
	Location string `pulumi:"location"`
	// Email or URL of the primary point of contact of the listing.
	PrimaryContact *string `pulumi:"primaryContact"`
	Project        *string `pulumi:"project"`
	// Details of the publisher who owns the listing and who can share the source data.
	Publisher *BigqueryAnalyticsHubListingPublisher `pulumi:"publisher"`
	// Email or URL of the request access of the listing. Subscribers can use this reference to request access.
	RequestAccess *string `pulumi:"requestAccess"`
	// If set, restricted export configuration will be propagated and enforced on the linked dataset.
	RestrictedExportConfig *BigqueryAnalyticsHubListingRestrictedExportConfig `pulumi:"restrictedExportConfig"`
	Timeouts               *BigqueryAnalyticsHubListingTimeouts               `pulumi:"timeouts"`
}

// The set of arguments for constructing a BigqueryAnalyticsHubListing resource.
type BigqueryAnalyticsHubListingArgs struct {
	BigqueryAnalyticsHubListingId pulumi.StringPtrInput
	// Shared dataset i.e. BigQuery dataset source.
	BigqueryDataset BigqueryAnalyticsHubListingBigqueryDatasetInput
	// Categories of the listing. Up to two categories are allowed.
	Categories pulumi.StringArrayInput
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId pulumi.StringInput
	// Details of the data provider who owns the source data.
	DataProvider BigqueryAnalyticsHubListingDataProviderPtrInput
	// Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes
	// except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF).
	Description pulumi.StringPtrInput
	// Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), ampersands (&) and can't start or end with spaces.
	DisplayName pulumi.StringInput
	// Documentation describing the listing.
	Documentation pulumi.StringPtrInput
	// Base64 encoded image representing the listing.
	Icon pulumi.StringPtrInput
	// The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that
	// require URL-escaping, or characters outside of ASCII, spaces.
	ListingId pulumi.StringInput
	// The name of the location this data exchange listing.
	Location pulumi.StringInput
	// Email or URL of the primary point of contact of the listing.
	PrimaryContact pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	// Details of the publisher who owns the listing and who can share the source data.
	Publisher BigqueryAnalyticsHubListingPublisherPtrInput
	// Email or URL of the request access of the listing. Subscribers can use this reference to request access.
	RequestAccess pulumi.StringPtrInput
	// If set, restricted export configuration will be propagated and enforced on the linked dataset.
	RestrictedExportConfig BigqueryAnalyticsHubListingRestrictedExportConfigPtrInput
	Timeouts               BigqueryAnalyticsHubListingTimeoutsPtrInput
}

func (BigqueryAnalyticsHubListingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubListingArgs)(nil)).Elem()
}

type BigqueryAnalyticsHubListingInput interface {
	pulumi.Input

	ToBigqueryAnalyticsHubListingOutput() BigqueryAnalyticsHubListingOutput
	ToBigqueryAnalyticsHubListingOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingOutput
}

func (*BigqueryAnalyticsHubListing) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubListing)(nil)).Elem()
}

func (i *BigqueryAnalyticsHubListing) ToBigqueryAnalyticsHubListingOutput() BigqueryAnalyticsHubListingOutput {
	return i.ToBigqueryAnalyticsHubListingOutputWithContext(context.Background())
}

func (i *BigqueryAnalyticsHubListing) ToBigqueryAnalyticsHubListingOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryAnalyticsHubListingOutput)
}

type BigqueryAnalyticsHubListingOutput struct{ *pulumi.OutputState }

func (BigqueryAnalyticsHubListingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubListing)(nil)).Elem()
}

func (o BigqueryAnalyticsHubListingOutput) ToBigqueryAnalyticsHubListingOutput() BigqueryAnalyticsHubListingOutput {
	return o
}

func (o BigqueryAnalyticsHubListingOutput) ToBigqueryAnalyticsHubListingOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingOutput {
	return o
}

func (o BigqueryAnalyticsHubListingOutput) BigqueryAnalyticsHubListingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringOutput { return v.BigqueryAnalyticsHubListingId }).(pulumi.StringOutput)
}

// Shared dataset i.e. BigQuery dataset source.
func (o BigqueryAnalyticsHubListingOutput) BigqueryDataset() BigqueryAnalyticsHubListingBigqueryDatasetOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) BigqueryAnalyticsHubListingBigqueryDatasetOutput {
		return v.BigqueryDataset
	}).(BigqueryAnalyticsHubListingBigqueryDatasetOutput)
}

// Categories of the listing. Up to two categories are allowed.
func (o BigqueryAnalyticsHubListingOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringArrayOutput { return v.Categories }).(pulumi.StringArrayOutput)
}

// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
// characters that require URL-escaping, or characters outside of ASCII, spaces.
func (o BigqueryAnalyticsHubListingOutput) DataExchangeId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringOutput { return v.DataExchangeId }).(pulumi.StringOutput)
}

// Details of the data provider who owns the source data.
func (o BigqueryAnalyticsHubListingOutput) DataProvider() BigqueryAnalyticsHubListingDataProviderPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) BigqueryAnalyticsHubListingDataProviderPtrOutput {
		return v.DataProvider
	}).(BigqueryAnalyticsHubListingDataProviderPtrOutput)
}

// Short description of the listing. The description must not contain Unicode non-characters and C0 and C1 control codes
// except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF).
func (o BigqueryAnalyticsHubListingOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Human-readable display name of the listing. The display name must contain only Unicode letters, numbers (0-9),
// underscores (_), dashes (-), spaces ( ), ampersands (&) and can't start or end with spaces.
func (o BigqueryAnalyticsHubListingOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Documentation describing the listing.
func (o BigqueryAnalyticsHubListingOutput) Documentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringPtrOutput { return v.Documentation }).(pulumi.StringPtrOutput)
}

// Base64 encoded image representing the listing.
func (o BigqueryAnalyticsHubListingOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringPtrOutput { return v.Icon }).(pulumi.StringPtrOutput)
}

// The ID of the listing. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that
// require URL-escaping, or characters outside of ASCII, spaces.
func (o BigqueryAnalyticsHubListingOutput) ListingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringOutput { return v.ListingId }).(pulumi.StringOutput)
}

// The name of the location this data exchange listing.
func (o BigqueryAnalyticsHubListingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the listing. e.g. "projects/myproject/locations/US/dataExchanges/123/listings/456"
func (o BigqueryAnalyticsHubListingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Email or URL of the primary point of contact of the listing.
func (o BigqueryAnalyticsHubListingOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringPtrOutput { return v.PrimaryContact }).(pulumi.StringPtrOutput)
}

func (o BigqueryAnalyticsHubListingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Details of the publisher who owns the listing and who can share the source data.
func (o BigqueryAnalyticsHubListingOutput) Publisher() BigqueryAnalyticsHubListingPublisherPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) BigqueryAnalyticsHubListingPublisherPtrOutput { return v.Publisher }).(BigqueryAnalyticsHubListingPublisherPtrOutput)
}

// Email or URL of the request access of the listing. Subscribers can use this reference to request access.
func (o BigqueryAnalyticsHubListingOutput) RequestAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) pulumi.StringPtrOutput { return v.RequestAccess }).(pulumi.StringPtrOutput)
}

// If set, restricted export configuration will be propagated and enforced on the linked dataset.
func (o BigqueryAnalyticsHubListingOutput) RestrictedExportConfig() BigqueryAnalyticsHubListingRestrictedExportConfigPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) BigqueryAnalyticsHubListingRestrictedExportConfigPtrOutput {
		return v.RestrictedExportConfig
	}).(BigqueryAnalyticsHubListingRestrictedExportConfigPtrOutput)
}

func (o BigqueryAnalyticsHubListingOutput) Timeouts() BigqueryAnalyticsHubListingTimeoutsPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListing) BigqueryAnalyticsHubListingTimeoutsPtrOutput { return v.Timeouts }).(BigqueryAnalyticsHubListingTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryAnalyticsHubListingInput)(nil)).Elem(), &BigqueryAnalyticsHubListing{})
	pulumi.RegisterOutputType(BigqueryAnalyticsHubListingOutput{})
}
