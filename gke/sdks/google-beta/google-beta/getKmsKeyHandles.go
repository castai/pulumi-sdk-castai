// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetKmsKeyHandles(ctx *pulumi.Context, args *GetKmsKeyHandlesArgs, opts ...pulumi.InvokeOption) (*GetKmsKeyHandlesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetKmsKeyHandlesResult
	err = ctx.InvokePackage("google-beta:index/getKmsKeyHandles:getKmsKeyHandles", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKmsKeyHandles.
type GetKmsKeyHandlesArgs struct {
	Id                   *string `pulumi:"id"`
	Location             string  `pulumi:"location"`
	Project              *string `pulumi:"project"`
	ResourceTypeSelector string  `pulumi:"resourceTypeSelector"`
}

// A collection of values returned by getKmsKeyHandles.
type GetKmsKeyHandlesResult struct {
	Id                   string                      `pulumi:"id"`
	KeyHandles           []GetKmsKeyHandlesKeyHandle `pulumi:"keyHandles"`
	Location             string                      `pulumi:"location"`
	Project              *string                     `pulumi:"project"`
	ResourceTypeSelector string                      `pulumi:"resourceTypeSelector"`
}

func GetKmsKeyHandlesOutput(ctx *pulumi.Context, args GetKmsKeyHandlesOutputArgs, opts ...pulumi.InvokeOption) GetKmsKeyHandlesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetKmsKeyHandlesResultOutput, error) {
			args := v.(GetKmsKeyHandlesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetKmsKeyHandlesResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getKmsKeyHandles:getKmsKeyHandles", args, GetKmsKeyHandlesResultOutput{}, options).(GetKmsKeyHandlesResultOutput), nil
		}).(GetKmsKeyHandlesResultOutput)
}

// A collection of arguments for invoking getKmsKeyHandles.
type GetKmsKeyHandlesOutputArgs struct {
	Id                   pulumi.StringPtrInput `pulumi:"id"`
	Location             pulumi.StringInput    `pulumi:"location"`
	Project              pulumi.StringPtrInput `pulumi:"project"`
	ResourceTypeSelector pulumi.StringInput    `pulumi:"resourceTypeSelector"`
}

func (GetKmsKeyHandlesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKmsKeyHandlesArgs)(nil)).Elem()
}

// A collection of values returned by getKmsKeyHandles.
type GetKmsKeyHandlesResultOutput struct{ *pulumi.OutputState }

func (GetKmsKeyHandlesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKmsKeyHandlesResult)(nil)).Elem()
}

func (o GetKmsKeyHandlesResultOutput) ToGetKmsKeyHandlesResultOutput() GetKmsKeyHandlesResultOutput {
	return o
}

func (o GetKmsKeyHandlesResultOutput) ToGetKmsKeyHandlesResultOutputWithContext(ctx context.Context) GetKmsKeyHandlesResultOutput {
	return o
}

func (o GetKmsKeyHandlesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKmsKeyHandlesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKmsKeyHandlesResultOutput) KeyHandles() GetKmsKeyHandlesKeyHandleArrayOutput {
	return o.ApplyT(func(v GetKmsKeyHandlesResult) []GetKmsKeyHandlesKeyHandle { return v.KeyHandles }).(GetKmsKeyHandlesKeyHandleArrayOutput)
}

func (o GetKmsKeyHandlesResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetKmsKeyHandlesResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetKmsKeyHandlesResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKmsKeyHandlesResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o GetKmsKeyHandlesResultOutput) ResourceTypeSelector() pulumi.StringOutput {
	return o.ApplyT(func(v GetKmsKeyHandlesResult) string { return v.ResourceTypeSelector }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKmsKeyHandlesResultOutput{})
}
