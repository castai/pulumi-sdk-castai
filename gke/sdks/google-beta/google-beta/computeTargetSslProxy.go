// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeTargetSslProxy struct {
	pulumi.CustomResourceState

	// A reference to the BackendService resource.
	BackendService pulumi.StringOutput `pulumi:"backendService"`
	// A reference to the CertificateMap resource uri that identifies a certificate map associated with the given target proxy.
	// This field can only be set for global target proxies. Accepted format is
	// '//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}'.
	CertificateMap          pulumi.StringPtrOutput `pulumi:"certificateMap"`
	ComputeTargetSslProxyId pulumi.StringOutput    `pulumi:"computeTargetSslProxyId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the type of proxy header to append before sending data to the backend. Default value: "NONE" Possible values:
	// ["NONE", "PROXY_V1"]
	ProxyHeader pulumi.StringPtrOutput `pulumi:"proxyHeader"`
	// The unique identifier for the resource.
	ProxyId  pulumi.Float64Output `pulumi:"proxyId"`
	SelfLink pulumi.StringOutput  `pulumi:"selfLink"`
	// A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. At
	// least one SSL certificate must be specified.
	SslCertificates pulumi.StringArrayOutput `pulumi:"sslCertificates"`
	// A reference to the SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the
	// TargetSslProxy resource will not have any SSL policy configured.
	SslPolicy pulumi.StringPtrOutput                 `pulumi:"sslPolicy"`
	Timeouts  ComputeTargetSslProxyTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeTargetSslProxy registers a new resource with the given unique name, arguments, and options.
func NewComputeTargetSslProxy(ctx *pulumi.Context,
	name string, args *ComputeTargetSslProxyArgs, opts ...pulumi.ResourceOption) (*ComputeTargetSslProxy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackendService == nil {
		return nil, errors.New("invalid value for required argument 'BackendService'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeTargetSslProxy
	err = ctx.RegisterPackageResource("google-beta:index/computeTargetSslProxy:ComputeTargetSslProxy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeTargetSslProxy gets an existing ComputeTargetSslProxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeTargetSslProxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeTargetSslProxyState, opts ...pulumi.ResourceOption) (*ComputeTargetSslProxy, error) {
	var resource ComputeTargetSslProxy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeTargetSslProxy:ComputeTargetSslProxy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeTargetSslProxy resources.
type computeTargetSslProxyState struct {
	// A reference to the BackendService resource.
	BackendService *string `pulumi:"backendService"`
	// A reference to the CertificateMap resource uri that identifies a certificate map associated with the given target proxy.
	// This field can only be set for global target proxies. Accepted format is
	// '//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}'.
	CertificateMap          *string `pulumi:"certificateMap"`
	ComputeTargetSslProxyId *string `pulumi:"computeTargetSslProxyId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Specifies the type of proxy header to append before sending data to the backend. Default value: "NONE" Possible values:
	// ["NONE", "PROXY_V1"]
	ProxyHeader *string `pulumi:"proxyHeader"`
	// The unique identifier for the resource.
	ProxyId  *float64 `pulumi:"proxyId"`
	SelfLink *string  `pulumi:"selfLink"`
	// A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. At
	// least one SSL certificate must be specified.
	SslCertificates []string `pulumi:"sslCertificates"`
	// A reference to the SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the
	// TargetSslProxy resource will not have any SSL policy configured.
	SslPolicy *string                        `pulumi:"sslPolicy"`
	Timeouts  *ComputeTargetSslProxyTimeouts `pulumi:"timeouts"`
}

type ComputeTargetSslProxyState struct {
	// A reference to the BackendService resource.
	BackendService pulumi.StringPtrInput
	// A reference to the CertificateMap resource uri that identifies a certificate map associated with the given target proxy.
	// This field can only be set for global target proxies. Accepted format is
	// '//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}'.
	CertificateMap          pulumi.StringPtrInput
	ComputeTargetSslProxyId pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Specifies the type of proxy header to append before sending data to the backend. Default value: "NONE" Possible values:
	// ["NONE", "PROXY_V1"]
	ProxyHeader pulumi.StringPtrInput
	// The unique identifier for the resource.
	ProxyId  pulumi.Float64PtrInput
	SelfLink pulumi.StringPtrInput
	// A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. At
	// least one SSL certificate must be specified.
	SslCertificates pulumi.StringArrayInput
	// A reference to the SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the
	// TargetSslProxy resource will not have any SSL policy configured.
	SslPolicy pulumi.StringPtrInput
	Timeouts  ComputeTargetSslProxyTimeoutsPtrInput
}

func (ComputeTargetSslProxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeTargetSslProxyState)(nil)).Elem()
}

type computeTargetSslProxyArgs struct {
	// A reference to the BackendService resource.
	BackendService string `pulumi:"backendService"`
	// A reference to the CertificateMap resource uri that identifies a certificate map associated with the given target proxy.
	// This field can only be set for global target proxies. Accepted format is
	// '//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}'.
	CertificateMap          *string `pulumi:"certificateMap"`
	ComputeTargetSslProxyId *string `pulumi:"computeTargetSslProxyId"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Specifies the type of proxy header to append before sending data to the backend. Default value: "NONE" Possible values:
	// ["NONE", "PROXY_V1"]
	ProxyHeader *string `pulumi:"proxyHeader"`
	// A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. At
	// least one SSL certificate must be specified.
	SslCertificates []string `pulumi:"sslCertificates"`
	// A reference to the SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the
	// TargetSslProxy resource will not have any SSL policy configured.
	SslPolicy *string                        `pulumi:"sslPolicy"`
	Timeouts  *ComputeTargetSslProxyTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeTargetSslProxy resource.
type ComputeTargetSslProxyArgs struct {
	// A reference to the BackendService resource.
	BackendService pulumi.StringInput
	// A reference to the CertificateMap resource uri that identifies a certificate map associated with the given target proxy.
	// This field can only be set for global target proxies. Accepted format is
	// '//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}'.
	CertificateMap          pulumi.StringPtrInput
	ComputeTargetSslProxyId pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Specifies the type of proxy header to append before sending data to the backend. Default value: "NONE" Possible values:
	// ["NONE", "PROXY_V1"]
	ProxyHeader pulumi.StringPtrInput
	// A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. At
	// least one SSL certificate must be specified.
	SslCertificates pulumi.StringArrayInput
	// A reference to the SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the
	// TargetSslProxy resource will not have any SSL policy configured.
	SslPolicy pulumi.StringPtrInput
	Timeouts  ComputeTargetSslProxyTimeoutsPtrInput
}

func (ComputeTargetSslProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeTargetSslProxyArgs)(nil)).Elem()
}

type ComputeTargetSslProxyInput interface {
	pulumi.Input

	ToComputeTargetSslProxyOutput() ComputeTargetSslProxyOutput
	ToComputeTargetSslProxyOutputWithContext(ctx context.Context) ComputeTargetSslProxyOutput
}

func (*ComputeTargetSslProxy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeTargetSslProxy)(nil)).Elem()
}

func (i *ComputeTargetSslProxy) ToComputeTargetSslProxyOutput() ComputeTargetSslProxyOutput {
	return i.ToComputeTargetSslProxyOutputWithContext(context.Background())
}

func (i *ComputeTargetSslProxy) ToComputeTargetSslProxyOutputWithContext(ctx context.Context) ComputeTargetSslProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeTargetSslProxyOutput)
}

type ComputeTargetSslProxyOutput struct{ *pulumi.OutputState }

func (ComputeTargetSslProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeTargetSslProxy)(nil)).Elem()
}

func (o ComputeTargetSslProxyOutput) ToComputeTargetSslProxyOutput() ComputeTargetSslProxyOutput {
	return o
}

func (o ComputeTargetSslProxyOutput) ToComputeTargetSslProxyOutputWithContext(ctx context.Context) ComputeTargetSslProxyOutput {
	return o
}

// A reference to the BackendService resource.
func (o ComputeTargetSslProxyOutput) BackendService() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringOutput { return v.BackendService }).(pulumi.StringOutput)
}

// A reference to the CertificateMap resource uri that identifies a certificate map associated with the given target proxy.
// This field can only be set for global target proxies. Accepted format is
// '//certificatemanager.googleapis.com/projects/{project}/locations/{location}/certificateMaps/{resourceName}'.
func (o ComputeTargetSslProxyOutput) CertificateMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringPtrOutput { return v.CertificateMap }).(pulumi.StringPtrOutput)
}

func (o ComputeTargetSslProxyOutput) ComputeTargetSslProxyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringOutput { return v.ComputeTargetSslProxyId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeTargetSslProxyOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource.
func (o ComputeTargetSslProxyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeTargetSslProxyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeTargetSslProxyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the type of proxy header to append before sending data to the backend. Default value: "NONE" Possible values:
// ["NONE", "PROXY_V1"]
func (o ComputeTargetSslProxyOutput) ProxyHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringPtrOutput { return v.ProxyHeader }).(pulumi.StringPtrOutput)
}

// The unique identifier for the resource.
func (o ComputeTargetSslProxyOutput) ProxyId() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.Float64Output { return v.ProxyId }).(pulumi.Float64Output)
}

func (o ComputeTargetSslProxyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. At
// least one SSL certificate must be specified.
func (o ComputeTargetSslProxyOutput) SslCertificates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringArrayOutput { return v.SslCertificates }).(pulumi.StringArrayOutput)
}

// A reference to the SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the
// TargetSslProxy resource will not have any SSL policy configured.
func (o ComputeTargetSslProxyOutput) SslPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) pulumi.StringPtrOutput { return v.SslPolicy }).(pulumi.StringPtrOutput)
}

func (o ComputeTargetSslProxyOutput) Timeouts() ComputeTargetSslProxyTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeTargetSslProxy) ComputeTargetSslProxyTimeoutsPtrOutput { return v.Timeouts }).(ComputeTargetSslProxyTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeTargetSslProxyInput)(nil)).Elem(), &ComputeTargetSslProxy{})
	pulumi.RegisterOutputType(ComputeTargetSslProxyOutput{})
}
