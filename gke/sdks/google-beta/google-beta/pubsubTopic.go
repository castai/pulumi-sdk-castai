// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PubsubTopic struct {
	pulumi.CustomResourceState

	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Settings for ingestion from a data source into this topic.
	IngestionDataSourceSettings PubsubTopicIngestionDataSourceSettingsPtrOutput `pulumi:"ingestionDataSourceSettings"`
	// The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your
	// project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have
	// 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. The expected format is
	// 'projects/*/locations/*/keyRings/*/cryptoKeys/*'
	KmsKeyName pulumi.StringPtrOutput `pulumi:"kmsKeyName"`
	// A set of key/value label pairs to assign to this Topic. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages
	// published to the topic in the last messageRetentionDuration are always available to subscribers. For instance, it allows
	// any attached subscription to seek to a timestamp that is up to messageRetentionDuration in the past. If this field is
	// not set, message retention is controlled by settings on individual subscriptions. The rotation period has the format of
	// a decimal number, followed by the letter 's' (seconds). Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration pulumi.StringPtrOutput `pulumi:"messageRetentionDuration"`
	// Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not
	// present, then no constraints are in effect.
	MessageStoragePolicy PubsubTopicMessageStoragePolicyPtrOutput `pulumi:"messageStoragePolicy"`
	// Name of the topic.
	Name          pulumi.StringOutput `pulumi:"name"`
	Project       pulumi.StringOutput `pulumi:"project"`
	PubsubTopicId pulumi.StringOutput `pulumi:"pubsubTopicId"`
	// Settings for validating messages published against a schema.
	SchemaSettings PubsubTopicSchemaSettingsPtrOutput `pulumi:"schemaSettings"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput       `pulumi:"terraformLabels"`
	Timeouts        PubsubTopicTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewPubsubTopic registers a new resource with the given unique name, arguments, and options.
func NewPubsubTopic(ctx *pulumi.Context,
	name string, args *PubsubTopicArgs, opts ...pulumi.ResourceOption) (*PubsubTopic, error) {
	if args == nil {
		args = &PubsubTopicArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource PubsubTopic
	err = ctx.RegisterPackageResource("google-beta:index/pubsubTopic:PubsubTopic", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPubsubTopic gets an existing PubsubTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPubsubTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PubsubTopicState, opts ...pulumi.ResourceOption) (*PubsubTopic, error) {
	var resource PubsubTopic
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/pubsubTopic:PubsubTopic", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PubsubTopic resources.
type pubsubTopicState struct {
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Settings for ingestion from a data source into this topic.
	IngestionDataSourceSettings *PubsubTopicIngestionDataSourceSettings `pulumi:"ingestionDataSourceSettings"`
	// The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your
	// project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have
	// 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. The expected format is
	// 'projects/*/locations/*/keyRings/*/cryptoKeys/*'
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// A set of key/value label pairs to assign to this Topic. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages
	// published to the topic in the last messageRetentionDuration are always available to subscribers. For instance, it allows
	// any attached subscription to seek to a timestamp that is up to messageRetentionDuration in the past. If this field is
	// not set, message retention is controlled by settings on individual subscriptions. The rotation period has the format of
	// a decimal number, followed by the letter 's' (seconds). Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration *string `pulumi:"messageRetentionDuration"`
	// Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not
	// present, then no constraints are in effect.
	MessageStoragePolicy *PubsubTopicMessageStoragePolicy `pulumi:"messageStoragePolicy"`
	// Name of the topic.
	Name          *string `pulumi:"name"`
	Project       *string `pulumi:"project"`
	PubsubTopicId *string `pulumi:"pubsubTopicId"`
	// Settings for validating messages published against a schema.
	SchemaSettings *PubsubTopicSchemaSettings `pulumi:"schemaSettings"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string    `pulumi:"terraformLabels"`
	Timeouts        *PubsubTopicTimeouts `pulumi:"timeouts"`
}

type PubsubTopicState struct {
	EffectiveLabels pulumi.StringMapInput
	// Settings for ingestion from a data source into this topic.
	IngestionDataSourceSettings PubsubTopicIngestionDataSourceSettingsPtrInput
	// The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your
	// project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have
	// 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. The expected format is
	// 'projects/*/locations/*/keyRings/*/cryptoKeys/*'
	KmsKeyName pulumi.StringPtrInput
	// A set of key/value label pairs to assign to this Topic. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages
	// published to the topic in the last messageRetentionDuration are always available to subscribers. For instance, it allows
	// any attached subscription to seek to a timestamp that is up to messageRetentionDuration in the past. If this field is
	// not set, message retention is controlled by settings on individual subscriptions. The rotation period has the format of
	// a decimal number, followed by the letter 's' (seconds). Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration pulumi.StringPtrInput
	// Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not
	// present, then no constraints are in effect.
	MessageStoragePolicy PubsubTopicMessageStoragePolicyPtrInput
	// Name of the topic.
	Name          pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	PubsubTopicId pulumi.StringPtrInput
	// Settings for validating messages published against a schema.
	SchemaSettings PubsubTopicSchemaSettingsPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        PubsubTopicTimeoutsPtrInput
}

func (PubsubTopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubTopicState)(nil)).Elem()
}

type pubsubTopicArgs struct {
	// Settings for ingestion from a data source into this topic.
	IngestionDataSourceSettings *PubsubTopicIngestionDataSourceSettings `pulumi:"ingestionDataSourceSettings"`
	// The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your
	// project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have
	// 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. The expected format is
	// 'projects/*/locations/*/keyRings/*/cryptoKeys/*'
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// A set of key/value label pairs to assign to this Topic. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages
	// published to the topic in the last messageRetentionDuration are always available to subscribers. For instance, it allows
	// any attached subscription to seek to a timestamp that is up to messageRetentionDuration in the past. If this field is
	// not set, message retention is controlled by settings on individual subscriptions. The rotation period has the format of
	// a decimal number, followed by the letter 's' (seconds). Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration *string `pulumi:"messageRetentionDuration"`
	// Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not
	// present, then no constraints are in effect.
	MessageStoragePolicy *PubsubTopicMessageStoragePolicy `pulumi:"messageStoragePolicy"`
	// Name of the topic.
	Name          *string `pulumi:"name"`
	Project       *string `pulumi:"project"`
	PubsubTopicId *string `pulumi:"pubsubTopicId"`
	// Settings for validating messages published against a schema.
	SchemaSettings *PubsubTopicSchemaSettings `pulumi:"schemaSettings"`
	Timeouts       *PubsubTopicTimeouts       `pulumi:"timeouts"`
}

// The set of arguments for constructing a PubsubTopic resource.
type PubsubTopicArgs struct {
	// Settings for ingestion from a data source into this topic.
	IngestionDataSourceSettings PubsubTopicIngestionDataSourceSettingsPtrInput
	// The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your
	// project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have
	// 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. The expected format is
	// 'projects/*/locations/*/keyRings/*/cryptoKeys/*'
	KmsKeyName pulumi.StringPtrInput
	// A set of key/value label pairs to assign to this Topic. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages
	// published to the topic in the last messageRetentionDuration are always available to subscribers. For instance, it allows
	// any attached subscription to seek to a timestamp that is up to messageRetentionDuration in the past. If this field is
	// not set, message retention is controlled by settings on individual subscriptions. The rotation period has the format of
	// a decimal number, followed by the letter 's' (seconds). Cannot be more than 31 days or less than 10 minutes.
	MessageRetentionDuration pulumi.StringPtrInput
	// Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not
	// present, then no constraints are in effect.
	MessageStoragePolicy PubsubTopicMessageStoragePolicyPtrInput
	// Name of the topic.
	Name          pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	PubsubTopicId pulumi.StringPtrInput
	// Settings for validating messages published against a schema.
	SchemaSettings PubsubTopicSchemaSettingsPtrInput
	Timeouts       PubsubTopicTimeoutsPtrInput
}

func (PubsubTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubTopicArgs)(nil)).Elem()
}

type PubsubTopicInput interface {
	pulumi.Input

	ToPubsubTopicOutput() PubsubTopicOutput
	ToPubsubTopicOutputWithContext(ctx context.Context) PubsubTopicOutput
}

func (*PubsubTopic) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubTopic)(nil)).Elem()
}

func (i *PubsubTopic) ToPubsubTopicOutput() PubsubTopicOutput {
	return i.ToPubsubTopicOutputWithContext(context.Background())
}

func (i *PubsubTopic) ToPubsubTopicOutputWithContext(ctx context.Context) PubsubTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PubsubTopicOutput)
}

type PubsubTopicOutput struct{ *pulumi.OutputState }

func (PubsubTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubTopic)(nil)).Elem()
}

func (o PubsubTopicOutput) ToPubsubTopicOutput() PubsubTopicOutput {
	return o
}

func (o PubsubTopicOutput) ToPubsubTopicOutputWithContext(ctx context.Context) PubsubTopicOutput {
	return o
}

func (o PubsubTopicOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PubsubTopic) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Settings for ingestion from a data source into this topic.
func (o PubsubTopicOutput) IngestionDataSourceSettings() PubsubTopicIngestionDataSourceSettingsPtrOutput {
	return o.ApplyT(func(v *PubsubTopic) PubsubTopicIngestionDataSourceSettingsPtrOutput {
		return v.IngestionDataSourceSettings
	}).(PubsubTopicIngestionDataSourceSettingsPtrOutput)
}

// The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your
// project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com') must have
// 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this feature. The expected format is
// 'projects/*/locations/*/keyRings/*/cryptoKeys/*'
func (o PubsubTopicOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PubsubTopic) pulumi.StringPtrOutput { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// A set of key/value label pairs to assign to this Topic. **Note**: This field is non-authoritative, and will only manage
// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
// the resource.
func (o PubsubTopicOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PubsubTopic) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages
// published to the topic in the last messageRetentionDuration are always available to subscribers. For instance, it allows
// any attached subscription to seek to a timestamp that is up to messageRetentionDuration in the past. If this field is
// not set, message retention is controlled by settings on individual subscriptions. The rotation period has the format of
// a decimal number, followed by the letter 's' (seconds). Cannot be more than 31 days or less than 10 minutes.
func (o PubsubTopicOutput) MessageRetentionDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PubsubTopic) pulumi.StringPtrOutput { return v.MessageRetentionDuration }).(pulumi.StringPtrOutput)
}

// Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not
// present, then no constraints are in effect.
func (o PubsubTopicOutput) MessageStoragePolicy() PubsubTopicMessageStoragePolicyPtrOutput {
	return o.ApplyT(func(v *PubsubTopic) PubsubTopicMessageStoragePolicyPtrOutput { return v.MessageStoragePolicy }).(PubsubTopicMessageStoragePolicyPtrOutput)
}

// Name of the topic.
func (o PubsubTopicOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubTopic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PubsubTopicOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubTopic) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o PubsubTopicOutput) PubsubTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubTopic) pulumi.StringOutput { return v.PubsubTopicId }).(pulumi.StringOutput)
}

// Settings for validating messages published against a schema.
func (o PubsubTopicOutput) SchemaSettings() PubsubTopicSchemaSettingsPtrOutput {
	return o.ApplyT(func(v *PubsubTopic) PubsubTopicSchemaSettingsPtrOutput { return v.SchemaSettings }).(PubsubTopicSchemaSettingsPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o PubsubTopicOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PubsubTopic) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o PubsubTopicOutput) Timeouts() PubsubTopicTimeoutsPtrOutput {
	return o.ApplyT(func(v *PubsubTopic) PubsubTopicTimeoutsPtrOutput { return v.Timeouts }).(PubsubTopicTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PubsubTopicInput)(nil)).Elem(), &PubsubTopic{})
	pulumi.RegisterOutputType(PubsubTopicOutput{})
}
