// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SpannerBackupSchedule struct {
	pulumi.CustomResourceState

	// The database to create the backup schedule on.
	Database pulumi.StringOutput `pulumi:"database"`
	// Configuration for the encryption of the backup schedule.
	EncryptionConfig SpannerBackupScheduleEncryptionConfigPtrOutput `pulumi:"encryptionConfig"`
	// The schedule creates only full backups..
	FullBackupSpec SpannerBackupScheduleFullBackupSpecPtrOutput `pulumi:"fullBackupSpec"`
	// The schedule creates incremental backup chains.
	IncrementalBackupSpec SpannerBackupScheduleIncrementalBackupSpecPtrOutput `pulumi:"incrementalBackupSpec"`
	// The instance to create the database on.
	Instance pulumi.StringOutput `pulumi:"instance"`
	// A unique identifier for the backup schedule, which cannot be changed after the backup schedule is created. Values are of
	// the form [a-z][-a-z0-9]*[a-z0-9].
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for
	// 7 days. A duration in seconds with up to nine fractional digits, ending with 's'. Example: '3.5s'. You can set this to a
	// value up to 366 days.
	RetentionDuration       pulumi.StringOutput `pulumi:"retentionDuration"`
	SpannerBackupScheduleId pulumi.StringOutput `pulumi:"spannerBackupScheduleId"`
	// Defines specifications of the backup schedule.
	Spec     SpannerBackupScheduleSpecPtrOutput     `pulumi:"spec"`
	Timeouts SpannerBackupScheduleTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewSpannerBackupSchedule registers a new resource with the given unique name, arguments, and options.
func NewSpannerBackupSchedule(ctx *pulumi.Context,
	name string, args *SpannerBackupScheduleArgs, opts ...pulumi.ResourceOption) (*SpannerBackupSchedule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Database == nil {
		return nil, errors.New("invalid value for required argument 'Database'")
	}
	if args.Instance == nil {
		return nil, errors.New("invalid value for required argument 'Instance'")
	}
	if args.RetentionDuration == nil {
		return nil, errors.New("invalid value for required argument 'RetentionDuration'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SpannerBackupSchedule
	err = ctx.RegisterPackageResource("google-beta:index/spannerBackupSchedule:SpannerBackupSchedule", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpannerBackupSchedule gets an existing SpannerBackupSchedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpannerBackupSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpannerBackupScheduleState, opts ...pulumi.ResourceOption) (*SpannerBackupSchedule, error) {
	var resource SpannerBackupSchedule
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/spannerBackupSchedule:SpannerBackupSchedule", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpannerBackupSchedule resources.
type spannerBackupScheduleState struct {
	// The database to create the backup schedule on.
	Database *string `pulumi:"database"`
	// Configuration for the encryption of the backup schedule.
	EncryptionConfig *SpannerBackupScheduleEncryptionConfig `pulumi:"encryptionConfig"`
	// The schedule creates only full backups..
	FullBackupSpec *SpannerBackupScheduleFullBackupSpec `pulumi:"fullBackupSpec"`
	// The schedule creates incremental backup chains.
	IncrementalBackupSpec *SpannerBackupScheduleIncrementalBackupSpec `pulumi:"incrementalBackupSpec"`
	// The instance to create the database on.
	Instance *string `pulumi:"instance"`
	// A unique identifier for the backup schedule, which cannot be changed after the backup schedule is created. Values are of
	// the form [a-z][-a-z0-9]*[a-z0-9].
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for
	// 7 days. A duration in seconds with up to nine fractional digits, ending with 's'. Example: '3.5s'. You can set this to a
	// value up to 366 days.
	RetentionDuration       *string `pulumi:"retentionDuration"`
	SpannerBackupScheduleId *string `pulumi:"spannerBackupScheduleId"`
	// Defines specifications of the backup schedule.
	Spec     *SpannerBackupScheduleSpec     `pulumi:"spec"`
	Timeouts *SpannerBackupScheduleTimeouts `pulumi:"timeouts"`
}

type SpannerBackupScheduleState struct {
	// The database to create the backup schedule on.
	Database pulumi.StringPtrInput
	// Configuration for the encryption of the backup schedule.
	EncryptionConfig SpannerBackupScheduleEncryptionConfigPtrInput
	// The schedule creates only full backups..
	FullBackupSpec SpannerBackupScheduleFullBackupSpecPtrInput
	// The schedule creates incremental backup chains.
	IncrementalBackupSpec SpannerBackupScheduleIncrementalBackupSpecPtrInput
	// The instance to create the database on.
	Instance pulumi.StringPtrInput
	// A unique identifier for the backup schedule, which cannot be changed after the backup schedule is created. Values are of
	// the form [a-z][-a-z0-9]*[a-z0-9].
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for
	// 7 days. A duration in seconds with up to nine fractional digits, ending with 's'. Example: '3.5s'. You can set this to a
	// value up to 366 days.
	RetentionDuration       pulumi.StringPtrInput
	SpannerBackupScheduleId pulumi.StringPtrInput
	// Defines specifications of the backup schedule.
	Spec     SpannerBackupScheduleSpecPtrInput
	Timeouts SpannerBackupScheduleTimeoutsPtrInput
}

func (SpannerBackupScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*spannerBackupScheduleState)(nil)).Elem()
}

type spannerBackupScheduleArgs struct {
	// The database to create the backup schedule on.
	Database string `pulumi:"database"`
	// Configuration for the encryption of the backup schedule.
	EncryptionConfig *SpannerBackupScheduleEncryptionConfig `pulumi:"encryptionConfig"`
	// The schedule creates only full backups..
	FullBackupSpec *SpannerBackupScheduleFullBackupSpec `pulumi:"fullBackupSpec"`
	// The schedule creates incremental backup chains.
	IncrementalBackupSpec *SpannerBackupScheduleIncrementalBackupSpec `pulumi:"incrementalBackupSpec"`
	// The instance to create the database on.
	Instance string `pulumi:"instance"`
	// A unique identifier for the backup schedule, which cannot be changed after the backup schedule is created. Values are of
	// the form [a-z][-a-z0-9]*[a-z0-9].
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for
	// 7 days. A duration in seconds with up to nine fractional digits, ending with 's'. Example: '3.5s'. You can set this to a
	// value up to 366 days.
	RetentionDuration       string  `pulumi:"retentionDuration"`
	SpannerBackupScheduleId *string `pulumi:"spannerBackupScheduleId"`
	// Defines specifications of the backup schedule.
	Spec     *SpannerBackupScheduleSpec     `pulumi:"spec"`
	Timeouts *SpannerBackupScheduleTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SpannerBackupSchedule resource.
type SpannerBackupScheduleArgs struct {
	// The database to create the backup schedule on.
	Database pulumi.StringInput
	// Configuration for the encryption of the backup schedule.
	EncryptionConfig SpannerBackupScheduleEncryptionConfigPtrInput
	// The schedule creates only full backups..
	FullBackupSpec SpannerBackupScheduleFullBackupSpecPtrInput
	// The schedule creates incremental backup chains.
	IncrementalBackupSpec SpannerBackupScheduleIncrementalBackupSpecPtrInput
	// The instance to create the database on.
	Instance pulumi.StringInput
	// A unique identifier for the backup schedule, which cannot be changed after the backup schedule is created. Values are of
	// the form [a-z][-a-z0-9]*[a-z0-9].
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for
	// 7 days. A duration in seconds with up to nine fractional digits, ending with 's'. Example: '3.5s'. You can set this to a
	// value up to 366 days.
	RetentionDuration       pulumi.StringInput
	SpannerBackupScheduleId pulumi.StringPtrInput
	// Defines specifications of the backup schedule.
	Spec     SpannerBackupScheduleSpecPtrInput
	Timeouts SpannerBackupScheduleTimeoutsPtrInput
}

func (SpannerBackupScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*spannerBackupScheduleArgs)(nil)).Elem()
}

type SpannerBackupScheduleInput interface {
	pulumi.Input

	ToSpannerBackupScheduleOutput() SpannerBackupScheduleOutput
	ToSpannerBackupScheduleOutputWithContext(ctx context.Context) SpannerBackupScheduleOutput
}

func (*SpannerBackupSchedule) ElementType() reflect.Type {
	return reflect.TypeOf((**SpannerBackupSchedule)(nil)).Elem()
}

func (i *SpannerBackupSchedule) ToSpannerBackupScheduleOutput() SpannerBackupScheduleOutput {
	return i.ToSpannerBackupScheduleOutputWithContext(context.Background())
}

func (i *SpannerBackupSchedule) ToSpannerBackupScheduleOutputWithContext(ctx context.Context) SpannerBackupScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpannerBackupScheduleOutput)
}

type SpannerBackupScheduleOutput struct{ *pulumi.OutputState }

func (SpannerBackupScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpannerBackupSchedule)(nil)).Elem()
}

func (o SpannerBackupScheduleOutput) ToSpannerBackupScheduleOutput() SpannerBackupScheduleOutput {
	return o
}

func (o SpannerBackupScheduleOutput) ToSpannerBackupScheduleOutputWithContext(ctx context.Context) SpannerBackupScheduleOutput {
	return o
}

// The database to create the backup schedule on.
func (o SpannerBackupScheduleOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) pulumi.StringOutput { return v.Database }).(pulumi.StringOutput)
}

// Configuration for the encryption of the backup schedule.
func (o SpannerBackupScheduleOutput) EncryptionConfig() SpannerBackupScheduleEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) SpannerBackupScheduleEncryptionConfigPtrOutput {
		return v.EncryptionConfig
	}).(SpannerBackupScheduleEncryptionConfigPtrOutput)
}

// The schedule creates only full backups..
func (o SpannerBackupScheduleOutput) FullBackupSpec() SpannerBackupScheduleFullBackupSpecPtrOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) SpannerBackupScheduleFullBackupSpecPtrOutput { return v.FullBackupSpec }).(SpannerBackupScheduleFullBackupSpecPtrOutput)
}

// The schedule creates incremental backup chains.
func (o SpannerBackupScheduleOutput) IncrementalBackupSpec() SpannerBackupScheduleIncrementalBackupSpecPtrOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) SpannerBackupScheduleIncrementalBackupSpecPtrOutput {
		return v.IncrementalBackupSpec
	}).(SpannerBackupScheduleIncrementalBackupSpecPtrOutput)
}

// The instance to create the database on.
func (o SpannerBackupScheduleOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) pulumi.StringOutput { return v.Instance }).(pulumi.StringOutput)
}

// A unique identifier for the backup schedule, which cannot be changed after the backup schedule is created. Values are of
// the form [a-z][-a-z0-9]*[a-z0-9].
func (o SpannerBackupScheduleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SpannerBackupScheduleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for
// 7 days. A duration in seconds with up to nine fractional digits, ending with 's'. Example: '3.5s'. You can set this to a
// value up to 366 days.
func (o SpannerBackupScheduleOutput) RetentionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) pulumi.StringOutput { return v.RetentionDuration }).(pulumi.StringOutput)
}

func (o SpannerBackupScheduleOutput) SpannerBackupScheduleId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) pulumi.StringOutput { return v.SpannerBackupScheduleId }).(pulumi.StringOutput)
}

// Defines specifications of the backup schedule.
func (o SpannerBackupScheduleOutput) Spec() SpannerBackupScheduleSpecPtrOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) SpannerBackupScheduleSpecPtrOutput { return v.Spec }).(SpannerBackupScheduleSpecPtrOutput)
}

func (o SpannerBackupScheduleOutput) Timeouts() SpannerBackupScheduleTimeoutsPtrOutput {
	return o.ApplyT(func(v *SpannerBackupSchedule) SpannerBackupScheduleTimeoutsPtrOutput { return v.Timeouts }).(SpannerBackupScheduleTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpannerBackupScheduleInput)(nil)).Elem(), &SpannerBackupSchedule{})
	pulumi.RegisterOutputType(SpannerBackupScheduleOutput{})
}
