// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexAsset struct {
	pulumi.CustomResourceState

	// Output only. The time when the asset was created.
	CreateTime      pulumi.StringOutput `pulumi:"createTime"`
	DataplexAssetId pulumi.StringOutput `pulumi:"dataplexAssetId"`
	// The zone for the resource
	DataplexZone pulumi.StringOutput `pulumi:"dataplexZone"`
	// Optional. Description of the asset.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Required. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset,
	// the asset will use the spec set on the parent zone.
	DiscoverySpec DataplexAssetDiscoverySpecOutput `pulumi:"discoverySpec"`
	// Output only. Status of the discovery feature applied to data referenced by this asset.
	DiscoveryStatuses DataplexAssetDiscoveryStatusArrayOutput `pulumi:"discoveryStatuses"`
	// Optional. User friendly display name.
	DisplayName     pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. User defined labels for the asset. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The lake for the resource
	Lake pulumi.StringOutput `pulumi:"lake"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the asset.
	Name pulumi.StringOutput `pulumi:"name"`
	// The project for the resource
	Project pulumi.StringOutput `pulumi:"project"`
	// Required. Immutable. Specification of the resource that is referenced by this asset.
	ResourceSpec DataplexAssetResourceSpecOutput `pulumi:"resourceSpec"`
	// Output only. Status of the resource referenced by this asset.
	ResourceStatuses DataplexAssetResourceStatusArrayOutput `pulumi:"resourceStatuses"`
	// Output only. Status of the security policy applied to resource referenced by this asset.
	SecurityStatuses DataplexAssetSecurityStatusArrayOutput `pulumi:"securityStatuses"`
	// Output only. Current state of the asset. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput         `pulumi:"terraformLabels"`
	Timeouts        DataplexAssetTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and
	// re-created with the same name.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. The time when the asset was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewDataplexAsset registers a new resource with the given unique name, arguments, and options.
func NewDataplexAsset(ctx *pulumi.Context,
	name string, args *DataplexAssetArgs, opts ...pulumi.ResourceOption) (*DataplexAsset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataplexZone == nil {
		return nil, errors.New("invalid value for required argument 'DataplexZone'")
	}
	if args.DiscoverySpec == nil {
		return nil, errors.New("invalid value for required argument 'DiscoverySpec'")
	}
	if args.Lake == nil {
		return nil, errors.New("invalid value for required argument 'Lake'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.ResourceSpec == nil {
		return nil, errors.New("invalid value for required argument 'ResourceSpec'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexAsset
	err = ctx.RegisterPackageResource("google-beta:index/dataplexAsset:DataplexAsset", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexAsset gets an existing DataplexAsset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexAsset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexAssetState, opts ...pulumi.ResourceOption) (*DataplexAsset, error) {
	var resource DataplexAsset
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexAsset:DataplexAsset", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexAsset resources.
type dataplexAssetState struct {
	// Output only. The time when the asset was created.
	CreateTime      *string `pulumi:"createTime"`
	DataplexAssetId *string `pulumi:"dataplexAssetId"`
	// The zone for the resource
	DataplexZone *string `pulumi:"dataplexZone"`
	// Optional. Description of the asset.
	Description *string `pulumi:"description"`
	// Required. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset,
	// the asset will use the spec set on the parent zone.
	DiscoverySpec *DataplexAssetDiscoverySpec `pulumi:"discoverySpec"`
	// Output only. Status of the discovery feature applied to data referenced by this asset.
	DiscoveryStatuses []DataplexAssetDiscoveryStatus `pulumi:"discoveryStatuses"`
	// Optional. User friendly display name.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Optional. User defined labels for the asset. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The lake for the resource
	Lake *string `pulumi:"lake"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// The name of the asset.
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// Required. Immutable. Specification of the resource that is referenced by this asset.
	ResourceSpec *DataplexAssetResourceSpec `pulumi:"resourceSpec"`
	// Output only. Status of the resource referenced by this asset.
	ResourceStatuses []DataplexAssetResourceStatus `pulumi:"resourceStatuses"`
	// Output only. Status of the security policy applied to resource referenced by this asset.
	SecurityStatuses []DataplexAssetSecurityStatus `pulumi:"securityStatuses"`
	// Output only. Current state of the asset. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string      `pulumi:"terraformLabels"`
	Timeouts        *DataplexAssetTimeouts `pulumi:"timeouts"`
	// Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and
	// re-created with the same name.
	Uid *string `pulumi:"uid"`
	// Output only. The time when the asset was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type DataplexAssetState struct {
	// Output only. The time when the asset was created.
	CreateTime      pulumi.StringPtrInput
	DataplexAssetId pulumi.StringPtrInput
	// The zone for the resource
	DataplexZone pulumi.StringPtrInput
	// Optional. Description of the asset.
	Description pulumi.StringPtrInput
	// Required. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset,
	// the asset will use the spec set on the parent zone.
	DiscoverySpec DataplexAssetDiscoverySpecPtrInput
	// Output only. Status of the discovery feature applied to data referenced by this asset.
	DiscoveryStatuses DataplexAssetDiscoveryStatusArrayInput
	// Optional. User friendly display name.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Optional. User defined labels for the asset. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The lake for the resource
	Lake pulumi.StringPtrInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// The name of the asset.
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// Required. Immutable. Specification of the resource that is referenced by this asset.
	ResourceSpec DataplexAssetResourceSpecPtrInput
	// Output only. Status of the resource referenced by this asset.
	ResourceStatuses DataplexAssetResourceStatusArrayInput
	// Output only. Status of the security policy applied to resource referenced by this asset.
	SecurityStatuses DataplexAssetSecurityStatusArrayInput
	// Output only. Current state of the asset. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DataplexAssetTimeoutsPtrInput
	// Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and
	// re-created with the same name.
	Uid pulumi.StringPtrInput
	// Output only. The time when the asset was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (DataplexAssetState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAssetState)(nil)).Elem()
}

type dataplexAssetArgs struct {
	DataplexAssetId *string `pulumi:"dataplexAssetId"`
	// The zone for the resource
	DataplexZone string `pulumi:"dataplexZone"`
	// Optional. Description of the asset.
	Description *string `pulumi:"description"`
	// Required. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset,
	// the asset will use the spec set on the parent zone.
	DiscoverySpec DataplexAssetDiscoverySpec `pulumi:"discoverySpec"`
	// Optional. User friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// Optional. User defined labels for the asset. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The lake for the resource
	Lake string `pulumi:"lake"`
	// The location for the resource
	Location string `pulumi:"location"`
	// The name of the asset.
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// Required. Immutable. Specification of the resource that is referenced by this asset.
	ResourceSpec DataplexAssetResourceSpec `pulumi:"resourceSpec"`
	Timeouts     *DataplexAssetTimeouts    `pulumi:"timeouts"`
}

// The set of arguments for constructing a DataplexAsset resource.
type DataplexAssetArgs struct {
	DataplexAssetId pulumi.StringPtrInput
	// The zone for the resource
	DataplexZone pulumi.StringInput
	// Optional. Description of the asset.
	Description pulumi.StringPtrInput
	// Required. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset,
	// the asset will use the spec set on the parent zone.
	DiscoverySpec DataplexAssetDiscoverySpecInput
	// Optional. User friendly display name.
	DisplayName pulumi.StringPtrInput
	// Optional. User defined labels for the asset. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The lake for the resource
	Lake pulumi.StringInput
	// The location for the resource
	Location pulumi.StringInput
	// The name of the asset.
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// Required. Immutable. Specification of the resource that is referenced by this asset.
	ResourceSpec DataplexAssetResourceSpecInput
	Timeouts     DataplexAssetTimeoutsPtrInput
}

func (DataplexAssetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexAssetArgs)(nil)).Elem()
}

type DataplexAssetInput interface {
	pulumi.Input

	ToDataplexAssetOutput() DataplexAssetOutput
	ToDataplexAssetOutputWithContext(ctx context.Context) DataplexAssetOutput
}

func (*DataplexAsset) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAsset)(nil)).Elem()
}

func (i *DataplexAsset) ToDataplexAssetOutput() DataplexAssetOutput {
	return i.ToDataplexAssetOutputWithContext(context.Background())
}

func (i *DataplexAsset) ToDataplexAssetOutputWithContext(ctx context.Context) DataplexAssetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexAssetOutput)
}

type DataplexAssetOutput struct{ *pulumi.OutputState }

func (DataplexAssetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexAsset)(nil)).Elem()
}

func (o DataplexAssetOutput) ToDataplexAssetOutput() DataplexAssetOutput {
	return o
}

func (o DataplexAssetOutput) ToDataplexAssetOutputWithContext(ctx context.Context) DataplexAssetOutput {
	return o
}

// Output only. The time when the asset was created.
func (o DataplexAssetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o DataplexAssetOutput) DataplexAssetId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.DataplexAssetId }).(pulumi.StringOutput)
}

// The zone for the resource
func (o DataplexAssetOutput) DataplexZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.DataplexZone }).(pulumi.StringOutput)
}

// Optional. Description of the asset.
func (o DataplexAssetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Required. Specification of the discovery feature applied to data referenced by this asset. When this spec is left unset,
// the asset will use the spec set on the parent zone.
func (o DataplexAssetOutput) DiscoverySpec() DataplexAssetDiscoverySpecOutput {
	return o.ApplyT(func(v *DataplexAsset) DataplexAssetDiscoverySpecOutput { return v.DiscoverySpec }).(DataplexAssetDiscoverySpecOutput)
}

// Output only. Status of the discovery feature applied to data referenced by this asset.
func (o DataplexAssetOutput) DiscoveryStatuses() DataplexAssetDiscoveryStatusArrayOutput {
	return o.ApplyT(func(v *DataplexAsset) DataplexAssetDiscoveryStatusArrayOutput { return v.DiscoveryStatuses }).(DataplexAssetDiscoveryStatusArrayOutput)
}

// Optional. User friendly display name.
func (o DataplexAssetOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o DataplexAssetOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. User defined labels for the asset. **Note**: This field is non-authoritative, and will only manage the labels
// present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
// resource.
func (o DataplexAssetOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The lake for the resource
func (o DataplexAssetOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.Lake }).(pulumi.StringOutput)
}

// The location for the resource
func (o DataplexAssetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the asset.
func (o DataplexAssetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project for the resource
func (o DataplexAssetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Required. Immutable. Specification of the resource that is referenced by this asset.
func (o DataplexAssetOutput) ResourceSpec() DataplexAssetResourceSpecOutput {
	return o.ApplyT(func(v *DataplexAsset) DataplexAssetResourceSpecOutput { return v.ResourceSpec }).(DataplexAssetResourceSpecOutput)
}

// Output only. Status of the resource referenced by this asset.
func (o DataplexAssetOutput) ResourceStatuses() DataplexAssetResourceStatusArrayOutput {
	return o.ApplyT(func(v *DataplexAsset) DataplexAssetResourceStatusArrayOutput { return v.ResourceStatuses }).(DataplexAssetResourceStatusArrayOutput)
}

// Output only. Status of the security policy applied to resource referenced by this asset.
func (o DataplexAssetOutput) SecurityStatuses() DataplexAssetSecurityStatusArrayOutput {
	return o.ApplyT(func(v *DataplexAsset) DataplexAssetSecurityStatusArrayOutput { return v.SecurityStatuses }).(DataplexAssetSecurityStatusArrayOutput)
}

// Output only. Current state of the asset. Possible values: STATE_UNSPECIFIED, ACTIVE, CREATING, DELETING, ACTION_REQUIRED
func (o DataplexAssetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DataplexAssetOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DataplexAssetOutput) Timeouts() DataplexAssetTimeoutsPtrOutput {
	return o.ApplyT(func(v *DataplexAsset) DataplexAssetTimeoutsPtrOutput { return v.Timeouts }).(DataplexAssetTimeoutsPtrOutput)
}

// Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and
// re-created with the same name.
func (o DataplexAssetOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. The time when the asset was last updated.
func (o DataplexAssetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexAsset) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexAssetInput)(nil)).Elem(), &DataplexAsset{})
	pulumi.RegisterOutputType(DataplexAssetOutput{})
}
