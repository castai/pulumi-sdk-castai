// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeFirewallPolicyAssociation struct {
	pulumi.CustomResourceState

	// The target that the firewall policy is attached to.
	AttachmentTarget                   pulumi.StringOutput `pulumi:"attachmentTarget"`
	ComputeFirewallPolicyAssociationId pulumi.StringOutput `pulumi:"computeFirewallPolicyAssociationId"`
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringOutput `pulumi:"firewallPolicy"`
	// The name for an association.
	Name pulumi.StringOutput `pulumi:"name"`
	// The short name of the firewall policy of the association.
	ShortName pulumi.StringOutput                               `pulumi:"shortName"`
	Timeouts  ComputeFirewallPolicyAssociationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeFirewallPolicyAssociation registers a new resource with the given unique name, arguments, and options.
func NewComputeFirewallPolicyAssociation(ctx *pulumi.Context,
	name string, args *ComputeFirewallPolicyAssociationArgs, opts ...pulumi.ResourceOption) (*ComputeFirewallPolicyAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttachmentTarget == nil {
		return nil, errors.New("invalid value for required argument 'AttachmentTarget'")
	}
	if args.FirewallPolicy == nil {
		return nil, errors.New("invalid value for required argument 'FirewallPolicy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeFirewallPolicyAssociation
	err = ctx.RegisterPackageResource("google-beta:index/computeFirewallPolicyAssociation:ComputeFirewallPolicyAssociation", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeFirewallPolicyAssociation gets an existing ComputeFirewallPolicyAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeFirewallPolicyAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeFirewallPolicyAssociationState, opts ...pulumi.ResourceOption) (*ComputeFirewallPolicyAssociation, error) {
	var resource ComputeFirewallPolicyAssociation
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeFirewallPolicyAssociation:ComputeFirewallPolicyAssociation", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeFirewallPolicyAssociation resources.
type computeFirewallPolicyAssociationState struct {
	// The target that the firewall policy is attached to.
	AttachmentTarget                   *string `pulumi:"attachmentTarget"`
	ComputeFirewallPolicyAssociationId *string `pulumi:"computeFirewallPolicyAssociationId"`
	// The firewall policy of the resource.
	FirewallPolicy *string `pulumi:"firewallPolicy"`
	// The name for an association.
	Name *string `pulumi:"name"`
	// The short name of the firewall policy of the association.
	ShortName *string                                   `pulumi:"shortName"`
	Timeouts  *ComputeFirewallPolicyAssociationTimeouts `pulumi:"timeouts"`
}

type ComputeFirewallPolicyAssociationState struct {
	// The target that the firewall policy is attached to.
	AttachmentTarget                   pulumi.StringPtrInput
	ComputeFirewallPolicyAssociationId pulumi.StringPtrInput
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringPtrInput
	// The name for an association.
	Name pulumi.StringPtrInput
	// The short name of the firewall policy of the association.
	ShortName pulumi.StringPtrInput
	Timeouts  ComputeFirewallPolicyAssociationTimeoutsPtrInput
}

func (ComputeFirewallPolicyAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeFirewallPolicyAssociationState)(nil)).Elem()
}

type computeFirewallPolicyAssociationArgs struct {
	// The target that the firewall policy is attached to.
	AttachmentTarget                   string  `pulumi:"attachmentTarget"`
	ComputeFirewallPolicyAssociationId *string `pulumi:"computeFirewallPolicyAssociationId"`
	// The firewall policy of the resource.
	FirewallPolicy string `pulumi:"firewallPolicy"`
	// The name for an association.
	Name     *string                                   `pulumi:"name"`
	Timeouts *ComputeFirewallPolicyAssociationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeFirewallPolicyAssociation resource.
type ComputeFirewallPolicyAssociationArgs struct {
	// The target that the firewall policy is attached to.
	AttachmentTarget                   pulumi.StringInput
	ComputeFirewallPolicyAssociationId pulumi.StringPtrInput
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringInput
	// The name for an association.
	Name     pulumi.StringPtrInput
	Timeouts ComputeFirewallPolicyAssociationTimeoutsPtrInput
}

func (ComputeFirewallPolicyAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeFirewallPolicyAssociationArgs)(nil)).Elem()
}

type ComputeFirewallPolicyAssociationInput interface {
	pulumi.Input

	ToComputeFirewallPolicyAssociationOutput() ComputeFirewallPolicyAssociationOutput
	ToComputeFirewallPolicyAssociationOutputWithContext(ctx context.Context) ComputeFirewallPolicyAssociationOutput
}

func (*ComputeFirewallPolicyAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeFirewallPolicyAssociation)(nil)).Elem()
}

func (i *ComputeFirewallPolicyAssociation) ToComputeFirewallPolicyAssociationOutput() ComputeFirewallPolicyAssociationOutput {
	return i.ToComputeFirewallPolicyAssociationOutputWithContext(context.Background())
}

func (i *ComputeFirewallPolicyAssociation) ToComputeFirewallPolicyAssociationOutputWithContext(ctx context.Context) ComputeFirewallPolicyAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeFirewallPolicyAssociationOutput)
}

type ComputeFirewallPolicyAssociationOutput struct{ *pulumi.OutputState }

func (ComputeFirewallPolicyAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeFirewallPolicyAssociation)(nil)).Elem()
}

func (o ComputeFirewallPolicyAssociationOutput) ToComputeFirewallPolicyAssociationOutput() ComputeFirewallPolicyAssociationOutput {
	return o
}

func (o ComputeFirewallPolicyAssociationOutput) ToComputeFirewallPolicyAssociationOutputWithContext(ctx context.Context) ComputeFirewallPolicyAssociationOutput {
	return o
}

// The target that the firewall policy is attached to.
func (o ComputeFirewallPolicyAssociationOutput) AttachmentTarget() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyAssociation) pulumi.StringOutput { return v.AttachmentTarget }).(pulumi.StringOutput)
}

func (o ComputeFirewallPolicyAssociationOutput) ComputeFirewallPolicyAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyAssociation) pulumi.StringOutput {
		return v.ComputeFirewallPolicyAssociationId
	}).(pulumi.StringOutput)
}

// The firewall policy of the resource.
func (o ComputeFirewallPolicyAssociationOutput) FirewallPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyAssociation) pulumi.StringOutput { return v.FirewallPolicy }).(pulumi.StringOutput)
}

// The name for an association.
func (o ComputeFirewallPolicyAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The short name of the firewall policy of the association.
func (o ComputeFirewallPolicyAssociationOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyAssociation) pulumi.StringOutput { return v.ShortName }).(pulumi.StringOutput)
}

func (o ComputeFirewallPolicyAssociationOutput) Timeouts() ComputeFirewallPolicyAssociationTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeFirewallPolicyAssociation) ComputeFirewallPolicyAssociationTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputeFirewallPolicyAssociationTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeFirewallPolicyAssociationInput)(nil)).Elem(), &ComputeFirewallPolicyAssociation{})
	pulumi.RegisterOutputType(ComputeFirewallPolicyAssociationOutput{})
}
