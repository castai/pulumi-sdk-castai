// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexEntryGroupIamMember struct {
	pulumi.CustomResourceState

	Condition                     DataplexEntryGroupIamMemberConditionPtrOutput `pulumi:"condition"`
	DataplexEntryGroupIamMemberId pulumi.StringOutput                           `pulumi:"dataplexEntryGroupIamMemberId"`
	EntryGroupId                  pulumi.StringOutput                           `pulumi:"entryGroupId"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	Location                      pulumi.StringOutput                           `pulumi:"location"`
	Member                        pulumi.StringOutput                           `pulumi:"member"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
}

// NewDataplexEntryGroupIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataplexEntryGroupIamMember(ctx *pulumi.Context,
	name string, args *DataplexEntryGroupIamMemberArgs, opts ...pulumi.ResourceOption) (*DataplexEntryGroupIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntryGroupId == nil {
		return nil, errors.New("invalid value for required argument 'EntryGroupId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexEntryGroupIamMember
	err = ctx.RegisterPackageResource("google-beta:index/dataplexEntryGroupIamMember:DataplexEntryGroupIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexEntryGroupIamMember gets an existing DataplexEntryGroupIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexEntryGroupIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexEntryGroupIamMemberState, opts ...pulumi.ResourceOption) (*DataplexEntryGroupIamMember, error) {
	var resource DataplexEntryGroupIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexEntryGroupIamMember:DataplexEntryGroupIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexEntryGroupIamMember resources.
type dataplexEntryGroupIamMemberState struct {
	Condition                     *DataplexEntryGroupIamMemberCondition `pulumi:"condition"`
	DataplexEntryGroupIamMemberId *string                               `pulumi:"dataplexEntryGroupIamMemberId"`
	EntryGroupId                  *string                               `pulumi:"entryGroupId"`
	Etag                          *string                               `pulumi:"etag"`
	Location                      *string                               `pulumi:"location"`
	Member                        *string                               `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	Role                          *string                               `pulumi:"role"`
}

type DataplexEntryGroupIamMemberState struct {
	Condition                     DataplexEntryGroupIamMemberConditionPtrInput
	DataplexEntryGroupIamMemberId pulumi.StringPtrInput
	EntryGroupId                  pulumi.StringPtrInput
	Etag                          pulumi.StringPtrInput
	Location                      pulumi.StringPtrInput
	Member                        pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
}

func (DataplexEntryGroupIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexEntryGroupIamMemberState)(nil)).Elem()
}

type dataplexEntryGroupIamMemberArgs struct {
	Condition                     *DataplexEntryGroupIamMemberCondition `pulumi:"condition"`
	DataplexEntryGroupIamMemberId *string                               `pulumi:"dataplexEntryGroupIamMemberId"`
	EntryGroupId                  string                                `pulumi:"entryGroupId"`
	Location                      *string                               `pulumi:"location"`
	Member                        string                                `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	Role                          string                                `pulumi:"role"`
}

// The set of arguments for constructing a DataplexEntryGroupIamMember resource.
type DataplexEntryGroupIamMemberArgs struct {
	Condition                     DataplexEntryGroupIamMemberConditionPtrInput
	DataplexEntryGroupIamMemberId pulumi.StringPtrInput
	EntryGroupId                  pulumi.StringInput
	Location                      pulumi.StringPtrInput
	Member                        pulumi.StringInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringInput
}

func (DataplexEntryGroupIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexEntryGroupIamMemberArgs)(nil)).Elem()
}

type DataplexEntryGroupIamMemberInput interface {
	pulumi.Input

	ToDataplexEntryGroupIamMemberOutput() DataplexEntryGroupIamMemberOutput
	ToDataplexEntryGroupIamMemberOutputWithContext(ctx context.Context) DataplexEntryGroupIamMemberOutput
}

func (*DataplexEntryGroupIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexEntryGroupIamMember)(nil)).Elem()
}

func (i *DataplexEntryGroupIamMember) ToDataplexEntryGroupIamMemberOutput() DataplexEntryGroupIamMemberOutput {
	return i.ToDataplexEntryGroupIamMemberOutputWithContext(context.Background())
}

func (i *DataplexEntryGroupIamMember) ToDataplexEntryGroupIamMemberOutputWithContext(ctx context.Context) DataplexEntryGroupIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexEntryGroupIamMemberOutput)
}

type DataplexEntryGroupIamMemberOutput struct{ *pulumi.OutputState }

func (DataplexEntryGroupIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexEntryGroupIamMember)(nil)).Elem()
}

func (o DataplexEntryGroupIamMemberOutput) ToDataplexEntryGroupIamMemberOutput() DataplexEntryGroupIamMemberOutput {
	return o
}

func (o DataplexEntryGroupIamMemberOutput) ToDataplexEntryGroupIamMemberOutputWithContext(ctx context.Context) DataplexEntryGroupIamMemberOutput {
	return o
}

func (o DataplexEntryGroupIamMemberOutput) Condition() DataplexEntryGroupIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataplexEntryGroupIamMember) DataplexEntryGroupIamMemberConditionPtrOutput { return v.Condition }).(DataplexEntryGroupIamMemberConditionPtrOutput)
}

func (o DataplexEntryGroupIamMemberOutput) DataplexEntryGroupIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryGroupIamMember) pulumi.StringOutput { return v.DataplexEntryGroupIamMemberId }).(pulumi.StringOutput)
}

func (o DataplexEntryGroupIamMemberOutput) EntryGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryGroupIamMember) pulumi.StringOutput { return v.EntryGroupId }).(pulumi.StringOutput)
}

func (o DataplexEntryGroupIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryGroupIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexEntryGroupIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryGroupIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexEntryGroupIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryGroupIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataplexEntryGroupIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryGroupIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataplexEntryGroupIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryGroupIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexEntryGroupIamMemberInput)(nil)).Elem(), &DataplexEntryGroupIamMember{})
	pulumi.RegisterOutputType(DataplexEntryGroupIamMemberOutput{})
}
