// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeGlobalNetworkEndpoint struct {
	pulumi.CustomResourceState

	ComputeGlobalNetworkEndpointId pulumi.StringOutput `pulumi:"computeGlobalNetworkEndpointId"`
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn pulumi.StringPtrOutput `pulumi:"fqdn"`
	// The global network endpoint group this endpoint is part of.
	GlobalNetworkEndpointGroup pulumi.StringOutput `pulumi:"globalNetworkEndpointGroup"`
	// IPv4 address external endpoint.
	IpAddress pulumi.StringPtrOutput `pulumi:"ipAddress"`
	// Port number of the external endpoint.
	Port     pulumi.Float64Output                          `pulumi:"port"`
	Project  pulumi.StringOutput                           `pulumi:"project"`
	Timeouts ComputeGlobalNetworkEndpointTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeGlobalNetworkEndpoint registers a new resource with the given unique name, arguments, and options.
func NewComputeGlobalNetworkEndpoint(ctx *pulumi.Context,
	name string, args *ComputeGlobalNetworkEndpointArgs, opts ...pulumi.ResourceOption) (*ComputeGlobalNetworkEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GlobalNetworkEndpointGroup == nil {
		return nil, errors.New("invalid value for required argument 'GlobalNetworkEndpointGroup'")
	}
	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeGlobalNetworkEndpoint
	err = ctx.RegisterPackageResource("google-beta:index/computeGlobalNetworkEndpoint:ComputeGlobalNetworkEndpoint", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeGlobalNetworkEndpoint gets an existing ComputeGlobalNetworkEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeGlobalNetworkEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeGlobalNetworkEndpointState, opts ...pulumi.ResourceOption) (*ComputeGlobalNetworkEndpoint, error) {
	var resource ComputeGlobalNetworkEndpoint
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeGlobalNetworkEndpoint:ComputeGlobalNetworkEndpoint", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeGlobalNetworkEndpoint resources.
type computeGlobalNetworkEndpointState struct {
	ComputeGlobalNetworkEndpointId *string `pulumi:"computeGlobalNetworkEndpointId"`
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn *string `pulumi:"fqdn"`
	// The global network endpoint group this endpoint is part of.
	GlobalNetworkEndpointGroup *string `pulumi:"globalNetworkEndpointGroup"`
	// IPv4 address external endpoint.
	IpAddress *string `pulumi:"ipAddress"`
	// Port number of the external endpoint.
	Port     *float64                              `pulumi:"port"`
	Project  *string                               `pulumi:"project"`
	Timeouts *ComputeGlobalNetworkEndpointTimeouts `pulumi:"timeouts"`
}

type ComputeGlobalNetworkEndpointState struct {
	ComputeGlobalNetworkEndpointId pulumi.StringPtrInput
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn pulumi.StringPtrInput
	// The global network endpoint group this endpoint is part of.
	GlobalNetworkEndpointGroup pulumi.StringPtrInput
	// IPv4 address external endpoint.
	IpAddress pulumi.StringPtrInput
	// Port number of the external endpoint.
	Port     pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	Timeouts ComputeGlobalNetworkEndpointTimeoutsPtrInput
}

func (ComputeGlobalNetworkEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeGlobalNetworkEndpointState)(nil)).Elem()
}

type computeGlobalNetworkEndpointArgs struct {
	ComputeGlobalNetworkEndpointId *string `pulumi:"computeGlobalNetworkEndpointId"`
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn *string `pulumi:"fqdn"`
	// The global network endpoint group this endpoint is part of.
	GlobalNetworkEndpointGroup string `pulumi:"globalNetworkEndpointGroup"`
	// IPv4 address external endpoint.
	IpAddress *string `pulumi:"ipAddress"`
	// Port number of the external endpoint.
	Port     float64                               `pulumi:"port"`
	Project  *string                               `pulumi:"project"`
	Timeouts *ComputeGlobalNetworkEndpointTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeGlobalNetworkEndpoint resource.
type ComputeGlobalNetworkEndpointArgs struct {
	ComputeGlobalNetworkEndpointId pulumi.StringPtrInput
	// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
	// INTERNET_FQDN_PORT.
	Fqdn pulumi.StringPtrInput
	// The global network endpoint group this endpoint is part of.
	GlobalNetworkEndpointGroup pulumi.StringInput
	// IPv4 address external endpoint.
	IpAddress pulumi.StringPtrInput
	// Port number of the external endpoint.
	Port     pulumi.Float64Input
	Project  pulumi.StringPtrInput
	Timeouts ComputeGlobalNetworkEndpointTimeoutsPtrInput
}

func (ComputeGlobalNetworkEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeGlobalNetworkEndpointArgs)(nil)).Elem()
}

type ComputeGlobalNetworkEndpointInput interface {
	pulumi.Input

	ToComputeGlobalNetworkEndpointOutput() ComputeGlobalNetworkEndpointOutput
	ToComputeGlobalNetworkEndpointOutputWithContext(ctx context.Context) ComputeGlobalNetworkEndpointOutput
}

func (*ComputeGlobalNetworkEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeGlobalNetworkEndpoint)(nil)).Elem()
}

func (i *ComputeGlobalNetworkEndpoint) ToComputeGlobalNetworkEndpointOutput() ComputeGlobalNetworkEndpointOutput {
	return i.ToComputeGlobalNetworkEndpointOutputWithContext(context.Background())
}

func (i *ComputeGlobalNetworkEndpoint) ToComputeGlobalNetworkEndpointOutputWithContext(ctx context.Context) ComputeGlobalNetworkEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeGlobalNetworkEndpointOutput)
}

type ComputeGlobalNetworkEndpointOutput struct{ *pulumi.OutputState }

func (ComputeGlobalNetworkEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeGlobalNetworkEndpoint)(nil)).Elem()
}

func (o ComputeGlobalNetworkEndpointOutput) ToComputeGlobalNetworkEndpointOutput() ComputeGlobalNetworkEndpointOutput {
	return o
}

func (o ComputeGlobalNetworkEndpointOutput) ToComputeGlobalNetworkEndpointOutputWithContext(ctx context.Context) ComputeGlobalNetworkEndpointOutput {
	return o
}

func (o ComputeGlobalNetworkEndpointOutput) ComputeGlobalNetworkEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeGlobalNetworkEndpoint) pulumi.StringOutput { return v.ComputeGlobalNetworkEndpointId }).(pulumi.StringOutput)
}

// Fully qualified domain name of network endpoint. This can only be specified when network_endpoint_type of the NEG is
// INTERNET_FQDN_PORT.
func (o ComputeGlobalNetworkEndpointOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeGlobalNetworkEndpoint) pulumi.StringPtrOutput { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The global network endpoint group this endpoint is part of.
func (o ComputeGlobalNetworkEndpointOutput) GlobalNetworkEndpointGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeGlobalNetworkEndpoint) pulumi.StringOutput { return v.GlobalNetworkEndpointGroup }).(pulumi.StringOutput)
}

// IPv4 address external endpoint.
func (o ComputeGlobalNetworkEndpointOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeGlobalNetworkEndpoint) pulumi.StringPtrOutput { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Port number of the external endpoint.
func (o ComputeGlobalNetworkEndpointOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeGlobalNetworkEndpoint) pulumi.Float64Output { return v.Port }).(pulumi.Float64Output)
}

func (o ComputeGlobalNetworkEndpointOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeGlobalNetworkEndpoint) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeGlobalNetworkEndpointOutput) Timeouts() ComputeGlobalNetworkEndpointTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeGlobalNetworkEndpoint) ComputeGlobalNetworkEndpointTimeoutsPtrOutput { return v.Timeouts }).(ComputeGlobalNetworkEndpointTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeGlobalNetworkEndpointInput)(nil)).Elem(), &ComputeGlobalNetworkEndpoint{})
	pulumi.RegisterOutputType(ComputeGlobalNetworkEndpointOutput{})
}
