// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HealthcareConsentStore struct {
	pulumi.CustomResourceState

	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset pulumi.StringOutput `pulumi:"dataset"`
	// Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the
	// expiration time of existing consents. A duration in seconds with up to nine fractional digits, terminated by 's'.
	// Example: "3.5s".
	DefaultConsentTtl pulumi.StringPtrOutput `pulumi:"defaultConsentTtl"`
	EffectiveLabels   pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already
	// exist.
	EnableConsentCreateOnUpdate pulumi.BoolPtrOutput `pulumi:"enableConsentCreateOnUpdate"`
	HealthcareConsentStoreId    pulumi.StringOutput  `pulumi:"healthcareConsentStoreId"`
	// User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have
	// a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}' Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}\p{N}_-]{0,63}' No more than 64 labels can be associated with a given store. An object containing a list
	// of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of this ConsentStore, for example: "consent1"
	Name pulumi.StringOutput `pulumi:"name"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                  `pulumi:"terraformLabels"`
	Timeouts        HealthcareConsentStoreTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewHealthcareConsentStore registers a new resource with the given unique name, arguments, and options.
func NewHealthcareConsentStore(ctx *pulumi.Context,
	name string, args *HealthcareConsentStoreArgs, opts ...pulumi.ResourceOption) (*HealthcareConsentStore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dataset == nil {
		return nil, errors.New("invalid value for required argument 'Dataset'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HealthcareConsentStore
	err = ctx.RegisterPackageResource("google-beta:index/healthcareConsentStore:HealthcareConsentStore", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthcareConsentStore gets an existing HealthcareConsentStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthcareConsentStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthcareConsentStoreState, opts ...pulumi.ResourceOption) (*HealthcareConsentStore, error) {
	var resource HealthcareConsentStore
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/healthcareConsentStore:HealthcareConsentStore", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthcareConsentStore resources.
type healthcareConsentStoreState struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset *string `pulumi:"dataset"`
	// Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the
	// expiration time of existing consents. A duration in seconds with up to nine fractional digits, terminated by 's'.
	// Example: "3.5s".
	DefaultConsentTtl *string           `pulumi:"defaultConsentTtl"`
	EffectiveLabels   map[string]string `pulumi:"effectiveLabels"`
	// If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already
	// exist.
	EnableConsentCreateOnUpdate *bool   `pulumi:"enableConsentCreateOnUpdate"`
	HealthcareConsentStoreId    *string `pulumi:"healthcareConsentStoreId"`
	// User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have
	// a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}' Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}\p{N}_-]{0,63}' No more than 64 labels can be associated with a given store. An object containing a list
	// of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of this ConsentStore, for example: "consent1"
	Name *string `pulumi:"name"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string               `pulumi:"terraformLabels"`
	Timeouts        *HealthcareConsentStoreTimeouts `pulumi:"timeouts"`
}

type HealthcareConsentStoreState struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset pulumi.StringPtrInput
	// Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the
	// expiration time of existing consents. A duration in seconds with up to nine fractional digits, terminated by 's'.
	// Example: "3.5s".
	DefaultConsentTtl pulumi.StringPtrInput
	EffectiveLabels   pulumi.StringMapInput
	// If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already
	// exist.
	EnableConsentCreateOnUpdate pulumi.BoolPtrInput
	HealthcareConsentStoreId    pulumi.StringPtrInput
	// User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have
	// a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}' Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}\p{N}_-]{0,63}' No more than 64 labels can be associated with a given store. An object containing a list
	// of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of this ConsentStore, for example: "consent1"
	Name pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        HealthcareConsentStoreTimeoutsPtrInput
}

func (HealthcareConsentStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareConsentStoreState)(nil)).Elem()
}

type healthcareConsentStoreArgs struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset string `pulumi:"dataset"`
	// Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the
	// expiration time of existing consents. A duration in seconds with up to nine fractional digits, terminated by 's'.
	// Example: "3.5s".
	DefaultConsentTtl *string `pulumi:"defaultConsentTtl"`
	// If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already
	// exist.
	EnableConsentCreateOnUpdate *bool   `pulumi:"enableConsentCreateOnUpdate"`
	HealthcareConsentStoreId    *string `pulumi:"healthcareConsentStoreId"`
	// User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have
	// a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}' Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}\p{N}_-]{0,63}' No more than 64 labels can be associated with a given store. An object containing a list
	// of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of this ConsentStore, for example: "consent1"
	Name     *string                         `pulumi:"name"`
	Timeouts *HealthcareConsentStoreTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a HealthcareConsentStore resource.
type HealthcareConsentStoreArgs struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset pulumi.StringInput
	// Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the
	// expiration time of existing consents. A duration in seconds with up to nine fractional digits, terminated by 's'.
	// Example: "3.5s".
	DefaultConsentTtl pulumi.StringPtrInput
	// If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already
	// exist.
	EnableConsentCreateOnUpdate pulumi.BoolPtrInput
	HealthcareConsentStoreId    pulumi.StringPtrInput
	// User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have
	// a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}' Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// '[\p{Ll}\p{Lo}\p{N}_-]{0,63}' No more than 64 labels can be associated with a given store. An object containing a list
	// of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of this ConsentStore, for example: "consent1"
	Name     pulumi.StringPtrInput
	Timeouts HealthcareConsentStoreTimeoutsPtrInput
}

func (HealthcareConsentStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareConsentStoreArgs)(nil)).Elem()
}

type HealthcareConsentStoreInput interface {
	pulumi.Input

	ToHealthcareConsentStoreOutput() HealthcareConsentStoreOutput
	ToHealthcareConsentStoreOutputWithContext(ctx context.Context) HealthcareConsentStoreOutput
}

func (*HealthcareConsentStore) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareConsentStore)(nil)).Elem()
}

func (i *HealthcareConsentStore) ToHealthcareConsentStoreOutput() HealthcareConsentStoreOutput {
	return i.ToHealthcareConsentStoreOutputWithContext(context.Background())
}

func (i *HealthcareConsentStore) ToHealthcareConsentStoreOutputWithContext(ctx context.Context) HealthcareConsentStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcareConsentStoreOutput)
}

type HealthcareConsentStoreOutput struct{ *pulumi.OutputState }

func (HealthcareConsentStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareConsentStore)(nil)).Elem()
}

func (o HealthcareConsentStoreOutput) ToHealthcareConsentStoreOutput() HealthcareConsentStoreOutput {
	return o
}

func (o HealthcareConsentStoreOutput) ToHealthcareConsentStoreOutputWithContext(ctx context.Context) HealthcareConsentStoreOutput {
	return o
}

// Identifies the dataset addressed by this request. Must be in the format
// 'projects/{project}/locations/{location}/datasets/{dataset}'
func (o HealthcareConsentStoreOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareConsentStore) pulumi.StringOutput { return v.Dataset }).(pulumi.StringOutput)
}

// Default time to live for consents in this store. Must be at least 24 hours. Updating this field will not affect the
// expiration time of existing consents. A duration in seconds with up to nine fractional digits, terminated by 's'.
// Example: "3.5s".
func (o HealthcareConsentStoreOutput) DefaultConsentTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HealthcareConsentStore) pulumi.StringPtrOutput { return v.DefaultConsentTtl }).(pulumi.StringPtrOutput)
}

func (o HealthcareConsentStoreOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HealthcareConsentStore) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// If true, [consents.patch] [google.cloud.healthcare.v1.consent.UpdateConsent] creates the consent if it does not already
// exist.
func (o HealthcareConsentStoreOutput) EnableConsentCreateOnUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HealthcareConsentStore) pulumi.BoolPtrOutput { return v.EnableConsentCreateOnUpdate }).(pulumi.BoolPtrOutput)
}

func (o HealthcareConsentStoreOutput) HealthcareConsentStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareConsentStore) pulumi.StringOutput { return v.HealthcareConsentStoreId }).(pulumi.StringOutput)
}

// User-supplied key-value pairs used to organize Consent stores. Label keys must be between 1 and 63 characters long, have
// a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
// '[\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}' Label values are optional, must be between 1 and 63 characters long, have a
// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
// '[\p{Ll}\p{Lo}\p{N}_-]{0,63}' No more than 64 labels can be associated with a given store. An object containing a list
// of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o HealthcareConsentStoreOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HealthcareConsentStore) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of this ConsentStore, for example: "consent1"
func (o HealthcareConsentStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareConsentStore) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o HealthcareConsentStoreOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HealthcareConsentStore) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o HealthcareConsentStoreOutput) Timeouts() HealthcareConsentStoreTimeoutsPtrOutput {
	return o.ApplyT(func(v *HealthcareConsentStore) HealthcareConsentStoreTimeoutsPtrOutput { return v.Timeouts }).(HealthcareConsentStoreTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcareConsentStoreInput)(nil)).Elem(), &HealthcareConsentStore{})
	pulumi.RegisterOutputType(HealthcareConsentStoreOutput{})
}
