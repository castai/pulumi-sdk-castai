// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IdentityPlatformTenantOauthIdpConfig struct {
	pulumi.CustomResourceState

	// The client id of an OAuth client.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret pulumi.StringPtrOutput `pulumi:"clientSecret"`
	// Human friendly display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// If this config allows users to sign in with the provider.
	Enabled                                pulumi.BoolPtrOutput `pulumi:"enabled"`
	IdentityPlatformTenantOauthIdpConfigId pulumi.StringOutput  `pulumi:"identityPlatformTenantOauthIdpConfigId"`
	// For OIDC Idps, the issuer identifier.
	Issuer pulumi.StringOutput `pulumi:"issuer"`
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the tenant where this OIDC IDP configuration resource exists
	Tenant   pulumi.StringOutput                                   `pulumi:"tenant"`
	Timeouts IdentityPlatformTenantOauthIdpConfigTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewIdentityPlatformTenantOauthIdpConfig registers a new resource with the given unique name, arguments, and options.
func NewIdentityPlatformTenantOauthIdpConfig(ctx *pulumi.Context,
	name string, args *IdentityPlatformTenantOauthIdpConfigArgs, opts ...pulumi.ResourceOption) (*IdentityPlatformTenantOauthIdpConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Issuer == nil {
		return nil, errors.New("invalid value for required argument 'Issuer'")
	}
	if args.Tenant == nil {
		return nil, errors.New("invalid value for required argument 'Tenant'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IdentityPlatformTenantOauthIdpConfig
	err = ctx.RegisterPackageResource("google-beta:index/identityPlatformTenantOauthIdpConfig:IdentityPlatformTenantOauthIdpConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPlatformTenantOauthIdpConfig gets an existing IdentityPlatformTenantOauthIdpConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPlatformTenantOauthIdpConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPlatformTenantOauthIdpConfigState, opts ...pulumi.ResourceOption) (*IdentityPlatformTenantOauthIdpConfig, error) {
	var resource IdentityPlatformTenantOauthIdpConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/identityPlatformTenantOauthIdpConfig:IdentityPlatformTenantOauthIdpConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPlatformTenantOauthIdpConfig resources.
type identityPlatformTenantOauthIdpConfigState struct {
	// The client id of an OAuth client.
	ClientId *string `pulumi:"clientId"`
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret *string `pulumi:"clientSecret"`
	// Human friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// If this config allows users to sign in with the provider.
	Enabled                                *bool   `pulumi:"enabled"`
	IdentityPlatformTenantOauthIdpConfigId *string `pulumi:"identityPlatformTenantOauthIdpConfigId"`
	// For OIDC Idps, the issuer identifier.
	Issuer *string `pulumi:"issuer"`
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The name of the tenant where this OIDC IDP configuration resource exists
	Tenant   *string                                       `pulumi:"tenant"`
	Timeouts *IdentityPlatformTenantOauthIdpConfigTimeouts `pulumi:"timeouts"`
}

type IdentityPlatformTenantOauthIdpConfigState struct {
	// The client id of an OAuth client.
	ClientId pulumi.StringPtrInput
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret pulumi.StringPtrInput
	// Human friendly display name.
	DisplayName pulumi.StringPtrInput
	// If this config allows users to sign in with the provider.
	Enabled                                pulumi.BoolPtrInput
	IdentityPlatformTenantOauthIdpConfigId pulumi.StringPtrInput
	// For OIDC Idps, the issuer identifier.
	Issuer pulumi.StringPtrInput
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The name of the tenant where this OIDC IDP configuration resource exists
	Tenant   pulumi.StringPtrInput
	Timeouts IdentityPlatformTenantOauthIdpConfigTimeoutsPtrInput
}

func (IdentityPlatformTenantOauthIdpConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPlatformTenantOauthIdpConfigState)(nil)).Elem()
}

type identityPlatformTenantOauthIdpConfigArgs struct {
	// The client id of an OAuth client.
	ClientId string `pulumi:"clientId"`
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret *string `pulumi:"clientSecret"`
	// Human friendly display name.
	DisplayName string `pulumi:"displayName"`
	// If this config allows users to sign in with the provider.
	Enabled                                *bool   `pulumi:"enabled"`
	IdentityPlatformTenantOauthIdpConfigId *string `pulumi:"identityPlatformTenantOauthIdpConfigId"`
	// For OIDC Idps, the issuer identifier.
	Issuer string `pulumi:"issuer"`
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The name of the tenant where this OIDC IDP configuration resource exists
	Tenant   string                                        `pulumi:"tenant"`
	Timeouts *IdentityPlatformTenantOauthIdpConfigTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a IdentityPlatformTenantOauthIdpConfig resource.
type IdentityPlatformTenantOauthIdpConfigArgs struct {
	// The client id of an OAuth client.
	ClientId pulumi.StringInput
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret pulumi.StringPtrInput
	// Human friendly display name.
	DisplayName pulumi.StringInput
	// If this config allows users to sign in with the provider.
	Enabled                                pulumi.BoolPtrInput
	IdentityPlatformTenantOauthIdpConfigId pulumi.StringPtrInput
	// For OIDC Idps, the issuer identifier.
	Issuer pulumi.StringInput
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The name of the tenant where this OIDC IDP configuration resource exists
	Tenant   pulumi.StringInput
	Timeouts IdentityPlatformTenantOauthIdpConfigTimeoutsPtrInput
}

func (IdentityPlatformTenantOauthIdpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPlatformTenantOauthIdpConfigArgs)(nil)).Elem()
}

type IdentityPlatformTenantOauthIdpConfigInput interface {
	pulumi.Input

	ToIdentityPlatformTenantOauthIdpConfigOutput() IdentityPlatformTenantOauthIdpConfigOutput
	ToIdentityPlatformTenantOauthIdpConfigOutputWithContext(ctx context.Context) IdentityPlatformTenantOauthIdpConfigOutput
}

func (*IdentityPlatformTenantOauthIdpConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPlatformTenantOauthIdpConfig)(nil)).Elem()
}

func (i *IdentityPlatformTenantOauthIdpConfig) ToIdentityPlatformTenantOauthIdpConfigOutput() IdentityPlatformTenantOauthIdpConfigOutput {
	return i.ToIdentityPlatformTenantOauthIdpConfigOutputWithContext(context.Background())
}

func (i *IdentityPlatformTenantOauthIdpConfig) ToIdentityPlatformTenantOauthIdpConfigOutputWithContext(ctx context.Context) IdentityPlatformTenantOauthIdpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPlatformTenantOauthIdpConfigOutput)
}

type IdentityPlatformTenantOauthIdpConfigOutput struct{ *pulumi.OutputState }

func (IdentityPlatformTenantOauthIdpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPlatformTenantOauthIdpConfig)(nil)).Elem()
}

func (o IdentityPlatformTenantOauthIdpConfigOutput) ToIdentityPlatformTenantOauthIdpConfigOutput() IdentityPlatformTenantOauthIdpConfigOutput {
	return o
}

func (o IdentityPlatformTenantOauthIdpConfigOutput) ToIdentityPlatformTenantOauthIdpConfigOutputWithContext(ctx context.Context) IdentityPlatformTenantOauthIdpConfigOutput {
	return o
}

// The client id of an OAuth client.
func (o IdentityPlatformTenantOauthIdpConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret of the OAuth client, to enable OIDC code flow.
func (o IdentityPlatformTenantOauthIdpConfigOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) pulumi.StringPtrOutput { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Human friendly display name.
func (o IdentityPlatformTenantOauthIdpConfigOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// If this config allows users to sign in with the provider.
func (o IdentityPlatformTenantOauthIdpConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o IdentityPlatformTenantOauthIdpConfigOutput) IdentityPlatformTenantOauthIdpConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) pulumi.StringOutput {
		return v.IdentityPlatformTenantOauthIdpConfigId
	}).(pulumi.StringOutput)
}

// For OIDC Idps, the issuer identifier.
func (o IdentityPlatformTenantOauthIdpConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) pulumi.StringOutput { return v.Issuer }).(pulumi.StringOutput)
}

// The name of the OauthIdpConfig. Must start with 'oidc.'.
func (o IdentityPlatformTenantOauthIdpConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityPlatformTenantOauthIdpConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The name of the tenant where this OIDC IDP configuration resource exists
func (o IdentityPlatformTenantOauthIdpConfigOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) pulumi.StringOutput { return v.Tenant }).(pulumi.StringOutput)
}

func (o IdentityPlatformTenantOauthIdpConfigOutput) Timeouts() IdentityPlatformTenantOauthIdpConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantOauthIdpConfig) IdentityPlatformTenantOauthIdpConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(IdentityPlatformTenantOauthIdpConfigTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPlatformTenantOauthIdpConfigInput)(nil)).Elem(), &IdentityPlatformTenantOauthIdpConfig{})
	pulumi.RegisterOutputType(IdentityPlatformTenantOauthIdpConfigOutput{})
}
