// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDataCatalogTaxonomyIamPolicy(ctx *pulumi.Context, args *LookupDataCatalogTaxonomyIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupDataCatalogTaxonomyIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupDataCatalogTaxonomyIamPolicyResult
	err = ctx.InvokePackage("google-beta:index/getDataCatalogTaxonomyIamPolicy:getDataCatalogTaxonomyIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataCatalogTaxonomyIamPolicy.
type LookupDataCatalogTaxonomyIamPolicyArgs struct {
	Id       *string `pulumi:"id"`
	Project  *string `pulumi:"project"`
	Region   *string `pulumi:"region"`
	Taxonomy string  `pulumi:"taxonomy"`
}

// A collection of values returned by getDataCatalogTaxonomyIamPolicy.
type LookupDataCatalogTaxonomyIamPolicyResult struct {
	Etag       string `pulumi:"etag"`
	Id         string `pulumi:"id"`
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
	Taxonomy   string `pulumi:"taxonomy"`
}

func LookupDataCatalogTaxonomyIamPolicyOutput(ctx *pulumi.Context, args LookupDataCatalogTaxonomyIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupDataCatalogTaxonomyIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDataCatalogTaxonomyIamPolicyResultOutput, error) {
			args := v.(LookupDataCatalogTaxonomyIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupDataCatalogTaxonomyIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getDataCatalogTaxonomyIamPolicy:getDataCatalogTaxonomyIamPolicy", args, LookupDataCatalogTaxonomyIamPolicyResultOutput{}, options).(LookupDataCatalogTaxonomyIamPolicyResultOutput), nil
		}).(LookupDataCatalogTaxonomyIamPolicyResultOutput)
}

// A collection of arguments for invoking getDataCatalogTaxonomyIamPolicy.
type LookupDataCatalogTaxonomyIamPolicyOutputArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
	Region   pulumi.StringPtrInput `pulumi:"region"`
	Taxonomy pulumi.StringInput    `pulumi:"taxonomy"`
}

func (LookupDataCatalogTaxonomyIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataCatalogTaxonomyIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDataCatalogTaxonomyIamPolicy.
type LookupDataCatalogTaxonomyIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupDataCatalogTaxonomyIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataCatalogTaxonomyIamPolicyResult)(nil)).Elem()
}

func (o LookupDataCatalogTaxonomyIamPolicyResultOutput) ToLookupDataCatalogTaxonomyIamPolicyResultOutput() LookupDataCatalogTaxonomyIamPolicyResultOutput {
	return o
}

func (o LookupDataCatalogTaxonomyIamPolicyResultOutput) ToLookupDataCatalogTaxonomyIamPolicyResultOutputWithContext(ctx context.Context) LookupDataCatalogTaxonomyIamPolicyResultOutput {
	return o
}

func (o LookupDataCatalogTaxonomyIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataCatalogTaxonomyIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupDataCatalogTaxonomyIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataCatalogTaxonomyIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDataCatalogTaxonomyIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataCatalogTaxonomyIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupDataCatalogTaxonomyIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataCatalogTaxonomyIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupDataCatalogTaxonomyIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataCatalogTaxonomyIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupDataCatalogTaxonomyIamPolicyResultOutput) Taxonomy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataCatalogTaxonomyIamPolicyResult) string { return v.Taxonomy }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataCatalogTaxonomyIamPolicyResultOutput{})
}
