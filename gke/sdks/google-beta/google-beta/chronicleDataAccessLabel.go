// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ChronicleDataAccessLabel struct {
	pulumi.CustomResourceState

	// Output only. The user who created the data access label.
	Author                     pulumi.StringOutput `pulumi:"author"`
	ChronicleDataAccessLabelId pulumi.StringOutput `pulumi:"chronicleDataAccessLabelId"`
	// Output only. The time at which the data access label was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Required. The ID to use for the data access label, which will become the label's display name and the final component of
	// the label's resource name. The maximum number of characters should be 63. Regex pattern is as per AIP:
	// https://google.aip.dev/122#resource-id-segments
	DataAccessLabelId pulumi.StringOutput `pulumi:"dataAccessLabelId"`
	// Optional. A description of the data access label for a human reader.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance pulumi.StringOutput `pulumi:"instance"`
	// Output only. The user who last updated the data access label.
	LastEditor pulumi.StringOutput `pulumi:"lastEditor"`
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or
	// "europe-west2".
	Location pulumi.StringOutput `pulumi:"location"`
	// The unique resource name of the data access label. This unique identifier is generated using values provided for the URL
	// parameters. Format: projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
	Name     pulumi.StringOutput                       `pulumi:"name"`
	Project  pulumi.StringOutput                       `pulumi:"project"`
	Timeouts ChronicleDataAccessLabelTimeoutsPtrOutput `pulumi:"timeouts"`
	// A UDM query over event data.
	UdmQuery pulumi.StringOutput `pulumi:"udmQuery"`
	// Output only. The time at which the data access label was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewChronicleDataAccessLabel registers a new resource with the given unique name, arguments, and options.
func NewChronicleDataAccessLabel(ctx *pulumi.Context,
	name string, args *ChronicleDataAccessLabelArgs, opts ...pulumi.ResourceOption) (*ChronicleDataAccessLabel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataAccessLabelId == nil {
		return nil, errors.New("invalid value for required argument 'DataAccessLabelId'")
	}
	if args.Instance == nil {
		return nil, errors.New("invalid value for required argument 'Instance'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.UdmQuery == nil {
		return nil, errors.New("invalid value for required argument 'UdmQuery'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ChronicleDataAccessLabel
	err = ctx.RegisterPackageResource("google-beta:index/chronicleDataAccessLabel:ChronicleDataAccessLabel", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetChronicleDataAccessLabel gets an existing ChronicleDataAccessLabel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetChronicleDataAccessLabel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ChronicleDataAccessLabelState, opts ...pulumi.ResourceOption) (*ChronicleDataAccessLabel, error) {
	var resource ChronicleDataAccessLabel
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/chronicleDataAccessLabel:ChronicleDataAccessLabel", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ChronicleDataAccessLabel resources.
type chronicleDataAccessLabelState struct {
	// Output only. The user who created the data access label.
	Author                     *string `pulumi:"author"`
	ChronicleDataAccessLabelId *string `pulumi:"chronicleDataAccessLabelId"`
	// Output only. The time at which the data access label was created.
	CreateTime *string `pulumi:"createTime"`
	// Required. The ID to use for the data access label, which will become the label's display name and the final component of
	// the label's resource name. The maximum number of characters should be 63. Regex pattern is as per AIP:
	// https://google.aip.dev/122#resource-id-segments
	DataAccessLabelId *string `pulumi:"dataAccessLabelId"`
	// Optional. A description of the data access label for a human reader.
	Description *string `pulumi:"description"`
	// Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
	DisplayName *string `pulumi:"displayName"`
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance *string `pulumi:"instance"`
	// Output only. The user who last updated the data access label.
	LastEditor *string `pulumi:"lastEditor"`
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or
	// "europe-west2".
	Location *string `pulumi:"location"`
	// The unique resource name of the data access label. This unique identifier is generated using values provided for the URL
	// parameters. Format: projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
	Name     *string                           `pulumi:"name"`
	Project  *string                           `pulumi:"project"`
	Timeouts *ChronicleDataAccessLabelTimeouts `pulumi:"timeouts"`
	// A UDM query over event data.
	UdmQuery *string `pulumi:"udmQuery"`
	// Output only. The time at which the data access label was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ChronicleDataAccessLabelState struct {
	// Output only. The user who created the data access label.
	Author                     pulumi.StringPtrInput
	ChronicleDataAccessLabelId pulumi.StringPtrInput
	// Output only. The time at which the data access label was created.
	CreateTime pulumi.StringPtrInput
	// Required. The ID to use for the data access label, which will become the label's display name and the final component of
	// the label's resource name. The maximum number of characters should be 63. Regex pattern is as per AIP:
	// https://google.aip.dev/122#resource-id-segments
	DataAccessLabelId pulumi.StringPtrInput
	// Optional. A description of the data access label for a human reader.
	Description pulumi.StringPtrInput
	// Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
	DisplayName pulumi.StringPtrInput
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance pulumi.StringPtrInput
	// Output only. The user who last updated the data access label.
	LastEditor pulumi.StringPtrInput
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or
	// "europe-west2".
	Location pulumi.StringPtrInput
	// The unique resource name of the data access label. This unique identifier is generated using values provided for the URL
	// parameters. Format: projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts ChronicleDataAccessLabelTimeoutsPtrInput
	// A UDM query over event data.
	UdmQuery pulumi.StringPtrInput
	// Output only. The time at which the data access label was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (ChronicleDataAccessLabelState) ElementType() reflect.Type {
	return reflect.TypeOf((*chronicleDataAccessLabelState)(nil)).Elem()
}

type chronicleDataAccessLabelArgs struct {
	ChronicleDataAccessLabelId *string `pulumi:"chronicleDataAccessLabelId"`
	// Required. The ID to use for the data access label, which will become the label's display name and the final component of
	// the label's resource name. The maximum number of characters should be 63. Regex pattern is as per AIP:
	// https://google.aip.dev/122#resource-id-segments
	DataAccessLabelId string `pulumi:"dataAccessLabelId"`
	// Optional. A description of the data access label for a human reader.
	Description *string `pulumi:"description"`
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance string `pulumi:"instance"`
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or
	// "europe-west2".
	Location string                            `pulumi:"location"`
	Project  *string                           `pulumi:"project"`
	Timeouts *ChronicleDataAccessLabelTimeouts `pulumi:"timeouts"`
	// A UDM query over event data.
	UdmQuery string `pulumi:"udmQuery"`
}

// The set of arguments for constructing a ChronicleDataAccessLabel resource.
type ChronicleDataAccessLabelArgs struct {
	ChronicleDataAccessLabelId pulumi.StringPtrInput
	// Required. The ID to use for the data access label, which will become the label's display name and the final component of
	// the label's resource name. The maximum number of characters should be 63. Regex pattern is as per AIP:
	// https://google.aip.dev/122#resource-id-segments
	DataAccessLabelId pulumi.StringInput
	// Optional. A description of the data access label for a human reader.
	Description pulumi.StringPtrInput
	// The unique identifier for the Chronicle instance, which is the same as the customer ID.
	Instance pulumi.StringInput
	// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or
	// "europe-west2".
	Location pulumi.StringInput
	Project  pulumi.StringPtrInput
	Timeouts ChronicleDataAccessLabelTimeoutsPtrInput
	// A UDM query over event data.
	UdmQuery pulumi.StringInput
}

func (ChronicleDataAccessLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*chronicleDataAccessLabelArgs)(nil)).Elem()
}

type ChronicleDataAccessLabelInput interface {
	pulumi.Input

	ToChronicleDataAccessLabelOutput() ChronicleDataAccessLabelOutput
	ToChronicleDataAccessLabelOutputWithContext(ctx context.Context) ChronicleDataAccessLabelOutput
}

func (*ChronicleDataAccessLabel) ElementType() reflect.Type {
	return reflect.TypeOf((**ChronicleDataAccessLabel)(nil)).Elem()
}

func (i *ChronicleDataAccessLabel) ToChronicleDataAccessLabelOutput() ChronicleDataAccessLabelOutput {
	return i.ToChronicleDataAccessLabelOutputWithContext(context.Background())
}

func (i *ChronicleDataAccessLabel) ToChronicleDataAccessLabelOutputWithContext(ctx context.Context) ChronicleDataAccessLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChronicleDataAccessLabelOutput)
}

type ChronicleDataAccessLabelOutput struct{ *pulumi.OutputState }

func (ChronicleDataAccessLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChronicleDataAccessLabel)(nil)).Elem()
}

func (o ChronicleDataAccessLabelOutput) ToChronicleDataAccessLabelOutput() ChronicleDataAccessLabelOutput {
	return o
}

func (o ChronicleDataAccessLabelOutput) ToChronicleDataAccessLabelOutputWithContext(ctx context.Context) ChronicleDataAccessLabelOutput {
	return o
}

// Output only. The user who created the data access label.
func (o ChronicleDataAccessLabelOutput) Author() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.Author }).(pulumi.StringOutput)
}

func (o ChronicleDataAccessLabelOutput) ChronicleDataAccessLabelId() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.ChronicleDataAccessLabelId }).(pulumi.StringOutput)
}

// Output only. The time at which the data access label was created.
func (o ChronicleDataAccessLabelOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Required. The ID to use for the data access label, which will become the label's display name and the final component of
// the label's resource name. The maximum number of characters should be 63. Regex pattern is as per AIP:
// https://google.aip.dev/122#resource-id-segments
func (o ChronicleDataAccessLabelOutput) DataAccessLabelId() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.DataAccessLabelId }).(pulumi.StringOutput)
}

// Optional. A description of the data access label for a human reader.
func (o ChronicleDataAccessLabelOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
func (o ChronicleDataAccessLabelOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The unique identifier for the Chronicle instance, which is the same as the customer ID.
func (o ChronicleDataAccessLabelOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.Instance }).(pulumi.StringOutput)
}

// Output only. The user who last updated the data access label.
func (o ChronicleDataAccessLabelOutput) LastEditor() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.LastEditor }).(pulumi.StringOutput)
}

// The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or
// "europe-west2".
func (o ChronicleDataAccessLabelOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The unique resource name of the data access label. This unique identifier is generated using values provided for the URL
// parameters. Format: projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
func (o ChronicleDataAccessLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ChronicleDataAccessLabelOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ChronicleDataAccessLabelOutput) Timeouts() ChronicleDataAccessLabelTimeoutsPtrOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) ChronicleDataAccessLabelTimeoutsPtrOutput { return v.Timeouts }).(ChronicleDataAccessLabelTimeoutsPtrOutput)
}

// A UDM query over event data.
func (o ChronicleDataAccessLabelOutput) UdmQuery() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.UdmQuery }).(pulumi.StringOutput)
}

// Output only. The time at which the data access label was last updated.
func (o ChronicleDataAccessLabelOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ChronicleDataAccessLabel) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChronicleDataAccessLabelInput)(nil)).Elem(), &ChronicleDataAccessLabel{})
	pulumi.RegisterOutputType(ChronicleDataAccessLabelOutput{})
}
