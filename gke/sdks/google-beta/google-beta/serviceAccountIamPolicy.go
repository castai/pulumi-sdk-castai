// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceAccountIamPolicy struct {
	pulumi.CustomResourceState

	Etag                      pulumi.StringOutput `pulumi:"etag"`
	PolicyData                pulumi.StringOutput `pulumi:"policyData"`
	ServiceAccountIamPolicyId pulumi.StringOutput `pulumi:"serviceAccountIamPolicyId"`
	ServiceAccountId          pulumi.StringOutput `pulumi:"serviceAccountId"`
}

// NewServiceAccountIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewServiceAccountIamPolicy(ctx *pulumi.Context,
	name string, args *ServiceAccountIamPolicyArgs, opts ...pulumi.ResourceOption) (*ServiceAccountIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceAccountIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/serviceAccountIamPolicy:ServiceAccountIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAccountIamPolicy gets an existing ServiceAccountIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceAccountIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceAccountIamPolicyState, opts ...pulumi.ResourceOption) (*ServiceAccountIamPolicy, error) {
	var resource ServiceAccountIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/serviceAccountIamPolicy:ServiceAccountIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceAccountIamPolicy resources.
type serviceAccountIamPolicyState struct {
	Etag                      *string `pulumi:"etag"`
	PolicyData                *string `pulumi:"policyData"`
	ServiceAccountIamPolicyId *string `pulumi:"serviceAccountIamPolicyId"`
	ServiceAccountId          *string `pulumi:"serviceAccountId"`
}

type ServiceAccountIamPolicyState struct {
	Etag                      pulumi.StringPtrInput
	PolicyData                pulumi.StringPtrInput
	ServiceAccountIamPolicyId pulumi.StringPtrInput
	ServiceAccountId          pulumi.StringPtrInput
}

func (ServiceAccountIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountIamPolicyState)(nil)).Elem()
}

type serviceAccountIamPolicyArgs struct {
	PolicyData                string  `pulumi:"policyData"`
	ServiceAccountIamPolicyId *string `pulumi:"serviceAccountIamPolicyId"`
	ServiceAccountId          string  `pulumi:"serviceAccountId"`
}

// The set of arguments for constructing a ServiceAccountIamPolicy resource.
type ServiceAccountIamPolicyArgs struct {
	PolicyData                pulumi.StringInput
	ServiceAccountIamPolicyId pulumi.StringPtrInput
	ServiceAccountId          pulumi.StringInput
}

func (ServiceAccountIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountIamPolicyArgs)(nil)).Elem()
}

type ServiceAccountIamPolicyInput interface {
	pulumi.Input

	ToServiceAccountIamPolicyOutput() ServiceAccountIamPolicyOutput
	ToServiceAccountIamPolicyOutputWithContext(ctx context.Context) ServiceAccountIamPolicyOutput
}

func (*ServiceAccountIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountIamPolicy)(nil)).Elem()
}

func (i *ServiceAccountIamPolicy) ToServiceAccountIamPolicyOutput() ServiceAccountIamPolicyOutput {
	return i.ToServiceAccountIamPolicyOutputWithContext(context.Background())
}

func (i *ServiceAccountIamPolicy) ToServiceAccountIamPolicyOutputWithContext(ctx context.Context) ServiceAccountIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountIamPolicyOutput)
}

type ServiceAccountIamPolicyOutput struct{ *pulumi.OutputState }

func (ServiceAccountIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountIamPolicy)(nil)).Elem()
}

func (o ServiceAccountIamPolicyOutput) ToServiceAccountIamPolicyOutput() ServiceAccountIamPolicyOutput {
	return o
}

func (o ServiceAccountIamPolicyOutput) ToServiceAccountIamPolicyOutputWithContext(ctx context.Context) ServiceAccountIamPolicyOutput {
	return o
}

func (o ServiceAccountIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ServiceAccountIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ServiceAccountIamPolicyOutput) ServiceAccountIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountIamPolicy) pulumi.StringOutput { return v.ServiceAccountIamPolicyId }).(pulumi.StringOutput)
}

func (o ServiceAccountIamPolicyOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountIamPolicy) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountIamPolicyInput)(nil)).Elem(), &ServiceAccountIamPolicy{})
	pulumi.RegisterOutputType(ServiceAccountIamPolicyOutput{})
}
