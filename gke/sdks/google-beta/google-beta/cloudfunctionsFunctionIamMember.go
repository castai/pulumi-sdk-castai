// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudfunctionsFunctionIamMember struct {
	pulumi.CustomResourceState

	CloudFunction                     pulumi.StringOutput                               `pulumi:"cloudFunction"`
	CloudfunctionsFunctionIamMemberId pulumi.StringOutput                               `pulumi:"cloudfunctionsFunctionIamMemberId"`
	Condition                         CloudfunctionsFunctionIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                              pulumi.StringOutput                               `pulumi:"etag"`
	Member                            pulumi.StringOutput                               `pulumi:"member"`
	Project                           pulumi.StringOutput                               `pulumi:"project"`
	Region                            pulumi.StringOutput                               `pulumi:"region"`
	Role                              pulumi.StringOutput                               `pulumi:"role"`
}

// NewCloudfunctionsFunctionIamMember registers a new resource with the given unique name, arguments, and options.
func NewCloudfunctionsFunctionIamMember(ctx *pulumi.Context,
	name string, args *CloudfunctionsFunctionIamMemberArgs, opts ...pulumi.ResourceOption) (*CloudfunctionsFunctionIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudFunction == nil {
		return nil, errors.New("invalid value for required argument 'CloudFunction'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudfunctionsFunctionIamMember
	err = ctx.RegisterPackageResource("google-beta:index/cloudfunctionsFunctionIamMember:CloudfunctionsFunctionIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudfunctionsFunctionIamMember gets an existing CloudfunctionsFunctionIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudfunctionsFunctionIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudfunctionsFunctionIamMemberState, opts ...pulumi.ResourceOption) (*CloudfunctionsFunctionIamMember, error) {
	var resource CloudfunctionsFunctionIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/cloudfunctionsFunctionIamMember:CloudfunctionsFunctionIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudfunctionsFunctionIamMember resources.
type cloudfunctionsFunctionIamMemberState struct {
	CloudFunction                     *string                                   `pulumi:"cloudFunction"`
	CloudfunctionsFunctionIamMemberId *string                                   `pulumi:"cloudfunctionsFunctionIamMemberId"`
	Condition                         *CloudfunctionsFunctionIamMemberCondition `pulumi:"condition"`
	Etag                              *string                                   `pulumi:"etag"`
	Member                            *string                                   `pulumi:"member"`
	Project                           *string                                   `pulumi:"project"`
	Region                            *string                                   `pulumi:"region"`
	Role                              *string                                   `pulumi:"role"`
}

type CloudfunctionsFunctionIamMemberState struct {
	CloudFunction                     pulumi.StringPtrInput
	CloudfunctionsFunctionIamMemberId pulumi.StringPtrInput
	Condition                         CloudfunctionsFunctionIamMemberConditionPtrInput
	Etag                              pulumi.StringPtrInput
	Member                            pulumi.StringPtrInput
	Project                           pulumi.StringPtrInput
	Region                            pulumi.StringPtrInput
	Role                              pulumi.StringPtrInput
}

func (CloudfunctionsFunctionIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfunctionsFunctionIamMemberState)(nil)).Elem()
}

type cloudfunctionsFunctionIamMemberArgs struct {
	CloudFunction                     string                                    `pulumi:"cloudFunction"`
	CloudfunctionsFunctionIamMemberId *string                                   `pulumi:"cloudfunctionsFunctionIamMemberId"`
	Condition                         *CloudfunctionsFunctionIamMemberCondition `pulumi:"condition"`
	Member                            string                                    `pulumi:"member"`
	Project                           *string                                   `pulumi:"project"`
	Region                            *string                                   `pulumi:"region"`
	Role                              string                                    `pulumi:"role"`
}

// The set of arguments for constructing a CloudfunctionsFunctionIamMember resource.
type CloudfunctionsFunctionIamMemberArgs struct {
	CloudFunction                     pulumi.StringInput
	CloudfunctionsFunctionIamMemberId pulumi.StringPtrInput
	Condition                         CloudfunctionsFunctionIamMemberConditionPtrInput
	Member                            pulumi.StringInput
	Project                           pulumi.StringPtrInput
	Region                            pulumi.StringPtrInput
	Role                              pulumi.StringInput
}

func (CloudfunctionsFunctionIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfunctionsFunctionIamMemberArgs)(nil)).Elem()
}

type CloudfunctionsFunctionIamMemberInput interface {
	pulumi.Input

	ToCloudfunctionsFunctionIamMemberOutput() CloudfunctionsFunctionIamMemberOutput
	ToCloudfunctionsFunctionIamMemberOutputWithContext(ctx context.Context) CloudfunctionsFunctionIamMemberOutput
}

func (*CloudfunctionsFunctionIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfunctionsFunctionIamMember)(nil)).Elem()
}

func (i *CloudfunctionsFunctionIamMember) ToCloudfunctionsFunctionIamMemberOutput() CloudfunctionsFunctionIamMemberOutput {
	return i.ToCloudfunctionsFunctionIamMemberOutputWithContext(context.Background())
}

func (i *CloudfunctionsFunctionIamMember) ToCloudfunctionsFunctionIamMemberOutputWithContext(ctx context.Context) CloudfunctionsFunctionIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfunctionsFunctionIamMemberOutput)
}

type CloudfunctionsFunctionIamMemberOutput struct{ *pulumi.OutputState }

func (CloudfunctionsFunctionIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfunctionsFunctionIamMember)(nil)).Elem()
}

func (o CloudfunctionsFunctionIamMemberOutput) ToCloudfunctionsFunctionIamMemberOutput() CloudfunctionsFunctionIamMemberOutput {
	return o
}

func (o CloudfunctionsFunctionIamMemberOutput) ToCloudfunctionsFunctionIamMemberOutputWithContext(ctx context.Context) CloudfunctionsFunctionIamMemberOutput {
	return o
}

func (o CloudfunctionsFunctionIamMemberOutput) CloudFunction() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamMember) pulumi.StringOutput { return v.CloudFunction }).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamMemberOutput) CloudfunctionsFunctionIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamMember) pulumi.StringOutput {
		return v.CloudfunctionsFunctionIamMemberId
	}).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamMemberOutput) Condition() CloudfunctionsFunctionIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamMember) CloudfunctionsFunctionIamMemberConditionPtrOutput {
		return v.Condition
	}).(CloudfunctionsFunctionIamMemberConditionPtrOutput)
}

func (o CloudfunctionsFunctionIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfunctionsFunctionIamMemberInput)(nil)).Elem(), &CloudfunctionsFunctionIamMember{})
	pulumi.RegisterOutputType(CloudfunctionsFunctionIamMemberOutput{})
}
