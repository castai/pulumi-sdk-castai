// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiGatewayGateway struct {
	pulumi.CustomResourceState

	ApiConfig           pulumi.StringOutput `pulumi:"apiConfig"`
	ApiGatewayGatewayId pulumi.StringOutput `pulumi:"apiGatewayGatewayId"`
	// The default API Gateway host name of the form {gatewayId}-{hash}.{region_code}.gateway.dev.
	DefaultHostname pulumi.StringOutput `pulumi:"defaultHostname"`
	// A user-visible name for the API.
	DisplayName     pulumi.StringOutput    `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Identifier to assign to the Gateway. Must be unique within scope of the parent resource(project).
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource name of the Gateway. Format: projects/{project}/locations/{region}/gateways/{gateway}
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The region of the gateway for the API.
	Region pulumi.StringOutput `pulumi:"region"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput             `pulumi:"terraformLabels"`
	Timeouts        ApiGatewayGatewayTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewApiGatewayGateway registers a new resource with the given unique name, arguments, and options.
func NewApiGatewayGateway(ctx *pulumi.Context,
	name string, args *ApiGatewayGatewayArgs, opts ...pulumi.ResourceOption) (*ApiGatewayGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiConfig == nil {
		return nil, errors.New("invalid value for required argument 'ApiConfig'")
	}
	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ApiGatewayGateway
	err = ctx.RegisterPackageResource("google-beta:index/apiGatewayGateway:ApiGatewayGateway", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiGatewayGateway gets an existing ApiGatewayGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiGatewayGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiGatewayGatewayState, opts ...pulumi.ResourceOption) (*ApiGatewayGateway, error) {
	var resource ApiGatewayGateway
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/apiGatewayGateway:ApiGatewayGateway", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiGatewayGateway resources.
type apiGatewayGatewayState struct {
	ApiConfig           *string `pulumi:"apiConfig"`
	ApiGatewayGatewayId *string `pulumi:"apiGatewayGatewayId"`
	// The default API Gateway host name of the form {gatewayId}-{hash}.{region_code}.gateway.dev.
	DefaultHostname *string `pulumi:"defaultHostname"`
	// A user-visible name for the API.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Identifier to assign to the Gateway. Must be unique within scope of the parent resource(project).
	GatewayId *string `pulumi:"gatewayId"`
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource name of the Gateway. Format: projects/{project}/locations/{region}/gateways/{gateway}
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The region of the gateway for the API.
	Region *string `pulumi:"region"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string          `pulumi:"terraformLabels"`
	Timeouts        *ApiGatewayGatewayTimeouts `pulumi:"timeouts"`
}

type ApiGatewayGatewayState struct {
	ApiConfig           pulumi.StringPtrInput
	ApiGatewayGatewayId pulumi.StringPtrInput
	// The default API Gateway host name of the form {gatewayId}-{hash}.{region_code}.gateway.dev.
	DefaultHostname pulumi.StringPtrInput
	// A user-visible name for the API.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Identifier to assign to the Gateway. Must be unique within scope of the parent resource(project).
	GatewayId pulumi.StringPtrInput
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// Resource name of the Gateway. Format: projects/{project}/locations/{region}/gateways/{gateway}
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The region of the gateway for the API.
	Region pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ApiGatewayGatewayTimeoutsPtrInput
}

func (ApiGatewayGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayGatewayState)(nil)).Elem()
}

type apiGatewayGatewayArgs struct {
	ApiConfig           string  `pulumi:"apiConfig"`
	ApiGatewayGatewayId *string `pulumi:"apiGatewayGatewayId"`
	// A user-visible name for the API.
	DisplayName *string `pulumi:"displayName"`
	// Identifier to assign to the Gateway. Must be unique within scope of the parent resource(project).
	GatewayId string `pulumi:"gatewayId"`
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels  map[string]string `pulumi:"labels"`
	Project *string           `pulumi:"project"`
	// The region of the gateway for the API.
	Region   *string                    `pulumi:"region"`
	Timeouts *ApiGatewayGatewayTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ApiGatewayGateway resource.
type ApiGatewayGatewayArgs struct {
	ApiConfig           pulumi.StringInput
	ApiGatewayGatewayId pulumi.StringPtrInput
	// A user-visible name for the API.
	DisplayName pulumi.StringPtrInput
	// Identifier to assign to the Gateway. Must be unique within scope of the parent resource(project).
	GatewayId pulumi.StringInput
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels  pulumi.StringMapInput
	Project pulumi.StringPtrInput
	// The region of the gateway for the API.
	Region   pulumi.StringPtrInput
	Timeouts ApiGatewayGatewayTimeoutsPtrInput
}

func (ApiGatewayGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayGatewayArgs)(nil)).Elem()
}

type ApiGatewayGatewayInput interface {
	pulumi.Input

	ToApiGatewayGatewayOutput() ApiGatewayGatewayOutput
	ToApiGatewayGatewayOutputWithContext(ctx context.Context) ApiGatewayGatewayOutput
}

func (*ApiGatewayGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayGateway)(nil)).Elem()
}

func (i *ApiGatewayGateway) ToApiGatewayGatewayOutput() ApiGatewayGatewayOutput {
	return i.ToApiGatewayGatewayOutputWithContext(context.Background())
}

func (i *ApiGatewayGateway) ToApiGatewayGatewayOutputWithContext(ctx context.Context) ApiGatewayGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGatewayOutput)
}

type ApiGatewayGatewayOutput struct{ *pulumi.OutputState }

func (ApiGatewayGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayGateway)(nil)).Elem()
}

func (o ApiGatewayGatewayOutput) ToApiGatewayGatewayOutput() ApiGatewayGatewayOutput {
	return o
}

func (o ApiGatewayGatewayOutput) ToApiGatewayGatewayOutputWithContext(ctx context.Context) ApiGatewayGatewayOutput {
	return o
}

func (o ApiGatewayGatewayOutput) ApiConfig() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringOutput { return v.ApiConfig }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayOutput) ApiGatewayGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringOutput { return v.ApiGatewayGatewayId }).(pulumi.StringOutput)
}

// The default API Gateway host name of the form {gatewayId}-{hash}.{region_code}.gateway.dev.
func (o ApiGatewayGatewayOutput) DefaultHostname() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringOutput { return v.DefaultHostname }).(pulumi.StringOutput)
}

// A user-visible name for the API.
func (o ApiGatewayGatewayOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Identifier to assign to the Gateway. Must be unique within scope of the parent resource(project).
func (o ApiGatewayGatewayOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o ApiGatewayGatewayOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource name of the Gateway. Format: projects/{project}/locations/{region}/gateways/{gateway}
func (o ApiGatewayGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of the gateway for the API.
func (o ApiGatewayGatewayOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ApiGatewayGatewayOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ApiGatewayGatewayOutput) Timeouts() ApiGatewayGatewayTimeoutsPtrOutput {
	return o.ApplyT(func(v *ApiGatewayGateway) ApiGatewayGatewayTimeoutsPtrOutput { return v.Timeouts }).(ApiGatewayGatewayTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGatewayInput)(nil)).Elem(), &ApiGatewayGateway{})
	pulumi.RegisterOutputType(ApiGatewayGatewayOutput{})
}
