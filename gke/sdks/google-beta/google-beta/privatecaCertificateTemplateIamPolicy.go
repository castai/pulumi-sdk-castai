// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PrivatecaCertificateTemplateIamPolicy struct {
	pulumi.CustomResourceState

	CertificateTemplate                     pulumi.StringOutput `pulumi:"certificateTemplate"`
	Etag                                    pulumi.StringOutput `pulumi:"etag"`
	Location                                pulumi.StringOutput `pulumi:"location"`
	PolicyData                              pulumi.StringOutput `pulumi:"policyData"`
	PrivatecaCertificateTemplateIamPolicyId pulumi.StringOutput `pulumi:"privatecaCertificateTemplateIamPolicyId"`
	Project                                 pulumi.StringOutput `pulumi:"project"`
}

// NewPrivatecaCertificateTemplateIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewPrivatecaCertificateTemplateIamPolicy(ctx *pulumi.Context,
	name string, args *PrivatecaCertificateTemplateIamPolicyArgs, opts ...pulumi.ResourceOption) (*PrivatecaCertificateTemplateIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateTemplate == nil {
		return nil, errors.New("invalid value for required argument 'CertificateTemplate'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource PrivatecaCertificateTemplateIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/privatecaCertificateTemplateIamPolicy:PrivatecaCertificateTemplateIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivatecaCertificateTemplateIamPolicy gets an existing PrivatecaCertificateTemplateIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivatecaCertificateTemplateIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivatecaCertificateTemplateIamPolicyState, opts ...pulumi.ResourceOption) (*PrivatecaCertificateTemplateIamPolicy, error) {
	var resource PrivatecaCertificateTemplateIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/privatecaCertificateTemplateIamPolicy:PrivatecaCertificateTemplateIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivatecaCertificateTemplateIamPolicy resources.
type privatecaCertificateTemplateIamPolicyState struct {
	CertificateTemplate                     *string `pulumi:"certificateTemplate"`
	Etag                                    *string `pulumi:"etag"`
	Location                                *string `pulumi:"location"`
	PolicyData                              *string `pulumi:"policyData"`
	PrivatecaCertificateTemplateIamPolicyId *string `pulumi:"privatecaCertificateTemplateIamPolicyId"`
	Project                                 *string `pulumi:"project"`
}

type PrivatecaCertificateTemplateIamPolicyState struct {
	CertificateTemplate                     pulumi.StringPtrInput
	Etag                                    pulumi.StringPtrInput
	Location                                pulumi.StringPtrInput
	PolicyData                              pulumi.StringPtrInput
	PrivatecaCertificateTemplateIamPolicyId pulumi.StringPtrInput
	Project                                 pulumi.StringPtrInput
}

func (PrivatecaCertificateTemplateIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*privatecaCertificateTemplateIamPolicyState)(nil)).Elem()
}

type privatecaCertificateTemplateIamPolicyArgs struct {
	CertificateTemplate                     string  `pulumi:"certificateTemplate"`
	Location                                *string `pulumi:"location"`
	PolicyData                              string  `pulumi:"policyData"`
	PrivatecaCertificateTemplateIamPolicyId *string `pulumi:"privatecaCertificateTemplateIamPolicyId"`
	Project                                 *string `pulumi:"project"`
}

// The set of arguments for constructing a PrivatecaCertificateTemplateIamPolicy resource.
type PrivatecaCertificateTemplateIamPolicyArgs struct {
	CertificateTemplate                     pulumi.StringInput
	Location                                pulumi.StringPtrInput
	PolicyData                              pulumi.StringInput
	PrivatecaCertificateTemplateIamPolicyId pulumi.StringPtrInput
	Project                                 pulumi.StringPtrInput
}

func (PrivatecaCertificateTemplateIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privatecaCertificateTemplateIamPolicyArgs)(nil)).Elem()
}

type PrivatecaCertificateTemplateIamPolicyInput interface {
	pulumi.Input

	ToPrivatecaCertificateTemplateIamPolicyOutput() PrivatecaCertificateTemplateIamPolicyOutput
	ToPrivatecaCertificateTemplateIamPolicyOutputWithContext(ctx context.Context) PrivatecaCertificateTemplateIamPolicyOutput
}

func (*PrivatecaCertificateTemplateIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivatecaCertificateTemplateIamPolicy)(nil)).Elem()
}

func (i *PrivatecaCertificateTemplateIamPolicy) ToPrivatecaCertificateTemplateIamPolicyOutput() PrivatecaCertificateTemplateIamPolicyOutput {
	return i.ToPrivatecaCertificateTemplateIamPolicyOutputWithContext(context.Background())
}

func (i *PrivatecaCertificateTemplateIamPolicy) ToPrivatecaCertificateTemplateIamPolicyOutputWithContext(ctx context.Context) PrivatecaCertificateTemplateIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivatecaCertificateTemplateIamPolicyOutput)
}

type PrivatecaCertificateTemplateIamPolicyOutput struct{ *pulumi.OutputState }

func (PrivatecaCertificateTemplateIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivatecaCertificateTemplateIamPolicy)(nil)).Elem()
}

func (o PrivatecaCertificateTemplateIamPolicyOutput) ToPrivatecaCertificateTemplateIamPolicyOutput() PrivatecaCertificateTemplateIamPolicyOutput {
	return o
}

func (o PrivatecaCertificateTemplateIamPolicyOutput) ToPrivatecaCertificateTemplateIamPolicyOutputWithContext(ctx context.Context) PrivatecaCertificateTemplateIamPolicyOutput {
	return o
}

func (o PrivatecaCertificateTemplateIamPolicyOutput) CertificateTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCertificateTemplateIamPolicy) pulumi.StringOutput { return v.CertificateTemplate }).(pulumi.StringOutput)
}

func (o PrivatecaCertificateTemplateIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCertificateTemplateIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o PrivatecaCertificateTemplateIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCertificateTemplateIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o PrivatecaCertificateTemplateIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCertificateTemplateIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o PrivatecaCertificateTemplateIamPolicyOutput) PrivatecaCertificateTemplateIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCertificateTemplateIamPolicy) pulumi.StringOutput {
		return v.PrivatecaCertificateTemplateIamPolicyId
	}).(pulumi.StringOutput)
}

func (o PrivatecaCertificateTemplateIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCertificateTemplateIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivatecaCertificateTemplateIamPolicyInput)(nil)).Elem(), &PrivatecaCertificateTemplateIamPolicy{})
	pulumi.RegisterOutputType(PrivatecaCertificateTemplateIamPolicyOutput{})
}
