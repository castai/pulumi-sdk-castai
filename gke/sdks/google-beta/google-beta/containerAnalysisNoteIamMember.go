// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContainerAnalysisNoteIamMember struct {
	pulumi.CustomResourceState

	Condition                        ContainerAnalysisNoteIamMemberConditionPtrOutput `pulumi:"condition"`
	ContainerAnalysisNoteIamMemberId pulumi.StringOutput                              `pulumi:"containerAnalysisNoteIamMemberId"`
	Etag                             pulumi.StringOutput                              `pulumi:"etag"`
	Member                           pulumi.StringOutput                              `pulumi:"member"`
	Note                             pulumi.StringOutput                              `pulumi:"note"`
	Project                          pulumi.StringOutput                              `pulumi:"project"`
	Role                             pulumi.StringOutput                              `pulumi:"role"`
}

// NewContainerAnalysisNoteIamMember registers a new resource with the given unique name, arguments, and options.
func NewContainerAnalysisNoteIamMember(ctx *pulumi.Context,
	name string, args *ContainerAnalysisNoteIamMemberArgs, opts ...pulumi.ResourceOption) (*ContainerAnalysisNoteIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Note == nil {
		return nil, errors.New("invalid value for required argument 'Note'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ContainerAnalysisNoteIamMember
	err = ctx.RegisterPackageResource("google-beta:index/containerAnalysisNoteIamMember:ContainerAnalysisNoteIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerAnalysisNoteIamMember gets an existing ContainerAnalysisNoteIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerAnalysisNoteIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerAnalysisNoteIamMemberState, opts ...pulumi.ResourceOption) (*ContainerAnalysisNoteIamMember, error) {
	var resource ContainerAnalysisNoteIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/containerAnalysisNoteIamMember:ContainerAnalysisNoteIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerAnalysisNoteIamMember resources.
type containerAnalysisNoteIamMemberState struct {
	Condition                        *ContainerAnalysisNoteIamMemberCondition `pulumi:"condition"`
	ContainerAnalysisNoteIamMemberId *string                                  `pulumi:"containerAnalysisNoteIamMemberId"`
	Etag                             *string                                  `pulumi:"etag"`
	Member                           *string                                  `pulumi:"member"`
	Note                             *string                                  `pulumi:"note"`
	Project                          *string                                  `pulumi:"project"`
	Role                             *string                                  `pulumi:"role"`
}

type ContainerAnalysisNoteIamMemberState struct {
	Condition                        ContainerAnalysisNoteIamMemberConditionPtrInput
	ContainerAnalysisNoteIamMemberId pulumi.StringPtrInput
	Etag                             pulumi.StringPtrInput
	Member                           pulumi.StringPtrInput
	Note                             pulumi.StringPtrInput
	Project                          pulumi.StringPtrInput
	Role                             pulumi.StringPtrInput
}

func (ContainerAnalysisNoteIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAnalysisNoteIamMemberState)(nil)).Elem()
}

type containerAnalysisNoteIamMemberArgs struct {
	Condition                        *ContainerAnalysisNoteIamMemberCondition `pulumi:"condition"`
	ContainerAnalysisNoteIamMemberId *string                                  `pulumi:"containerAnalysisNoteIamMemberId"`
	Member                           string                                   `pulumi:"member"`
	Note                             string                                   `pulumi:"note"`
	Project                          *string                                  `pulumi:"project"`
	Role                             string                                   `pulumi:"role"`
}

// The set of arguments for constructing a ContainerAnalysisNoteIamMember resource.
type ContainerAnalysisNoteIamMemberArgs struct {
	Condition                        ContainerAnalysisNoteIamMemberConditionPtrInput
	ContainerAnalysisNoteIamMemberId pulumi.StringPtrInput
	Member                           pulumi.StringInput
	Note                             pulumi.StringInput
	Project                          pulumi.StringPtrInput
	Role                             pulumi.StringInput
}

func (ContainerAnalysisNoteIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAnalysisNoteIamMemberArgs)(nil)).Elem()
}

type ContainerAnalysisNoteIamMemberInput interface {
	pulumi.Input

	ToContainerAnalysisNoteIamMemberOutput() ContainerAnalysisNoteIamMemberOutput
	ToContainerAnalysisNoteIamMemberOutputWithContext(ctx context.Context) ContainerAnalysisNoteIamMemberOutput
}

func (*ContainerAnalysisNoteIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerAnalysisNoteIamMember)(nil)).Elem()
}

func (i *ContainerAnalysisNoteIamMember) ToContainerAnalysisNoteIamMemberOutput() ContainerAnalysisNoteIamMemberOutput {
	return i.ToContainerAnalysisNoteIamMemberOutputWithContext(context.Background())
}

func (i *ContainerAnalysisNoteIamMember) ToContainerAnalysisNoteIamMemberOutputWithContext(ctx context.Context) ContainerAnalysisNoteIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerAnalysisNoteIamMemberOutput)
}

type ContainerAnalysisNoteIamMemberOutput struct{ *pulumi.OutputState }

func (ContainerAnalysisNoteIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerAnalysisNoteIamMember)(nil)).Elem()
}

func (o ContainerAnalysisNoteIamMemberOutput) ToContainerAnalysisNoteIamMemberOutput() ContainerAnalysisNoteIamMemberOutput {
	return o
}

func (o ContainerAnalysisNoteIamMemberOutput) ToContainerAnalysisNoteIamMemberOutputWithContext(ctx context.Context) ContainerAnalysisNoteIamMemberOutput {
	return o
}

func (o ContainerAnalysisNoteIamMemberOutput) Condition() ContainerAnalysisNoteIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamMember) ContainerAnalysisNoteIamMemberConditionPtrOutput {
		return v.Condition
	}).(ContainerAnalysisNoteIamMemberConditionPtrOutput)
}

func (o ContainerAnalysisNoteIamMemberOutput) ContainerAnalysisNoteIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamMember) pulumi.StringOutput { return v.ContainerAnalysisNoteIamMemberId }).(pulumi.StringOutput)
}

func (o ContainerAnalysisNoteIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ContainerAnalysisNoteIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ContainerAnalysisNoteIamMemberOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamMember) pulumi.StringOutput { return v.Note }).(pulumi.StringOutput)
}

func (o ContainerAnalysisNoteIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ContainerAnalysisNoteIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAnalysisNoteIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerAnalysisNoteIamMemberInput)(nil)).Elem(), &ContainerAnalysisNoteIamMember{})
	pulumi.RegisterOutputType(ContainerAnalysisNoteIamMemberOutput{})
}
