// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeDisk struct {
	pulumi.CustomResourceState

	// The accessMode of the disk. For example: * READ_WRITE_SINGLE * READ_WRITE_MANY * READ_ONLY_SINGLE
	AccessMode pulumi.StringOutput `pulumi:"accessMode"`
	// A nested object resource.
	AsyncPrimaryDisk ComputeDiskAsyncPrimaryDiskPtrOutput `pulumi:"asyncPrimaryDisk"`
	ComputeDiskId    pulumi.StringOutput                  `pulumi:"computeDiskId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Encrypts the disk using a customer-supplied encryption key. After you encrypt a disk with a customer-supplied key, you
	// must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk
	// to a virtual machine). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not
	// provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key
	// and you do not need to provide a key to use the disk later.
	DiskEncryptionKey ComputeDiskDiskEncryptionKeyPtrOutput `pulumi:"diskEncryptionKey"`
	// The unique identifier for the resource. This identifier is defined by the server.
	DiskId          pulumi.StringOutput    `pulumi:"diskId"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Whether this disk is using confidential compute mode. Note: Only supported on hyperdisk skus, disk_encryption_key is
	// required when setting to true
	EnableConfidentialCompute pulumi.BoolOutput `pulumi:"enableConfidentialCompute"`
	// A list of features to enable on the guest operating system. Applicable only for bootable disks.
	GuestOsFeatures ComputeDiskGuestOsFeatureArrayOutput `pulumi:"guestOsFeatures"`
	// The image from which to initialize this disk. This can be one of: the image's 'self_link',
	// 'projects/{project}/global/images/{image}', 'projects/{project}/global/images/family/{family}', 'global/images/{image}',
	// 'global/images/family/{family}', 'family/{family}', '{project}/{family}', '{project}/{image}', '{family}', or '{image}'.
	// If referred by family, the images names must include the family name. If they don't, use the [google-beta.ComputeImage
	// data source](https://www.terraform.io/docs/providers/google/d/compute_image.html). For instance, the image
	// 'centos-6-v20180104' includes its family name 'centos-6'. These images can be referred by family name here.
	Image pulumi.StringPtrOutput `pulumi:"image"`
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: Deprecated
	Interface pulumi.StringPtrOutput `pulumi:"interface"`
	// The fingerprint used for optimistic locking of this resource. Used internally during updates.
	LabelFingerprint pulumi.StringOutput `pulumi:"labelFingerprint"`
	// Labels to apply to this disk. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp pulumi.StringOutput `pulumi:"lastAttachTimestamp"`
	// Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp pulumi.StringOutput `pulumi:"lastDetachTimestamp"`
	// Any applicable license URI.
	Licenses pulumi.StringArrayOutput `pulumi:"licenses"`
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter pulumi.BoolPtrOutput `pulumi:"multiWriter"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently
	// supported sizes are 4096 and 16384, other sizes may be added in the future. If an unsupported value is requested, the
	// error message will list the supported values for the caller's project.
	PhysicalBlockSizeBytes pulumi.Float64Output `pulumi:"physicalBlockSizeBytes"`
	Project                pulumi.StringOutput  `pulumi:"project"`
	// Indicates how many IOPS must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk skus
	// without the need to delete and recreate the disk, hyperdisk allows for an update of IOPS every 4 hours. To update your
	// hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedIops pulumi.Float64Output `pulumi:"provisionedIops"`
	// Indicates how much Throughput must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk
	// skus without the need to delete and recreate the disk, hyperdisk allows for an update of Throughput every 4 hours. To
	// update your hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedThroughput pulumi.Float64Output     `pulumi:"provisionedThroughput"`
	ResourcePolicies      pulumi.StringArrayOutput `pulumi:"resourcePolicies"`
	SelfLink              pulumi.StringOutput      `pulumi:"selfLink"`
	Size                  pulumi.Float64Output     `pulumi:"size"`
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot pulumi.StringPtrOutput `pulumi:"snapshot"`
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource. For example,
	// the following are valid values: * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk} *
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk} *
	// projects/{project}/zones/{zone}/disks/{disk} * projects/{project}/regions/{region}/disks/{disk} *
	// zones/{zone}/disks/{disk} * regions/{region}/disks/{disk}
	SourceDisk pulumi.StringPtrOutput `pulumi:"sourceDisk"`
	// The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from
	// the current or a previous instance of a given disk name.
	SourceDiskId pulumi.StringOutput `pulumi:"sourceDiskId"`
	// The customer-supplied encryption key of the source image. Required if the source image is protected by a
	// customer-supplied encryption key.
	SourceImageEncryptionKey ComputeDiskSourceImageEncryptionKeyPtrOutput `pulumi:"sourceImageEncryptionKey"`
	// The ID value of the image used to create this disk. This value identifies the exact image that was used to create this
	// persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated
	// under the same name, the source image ID would identify the exact version of the image that was used.
	SourceImageId pulumi.StringOutput `pulumi:"sourceImageId"`
	// The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a
	// customer-supplied encryption key.
	SourceSnapshotEncryptionKey ComputeDiskSourceSnapshotEncryptionKeyPtrOutput `pulumi:"sourceSnapshotEncryptionKey"`
	// The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create
	// this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and
	// recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
	SourceSnapshotId pulumi.StringOutput `pulumi:"sourceSnapshotId"`
	// The URL or the name of the storage pool in which the new disk is created. For example: *
	// https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/storagePools/{storagePool} *
	// /projects/{project}/zones/{zone}/storagePools/{storagePool} * /zones/{zone}/storagePools/{storagePool} * /{storagePool}
	StoragePool pulumi.StringPtrOutput `pulumi:"storagePool"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput       `pulumi:"terraformLabels"`
	Timeouts        ComputeDiskTimeoutsPtrOutput `pulumi:"timeouts"`
	// URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
	Users pulumi.StringArrayOutput `pulumi:"users"`
	// A reference to the zone where the disk resides.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewComputeDisk registers a new resource with the given unique name, arguments, and options.
func NewComputeDisk(ctx *pulumi.Context,
	name string, args *ComputeDiskArgs, opts ...pulumi.ResourceOption) (*ComputeDisk, error) {
	if args == nil {
		args = &ComputeDiskArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeDisk
	err = ctx.RegisterPackageResource("google-beta:index/computeDisk:ComputeDisk", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeDisk gets an existing ComputeDisk resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeDisk(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeDiskState, opts ...pulumi.ResourceOption) (*ComputeDisk, error) {
	var resource ComputeDisk
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeDisk:ComputeDisk", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeDisk resources.
type computeDiskState struct {
	// The accessMode of the disk. For example: * READ_WRITE_SINGLE * READ_WRITE_MANY * READ_ONLY_SINGLE
	AccessMode *string `pulumi:"accessMode"`
	// A nested object resource.
	AsyncPrimaryDisk *ComputeDiskAsyncPrimaryDisk `pulumi:"asyncPrimaryDisk"`
	ComputeDiskId    *string                      `pulumi:"computeDiskId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Encrypts the disk using a customer-supplied encryption key. After you encrypt a disk with a customer-supplied key, you
	// must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk
	// to a virtual machine). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not
	// provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key
	// and you do not need to provide a key to use the disk later.
	DiskEncryptionKey *ComputeDiskDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	// The unique identifier for the resource. This identifier is defined by the server.
	DiskId          *string           `pulumi:"diskId"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Whether this disk is using confidential compute mode. Note: Only supported on hyperdisk skus, disk_encryption_key is
	// required when setting to true
	EnableConfidentialCompute *bool `pulumi:"enableConfidentialCompute"`
	// A list of features to enable on the guest operating system. Applicable only for bootable disks.
	GuestOsFeatures []ComputeDiskGuestOsFeature `pulumi:"guestOsFeatures"`
	// The image from which to initialize this disk. This can be one of: the image's 'self_link',
	// 'projects/{project}/global/images/{image}', 'projects/{project}/global/images/family/{family}', 'global/images/{image}',
	// 'global/images/family/{family}', 'family/{family}', '{project}/{family}', '{project}/{image}', '{family}', or '{image}'.
	// If referred by family, the images names must include the family name. If they don't, use the [google-beta.ComputeImage
	// data source](https://www.terraform.io/docs/providers/google/d/compute_image.html). For instance, the image
	// 'centos-6-v20180104' includes its family name 'centos-6'. These images can be referred by family name here.
	Image *string `pulumi:"image"`
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: Deprecated
	Interface *string `pulumi:"interface"`
	// The fingerprint used for optimistic locking of this resource. Used internally during updates.
	LabelFingerprint *string `pulumi:"labelFingerprint"`
	// Labels to apply to this disk. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp *string `pulumi:"lastAttachTimestamp"`
	// Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp *string `pulumi:"lastDetachTimestamp"`
	// Any applicable license URI.
	Licenses []string `pulumi:"licenses"`
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter *bool `pulumi:"multiWriter"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently
	// supported sizes are 4096 and 16384, other sizes may be added in the future. If an unsupported value is requested, the
	// error message will list the supported values for the caller's project.
	PhysicalBlockSizeBytes *float64 `pulumi:"physicalBlockSizeBytes"`
	Project                *string  `pulumi:"project"`
	// Indicates how many IOPS must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk skus
	// without the need to delete and recreate the disk, hyperdisk allows for an update of IOPS every 4 hours. To update your
	// hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedIops *float64 `pulumi:"provisionedIops"`
	// Indicates how much Throughput must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk
	// skus without the need to delete and recreate the disk, hyperdisk allows for an update of Throughput every 4 hours. To
	// update your hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedThroughput *float64 `pulumi:"provisionedThroughput"`
	ResourcePolicies      []string `pulumi:"resourcePolicies"`
	SelfLink              *string  `pulumi:"selfLink"`
	Size                  *float64 `pulumi:"size"`
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot *string `pulumi:"snapshot"`
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource. For example,
	// the following are valid values: * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk} *
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk} *
	// projects/{project}/zones/{zone}/disks/{disk} * projects/{project}/regions/{region}/disks/{disk} *
	// zones/{zone}/disks/{disk} * regions/{region}/disks/{disk}
	SourceDisk *string `pulumi:"sourceDisk"`
	// The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from
	// the current or a previous instance of a given disk name.
	SourceDiskId *string `pulumi:"sourceDiskId"`
	// The customer-supplied encryption key of the source image. Required if the source image is protected by a
	// customer-supplied encryption key.
	SourceImageEncryptionKey *ComputeDiskSourceImageEncryptionKey `pulumi:"sourceImageEncryptionKey"`
	// The ID value of the image used to create this disk. This value identifies the exact image that was used to create this
	// persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated
	// under the same name, the source image ID would identify the exact version of the image that was used.
	SourceImageId *string `pulumi:"sourceImageId"`
	// The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a
	// customer-supplied encryption key.
	SourceSnapshotEncryptionKey *ComputeDiskSourceSnapshotEncryptionKey `pulumi:"sourceSnapshotEncryptionKey"`
	// The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create
	// this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and
	// recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
	SourceSnapshotId *string `pulumi:"sourceSnapshotId"`
	// The URL or the name of the storage pool in which the new disk is created. For example: *
	// https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/storagePools/{storagePool} *
	// /projects/{project}/zones/{zone}/storagePools/{storagePool} * /zones/{zone}/storagePools/{storagePool} * /{storagePool}
	StoragePool *string `pulumi:"storagePool"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string    `pulumi:"terraformLabels"`
	Timeouts        *ComputeDiskTimeouts `pulumi:"timeouts"`
	// URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
	Type *string `pulumi:"type"`
	// Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
	Users []string `pulumi:"users"`
	// A reference to the zone where the disk resides.
	Zone *string `pulumi:"zone"`
}

type ComputeDiskState struct {
	// The accessMode of the disk. For example: * READ_WRITE_SINGLE * READ_WRITE_MANY * READ_ONLY_SINGLE
	AccessMode pulumi.StringPtrInput
	// A nested object resource.
	AsyncPrimaryDisk ComputeDiskAsyncPrimaryDiskPtrInput
	ComputeDiskId    pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Encrypts the disk using a customer-supplied encryption key. After you encrypt a disk with a customer-supplied key, you
	// must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk
	// to a virtual machine). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not
	// provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key
	// and you do not need to provide a key to use the disk later.
	DiskEncryptionKey ComputeDiskDiskEncryptionKeyPtrInput
	// The unique identifier for the resource. This identifier is defined by the server.
	DiskId          pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Whether this disk is using confidential compute mode. Note: Only supported on hyperdisk skus, disk_encryption_key is
	// required when setting to true
	EnableConfidentialCompute pulumi.BoolPtrInput
	// A list of features to enable on the guest operating system. Applicable only for bootable disks.
	GuestOsFeatures ComputeDiskGuestOsFeatureArrayInput
	// The image from which to initialize this disk. This can be one of: the image's 'self_link',
	// 'projects/{project}/global/images/{image}', 'projects/{project}/global/images/family/{family}', 'global/images/{image}',
	// 'global/images/family/{family}', 'family/{family}', '{project}/{family}', '{project}/{image}', '{family}', or '{image}'.
	// If referred by family, the images names must include the family name. If they don't, use the [google-beta.ComputeImage
	// data source](https://www.terraform.io/docs/providers/google/d/compute_image.html). For instance, the image
	// 'centos-6-v20180104' includes its family name 'centos-6'. These images can be referred by family name here.
	Image pulumi.StringPtrInput
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: Deprecated
	Interface pulumi.StringPtrInput
	// The fingerprint used for optimistic locking of this resource. Used internally during updates.
	LabelFingerprint pulumi.StringPtrInput
	// Labels to apply to this disk. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// Last attach timestamp in RFC3339 text format.
	LastAttachTimestamp pulumi.StringPtrInput
	// Last detach timestamp in RFC3339 text format.
	LastDetachTimestamp pulumi.StringPtrInput
	// Any applicable license URI.
	Licenses pulumi.StringArrayInput
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently
	// supported sizes are 4096 and 16384, other sizes may be added in the future. If an unsupported value is requested, the
	// error message will list the supported values for the caller's project.
	PhysicalBlockSizeBytes pulumi.Float64PtrInput
	Project                pulumi.StringPtrInput
	// Indicates how many IOPS must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk skus
	// without the need to delete and recreate the disk, hyperdisk allows for an update of IOPS every 4 hours. To update your
	// hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedIops pulumi.Float64PtrInput
	// Indicates how much Throughput must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk
	// skus without the need to delete and recreate the disk, hyperdisk allows for an update of Throughput every 4 hours. To
	// update your hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedThroughput pulumi.Float64PtrInput
	ResourcePolicies      pulumi.StringArrayInput
	SelfLink              pulumi.StringPtrInput
	Size                  pulumi.Float64PtrInput
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot pulumi.StringPtrInput
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource. For example,
	// the following are valid values: * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk} *
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk} *
	// projects/{project}/zones/{zone}/disks/{disk} * projects/{project}/regions/{region}/disks/{disk} *
	// zones/{zone}/disks/{disk} * regions/{region}/disks/{disk}
	SourceDisk pulumi.StringPtrInput
	// The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from
	// the current or a previous instance of a given disk name.
	SourceDiskId pulumi.StringPtrInput
	// The customer-supplied encryption key of the source image. Required if the source image is protected by a
	// customer-supplied encryption key.
	SourceImageEncryptionKey ComputeDiskSourceImageEncryptionKeyPtrInput
	// The ID value of the image used to create this disk. This value identifies the exact image that was used to create this
	// persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated
	// under the same name, the source image ID would identify the exact version of the image that was used.
	SourceImageId pulumi.StringPtrInput
	// The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a
	// customer-supplied encryption key.
	SourceSnapshotEncryptionKey ComputeDiskSourceSnapshotEncryptionKeyPtrInput
	// The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create
	// this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and
	// recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
	SourceSnapshotId pulumi.StringPtrInput
	// The URL or the name of the storage pool in which the new disk is created. For example: *
	// https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/storagePools/{storagePool} *
	// /projects/{project}/zones/{zone}/storagePools/{storagePool} * /zones/{zone}/storagePools/{storagePool} * /{storagePool}
	StoragePool pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ComputeDiskTimeoutsPtrInput
	// URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
	Type pulumi.StringPtrInput
	// Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
	Users pulumi.StringArrayInput
	// A reference to the zone where the disk resides.
	Zone pulumi.StringPtrInput
}

func (ComputeDiskState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeDiskState)(nil)).Elem()
}

type computeDiskArgs struct {
	// The accessMode of the disk. For example: * READ_WRITE_SINGLE * READ_WRITE_MANY * READ_ONLY_SINGLE
	AccessMode *string `pulumi:"accessMode"`
	// A nested object resource.
	AsyncPrimaryDisk *ComputeDiskAsyncPrimaryDisk `pulumi:"asyncPrimaryDisk"`
	ComputeDiskId    *string                      `pulumi:"computeDiskId"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Encrypts the disk using a customer-supplied encryption key. After you encrypt a disk with a customer-supplied key, you
	// must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk
	// to a virtual machine). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not
	// provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key
	// and you do not need to provide a key to use the disk later.
	DiskEncryptionKey *ComputeDiskDiskEncryptionKey `pulumi:"diskEncryptionKey"`
	// Whether this disk is using confidential compute mode. Note: Only supported on hyperdisk skus, disk_encryption_key is
	// required when setting to true
	EnableConfidentialCompute *bool `pulumi:"enableConfidentialCompute"`
	// A list of features to enable on the guest operating system. Applicable only for bootable disks.
	GuestOsFeatures []ComputeDiskGuestOsFeature `pulumi:"guestOsFeatures"`
	// The image from which to initialize this disk. This can be one of: the image's 'self_link',
	// 'projects/{project}/global/images/{image}', 'projects/{project}/global/images/family/{family}', 'global/images/{image}',
	// 'global/images/family/{family}', 'family/{family}', '{project}/{family}', '{project}/{image}', '{family}', or '{image}'.
	// If referred by family, the images names must include the family name. If they don't, use the [google-beta.ComputeImage
	// data source](https://www.terraform.io/docs/providers/google/d/compute_image.html). For instance, the image
	// 'centos-6-v20180104' includes its family name 'centos-6'. These images can be referred by family name here.
	Image *string `pulumi:"image"`
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: Deprecated
	Interface *string `pulumi:"interface"`
	// Labels to apply to this disk. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Any applicable license URI.
	Licenses []string `pulumi:"licenses"`
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter *bool `pulumi:"multiWriter"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently
	// supported sizes are 4096 and 16384, other sizes may be added in the future. If an unsupported value is requested, the
	// error message will list the supported values for the caller's project.
	PhysicalBlockSizeBytes *float64 `pulumi:"physicalBlockSizeBytes"`
	Project                *string  `pulumi:"project"`
	// Indicates how many IOPS must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk skus
	// without the need to delete and recreate the disk, hyperdisk allows for an update of IOPS every 4 hours. To update your
	// hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedIops *float64 `pulumi:"provisionedIops"`
	// Indicates how much Throughput must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk
	// skus without the need to delete and recreate the disk, hyperdisk allows for an update of Throughput every 4 hours. To
	// update your hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedThroughput *float64 `pulumi:"provisionedThroughput"`
	ResourcePolicies      []string `pulumi:"resourcePolicies"`
	Size                  *float64 `pulumi:"size"`
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot *string `pulumi:"snapshot"`
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource. For example,
	// the following are valid values: * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk} *
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk} *
	// projects/{project}/zones/{zone}/disks/{disk} * projects/{project}/regions/{region}/disks/{disk} *
	// zones/{zone}/disks/{disk} * regions/{region}/disks/{disk}
	SourceDisk *string `pulumi:"sourceDisk"`
	// The customer-supplied encryption key of the source image. Required if the source image is protected by a
	// customer-supplied encryption key.
	SourceImageEncryptionKey *ComputeDiskSourceImageEncryptionKey `pulumi:"sourceImageEncryptionKey"`
	// The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a
	// customer-supplied encryption key.
	SourceSnapshotEncryptionKey *ComputeDiskSourceSnapshotEncryptionKey `pulumi:"sourceSnapshotEncryptionKey"`
	// The URL or the name of the storage pool in which the new disk is created. For example: *
	// https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/storagePools/{storagePool} *
	// /projects/{project}/zones/{zone}/storagePools/{storagePool} * /zones/{zone}/storagePools/{storagePool} * /{storagePool}
	StoragePool *string              `pulumi:"storagePool"`
	Timeouts    *ComputeDiskTimeouts `pulumi:"timeouts"`
	// URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
	Type *string `pulumi:"type"`
	// A reference to the zone where the disk resides.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeDisk resource.
type ComputeDiskArgs struct {
	// The accessMode of the disk. For example: * READ_WRITE_SINGLE * READ_WRITE_MANY * READ_ONLY_SINGLE
	AccessMode pulumi.StringPtrInput
	// A nested object resource.
	AsyncPrimaryDisk ComputeDiskAsyncPrimaryDiskPtrInput
	ComputeDiskId    pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Encrypts the disk using a customer-supplied encryption key. After you encrypt a disk with a customer-supplied key, you
	// must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk
	// to a virtual machine). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not
	// provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key
	// and you do not need to provide a key to use the disk later.
	DiskEncryptionKey ComputeDiskDiskEncryptionKeyPtrInput
	// Whether this disk is using confidential compute mode. Note: Only supported on hyperdisk skus, disk_encryption_key is
	// required when setting to true
	EnableConfidentialCompute pulumi.BoolPtrInput
	// A list of features to enable on the guest operating system. Applicable only for bootable disks.
	GuestOsFeatures ComputeDiskGuestOsFeatureArrayInput
	// The image from which to initialize this disk. This can be one of: the image's 'self_link',
	// 'projects/{project}/global/images/{image}', 'projects/{project}/global/images/family/{family}', 'global/images/{image}',
	// 'global/images/family/{family}', 'family/{family}', '{project}/{family}', '{project}/{image}', '{family}', or '{image}'.
	// If referred by family, the images names must include the family name. If they don't, use the [google-beta.ComputeImage
	// data source](https://www.terraform.io/docs/providers/google/d/compute_image.html). For instance, the image
	// 'centos-6-v20180104' includes its family name 'centos-6'. These images can be referred by family name here.
	Image pulumi.StringPtrInput
	// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
	//
	// Deprecated: Deprecated
	Interface pulumi.StringPtrInput
	// Labels to apply to this disk. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// Any applicable license URI.
	Licenses pulumi.StringArrayInput
	// Indicates whether or not the disk can be read/write attached to more than one instance.
	MultiWriter pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently
	// supported sizes are 4096 and 16384, other sizes may be added in the future. If an unsupported value is requested, the
	// error message will list the supported values for the caller's project.
	PhysicalBlockSizeBytes pulumi.Float64PtrInput
	Project                pulumi.StringPtrInput
	// Indicates how many IOPS must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk skus
	// without the need to delete and recreate the disk, hyperdisk allows for an update of IOPS every 4 hours. To update your
	// hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedIops pulumi.Float64PtrInput
	// Indicates how much Throughput must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk
	// skus without the need to delete and recreate the disk, hyperdisk allows for an update of Throughput every 4 hours. To
	// update your hyperdisk more frequently, you'll need to manually delete and recreate it
	ProvisionedThroughput pulumi.Float64PtrInput
	ResourcePolicies      pulumi.StringArrayInput
	Size                  pulumi.Float64PtrInput
	// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
	// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
	// * 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
	//   'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
	Snapshot pulumi.StringPtrInput
	// The source disk used to create this disk. You can provide this as a partial or full URL to the resource. For example,
	// the following are valid values: * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk} *
	// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk} *
	// projects/{project}/zones/{zone}/disks/{disk} * projects/{project}/regions/{region}/disks/{disk} *
	// zones/{zone}/disks/{disk} * regions/{region}/disks/{disk}
	SourceDisk pulumi.StringPtrInput
	// The customer-supplied encryption key of the source image. Required if the source image is protected by a
	// customer-supplied encryption key.
	SourceImageEncryptionKey ComputeDiskSourceImageEncryptionKeyPtrInput
	// The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a
	// customer-supplied encryption key.
	SourceSnapshotEncryptionKey ComputeDiskSourceSnapshotEncryptionKeyPtrInput
	// The URL or the name of the storage pool in which the new disk is created. For example: *
	// https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/storagePools/{storagePool} *
	// /projects/{project}/zones/{zone}/storagePools/{storagePool} * /zones/{zone}/storagePools/{storagePool} * /{storagePool}
	StoragePool pulumi.StringPtrInput
	Timeouts    ComputeDiskTimeoutsPtrInput
	// URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
	Type pulumi.StringPtrInput
	// A reference to the zone where the disk resides.
	Zone pulumi.StringPtrInput
}

func (ComputeDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeDiskArgs)(nil)).Elem()
}

type ComputeDiskInput interface {
	pulumi.Input

	ToComputeDiskOutput() ComputeDiskOutput
	ToComputeDiskOutputWithContext(ctx context.Context) ComputeDiskOutput
}

func (*ComputeDisk) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeDisk)(nil)).Elem()
}

func (i *ComputeDisk) ToComputeDiskOutput() ComputeDiskOutput {
	return i.ToComputeDiskOutputWithContext(context.Background())
}

func (i *ComputeDisk) ToComputeDiskOutputWithContext(ctx context.Context) ComputeDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDiskOutput)
}

type ComputeDiskOutput struct{ *pulumi.OutputState }

func (ComputeDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeDisk)(nil)).Elem()
}

func (o ComputeDiskOutput) ToComputeDiskOutput() ComputeDiskOutput {
	return o
}

func (o ComputeDiskOutput) ToComputeDiskOutputWithContext(ctx context.Context) ComputeDiskOutput {
	return o
}

// The accessMode of the disk. For example: * READ_WRITE_SINGLE * READ_WRITE_MANY * READ_ONLY_SINGLE
func (o ComputeDiskOutput) AccessMode() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.AccessMode }).(pulumi.StringOutput)
}

// A nested object resource.
func (o ComputeDiskOutput) AsyncPrimaryDisk() ComputeDiskAsyncPrimaryDiskPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) ComputeDiskAsyncPrimaryDiskPtrOutput { return v.AsyncPrimaryDisk }).(ComputeDiskAsyncPrimaryDiskPtrOutput)
}

func (o ComputeDiskOutput) ComputeDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.ComputeDiskId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeDiskOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o ComputeDiskOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Encrypts the disk using a customer-supplied encryption key. After you encrypt a disk with a customer-supplied key, you
// must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk
// to a virtual machine). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not
// provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key
// and you do not need to provide a key to use the disk later.
func (o ComputeDiskOutput) DiskEncryptionKey() ComputeDiskDiskEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) ComputeDiskDiskEncryptionKeyPtrOutput { return v.DiskEncryptionKey }).(ComputeDiskDiskEncryptionKeyPtrOutput)
}

// The unique identifier for the resource. This identifier is defined by the server.
func (o ComputeDiskOutput) DiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.DiskId }).(pulumi.StringOutput)
}

func (o ComputeDiskOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Whether this disk is using confidential compute mode. Note: Only supported on hyperdisk skus, disk_encryption_key is
// required when setting to true
func (o ComputeDiskOutput) EnableConfidentialCompute() pulumi.BoolOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.BoolOutput { return v.EnableConfidentialCompute }).(pulumi.BoolOutput)
}

// A list of features to enable on the guest operating system. Applicable only for bootable disks.
func (o ComputeDiskOutput) GuestOsFeatures() ComputeDiskGuestOsFeatureArrayOutput {
	return o.ApplyT(func(v *ComputeDisk) ComputeDiskGuestOsFeatureArrayOutput { return v.GuestOsFeatures }).(ComputeDiskGuestOsFeatureArrayOutput)
}

// The image from which to initialize this disk. This can be one of: the image's 'self_link',
// 'projects/{project}/global/images/{image}', 'projects/{project}/global/images/family/{family}', 'global/images/{image}',
// 'global/images/family/{family}', 'family/{family}', '{project}/{family}', '{project}/{image}', '{family}', or '{image}'.
// If referred by family, the images names must include the family name. If they don't, use the [google-beta.ComputeImage
// data source](https://www.terraform.io/docs/providers/google/d/compute_image.html). For instance, the image
// 'centos-6-v20180104' includes its family name 'centos-6'. These images can be referred by family name here.
func (o ComputeDiskOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringPtrOutput { return v.Image }).(pulumi.StringPtrOutput)
}

// Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
//
// Deprecated: Deprecated
func (o ComputeDiskOutput) Interface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringPtrOutput { return v.Interface }).(pulumi.StringPtrOutput)
}

// The fingerprint used for optimistic locking of this resource. Used internally during updates.
func (o ComputeDiskOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.LabelFingerprint }).(pulumi.StringOutput)
}

// Labels to apply to this disk. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o ComputeDiskOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Last attach timestamp in RFC3339 text format.
func (o ComputeDiskOutput) LastAttachTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.LastAttachTimestamp }).(pulumi.StringOutput)
}

// Last detach timestamp in RFC3339 text format.
func (o ComputeDiskOutput) LastDetachTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.LastDetachTimestamp }).(pulumi.StringOutput)
}

// Any applicable license URI.
func (o ComputeDiskOutput) Licenses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringArrayOutput { return v.Licenses }).(pulumi.StringArrayOutput)
}

// Indicates whether or not the disk can be read/write attached to more than one instance.
func (o ComputeDiskOutput) MultiWriter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.BoolPtrOutput { return v.MultiWriter }).(pulumi.BoolPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeDiskOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently
// supported sizes are 4096 and 16384, other sizes may be added in the future. If an unsupported value is requested, the
// error message will list the supported values for the caller's project.
func (o ComputeDiskOutput) PhysicalBlockSizeBytes() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeDisk) pulumi.Float64Output { return v.PhysicalBlockSizeBytes }).(pulumi.Float64Output)
}

func (o ComputeDiskOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Indicates how many IOPS must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk skus
// without the need to delete and recreate the disk, hyperdisk allows for an update of IOPS every 4 hours. To update your
// hyperdisk more frequently, you'll need to manually delete and recreate it
func (o ComputeDiskOutput) ProvisionedIops() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeDisk) pulumi.Float64Output { return v.ProvisionedIops }).(pulumi.Float64Output)
}

// Indicates how much Throughput must be provisioned for the disk. Note: Updating currently is only supported by hyperdisk
// skus without the need to delete and recreate the disk, hyperdisk allows for an update of Throughput every 4 hours. To
// update your hyperdisk more frequently, you'll need to manually delete and recreate it
func (o ComputeDiskOutput) ProvisionedThroughput() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeDisk) pulumi.Float64Output { return v.ProvisionedThroughput }).(pulumi.Float64Output)
}

func (o ComputeDiskOutput) ResourcePolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringArrayOutput { return v.ResourcePolicies }).(pulumi.StringArrayOutput)
}

func (o ComputeDiskOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

func (o ComputeDiskOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeDisk) pulumi.Float64Output { return v.Size }).(pulumi.Float64Output)
}

// The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. If the
// snapshot is in another project than this disk, you must supply a full URL. For example, the following are valid values:
//   - 'https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot' *
//     'projects/project/global/snapshots/snapshot' * 'global/snapshots/snapshot' * 'snapshot'
func (o ComputeDiskOutput) Snapshot() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringPtrOutput { return v.Snapshot }).(pulumi.StringPtrOutput)
}

// The source disk used to create this disk. You can provide this as a partial or full URL to the resource. For example,
// the following are valid values: * https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/disks/{disk} *
// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/disks/{disk} *
// projects/{project}/zones/{zone}/disks/{disk} * projects/{project}/regions/{region}/disks/{disk} *
// zones/{zone}/disks/{disk} * regions/{region}/disks/{disk}
func (o ComputeDiskOutput) SourceDisk() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringPtrOutput { return v.SourceDisk }).(pulumi.StringPtrOutput)
}

// The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from
// the current or a previous instance of a given disk name.
func (o ComputeDiskOutput) SourceDiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.SourceDiskId }).(pulumi.StringOutput)
}

// The customer-supplied encryption key of the source image. Required if the source image is protected by a
// customer-supplied encryption key.
func (o ComputeDiskOutput) SourceImageEncryptionKey() ComputeDiskSourceImageEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) ComputeDiskSourceImageEncryptionKeyPtrOutput { return v.SourceImageEncryptionKey }).(ComputeDiskSourceImageEncryptionKeyPtrOutput)
}

// The ID value of the image used to create this disk. This value identifies the exact image that was used to create this
// persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated
// under the same name, the source image ID would identify the exact version of the image that was used.
func (o ComputeDiskOutput) SourceImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.SourceImageId }).(pulumi.StringOutput)
}

// The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a
// customer-supplied encryption key.
func (o ComputeDiskOutput) SourceSnapshotEncryptionKey() ComputeDiskSourceSnapshotEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) ComputeDiskSourceSnapshotEncryptionKeyPtrOutput {
		return v.SourceSnapshotEncryptionKey
	}).(ComputeDiskSourceSnapshotEncryptionKeyPtrOutput)
}

// The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create
// this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and
// recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
func (o ComputeDiskOutput) SourceSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.SourceSnapshotId }).(pulumi.StringOutput)
}

// The URL or the name of the storage pool in which the new disk is created. For example: *
// https://www.googleapis.com/compute/v1/projects/{project}/zones/{zone}/storagePools/{storagePool} *
// /projects/{project}/zones/{zone}/storagePools/{storagePool} * /zones/{zone}/storagePools/{storagePool} * /{storagePool}
func (o ComputeDiskOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringPtrOutput { return v.StoragePool }).(pulumi.StringPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ComputeDiskOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ComputeDiskOutput) Timeouts() ComputeDiskTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) ComputeDiskTimeoutsPtrOutput { return v.Timeouts }).(ComputeDiskTimeoutsPtrOutput)
}

// URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
func (o ComputeDiskOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
func (o ComputeDiskOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringArrayOutput { return v.Users }).(pulumi.StringArrayOutput)
}

// A reference to the zone where the disk resides.
func (o ComputeDiskOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDisk) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeDiskInput)(nil)).Elem(), &ComputeDisk{})
	pulumi.RegisterOutputType(ComputeDiskOutput{})
}
