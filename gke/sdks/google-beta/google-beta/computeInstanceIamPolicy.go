// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeInstanceIamPolicy struct {
	pulumi.CustomResourceState

	ComputeInstanceIamPolicyId pulumi.StringOutput `pulumi:"computeInstanceIamPolicyId"`
	Etag                       pulumi.StringOutput `pulumi:"etag"`
	InstanceName               pulumi.StringOutput `pulumi:"instanceName"`
	PolicyData                 pulumi.StringOutput `pulumi:"policyData"`
	Project                    pulumi.StringOutput `pulumi:"project"`
	Zone                       pulumi.StringOutput `pulumi:"zone"`
}

// NewComputeInstanceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewComputeInstanceIamPolicy(ctx *pulumi.Context,
	name string, args *ComputeInstanceIamPolicyArgs, opts ...pulumi.ResourceOption) (*ComputeInstanceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeInstanceIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/computeInstanceIamPolicy:ComputeInstanceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInstanceIamPolicy gets an existing ComputeInstanceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInstanceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInstanceIamPolicyState, opts ...pulumi.ResourceOption) (*ComputeInstanceIamPolicy, error) {
	var resource ComputeInstanceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeInstanceIamPolicy:ComputeInstanceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInstanceIamPolicy resources.
type computeInstanceIamPolicyState struct {
	ComputeInstanceIamPolicyId *string `pulumi:"computeInstanceIamPolicyId"`
	Etag                       *string `pulumi:"etag"`
	InstanceName               *string `pulumi:"instanceName"`
	PolicyData                 *string `pulumi:"policyData"`
	Project                    *string `pulumi:"project"`
	Zone                       *string `pulumi:"zone"`
}

type ComputeInstanceIamPolicyState struct {
	ComputeInstanceIamPolicyId pulumi.StringPtrInput
	Etag                       pulumi.StringPtrInput
	InstanceName               pulumi.StringPtrInput
	PolicyData                 pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	Zone                       pulumi.StringPtrInput
}

func (ComputeInstanceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceIamPolicyState)(nil)).Elem()
}

type computeInstanceIamPolicyArgs struct {
	ComputeInstanceIamPolicyId *string `pulumi:"computeInstanceIamPolicyId"`
	InstanceName               string  `pulumi:"instanceName"`
	PolicyData                 string  `pulumi:"policyData"`
	Project                    *string `pulumi:"project"`
	Zone                       *string `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeInstanceIamPolicy resource.
type ComputeInstanceIamPolicyArgs struct {
	ComputeInstanceIamPolicyId pulumi.StringPtrInput
	InstanceName               pulumi.StringInput
	PolicyData                 pulumi.StringInput
	Project                    pulumi.StringPtrInput
	Zone                       pulumi.StringPtrInput
}

func (ComputeInstanceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceIamPolicyArgs)(nil)).Elem()
}

type ComputeInstanceIamPolicyInput interface {
	pulumi.Input

	ToComputeInstanceIamPolicyOutput() ComputeInstanceIamPolicyOutput
	ToComputeInstanceIamPolicyOutputWithContext(ctx context.Context) ComputeInstanceIamPolicyOutput
}

func (*ComputeInstanceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceIamPolicy)(nil)).Elem()
}

func (i *ComputeInstanceIamPolicy) ToComputeInstanceIamPolicyOutput() ComputeInstanceIamPolicyOutput {
	return i.ToComputeInstanceIamPolicyOutputWithContext(context.Background())
}

func (i *ComputeInstanceIamPolicy) ToComputeInstanceIamPolicyOutputWithContext(ctx context.Context) ComputeInstanceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceIamPolicyOutput)
}

type ComputeInstanceIamPolicyOutput struct{ *pulumi.OutputState }

func (ComputeInstanceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceIamPolicy)(nil)).Elem()
}

func (o ComputeInstanceIamPolicyOutput) ToComputeInstanceIamPolicyOutput() ComputeInstanceIamPolicyOutput {
	return o
}

func (o ComputeInstanceIamPolicyOutput) ToComputeInstanceIamPolicyOutputWithContext(ctx context.Context) ComputeInstanceIamPolicyOutput {
	return o
}

func (o ComputeInstanceIamPolicyOutput) ComputeInstanceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamPolicy) pulumi.StringOutput { return v.ComputeInstanceIamPolicyId }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamPolicyOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamPolicy) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeInstanceIamPolicyOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceIamPolicy) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceIamPolicyInput)(nil)).Elem(), &ComputeInstanceIamPolicy{})
	pulumi.RegisterOutputType(ComputeInstanceIamPolicyOutput{})
}
