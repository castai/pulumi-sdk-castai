// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryTableIamPolicy struct {
	pulumi.CustomResourceState

	BigqueryTableIamPolicyId pulumi.StringOutput `pulumi:"bigqueryTableIamPolicyId"`
	DatasetId                pulumi.StringOutput `pulumi:"datasetId"`
	Etag                     pulumi.StringOutput `pulumi:"etag"`
	PolicyData               pulumi.StringOutput `pulumi:"policyData"`
	Project                  pulumi.StringOutput `pulumi:"project"`
	TableId                  pulumi.StringOutput `pulumi:"tableId"`
}

// NewBigqueryTableIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewBigqueryTableIamPolicy(ctx *pulumi.Context,
	name string, args *BigqueryTableIamPolicyArgs, opts ...pulumi.ResourceOption) (*BigqueryTableIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatasetId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.TableId == nil {
		return nil, errors.New("invalid value for required argument 'TableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryTableIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/bigqueryTableIamPolicy:BigqueryTableIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryTableIamPolicy gets an existing BigqueryTableIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryTableIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryTableIamPolicyState, opts ...pulumi.ResourceOption) (*BigqueryTableIamPolicy, error) {
	var resource BigqueryTableIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/bigqueryTableIamPolicy:BigqueryTableIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryTableIamPolicy resources.
type bigqueryTableIamPolicyState struct {
	BigqueryTableIamPolicyId *string `pulumi:"bigqueryTableIamPolicyId"`
	DatasetId                *string `pulumi:"datasetId"`
	Etag                     *string `pulumi:"etag"`
	PolicyData               *string `pulumi:"policyData"`
	Project                  *string `pulumi:"project"`
	TableId                  *string `pulumi:"tableId"`
}

type BigqueryTableIamPolicyState struct {
	BigqueryTableIamPolicyId pulumi.StringPtrInput
	DatasetId                pulumi.StringPtrInput
	Etag                     pulumi.StringPtrInput
	PolicyData               pulumi.StringPtrInput
	Project                  pulumi.StringPtrInput
	TableId                  pulumi.StringPtrInput
}

func (BigqueryTableIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryTableIamPolicyState)(nil)).Elem()
}

type bigqueryTableIamPolicyArgs struct {
	BigqueryTableIamPolicyId *string `pulumi:"bigqueryTableIamPolicyId"`
	DatasetId                string  `pulumi:"datasetId"`
	PolicyData               string  `pulumi:"policyData"`
	Project                  *string `pulumi:"project"`
	TableId                  string  `pulumi:"tableId"`
}

// The set of arguments for constructing a BigqueryTableIamPolicy resource.
type BigqueryTableIamPolicyArgs struct {
	BigqueryTableIamPolicyId pulumi.StringPtrInput
	DatasetId                pulumi.StringInput
	PolicyData               pulumi.StringInput
	Project                  pulumi.StringPtrInput
	TableId                  pulumi.StringInput
}

func (BigqueryTableIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryTableIamPolicyArgs)(nil)).Elem()
}

type BigqueryTableIamPolicyInput interface {
	pulumi.Input

	ToBigqueryTableIamPolicyOutput() BigqueryTableIamPolicyOutput
	ToBigqueryTableIamPolicyOutputWithContext(ctx context.Context) BigqueryTableIamPolicyOutput
}

func (*BigqueryTableIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryTableIamPolicy)(nil)).Elem()
}

func (i *BigqueryTableIamPolicy) ToBigqueryTableIamPolicyOutput() BigqueryTableIamPolicyOutput {
	return i.ToBigqueryTableIamPolicyOutputWithContext(context.Background())
}

func (i *BigqueryTableIamPolicy) ToBigqueryTableIamPolicyOutputWithContext(ctx context.Context) BigqueryTableIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryTableIamPolicyOutput)
}

type BigqueryTableIamPolicyOutput struct{ *pulumi.OutputState }

func (BigqueryTableIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryTableIamPolicy)(nil)).Elem()
}

func (o BigqueryTableIamPolicyOutput) ToBigqueryTableIamPolicyOutput() BigqueryTableIamPolicyOutput {
	return o
}

func (o BigqueryTableIamPolicyOutput) ToBigqueryTableIamPolicyOutputWithContext(ctx context.Context) BigqueryTableIamPolicyOutput {
	return o
}

func (o BigqueryTableIamPolicyOutput) BigqueryTableIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamPolicy) pulumi.StringOutput { return v.BigqueryTableIamPolicyId }).(pulumi.StringOutput)
}

func (o BigqueryTableIamPolicyOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamPolicy) pulumi.StringOutput { return v.DatasetId }).(pulumi.StringOutput)
}

func (o BigqueryTableIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigqueryTableIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o BigqueryTableIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigqueryTableIamPolicyOutput) TableId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamPolicy) pulumi.StringOutput { return v.TableId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryTableIamPolicyInput)(nil)).Elem(), &BigqueryTableIamPolicy{})
	pulumi.RegisterOutputType(BigqueryTableIamPolicyOutput{})
}
