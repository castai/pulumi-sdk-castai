// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VertexAiDeploymentResourcePool struct {
	pulumi.CustomResourceState

	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The underlying dedicated resources that the deployment resource pool uses.
	DedicatedResources VertexAiDeploymentResourcePoolDedicatedResourcesPtrOutput `pulumi:"dedicatedResources"`
	// The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are '/^a-z?$/'.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The region of deployment resource pool. eg us-central1
	Region                           pulumi.StringPtrOutput                          `pulumi:"region"`
	Timeouts                         VertexAiDeploymentResourcePoolTimeoutsPtrOutput `pulumi:"timeouts"`
	VertexAiDeploymentResourcePoolId pulumi.StringOutput                             `pulumi:"vertexAiDeploymentResourcePoolId"`
}

// NewVertexAiDeploymentResourcePool registers a new resource with the given unique name, arguments, and options.
func NewVertexAiDeploymentResourcePool(ctx *pulumi.Context,
	name string, args *VertexAiDeploymentResourcePoolArgs, opts ...pulumi.ResourceOption) (*VertexAiDeploymentResourcePool, error) {
	if args == nil {
		args = &VertexAiDeploymentResourcePoolArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VertexAiDeploymentResourcePool
	err = ctx.RegisterPackageResource("google-beta:index/vertexAiDeploymentResourcePool:VertexAiDeploymentResourcePool", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVertexAiDeploymentResourcePool gets an existing VertexAiDeploymentResourcePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVertexAiDeploymentResourcePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VertexAiDeploymentResourcePoolState, opts ...pulumi.ResourceOption) (*VertexAiDeploymentResourcePool, error) {
	var resource VertexAiDeploymentResourcePool
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vertexAiDeploymentResourcePool:VertexAiDeploymentResourcePool", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VertexAiDeploymentResourcePool resources.
type vertexAiDeploymentResourcePoolState struct {
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// The underlying dedicated resources that the deployment resource pool uses.
	DedicatedResources *VertexAiDeploymentResourcePoolDedicatedResources `pulumi:"dedicatedResources"`
	// The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are '/^a-z?$/'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The region of deployment resource pool. eg us-central1
	Region                           *string                                 `pulumi:"region"`
	Timeouts                         *VertexAiDeploymentResourcePoolTimeouts `pulumi:"timeouts"`
	VertexAiDeploymentResourcePoolId *string                                 `pulumi:"vertexAiDeploymentResourcePoolId"`
}

type VertexAiDeploymentResourcePoolState struct {
	// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	CreateTime pulumi.StringPtrInput
	// The underlying dedicated resources that the deployment resource pool uses.
	DedicatedResources VertexAiDeploymentResourcePoolDedicatedResourcesPtrInput
	// The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are '/^a-z?$/'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The region of deployment resource pool. eg us-central1
	Region                           pulumi.StringPtrInput
	Timeouts                         VertexAiDeploymentResourcePoolTimeoutsPtrInput
	VertexAiDeploymentResourcePoolId pulumi.StringPtrInput
}

func (VertexAiDeploymentResourcePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiDeploymentResourcePoolState)(nil)).Elem()
}

type vertexAiDeploymentResourcePoolArgs struct {
	// The underlying dedicated resources that the deployment resource pool uses.
	DedicatedResources *VertexAiDeploymentResourcePoolDedicatedResources `pulumi:"dedicatedResources"`
	// The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are '/^a-z?$/'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The region of deployment resource pool. eg us-central1
	Region                           *string                                 `pulumi:"region"`
	Timeouts                         *VertexAiDeploymentResourcePoolTimeouts `pulumi:"timeouts"`
	VertexAiDeploymentResourcePoolId *string                                 `pulumi:"vertexAiDeploymentResourcePoolId"`
}

// The set of arguments for constructing a VertexAiDeploymentResourcePool resource.
type VertexAiDeploymentResourcePoolArgs struct {
	// The underlying dedicated resources that the deployment resource pool uses.
	DedicatedResources VertexAiDeploymentResourcePoolDedicatedResourcesPtrInput
	// The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are '/^a-z?$/'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The region of deployment resource pool. eg us-central1
	Region                           pulumi.StringPtrInput
	Timeouts                         VertexAiDeploymentResourcePoolTimeoutsPtrInput
	VertexAiDeploymentResourcePoolId pulumi.StringPtrInput
}

func (VertexAiDeploymentResourcePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiDeploymentResourcePoolArgs)(nil)).Elem()
}

type VertexAiDeploymentResourcePoolInput interface {
	pulumi.Input

	ToVertexAiDeploymentResourcePoolOutput() VertexAiDeploymentResourcePoolOutput
	ToVertexAiDeploymentResourcePoolOutputWithContext(ctx context.Context) VertexAiDeploymentResourcePoolOutput
}

func (*VertexAiDeploymentResourcePool) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiDeploymentResourcePool)(nil)).Elem()
}

func (i *VertexAiDeploymentResourcePool) ToVertexAiDeploymentResourcePoolOutput() VertexAiDeploymentResourcePoolOutput {
	return i.ToVertexAiDeploymentResourcePoolOutputWithContext(context.Background())
}

func (i *VertexAiDeploymentResourcePool) ToVertexAiDeploymentResourcePoolOutputWithContext(ctx context.Context) VertexAiDeploymentResourcePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VertexAiDeploymentResourcePoolOutput)
}

type VertexAiDeploymentResourcePoolOutput struct{ *pulumi.OutputState }

func (VertexAiDeploymentResourcePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiDeploymentResourcePool)(nil)).Elem()
}

func (o VertexAiDeploymentResourcePoolOutput) ToVertexAiDeploymentResourcePoolOutput() VertexAiDeploymentResourcePoolOutput {
	return o
}

func (o VertexAiDeploymentResourcePoolOutput) ToVertexAiDeploymentResourcePoolOutputWithContext(ctx context.Context) VertexAiDeploymentResourcePoolOutput {
	return o
}

// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
func (o VertexAiDeploymentResourcePoolOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDeploymentResourcePool) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The underlying dedicated resources that the deployment resource pool uses.
func (o VertexAiDeploymentResourcePoolOutput) DedicatedResources() VertexAiDeploymentResourcePoolDedicatedResourcesPtrOutput {
	return o.ApplyT(func(v *VertexAiDeploymentResourcePool) VertexAiDeploymentResourcePoolDedicatedResourcesPtrOutput {
		return v.DedicatedResources
	}).(VertexAiDeploymentResourcePoolDedicatedResourcesPtrOutput)
}

// The resource name of deployment resource pool. The maximum length is 63 characters, and valid characters are '/^a-z?$/'.
func (o VertexAiDeploymentResourcePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDeploymentResourcePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VertexAiDeploymentResourcePoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDeploymentResourcePool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of deployment resource pool. eg us-central1
func (o VertexAiDeploymentResourcePoolOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VertexAiDeploymentResourcePool) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

func (o VertexAiDeploymentResourcePoolOutput) Timeouts() VertexAiDeploymentResourcePoolTimeoutsPtrOutput {
	return o.ApplyT(func(v *VertexAiDeploymentResourcePool) VertexAiDeploymentResourcePoolTimeoutsPtrOutput {
		return v.Timeouts
	}).(VertexAiDeploymentResourcePoolTimeoutsPtrOutput)
}

func (o VertexAiDeploymentResourcePoolOutput) VertexAiDeploymentResourcePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDeploymentResourcePool) pulumi.StringOutput { return v.VertexAiDeploymentResourcePoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VertexAiDeploymentResourcePoolInput)(nil)).Elem(), &VertexAiDeploymentResourcePool{})
	pulumi.RegisterOutputType(VertexAiDeploymentResourcePoolOutput{})
}
