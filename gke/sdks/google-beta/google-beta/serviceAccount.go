// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceAccount struct {
	pulumi.CustomResourceState

	// The account id that is used to generate the service account email address and a stable unique id. It is unique within a
	// project, must be 6-30 characters long, and match the regular expression a-z to comply with RFC1035. Changing this forces
	// a new service account to be created.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// If set to true, skip service account creation if a service account with the same email already exists.
	CreateIgnoreAlreadyExists pulumi.BoolPtrOutput `pulumi:"createIgnoreAlreadyExists"`
	// A text description of the service account. Must be less than or equal to 256 UTF-8 bytes.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether the service account is disabled. Defaults to false
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// The display name for the service account. Can be updated without creating a new resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The e-mail address of the service account. This value should be referenced from any google-beta.getIamPolicy data
	// sources that would grant the service account privileges.
	Email pulumi.StringOutput `pulumi:"email"`
	// The Identity of the service account in the form 'serviceAccount:{email}'. This value is often used to refer to the
	// service account in order to grant IAM permissions.
	Member pulumi.StringOutput `pulumi:"member"`
	// The fully-qualified name of the service account.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project          pulumi.StringOutput             `pulumi:"project"`
	ServiceAccountId pulumi.StringOutput             `pulumi:"serviceAccountId"`
	Timeouts         ServiceAccountTimeoutsPtrOutput `pulumi:"timeouts"`
	// The unique id of the service account.
	UniqueId pulumi.StringOutput `pulumi:"uniqueId"`
}

// NewServiceAccount registers a new resource with the given unique name, arguments, and options.
func NewServiceAccount(ctx *pulumi.Context,
	name string, args *ServiceAccountArgs, opts ...pulumi.ResourceOption) (*ServiceAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceAccount
	err = ctx.RegisterPackageResource("google-beta:index/serviceAccount:ServiceAccount", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAccount gets an existing ServiceAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceAccountState, opts ...pulumi.ResourceOption) (*ServiceAccount, error) {
	var resource ServiceAccount
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/serviceAccount:ServiceAccount", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceAccount resources.
type serviceAccountState struct {
	// The account id that is used to generate the service account email address and a stable unique id. It is unique within a
	// project, must be 6-30 characters long, and match the regular expression a-z to comply with RFC1035. Changing this forces
	// a new service account to be created.
	AccountId *string `pulumi:"accountId"`
	// If set to true, skip service account creation if a service account with the same email already exists.
	CreateIgnoreAlreadyExists *bool `pulumi:"createIgnoreAlreadyExists"`
	// A text description of the service account. Must be less than or equal to 256 UTF-8 bytes.
	Description *string `pulumi:"description"`
	// Whether the service account is disabled. Defaults to false
	Disabled *bool `pulumi:"disabled"`
	// The display name for the service account. Can be updated without creating a new resource.
	DisplayName *string `pulumi:"displayName"`
	// The e-mail address of the service account. This value should be referenced from any google-beta.getIamPolicy data
	// sources that would grant the service account privileges.
	Email *string `pulumi:"email"`
	// The Identity of the service account in the form 'serviceAccount:{email}'. This value is often used to refer to the
	// service account in order to grant IAM permissions.
	Member *string `pulumi:"member"`
	// The fully-qualified name of the service account.
	Name *string `pulumi:"name"`
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project          *string                 `pulumi:"project"`
	ServiceAccountId *string                 `pulumi:"serviceAccountId"`
	Timeouts         *ServiceAccountTimeouts `pulumi:"timeouts"`
	// The unique id of the service account.
	UniqueId *string `pulumi:"uniqueId"`
}

type ServiceAccountState struct {
	// The account id that is used to generate the service account email address and a stable unique id. It is unique within a
	// project, must be 6-30 characters long, and match the regular expression a-z to comply with RFC1035. Changing this forces
	// a new service account to be created.
	AccountId pulumi.StringPtrInput
	// If set to true, skip service account creation if a service account with the same email already exists.
	CreateIgnoreAlreadyExists pulumi.BoolPtrInput
	// A text description of the service account. Must be less than or equal to 256 UTF-8 bytes.
	Description pulumi.StringPtrInput
	// Whether the service account is disabled. Defaults to false
	Disabled pulumi.BoolPtrInput
	// The display name for the service account. Can be updated without creating a new resource.
	DisplayName pulumi.StringPtrInput
	// The e-mail address of the service account. This value should be referenced from any google-beta.getIamPolicy data
	// sources that would grant the service account privileges.
	Email pulumi.StringPtrInput
	// The Identity of the service account in the form 'serviceAccount:{email}'. This value is often used to refer to the
	// service account in order to grant IAM permissions.
	Member pulumi.StringPtrInput
	// The fully-qualified name of the service account.
	Name pulumi.StringPtrInput
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project          pulumi.StringPtrInput
	ServiceAccountId pulumi.StringPtrInput
	Timeouts         ServiceAccountTimeoutsPtrInput
	// The unique id of the service account.
	UniqueId pulumi.StringPtrInput
}

func (ServiceAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountState)(nil)).Elem()
}

type serviceAccountArgs struct {
	// The account id that is used to generate the service account email address and a stable unique id. It is unique within a
	// project, must be 6-30 characters long, and match the regular expression a-z to comply with RFC1035. Changing this forces
	// a new service account to be created.
	AccountId string `pulumi:"accountId"`
	// If set to true, skip service account creation if a service account with the same email already exists.
	CreateIgnoreAlreadyExists *bool `pulumi:"createIgnoreAlreadyExists"`
	// A text description of the service account. Must be less than or equal to 256 UTF-8 bytes.
	Description *string `pulumi:"description"`
	// Whether the service account is disabled. Defaults to false
	Disabled *bool `pulumi:"disabled"`
	// The display name for the service account. Can be updated without creating a new resource.
	DisplayName *string `pulumi:"displayName"`
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project          *string                 `pulumi:"project"`
	ServiceAccountId *string                 `pulumi:"serviceAccountId"`
	Timeouts         *ServiceAccountTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ServiceAccount resource.
type ServiceAccountArgs struct {
	// The account id that is used to generate the service account email address and a stable unique id. It is unique within a
	// project, must be 6-30 characters long, and match the regular expression a-z to comply with RFC1035. Changing this forces
	// a new service account to be created.
	AccountId pulumi.StringInput
	// If set to true, skip service account creation if a service account with the same email already exists.
	CreateIgnoreAlreadyExists pulumi.BoolPtrInput
	// A text description of the service account. Must be less than or equal to 256 UTF-8 bytes.
	Description pulumi.StringPtrInput
	// Whether the service account is disabled. Defaults to false
	Disabled pulumi.BoolPtrInput
	// The display name for the service account. Can be updated without creating a new resource.
	DisplayName pulumi.StringPtrInput
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project          pulumi.StringPtrInput
	ServiceAccountId pulumi.StringPtrInput
	Timeouts         ServiceAccountTimeoutsPtrInput
}

func (ServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountArgs)(nil)).Elem()
}

type ServiceAccountInput interface {
	pulumi.Input

	ToServiceAccountOutput() ServiceAccountOutput
	ToServiceAccountOutputWithContext(ctx context.Context) ServiceAccountOutput
}

func (*ServiceAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccount)(nil)).Elem()
}

func (i *ServiceAccount) ToServiceAccountOutput() ServiceAccountOutput {
	return i.ToServiceAccountOutputWithContext(context.Background())
}

func (i *ServiceAccount) ToServiceAccountOutputWithContext(ctx context.Context) ServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountOutput)
}

type ServiceAccountOutput struct{ *pulumi.OutputState }

func (ServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccount)(nil)).Elem()
}

func (o ServiceAccountOutput) ToServiceAccountOutput() ServiceAccountOutput {
	return o
}

func (o ServiceAccountOutput) ToServiceAccountOutputWithContext(ctx context.Context) ServiceAccountOutput {
	return o
}

// The account id that is used to generate the service account email address and a stable unique id. It is unique within a
// project, must be 6-30 characters long, and match the regular expression a-z to comply with RFC1035. Changing this forces
// a new service account to be created.
func (o ServiceAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// If set to true, skip service account creation if a service account with the same email already exists.
func (o ServiceAccountOutput) CreateIgnoreAlreadyExists() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.BoolPtrOutput { return v.CreateIgnoreAlreadyExists }).(pulumi.BoolPtrOutput)
}

// A text description of the service account. Must be less than or equal to 256 UTF-8 bytes.
func (o ServiceAccountOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether the service account is disabled. Defaults to false
func (o ServiceAccountOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The display name for the service account. Can be updated without creating a new resource.
func (o ServiceAccountOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The e-mail address of the service account. This value should be referenced from any google-beta.getIamPolicy data
// sources that would grant the service account privileges.
func (o ServiceAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// The Identity of the service account in the form 'serviceAccount:{email}'. This value is often used to refer to the
// service account in order to grant IAM permissions.
func (o ServiceAccountOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

// The fully-qualified name of the service account.
func (o ServiceAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
func (o ServiceAccountOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ServiceAccountOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func (o ServiceAccountOutput) Timeouts() ServiceAccountTimeoutsPtrOutput {
	return o.ApplyT(func(v *ServiceAccount) ServiceAccountTimeoutsPtrOutput { return v.Timeouts }).(ServiceAccountTimeoutsPtrOutput)
}

// The unique id of the service account.
func (o ServiceAccountOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.UniqueId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountInput)(nil)).Elem(), &ServiceAccount{})
	pulumi.RegisterOutputType(ServiceAccountOutput{})
}
