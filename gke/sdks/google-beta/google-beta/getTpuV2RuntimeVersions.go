// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetTpuV2RuntimeVersions(ctx *pulumi.Context, args *GetTpuV2RuntimeVersionsArgs, opts ...pulumi.InvokeOption) (*GetTpuV2RuntimeVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetTpuV2RuntimeVersionsResult
	err = ctx.InvokePackage("google-beta:index/getTpuV2RuntimeVersions:getTpuV2RuntimeVersions", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTpuV2RuntimeVersions.
type GetTpuV2RuntimeVersionsArgs struct {
	Id      *string `pulumi:"id"`
	Project *string `pulumi:"project"`
	Zone    *string `pulumi:"zone"`
}

// A collection of values returned by getTpuV2RuntimeVersions.
type GetTpuV2RuntimeVersionsResult struct {
	Id       string   `pulumi:"id"`
	Project  string   `pulumi:"project"`
	Versions []string `pulumi:"versions"`
	Zone     string   `pulumi:"zone"`
}

func GetTpuV2RuntimeVersionsOutput(ctx *pulumi.Context, args GetTpuV2RuntimeVersionsOutputArgs, opts ...pulumi.InvokeOption) GetTpuV2RuntimeVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTpuV2RuntimeVersionsResultOutput, error) {
			args := v.(GetTpuV2RuntimeVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetTpuV2RuntimeVersionsResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getTpuV2RuntimeVersions:getTpuV2RuntimeVersions", args, GetTpuV2RuntimeVersionsResultOutput{}, options).(GetTpuV2RuntimeVersionsResultOutput), nil
		}).(GetTpuV2RuntimeVersionsResultOutput)
}

// A collection of arguments for invoking getTpuV2RuntimeVersions.
type GetTpuV2RuntimeVersionsOutputArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Project pulumi.StringPtrInput `pulumi:"project"`
	Zone    pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetTpuV2RuntimeVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTpuV2RuntimeVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getTpuV2RuntimeVersions.
type GetTpuV2RuntimeVersionsResultOutput struct{ *pulumi.OutputState }

func (GetTpuV2RuntimeVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTpuV2RuntimeVersionsResult)(nil)).Elem()
}

func (o GetTpuV2RuntimeVersionsResultOutput) ToGetTpuV2RuntimeVersionsResultOutput() GetTpuV2RuntimeVersionsResultOutput {
	return o
}

func (o GetTpuV2RuntimeVersionsResultOutput) ToGetTpuV2RuntimeVersionsResultOutputWithContext(ctx context.Context) GetTpuV2RuntimeVersionsResultOutput {
	return o
}

func (o GetTpuV2RuntimeVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTpuV2RuntimeVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTpuV2RuntimeVersionsResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetTpuV2RuntimeVersionsResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetTpuV2RuntimeVersionsResultOutput) Versions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTpuV2RuntimeVersionsResult) []string { return v.Versions }).(pulumi.StringArrayOutput)
}

func (o GetTpuV2RuntimeVersionsResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetTpuV2RuntimeVersionsResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTpuV2RuntimeVersionsResultOutput{})
}
