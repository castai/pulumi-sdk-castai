// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataflowFlexTemplateJob struct {
	pulumi.CustomResourceState

	// List of experiments that should be used by the job. An example value is ["enable_stackdriver_agent_metrics"].
	AdditionalExperiments pulumi.StringArrayOutput `pulumi:"additionalExperiments"`
	// The algorithm to use for autoscaling
	AutoscalingAlgorithm      pulumi.StringOutput    `pulumi:"autoscalingAlgorithm"`
	ContainerSpecGcsPath      pulumi.StringOutput    `pulumi:"containerSpecGcsPath"`
	DataflowFlexTemplateJobId pulumi.StringOutput    `pulumi:"dataflowFlexTemplateJobId"`
	EffectiveLabels           pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Indicates if the job should use the streaming engine feature.
	EnableStreamingEngine pulumi.BoolPtrOutput `pulumi:"enableStreamingEngine"`
	// The configuration for VM IPs. Options are "WORKER_IP_PUBLIC" or "WORKER_IP_PRIVATE".
	IpConfiguration pulumi.StringPtrOutput `pulumi:"ipConfiguration"`
	JobId           pulumi.StringOutput    `pulumi:"jobId"`
	// The name for the Cloud KMS key for the job. Key format is:
	// projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
	KmsKeyName pulumi.StringOutput `pulumi:"kmsKeyName"`
	// User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling
	// restrictions page. NOTE: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The machine type to use for launching the job. The default is n1-standard-1.
	LauncherMachineType pulumi.StringOutput `pulumi:"launcherMachineType"`
	// The machine type to use for the job.
	MachineType pulumi.StringOutput `pulumi:"machineType"`
	// The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
	// 1000.
	MaxWorkers pulumi.Float64Output `pulumi:"maxWorkers"`
	Name       pulumi.StringOutput  `pulumi:"name"`
	// The network to which VMs will be assigned. If it is not provided, "default" will be used.
	Network pulumi.StringOutput `pulumi:"network"`
	// The initial number of Google Compute Engine instances for the job.
	NumWorkers pulumi.Float64Output   `pulumi:"numWorkers"`
	OnDelete   pulumi.StringPtrOutput `pulumi:"onDelete"`
	Parameters pulumi.StringMapOutput `pulumi:"parameters"`
	Project    pulumi.StringOutput    `pulumi:"project"`
	// The region in which the created job should run.
	Region pulumi.StringOutput `pulumi:"region"`
	// Docker registry location of container image to use for the 'worker harness. Default is the container for the version of
	// the SDK. Note this field is only valid for portable pipelines.
	SdkContainerImage pulumi.StringOutput `pulumi:"sdkContainerImage"`
	// The Service Account email used to create the job.
	ServiceAccountEmail      pulumi.StringOutput  `pulumi:"serviceAccountEmail"`
	SkipWaitOnJobTermination pulumi.BoolPtrOutput `pulumi:"skipWaitOnJobTermination"`
	// The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
	StagingLocation pulumi.StringOutput `pulumi:"stagingLocation"`
	State           pulumi.StringOutput `pulumi:"state"`
	// The subnetwork to which VMs will be assigned. Should be of the form "regions/REGION/subnetworks/SUBNETWORK".
	Subnetwork pulumi.StringOutput `pulumi:"subnetwork"`
	// The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
	TempLocation pulumi.StringOutput `pulumi:"tempLocation"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput `pulumi:"terraformLabels"`
	// Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
	// corresponding name prefixes of the new job.
	TransformNameMapping pulumi.StringMapOutput `pulumi:"transformNameMapping"`
	// The type of this job, selected from the JobType enum.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDataflowFlexTemplateJob registers a new resource with the given unique name, arguments, and options.
func NewDataflowFlexTemplateJob(ctx *pulumi.Context,
	name string, args *DataflowFlexTemplateJobArgs, opts ...pulumi.ResourceOption) (*DataflowFlexTemplateJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContainerSpecGcsPath == nil {
		return nil, errors.New("invalid value for required argument 'ContainerSpecGcsPath'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataflowFlexTemplateJob
	err = ctx.RegisterPackageResource("google-beta:index/dataflowFlexTemplateJob:DataflowFlexTemplateJob", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataflowFlexTemplateJob gets an existing DataflowFlexTemplateJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataflowFlexTemplateJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataflowFlexTemplateJobState, opts ...pulumi.ResourceOption) (*DataflowFlexTemplateJob, error) {
	var resource DataflowFlexTemplateJob
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataflowFlexTemplateJob:DataflowFlexTemplateJob", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataflowFlexTemplateJob resources.
type dataflowFlexTemplateJobState struct {
	// List of experiments that should be used by the job. An example value is ["enable_stackdriver_agent_metrics"].
	AdditionalExperiments []string `pulumi:"additionalExperiments"`
	// The algorithm to use for autoscaling
	AutoscalingAlgorithm      *string           `pulumi:"autoscalingAlgorithm"`
	ContainerSpecGcsPath      *string           `pulumi:"containerSpecGcsPath"`
	DataflowFlexTemplateJobId *string           `pulumi:"dataflowFlexTemplateJobId"`
	EffectiveLabels           map[string]string `pulumi:"effectiveLabels"`
	// Indicates if the job should use the streaming engine feature.
	EnableStreamingEngine *bool `pulumi:"enableStreamingEngine"`
	// The configuration for VM IPs. Options are "WORKER_IP_PUBLIC" or "WORKER_IP_PRIVATE".
	IpConfiguration *string `pulumi:"ipConfiguration"`
	JobId           *string `pulumi:"jobId"`
	// The name for the Cloud KMS key for the job. Key format is:
	// projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling
	// restrictions page. NOTE: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The machine type to use for launching the job. The default is n1-standard-1.
	LauncherMachineType *string `pulumi:"launcherMachineType"`
	// The machine type to use for the job.
	MachineType *string `pulumi:"machineType"`
	// The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
	// 1000.
	MaxWorkers *float64 `pulumi:"maxWorkers"`
	Name       *string  `pulumi:"name"`
	// The network to which VMs will be assigned. If it is not provided, "default" will be used.
	Network *string `pulumi:"network"`
	// The initial number of Google Compute Engine instances for the job.
	NumWorkers *float64          `pulumi:"numWorkers"`
	OnDelete   *string           `pulumi:"onDelete"`
	Parameters map[string]string `pulumi:"parameters"`
	Project    *string           `pulumi:"project"`
	// The region in which the created job should run.
	Region *string `pulumi:"region"`
	// Docker registry location of container image to use for the 'worker harness. Default is the container for the version of
	// the SDK. Note this field is only valid for portable pipelines.
	SdkContainerImage *string `pulumi:"sdkContainerImage"`
	// The Service Account email used to create the job.
	ServiceAccountEmail      *string `pulumi:"serviceAccountEmail"`
	SkipWaitOnJobTermination *bool   `pulumi:"skipWaitOnJobTermination"`
	// The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
	StagingLocation *string `pulumi:"stagingLocation"`
	State           *string `pulumi:"state"`
	// The subnetwork to which VMs will be assigned. Should be of the form "regions/REGION/subnetworks/SUBNETWORK".
	Subnetwork *string `pulumi:"subnetwork"`
	// The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
	TempLocation *string `pulumi:"tempLocation"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string `pulumi:"terraformLabels"`
	// Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
	// corresponding name prefixes of the new job.
	TransformNameMapping map[string]string `pulumi:"transformNameMapping"`
	// The type of this job, selected from the JobType enum.
	Type *string `pulumi:"type"`
}

type DataflowFlexTemplateJobState struct {
	// List of experiments that should be used by the job. An example value is ["enable_stackdriver_agent_metrics"].
	AdditionalExperiments pulumi.StringArrayInput
	// The algorithm to use for autoscaling
	AutoscalingAlgorithm      pulumi.StringPtrInput
	ContainerSpecGcsPath      pulumi.StringPtrInput
	DataflowFlexTemplateJobId pulumi.StringPtrInput
	EffectiveLabels           pulumi.StringMapInput
	// Indicates if the job should use the streaming engine feature.
	EnableStreamingEngine pulumi.BoolPtrInput
	// The configuration for VM IPs. Options are "WORKER_IP_PUBLIC" or "WORKER_IP_PRIVATE".
	IpConfiguration pulumi.StringPtrInput
	JobId           pulumi.StringPtrInput
	// The name for the Cloud KMS key for the job. Key format is:
	// projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
	KmsKeyName pulumi.StringPtrInput
	// User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling
	// restrictions page. NOTE: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The machine type to use for launching the job. The default is n1-standard-1.
	LauncherMachineType pulumi.StringPtrInput
	// The machine type to use for the job.
	MachineType pulumi.StringPtrInput
	// The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
	// 1000.
	MaxWorkers pulumi.Float64PtrInput
	Name       pulumi.StringPtrInput
	// The network to which VMs will be assigned. If it is not provided, "default" will be used.
	Network pulumi.StringPtrInput
	// The initial number of Google Compute Engine instances for the job.
	NumWorkers pulumi.Float64PtrInput
	OnDelete   pulumi.StringPtrInput
	Parameters pulumi.StringMapInput
	Project    pulumi.StringPtrInput
	// The region in which the created job should run.
	Region pulumi.StringPtrInput
	// Docker registry location of container image to use for the 'worker harness. Default is the container for the version of
	// the SDK. Note this field is only valid for portable pipelines.
	SdkContainerImage pulumi.StringPtrInput
	// The Service Account email used to create the job.
	ServiceAccountEmail      pulumi.StringPtrInput
	SkipWaitOnJobTermination pulumi.BoolPtrInput
	// The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
	StagingLocation pulumi.StringPtrInput
	State           pulumi.StringPtrInput
	// The subnetwork to which VMs will be assigned. Should be of the form "regions/REGION/subnetworks/SUBNETWORK".
	Subnetwork pulumi.StringPtrInput
	// The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
	TempLocation pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	// Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
	// corresponding name prefixes of the new job.
	TransformNameMapping pulumi.StringMapInput
	// The type of this job, selected from the JobType enum.
	Type pulumi.StringPtrInput
}

func (DataflowFlexTemplateJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataflowFlexTemplateJobState)(nil)).Elem()
}

type dataflowFlexTemplateJobArgs struct {
	// List of experiments that should be used by the job. An example value is ["enable_stackdriver_agent_metrics"].
	AdditionalExperiments []string `pulumi:"additionalExperiments"`
	// The algorithm to use for autoscaling
	AutoscalingAlgorithm      *string `pulumi:"autoscalingAlgorithm"`
	ContainerSpecGcsPath      string  `pulumi:"containerSpecGcsPath"`
	DataflowFlexTemplateJobId *string `pulumi:"dataflowFlexTemplateJobId"`
	// Indicates if the job should use the streaming engine feature.
	EnableStreamingEngine *bool `pulumi:"enableStreamingEngine"`
	// The configuration for VM IPs. Options are "WORKER_IP_PUBLIC" or "WORKER_IP_PRIVATE".
	IpConfiguration *string `pulumi:"ipConfiguration"`
	// The name for the Cloud KMS key for the job. Key format is:
	// projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling
	// restrictions page. NOTE: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The machine type to use for launching the job. The default is n1-standard-1.
	LauncherMachineType *string `pulumi:"launcherMachineType"`
	// The machine type to use for the job.
	MachineType *string `pulumi:"machineType"`
	// The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
	// 1000.
	MaxWorkers *float64 `pulumi:"maxWorkers"`
	Name       *string  `pulumi:"name"`
	// The network to which VMs will be assigned. If it is not provided, "default" will be used.
	Network *string `pulumi:"network"`
	// The initial number of Google Compute Engine instances for the job.
	NumWorkers *float64          `pulumi:"numWorkers"`
	OnDelete   *string           `pulumi:"onDelete"`
	Parameters map[string]string `pulumi:"parameters"`
	Project    *string           `pulumi:"project"`
	// The region in which the created job should run.
	Region *string `pulumi:"region"`
	// Docker registry location of container image to use for the 'worker harness. Default is the container for the version of
	// the SDK. Note this field is only valid for portable pipelines.
	SdkContainerImage *string `pulumi:"sdkContainerImage"`
	// The Service Account email used to create the job.
	ServiceAccountEmail      *string `pulumi:"serviceAccountEmail"`
	SkipWaitOnJobTermination *bool   `pulumi:"skipWaitOnJobTermination"`
	// The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
	StagingLocation *string `pulumi:"stagingLocation"`
	// The subnetwork to which VMs will be assigned. Should be of the form "regions/REGION/subnetworks/SUBNETWORK".
	Subnetwork *string `pulumi:"subnetwork"`
	// The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
	TempLocation *string `pulumi:"tempLocation"`
	// Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
	// corresponding name prefixes of the new job.
	TransformNameMapping map[string]string `pulumi:"transformNameMapping"`
}

// The set of arguments for constructing a DataflowFlexTemplateJob resource.
type DataflowFlexTemplateJobArgs struct {
	// List of experiments that should be used by the job. An example value is ["enable_stackdriver_agent_metrics"].
	AdditionalExperiments pulumi.StringArrayInput
	// The algorithm to use for autoscaling
	AutoscalingAlgorithm      pulumi.StringPtrInput
	ContainerSpecGcsPath      pulumi.StringInput
	DataflowFlexTemplateJobId pulumi.StringPtrInput
	// Indicates if the job should use the streaming engine feature.
	EnableStreamingEngine pulumi.BoolPtrInput
	// The configuration for VM IPs. Options are "WORKER_IP_PUBLIC" or "WORKER_IP_PRIVATE".
	IpConfiguration pulumi.StringPtrInput
	// The name for the Cloud KMS key for the job. Key format is:
	// projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
	KmsKeyName pulumi.StringPtrInput
	// User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling
	// restrictions page. NOTE: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The machine type to use for launching the job. The default is n1-standard-1.
	LauncherMachineType pulumi.StringPtrInput
	// The machine type to use for the job.
	MachineType pulumi.StringPtrInput
	// The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
	// 1000.
	MaxWorkers pulumi.Float64PtrInput
	Name       pulumi.StringPtrInput
	// The network to which VMs will be assigned. If it is not provided, "default" will be used.
	Network pulumi.StringPtrInput
	// The initial number of Google Compute Engine instances for the job.
	NumWorkers pulumi.Float64PtrInput
	OnDelete   pulumi.StringPtrInput
	Parameters pulumi.StringMapInput
	Project    pulumi.StringPtrInput
	// The region in which the created job should run.
	Region pulumi.StringPtrInput
	// Docker registry location of container image to use for the 'worker harness. Default is the container for the version of
	// the SDK. Note this field is only valid for portable pipelines.
	SdkContainerImage pulumi.StringPtrInput
	// The Service Account email used to create the job.
	ServiceAccountEmail      pulumi.StringPtrInput
	SkipWaitOnJobTermination pulumi.BoolPtrInput
	// The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
	StagingLocation pulumi.StringPtrInput
	// The subnetwork to which VMs will be assigned. Should be of the form "regions/REGION/subnetworks/SUBNETWORK".
	Subnetwork pulumi.StringPtrInput
	// The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
	TempLocation pulumi.StringPtrInput
	// Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
	// corresponding name prefixes of the new job.
	TransformNameMapping pulumi.StringMapInput
}

func (DataflowFlexTemplateJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataflowFlexTemplateJobArgs)(nil)).Elem()
}

type DataflowFlexTemplateJobInput interface {
	pulumi.Input

	ToDataflowFlexTemplateJobOutput() DataflowFlexTemplateJobOutput
	ToDataflowFlexTemplateJobOutputWithContext(ctx context.Context) DataflowFlexTemplateJobOutput
}

func (*DataflowFlexTemplateJob) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowFlexTemplateJob)(nil)).Elem()
}

func (i *DataflowFlexTemplateJob) ToDataflowFlexTemplateJobOutput() DataflowFlexTemplateJobOutput {
	return i.ToDataflowFlexTemplateJobOutputWithContext(context.Background())
}

func (i *DataflowFlexTemplateJob) ToDataflowFlexTemplateJobOutputWithContext(ctx context.Context) DataflowFlexTemplateJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataflowFlexTemplateJobOutput)
}

type DataflowFlexTemplateJobOutput struct{ *pulumi.OutputState }

func (DataflowFlexTemplateJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataflowFlexTemplateJob)(nil)).Elem()
}

func (o DataflowFlexTemplateJobOutput) ToDataflowFlexTemplateJobOutput() DataflowFlexTemplateJobOutput {
	return o
}

func (o DataflowFlexTemplateJobOutput) ToDataflowFlexTemplateJobOutputWithContext(ctx context.Context) DataflowFlexTemplateJobOutput {
	return o
}

// List of experiments that should be used by the job. An example value is ["enable_stackdriver_agent_metrics"].
func (o DataflowFlexTemplateJobOutput) AdditionalExperiments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringArrayOutput { return v.AdditionalExperiments }).(pulumi.StringArrayOutput)
}

// The algorithm to use for autoscaling
func (o DataflowFlexTemplateJobOutput) AutoscalingAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.AutoscalingAlgorithm }).(pulumi.StringOutput)
}

func (o DataflowFlexTemplateJobOutput) ContainerSpecGcsPath() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.ContainerSpecGcsPath }).(pulumi.StringOutput)
}

func (o DataflowFlexTemplateJobOutput) DataflowFlexTemplateJobId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.DataflowFlexTemplateJobId }).(pulumi.StringOutput)
}

func (o DataflowFlexTemplateJobOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Indicates if the job should use the streaming engine feature.
func (o DataflowFlexTemplateJobOutput) EnableStreamingEngine() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.BoolPtrOutput { return v.EnableStreamingEngine }).(pulumi.BoolPtrOutput)
}

// The configuration for VM IPs. Options are "WORKER_IP_PUBLIC" or "WORKER_IP_PRIVATE".
func (o DataflowFlexTemplateJobOutput) IpConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringPtrOutput { return v.IpConfiguration }).(pulumi.StringPtrOutput)
}

func (o DataflowFlexTemplateJobOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.JobId }).(pulumi.StringOutput)
}

// The name for the Cloud KMS key for the job. Key format is:
// projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
func (o DataflowFlexTemplateJobOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.KmsKeyName }).(pulumi.StringOutput)
}

// User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling
// restrictions page. NOTE: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o DataflowFlexTemplateJobOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The machine type to use for launching the job. The default is n1-standard-1.
func (o DataflowFlexTemplateJobOutput) LauncherMachineType() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.LauncherMachineType }).(pulumi.StringOutput)
}

// The machine type to use for the job.
func (o DataflowFlexTemplateJobOutput) MachineType() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.MachineType }).(pulumi.StringOutput)
}

// The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to
// 1000.
func (o DataflowFlexTemplateJobOutput) MaxWorkers() pulumi.Float64Output {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.Float64Output { return v.MaxWorkers }).(pulumi.Float64Output)
}

func (o DataflowFlexTemplateJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The network to which VMs will be assigned. If it is not provided, "default" will be used.
func (o DataflowFlexTemplateJobOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// The initial number of Google Compute Engine instances for the job.
func (o DataflowFlexTemplateJobOutput) NumWorkers() pulumi.Float64Output {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.Float64Output { return v.NumWorkers }).(pulumi.Float64Output)
}

func (o DataflowFlexTemplateJobOutput) OnDelete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringPtrOutput { return v.OnDelete }).(pulumi.StringPtrOutput)
}

func (o DataflowFlexTemplateJobOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringMapOutput { return v.Parameters }).(pulumi.StringMapOutput)
}

func (o DataflowFlexTemplateJobOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region in which the created job should run.
func (o DataflowFlexTemplateJobOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Docker registry location of container image to use for the 'worker harness. Default is the container for the version of
// the SDK. Note this field is only valid for portable pipelines.
func (o DataflowFlexTemplateJobOutput) SdkContainerImage() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.SdkContainerImage }).(pulumi.StringOutput)
}

// The Service Account email used to create the job.
func (o DataflowFlexTemplateJobOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

func (o DataflowFlexTemplateJobOutput) SkipWaitOnJobTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.BoolPtrOutput { return v.SkipWaitOnJobTermination }).(pulumi.BoolPtrOutput)
}

// The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://.
func (o DataflowFlexTemplateJobOutput) StagingLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.StagingLocation }).(pulumi.StringOutput)
}

func (o DataflowFlexTemplateJobOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The subnetwork to which VMs will be assigned. Should be of the form "regions/REGION/subnetworks/SUBNETWORK".
func (o DataflowFlexTemplateJobOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.Subnetwork }).(pulumi.StringOutput)
}

// The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://.
func (o DataflowFlexTemplateJobOutput) TempLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.TempLocation }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DataflowFlexTemplateJobOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

// Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the
// corresponding name prefixes of the new job.
func (o DataflowFlexTemplateJobOutput) TransformNameMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringMapOutput { return v.TransformNameMapping }).(pulumi.StringMapOutput)
}

// The type of this job, selected from the JobType enum.
func (o DataflowFlexTemplateJobOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DataflowFlexTemplateJob) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataflowFlexTemplateJobInput)(nil)).Elem(), &DataflowFlexTemplateJob{})
	pulumi.RegisterOutputType(DataflowFlexTemplateJobOutput{})
}
