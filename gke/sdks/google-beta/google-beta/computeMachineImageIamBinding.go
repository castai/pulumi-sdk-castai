// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeMachineImageIamBinding struct {
	pulumi.CustomResourceState

	ComputeMachineImageIamBindingId pulumi.StringOutput                             `pulumi:"computeMachineImageIamBindingId"`
	Condition                       ComputeMachineImageIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                            pulumi.StringOutput                             `pulumi:"etag"`
	MachineImage                    pulumi.StringOutput                             `pulumi:"machineImage"`
	Members                         pulumi.StringArrayOutput                        `pulumi:"members"`
	Project                         pulumi.StringOutput                             `pulumi:"project"`
	Role                            pulumi.StringOutput                             `pulumi:"role"`
}

// NewComputeMachineImageIamBinding registers a new resource with the given unique name, arguments, and options.
func NewComputeMachineImageIamBinding(ctx *pulumi.Context,
	name string, args *ComputeMachineImageIamBindingArgs, opts ...pulumi.ResourceOption) (*ComputeMachineImageIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MachineImage == nil {
		return nil, errors.New("invalid value for required argument 'MachineImage'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeMachineImageIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/computeMachineImageIamBinding:ComputeMachineImageIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeMachineImageIamBinding gets an existing ComputeMachineImageIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeMachineImageIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeMachineImageIamBindingState, opts ...pulumi.ResourceOption) (*ComputeMachineImageIamBinding, error) {
	var resource ComputeMachineImageIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeMachineImageIamBinding:ComputeMachineImageIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeMachineImageIamBinding resources.
type computeMachineImageIamBindingState struct {
	ComputeMachineImageIamBindingId *string                                 `pulumi:"computeMachineImageIamBindingId"`
	Condition                       *ComputeMachineImageIamBindingCondition `pulumi:"condition"`
	Etag                            *string                                 `pulumi:"etag"`
	MachineImage                    *string                                 `pulumi:"machineImage"`
	Members                         []string                                `pulumi:"members"`
	Project                         *string                                 `pulumi:"project"`
	Role                            *string                                 `pulumi:"role"`
}

type ComputeMachineImageIamBindingState struct {
	ComputeMachineImageIamBindingId pulumi.StringPtrInput
	Condition                       ComputeMachineImageIamBindingConditionPtrInput
	Etag                            pulumi.StringPtrInput
	MachineImage                    pulumi.StringPtrInput
	Members                         pulumi.StringArrayInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringPtrInput
}

func (ComputeMachineImageIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeMachineImageIamBindingState)(nil)).Elem()
}

type computeMachineImageIamBindingArgs struct {
	ComputeMachineImageIamBindingId *string                                 `pulumi:"computeMachineImageIamBindingId"`
	Condition                       *ComputeMachineImageIamBindingCondition `pulumi:"condition"`
	MachineImage                    string                                  `pulumi:"machineImage"`
	Members                         []string                                `pulumi:"members"`
	Project                         *string                                 `pulumi:"project"`
	Role                            string                                  `pulumi:"role"`
}

// The set of arguments for constructing a ComputeMachineImageIamBinding resource.
type ComputeMachineImageIamBindingArgs struct {
	ComputeMachineImageIamBindingId pulumi.StringPtrInput
	Condition                       ComputeMachineImageIamBindingConditionPtrInput
	MachineImage                    pulumi.StringInput
	Members                         pulumi.StringArrayInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringInput
}

func (ComputeMachineImageIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeMachineImageIamBindingArgs)(nil)).Elem()
}

type ComputeMachineImageIamBindingInput interface {
	pulumi.Input

	ToComputeMachineImageIamBindingOutput() ComputeMachineImageIamBindingOutput
	ToComputeMachineImageIamBindingOutputWithContext(ctx context.Context) ComputeMachineImageIamBindingOutput
}

func (*ComputeMachineImageIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeMachineImageIamBinding)(nil)).Elem()
}

func (i *ComputeMachineImageIamBinding) ToComputeMachineImageIamBindingOutput() ComputeMachineImageIamBindingOutput {
	return i.ToComputeMachineImageIamBindingOutputWithContext(context.Background())
}

func (i *ComputeMachineImageIamBinding) ToComputeMachineImageIamBindingOutputWithContext(ctx context.Context) ComputeMachineImageIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeMachineImageIamBindingOutput)
}

type ComputeMachineImageIamBindingOutput struct{ *pulumi.OutputState }

func (ComputeMachineImageIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeMachineImageIamBinding)(nil)).Elem()
}

func (o ComputeMachineImageIamBindingOutput) ToComputeMachineImageIamBindingOutput() ComputeMachineImageIamBindingOutput {
	return o
}

func (o ComputeMachineImageIamBindingOutput) ToComputeMachineImageIamBindingOutputWithContext(ctx context.Context) ComputeMachineImageIamBindingOutput {
	return o
}

func (o ComputeMachineImageIamBindingOutput) ComputeMachineImageIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImageIamBinding) pulumi.StringOutput { return v.ComputeMachineImageIamBindingId }).(pulumi.StringOutput)
}

func (o ComputeMachineImageIamBindingOutput) Condition() ComputeMachineImageIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *ComputeMachineImageIamBinding) ComputeMachineImageIamBindingConditionPtrOutput {
		return v.Condition
	}).(ComputeMachineImageIamBindingConditionPtrOutput)
}

func (o ComputeMachineImageIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImageIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeMachineImageIamBindingOutput) MachineImage() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImageIamBinding) pulumi.StringOutput { return v.MachineImage }).(pulumi.StringOutput)
}

func (o ComputeMachineImageIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeMachineImageIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o ComputeMachineImageIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImageIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeMachineImageIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeMachineImageIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeMachineImageIamBindingInput)(nil)).Elem(), &ComputeMachineImageIamBinding{})
	pulumi.RegisterOutputType(ComputeMachineImageIamBindingOutput{})
}
