// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApphubService struct {
	pulumi.CustomResourceState

	ApphubServiceId pulumi.StringOutput `pulumi:"apphubServiceId"`
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Consumer provided attributes.
	Attributes ApphubServiceAttributesPtrOutput `pulumi:"attributes"`
	// Output only. Create time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// User-defined description of a Service.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Immutable. The resource name of the original discovered service.
	DiscoveredService pulumi.StringOutput `pulumi:"discoveredService"`
	// User-defined name for the Service.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The resource name of a Service. Format:
	// "projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}"
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The Service identifier.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
	// Properties of an underlying cloud resource that can comprise a Service.
	ServiceProperties ApphubServiceServicePropertyArrayOutput `pulumi:"serviceProperties"`
	// Reference to an underlying networking resource that can comprise a Service.
	ServiceReferences ApphubServiceServiceReferenceArrayOutput `pulumi:"serviceReferences"`
	// Output only. Service state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
	State    pulumi.StringOutput            `pulumi:"state"`
	Timeouts ApphubServiceTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. A universally unique identifier (UUID) for the 'Service' in the UUID4 format.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. Update time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewApphubService registers a new resource with the given unique name, arguments, and options.
func NewApphubService(ctx *pulumi.Context,
	name string, args *ApphubServiceArgs, opts ...pulumi.ResourceOption) (*ApphubService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.DiscoveredService == nil {
		return nil, errors.New("invalid value for required argument 'DiscoveredService'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ApphubService
	err = ctx.RegisterPackageResource("google-beta:index/apphubService:ApphubService", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApphubService gets an existing ApphubService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApphubService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApphubServiceState, opts ...pulumi.ResourceOption) (*ApphubService, error) {
	var resource ApphubService
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/apphubService:ApphubService", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApphubService resources.
type apphubServiceState struct {
	ApphubServiceId *string `pulumi:"apphubServiceId"`
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId *string `pulumi:"applicationId"`
	// Consumer provided attributes.
	Attributes *ApphubServiceAttributes `pulumi:"attributes"`
	// Output only. Create time.
	CreateTime *string `pulumi:"createTime"`
	// User-defined description of a Service.
	Description *string `pulumi:"description"`
	// Immutable. The resource name of the original discovered service.
	DiscoveredService *string `pulumi:"discoveredService"`
	// User-defined name for the Service.
	DisplayName *string `pulumi:"displayName"`
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location *string `pulumi:"location"`
	// Identifier. The resource name of a Service. Format:
	// "projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}"
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The Service identifier.
	ServiceId *string `pulumi:"serviceId"`
	// Properties of an underlying cloud resource that can comprise a Service.
	ServiceProperties []ApphubServiceServiceProperty `pulumi:"serviceProperties"`
	// Reference to an underlying networking resource that can comprise a Service.
	ServiceReferences []ApphubServiceServiceReference `pulumi:"serviceReferences"`
	// Output only. Service state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
	State    *string                `pulumi:"state"`
	Timeouts *ApphubServiceTimeouts `pulumi:"timeouts"`
	// Output only. A universally unique identifier (UUID) for the 'Service' in the UUID4 format.
	Uid *string `pulumi:"uid"`
	// Output only. Update time.
	UpdateTime *string `pulumi:"updateTime"`
}

type ApphubServiceState struct {
	ApphubServiceId pulumi.StringPtrInput
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId pulumi.StringPtrInput
	// Consumer provided attributes.
	Attributes ApphubServiceAttributesPtrInput
	// Output only. Create time.
	CreateTime pulumi.StringPtrInput
	// User-defined description of a Service.
	Description pulumi.StringPtrInput
	// Immutable. The resource name of the original discovered service.
	DiscoveredService pulumi.StringPtrInput
	// User-defined name for the Service.
	DisplayName pulumi.StringPtrInput
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location pulumi.StringPtrInput
	// Identifier. The resource name of a Service. Format:
	// "projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}"
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The Service identifier.
	ServiceId pulumi.StringPtrInput
	// Properties of an underlying cloud resource that can comprise a Service.
	ServiceProperties ApphubServiceServicePropertyArrayInput
	// Reference to an underlying networking resource that can comprise a Service.
	ServiceReferences ApphubServiceServiceReferenceArrayInput
	// Output only. Service state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
	State    pulumi.StringPtrInput
	Timeouts ApphubServiceTimeoutsPtrInput
	// Output only. A universally unique identifier (UUID) for the 'Service' in the UUID4 format.
	Uid pulumi.StringPtrInput
	// Output only. Update time.
	UpdateTime pulumi.StringPtrInput
}

func (ApphubServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*apphubServiceState)(nil)).Elem()
}

type apphubServiceArgs struct {
	ApphubServiceId *string `pulumi:"apphubServiceId"`
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId string `pulumi:"applicationId"`
	// Consumer provided attributes.
	Attributes *ApphubServiceAttributes `pulumi:"attributes"`
	// User-defined description of a Service.
	Description *string `pulumi:"description"`
	// Immutable. The resource name of the original discovered service.
	DiscoveredService string `pulumi:"discoveredService"`
	// User-defined name for the Service.
	DisplayName *string `pulumi:"displayName"`
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// The Service identifier.
	ServiceId string                 `pulumi:"serviceId"`
	Timeouts  *ApphubServiceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ApphubService resource.
type ApphubServiceArgs struct {
	ApphubServiceId pulumi.StringPtrInput
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	ApplicationId pulumi.StringInput
	// Consumer provided attributes.
	Attributes ApphubServiceAttributesPtrInput
	// User-defined description of a Service.
	Description pulumi.StringPtrInput
	// Immutable. The resource name of the original discovered service.
	DiscoveredService pulumi.StringInput
	// User-defined name for the Service.
	DisplayName pulumi.StringPtrInput
	// Part of 'parent'. Full resource name of a parent Application. Example:
	// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
	Location pulumi.StringInput
	Project  pulumi.StringPtrInput
	// The Service identifier.
	ServiceId pulumi.StringInput
	Timeouts  ApphubServiceTimeoutsPtrInput
}

func (ApphubServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apphubServiceArgs)(nil)).Elem()
}

type ApphubServiceInput interface {
	pulumi.Input

	ToApphubServiceOutput() ApphubServiceOutput
	ToApphubServiceOutputWithContext(ctx context.Context) ApphubServiceOutput
}

func (*ApphubService) ElementType() reflect.Type {
	return reflect.TypeOf((**ApphubService)(nil)).Elem()
}

func (i *ApphubService) ToApphubServiceOutput() ApphubServiceOutput {
	return i.ToApphubServiceOutputWithContext(context.Background())
}

func (i *ApphubService) ToApphubServiceOutputWithContext(ctx context.Context) ApphubServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApphubServiceOutput)
}

type ApphubServiceOutput struct{ *pulumi.OutputState }

func (ApphubServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApphubService)(nil)).Elem()
}

func (o ApphubServiceOutput) ToApphubServiceOutput() ApphubServiceOutput {
	return o
}

func (o ApphubServiceOutput) ToApphubServiceOutputWithContext(ctx context.Context) ApphubServiceOutput {
	return o
}

func (o ApphubServiceOutput) ApphubServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.ApphubServiceId }).(pulumi.StringOutput)
}

// Part of 'parent'. Full resource name of a parent Application. Example:
// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
func (o ApphubServiceOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Consumer provided attributes.
func (o ApphubServiceOutput) Attributes() ApphubServiceAttributesPtrOutput {
	return o.ApplyT(func(v *ApphubService) ApphubServiceAttributesPtrOutput { return v.Attributes }).(ApphubServiceAttributesPtrOutput)
}

// Output only. Create time.
func (o ApphubServiceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// User-defined description of a Service.
func (o ApphubServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Immutable. The resource name of the original discovered service.
func (o ApphubServiceOutput) DiscoveredService() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.DiscoveredService }).(pulumi.StringOutput)
}

// User-defined name for the Service.
func (o ApphubServiceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Part of 'parent'. Full resource name of a parent Application. Example:
// projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
func (o ApphubServiceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The resource name of a Service. Format:
// "projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}"
func (o ApphubServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ApphubServiceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The Service identifier.
func (o ApphubServiceOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

// Properties of an underlying cloud resource that can comprise a Service.
func (o ApphubServiceOutput) ServiceProperties() ApphubServiceServicePropertyArrayOutput {
	return o.ApplyT(func(v *ApphubService) ApphubServiceServicePropertyArrayOutput { return v.ServiceProperties }).(ApphubServiceServicePropertyArrayOutput)
}

// Reference to an underlying networking resource that can comprise a Service.
func (o ApphubServiceOutput) ServiceReferences() ApphubServiceServiceReferenceArrayOutput {
	return o.ApplyT(func(v *ApphubService) ApphubServiceServiceReferenceArrayOutput { return v.ServiceReferences }).(ApphubServiceServiceReferenceArrayOutput)
}

// Output only. Service state. Possible values: STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
func (o ApphubServiceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o ApphubServiceOutput) Timeouts() ApphubServiceTimeoutsPtrOutput {
	return o.ApplyT(func(v *ApphubService) ApphubServiceTimeoutsPtrOutput { return v.Timeouts }).(ApphubServiceTimeoutsPtrOutput)
}

// Output only. A universally unique identifier (UUID) for the 'Service' in the UUID4 format.
func (o ApphubServiceOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. Update time.
func (o ApphubServiceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApphubService) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApphubServiceInput)(nil)).Elem(), &ApphubService{})
	pulumi.RegisterOutputType(ApphubServiceOutput{})
}
