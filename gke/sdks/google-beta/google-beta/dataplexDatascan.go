// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexDatascan struct {
	pulumi.CustomResourceState

	// The time when the scan was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The data source for DataScan.
	Data DataplexDatascanDataOutput `pulumi:"data"`
	// DataProfileScan related setting.
	DataProfileSpec DataplexDatascanDataProfileSpecPtrOutput `pulumi:"dataProfileSpec"`
	// DataQualityScan related setting.
	DataQualitySpec DataplexDatascanDataQualitySpecPtrOutput `pulumi:"dataQualitySpec"`
	// DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a
	// number or a letter.
	DataScanId         pulumi.StringOutput `pulumi:"dataScanId"`
	DataplexDatascanId pulumi.StringOutput `pulumi:"dataplexDatascanId"`
	// Description of the scan.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User friendly display name.
	DisplayName     pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// DataScan execution settings.
	ExecutionSpec DataplexDatascanExecutionSpecOutput `pulumi:"executionSpec"`
	// Status of the data scan execution.
	ExecutionStatuses DataplexDatascanExecutionStatusArrayOutput `pulumi:"executionStatuses"`
	// User-defined labels for the scan. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location where the data scan should reside.
	Location pulumi.StringOutput `pulumi:"location"`
	// The relative resource name of the scan, of the form: projects/{project}/locations/{locationId}/dataScans/{datascan_id},
	// where project refers to a project_id or project_number and locationId refers to a GCP region.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Current state of the DataScan.
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput            `pulumi:"terraformLabels"`
	Timeouts        DataplexDatascanTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type of DataScan.
	Type pulumi.StringOutput `pulumi:"type"`
	// System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with
	// the same name.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time when the scan was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewDataplexDatascan registers a new resource with the given unique name, arguments, and options.
func NewDataplexDatascan(ctx *pulumi.Context,
	name string, args *DataplexDatascanArgs, opts ...pulumi.ResourceOption) (*DataplexDatascan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Data == nil {
		return nil, errors.New("invalid value for required argument 'Data'")
	}
	if args.DataScanId == nil {
		return nil, errors.New("invalid value for required argument 'DataScanId'")
	}
	if args.ExecutionSpec == nil {
		return nil, errors.New("invalid value for required argument 'ExecutionSpec'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexDatascan
	err = ctx.RegisterPackageResource("google-beta:index/dataplexDatascan:DataplexDatascan", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexDatascan gets an existing DataplexDatascan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexDatascan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexDatascanState, opts ...pulumi.ResourceOption) (*DataplexDatascan, error) {
	var resource DataplexDatascan
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexDatascan:DataplexDatascan", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexDatascan resources.
type dataplexDatascanState struct {
	// The time when the scan was created.
	CreateTime *string `pulumi:"createTime"`
	// The data source for DataScan.
	Data *DataplexDatascanData `pulumi:"data"`
	// DataProfileScan related setting.
	DataProfileSpec *DataplexDatascanDataProfileSpec `pulumi:"dataProfileSpec"`
	// DataQualityScan related setting.
	DataQualitySpec *DataplexDatascanDataQualitySpec `pulumi:"dataQualitySpec"`
	// DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a
	// number or a letter.
	DataScanId         *string `pulumi:"dataScanId"`
	DataplexDatascanId *string `pulumi:"dataplexDatascanId"`
	// Description of the scan.
	Description *string `pulumi:"description"`
	// User friendly display name.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// DataScan execution settings.
	ExecutionSpec *DataplexDatascanExecutionSpec `pulumi:"executionSpec"`
	// Status of the data scan execution.
	ExecutionStatuses []DataplexDatascanExecutionStatus `pulumi:"executionStatuses"`
	// User-defined labels for the scan. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the data scan should reside.
	Location *string `pulumi:"location"`
	// The relative resource name of the scan, of the form: projects/{project}/locations/{locationId}/dataScans/{datascan_id},
	// where project refers to a project_id or project_number and locationId refers to a GCP region.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Current state of the DataScan.
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string         `pulumi:"terraformLabels"`
	Timeouts        *DataplexDatascanTimeouts `pulumi:"timeouts"`
	// The type of DataScan.
	Type *string `pulumi:"type"`
	// System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with
	// the same name.
	Uid *string `pulumi:"uid"`
	// The time when the scan was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type DataplexDatascanState struct {
	// The time when the scan was created.
	CreateTime pulumi.StringPtrInput
	// The data source for DataScan.
	Data DataplexDatascanDataPtrInput
	// DataProfileScan related setting.
	DataProfileSpec DataplexDatascanDataProfileSpecPtrInput
	// DataQualityScan related setting.
	DataQualitySpec DataplexDatascanDataQualitySpecPtrInput
	// DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a
	// number or a letter.
	DataScanId         pulumi.StringPtrInput
	DataplexDatascanId pulumi.StringPtrInput
	// Description of the scan.
	Description pulumi.StringPtrInput
	// User friendly display name.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// DataScan execution settings.
	ExecutionSpec DataplexDatascanExecutionSpecPtrInput
	// Status of the data scan execution.
	ExecutionStatuses DataplexDatascanExecutionStatusArrayInput
	// User-defined labels for the scan. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The location where the data scan should reside.
	Location pulumi.StringPtrInput
	// The relative resource name of the scan, of the form: projects/{project}/locations/{locationId}/dataScans/{datascan_id},
	// where project refers to a project_id or project_number and locationId refers to a GCP region.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Current state of the DataScan.
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DataplexDatascanTimeoutsPtrInput
	// The type of DataScan.
	Type pulumi.StringPtrInput
	// System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with
	// the same name.
	Uid pulumi.StringPtrInput
	// The time when the scan was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (DataplexDatascanState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexDatascanState)(nil)).Elem()
}

type dataplexDatascanArgs struct {
	// The data source for DataScan.
	Data DataplexDatascanData `pulumi:"data"`
	// DataProfileScan related setting.
	DataProfileSpec *DataplexDatascanDataProfileSpec `pulumi:"dataProfileSpec"`
	// DataQualityScan related setting.
	DataQualitySpec *DataplexDatascanDataQualitySpec `pulumi:"dataQualitySpec"`
	// DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a
	// number or a letter.
	DataScanId         string  `pulumi:"dataScanId"`
	DataplexDatascanId *string `pulumi:"dataplexDatascanId"`
	// Description of the scan.
	Description *string `pulumi:"description"`
	// User friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// DataScan execution settings.
	ExecutionSpec DataplexDatascanExecutionSpec `pulumi:"executionSpec"`
	// User-defined labels for the scan. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the data scan should reside.
	Location string                    `pulumi:"location"`
	Project  *string                   `pulumi:"project"`
	Timeouts *DataplexDatascanTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DataplexDatascan resource.
type DataplexDatascanArgs struct {
	// The data source for DataScan.
	Data DataplexDatascanDataInput
	// DataProfileScan related setting.
	DataProfileSpec DataplexDatascanDataProfileSpecPtrInput
	// DataQualityScan related setting.
	DataQualitySpec DataplexDatascanDataQualitySpecPtrInput
	// DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a
	// number or a letter.
	DataScanId         pulumi.StringInput
	DataplexDatascanId pulumi.StringPtrInput
	// Description of the scan.
	Description pulumi.StringPtrInput
	// User friendly display name.
	DisplayName pulumi.StringPtrInput
	// DataScan execution settings.
	ExecutionSpec DataplexDatascanExecutionSpecInput
	// User-defined labels for the scan. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The location where the data scan should reside.
	Location pulumi.StringInput
	Project  pulumi.StringPtrInput
	Timeouts DataplexDatascanTimeoutsPtrInput
}

func (DataplexDatascanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexDatascanArgs)(nil)).Elem()
}

type DataplexDatascanInput interface {
	pulumi.Input

	ToDataplexDatascanOutput() DataplexDatascanOutput
	ToDataplexDatascanOutputWithContext(ctx context.Context) DataplexDatascanOutput
}

func (*DataplexDatascan) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexDatascan)(nil)).Elem()
}

func (i *DataplexDatascan) ToDataplexDatascanOutput() DataplexDatascanOutput {
	return i.ToDataplexDatascanOutputWithContext(context.Background())
}

func (i *DataplexDatascan) ToDataplexDatascanOutputWithContext(ctx context.Context) DataplexDatascanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexDatascanOutput)
}

type DataplexDatascanOutput struct{ *pulumi.OutputState }

func (DataplexDatascanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexDatascan)(nil)).Elem()
}

func (o DataplexDatascanOutput) ToDataplexDatascanOutput() DataplexDatascanOutput {
	return o
}

func (o DataplexDatascanOutput) ToDataplexDatascanOutputWithContext(ctx context.Context) DataplexDatascanOutput {
	return o
}

// The time when the scan was created.
func (o DataplexDatascanOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The data source for DataScan.
func (o DataplexDatascanOutput) Data() DataplexDatascanDataOutput {
	return o.ApplyT(func(v *DataplexDatascan) DataplexDatascanDataOutput { return v.Data }).(DataplexDatascanDataOutput)
}

// DataProfileScan related setting.
func (o DataplexDatascanOutput) DataProfileSpec() DataplexDatascanDataProfileSpecPtrOutput {
	return o.ApplyT(func(v *DataplexDatascan) DataplexDatascanDataProfileSpecPtrOutput { return v.DataProfileSpec }).(DataplexDatascanDataProfileSpecPtrOutput)
}

// DataQualityScan related setting.
func (o DataplexDatascanOutput) DataQualitySpec() DataplexDatascanDataQualitySpecPtrOutput {
	return o.ApplyT(func(v *DataplexDatascan) DataplexDatascanDataQualitySpecPtrOutput { return v.DataQualitySpec }).(DataplexDatascanDataQualitySpecPtrOutput)
}

// DataScan identifier. Must contain only lowercase letters, numbers and hyphens. Must start with a letter. Must end with a
// number or a letter.
func (o DataplexDatascanOutput) DataScanId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.DataScanId }).(pulumi.StringOutput)
}

func (o DataplexDatascanOutput) DataplexDatascanId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.DataplexDatascanId }).(pulumi.StringOutput)
}

// Description of the scan.
func (o DataplexDatascanOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User friendly display name.
func (o DataplexDatascanOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o DataplexDatascanOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// DataScan execution settings.
func (o DataplexDatascanOutput) ExecutionSpec() DataplexDatascanExecutionSpecOutput {
	return o.ApplyT(func(v *DataplexDatascan) DataplexDatascanExecutionSpecOutput { return v.ExecutionSpec }).(DataplexDatascanExecutionSpecOutput)
}

// Status of the data scan execution.
func (o DataplexDatascanOutput) ExecutionStatuses() DataplexDatascanExecutionStatusArrayOutput {
	return o.ApplyT(func(v *DataplexDatascan) DataplexDatascanExecutionStatusArrayOutput { return v.ExecutionStatuses }).(DataplexDatascanExecutionStatusArrayOutput)
}

// User-defined labels for the scan. A list of key->value pairs. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o DataplexDatascanOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location where the data scan should reside.
func (o DataplexDatascanOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The relative resource name of the scan, of the form: projects/{project}/locations/{locationId}/dataScans/{datascan_id},
// where project refers to a project_id or project_number and locationId refers to a GCP region.
func (o DataplexDatascanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DataplexDatascanOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Current state of the DataScan.
func (o DataplexDatascanOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DataplexDatascanOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DataplexDatascanOutput) Timeouts() DataplexDatascanTimeoutsPtrOutput {
	return o.ApplyT(func(v *DataplexDatascan) DataplexDatascanTimeoutsPtrOutput { return v.Timeouts }).(DataplexDatascanTimeoutsPtrOutput)
}

// The type of DataScan.
func (o DataplexDatascanOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// System generated globally unique ID for the scan. This ID will be different if the scan is deleted and re-created with
// the same name.
func (o DataplexDatascanOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time when the scan was last updated.
func (o DataplexDatascanOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexDatascan) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexDatascanInput)(nil)).Elem(), &DataplexDatascan{})
	pulumi.RegisterOutputType(DataplexDatascanOutput{})
}
