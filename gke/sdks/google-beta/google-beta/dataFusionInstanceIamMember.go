// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataFusionInstanceIamMember struct {
	pulumi.CustomResourceState

	Condition                     DataFusionInstanceIamMemberConditionPtrOutput `pulumi:"condition"`
	DataFusionInstanceIamMemberId pulumi.StringOutput                           `pulumi:"dataFusionInstanceIamMemberId"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	Member                        pulumi.StringOutput                           `pulumi:"member"`
	Name                          pulumi.StringOutput                           `pulumi:"name"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	Region                        pulumi.StringOutput                           `pulumi:"region"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
}

// NewDataFusionInstanceIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataFusionInstanceIamMember(ctx *pulumi.Context,
	name string, args *DataFusionInstanceIamMemberArgs, opts ...pulumi.ResourceOption) (*DataFusionInstanceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataFusionInstanceIamMember
	err = ctx.RegisterPackageResource("google-beta:index/dataFusionInstanceIamMember:DataFusionInstanceIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataFusionInstanceIamMember gets an existing DataFusionInstanceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataFusionInstanceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataFusionInstanceIamMemberState, opts ...pulumi.ResourceOption) (*DataFusionInstanceIamMember, error) {
	var resource DataFusionInstanceIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataFusionInstanceIamMember:DataFusionInstanceIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataFusionInstanceIamMember resources.
type dataFusionInstanceIamMemberState struct {
	Condition                     *DataFusionInstanceIamMemberCondition `pulumi:"condition"`
	DataFusionInstanceIamMemberId *string                               `pulumi:"dataFusionInstanceIamMemberId"`
	Etag                          *string                               `pulumi:"etag"`
	Member                        *string                               `pulumi:"member"`
	Name                          *string                               `pulumi:"name"`
	Project                       *string                               `pulumi:"project"`
	Region                        *string                               `pulumi:"region"`
	Role                          *string                               `pulumi:"role"`
}

type DataFusionInstanceIamMemberState struct {
	Condition                     DataFusionInstanceIamMemberConditionPtrInput
	DataFusionInstanceIamMemberId pulumi.StringPtrInput
	Etag                          pulumi.StringPtrInput
	Member                        pulumi.StringPtrInput
	Name                          pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Region                        pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
}

func (DataFusionInstanceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataFusionInstanceIamMemberState)(nil)).Elem()
}

type dataFusionInstanceIamMemberArgs struct {
	Condition                     *DataFusionInstanceIamMemberCondition `pulumi:"condition"`
	DataFusionInstanceIamMemberId *string                               `pulumi:"dataFusionInstanceIamMemberId"`
	Member                        string                                `pulumi:"member"`
	Name                          *string                               `pulumi:"name"`
	Project                       *string                               `pulumi:"project"`
	Region                        *string                               `pulumi:"region"`
	Role                          string                                `pulumi:"role"`
}

// The set of arguments for constructing a DataFusionInstanceIamMember resource.
type DataFusionInstanceIamMemberArgs struct {
	Condition                     DataFusionInstanceIamMemberConditionPtrInput
	DataFusionInstanceIamMemberId pulumi.StringPtrInput
	Member                        pulumi.StringInput
	Name                          pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Region                        pulumi.StringPtrInput
	Role                          pulumi.StringInput
}

func (DataFusionInstanceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataFusionInstanceIamMemberArgs)(nil)).Elem()
}

type DataFusionInstanceIamMemberInput interface {
	pulumi.Input

	ToDataFusionInstanceIamMemberOutput() DataFusionInstanceIamMemberOutput
	ToDataFusionInstanceIamMemberOutputWithContext(ctx context.Context) DataFusionInstanceIamMemberOutput
}

func (*DataFusionInstanceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFusionInstanceIamMember)(nil)).Elem()
}

func (i *DataFusionInstanceIamMember) ToDataFusionInstanceIamMemberOutput() DataFusionInstanceIamMemberOutput {
	return i.ToDataFusionInstanceIamMemberOutputWithContext(context.Background())
}

func (i *DataFusionInstanceIamMember) ToDataFusionInstanceIamMemberOutputWithContext(ctx context.Context) DataFusionInstanceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFusionInstanceIamMemberOutput)
}

type DataFusionInstanceIamMemberOutput struct{ *pulumi.OutputState }

func (DataFusionInstanceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFusionInstanceIamMember)(nil)).Elem()
}

func (o DataFusionInstanceIamMemberOutput) ToDataFusionInstanceIamMemberOutput() DataFusionInstanceIamMemberOutput {
	return o
}

func (o DataFusionInstanceIamMemberOutput) ToDataFusionInstanceIamMemberOutputWithContext(ctx context.Context) DataFusionInstanceIamMemberOutput {
	return o
}

func (o DataFusionInstanceIamMemberOutput) Condition() DataFusionInstanceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamMember) DataFusionInstanceIamMemberConditionPtrOutput { return v.Condition }).(DataFusionInstanceIamMemberConditionPtrOutput)
}

func (o DataFusionInstanceIamMemberOutput) DataFusionInstanceIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamMember) pulumi.StringOutput { return v.DataFusionInstanceIamMemberId }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataFusionInstanceIamMemberInput)(nil)).Elem(), &DataFusionInstanceIamMember{})
	pulumi.RegisterOutputType(DataFusionInstanceIamMemberOutput{})
}
