// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DatabaseMigrationServiceMigrationJob struct {
	pulumi.CustomResourceState

	// Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to
	// nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
	CreateTime                             pulumi.StringOutput `pulumi:"createTime"`
	DatabaseMigrationServiceMigrationJobId pulumi.StringOutput `pulumi:"databaseMigrationServiceMigrationJobId"`
	// The name of the destination connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
	Destination pulumi.StringOutput `pulumi:"destination"`
	// The migration job display name.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The initial dump flags.
	DumpFlags DatabaseMigrationServiceMigrationJobDumpFlagsPtrOutput `pulumi:"dumpFlags"`
	// The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the
	// "dump_flags" field are mutually exclusive.
	DumpPath pulumi.StringPtrOutput `pulumi:"dumpPath"`
	// The type of the data dump. Supported for MySQL to CloudSQL for MySQL migrations only. Possible values: ["LOGICAL",
	// "PHYSICAL"]
	DumpType        pulumi.StringPtrOutput `pulumi:"dumpType"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Output only. The error details in case of state FAILED.
	Errors DatabaseMigrationServiceMigrationJobErrorArrayOutput `pulumi:"errors"`
	// The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location where the migration job should reside.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The ID of the migration job.
	MigrationJobId pulumi.StringOutput `pulumi:"migrationJobId"`
	// The name of this migration job resource in the form of
	// projects/{project}/locations/{location}/migrationJobs/{migrationJob}.
	Name pulumi.StringOutput `pulumi:"name"`
	// Data dump parallelism settings used by the migration.
	PerformanceConfig DatabaseMigrationServiceMigrationJobPerformanceConfigPtrOutput `pulumi:"performanceConfig"`
	// The current migration job phase.
	Phase   pulumi.StringOutput `pulumi:"phase"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The details of the VPC network that the source database is located in.
	ReverseSshConnectivity DatabaseMigrationServiceMigrationJobReverseSshConnectivityPtrOutput `pulumi:"reverseSshConnectivity"`
	// The name of the source connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
	Source pulumi.StringOutput `pulumi:"source"`
	// The current migration job state.
	State pulumi.StringOutput `pulumi:"state"`
	// If set to an empty object ('{}'), the source database will allow incoming connections from the public IP of the
	// destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud
	// SQL APIs.
	StaticIpConnectivity DatabaseMigrationServiceMigrationJobStaticIpConnectivityPtrOutput `pulumi:"staticIpConnectivity"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                                `pulumi:"terraformLabels"`
	Timeouts        DatabaseMigrationServiceMigrationJobTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type of the migration job. Possible values: ["ONE_TIME", "CONTINUOUS"]
	Type pulumi.StringOutput `pulumi:"type"`
	// The details of the VPC network that the source database is located in.
	VpcPeeringConnectivity DatabaseMigrationServiceMigrationJobVpcPeeringConnectivityPtrOutput `pulumi:"vpcPeeringConnectivity"`
}

// NewDatabaseMigrationServiceMigrationJob registers a new resource with the given unique name, arguments, and options.
func NewDatabaseMigrationServiceMigrationJob(ctx *pulumi.Context,
	name string, args *DatabaseMigrationServiceMigrationJobArgs, opts ...pulumi.ResourceOption) (*DatabaseMigrationServiceMigrationJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.MigrationJobId == nil {
		return nil, errors.New("invalid value for required argument 'MigrationJobId'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DatabaseMigrationServiceMigrationJob
	err = ctx.RegisterPackageResource("google-beta:index/databaseMigrationServiceMigrationJob:DatabaseMigrationServiceMigrationJob", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseMigrationServiceMigrationJob gets an existing DatabaseMigrationServiceMigrationJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseMigrationServiceMigrationJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseMigrationServiceMigrationJobState, opts ...pulumi.ResourceOption) (*DatabaseMigrationServiceMigrationJob, error) {
	var resource DatabaseMigrationServiceMigrationJob
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/databaseMigrationServiceMigrationJob:DatabaseMigrationServiceMigrationJob", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseMigrationServiceMigrationJob resources.
type databaseMigrationServiceMigrationJobState struct {
	// Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to
	// nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
	CreateTime                             *string `pulumi:"createTime"`
	DatabaseMigrationServiceMigrationJobId *string `pulumi:"databaseMigrationServiceMigrationJobId"`
	// The name of the destination connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
	Destination *string `pulumi:"destination"`
	// The migration job display name.
	DisplayName *string `pulumi:"displayName"`
	// The initial dump flags.
	DumpFlags *DatabaseMigrationServiceMigrationJobDumpFlags `pulumi:"dumpFlags"`
	// The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the
	// "dump_flags" field are mutually exclusive.
	DumpPath *string `pulumi:"dumpPath"`
	// The type of the data dump. Supported for MySQL to CloudSQL for MySQL migrations only. Possible values: ["LOGICAL",
	// "PHYSICAL"]
	DumpType        *string           `pulumi:"dumpType"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Output only. The error details in case of state FAILED.
	Errors []DatabaseMigrationServiceMigrationJobError `pulumi:"errors"`
	// The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the migration job should reside.
	Location *string `pulumi:"location"`
	// The ID of the migration job.
	MigrationJobId *string `pulumi:"migrationJobId"`
	// The name of this migration job resource in the form of
	// projects/{project}/locations/{location}/migrationJobs/{migrationJob}.
	Name *string `pulumi:"name"`
	// Data dump parallelism settings used by the migration.
	PerformanceConfig *DatabaseMigrationServiceMigrationJobPerformanceConfig `pulumi:"performanceConfig"`
	// The current migration job phase.
	Phase   *string `pulumi:"phase"`
	Project *string `pulumi:"project"`
	// The details of the VPC network that the source database is located in.
	ReverseSshConnectivity *DatabaseMigrationServiceMigrationJobReverseSshConnectivity `pulumi:"reverseSshConnectivity"`
	// The name of the source connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
	Source *string `pulumi:"source"`
	// The current migration job state.
	State *string `pulumi:"state"`
	// If set to an empty object ('{}'), the source database will allow incoming connections from the public IP of the
	// destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud
	// SQL APIs.
	StaticIpConnectivity *DatabaseMigrationServiceMigrationJobStaticIpConnectivity `pulumi:"staticIpConnectivity"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                             `pulumi:"terraformLabels"`
	Timeouts        *DatabaseMigrationServiceMigrationJobTimeouts `pulumi:"timeouts"`
	// The type of the migration job. Possible values: ["ONE_TIME", "CONTINUOUS"]
	Type *string `pulumi:"type"`
	// The details of the VPC network that the source database is located in.
	VpcPeeringConnectivity *DatabaseMigrationServiceMigrationJobVpcPeeringConnectivity `pulumi:"vpcPeeringConnectivity"`
}

type DatabaseMigrationServiceMigrationJobState struct {
	// Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to
	// nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
	CreateTime                             pulumi.StringPtrInput
	DatabaseMigrationServiceMigrationJobId pulumi.StringPtrInput
	// The name of the destination connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
	Destination pulumi.StringPtrInput
	// The migration job display name.
	DisplayName pulumi.StringPtrInput
	// The initial dump flags.
	DumpFlags DatabaseMigrationServiceMigrationJobDumpFlagsPtrInput
	// The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the
	// "dump_flags" field are mutually exclusive.
	DumpPath pulumi.StringPtrInput
	// The type of the data dump. Supported for MySQL to CloudSQL for MySQL migrations only. Possible values: ["LOGICAL",
	// "PHYSICAL"]
	DumpType        pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Output only. The error details in case of state FAILED.
	Errors DatabaseMigrationServiceMigrationJobErrorArrayInput
	// The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location where the migration job should reside.
	Location pulumi.StringPtrInput
	// The ID of the migration job.
	MigrationJobId pulumi.StringPtrInput
	// The name of this migration job resource in the form of
	// projects/{project}/locations/{location}/migrationJobs/{migrationJob}.
	Name pulumi.StringPtrInput
	// Data dump parallelism settings used by the migration.
	PerformanceConfig DatabaseMigrationServiceMigrationJobPerformanceConfigPtrInput
	// The current migration job phase.
	Phase   pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The details of the VPC network that the source database is located in.
	ReverseSshConnectivity DatabaseMigrationServiceMigrationJobReverseSshConnectivityPtrInput
	// The name of the source connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
	Source pulumi.StringPtrInput
	// The current migration job state.
	State pulumi.StringPtrInput
	// If set to an empty object ('{}'), the source database will allow incoming connections from the public IP of the
	// destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud
	// SQL APIs.
	StaticIpConnectivity DatabaseMigrationServiceMigrationJobStaticIpConnectivityPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DatabaseMigrationServiceMigrationJobTimeoutsPtrInput
	// The type of the migration job. Possible values: ["ONE_TIME", "CONTINUOUS"]
	Type pulumi.StringPtrInput
	// The details of the VPC network that the source database is located in.
	VpcPeeringConnectivity DatabaseMigrationServiceMigrationJobVpcPeeringConnectivityPtrInput
}

func (DatabaseMigrationServiceMigrationJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationServiceMigrationJobState)(nil)).Elem()
}

type databaseMigrationServiceMigrationJobArgs struct {
	DatabaseMigrationServiceMigrationJobId *string `pulumi:"databaseMigrationServiceMigrationJobId"`
	// The name of the destination connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
	Destination string `pulumi:"destination"`
	// The migration job display name.
	DisplayName *string `pulumi:"displayName"`
	// The initial dump flags.
	DumpFlags *DatabaseMigrationServiceMigrationJobDumpFlags `pulumi:"dumpFlags"`
	// The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the
	// "dump_flags" field are mutually exclusive.
	DumpPath *string `pulumi:"dumpPath"`
	// The type of the data dump. Supported for MySQL to CloudSQL for MySQL migrations only. Possible values: ["LOGICAL",
	// "PHYSICAL"]
	DumpType *string `pulumi:"dumpType"`
	// The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the migration job should reside.
	Location *string `pulumi:"location"`
	// The ID of the migration job.
	MigrationJobId string `pulumi:"migrationJobId"`
	// Data dump parallelism settings used by the migration.
	PerformanceConfig *DatabaseMigrationServiceMigrationJobPerformanceConfig `pulumi:"performanceConfig"`
	Project           *string                                                `pulumi:"project"`
	// The details of the VPC network that the source database is located in.
	ReverseSshConnectivity *DatabaseMigrationServiceMigrationJobReverseSshConnectivity `pulumi:"reverseSshConnectivity"`
	// The name of the source connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
	Source string `pulumi:"source"`
	// If set to an empty object ('{}'), the source database will allow incoming connections from the public IP of the
	// destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud
	// SQL APIs.
	StaticIpConnectivity *DatabaseMigrationServiceMigrationJobStaticIpConnectivity `pulumi:"staticIpConnectivity"`
	Timeouts             *DatabaseMigrationServiceMigrationJobTimeouts             `pulumi:"timeouts"`
	// The type of the migration job. Possible values: ["ONE_TIME", "CONTINUOUS"]
	Type string `pulumi:"type"`
	// The details of the VPC network that the source database is located in.
	VpcPeeringConnectivity *DatabaseMigrationServiceMigrationJobVpcPeeringConnectivity `pulumi:"vpcPeeringConnectivity"`
}

// The set of arguments for constructing a DatabaseMigrationServiceMigrationJob resource.
type DatabaseMigrationServiceMigrationJobArgs struct {
	DatabaseMigrationServiceMigrationJobId pulumi.StringPtrInput
	// The name of the destination connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
	Destination pulumi.StringInput
	// The migration job display name.
	DisplayName pulumi.StringPtrInput
	// The initial dump flags.
	DumpFlags DatabaseMigrationServiceMigrationJobDumpFlagsPtrInput
	// The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the
	// "dump_flags" field are mutually exclusive.
	DumpPath pulumi.StringPtrInput
	// The type of the data dump. Supported for MySQL to CloudSQL for MySQL migrations only. Possible values: ["LOGICAL",
	// "PHYSICAL"]
	DumpType pulumi.StringPtrInput
	// The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location where the migration job should reside.
	Location pulumi.StringPtrInput
	// The ID of the migration job.
	MigrationJobId pulumi.StringInput
	// Data dump parallelism settings used by the migration.
	PerformanceConfig DatabaseMigrationServiceMigrationJobPerformanceConfigPtrInput
	Project           pulumi.StringPtrInput
	// The details of the VPC network that the source database is located in.
	ReverseSshConnectivity DatabaseMigrationServiceMigrationJobReverseSshConnectivityPtrInput
	// The name of the source connection profile resource in the form of
	// projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
	Source pulumi.StringInput
	// If set to an empty object ('{}'), the source database will allow incoming connections from the public IP of the
	// destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud
	// SQL APIs.
	StaticIpConnectivity DatabaseMigrationServiceMigrationJobStaticIpConnectivityPtrInput
	Timeouts             DatabaseMigrationServiceMigrationJobTimeoutsPtrInput
	// The type of the migration job. Possible values: ["ONE_TIME", "CONTINUOUS"]
	Type pulumi.StringInput
	// The details of the VPC network that the source database is located in.
	VpcPeeringConnectivity DatabaseMigrationServiceMigrationJobVpcPeeringConnectivityPtrInput
}

func (DatabaseMigrationServiceMigrationJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationServiceMigrationJobArgs)(nil)).Elem()
}

type DatabaseMigrationServiceMigrationJobInput interface {
	pulumi.Input

	ToDatabaseMigrationServiceMigrationJobOutput() DatabaseMigrationServiceMigrationJobOutput
	ToDatabaseMigrationServiceMigrationJobOutputWithContext(ctx context.Context) DatabaseMigrationServiceMigrationJobOutput
}

func (*DatabaseMigrationServiceMigrationJob) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationServiceMigrationJob)(nil)).Elem()
}

func (i *DatabaseMigrationServiceMigrationJob) ToDatabaseMigrationServiceMigrationJobOutput() DatabaseMigrationServiceMigrationJobOutput {
	return i.ToDatabaseMigrationServiceMigrationJobOutputWithContext(context.Background())
}

func (i *DatabaseMigrationServiceMigrationJob) ToDatabaseMigrationServiceMigrationJobOutputWithContext(ctx context.Context) DatabaseMigrationServiceMigrationJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationServiceMigrationJobOutput)
}

type DatabaseMigrationServiceMigrationJobOutput struct{ *pulumi.OutputState }

func (DatabaseMigrationServiceMigrationJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationServiceMigrationJob)(nil)).Elem()
}

func (o DatabaseMigrationServiceMigrationJobOutput) ToDatabaseMigrationServiceMigrationJobOutput() DatabaseMigrationServiceMigrationJobOutput {
	return o
}

func (o DatabaseMigrationServiceMigrationJobOutput) ToDatabaseMigrationServiceMigrationJobOutputWithContext(ctx context.Context) DatabaseMigrationServiceMigrationJobOutput {
	return o
}

// Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC 'Zulu' format, accurate to
// nanoseconds. Example: '2014-10-02T15:01:23.045123456Z'.
func (o DatabaseMigrationServiceMigrationJobOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o DatabaseMigrationServiceMigrationJobOutput) DatabaseMigrationServiceMigrationJobId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput {
		return v.DatabaseMigrationServiceMigrationJobId
	}).(pulumi.StringOutput)
}

// The name of the destination connection profile resource in the form of
// projects/{project}/locations/{location}/connectionProfiles/{destinationConnectionProfile}.
func (o DatabaseMigrationServiceMigrationJobOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

// The migration job display name.
func (o DatabaseMigrationServiceMigrationJobOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The initial dump flags.
func (o DatabaseMigrationServiceMigrationJobOutput) DumpFlags() DatabaseMigrationServiceMigrationJobDumpFlagsPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) DatabaseMigrationServiceMigrationJobDumpFlagsPtrOutput {
		return v.DumpFlags
	}).(DatabaseMigrationServiceMigrationJobDumpFlagsPtrOutput)
}

// The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the
// "dump_flags" field are mutually exclusive.
func (o DatabaseMigrationServiceMigrationJobOutput) DumpPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringPtrOutput { return v.DumpPath }).(pulumi.StringPtrOutput)
}

// The type of the data dump. Supported for MySQL to CloudSQL for MySQL migrations only. Possible values: ["LOGICAL",
// "PHYSICAL"]
func (o DatabaseMigrationServiceMigrationJobOutput) DumpType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringPtrOutput { return v.DumpType }).(pulumi.StringPtrOutput)
}

func (o DatabaseMigrationServiceMigrationJobOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Output only. The error details in case of state FAILED.
func (o DatabaseMigrationServiceMigrationJobOutput) Errors() DatabaseMigrationServiceMigrationJobErrorArrayOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) DatabaseMigrationServiceMigrationJobErrorArrayOutput {
		return v.Errors
	}).(DatabaseMigrationServiceMigrationJobErrorArrayOutput)
}

// The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
// to the field 'effective_labels' for all of the labels present on the resource.
func (o DatabaseMigrationServiceMigrationJobOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location where the migration job should reside.
func (o DatabaseMigrationServiceMigrationJobOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The ID of the migration job.
func (o DatabaseMigrationServiceMigrationJobOutput) MigrationJobId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput { return v.MigrationJobId }).(pulumi.StringOutput)
}

// The name of this migration job resource in the form of
// projects/{project}/locations/{location}/migrationJobs/{migrationJob}.
func (o DatabaseMigrationServiceMigrationJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Data dump parallelism settings used by the migration.
func (o DatabaseMigrationServiceMigrationJobOutput) PerformanceConfig() DatabaseMigrationServiceMigrationJobPerformanceConfigPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) DatabaseMigrationServiceMigrationJobPerformanceConfigPtrOutput {
		return v.PerformanceConfig
	}).(DatabaseMigrationServiceMigrationJobPerformanceConfigPtrOutput)
}

// The current migration job phase.
func (o DatabaseMigrationServiceMigrationJobOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput { return v.Phase }).(pulumi.StringOutput)
}

func (o DatabaseMigrationServiceMigrationJobOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The details of the VPC network that the source database is located in.
func (o DatabaseMigrationServiceMigrationJobOutput) ReverseSshConnectivity() DatabaseMigrationServiceMigrationJobReverseSshConnectivityPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) DatabaseMigrationServiceMigrationJobReverseSshConnectivityPtrOutput {
		return v.ReverseSshConnectivity
	}).(DatabaseMigrationServiceMigrationJobReverseSshConnectivityPtrOutput)
}

// The name of the source connection profile resource in the form of
// projects/{project}/locations/{location}/connectionProfiles/{sourceConnectionProfile}.
func (o DatabaseMigrationServiceMigrationJobOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// The current migration job state.
func (o DatabaseMigrationServiceMigrationJobOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// If set to an empty object ('{}'), the source database will allow incoming connections from the public IP of the
// destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud
// SQL APIs.
func (o DatabaseMigrationServiceMigrationJobOutput) StaticIpConnectivity() DatabaseMigrationServiceMigrationJobStaticIpConnectivityPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) DatabaseMigrationServiceMigrationJobStaticIpConnectivityPtrOutput {
		return v.StaticIpConnectivity
	}).(DatabaseMigrationServiceMigrationJobStaticIpConnectivityPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DatabaseMigrationServiceMigrationJobOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DatabaseMigrationServiceMigrationJobOutput) Timeouts() DatabaseMigrationServiceMigrationJobTimeoutsPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) DatabaseMigrationServiceMigrationJobTimeoutsPtrOutput {
		return v.Timeouts
	}).(DatabaseMigrationServiceMigrationJobTimeoutsPtrOutput)
}

// The type of the migration job. Possible values: ["ONE_TIME", "CONTINUOUS"]
func (o DatabaseMigrationServiceMigrationJobOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The details of the VPC network that the source database is located in.
func (o DatabaseMigrationServiceMigrationJobOutput) VpcPeeringConnectivity() DatabaseMigrationServiceMigrationJobVpcPeeringConnectivityPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServiceMigrationJob) DatabaseMigrationServiceMigrationJobVpcPeeringConnectivityPtrOutput {
		return v.VpcPeeringConnectivity
	}).(DatabaseMigrationServiceMigrationJobVpcPeeringConnectivityPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseMigrationServiceMigrationJobInput)(nil)).Elem(), &DatabaseMigrationServiceMigrationJob{})
	pulumi.RegisterOutputType(DatabaseMigrationServiceMigrationJobOutput{})
}
