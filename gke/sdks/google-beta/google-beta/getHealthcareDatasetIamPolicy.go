// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupHealthcareDatasetIamPolicy(ctx *pulumi.Context, args *LookupHealthcareDatasetIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupHealthcareDatasetIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupHealthcareDatasetIamPolicyResult
	err = ctx.InvokePackage("google-beta:index/getHealthcareDatasetIamPolicy:getHealthcareDatasetIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHealthcareDatasetIamPolicy.
type LookupHealthcareDatasetIamPolicyArgs struct {
	DatasetId string  `pulumi:"datasetId"`
	Id        *string `pulumi:"id"`
}

// A collection of values returned by getHealthcareDatasetIamPolicy.
type LookupHealthcareDatasetIamPolicyResult struct {
	DatasetId  string `pulumi:"datasetId"`
	Etag       string `pulumi:"etag"`
	Id         string `pulumi:"id"`
	PolicyData string `pulumi:"policyData"`
}

func LookupHealthcareDatasetIamPolicyOutput(ctx *pulumi.Context, args LookupHealthcareDatasetIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupHealthcareDatasetIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupHealthcareDatasetIamPolicyResultOutput, error) {
			args := v.(LookupHealthcareDatasetIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupHealthcareDatasetIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getHealthcareDatasetIamPolicy:getHealthcareDatasetIamPolicy", args, LookupHealthcareDatasetIamPolicyResultOutput{}, options).(LookupHealthcareDatasetIamPolicyResultOutput), nil
		}).(LookupHealthcareDatasetIamPolicyResultOutput)
}

// A collection of arguments for invoking getHealthcareDatasetIamPolicy.
type LookupHealthcareDatasetIamPolicyOutputArgs struct {
	DatasetId pulumi.StringInput    `pulumi:"datasetId"`
	Id        pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupHealthcareDatasetIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHealthcareDatasetIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getHealthcareDatasetIamPolicy.
type LookupHealthcareDatasetIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupHealthcareDatasetIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHealthcareDatasetIamPolicyResult)(nil)).Elem()
}

func (o LookupHealthcareDatasetIamPolicyResultOutput) ToLookupHealthcareDatasetIamPolicyResultOutput() LookupHealthcareDatasetIamPolicyResultOutput {
	return o
}

func (o LookupHealthcareDatasetIamPolicyResultOutput) ToLookupHealthcareDatasetIamPolicyResultOutputWithContext(ctx context.Context) LookupHealthcareDatasetIamPolicyResultOutput {
	return o
}

func (o LookupHealthcareDatasetIamPolicyResultOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthcareDatasetIamPolicyResult) string { return v.DatasetId }).(pulumi.StringOutput)
}

func (o LookupHealthcareDatasetIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthcareDatasetIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupHealthcareDatasetIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthcareDatasetIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupHealthcareDatasetIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthcareDatasetIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHealthcareDatasetIamPolicyResultOutput{})
}
