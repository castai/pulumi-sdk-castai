// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VmwareengineSubnet struct {
	pulumi.CustomResourceState

	// Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// DHCP address ranges.
	DhcpAddressRanges VmwareengineSubnetDhcpAddressRangeArrayOutput `pulumi:"dhcpAddressRanges"`
	// The canonical identifier of the logical router that this subnet is attached to.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
	GatewayIp pulumi.StringOutput `pulumi:"gatewayIp"`
	// The IP address range of the subnet in CIDR format.
	IpCidrRange pulumi.StringOutput `pulumi:"ipCidrRange"`
	// The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n", where n ranges from 1
	// to 5.
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource name of the private cloud to create a new subnet in. Resource names are schemeless URIs that follow the
	// conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-west1-a/privateClouds/my-cloud
	Parent pulumi.StringOutput `pulumi:"parent"`
	// Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud. If false,
	// the subnet cannot be modified through Google Cloud, only through NSX-T directly.
	StandardConfig pulumi.BoolOutput `pulumi:"standardConfig"`
	// State of the subnet.
	State    pulumi.StringOutput                 `pulumi:"state"`
	Timeouts VmwareengineSubnetTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type of the subnet.
	Type pulumi.StringOutput `pulumi:"type"`
	// System-generated unique identifier for the resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// VLAN ID of the VLAN on which the subnet is configured.
	VlanId               pulumi.Float64Output `pulumi:"vlanId"`
	VmwareengineSubnetId pulumi.StringOutput  `pulumi:"vmwareengineSubnetId"`
}

// NewVmwareengineSubnet registers a new resource with the given unique name, arguments, and options.
func NewVmwareengineSubnet(ctx *pulumi.Context,
	name string, args *VmwareengineSubnetArgs, opts ...pulumi.ResourceOption) (*VmwareengineSubnet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpCidrRange == nil {
		return nil, errors.New("invalid value for required argument 'IpCidrRange'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VmwareengineSubnet
	err = ctx.RegisterPackageResource("google-beta:index/vmwareengineSubnet:VmwareengineSubnet", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVmwareengineSubnet gets an existing VmwareengineSubnet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVmwareengineSubnet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VmwareengineSubnetState, opts ...pulumi.ResourceOption) (*VmwareengineSubnet, error) {
	var resource VmwareengineSubnet
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vmwareengineSubnet:VmwareengineSubnet", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VmwareengineSubnet resources.
type vmwareengineSubnetState struct {
	// Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// DHCP address ranges.
	DhcpAddressRanges []VmwareengineSubnetDhcpAddressRange `pulumi:"dhcpAddressRanges"`
	// The canonical identifier of the logical router that this subnet is attached to.
	GatewayId *string `pulumi:"gatewayId"`
	// The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
	GatewayIp *string `pulumi:"gatewayIp"`
	// The IP address range of the subnet in CIDR format.
	IpCidrRange *string `pulumi:"ipCidrRange"`
	// The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n", where n ranges from 1
	// to 5.
	Name *string `pulumi:"name"`
	// The resource name of the private cloud to create a new subnet in. Resource names are schemeless URIs that follow the
	// conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-west1-a/privateClouds/my-cloud
	Parent *string `pulumi:"parent"`
	// Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud. If false,
	// the subnet cannot be modified through Google Cloud, only through NSX-T directly.
	StandardConfig *bool `pulumi:"standardConfig"`
	// State of the subnet.
	State    *string                     `pulumi:"state"`
	Timeouts *VmwareengineSubnetTimeouts `pulumi:"timeouts"`
	// The type of the subnet.
	Type *string `pulumi:"type"`
	// System-generated unique identifier for the resource.
	Uid *string `pulumi:"uid"`
	// Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
	// VLAN ID of the VLAN on which the subnet is configured.
	VlanId               *float64 `pulumi:"vlanId"`
	VmwareengineSubnetId *string  `pulumi:"vmwareengineSubnetId"`
}

type VmwareengineSubnetState struct {
	// Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// DHCP address ranges.
	DhcpAddressRanges VmwareengineSubnetDhcpAddressRangeArrayInput
	// The canonical identifier of the logical router that this subnet is attached to.
	GatewayId pulumi.StringPtrInput
	// The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
	GatewayIp pulumi.StringPtrInput
	// The IP address range of the subnet in CIDR format.
	IpCidrRange pulumi.StringPtrInput
	// The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n", where n ranges from 1
	// to 5.
	Name pulumi.StringPtrInput
	// The resource name of the private cloud to create a new subnet in. Resource names are schemeless URIs that follow the
	// conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-west1-a/privateClouds/my-cloud
	Parent pulumi.StringPtrInput
	// Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud. If false,
	// the subnet cannot be modified through Google Cloud, only through NSX-T directly.
	StandardConfig pulumi.BoolPtrInput
	// State of the subnet.
	State    pulumi.StringPtrInput
	Timeouts VmwareengineSubnetTimeoutsPtrInput
	// The type of the subnet.
	Type pulumi.StringPtrInput
	// System-generated unique identifier for the resource.
	Uid pulumi.StringPtrInput
	// Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
	// VLAN ID of the VLAN on which the subnet is configured.
	VlanId               pulumi.Float64PtrInput
	VmwareengineSubnetId pulumi.StringPtrInput
}

func (VmwareengineSubnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmwareengineSubnetState)(nil)).Elem()
}

type vmwareengineSubnetArgs struct {
	// The IP address range of the subnet in CIDR format.
	IpCidrRange string `pulumi:"ipCidrRange"`
	// The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n", where n ranges from 1
	// to 5.
	Name *string `pulumi:"name"`
	// The resource name of the private cloud to create a new subnet in. Resource names are schemeless URIs that follow the
	// conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-west1-a/privateClouds/my-cloud
	Parent               string                      `pulumi:"parent"`
	Timeouts             *VmwareengineSubnetTimeouts `pulumi:"timeouts"`
	VmwareengineSubnetId *string                     `pulumi:"vmwareengineSubnetId"`
}

// The set of arguments for constructing a VmwareengineSubnet resource.
type VmwareengineSubnetArgs struct {
	// The IP address range of the subnet in CIDR format.
	IpCidrRange pulumi.StringInput
	// The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n", where n ranges from 1
	// to 5.
	Name pulumi.StringPtrInput
	// The resource name of the private cloud to create a new subnet in. Resource names are schemeless URIs that follow the
	// conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-west1-a/privateClouds/my-cloud
	Parent               pulumi.StringInput
	Timeouts             VmwareengineSubnetTimeoutsPtrInput
	VmwareengineSubnetId pulumi.StringPtrInput
}

func (VmwareengineSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmwareengineSubnetArgs)(nil)).Elem()
}

type VmwareengineSubnetInput interface {
	pulumi.Input

	ToVmwareengineSubnetOutput() VmwareengineSubnetOutput
	ToVmwareengineSubnetOutputWithContext(ctx context.Context) VmwareengineSubnetOutput
}

func (*VmwareengineSubnet) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareengineSubnet)(nil)).Elem()
}

func (i *VmwareengineSubnet) ToVmwareengineSubnetOutput() VmwareengineSubnetOutput {
	return i.ToVmwareengineSubnetOutputWithContext(context.Background())
}

func (i *VmwareengineSubnet) ToVmwareengineSubnetOutputWithContext(ctx context.Context) VmwareengineSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareengineSubnetOutput)
}

type VmwareengineSubnetOutput struct{ *pulumi.OutputState }

func (VmwareengineSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareengineSubnet)(nil)).Elem()
}

func (o VmwareengineSubnetOutput) ToVmwareengineSubnetOutput() VmwareengineSubnetOutput {
	return o
}

func (o VmwareengineSubnetOutput) ToVmwareengineSubnetOutputWithContext(ctx context.Context) VmwareengineSubnetOutput {
	return o
}

// Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o VmwareengineSubnetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// DHCP address ranges.
func (o VmwareengineSubnetOutput) DhcpAddressRanges() VmwareengineSubnetDhcpAddressRangeArrayOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) VmwareengineSubnetDhcpAddressRangeArrayOutput { return v.DhcpAddressRanges }).(VmwareengineSubnetDhcpAddressRangeArrayOutput)
}

// The canonical identifier of the logical router that this subnet is attached to.
func (o VmwareengineSubnetOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

// The IP address of the gateway of this subnet. Must fall within the IP prefix defined above.
func (o VmwareengineSubnetOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.GatewayIp }).(pulumi.StringOutput)
}

// The IP address range of the subnet in CIDR format.
func (o VmwareengineSubnetOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.IpCidrRange }).(pulumi.StringOutput)
}

// The ID of the subnet. For userDefined subnets, this name should be in the format of "service-n", where n ranges from 1
// to 5.
func (o VmwareengineSubnetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource name of the private cloud to create a new subnet in. Resource names are schemeless URIs that follow the
// conventions in https://cloud.google.com/apis/design/resource_names. For example:
// projects/my-project/locations/us-west1-a/privateClouds/my-cloud
func (o VmwareengineSubnetOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// Whether the NSX-T configuration in the backend follows the standard configuration supported by Google Cloud. If false,
// the subnet cannot be modified through Google Cloud, only through NSX-T directly.
func (o VmwareengineSubnetOutput) StandardConfig() pulumi.BoolOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.BoolOutput { return v.StandardConfig }).(pulumi.BoolOutput)
}

// State of the subnet.
func (o VmwareengineSubnetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o VmwareengineSubnetOutput) Timeouts() VmwareengineSubnetTimeoutsPtrOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) VmwareengineSubnetTimeoutsPtrOutput { return v.Timeouts }).(VmwareengineSubnetTimeoutsPtrOutput)
}

// The type of the subnet.
func (o VmwareengineSubnetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// System-generated unique identifier for the resource.
func (o VmwareengineSubnetOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o VmwareengineSubnetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// VLAN ID of the VLAN on which the subnet is configured.
func (o VmwareengineSubnetOutput) VlanId() pulumi.Float64Output {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.Float64Output { return v.VlanId }).(pulumi.Float64Output)
}

func (o VmwareengineSubnetOutput) VmwareengineSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineSubnet) pulumi.StringOutput { return v.VmwareengineSubnetId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareengineSubnetInput)(nil)).Elem(), &VmwareengineSubnet{})
	pulumi.RegisterOutputType(VmwareengineSubnetOutput{})
}
