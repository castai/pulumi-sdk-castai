// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkServicesServiceLbPolicies struct {
	pulumi.CustomResourceState

	// Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
	AutoCapacityDrain NetworkServicesServiceLbPoliciesAutoCapacityDrainPtrOutput `pulumi:"autoCapacityDrain"`
	// Time the ServiceLbPolicy was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
	FailoverConfig NetworkServicesServiceLbPoliciesFailoverConfigPtrOutput `pulumi:"failoverConfig"`
	// Set of label tags associated with the ServiceLbPolicy resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION. Possible values:
	// ["SPRAY_TO_REGION", "SPRAY_TO_WORLD", "WATERFALL_BY_REGION", "WATERFALL_BY_ZONE"]
	LoadBalancingAlgorithm pulumi.StringPtrOutput `pulumi:"loadBalancingAlgorithm"`
	// The location of the service lb policy.
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the ServiceLbPolicy resource. It matches pattern
	// 'projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}'.
	Name                               pulumi.StringOutput `pulumi:"name"`
	NetworkServicesServiceLbPoliciesId pulumi.StringOutput `pulumi:"networkServicesServiceLbPoliciesId"`
	Project                            pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                            `pulumi:"terraformLabels"`
	Timeouts        NetworkServicesServiceLbPoliciesTimeoutsPtrOutput `pulumi:"timeouts"`
	// Time the ServiceLbPolicy was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkServicesServiceLbPolicies registers a new resource with the given unique name, arguments, and options.
func NewNetworkServicesServiceLbPolicies(ctx *pulumi.Context,
	name string, args *NetworkServicesServiceLbPoliciesArgs, opts ...pulumi.ResourceOption) (*NetworkServicesServiceLbPolicies, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkServicesServiceLbPolicies
	err = ctx.RegisterPackageResource("google-beta:index/networkServicesServiceLbPolicies:NetworkServicesServiceLbPolicies", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkServicesServiceLbPolicies gets an existing NetworkServicesServiceLbPolicies resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkServicesServiceLbPolicies(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkServicesServiceLbPoliciesState, opts ...pulumi.ResourceOption) (*NetworkServicesServiceLbPolicies, error) {
	var resource NetworkServicesServiceLbPolicies
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkServicesServiceLbPolicies:NetworkServicesServiceLbPolicies", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkServicesServiceLbPolicies resources.
type networkServicesServiceLbPoliciesState struct {
	// Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
	AutoCapacityDrain *NetworkServicesServiceLbPoliciesAutoCapacityDrain `pulumi:"autoCapacityDrain"`
	// Time the ServiceLbPolicy was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
	FailoverConfig *NetworkServicesServiceLbPoliciesFailoverConfig `pulumi:"failoverConfig"`
	// Set of label tags associated with the ServiceLbPolicy resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION. Possible values:
	// ["SPRAY_TO_REGION", "SPRAY_TO_WORLD", "WATERFALL_BY_REGION", "WATERFALL_BY_ZONE"]
	LoadBalancingAlgorithm *string `pulumi:"loadBalancingAlgorithm"`
	// The location of the service lb policy.
	Location *string `pulumi:"location"`
	// Name of the ServiceLbPolicy resource. It matches pattern
	// 'projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}'.
	Name                               *string `pulumi:"name"`
	NetworkServicesServiceLbPoliciesId *string `pulumi:"networkServicesServiceLbPoliciesId"`
	Project                            *string `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                         `pulumi:"terraformLabels"`
	Timeouts        *NetworkServicesServiceLbPoliciesTimeouts `pulumi:"timeouts"`
	// Time the ServiceLbPolicy was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkServicesServiceLbPoliciesState struct {
	// Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
	AutoCapacityDrain NetworkServicesServiceLbPoliciesAutoCapacityDrainPtrInput
	// Time the ServiceLbPolicy was created in UTC.
	CreateTime pulumi.StringPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
	FailoverConfig NetworkServicesServiceLbPoliciesFailoverConfigPtrInput
	// Set of label tags associated with the ServiceLbPolicy resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION. Possible values:
	// ["SPRAY_TO_REGION", "SPRAY_TO_WORLD", "WATERFALL_BY_REGION", "WATERFALL_BY_ZONE"]
	LoadBalancingAlgorithm pulumi.StringPtrInput
	// The location of the service lb policy.
	Location pulumi.StringPtrInput
	// Name of the ServiceLbPolicy resource. It matches pattern
	// 'projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}'.
	Name                               pulumi.StringPtrInput
	NetworkServicesServiceLbPoliciesId pulumi.StringPtrInput
	Project                            pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkServicesServiceLbPoliciesTimeoutsPtrInput
	// Time the ServiceLbPolicy was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkServicesServiceLbPoliciesState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesServiceLbPoliciesState)(nil)).Elem()
}

type networkServicesServiceLbPoliciesArgs struct {
	// Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
	AutoCapacityDrain *NetworkServicesServiceLbPoliciesAutoCapacityDrain `pulumi:"autoCapacityDrain"`
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
	FailoverConfig *NetworkServicesServiceLbPoliciesFailoverConfig `pulumi:"failoverConfig"`
	// Set of label tags associated with the ServiceLbPolicy resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION. Possible values:
	// ["SPRAY_TO_REGION", "SPRAY_TO_WORLD", "WATERFALL_BY_REGION", "WATERFALL_BY_ZONE"]
	LoadBalancingAlgorithm *string `pulumi:"loadBalancingAlgorithm"`
	// The location of the service lb policy.
	Location string `pulumi:"location"`
	// Name of the ServiceLbPolicy resource. It matches pattern
	// 'projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}'.
	Name                               *string                                   `pulumi:"name"`
	NetworkServicesServiceLbPoliciesId *string                                   `pulumi:"networkServicesServiceLbPoliciesId"`
	Project                            *string                                   `pulumi:"project"`
	Timeouts                           *NetworkServicesServiceLbPoliciesTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NetworkServicesServiceLbPolicies resource.
type NetworkServicesServiceLbPoliciesArgs struct {
	// Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
	AutoCapacityDrain NetworkServicesServiceLbPoliciesAutoCapacityDrainPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
	FailoverConfig NetworkServicesServiceLbPoliciesFailoverConfigPtrInput
	// Set of label tags associated with the ServiceLbPolicy resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION. Possible values:
	// ["SPRAY_TO_REGION", "SPRAY_TO_WORLD", "WATERFALL_BY_REGION", "WATERFALL_BY_ZONE"]
	LoadBalancingAlgorithm pulumi.StringPtrInput
	// The location of the service lb policy.
	Location pulumi.StringInput
	// Name of the ServiceLbPolicy resource. It matches pattern
	// 'projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}'.
	Name                               pulumi.StringPtrInput
	NetworkServicesServiceLbPoliciesId pulumi.StringPtrInput
	Project                            pulumi.StringPtrInput
	Timeouts                           NetworkServicesServiceLbPoliciesTimeoutsPtrInput
}

func (NetworkServicesServiceLbPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesServiceLbPoliciesArgs)(nil)).Elem()
}

type NetworkServicesServiceLbPoliciesInput interface {
	pulumi.Input

	ToNetworkServicesServiceLbPoliciesOutput() NetworkServicesServiceLbPoliciesOutput
	ToNetworkServicesServiceLbPoliciesOutputWithContext(ctx context.Context) NetworkServicesServiceLbPoliciesOutput
}

func (*NetworkServicesServiceLbPolicies) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesServiceLbPolicies)(nil)).Elem()
}

func (i *NetworkServicesServiceLbPolicies) ToNetworkServicesServiceLbPoliciesOutput() NetworkServicesServiceLbPoliciesOutput {
	return i.ToNetworkServicesServiceLbPoliciesOutputWithContext(context.Background())
}

func (i *NetworkServicesServiceLbPolicies) ToNetworkServicesServiceLbPoliciesOutputWithContext(ctx context.Context) NetworkServicesServiceLbPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicesServiceLbPoliciesOutput)
}

type NetworkServicesServiceLbPoliciesOutput struct{ *pulumi.OutputState }

func (NetworkServicesServiceLbPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesServiceLbPolicies)(nil)).Elem()
}

func (o NetworkServicesServiceLbPoliciesOutput) ToNetworkServicesServiceLbPoliciesOutput() NetworkServicesServiceLbPoliciesOutput {
	return o
}

func (o NetworkServicesServiceLbPoliciesOutput) ToNetworkServicesServiceLbPoliciesOutputWithContext(ctx context.Context) NetworkServicesServiceLbPoliciesOutput {
	return o
}

// Option to specify if an unhealthy MIG/NEG should be considered for global load balancing and traffic routing.
func (o NetworkServicesServiceLbPoliciesOutput) AutoCapacityDrain() NetworkServicesServiceLbPoliciesAutoCapacityDrainPtrOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) NetworkServicesServiceLbPoliciesAutoCapacityDrainPtrOutput {
		return v.AutoCapacityDrain
	}).(NetworkServicesServiceLbPoliciesAutoCapacityDrainPtrOutput)
}

// Time the ServiceLbPolicy was created in UTC.
func (o NetworkServicesServiceLbPoliciesOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A free-text description of the resource. Max length 1024 characters.
func (o NetworkServicesServiceLbPoliciesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkServicesServiceLbPoliciesOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Option to specify health based failover behavior. This is not related to Network load balancer FailoverPolicy.
func (o NetworkServicesServiceLbPoliciesOutput) FailoverConfig() NetworkServicesServiceLbPoliciesFailoverConfigPtrOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) NetworkServicesServiceLbPoliciesFailoverConfigPtrOutput {
		return v.FailoverConfig
	}).(NetworkServicesServiceLbPoliciesFailoverConfigPtrOutput)
}

// Set of label tags associated with the ServiceLbPolicy resource. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o NetworkServicesServiceLbPoliciesOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The type of load balancing algorithm to be used. The default behavior is WATERFALL_BY_REGION. Possible values:
// ["SPRAY_TO_REGION", "SPRAY_TO_WORLD", "WATERFALL_BY_REGION", "WATERFALL_BY_ZONE"]
func (o NetworkServicesServiceLbPoliciesOutput) LoadBalancingAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringPtrOutput { return v.LoadBalancingAlgorithm }).(pulumi.StringPtrOutput)
}

// The location of the service lb policy.
func (o NetworkServicesServiceLbPoliciesOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the ServiceLbPolicy resource. It matches pattern
// 'projects/{project}/locations/{location}/serviceLbPolicies/{service_lb_policy_name}'.
func (o NetworkServicesServiceLbPoliciesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkServicesServiceLbPoliciesOutput) NetworkServicesServiceLbPoliciesId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringOutput {
		return v.NetworkServicesServiceLbPoliciesId
	}).(pulumi.StringOutput)
}

func (o NetworkServicesServiceLbPoliciesOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkServicesServiceLbPoliciesOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkServicesServiceLbPoliciesOutput) Timeouts() NetworkServicesServiceLbPoliciesTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) NetworkServicesServiceLbPoliciesTimeoutsPtrOutput {
		return v.Timeouts
	}).(NetworkServicesServiceLbPoliciesTimeoutsPtrOutput)
}

// Time the ServiceLbPolicy was updated in UTC.
func (o NetworkServicesServiceLbPoliciesOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesServiceLbPolicies) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicesServiceLbPoliciesInput)(nil)).Elem(), &NetworkServicesServiceLbPolicies{})
	pulumi.RegisterOutputType(NetworkServicesServiceLbPoliciesOutput{})
}
