// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecurityposturePosture struct {
	pulumi.CustomResourceState

	// Time the Posture was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Description of the posture.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Location of the resource, eg: global.
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the posture.
	Name pulumi.StringOutput `pulumi:"name"`
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent pulumi.StringOutput `pulumi:"parent"`
	// List of policy sets for the posture.
	PolicySets SecurityposturePosturePolicySetArrayOutput `pulumi:"policySets"`
	// Id of the posture. It is an immutable field.
	PostureId pulumi.StringOutput `pulumi:"postureId"`
	// If set, there are currently changes in flight to the posture.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Revision_id of the posture.
	RevisionId               pulumi.StringOutput `pulumi:"revisionId"`
	SecurityposturePostureId pulumi.StringOutput `pulumi:"securityposturePostureId"`
	// State of the posture. Update to state field should not be triggered along with with other field updates. Possible
	// values: ["DEPRECATED", "DRAFT", "ACTIVE"]
	State    pulumi.StringOutput                     `pulumi:"state"`
	Timeouts SecurityposturePostureTimeoutsPtrOutput `pulumi:"timeouts"`
	// Time the Posture was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewSecurityposturePosture registers a new resource with the given unique name, arguments, and options.
func NewSecurityposturePosture(ctx *pulumi.Context,
	name string, args *SecurityposturePostureArgs, opts ...pulumi.ResourceOption) (*SecurityposturePosture, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.PolicySets == nil {
		return nil, errors.New("invalid value for required argument 'PolicySets'")
	}
	if args.PostureId == nil {
		return nil, errors.New("invalid value for required argument 'PostureId'")
	}
	if args.State == nil {
		return nil, errors.New("invalid value for required argument 'State'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SecurityposturePosture
	err = ctx.RegisterPackageResource("google-beta:index/securityposturePosture:SecurityposturePosture", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityposturePosture gets an existing SecurityposturePosture resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityposturePosture(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityposturePostureState, opts ...pulumi.ResourceOption) (*SecurityposturePosture, error) {
	var resource SecurityposturePosture
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/securityposturePosture:SecurityposturePosture", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityposturePosture resources.
type securityposturePostureState struct {
	// Time the Posture was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// Description of the posture.
	Description *string `pulumi:"description"`
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag *string `pulumi:"etag"`
	// Location of the resource, eg: global.
	Location *string `pulumi:"location"`
	// Name of the posture.
	Name *string `pulumi:"name"`
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent *string `pulumi:"parent"`
	// List of policy sets for the posture.
	PolicySets []SecurityposturePosturePolicySet `pulumi:"policySets"`
	// Id of the posture. It is an immutable field.
	PostureId *string `pulumi:"postureId"`
	// If set, there are currently changes in flight to the posture.
	Reconciling *bool `pulumi:"reconciling"`
	// Revision_id of the posture.
	RevisionId               *string `pulumi:"revisionId"`
	SecurityposturePostureId *string `pulumi:"securityposturePostureId"`
	// State of the posture. Update to state field should not be triggered along with with other field updates. Possible
	// values: ["DEPRECATED", "DRAFT", "ACTIVE"]
	State    *string                         `pulumi:"state"`
	Timeouts *SecurityposturePostureTimeouts `pulumi:"timeouts"`
	// Time the Posture was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type SecurityposturePostureState struct {
	// Time the Posture was created in UTC.
	CreateTime pulumi.StringPtrInput
	// Description of the posture.
	Description pulumi.StringPtrInput
	// For Resource freshness validation (https://google.aip.dev/154)
	Etag pulumi.StringPtrInput
	// Location of the resource, eg: global.
	Location pulumi.StringPtrInput
	// Name of the posture.
	Name pulumi.StringPtrInput
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent pulumi.StringPtrInput
	// List of policy sets for the posture.
	PolicySets SecurityposturePosturePolicySetArrayInput
	// Id of the posture. It is an immutable field.
	PostureId pulumi.StringPtrInput
	// If set, there are currently changes in flight to the posture.
	Reconciling pulumi.BoolPtrInput
	// Revision_id of the posture.
	RevisionId               pulumi.StringPtrInput
	SecurityposturePostureId pulumi.StringPtrInput
	// State of the posture. Update to state field should not be triggered along with with other field updates. Possible
	// values: ["DEPRECATED", "DRAFT", "ACTIVE"]
	State    pulumi.StringPtrInput
	Timeouts SecurityposturePostureTimeoutsPtrInput
	// Time the Posture was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (SecurityposturePostureState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityposturePostureState)(nil)).Elem()
}

type securityposturePostureArgs struct {
	// Description of the posture.
	Description *string `pulumi:"description"`
	// Location of the resource, eg: global.
	Location string `pulumi:"location"`
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent string `pulumi:"parent"`
	// List of policy sets for the posture.
	PolicySets []SecurityposturePosturePolicySet `pulumi:"policySets"`
	// Id of the posture. It is an immutable field.
	PostureId                string  `pulumi:"postureId"`
	SecurityposturePostureId *string `pulumi:"securityposturePostureId"`
	// State of the posture. Update to state field should not be triggered along with with other field updates. Possible
	// values: ["DEPRECATED", "DRAFT", "ACTIVE"]
	State    string                          `pulumi:"state"`
	Timeouts *SecurityposturePostureTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SecurityposturePosture resource.
type SecurityposturePostureArgs struct {
	// Description of the posture.
	Description pulumi.StringPtrInput
	// Location of the resource, eg: global.
	Location pulumi.StringInput
	// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
	Parent pulumi.StringInput
	// List of policy sets for the posture.
	PolicySets SecurityposturePosturePolicySetArrayInput
	// Id of the posture. It is an immutable field.
	PostureId                pulumi.StringInput
	SecurityposturePostureId pulumi.StringPtrInput
	// State of the posture. Update to state field should not be triggered along with with other field updates. Possible
	// values: ["DEPRECATED", "DRAFT", "ACTIVE"]
	State    pulumi.StringInput
	Timeouts SecurityposturePostureTimeoutsPtrInput
}

func (SecurityposturePostureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityposturePostureArgs)(nil)).Elem()
}

type SecurityposturePostureInput interface {
	pulumi.Input

	ToSecurityposturePostureOutput() SecurityposturePostureOutput
	ToSecurityposturePostureOutputWithContext(ctx context.Context) SecurityposturePostureOutput
}

func (*SecurityposturePosture) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityposturePosture)(nil)).Elem()
}

func (i *SecurityposturePosture) ToSecurityposturePostureOutput() SecurityposturePostureOutput {
	return i.ToSecurityposturePostureOutputWithContext(context.Background())
}

func (i *SecurityposturePosture) ToSecurityposturePostureOutputWithContext(ctx context.Context) SecurityposturePostureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityposturePostureOutput)
}

type SecurityposturePostureOutput struct{ *pulumi.OutputState }

func (SecurityposturePostureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityposturePosture)(nil)).Elem()
}

func (o SecurityposturePostureOutput) ToSecurityposturePostureOutput() SecurityposturePostureOutput {
	return o
}

func (o SecurityposturePostureOutput) ToSecurityposturePostureOutputWithContext(ctx context.Context) SecurityposturePostureOutput {
	return o
}

// Time the Posture was created in UTC.
func (o SecurityposturePostureOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Description of the posture.
func (o SecurityposturePostureOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// For Resource freshness validation (https://google.aip.dev/154)
func (o SecurityposturePostureOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Location of the resource, eg: global.
func (o SecurityposturePostureOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the posture.
func (o SecurityposturePostureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parent of the resource, an organization. Format should be 'organizations/{organization_id}'.
func (o SecurityposturePostureOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// List of policy sets for the posture.
func (o SecurityposturePostureOutput) PolicySets() SecurityposturePosturePolicySetArrayOutput {
	return o.ApplyT(func(v *SecurityposturePosture) SecurityposturePosturePolicySetArrayOutput { return v.PolicySets }).(SecurityposturePosturePolicySetArrayOutput)
}

// Id of the posture. It is an immutable field.
func (o SecurityposturePostureOutput) PostureId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.PostureId }).(pulumi.StringOutput)
}

// If set, there are currently changes in flight to the posture.
func (o SecurityposturePostureOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Revision_id of the posture.
func (o SecurityposturePostureOutput) RevisionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.RevisionId }).(pulumi.StringOutput)
}

func (o SecurityposturePostureOutput) SecurityposturePostureId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.SecurityposturePostureId }).(pulumi.StringOutput)
}

// State of the posture. Update to state field should not be triggered along with with other field updates. Possible
// values: ["DEPRECATED", "DRAFT", "ACTIVE"]
func (o SecurityposturePostureOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o SecurityposturePostureOutput) Timeouts() SecurityposturePostureTimeoutsPtrOutput {
	return o.ApplyT(func(v *SecurityposturePosture) SecurityposturePostureTimeoutsPtrOutput { return v.Timeouts }).(SecurityposturePostureTimeoutsPtrOutput)
}

// Time the Posture was updated in UTC.
func (o SecurityposturePostureOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityposturePosture) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityposturePostureInput)(nil)).Elem(), &SecurityposturePosture{})
	pulumi.RegisterOutputType(SecurityposturePostureOutput{})
}
