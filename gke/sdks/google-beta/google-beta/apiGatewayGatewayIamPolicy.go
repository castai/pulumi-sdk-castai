// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiGatewayGatewayIamPolicy struct {
	pulumi.CustomResourceState

	ApiGatewayGatewayIamPolicyId pulumi.StringOutput `pulumi:"apiGatewayGatewayIamPolicyId"`
	Etag                         pulumi.StringOutput `pulumi:"etag"`
	Gateway                      pulumi.StringOutput `pulumi:"gateway"`
	PolicyData                   pulumi.StringOutput `pulumi:"policyData"`
	Project                      pulumi.StringOutput `pulumi:"project"`
	Region                       pulumi.StringOutput `pulumi:"region"`
}

// NewApiGatewayGatewayIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewApiGatewayGatewayIamPolicy(ctx *pulumi.Context,
	name string, args *ApiGatewayGatewayIamPolicyArgs, opts ...pulumi.ResourceOption) (*ApiGatewayGatewayIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Gateway == nil {
		return nil, errors.New("invalid value for required argument 'Gateway'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ApiGatewayGatewayIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/apiGatewayGatewayIamPolicy:ApiGatewayGatewayIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiGatewayGatewayIamPolicy gets an existing ApiGatewayGatewayIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiGatewayGatewayIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiGatewayGatewayIamPolicyState, opts ...pulumi.ResourceOption) (*ApiGatewayGatewayIamPolicy, error) {
	var resource ApiGatewayGatewayIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/apiGatewayGatewayIamPolicy:ApiGatewayGatewayIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiGatewayGatewayIamPolicy resources.
type apiGatewayGatewayIamPolicyState struct {
	ApiGatewayGatewayIamPolicyId *string `pulumi:"apiGatewayGatewayIamPolicyId"`
	Etag                         *string `pulumi:"etag"`
	Gateway                      *string `pulumi:"gateway"`
	PolicyData                   *string `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
	Region                       *string `pulumi:"region"`
}

type ApiGatewayGatewayIamPolicyState struct {
	ApiGatewayGatewayIamPolicyId pulumi.StringPtrInput
	Etag                         pulumi.StringPtrInput
	Gateway                      pulumi.StringPtrInput
	PolicyData                   pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
}

func (ApiGatewayGatewayIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayGatewayIamPolicyState)(nil)).Elem()
}

type apiGatewayGatewayIamPolicyArgs struct {
	ApiGatewayGatewayIamPolicyId *string `pulumi:"apiGatewayGatewayIamPolicyId"`
	Gateway                      string  `pulumi:"gateway"`
	PolicyData                   string  `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
	Region                       *string `pulumi:"region"`
}

// The set of arguments for constructing a ApiGatewayGatewayIamPolicy resource.
type ApiGatewayGatewayIamPolicyArgs struct {
	ApiGatewayGatewayIamPolicyId pulumi.StringPtrInput
	Gateway                      pulumi.StringInput
	PolicyData                   pulumi.StringInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
}

func (ApiGatewayGatewayIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayGatewayIamPolicyArgs)(nil)).Elem()
}

type ApiGatewayGatewayIamPolicyInput interface {
	pulumi.Input

	ToApiGatewayGatewayIamPolicyOutput() ApiGatewayGatewayIamPolicyOutput
	ToApiGatewayGatewayIamPolicyOutputWithContext(ctx context.Context) ApiGatewayGatewayIamPolicyOutput
}

func (*ApiGatewayGatewayIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayGatewayIamPolicy)(nil)).Elem()
}

func (i *ApiGatewayGatewayIamPolicy) ToApiGatewayGatewayIamPolicyOutput() ApiGatewayGatewayIamPolicyOutput {
	return i.ToApiGatewayGatewayIamPolicyOutputWithContext(context.Background())
}

func (i *ApiGatewayGatewayIamPolicy) ToApiGatewayGatewayIamPolicyOutputWithContext(ctx context.Context) ApiGatewayGatewayIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGatewayIamPolicyOutput)
}

type ApiGatewayGatewayIamPolicyOutput struct{ *pulumi.OutputState }

func (ApiGatewayGatewayIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayGatewayIamPolicy)(nil)).Elem()
}

func (o ApiGatewayGatewayIamPolicyOutput) ToApiGatewayGatewayIamPolicyOutput() ApiGatewayGatewayIamPolicyOutput {
	return o
}

func (o ApiGatewayGatewayIamPolicyOutput) ToApiGatewayGatewayIamPolicyOutputWithContext(ctx context.Context) ApiGatewayGatewayIamPolicyOutput {
	return o
}

func (o ApiGatewayGatewayIamPolicyOutput) ApiGatewayGatewayIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamPolicy) pulumi.StringOutput { return v.ApiGatewayGatewayIamPolicyId }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamPolicyOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamPolicy) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGatewayIamPolicyInput)(nil)).Elem(), &ApiGatewayGatewayIamPolicy{})
	pulumi.RegisterOutputType(ApiGatewayGatewayIamPolicyOutput{})
}
