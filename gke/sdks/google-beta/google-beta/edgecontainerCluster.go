// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EdgecontainerCluster struct {
	pulumi.CustomResourceState

	// RBAC policy that will be applied and managed by GEC.
	Authorization EdgecontainerClusterAuthorizationOutput `pulumi:"authorization"`
	// The PEM-encoded public certificate of the cluster's CA.
	ClusterCaCertificate pulumi.StringOutput `pulumi:"clusterCaCertificate"`
	// The configuration of the cluster control plane.
	ControlPlane EdgecontainerClusterControlPlanePtrOutput `pulumi:"controlPlane"`
	// Remote control plane disk encryption options. This field is only used when enabling CMEK support.
	ControlPlaneEncryption EdgecontainerClusterControlPlaneEncryptionPtrOutput `pulumi:"controlPlaneEncryption"`
	// The control plane release version.
	ControlPlaneVersion pulumi.StringOutput `pulumi:"controlPlaneVersion"`
	// The time the cluster was created, in RFC3339 text format.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The default maximum number of pods per node used if a maximum value is not specified explicitly for a node pool in this
	// cluster. If unspecified, the Kubernetes default value will be used.
	DefaultMaxPodsPerNode  pulumi.Float64Output   `pulumi:"defaultMaxPodsPerNode"`
	EdgecontainerClusterId pulumi.StringOutput    `pulumi:"edgecontainerClusterId"`
	EffectiveLabels        pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The IP address of the Kubernetes API server.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// Address pools for cluster data plane external load balancing.
	ExternalLoadBalancerIpv4AddressPools pulumi.StringArrayOutput `pulumi:"externalLoadBalancerIpv4AddressPools"`
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Fleet EdgecontainerClusterFleetOutput `pulumi:"fleet"`
	// User-defined labels for the edgecloud cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// All the maintenance events scheduled for the cluster, including the ones ongoing, planned for the future and done in the
	// past (up to 90 days).
	MaintenanceEvents EdgecontainerClusterMaintenanceEventArrayOutput `pulumi:"maintenanceEvents"`
	// Cluster-wide maintenance policy configuration.
	MaintenancePolicy EdgecontainerClusterMaintenancePolicyPtrOutput `pulumi:"maintenancePolicy"`
	// The GDCE cluster name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Networking EdgecontainerClusterNetworkingOutput `pulumi:"networking"`
	// The lowest release version among all worker nodes. This field can be empty if the cluster does not have any worker
	// nodes.
	NodeVersion pulumi.StringOutput `pulumi:"nodeVersion"`
	// The port number of the Kubernetes API server.
	Port    pulumi.Float64Output `pulumi:"port"`
	Project pulumi.StringOutput  `pulumi:"project"`
	// The release channel a cluster is subscribed to. Possible values: ["RELEASE_CHANNEL_UNSPECIFIED", "NONE", "REGULAR"]
	ReleaseChannel pulumi.StringOutput `pulumi:"releaseChannel"`
	// Indicates the status of the cluster.
	Status pulumi.StringOutput `pulumi:"status"`
	// Config that customers are allowed to define for GDCE system add-ons.
	SystemAddonsConfig EdgecontainerClusterSystemAddonsConfigPtrOutput `pulumi:"systemAddonsConfig"`
	// The target cluster version. For example: "1.5.0".
	TargetVersion pulumi.StringOutput `pulumi:"targetVersion"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                `pulumi:"terraformLabels"`
	Timeouts        EdgecontainerClusterTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewEdgecontainerCluster registers a new resource with the given unique name, arguments, and options.
func NewEdgecontainerCluster(ctx *pulumi.Context,
	name string, args *EdgecontainerClusterArgs, opts ...pulumi.ResourceOption) (*EdgecontainerCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authorization == nil {
		return nil, errors.New("invalid value for required argument 'Authorization'")
	}
	if args.Fleet == nil {
		return nil, errors.New("invalid value for required argument 'Fleet'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Networking == nil {
		return nil, errors.New("invalid value for required argument 'Networking'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clusterCaCertificate",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource EdgecontainerCluster
	err = ctx.RegisterPackageResource("google-beta:index/edgecontainerCluster:EdgecontainerCluster", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgecontainerCluster gets an existing EdgecontainerCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgecontainerCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgecontainerClusterState, opts ...pulumi.ResourceOption) (*EdgecontainerCluster, error) {
	var resource EdgecontainerCluster
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/edgecontainerCluster:EdgecontainerCluster", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgecontainerCluster resources.
type edgecontainerClusterState struct {
	// RBAC policy that will be applied and managed by GEC.
	Authorization *EdgecontainerClusterAuthorization `pulumi:"authorization"`
	// The PEM-encoded public certificate of the cluster's CA.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// The configuration of the cluster control plane.
	ControlPlane *EdgecontainerClusterControlPlane `pulumi:"controlPlane"`
	// Remote control plane disk encryption options. This field is only used when enabling CMEK support.
	ControlPlaneEncryption *EdgecontainerClusterControlPlaneEncryption `pulumi:"controlPlaneEncryption"`
	// The control plane release version.
	ControlPlaneVersion *string `pulumi:"controlPlaneVersion"`
	// The time the cluster was created, in RFC3339 text format.
	CreateTime *string `pulumi:"createTime"`
	// The default maximum number of pods per node used if a maximum value is not specified explicitly for a node pool in this
	// cluster. If unspecified, the Kubernetes default value will be used.
	DefaultMaxPodsPerNode  *float64          `pulumi:"defaultMaxPodsPerNode"`
	EdgecontainerClusterId *string           `pulumi:"edgecontainerClusterId"`
	EffectiveLabels        map[string]string `pulumi:"effectiveLabels"`
	// The IP address of the Kubernetes API server.
	Endpoint *string `pulumi:"endpoint"`
	// Address pools for cluster data plane external load balancing.
	ExternalLoadBalancerIpv4AddressPools []string `pulumi:"externalLoadBalancerIpv4AddressPools"`
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Fleet *EdgecontainerClusterFleet `pulumi:"fleet"`
	// User-defined labels for the edgecloud cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// All the maintenance events scheduled for the cluster, including the ones ongoing, planned for the future and done in the
	// past (up to 90 days).
	MaintenanceEvents []EdgecontainerClusterMaintenanceEvent `pulumi:"maintenanceEvents"`
	// Cluster-wide maintenance policy configuration.
	MaintenancePolicy *EdgecontainerClusterMaintenancePolicy `pulumi:"maintenancePolicy"`
	// The GDCE cluster name.
	Name *string `pulumi:"name"`
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Networking *EdgecontainerClusterNetworking `pulumi:"networking"`
	// The lowest release version among all worker nodes. This field can be empty if the cluster does not have any worker
	// nodes.
	NodeVersion *string `pulumi:"nodeVersion"`
	// The port number of the Kubernetes API server.
	Port    *float64 `pulumi:"port"`
	Project *string  `pulumi:"project"`
	// The release channel a cluster is subscribed to. Possible values: ["RELEASE_CHANNEL_UNSPECIFIED", "NONE", "REGULAR"]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// Indicates the status of the cluster.
	Status *string `pulumi:"status"`
	// Config that customers are allowed to define for GDCE system add-ons.
	SystemAddonsConfig *EdgecontainerClusterSystemAddonsConfig `pulumi:"systemAddonsConfig"`
	// The target cluster version. For example: "1.5.0".
	TargetVersion *string `pulumi:"targetVersion"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string             `pulumi:"terraformLabels"`
	Timeouts        *EdgecontainerClusterTimeouts `pulumi:"timeouts"`
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime *string `pulumi:"updateTime"`
}

type EdgecontainerClusterState struct {
	// RBAC policy that will be applied and managed by GEC.
	Authorization EdgecontainerClusterAuthorizationPtrInput
	// The PEM-encoded public certificate of the cluster's CA.
	ClusterCaCertificate pulumi.StringPtrInput
	// The configuration of the cluster control plane.
	ControlPlane EdgecontainerClusterControlPlanePtrInput
	// Remote control plane disk encryption options. This field is only used when enabling CMEK support.
	ControlPlaneEncryption EdgecontainerClusterControlPlaneEncryptionPtrInput
	// The control plane release version.
	ControlPlaneVersion pulumi.StringPtrInput
	// The time the cluster was created, in RFC3339 text format.
	CreateTime pulumi.StringPtrInput
	// The default maximum number of pods per node used if a maximum value is not specified explicitly for a node pool in this
	// cluster. If unspecified, the Kubernetes default value will be used.
	DefaultMaxPodsPerNode  pulumi.Float64PtrInput
	EdgecontainerClusterId pulumi.StringPtrInput
	EffectiveLabels        pulumi.StringMapInput
	// The IP address of the Kubernetes API server.
	Endpoint pulumi.StringPtrInput
	// Address pools for cluster data plane external load balancing.
	ExternalLoadBalancerIpv4AddressPools pulumi.StringArrayInput
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Fleet EdgecontainerClusterFleetPtrInput
	// User-defined labels for the edgecloud cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// All the maintenance events scheduled for the cluster, including the ones ongoing, planned for the future and done in the
	// past (up to 90 days).
	MaintenanceEvents EdgecontainerClusterMaintenanceEventArrayInput
	// Cluster-wide maintenance policy configuration.
	MaintenancePolicy EdgecontainerClusterMaintenancePolicyPtrInput
	// The GDCE cluster name.
	Name pulumi.StringPtrInput
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Networking EdgecontainerClusterNetworkingPtrInput
	// The lowest release version among all worker nodes. This field can be empty if the cluster does not have any worker
	// nodes.
	NodeVersion pulumi.StringPtrInput
	// The port number of the Kubernetes API server.
	Port    pulumi.Float64PtrInput
	Project pulumi.StringPtrInput
	// The release channel a cluster is subscribed to. Possible values: ["RELEASE_CHANNEL_UNSPECIFIED", "NONE", "REGULAR"]
	ReleaseChannel pulumi.StringPtrInput
	// Indicates the status of the cluster.
	Status pulumi.StringPtrInput
	// Config that customers are allowed to define for GDCE system add-ons.
	SystemAddonsConfig EdgecontainerClusterSystemAddonsConfigPtrInput
	// The target cluster version. For example: "1.5.0".
	TargetVersion pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        EdgecontainerClusterTimeoutsPtrInput
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringPtrInput
}

func (EdgecontainerClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgecontainerClusterState)(nil)).Elem()
}

type edgecontainerClusterArgs struct {
	// RBAC policy that will be applied and managed by GEC.
	Authorization EdgecontainerClusterAuthorization `pulumi:"authorization"`
	// The configuration of the cluster control plane.
	ControlPlane *EdgecontainerClusterControlPlane `pulumi:"controlPlane"`
	// Remote control plane disk encryption options. This field is only used when enabling CMEK support.
	ControlPlaneEncryption *EdgecontainerClusterControlPlaneEncryption `pulumi:"controlPlaneEncryption"`
	// The default maximum number of pods per node used if a maximum value is not specified explicitly for a node pool in this
	// cluster. If unspecified, the Kubernetes default value will be used.
	DefaultMaxPodsPerNode  *float64 `pulumi:"defaultMaxPodsPerNode"`
	EdgecontainerClusterId *string  `pulumi:"edgecontainerClusterId"`
	// Address pools for cluster data plane external load balancing.
	ExternalLoadBalancerIpv4AddressPools []string `pulumi:"externalLoadBalancerIpv4AddressPools"`
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Fleet EdgecontainerClusterFleet `pulumi:"fleet"`
	// User-defined labels for the edgecloud cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the resource.
	Location string `pulumi:"location"`
	// Cluster-wide maintenance policy configuration.
	MaintenancePolicy *EdgecontainerClusterMaintenancePolicy `pulumi:"maintenancePolicy"`
	// The GDCE cluster name.
	Name *string `pulumi:"name"`
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Networking EdgecontainerClusterNetworking `pulumi:"networking"`
	Project    *string                        `pulumi:"project"`
	// The release channel a cluster is subscribed to. Possible values: ["RELEASE_CHANNEL_UNSPECIFIED", "NONE", "REGULAR"]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// Config that customers are allowed to define for GDCE system add-ons.
	SystemAddonsConfig *EdgecontainerClusterSystemAddonsConfig `pulumi:"systemAddonsConfig"`
	// The target cluster version. For example: "1.5.0".
	TargetVersion *string                       `pulumi:"targetVersion"`
	Timeouts      *EdgecontainerClusterTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a EdgecontainerCluster resource.
type EdgecontainerClusterArgs struct {
	// RBAC policy that will be applied and managed by GEC.
	Authorization EdgecontainerClusterAuthorizationInput
	// The configuration of the cluster control plane.
	ControlPlane EdgecontainerClusterControlPlanePtrInput
	// Remote control plane disk encryption options. This field is only used when enabling CMEK support.
	ControlPlaneEncryption EdgecontainerClusterControlPlaneEncryptionPtrInput
	// The default maximum number of pods per node used if a maximum value is not specified explicitly for a node pool in this
	// cluster. If unspecified, the Kubernetes default value will be used.
	DefaultMaxPodsPerNode  pulumi.Float64PtrInput
	EdgecontainerClusterId pulumi.StringPtrInput
	// Address pools for cluster data plane external load balancing.
	ExternalLoadBalancerIpv4AddressPools pulumi.StringArrayInput
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Fleet EdgecontainerClusterFleetInput
	// User-defined labels for the edgecloud cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location of the resource.
	Location pulumi.StringInput
	// Cluster-wide maintenance policy configuration.
	MaintenancePolicy EdgecontainerClusterMaintenancePolicyPtrInput
	// The GDCE cluster name.
	Name pulumi.StringPtrInput
	// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
	// manage multi-cluster capabilities and apply consistent policies across your systems.
	Networking EdgecontainerClusterNetworkingInput
	Project    pulumi.StringPtrInput
	// The release channel a cluster is subscribed to. Possible values: ["RELEASE_CHANNEL_UNSPECIFIED", "NONE", "REGULAR"]
	ReleaseChannel pulumi.StringPtrInput
	// Config that customers are allowed to define for GDCE system add-ons.
	SystemAddonsConfig EdgecontainerClusterSystemAddonsConfigPtrInput
	// The target cluster version. For example: "1.5.0".
	TargetVersion pulumi.StringPtrInput
	Timeouts      EdgecontainerClusterTimeoutsPtrInput
}

func (EdgecontainerClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgecontainerClusterArgs)(nil)).Elem()
}

type EdgecontainerClusterInput interface {
	pulumi.Input

	ToEdgecontainerClusterOutput() EdgecontainerClusterOutput
	ToEdgecontainerClusterOutputWithContext(ctx context.Context) EdgecontainerClusterOutput
}

func (*EdgecontainerCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgecontainerCluster)(nil)).Elem()
}

func (i *EdgecontainerCluster) ToEdgecontainerClusterOutput() EdgecontainerClusterOutput {
	return i.ToEdgecontainerClusterOutputWithContext(context.Background())
}

func (i *EdgecontainerCluster) ToEdgecontainerClusterOutputWithContext(ctx context.Context) EdgecontainerClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EdgecontainerClusterOutput)
}

type EdgecontainerClusterOutput struct{ *pulumi.OutputState }

func (EdgecontainerClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EdgecontainerCluster)(nil)).Elem()
}

func (o EdgecontainerClusterOutput) ToEdgecontainerClusterOutput() EdgecontainerClusterOutput {
	return o
}

func (o EdgecontainerClusterOutput) ToEdgecontainerClusterOutputWithContext(ctx context.Context) EdgecontainerClusterOutput {
	return o
}

// RBAC policy that will be applied and managed by GEC.
func (o EdgecontainerClusterOutput) Authorization() EdgecontainerClusterAuthorizationOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) EdgecontainerClusterAuthorizationOutput { return v.Authorization }).(EdgecontainerClusterAuthorizationOutput)
}

// The PEM-encoded public certificate of the cluster's CA.
func (o EdgecontainerClusterOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The configuration of the cluster control plane.
func (o EdgecontainerClusterOutput) ControlPlane() EdgecontainerClusterControlPlanePtrOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) EdgecontainerClusterControlPlanePtrOutput { return v.ControlPlane }).(EdgecontainerClusterControlPlanePtrOutput)
}

// Remote control plane disk encryption options. This field is only used when enabling CMEK support.
func (o EdgecontainerClusterOutput) ControlPlaneEncryption() EdgecontainerClusterControlPlaneEncryptionPtrOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) EdgecontainerClusterControlPlaneEncryptionPtrOutput {
		return v.ControlPlaneEncryption
	}).(EdgecontainerClusterControlPlaneEncryptionPtrOutput)
}

// The control plane release version.
func (o EdgecontainerClusterOutput) ControlPlaneVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.ControlPlaneVersion }).(pulumi.StringOutput)
}

// The time the cluster was created, in RFC3339 text format.
func (o EdgecontainerClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The default maximum number of pods per node used if a maximum value is not specified explicitly for a node pool in this
// cluster. If unspecified, the Kubernetes default value will be used.
func (o EdgecontainerClusterOutput) DefaultMaxPodsPerNode() pulumi.Float64Output {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.Float64Output { return v.DefaultMaxPodsPerNode }).(pulumi.Float64Output)
}

func (o EdgecontainerClusterOutput) EdgecontainerClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.EdgecontainerClusterId }).(pulumi.StringOutput)
}

func (o EdgecontainerClusterOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The IP address of the Kubernetes API server.
func (o EdgecontainerClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// Address pools for cluster data plane external load balancing.
func (o EdgecontainerClusterOutput) ExternalLoadBalancerIpv4AddressPools() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringArrayOutput { return v.ExternalLoadBalancerIpv4AddressPools }).(pulumi.StringArrayOutput)
}

// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
// manage multi-cluster capabilities and apply consistent policies across your systems.
func (o EdgecontainerClusterOutput) Fleet() EdgecontainerClusterFleetOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) EdgecontainerClusterFleetOutput { return v.Fleet }).(EdgecontainerClusterFleetOutput)
}

// User-defined labels for the edgecloud cluster. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o EdgecontainerClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the resource.
func (o EdgecontainerClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// All the maintenance events scheduled for the cluster, including the ones ongoing, planned for the future and done in the
// past (up to 90 days).
func (o EdgecontainerClusterOutput) MaintenanceEvents() EdgecontainerClusterMaintenanceEventArrayOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) EdgecontainerClusterMaintenanceEventArrayOutput {
		return v.MaintenanceEvents
	}).(EdgecontainerClusterMaintenanceEventArrayOutput)
}

// Cluster-wide maintenance policy configuration.
func (o EdgecontainerClusterOutput) MaintenancePolicy() EdgecontainerClusterMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) EdgecontainerClusterMaintenancePolicyPtrOutput {
		return v.MaintenancePolicy
	}).(EdgecontainerClusterMaintenancePolicyPtrOutput)
}

// The GDCE cluster name.
func (o EdgecontainerClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and
// manage multi-cluster capabilities and apply consistent policies across your systems.
func (o EdgecontainerClusterOutput) Networking() EdgecontainerClusterNetworkingOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) EdgecontainerClusterNetworkingOutput { return v.Networking }).(EdgecontainerClusterNetworkingOutput)
}

// The lowest release version among all worker nodes. This field can be empty if the cluster does not have any worker
// nodes.
func (o EdgecontainerClusterOutput) NodeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.NodeVersion }).(pulumi.StringOutput)
}

// The port number of the Kubernetes API server.
func (o EdgecontainerClusterOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.Float64Output { return v.Port }).(pulumi.Float64Output)
}

func (o EdgecontainerClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The release channel a cluster is subscribed to. Possible values: ["RELEASE_CHANNEL_UNSPECIFIED", "NONE", "REGULAR"]
func (o EdgecontainerClusterOutput) ReleaseChannel() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.ReleaseChannel }).(pulumi.StringOutput)
}

// Indicates the status of the cluster.
func (o EdgecontainerClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Config that customers are allowed to define for GDCE system add-ons.
func (o EdgecontainerClusterOutput) SystemAddonsConfig() EdgecontainerClusterSystemAddonsConfigPtrOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) EdgecontainerClusterSystemAddonsConfigPtrOutput {
		return v.SystemAddonsConfig
	}).(EdgecontainerClusterSystemAddonsConfigPtrOutput)
}

// The target cluster version. For example: "1.5.0".
func (o EdgecontainerClusterOutput) TargetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.TargetVersion }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o EdgecontainerClusterOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o EdgecontainerClusterOutput) Timeouts() EdgecontainerClusterTimeoutsPtrOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) EdgecontainerClusterTimeoutsPtrOutput { return v.Timeouts }).(EdgecontainerClusterTimeoutsPtrOutput)
}

// The time the cluster was last updated, in RFC3339 text format.
func (o EdgecontainerClusterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *EdgecontainerCluster) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EdgecontainerClusterInput)(nil)).Elem(), &EdgecontainerCluster{})
	pulumi.RegisterOutputType(EdgecontainerClusterOutput{})
}
