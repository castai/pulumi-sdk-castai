// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkServicesMesh struct {
	pulumi.CustomResourceState

	// Time the Mesh was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. If set to a valid TCP port (1-65535), instructs the SIDECAR proxy to listen on the specified port of localhost
	// (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be redirected to this port regardless of its actual
	// ip:port destination. If unset, a port '15001' is used as the interception port. This will is applicable only for sidecar
	// proxy deployments.
	InterceptionPort pulumi.Float64PtrOutput `pulumi:"interceptionPort"`
	// Set of label tags associated with the Mesh resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Short name of the Mesh resource to be created.
	Name                  pulumi.StringOutput `pulumi:"name"`
	NetworkServicesMeshId pulumi.StringOutput `pulumi:"networkServicesMeshId"`
	Project               pulumi.StringOutput `pulumi:"project"`
	// Server-defined URL of this resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput               `pulumi:"terraformLabels"`
	Timeouts        NetworkServicesMeshTimeoutsPtrOutput `pulumi:"timeouts"`
	// Time the Mesh was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkServicesMesh registers a new resource with the given unique name, arguments, and options.
func NewNetworkServicesMesh(ctx *pulumi.Context,
	name string, args *NetworkServicesMeshArgs, opts ...pulumi.ResourceOption) (*NetworkServicesMesh, error) {
	if args == nil {
		args = &NetworkServicesMeshArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkServicesMesh
	err = ctx.RegisterPackageResource("google-beta:index/networkServicesMesh:NetworkServicesMesh", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkServicesMesh gets an existing NetworkServicesMesh resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkServicesMesh(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkServicesMeshState, opts ...pulumi.ResourceOption) (*NetworkServicesMesh, error) {
	var resource NetworkServicesMesh
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkServicesMesh:NetworkServicesMesh", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkServicesMesh resources.
type networkServicesMeshState struct {
	// Time the Mesh was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Optional. If set to a valid TCP port (1-65535), instructs the SIDECAR proxy to listen on the specified port of localhost
	// (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be redirected to this port regardless of its actual
	// ip:port destination. If unset, a port '15001' is used as the interception port. This will is applicable only for sidecar
	// proxy deployments.
	InterceptionPort *float64 `pulumi:"interceptionPort"`
	// Set of label tags associated with the Mesh resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// Short name of the Mesh resource to be created.
	Name                  *string `pulumi:"name"`
	NetworkServicesMeshId *string `pulumi:"networkServicesMeshId"`
	Project               *string `pulumi:"project"`
	// Server-defined URL of this resource.
	SelfLink *string `pulumi:"selfLink"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string            `pulumi:"terraformLabels"`
	Timeouts        *NetworkServicesMeshTimeouts `pulumi:"timeouts"`
	// Time the Mesh was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkServicesMeshState struct {
	// Time the Mesh was created in UTC.
	CreateTime pulumi.StringPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Optional. If set to a valid TCP port (1-65535), instructs the SIDECAR proxy to listen on the specified port of localhost
	// (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be redirected to this port regardless of its actual
	// ip:port destination. If unset, a port '15001' is used as the interception port. This will is applicable only for sidecar
	// proxy deployments.
	InterceptionPort pulumi.Float64PtrInput
	// Set of label tags associated with the Mesh resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// Short name of the Mesh resource to be created.
	Name                  pulumi.StringPtrInput
	NetworkServicesMeshId pulumi.StringPtrInput
	Project               pulumi.StringPtrInput
	// Server-defined URL of this resource.
	SelfLink pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkServicesMeshTimeoutsPtrInput
	// Time the Mesh was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkServicesMeshState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesMeshState)(nil)).Elem()
}

type networkServicesMeshArgs struct {
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// Optional. If set to a valid TCP port (1-65535), instructs the SIDECAR proxy to listen on the specified port of localhost
	// (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be redirected to this port regardless of its actual
	// ip:port destination. If unset, a port '15001' is used as the interception port. This will is applicable only for sidecar
	// proxy deployments.
	InterceptionPort *float64 `pulumi:"interceptionPort"`
	// Set of label tags associated with the Mesh resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// Short name of the Mesh resource to be created.
	Name                  *string                      `pulumi:"name"`
	NetworkServicesMeshId *string                      `pulumi:"networkServicesMeshId"`
	Project               *string                      `pulumi:"project"`
	Timeouts              *NetworkServicesMeshTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NetworkServicesMesh resource.
type NetworkServicesMeshArgs struct {
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// Optional. If set to a valid TCP port (1-65535), instructs the SIDECAR proxy to listen on the specified port of localhost
	// (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be redirected to this port regardless of its actual
	// ip:port destination. If unset, a port '15001' is used as the interception port. This will is applicable only for sidecar
	// proxy deployments.
	InterceptionPort pulumi.Float64PtrInput
	// Set of label tags associated with the Mesh resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// Short name of the Mesh resource to be created.
	Name                  pulumi.StringPtrInput
	NetworkServicesMeshId pulumi.StringPtrInput
	Project               pulumi.StringPtrInput
	Timeouts              NetworkServicesMeshTimeoutsPtrInput
}

func (NetworkServicesMeshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesMeshArgs)(nil)).Elem()
}

type NetworkServicesMeshInput interface {
	pulumi.Input

	ToNetworkServicesMeshOutput() NetworkServicesMeshOutput
	ToNetworkServicesMeshOutputWithContext(ctx context.Context) NetworkServicesMeshOutput
}

func (*NetworkServicesMesh) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesMesh)(nil)).Elem()
}

func (i *NetworkServicesMesh) ToNetworkServicesMeshOutput() NetworkServicesMeshOutput {
	return i.ToNetworkServicesMeshOutputWithContext(context.Background())
}

func (i *NetworkServicesMesh) ToNetworkServicesMeshOutputWithContext(ctx context.Context) NetworkServicesMeshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicesMeshOutput)
}

type NetworkServicesMeshOutput struct{ *pulumi.OutputState }

func (NetworkServicesMeshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesMesh)(nil)).Elem()
}

func (o NetworkServicesMeshOutput) ToNetworkServicesMeshOutput() NetworkServicesMeshOutput {
	return o
}

func (o NetworkServicesMeshOutput) ToNetworkServicesMeshOutputWithContext(ctx context.Context) NetworkServicesMeshOutput {
	return o
}

// Time the Mesh was created in UTC.
func (o NetworkServicesMeshOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A free-text description of the resource. Max length 1024 characters.
func (o NetworkServicesMeshOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkServicesMeshOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. If set to a valid TCP port (1-65535), instructs the SIDECAR proxy to listen on the specified port of localhost
// (127.0.0.1) address. The SIDECAR proxy will expect all traffic to be redirected to this port regardless of its actual
// ip:port destination. If unset, a port '15001' is used as the interception port. This will is applicable only for sidecar
// proxy deployments.
func (o NetworkServicesMeshOutput) InterceptionPort() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.Float64PtrOutput { return v.InterceptionPort }).(pulumi.Float64PtrOutput)
}

// Set of label tags associated with the Mesh resource. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o NetworkServicesMeshOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Short name of the Mesh resource to be created.
func (o NetworkServicesMeshOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkServicesMeshOutput) NetworkServicesMeshId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringOutput { return v.NetworkServicesMeshId }).(pulumi.StringOutput)
}

func (o NetworkServicesMeshOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Server-defined URL of this resource.
func (o NetworkServicesMeshOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkServicesMeshOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkServicesMeshOutput) Timeouts() NetworkServicesMeshTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) NetworkServicesMeshTimeoutsPtrOutput { return v.Timeouts }).(NetworkServicesMeshTimeoutsPtrOutput)
}

// Time the Mesh was updated in UTC.
func (o NetworkServicesMeshOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesMesh) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicesMeshInput)(nil)).Elem(), &NetworkServicesMesh{})
	pulumi.RegisterOutputType(NetworkServicesMeshOutput{})
}
