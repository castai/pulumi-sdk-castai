// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeBackupRestorePlanIamMember struct {
	pulumi.CustomResourceState

	Condition                       GkeBackupRestorePlanIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                            pulumi.StringOutput                             `pulumi:"etag"`
	GkeBackupRestorePlanIamMemberId pulumi.StringOutput                             `pulumi:"gkeBackupRestorePlanIamMemberId"`
	Location                        pulumi.StringOutput                             `pulumi:"location"`
	Member                          pulumi.StringOutput                             `pulumi:"member"`
	Name                            pulumi.StringOutput                             `pulumi:"name"`
	Project                         pulumi.StringOutput                             `pulumi:"project"`
	Role                            pulumi.StringOutput                             `pulumi:"role"`
}

// NewGkeBackupRestorePlanIamMember registers a new resource with the given unique name, arguments, and options.
func NewGkeBackupRestorePlanIamMember(ctx *pulumi.Context,
	name string, args *GkeBackupRestorePlanIamMemberArgs, opts ...pulumi.ResourceOption) (*GkeBackupRestorePlanIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeBackupRestorePlanIamMember
	err = ctx.RegisterPackageResource("google-beta:index/gkeBackupRestorePlanIamMember:GkeBackupRestorePlanIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeBackupRestorePlanIamMember gets an existing GkeBackupRestorePlanIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeBackupRestorePlanIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeBackupRestorePlanIamMemberState, opts ...pulumi.ResourceOption) (*GkeBackupRestorePlanIamMember, error) {
	var resource GkeBackupRestorePlanIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/gkeBackupRestorePlanIamMember:GkeBackupRestorePlanIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeBackupRestorePlanIamMember resources.
type gkeBackupRestorePlanIamMemberState struct {
	Condition                       *GkeBackupRestorePlanIamMemberCondition `pulumi:"condition"`
	Etag                            *string                                 `pulumi:"etag"`
	GkeBackupRestorePlanIamMemberId *string                                 `pulumi:"gkeBackupRestorePlanIamMemberId"`
	Location                        *string                                 `pulumi:"location"`
	Member                          *string                                 `pulumi:"member"`
	Name                            *string                                 `pulumi:"name"`
	Project                         *string                                 `pulumi:"project"`
	Role                            *string                                 `pulumi:"role"`
}

type GkeBackupRestorePlanIamMemberState struct {
	Condition                       GkeBackupRestorePlanIamMemberConditionPtrInput
	Etag                            pulumi.StringPtrInput
	GkeBackupRestorePlanIamMemberId pulumi.StringPtrInput
	Location                        pulumi.StringPtrInput
	Member                          pulumi.StringPtrInput
	Name                            pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringPtrInput
}

func (GkeBackupRestorePlanIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeBackupRestorePlanIamMemberState)(nil)).Elem()
}

type gkeBackupRestorePlanIamMemberArgs struct {
	Condition                       *GkeBackupRestorePlanIamMemberCondition `pulumi:"condition"`
	GkeBackupRestorePlanIamMemberId *string                                 `pulumi:"gkeBackupRestorePlanIamMemberId"`
	Location                        *string                                 `pulumi:"location"`
	Member                          string                                  `pulumi:"member"`
	Name                            *string                                 `pulumi:"name"`
	Project                         *string                                 `pulumi:"project"`
	Role                            string                                  `pulumi:"role"`
}

// The set of arguments for constructing a GkeBackupRestorePlanIamMember resource.
type GkeBackupRestorePlanIamMemberArgs struct {
	Condition                       GkeBackupRestorePlanIamMemberConditionPtrInput
	GkeBackupRestorePlanIamMemberId pulumi.StringPtrInput
	Location                        pulumi.StringPtrInput
	Member                          pulumi.StringInput
	Name                            pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringInput
}

func (GkeBackupRestorePlanIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeBackupRestorePlanIamMemberArgs)(nil)).Elem()
}

type GkeBackupRestorePlanIamMemberInput interface {
	pulumi.Input

	ToGkeBackupRestorePlanIamMemberOutput() GkeBackupRestorePlanIamMemberOutput
	ToGkeBackupRestorePlanIamMemberOutputWithContext(ctx context.Context) GkeBackupRestorePlanIamMemberOutput
}

func (*GkeBackupRestorePlanIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeBackupRestorePlanIamMember)(nil)).Elem()
}

func (i *GkeBackupRestorePlanIamMember) ToGkeBackupRestorePlanIamMemberOutput() GkeBackupRestorePlanIamMemberOutput {
	return i.ToGkeBackupRestorePlanIamMemberOutputWithContext(context.Background())
}

func (i *GkeBackupRestorePlanIamMember) ToGkeBackupRestorePlanIamMemberOutputWithContext(ctx context.Context) GkeBackupRestorePlanIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeBackupRestorePlanIamMemberOutput)
}

type GkeBackupRestorePlanIamMemberOutput struct{ *pulumi.OutputState }

func (GkeBackupRestorePlanIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeBackupRestorePlanIamMember)(nil)).Elem()
}

func (o GkeBackupRestorePlanIamMemberOutput) ToGkeBackupRestorePlanIamMemberOutput() GkeBackupRestorePlanIamMemberOutput {
	return o
}

func (o GkeBackupRestorePlanIamMemberOutput) ToGkeBackupRestorePlanIamMemberOutputWithContext(ctx context.Context) GkeBackupRestorePlanIamMemberOutput {
	return o
}

func (o GkeBackupRestorePlanIamMemberOutput) Condition() GkeBackupRestorePlanIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamMember) GkeBackupRestorePlanIamMemberConditionPtrOutput {
		return v.Condition
	}).(GkeBackupRestorePlanIamMemberConditionPtrOutput)
}

func (o GkeBackupRestorePlanIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamMemberOutput) GkeBackupRestorePlanIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamMember) pulumi.StringOutput { return v.GkeBackupRestorePlanIamMemberId }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeBackupRestorePlanIamMemberInput)(nil)).Elem(), &GkeBackupRestorePlanIamMember{})
	pulumi.RegisterOutputType(GkeBackupRestorePlanIamMemberOutput{})
}
