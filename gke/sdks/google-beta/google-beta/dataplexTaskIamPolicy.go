// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexTaskIamPolicy struct {
	pulumi.CustomResourceState

	DataplexTaskIamPolicyId pulumi.StringOutput `pulumi:"dataplexTaskIamPolicyId"`
	Etag                    pulumi.StringOutput `pulumi:"etag"`
	Lake                    pulumi.StringOutput `pulumi:"lake"`
	Location                pulumi.StringOutput `pulumi:"location"`
	PolicyData              pulumi.StringOutput `pulumi:"policyData"`
	Project                 pulumi.StringOutput `pulumi:"project"`
	TaskId                  pulumi.StringOutput `pulumi:"taskId"`
}

// NewDataplexTaskIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDataplexTaskIamPolicy(ctx *pulumi.Context,
	name string, args *DataplexTaskIamPolicyArgs, opts ...pulumi.ResourceOption) (*DataplexTaskIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Lake == nil {
		return nil, errors.New("invalid value for required argument 'Lake'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.TaskId == nil {
		return nil, errors.New("invalid value for required argument 'TaskId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexTaskIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/dataplexTaskIamPolicy:DataplexTaskIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexTaskIamPolicy gets an existing DataplexTaskIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexTaskIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexTaskIamPolicyState, opts ...pulumi.ResourceOption) (*DataplexTaskIamPolicy, error) {
	var resource DataplexTaskIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexTaskIamPolicy:DataplexTaskIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexTaskIamPolicy resources.
type dataplexTaskIamPolicyState struct {
	DataplexTaskIamPolicyId *string `pulumi:"dataplexTaskIamPolicyId"`
	Etag                    *string `pulumi:"etag"`
	Lake                    *string `pulumi:"lake"`
	Location                *string `pulumi:"location"`
	PolicyData              *string `pulumi:"policyData"`
	Project                 *string `pulumi:"project"`
	TaskId                  *string `pulumi:"taskId"`
}

type DataplexTaskIamPolicyState struct {
	DataplexTaskIamPolicyId pulumi.StringPtrInput
	Etag                    pulumi.StringPtrInput
	Lake                    pulumi.StringPtrInput
	Location                pulumi.StringPtrInput
	PolicyData              pulumi.StringPtrInput
	Project                 pulumi.StringPtrInput
	TaskId                  pulumi.StringPtrInput
}

func (DataplexTaskIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexTaskIamPolicyState)(nil)).Elem()
}

type dataplexTaskIamPolicyArgs struct {
	DataplexTaskIamPolicyId *string `pulumi:"dataplexTaskIamPolicyId"`
	Lake                    string  `pulumi:"lake"`
	Location                *string `pulumi:"location"`
	PolicyData              string  `pulumi:"policyData"`
	Project                 *string `pulumi:"project"`
	TaskId                  string  `pulumi:"taskId"`
}

// The set of arguments for constructing a DataplexTaskIamPolicy resource.
type DataplexTaskIamPolicyArgs struct {
	DataplexTaskIamPolicyId pulumi.StringPtrInput
	Lake                    pulumi.StringInput
	Location                pulumi.StringPtrInput
	PolicyData              pulumi.StringInput
	Project                 pulumi.StringPtrInput
	TaskId                  pulumi.StringInput
}

func (DataplexTaskIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexTaskIamPolicyArgs)(nil)).Elem()
}

type DataplexTaskIamPolicyInput interface {
	pulumi.Input

	ToDataplexTaskIamPolicyOutput() DataplexTaskIamPolicyOutput
	ToDataplexTaskIamPolicyOutputWithContext(ctx context.Context) DataplexTaskIamPolicyOutput
}

func (*DataplexTaskIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexTaskIamPolicy)(nil)).Elem()
}

func (i *DataplexTaskIamPolicy) ToDataplexTaskIamPolicyOutput() DataplexTaskIamPolicyOutput {
	return i.ToDataplexTaskIamPolicyOutputWithContext(context.Background())
}

func (i *DataplexTaskIamPolicy) ToDataplexTaskIamPolicyOutputWithContext(ctx context.Context) DataplexTaskIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexTaskIamPolicyOutput)
}

type DataplexTaskIamPolicyOutput struct{ *pulumi.OutputState }

func (DataplexTaskIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexTaskIamPolicy)(nil)).Elem()
}

func (o DataplexTaskIamPolicyOutput) ToDataplexTaskIamPolicyOutput() DataplexTaskIamPolicyOutput {
	return o
}

func (o DataplexTaskIamPolicyOutput) ToDataplexTaskIamPolicyOutputWithContext(ctx context.Context) DataplexTaskIamPolicyOutput {
	return o
}

func (o DataplexTaskIamPolicyOutput) DataplexTaskIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamPolicy) pulumi.StringOutput { return v.DataplexTaskIamPolicyId }).(pulumi.StringOutput)
}

func (o DataplexTaskIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexTaskIamPolicyOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamPolicy) pulumi.StringOutput { return v.Lake }).(pulumi.StringOutput)
}

func (o DataplexTaskIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexTaskIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o DataplexTaskIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataplexTaskIamPolicyOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamPolicy) pulumi.StringOutput { return v.TaskId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexTaskIamPolicyInput)(nil)).Elem(), &DataplexTaskIamPolicy{})
	pulumi.RegisterOutputType(DataplexTaskIamPolicyOutput{})
}
