// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeNetworkAttachment struct {
	pulumi.CustomResourceState

	// An array of connections for all the producers connected to this network attachment.
	ConnectionEndpoints ComputeNetworkAttachmentConnectionEndpointArrayOutput `pulumi:"connectionEndpoints"`
	// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service
	// attachment is one that always accepts the connection from consumer forwarding rules. Possible values:
	// ["ACCEPT_AUTOMATIC", "ACCEPT_MANUAL", "INVALID"]
	ConnectionPreference pulumi.StringOutput `pulumi:"connectionPreference"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An
	// up-to-date fingerprint must be provided in order to patch.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// Type of the resource.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of
	// the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is
	// assured that the Network Attachment belongs to the same network as all the subnetworks.
	Network pulumi.StringOutput `pulumi:"network"`
	// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerAcceptLists pulumi.StringArrayOutput `pulumi:"producerAcceptLists"`
	// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or
	// number.
	ProducerRejectLists pulumi.StringArrayOutput `pulumi:"producerRejectLists"`
	Project             pulumi.StringOutput      `pulumi:"project"`
	// URL of the region where the network attachment resides. This field applies only to the region resource. You must specify
	// this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Region pulumi.StringOutput `pulumi:"region"`
	// Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Server-defined URL for this resource's resource id.
	SelfLinkWithId pulumi.StringOutput `pulumi:"selfLinkWithId"`
	// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the
	// producers that connect to this network attachment.
	Subnetworks pulumi.StringArrayOutput                  `pulumi:"subnetworks"`
	Timeouts    ComputeNetworkAttachmentTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeNetworkAttachment registers a new resource with the given unique name, arguments, and options.
func NewComputeNetworkAttachment(ctx *pulumi.Context,
	name string, args *ComputeNetworkAttachmentArgs, opts ...pulumi.ResourceOption) (*ComputeNetworkAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionPreference == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionPreference'")
	}
	if args.Subnetworks == nil {
		return nil, errors.New("invalid value for required argument 'Subnetworks'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeNetworkAttachment
	err = ctx.RegisterPackageResource("google-beta:index/computeNetworkAttachment:ComputeNetworkAttachment", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeNetworkAttachment gets an existing ComputeNetworkAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeNetworkAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeNetworkAttachmentState, opts ...pulumi.ResourceOption) (*ComputeNetworkAttachment, error) {
	var resource ComputeNetworkAttachment
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeNetworkAttachment:ComputeNetworkAttachment", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeNetworkAttachment resources.
type computeNetworkAttachmentState struct {
	// An array of connections for all the producers connected to this network attachment.
	ConnectionEndpoints []ComputeNetworkAttachmentConnectionEndpoint `pulumi:"connectionEndpoints"`
	// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service
	// attachment is one that always accepts the connection from consumer forwarding rules. Possible values:
	// ["ACCEPT_AUTOMATIC", "ACCEPT_MANUAL", "INVALID"]
	ConnectionPreference *string `pulumi:"connectionPreference"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An
	// up-to-date fingerprint must be provided in order to patch.
	Fingerprint *string `pulumi:"fingerprint"`
	// Type of the resource.
	Kind *string `pulumi:"kind"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of
	// the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is
	// assured that the Network Attachment belongs to the same network as all the subnetworks.
	Network *string `pulumi:"network"`
	// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerAcceptLists []string `pulumi:"producerAcceptLists"`
	// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or
	// number.
	ProducerRejectLists []string `pulumi:"producerRejectLists"`
	Project             *string  `pulumi:"project"`
	// URL of the region where the network attachment resides. This field applies only to the region resource. You must specify
	// this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Region *string `pulumi:"region"`
	// Server-defined URL for the resource.
	SelfLink *string `pulumi:"selfLink"`
	// Server-defined URL for this resource's resource id.
	SelfLinkWithId *string `pulumi:"selfLinkWithId"`
	// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the
	// producers that connect to this network attachment.
	Subnetworks []string                          `pulumi:"subnetworks"`
	Timeouts    *ComputeNetworkAttachmentTimeouts `pulumi:"timeouts"`
}

type ComputeNetworkAttachmentState struct {
	// An array of connections for all the producers connected to this network attachment.
	ConnectionEndpoints ComputeNetworkAttachmentConnectionEndpointArrayInput
	// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service
	// attachment is one that always accepts the connection from consumer forwarding rules. Possible values:
	// ["ACCEPT_AUTOMATIC", "ACCEPT_MANUAL", "INVALID"]
	ConnectionPreference pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An
	// up-to-date fingerprint must be provided in order to patch.
	Fingerprint pulumi.StringPtrInput
	// Type of the resource.
	Kind pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of
	// the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is
	// assured that the Network Attachment belongs to the same network as all the subnetworks.
	Network pulumi.StringPtrInput
	// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerAcceptLists pulumi.StringArrayInput
	// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or
	// number.
	ProducerRejectLists pulumi.StringArrayInput
	Project             pulumi.StringPtrInput
	// URL of the region where the network attachment resides. This field applies only to the region resource. You must specify
	// this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Region pulumi.StringPtrInput
	// Server-defined URL for the resource.
	SelfLink pulumi.StringPtrInput
	// Server-defined URL for this resource's resource id.
	SelfLinkWithId pulumi.StringPtrInput
	// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the
	// producers that connect to this network attachment.
	Subnetworks pulumi.StringArrayInput
	Timeouts    ComputeNetworkAttachmentTimeoutsPtrInput
}

func (ComputeNetworkAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeNetworkAttachmentState)(nil)).Elem()
}

type computeNetworkAttachmentArgs struct {
	// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service
	// attachment is one that always accepts the connection from consumer forwarding rules. Possible values:
	// ["ACCEPT_AUTOMATIC", "ACCEPT_MANUAL", "INVALID"]
	ConnectionPreference string `pulumi:"connectionPreference"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerAcceptLists []string `pulumi:"producerAcceptLists"`
	// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or
	// number.
	ProducerRejectLists []string `pulumi:"producerRejectLists"`
	Project             *string  `pulumi:"project"`
	// URL of the region where the network attachment resides. This field applies only to the region resource. You must specify
	// this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Region *string `pulumi:"region"`
	// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the
	// producers that connect to this network attachment.
	Subnetworks []string                          `pulumi:"subnetworks"`
	Timeouts    *ComputeNetworkAttachmentTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeNetworkAttachment resource.
type ComputeNetworkAttachmentArgs struct {
	// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service
	// attachment is one that always accepts the connection from consumer forwarding rules. Possible values:
	// ["ACCEPT_AUTOMATIC", "ACCEPT_MANUAL", "INVALID"]
	ConnectionPreference pulumi.StringInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
	ProducerAcceptLists pulumi.StringArrayInput
	// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or
	// number.
	ProducerRejectLists pulumi.StringArrayInput
	Project             pulumi.StringPtrInput
	// URL of the region where the network attachment resides. This field applies only to the region resource. You must specify
	// this field as part of the HTTP request URL. It is not settable as a field in the request body.
	Region pulumi.StringPtrInput
	// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the
	// producers that connect to this network attachment.
	Subnetworks pulumi.StringArrayInput
	Timeouts    ComputeNetworkAttachmentTimeoutsPtrInput
}

func (ComputeNetworkAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeNetworkAttachmentArgs)(nil)).Elem()
}

type ComputeNetworkAttachmentInput interface {
	pulumi.Input

	ToComputeNetworkAttachmentOutput() ComputeNetworkAttachmentOutput
	ToComputeNetworkAttachmentOutputWithContext(ctx context.Context) ComputeNetworkAttachmentOutput
}

func (*ComputeNetworkAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNetworkAttachment)(nil)).Elem()
}

func (i *ComputeNetworkAttachment) ToComputeNetworkAttachmentOutput() ComputeNetworkAttachmentOutput {
	return i.ToComputeNetworkAttachmentOutputWithContext(context.Background())
}

func (i *ComputeNetworkAttachment) ToComputeNetworkAttachmentOutputWithContext(ctx context.Context) ComputeNetworkAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeNetworkAttachmentOutput)
}

type ComputeNetworkAttachmentOutput struct{ *pulumi.OutputState }

func (ComputeNetworkAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNetworkAttachment)(nil)).Elem()
}

func (o ComputeNetworkAttachmentOutput) ToComputeNetworkAttachmentOutput() ComputeNetworkAttachmentOutput {
	return o
}

func (o ComputeNetworkAttachmentOutput) ToComputeNetworkAttachmentOutputWithContext(ctx context.Context) ComputeNetworkAttachmentOutput {
	return o
}

// An array of connections for all the producers connected to this network attachment.
func (o ComputeNetworkAttachmentOutput) ConnectionEndpoints() ComputeNetworkAttachmentConnectionEndpointArrayOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) ComputeNetworkAttachmentConnectionEndpointArrayOutput {
		return v.ConnectionEndpoints
	}).(ComputeNetworkAttachmentConnectionEndpointArrayOutput)
}

// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service
// attachment is one that always accepts the connection from consumer forwarding rules. Possible values:
// ["ACCEPT_AUTOMATIC", "ACCEPT_MANUAL", "INVALID"]
func (o ComputeNetworkAttachmentOutput) ConnectionPreference() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.ConnectionPreference }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeNetworkAttachmentOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o ComputeNetworkAttachmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An
// up-to-date fingerprint must be provided in order to patch.
func (o ComputeNetworkAttachmentOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ComputeNetworkAttachmentOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeNetworkAttachmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of
// the first subnetwork associated. Because it is required that all the subnetworks must be from the same network, it is
// assured that the Network Attachment belongs to the same network as all the subnetworks.
func (o ComputeNetworkAttachmentOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
func (o ComputeNetworkAttachmentOutput) ProducerAcceptLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringArrayOutput { return v.ProducerAcceptLists }).(pulumi.StringArrayOutput)
}

// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or
// number.
func (o ComputeNetworkAttachmentOutput) ProducerRejectLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringArrayOutput { return v.ProducerRejectLists }).(pulumi.StringArrayOutput)
}

func (o ComputeNetworkAttachmentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// URL of the region where the network attachment resides. This field applies only to the region resource. You must specify
// this field as part of the HTTP request URL. It is not settable as a field in the request body.
func (o ComputeNetworkAttachmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Server-defined URL for the resource.
func (o ComputeNetworkAttachmentOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Server-defined URL for this resource's resource id.
func (o ComputeNetworkAttachmentOutput) SelfLinkWithId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringOutput { return v.SelfLinkWithId }).(pulumi.StringOutput)
}

// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the
// producers that connect to this network attachment.
func (o ComputeNetworkAttachmentOutput) Subnetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) pulumi.StringArrayOutput { return v.Subnetworks }).(pulumi.StringArrayOutput)
}

func (o ComputeNetworkAttachmentOutput) Timeouts() ComputeNetworkAttachmentTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeNetworkAttachment) ComputeNetworkAttachmentTimeoutsPtrOutput { return v.Timeouts }).(ComputeNetworkAttachmentTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeNetworkAttachmentInput)(nil)).Elem(), &ComputeNetworkAttachment{})
	pulumi.RegisterOutputType(ComputeNetworkAttachmentOutput{})
}
