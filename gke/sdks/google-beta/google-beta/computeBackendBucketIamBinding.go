// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeBackendBucketIamBinding struct {
	pulumi.CustomResourceState

	ComputeBackendBucketIamBindingId pulumi.StringOutput                              `pulumi:"computeBackendBucketIamBindingId"`
	Condition                        ComputeBackendBucketIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                             pulumi.StringOutput                              `pulumi:"etag"`
	Members                          pulumi.StringArrayOutput                         `pulumi:"members"`
	Name                             pulumi.StringOutput                              `pulumi:"name"`
	Project                          pulumi.StringOutput                              `pulumi:"project"`
	Role                             pulumi.StringOutput                              `pulumi:"role"`
}

// NewComputeBackendBucketIamBinding registers a new resource with the given unique name, arguments, and options.
func NewComputeBackendBucketIamBinding(ctx *pulumi.Context,
	name string, args *ComputeBackendBucketIamBindingArgs, opts ...pulumi.ResourceOption) (*ComputeBackendBucketIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeBackendBucketIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/computeBackendBucketIamBinding:ComputeBackendBucketIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeBackendBucketIamBinding gets an existing ComputeBackendBucketIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeBackendBucketIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeBackendBucketIamBindingState, opts ...pulumi.ResourceOption) (*ComputeBackendBucketIamBinding, error) {
	var resource ComputeBackendBucketIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeBackendBucketIamBinding:ComputeBackendBucketIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeBackendBucketIamBinding resources.
type computeBackendBucketIamBindingState struct {
	ComputeBackendBucketIamBindingId *string                                  `pulumi:"computeBackendBucketIamBindingId"`
	Condition                        *ComputeBackendBucketIamBindingCondition `pulumi:"condition"`
	Etag                             *string                                  `pulumi:"etag"`
	Members                          []string                                 `pulumi:"members"`
	Name                             *string                                  `pulumi:"name"`
	Project                          *string                                  `pulumi:"project"`
	Role                             *string                                  `pulumi:"role"`
}

type ComputeBackendBucketIamBindingState struct {
	ComputeBackendBucketIamBindingId pulumi.StringPtrInput
	Condition                        ComputeBackendBucketIamBindingConditionPtrInput
	Etag                             pulumi.StringPtrInput
	Members                          pulumi.StringArrayInput
	Name                             pulumi.StringPtrInput
	Project                          pulumi.StringPtrInput
	Role                             pulumi.StringPtrInput
}

func (ComputeBackendBucketIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendBucketIamBindingState)(nil)).Elem()
}

type computeBackendBucketIamBindingArgs struct {
	ComputeBackendBucketIamBindingId *string                                  `pulumi:"computeBackendBucketIamBindingId"`
	Condition                        *ComputeBackendBucketIamBindingCondition `pulumi:"condition"`
	Members                          []string                                 `pulumi:"members"`
	Name                             *string                                  `pulumi:"name"`
	Project                          *string                                  `pulumi:"project"`
	Role                             string                                   `pulumi:"role"`
}

// The set of arguments for constructing a ComputeBackendBucketIamBinding resource.
type ComputeBackendBucketIamBindingArgs struct {
	ComputeBackendBucketIamBindingId pulumi.StringPtrInput
	Condition                        ComputeBackendBucketIamBindingConditionPtrInput
	Members                          pulumi.StringArrayInput
	Name                             pulumi.StringPtrInput
	Project                          pulumi.StringPtrInput
	Role                             pulumi.StringInput
}

func (ComputeBackendBucketIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendBucketIamBindingArgs)(nil)).Elem()
}

type ComputeBackendBucketIamBindingInput interface {
	pulumi.Input

	ToComputeBackendBucketIamBindingOutput() ComputeBackendBucketIamBindingOutput
	ToComputeBackendBucketIamBindingOutputWithContext(ctx context.Context) ComputeBackendBucketIamBindingOutput
}

func (*ComputeBackendBucketIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendBucketIamBinding)(nil)).Elem()
}

func (i *ComputeBackendBucketIamBinding) ToComputeBackendBucketIamBindingOutput() ComputeBackendBucketIamBindingOutput {
	return i.ToComputeBackendBucketIamBindingOutputWithContext(context.Background())
}

func (i *ComputeBackendBucketIamBinding) ToComputeBackendBucketIamBindingOutputWithContext(ctx context.Context) ComputeBackendBucketIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBackendBucketIamBindingOutput)
}

type ComputeBackendBucketIamBindingOutput struct{ *pulumi.OutputState }

func (ComputeBackendBucketIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendBucketIamBinding)(nil)).Elem()
}

func (o ComputeBackendBucketIamBindingOutput) ToComputeBackendBucketIamBindingOutput() ComputeBackendBucketIamBindingOutput {
	return o
}

func (o ComputeBackendBucketIamBindingOutput) ToComputeBackendBucketIamBindingOutputWithContext(ctx context.Context) ComputeBackendBucketIamBindingOutput {
	return o
}

func (o ComputeBackendBucketIamBindingOutput) ComputeBackendBucketIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamBinding) pulumi.StringOutput { return v.ComputeBackendBucketIamBindingId }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamBindingOutput) Condition() ComputeBackendBucketIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamBinding) ComputeBackendBucketIamBindingConditionPtrOutput {
		return v.Condition
	}).(ComputeBackendBucketIamBindingConditionPtrOutput)
}

func (o ComputeBackendBucketIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o ComputeBackendBucketIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeBackendBucketIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendBucketIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeBackendBucketIamBindingInput)(nil)).Elem(), &ComputeBackendBucketIamBinding{})
	pulumi.RegisterOutputType(ComputeBackendBucketIamBindingOutput{})
}
