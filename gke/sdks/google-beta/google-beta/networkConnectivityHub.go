// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkConnectivityHub struct {
	pulumi.CustomResourceState

	// Output only. The time the hub was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// An optional description of the hub.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Whether Private Service Connect transitivity is enabled for the hub. If true, Private Service Connect endpoints in VPC
	// spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.
	ExportPsc pulumi.BoolOutput `pulumi:"exportPsc"`
	// Optional labels in key:value format. For more information about labels, see [Requirements for
	// labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements). **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Immutable. The name of the hub. Hub names must be unique. They use the following form:
	// 'projects/{project_number}/locations/global/hubs/{hub_id}'
	Name                     pulumi.StringOutput `pulumi:"name"`
	NetworkConnectivityHubId pulumi.StringOutput `pulumi:"networkConnectivityHubId"`
	// Optional. The topology implemented in this hub. Currently, this field is only used when policyMode = PRESET. The
	// available preset topologies are MESH and STAR. If presetTopology is unspecified and policyMode = PRESET, the
	// presetTopology defaults to MESH. When policyMode = CUSTOM, the presetTopology is set to PRESET_TOPOLOGY_UNSPECIFIED.
	// Possible values: ["MESH", "STAR"]
	PresetTopology pulumi.StringOutput `pulumi:"presetTopology"`
	Project        pulumi.StringOutput `pulumi:"project"`
	// The VPC network associated with this hub's spokes. All of the VPN tunnels, VLAN attachments, and router appliance
	// instances referenced by this hub's spokes must belong to this VPC network. This field is read-only. Network Connectivity
	// Center automatically populates it based on the set of spokes attached to the hub.
	RoutingVpcs NetworkConnectivityHubRoutingVpcArrayOutput `pulumi:"routingVpcs"`
	// Output only. The current lifecycle state of this hub.
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                  `pulumi:"terraformLabels"`
	Timeouts        NetworkConnectivityHubTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted
	// and another with the same name is created, the new hub is assigned a different unique_id.
	UniqueId pulumi.StringOutput `pulumi:"uniqueId"`
	// Output only. The time the hub was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkConnectivityHub registers a new resource with the given unique name, arguments, and options.
func NewNetworkConnectivityHub(ctx *pulumi.Context,
	name string, args *NetworkConnectivityHubArgs, opts ...pulumi.ResourceOption) (*NetworkConnectivityHub, error) {
	if args == nil {
		args = &NetworkConnectivityHubArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkConnectivityHub
	err = ctx.RegisterPackageResource("google-beta:index/networkConnectivityHub:NetworkConnectivityHub", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkConnectivityHub gets an existing NetworkConnectivityHub resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkConnectivityHub(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkConnectivityHubState, opts ...pulumi.ResourceOption) (*NetworkConnectivityHub, error) {
	var resource NetworkConnectivityHub
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkConnectivityHub:NetworkConnectivityHub", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkConnectivityHub resources.
type networkConnectivityHubState struct {
	// Output only. The time the hub was created.
	CreateTime *string `pulumi:"createTime"`
	// An optional description of the hub.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Whether Private Service Connect transitivity is enabled for the hub. If true, Private Service Connect endpoints in VPC
	// spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.
	ExportPsc *bool `pulumi:"exportPsc"`
	// Optional labels in key:value format. For more information about labels, see [Requirements for
	// labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements). **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Immutable. The name of the hub. Hub names must be unique. They use the following form:
	// 'projects/{project_number}/locations/global/hubs/{hub_id}'
	Name                     *string `pulumi:"name"`
	NetworkConnectivityHubId *string `pulumi:"networkConnectivityHubId"`
	// Optional. The topology implemented in this hub. Currently, this field is only used when policyMode = PRESET. The
	// available preset topologies are MESH and STAR. If presetTopology is unspecified and policyMode = PRESET, the
	// presetTopology defaults to MESH. When policyMode = CUSTOM, the presetTopology is set to PRESET_TOPOLOGY_UNSPECIFIED.
	// Possible values: ["MESH", "STAR"]
	PresetTopology *string `pulumi:"presetTopology"`
	Project        *string `pulumi:"project"`
	// The VPC network associated with this hub's spokes. All of the VPN tunnels, VLAN attachments, and router appliance
	// instances referenced by this hub's spokes must belong to this VPC network. This field is read-only. Network Connectivity
	// Center automatically populates it based on the set of spokes attached to the hub.
	RoutingVpcs []NetworkConnectivityHubRoutingVpc `pulumi:"routingVpcs"`
	// Output only. The current lifecycle state of this hub.
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string               `pulumi:"terraformLabels"`
	Timeouts        *NetworkConnectivityHubTimeouts `pulumi:"timeouts"`
	// Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted
	// and another with the same name is created, the new hub is assigned a different unique_id.
	UniqueId *string `pulumi:"uniqueId"`
	// Output only. The time the hub was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkConnectivityHubState struct {
	// Output only. The time the hub was created.
	CreateTime pulumi.StringPtrInput
	// An optional description of the hub.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Whether Private Service Connect transitivity is enabled for the hub. If true, Private Service Connect endpoints in VPC
	// spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.
	ExportPsc pulumi.BoolPtrInput
	// Optional labels in key:value format. For more information about labels, see [Requirements for
	// labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements). **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Immutable. The name of the hub. Hub names must be unique. They use the following form:
	// 'projects/{project_number}/locations/global/hubs/{hub_id}'
	Name                     pulumi.StringPtrInput
	NetworkConnectivityHubId pulumi.StringPtrInput
	// Optional. The topology implemented in this hub. Currently, this field is only used when policyMode = PRESET. The
	// available preset topologies are MESH and STAR. If presetTopology is unspecified and policyMode = PRESET, the
	// presetTopology defaults to MESH. When policyMode = CUSTOM, the presetTopology is set to PRESET_TOPOLOGY_UNSPECIFIED.
	// Possible values: ["MESH", "STAR"]
	PresetTopology pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	// The VPC network associated with this hub's spokes. All of the VPN tunnels, VLAN attachments, and router appliance
	// instances referenced by this hub's spokes must belong to this VPC network. This field is read-only. Network Connectivity
	// Center automatically populates it based on the set of spokes attached to the hub.
	RoutingVpcs NetworkConnectivityHubRoutingVpcArrayInput
	// Output only. The current lifecycle state of this hub.
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkConnectivityHubTimeoutsPtrInput
	// Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted
	// and another with the same name is created, the new hub is assigned a different unique_id.
	UniqueId pulumi.StringPtrInput
	// Output only. The time the hub was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkConnectivityHubState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectivityHubState)(nil)).Elem()
}

type networkConnectivityHubArgs struct {
	// An optional description of the hub.
	Description *string `pulumi:"description"`
	// Whether Private Service Connect transitivity is enabled for the hub. If true, Private Service Connect endpoints in VPC
	// spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.
	ExportPsc *bool `pulumi:"exportPsc"`
	// Optional labels in key:value format. For more information about labels, see [Requirements for
	// labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements). **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Immutable. The name of the hub. Hub names must be unique. They use the following form:
	// 'projects/{project_number}/locations/global/hubs/{hub_id}'
	Name                     *string `pulumi:"name"`
	NetworkConnectivityHubId *string `pulumi:"networkConnectivityHubId"`
	// Optional. The topology implemented in this hub. Currently, this field is only used when policyMode = PRESET. The
	// available preset topologies are MESH and STAR. If presetTopology is unspecified and policyMode = PRESET, the
	// presetTopology defaults to MESH. When policyMode = CUSTOM, the presetTopology is set to PRESET_TOPOLOGY_UNSPECIFIED.
	// Possible values: ["MESH", "STAR"]
	PresetTopology *string                         `pulumi:"presetTopology"`
	Project        *string                         `pulumi:"project"`
	Timeouts       *NetworkConnectivityHubTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NetworkConnectivityHub resource.
type NetworkConnectivityHubArgs struct {
	// An optional description of the hub.
	Description pulumi.StringPtrInput
	// Whether Private Service Connect transitivity is enabled for the hub. If true, Private Service Connect endpoints in VPC
	// spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.
	ExportPsc pulumi.BoolPtrInput
	// Optional labels in key:value format. For more information about labels, see [Requirements for
	// labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements). **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Immutable. The name of the hub. Hub names must be unique. They use the following form:
	// 'projects/{project_number}/locations/global/hubs/{hub_id}'
	Name                     pulumi.StringPtrInput
	NetworkConnectivityHubId pulumi.StringPtrInput
	// Optional. The topology implemented in this hub. Currently, this field is only used when policyMode = PRESET. The
	// available preset topologies are MESH and STAR. If presetTopology is unspecified and policyMode = PRESET, the
	// presetTopology defaults to MESH. When policyMode = CUSTOM, the presetTopology is set to PRESET_TOPOLOGY_UNSPECIFIED.
	// Possible values: ["MESH", "STAR"]
	PresetTopology pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	Timeouts       NetworkConnectivityHubTimeoutsPtrInput
}

func (NetworkConnectivityHubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectivityHubArgs)(nil)).Elem()
}

type NetworkConnectivityHubInput interface {
	pulumi.Input

	ToNetworkConnectivityHubOutput() NetworkConnectivityHubOutput
	ToNetworkConnectivityHubOutputWithContext(ctx context.Context) NetworkConnectivityHubOutput
}

func (*NetworkConnectivityHub) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectivityHub)(nil)).Elem()
}

func (i *NetworkConnectivityHub) ToNetworkConnectivityHubOutput() NetworkConnectivityHubOutput {
	return i.ToNetworkConnectivityHubOutputWithContext(context.Background())
}

func (i *NetworkConnectivityHub) ToNetworkConnectivityHubOutputWithContext(ctx context.Context) NetworkConnectivityHubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectivityHubOutput)
}

type NetworkConnectivityHubOutput struct{ *pulumi.OutputState }

func (NetworkConnectivityHubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectivityHub)(nil)).Elem()
}

func (o NetworkConnectivityHubOutput) ToNetworkConnectivityHubOutput() NetworkConnectivityHubOutput {
	return o
}

func (o NetworkConnectivityHubOutput) ToNetworkConnectivityHubOutputWithContext(ctx context.Context) NetworkConnectivityHubOutput {
	return o
}

// Output only. The time the hub was created.
func (o NetworkConnectivityHubOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// An optional description of the hub.
func (o NetworkConnectivityHubOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkConnectivityHubOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Whether Private Service Connect transitivity is enabled for the hub. If true, Private Service Connect endpoints in VPC
// spokes attached to the hub are made accessible to other VPC spokes attached to the hub. The default value is false.
func (o NetworkConnectivityHubOutput) ExportPsc() pulumi.BoolOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.BoolOutput { return v.ExportPsc }).(pulumi.BoolOutput)
}

// Optional labels in key:value format. For more information about labels, see [Requirements for
// labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements). **Note**: This field is
// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o NetworkConnectivityHubOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Immutable. The name of the hub. Hub names must be unique. They use the following form:
// 'projects/{project_number}/locations/global/hubs/{hub_id}'
func (o NetworkConnectivityHubOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkConnectivityHubOutput) NetworkConnectivityHubId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringOutput { return v.NetworkConnectivityHubId }).(pulumi.StringOutput)
}

// Optional. The topology implemented in this hub. Currently, this field is only used when policyMode = PRESET. The
// available preset topologies are MESH and STAR. If presetTopology is unspecified and policyMode = PRESET, the
// presetTopology defaults to MESH. When policyMode = CUSTOM, the presetTopology is set to PRESET_TOPOLOGY_UNSPECIFIED.
// Possible values: ["MESH", "STAR"]
func (o NetworkConnectivityHubOutput) PresetTopology() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringOutput { return v.PresetTopology }).(pulumi.StringOutput)
}

func (o NetworkConnectivityHubOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The VPC network associated with this hub's spokes. All of the VPN tunnels, VLAN attachments, and router appliance
// instances referenced by this hub's spokes must belong to this VPC network. This field is read-only. Network Connectivity
// Center automatically populates it based on the set of spokes attached to the hub.
func (o NetworkConnectivityHubOutput) RoutingVpcs() NetworkConnectivityHubRoutingVpcArrayOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) NetworkConnectivityHubRoutingVpcArrayOutput { return v.RoutingVpcs }).(NetworkConnectivityHubRoutingVpcArrayOutput)
}

// Output only. The current lifecycle state of this hub.
func (o NetworkConnectivityHubOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkConnectivityHubOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkConnectivityHubOutput) Timeouts() NetworkConnectivityHubTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) NetworkConnectivityHubTimeoutsPtrOutput { return v.Timeouts }).(NetworkConnectivityHubTimeoutsPtrOutput)
}

// Output only. The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted
// and another with the same name is created, the new hub is assigned a different unique_id.
func (o NetworkConnectivityHubOutput) UniqueId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringOutput { return v.UniqueId }).(pulumi.StringOutput)
}

// Output only. The time the hub was last updated.
func (o NetworkConnectivityHubOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityHub) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectivityHubInput)(nil)).Elem(), &NetworkConnectivityHub{})
	pulumi.RegisterOutputType(NetworkConnectivityHubOutput{})
}
