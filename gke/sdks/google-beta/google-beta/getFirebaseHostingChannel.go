// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupFirebaseHostingChannel(ctx *pulumi.Context, args *LookupFirebaseHostingChannelArgs, opts ...pulumi.InvokeOption) (*LookupFirebaseHostingChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupFirebaseHostingChannelResult
	err = ctx.InvokePackage("google-beta:index/getFirebaseHostingChannel:getFirebaseHostingChannel", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFirebaseHostingChannel.
type LookupFirebaseHostingChannelArgs struct {
	ChannelId string  `pulumi:"channelId"`
	Id        *string `pulumi:"id"`
	SiteId    string  `pulumi:"siteId"`
}

// A collection of values returned by getFirebaseHostingChannel.
type LookupFirebaseHostingChannelResult struct {
	ChannelId            string            `pulumi:"channelId"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	ExpireTime           string            `pulumi:"expireTime"`
	Id                   string            `pulumi:"id"`
	Labels               map[string]string `pulumi:"labels"`
	Name                 string            `pulumi:"name"`
	RetainedReleaseCount float64           `pulumi:"retainedReleaseCount"`
	SiteId               string            `pulumi:"siteId"`
	TerraformLabels      map[string]string `pulumi:"terraformLabels"`
	Ttl                  string            `pulumi:"ttl"`
}

func LookupFirebaseHostingChannelOutput(ctx *pulumi.Context, args LookupFirebaseHostingChannelOutputArgs, opts ...pulumi.InvokeOption) LookupFirebaseHostingChannelResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFirebaseHostingChannelResultOutput, error) {
			args := v.(LookupFirebaseHostingChannelArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupFirebaseHostingChannelResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getFirebaseHostingChannel:getFirebaseHostingChannel", args, LookupFirebaseHostingChannelResultOutput{}, options).(LookupFirebaseHostingChannelResultOutput), nil
		}).(LookupFirebaseHostingChannelResultOutput)
}

// A collection of arguments for invoking getFirebaseHostingChannel.
type LookupFirebaseHostingChannelOutputArgs struct {
	ChannelId pulumi.StringInput    `pulumi:"channelId"`
	Id        pulumi.StringPtrInput `pulumi:"id"`
	SiteId    pulumi.StringInput    `pulumi:"siteId"`
}

func (LookupFirebaseHostingChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirebaseHostingChannelArgs)(nil)).Elem()
}

// A collection of values returned by getFirebaseHostingChannel.
type LookupFirebaseHostingChannelResultOutput struct{ *pulumi.OutputState }

func (LookupFirebaseHostingChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFirebaseHostingChannelResult)(nil)).Elem()
}

func (o LookupFirebaseHostingChannelResultOutput) ToLookupFirebaseHostingChannelResultOutput() LookupFirebaseHostingChannelResultOutput {
	return o
}

func (o LookupFirebaseHostingChannelResultOutput) ToLookupFirebaseHostingChannelResultOutputWithContext(ctx context.Context) LookupFirebaseHostingChannelResultOutput {
	return o
}

func (o LookupFirebaseHostingChannelResultOutput) ChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) string { return v.ChannelId }).(pulumi.StringOutput)
}

func (o LookupFirebaseHostingChannelResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupFirebaseHostingChannelResultOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) string { return v.ExpireTime }).(pulumi.StringOutput)
}

func (o LookupFirebaseHostingChannelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFirebaseHostingChannelResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupFirebaseHostingChannelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupFirebaseHostingChannelResultOutput) RetainedReleaseCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) float64 { return v.RetainedReleaseCount }).(pulumi.Float64Output)
}

func (o LookupFirebaseHostingChannelResultOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) string { return v.SiteId }).(pulumi.StringOutput)
}

func (o LookupFirebaseHostingChannelResultOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) map[string]string { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o LookupFirebaseHostingChannelResultOutput) Ttl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFirebaseHostingChannelResult) string { return v.Ttl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFirebaseHostingChannelResultOutput{})
}
