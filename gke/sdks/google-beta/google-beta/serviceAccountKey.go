// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceAccountKey struct {
	pulumi.CustomResourceState

	// Arbitrary map of values that, when changed, will trigger recreation of resource.
	Keepers pulumi.StringMapOutput `pulumi:"keepers"`
	// The algorithm used to generate the key, used only on create. KEY_ALG_RSA_2048 is the default algorithm. Valid values
	// are: "KEY_ALG_RSA_1024", "KEY_ALG_RSA_2048".
	KeyAlgorithm pulumi.StringPtrOutput `pulumi:"keyAlgorithm"`
	// The name used for this key pair
	Name pulumi.StringOutput `pulumi:"name"`
	// The private key in JSON format, base64 encoded. This is what you normally get as a file when creating service account
	// keys through the CLI or web console. This is only populated when creating a new key.
	PrivateKey     pulumi.StringOutput    `pulumi:"privateKey"`
	PrivateKeyType pulumi.StringPtrOutput `pulumi:"privateKeyType"`
	// The public key, base64 encoded
	PublicKey pulumi.StringOutput `pulumi:"publicKey"`
	// A field that allows clients to upload their own public key. If set, use this public key data to create a service account
	// key for given service account. Please note, the expected format for this field is a base64 encoded X509_PEM.
	PublicKeyData pulumi.StringPtrOutput `pulumi:"publicKeyData"`
	PublicKeyType pulumi.StringPtrOutput `pulumi:"publicKeyType"`
	// The ID of the parent service account of the key. This can be a string in the format {ACCOUNT} or
	// projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}, where {ACCOUNT} is the email address or unique id of the service
	// account. If the {ACCOUNT} syntax is used, the project will be inferred from the provider's configuration.
	ServiceAccountId    pulumi.StringOutput `pulumi:"serviceAccountId"`
	ServiceAccountKeyId pulumi.StringOutput `pulumi:"serviceAccountKeyId"`
	// The key can be used after this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
	// "2014-10-02T15:01:23.045123456Z".
	ValidAfter pulumi.StringOutput `pulumi:"validAfter"`
	// The key can be used before this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
	// "2014-10-02T15:01:23.045123456Z".
	ValidBefore pulumi.StringOutput `pulumi:"validBefore"`
}

// NewServiceAccountKey registers a new resource with the given unique name, arguments, and options.
func NewServiceAccountKey(ctx *pulumi.Context,
	name string, args *ServiceAccountKeyArgs, opts ...pulumi.ResourceOption) (*ServiceAccountKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"privateKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceAccountKey
	err = ctx.RegisterPackageResource("google-beta:index/serviceAccountKey:ServiceAccountKey", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAccountKey gets an existing ServiceAccountKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceAccountKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceAccountKeyState, opts ...pulumi.ResourceOption) (*ServiceAccountKey, error) {
	var resource ServiceAccountKey
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/serviceAccountKey:ServiceAccountKey", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceAccountKey resources.
type serviceAccountKeyState struct {
	// Arbitrary map of values that, when changed, will trigger recreation of resource.
	Keepers map[string]string `pulumi:"keepers"`
	// The algorithm used to generate the key, used only on create. KEY_ALG_RSA_2048 is the default algorithm. Valid values
	// are: "KEY_ALG_RSA_1024", "KEY_ALG_RSA_2048".
	KeyAlgorithm *string `pulumi:"keyAlgorithm"`
	// The name used for this key pair
	Name *string `pulumi:"name"`
	// The private key in JSON format, base64 encoded. This is what you normally get as a file when creating service account
	// keys through the CLI or web console. This is only populated when creating a new key.
	PrivateKey     *string `pulumi:"privateKey"`
	PrivateKeyType *string `pulumi:"privateKeyType"`
	// The public key, base64 encoded
	PublicKey *string `pulumi:"publicKey"`
	// A field that allows clients to upload their own public key. If set, use this public key data to create a service account
	// key for given service account. Please note, the expected format for this field is a base64 encoded X509_PEM.
	PublicKeyData *string `pulumi:"publicKeyData"`
	PublicKeyType *string `pulumi:"publicKeyType"`
	// The ID of the parent service account of the key. This can be a string in the format {ACCOUNT} or
	// projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}, where {ACCOUNT} is the email address or unique id of the service
	// account. If the {ACCOUNT} syntax is used, the project will be inferred from the provider's configuration.
	ServiceAccountId    *string `pulumi:"serviceAccountId"`
	ServiceAccountKeyId *string `pulumi:"serviceAccountKeyId"`
	// The key can be used after this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
	// "2014-10-02T15:01:23.045123456Z".
	ValidAfter *string `pulumi:"validAfter"`
	// The key can be used before this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
	// "2014-10-02T15:01:23.045123456Z".
	ValidBefore *string `pulumi:"validBefore"`
}

type ServiceAccountKeyState struct {
	// Arbitrary map of values that, when changed, will trigger recreation of resource.
	Keepers pulumi.StringMapInput
	// The algorithm used to generate the key, used only on create. KEY_ALG_RSA_2048 is the default algorithm. Valid values
	// are: "KEY_ALG_RSA_1024", "KEY_ALG_RSA_2048".
	KeyAlgorithm pulumi.StringPtrInput
	// The name used for this key pair
	Name pulumi.StringPtrInput
	// The private key in JSON format, base64 encoded. This is what you normally get as a file when creating service account
	// keys through the CLI or web console. This is only populated when creating a new key.
	PrivateKey     pulumi.StringPtrInput
	PrivateKeyType pulumi.StringPtrInput
	// The public key, base64 encoded
	PublicKey pulumi.StringPtrInput
	// A field that allows clients to upload their own public key. If set, use this public key data to create a service account
	// key for given service account. Please note, the expected format for this field is a base64 encoded X509_PEM.
	PublicKeyData pulumi.StringPtrInput
	PublicKeyType pulumi.StringPtrInput
	// The ID of the parent service account of the key. This can be a string in the format {ACCOUNT} or
	// projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}, where {ACCOUNT} is the email address or unique id of the service
	// account. If the {ACCOUNT} syntax is used, the project will be inferred from the provider's configuration.
	ServiceAccountId    pulumi.StringPtrInput
	ServiceAccountKeyId pulumi.StringPtrInput
	// The key can be used after this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
	// "2014-10-02T15:01:23.045123456Z".
	ValidAfter pulumi.StringPtrInput
	// The key can be used before this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
	// "2014-10-02T15:01:23.045123456Z".
	ValidBefore pulumi.StringPtrInput
}

func (ServiceAccountKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountKeyState)(nil)).Elem()
}

type serviceAccountKeyArgs struct {
	// Arbitrary map of values that, when changed, will trigger recreation of resource.
	Keepers map[string]string `pulumi:"keepers"`
	// The algorithm used to generate the key, used only on create. KEY_ALG_RSA_2048 is the default algorithm. Valid values
	// are: "KEY_ALG_RSA_1024", "KEY_ALG_RSA_2048".
	KeyAlgorithm   *string `pulumi:"keyAlgorithm"`
	PrivateKeyType *string `pulumi:"privateKeyType"`
	// A field that allows clients to upload their own public key. If set, use this public key data to create a service account
	// key for given service account. Please note, the expected format for this field is a base64 encoded X509_PEM.
	PublicKeyData *string `pulumi:"publicKeyData"`
	PublicKeyType *string `pulumi:"publicKeyType"`
	// The ID of the parent service account of the key. This can be a string in the format {ACCOUNT} or
	// projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}, where {ACCOUNT} is the email address or unique id of the service
	// account. If the {ACCOUNT} syntax is used, the project will be inferred from the provider's configuration.
	ServiceAccountId    string  `pulumi:"serviceAccountId"`
	ServiceAccountKeyId *string `pulumi:"serviceAccountKeyId"`
}

// The set of arguments for constructing a ServiceAccountKey resource.
type ServiceAccountKeyArgs struct {
	// Arbitrary map of values that, when changed, will trigger recreation of resource.
	Keepers pulumi.StringMapInput
	// The algorithm used to generate the key, used only on create. KEY_ALG_RSA_2048 is the default algorithm. Valid values
	// are: "KEY_ALG_RSA_1024", "KEY_ALG_RSA_2048".
	KeyAlgorithm   pulumi.StringPtrInput
	PrivateKeyType pulumi.StringPtrInput
	// A field that allows clients to upload their own public key. If set, use this public key data to create a service account
	// key for given service account. Please note, the expected format for this field is a base64 encoded X509_PEM.
	PublicKeyData pulumi.StringPtrInput
	PublicKeyType pulumi.StringPtrInput
	// The ID of the parent service account of the key. This can be a string in the format {ACCOUNT} or
	// projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}, where {ACCOUNT} is the email address or unique id of the service
	// account. If the {ACCOUNT} syntax is used, the project will be inferred from the provider's configuration.
	ServiceAccountId    pulumi.StringInput
	ServiceAccountKeyId pulumi.StringPtrInput
}

func (ServiceAccountKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountKeyArgs)(nil)).Elem()
}

type ServiceAccountKeyInput interface {
	pulumi.Input

	ToServiceAccountKeyOutput() ServiceAccountKeyOutput
	ToServiceAccountKeyOutputWithContext(ctx context.Context) ServiceAccountKeyOutput
}

func (*ServiceAccountKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountKey)(nil)).Elem()
}

func (i *ServiceAccountKey) ToServiceAccountKeyOutput() ServiceAccountKeyOutput {
	return i.ToServiceAccountKeyOutputWithContext(context.Background())
}

func (i *ServiceAccountKey) ToServiceAccountKeyOutputWithContext(ctx context.Context) ServiceAccountKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountKeyOutput)
}

type ServiceAccountKeyOutput struct{ *pulumi.OutputState }

func (ServiceAccountKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountKey)(nil)).Elem()
}

func (o ServiceAccountKeyOutput) ToServiceAccountKeyOutput() ServiceAccountKeyOutput {
	return o
}

func (o ServiceAccountKeyOutput) ToServiceAccountKeyOutputWithContext(ctx context.Context) ServiceAccountKeyOutput {
	return o
}

// Arbitrary map of values that, when changed, will trigger recreation of resource.
func (o ServiceAccountKeyOutput) Keepers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringMapOutput { return v.Keepers }).(pulumi.StringMapOutput)
}

// The algorithm used to generate the key, used only on create. KEY_ALG_RSA_2048 is the default algorithm. Valid values
// are: "KEY_ALG_RSA_1024", "KEY_ALG_RSA_2048".
func (o ServiceAccountKeyOutput) KeyAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringPtrOutput { return v.KeyAlgorithm }).(pulumi.StringPtrOutput)
}

// The name used for this key pair
func (o ServiceAccountKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The private key in JSON format, base64 encoded. This is what you normally get as a file when creating service account
// keys through the CLI or web console. This is only populated when creating a new key.
func (o ServiceAccountKeyOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o ServiceAccountKeyOutput) PrivateKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringPtrOutput { return v.PrivateKeyType }).(pulumi.StringPtrOutput)
}

// The public key, base64 encoded
func (o ServiceAccountKeyOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.PublicKey }).(pulumi.StringOutput)
}

// A field that allows clients to upload their own public key. If set, use this public key data to create a service account
// key for given service account. Please note, the expected format for this field is a base64 encoded X509_PEM.
func (o ServiceAccountKeyOutput) PublicKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringPtrOutput { return v.PublicKeyData }).(pulumi.StringPtrOutput)
}

func (o ServiceAccountKeyOutput) PublicKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringPtrOutput { return v.PublicKeyType }).(pulumi.StringPtrOutput)
}

// The ID of the parent service account of the key. This can be a string in the format {ACCOUNT} or
// projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}, where {ACCOUNT} is the email address or unique id of the service
// account. If the {ACCOUNT} syntax is used, the project will be inferred from the provider's configuration.
func (o ServiceAccountKeyOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func (o ServiceAccountKeyOutput) ServiceAccountKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.ServiceAccountKeyId }).(pulumi.StringOutput)
}

// The key can be used after this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
// "2014-10-02T15:01:23.045123456Z".
func (o ServiceAccountKeyOutput) ValidAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.ValidAfter }).(pulumi.StringOutput)
}

// The key can be used before this timestamp. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
// "2014-10-02T15:01:23.045123456Z".
func (o ServiceAccountKeyOutput) ValidBefore() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountKey) pulumi.StringOutput { return v.ValidBefore }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountKeyInput)(nil)).Elem(), &ServiceAccountKey{})
	pulumi.RegisterOutputType(ServiceAccountKeyOutput{})
}
