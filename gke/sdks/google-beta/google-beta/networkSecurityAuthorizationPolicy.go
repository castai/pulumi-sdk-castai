// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkSecurityAuthorizationPolicy struct {
	pulumi.CustomResourceState

	// The action to take when a rule match is found. Possible values are "ALLOW" or "DENY". Possible values: ["ALLOW", "DENY"]
	Action pulumi.StringOutput `pulumi:"action"`
	// Time the AuthorizationPolicy was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Set of label tags associated with the AuthorizationPolicy resource. **Note**: This field is non-authoritative, and will
	// only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the authorization policy. The default value is 'global'.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Name of the AuthorizationPolicy resource.
	Name                                 pulumi.StringOutput `pulumi:"name"`
	NetworkSecurityAuthorizationPolicyId pulumi.StringOutput `pulumi:"networkSecurityAuthorizationPolicyId"`
	Project                              pulumi.StringOutput `pulumi:"project"`
	// List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action'
	// field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified
	// in the action field will be applied on every request.
	Rules NetworkSecurityAuthorizationPolicyRuleArrayOutput `pulumi:"rules"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                              `pulumi:"terraformLabels"`
	Timeouts        NetworkSecurityAuthorizationPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
	// Time the AuthorizationPolicy was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkSecurityAuthorizationPolicy registers a new resource with the given unique name, arguments, and options.
func NewNetworkSecurityAuthorizationPolicy(ctx *pulumi.Context,
	name string, args *NetworkSecurityAuthorizationPolicyArgs, opts ...pulumi.ResourceOption) (*NetworkSecurityAuthorizationPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkSecurityAuthorizationPolicy
	err = ctx.RegisterPackageResource("google-beta:index/networkSecurityAuthorizationPolicy:NetworkSecurityAuthorizationPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkSecurityAuthorizationPolicy gets an existing NetworkSecurityAuthorizationPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSecurityAuthorizationPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkSecurityAuthorizationPolicyState, opts ...pulumi.ResourceOption) (*NetworkSecurityAuthorizationPolicy, error) {
	var resource NetworkSecurityAuthorizationPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkSecurityAuthorizationPolicy:NetworkSecurityAuthorizationPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkSecurityAuthorizationPolicy resources.
type networkSecurityAuthorizationPolicyState struct {
	// The action to take when a rule match is found. Possible values are "ALLOW" or "DENY". Possible values: ["ALLOW", "DENY"]
	Action *string `pulumi:"action"`
	// Time the AuthorizationPolicy was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Set of label tags associated with the AuthorizationPolicy resource. **Note**: This field is non-authoritative, and will
	// only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the authorization policy. The default value is 'global'.
	Location *string `pulumi:"location"`
	// Name of the AuthorizationPolicy resource.
	Name                                 *string `pulumi:"name"`
	NetworkSecurityAuthorizationPolicyId *string `pulumi:"networkSecurityAuthorizationPolicyId"`
	Project                              *string `pulumi:"project"`
	// List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action'
	// field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified
	// in the action field will be applied on every request.
	Rules []NetworkSecurityAuthorizationPolicyRule `pulumi:"rules"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                           `pulumi:"terraformLabels"`
	Timeouts        *NetworkSecurityAuthorizationPolicyTimeouts `pulumi:"timeouts"`
	// Time the AuthorizationPolicy was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkSecurityAuthorizationPolicyState struct {
	// The action to take when a rule match is found. Possible values are "ALLOW" or "DENY". Possible values: ["ALLOW", "DENY"]
	Action pulumi.StringPtrInput
	// Time the AuthorizationPolicy was created in UTC.
	CreateTime pulumi.StringPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Set of label tags associated with the AuthorizationPolicy resource. **Note**: This field is non-authoritative, and will
	// only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The location of the authorization policy. The default value is 'global'.
	Location pulumi.StringPtrInput
	// Name of the AuthorizationPolicy resource.
	Name                                 pulumi.StringPtrInput
	NetworkSecurityAuthorizationPolicyId pulumi.StringPtrInput
	Project                              pulumi.StringPtrInput
	// List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action'
	// field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified
	// in the action field will be applied on every request.
	Rules NetworkSecurityAuthorizationPolicyRuleArrayInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkSecurityAuthorizationPolicyTimeoutsPtrInput
	// Time the AuthorizationPolicy was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkSecurityAuthorizationPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityAuthorizationPolicyState)(nil)).Elem()
}

type networkSecurityAuthorizationPolicyArgs struct {
	// The action to take when a rule match is found. Possible values are "ALLOW" or "DENY". Possible values: ["ALLOW", "DENY"]
	Action string `pulumi:"action"`
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// Set of label tags associated with the AuthorizationPolicy resource. **Note**: This field is non-authoritative, and will
	// only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the authorization policy. The default value is 'global'.
	Location *string `pulumi:"location"`
	// Name of the AuthorizationPolicy resource.
	Name                                 *string `pulumi:"name"`
	NetworkSecurityAuthorizationPolicyId *string `pulumi:"networkSecurityAuthorizationPolicyId"`
	Project                              *string `pulumi:"project"`
	// List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action'
	// field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified
	// in the action field will be applied on every request.
	Rules    []NetworkSecurityAuthorizationPolicyRule    `pulumi:"rules"`
	Timeouts *NetworkSecurityAuthorizationPolicyTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NetworkSecurityAuthorizationPolicy resource.
type NetworkSecurityAuthorizationPolicyArgs struct {
	// The action to take when a rule match is found. Possible values are "ALLOW" or "DENY". Possible values: ["ALLOW", "DENY"]
	Action pulumi.StringInput
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// Set of label tags associated with the AuthorizationPolicy resource. **Note**: This field is non-authoritative, and will
	// only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The location of the authorization policy. The default value is 'global'.
	Location pulumi.StringPtrInput
	// Name of the AuthorizationPolicy resource.
	Name                                 pulumi.StringPtrInput
	NetworkSecurityAuthorizationPolicyId pulumi.StringPtrInput
	Project                              pulumi.StringPtrInput
	// List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action'
	// field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified
	// in the action field will be applied on every request.
	Rules    NetworkSecurityAuthorizationPolicyRuleArrayInput
	Timeouts NetworkSecurityAuthorizationPolicyTimeoutsPtrInput
}

func (NetworkSecurityAuthorizationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityAuthorizationPolicyArgs)(nil)).Elem()
}

type NetworkSecurityAuthorizationPolicyInput interface {
	pulumi.Input

	ToNetworkSecurityAuthorizationPolicyOutput() NetworkSecurityAuthorizationPolicyOutput
	ToNetworkSecurityAuthorizationPolicyOutputWithContext(ctx context.Context) NetworkSecurityAuthorizationPolicyOutput
}

func (*NetworkSecurityAuthorizationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityAuthorizationPolicy)(nil)).Elem()
}

func (i *NetworkSecurityAuthorizationPolicy) ToNetworkSecurityAuthorizationPolicyOutput() NetworkSecurityAuthorizationPolicyOutput {
	return i.ToNetworkSecurityAuthorizationPolicyOutputWithContext(context.Background())
}

func (i *NetworkSecurityAuthorizationPolicy) ToNetworkSecurityAuthorizationPolicyOutputWithContext(ctx context.Context) NetworkSecurityAuthorizationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityAuthorizationPolicyOutput)
}

type NetworkSecurityAuthorizationPolicyOutput struct{ *pulumi.OutputState }

func (NetworkSecurityAuthorizationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityAuthorizationPolicy)(nil)).Elem()
}

func (o NetworkSecurityAuthorizationPolicyOutput) ToNetworkSecurityAuthorizationPolicyOutput() NetworkSecurityAuthorizationPolicyOutput {
	return o
}

func (o NetworkSecurityAuthorizationPolicyOutput) ToNetworkSecurityAuthorizationPolicyOutputWithContext(ctx context.Context) NetworkSecurityAuthorizationPolicyOutput {
	return o
}

// The action to take when a rule match is found. Possible values are "ALLOW" or "DENY". Possible values: ["ALLOW", "DENY"]
func (o NetworkSecurityAuthorizationPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// Time the AuthorizationPolicy was created in UTC.
func (o NetworkSecurityAuthorizationPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A free-text description of the resource. Max length 1024 characters.
func (o NetworkSecurityAuthorizationPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityAuthorizationPolicyOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Set of label tags associated with the AuthorizationPolicy resource. **Note**: This field is non-authoritative, and will
// only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o NetworkSecurityAuthorizationPolicyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the authorization policy. The default value is 'global'.
func (o NetworkSecurityAuthorizationPolicyOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Name of the AuthorizationPolicy resource.
func (o NetworkSecurityAuthorizationPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityAuthorizationPolicyOutput) NetworkSecurityAuthorizationPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringOutput {
		return v.NetworkSecurityAuthorizationPolicyId
	}).(pulumi.StringOutput)
}

func (o NetworkSecurityAuthorizationPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action'
// field to be taken. A rule is a match if there is a matching source and destination. If left blank, the action specified
// in the action field will be applied on every request.
func (o NetworkSecurityAuthorizationPolicyOutput) Rules() NetworkSecurityAuthorizationPolicyRuleArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) NetworkSecurityAuthorizationPolicyRuleArrayOutput {
		return v.Rules
	}).(NetworkSecurityAuthorizationPolicyRuleArrayOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkSecurityAuthorizationPolicyOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkSecurityAuthorizationPolicyOutput) Timeouts() NetworkSecurityAuthorizationPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) NetworkSecurityAuthorizationPolicyTimeoutsPtrOutput {
		return v.Timeouts
	}).(NetworkSecurityAuthorizationPolicyTimeoutsPtrOutput)
}

// Time the AuthorizationPolicy was updated in UTC.
func (o NetworkSecurityAuthorizationPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthorizationPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityAuthorizationPolicyInput)(nil)).Elem(), &NetworkSecurityAuthorizationPolicy{})
	pulumi.RegisterOutputType(NetworkSecurityAuthorizationPolicyOutput{})
}
