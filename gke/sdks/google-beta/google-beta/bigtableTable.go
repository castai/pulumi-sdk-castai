// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigtableTable struct {
	pulumi.CustomResourceState

	// Defines an automated backup policy for a table, specified by Retention Period and Frequency. To disable, set both
	// Retention Period and Frequency to 0.
	AutomatedBackupPolicy BigtableTableAutomatedBackupPolicyPtrOutput `pulumi:"automatedBackupPolicy"`
	BigtableTableId       pulumi.StringOutput                         `pulumi:"bigtableTableId"`
	// Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
	ChangeStreamRetention pulumi.StringOutput `pulumi:"changeStreamRetention"`
	// A group of columns within a table which share a common configuration. This can be specified multiple times.
	ColumnFamilies BigtableTableColumnFamilyArrayOutput `pulumi:"columnFamilies"`
	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column
	// families in the table, and the instance containing the table would be prohibited. If not provided, currently deletion
	// protection will be set to UNPROTECTED as it is the API default value.
	DeletionProtection pulumi.StringOutput `pulumi:"deletionProtection"`
	// The name of the Bigtable instance.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// The name of the table. Must be 1-50 characters and must only contain hyphens, underscores, periods, letters and numbers.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project   pulumi.StringOutput            `pulumi:"project"`
	SplitKeys pulumi.StringArrayOutput       `pulumi:"splitKeys"`
	Timeouts  BigtableTableTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewBigtableTable registers a new resource with the given unique name, arguments, and options.
func NewBigtableTable(ctx *pulumi.Context,
	name string, args *BigtableTableArgs, opts ...pulumi.ResourceOption) (*BigtableTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigtableTable
	err = ctx.RegisterPackageResource("google-beta:index/bigtableTable:BigtableTable", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigtableTable gets an existing BigtableTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigtableTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigtableTableState, opts ...pulumi.ResourceOption) (*BigtableTable, error) {
	var resource BigtableTable
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/bigtableTable:BigtableTable", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigtableTable resources.
type bigtableTableState struct {
	// Defines an automated backup policy for a table, specified by Retention Period and Frequency. To disable, set both
	// Retention Period and Frequency to 0.
	AutomatedBackupPolicy *BigtableTableAutomatedBackupPolicy `pulumi:"automatedBackupPolicy"`
	BigtableTableId       *string                             `pulumi:"bigtableTableId"`
	// Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
	ChangeStreamRetention *string `pulumi:"changeStreamRetention"`
	// A group of columns within a table which share a common configuration. This can be specified multiple times.
	ColumnFamilies []BigtableTableColumnFamily `pulumi:"columnFamilies"`
	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column
	// families in the table, and the instance containing the table would be prohibited. If not provided, currently deletion
	// protection will be set to UNPROTECTED as it is the API default value.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// The name of the Bigtable instance.
	InstanceName *string `pulumi:"instanceName"`
	// The name of the table. Must be 1-50 characters and must only contain hyphens, underscores, periods, letters and numbers.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project   *string                `pulumi:"project"`
	SplitKeys []string               `pulumi:"splitKeys"`
	Timeouts  *BigtableTableTimeouts `pulumi:"timeouts"`
}

type BigtableTableState struct {
	// Defines an automated backup policy for a table, specified by Retention Period and Frequency. To disable, set both
	// Retention Period and Frequency to 0.
	AutomatedBackupPolicy BigtableTableAutomatedBackupPolicyPtrInput
	BigtableTableId       pulumi.StringPtrInput
	// Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
	ChangeStreamRetention pulumi.StringPtrInput
	// A group of columns within a table which share a common configuration. This can be specified multiple times.
	ColumnFamilies BigtableTableColumnFamilyArrayInput
	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column
	// families in the table, and the instance containing the table would be prohibited. If not provided, currently deletion
	// protection will be set to UNPROTECTED as it is the API default value.
	DeletionProtection pulumi.StringPtrInput
	// The name of the Bigtable instance.
	InstanceName pulumi.StringPtrInput
	// The name of the table. Must be 1-50 characters and must only contain hyphens, underscores, periods, letters and numbers.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project   pulumi.StringPtrInput
	SplitKeys pulumi.StringArrayInput
	Timeouts  BigtableTableTimeoutsPtrInput
}

func (BigtableTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigtableTableState)(nil)).Elem()
}

type bigtableTableArgs struct {
	// Defines an automated backup policy for a table, specified by Retention Period and Frequency. To disable, set both
	// Retention Period and Frequency to 0.
	AutomatedBackupPolicy *BigtableTableAutomatedBackupPolicy `pulumi:"automatedBackupPolicy"`
	BigtableTableId       *string                             `pulumi:"bigtableTableId"`
	// Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
	ChangeStreamRetention *string `pulumi:"changeStreamRetention"`
	// A group of columns within a table which share a common configuration. This can be specified multiple times.
	ColumnFamilies []BigtableTableColumnFamily `pulumi:"columnFamilies"`
	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column
	// families in the table, and the instance containing the table would be prohibited. If not provided, currently deletion
	// protection will be set to UNPROTECTED as it is the API default value.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// The name of the Bigtable instance.
	InstanceName string `pulumi:"instanceName"`
	// The name of the table. Must be 1-50 characters and must only contain hyphens, underscores, periods, letters and numbers.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project   *string                `pulumi:"project"`
	SplitKeys []string               `pulumi:"splitKeys"`
	Timeouts  *BigtableTableTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BigtableTable resource.
type BigtableTableArgs struct {
	// Defines an automated backup policy for a table, specified by Retention Period and Frequency. To disable, set both
	// Retention Period and Frequency to 0.
	AutomatedBackupPolicy BigtableTableAutomatedBackupPolicyPtrInput
	BigtableTableId       pulumi.StringPtrInput
	// Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
	ChangeStreamRetention pulumi.StringPtrInput
	// A group of columns within a table which share a common configuration. This can be specified multiple times.
	ColumnFamilies BigtableTableColumnFamilyArrayInput
	// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column
	// families in the table, and the instance containing the table would be prohibited. If not provided, currently deletion
	// protection will be set to UNPROTECTED as it is the API default value.
	DeletionProtection pulumi.StringPtrInput
	// The name of the Bigtable instance.
	InstanceName pulumi.StringInput
	// The name of the table. Must be 1-50 characters and must only contain hyphens, underscores, periods, letters and numbers.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project   pulumi.StringPtrInput
	SplitKeys pulumi.StringArrayInput
	Timeouts  BigtableTableTimeoutsPtrInput
}

func (BigtableTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigtableTableArgs)(nil)).Elem()
}

type BigtableTableInput interface {
	pulumi.Input

	ToBigtableTableOutput() BigtableTableOutput
	ToBigtableTableOutputWithContext(ctx context.Context) BigtableTableOutput
}

func (*BigtableTable) ElementType() reflect.Type {
	return reflect.TypeOf((**BigtableTable)(nil)).Elem()
}

func (i *BigtableTable) ToBigtableTableOutput() BigtableTableOutput {
	return i.ToBigtableTableOutputWithContext(context.Background())
}

func (i *BigtableTable) ToBigtableTableOutputWithContext(ctx context.Context) BigtableTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigtableTableOutput)
}

type BigtableTableOutput struct{ *pulumi.OutputState }

func (BigtableTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigtableTable)(nil)).Elem()
}

func (o BigtableTableOutput) ToBigtableTableOutput() BigtableTableOutput {
	return o
}

func (o BigtableTableOutput) ToBigtableTableOutputWithContext(ctx context.Context) BigtableTableOutput {
	return o
}

// Defines an automated backup policy for a table, specified by Retention Period and Frequency. To disable, set both
// Retention Period and Frequency to 0.
func (o BigtableTableOutput) AutomatedBackupPolicy() BigtableTableAutomatedBackupPolicyPtrOutput {
	return o.ApplyT(func(v *BigtableTable) BigtableTableAutomatedBackupPolicyPtrOutput { return v.AutomatedBackupPolicy }).(BigtableTableAutomatedBackupPolicyPtrOutput)
}

func (o BigtableTableOutput) BigtableTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTable) pulumi.StringOutput { return v.BigtableTableId }).(pulumi.StringOutput)
}

// Duration to retain change stream data for the table. Set to 0 to disable. Must be between 1 and 7 days.
func (o BigtableTableOutput) ChangeStreamRetention() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTable) pulumi.StringOutput { return v.ChangeStreamRetention }).(pulumi.StringOutput)
}

// A group of columns within a table which share a common configuration. This can be specified multiple times.
func (o BigtableTableOutput) ColumnFamilies() BigtableTableColumnFamilyArrayOutput {
	return o.ApplyT(func(v *BigtableTable) BigtableTableColumnFamilyArrayOutput { return v.ColumnFamilies }).(BigtableTableColumnFamilyArrayOutput)
}

// A field to make the table protected against data loss i.e. when set to PROTECTED, deleting the table, the column
// families in the table, and the instance containing the table would be prohibited. If not provided, currently deletion
// protection will be set to UNPROTECTED as it is the API default value.
func (o BigtableTableOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTable) pulumi.StringOutput { return v.DeletionProtection }).(pulumi.StringOutput)
}

// The name of the Bigtable instance.
func (o BigtableTableOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTable) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// The name of the table. Must be 1-50 characters and must only contain hyphens, underscores, periods, letters and numbers.
func (o BigtableTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
func (o BigtableTableOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTable) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigtableTableOutput) SplitKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BigtableTable) pulumi.StringArrayOutput { return v.SplitKeys }).(pulumi.StringArrayOutput)
}

func (o BigtableTableOutput) Timeouts() BigtableTableTimeoutsPtrOutput {
	return o.ApplyT(func(v *BigtableTable) BigtableTableTimeoutsPtrOutput { return v.Timeouts }).(BigtableTableTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigtableTableInput)(nil)).Elem(), &BigtableTable{})
	pulumi.RegisterOutputType(BigtableTableOutput{})
}
