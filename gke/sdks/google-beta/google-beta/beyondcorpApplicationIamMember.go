// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BeyondcorpApplicationIamMember struct {
	pulumi.CustomResourceState

	ApplicationId                    pulumi.StringOutput                              `pulumi:"applicationId"`
	BeyondcorpApplicationIamMemberId pulumi.StringOutput                              `pulumi:"beyondcorpApplicationIamMemberId"`
	Condition                        BeyondcorpApplicationIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                             pulumi.StringOutput                              `pulumi:"etag"`
	Member                           pulumi.StringOutput                              `pulumi:"member"`
	Project                          pulumi.StringOutput                              `pulumi:"project"`
	Role                             pulumi.StringOutput                              `pulumi:"role"`
	SecurityGatewaysId               pulumi.StringOutput                              `pulumi:"securityGatewaysId"`
}

// NewBeyondcorpApplicationIamMember registers a new resource with the given unique name, arguments, and options.
func NewBeyondcorpApplicationIamMember(ctx *pulumi.Context,
	name string, args *BeyondcorpApplicationIamMemberArgs, opts ...pulumi.ResourceOption) (*BeyondcorpApplicationIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.SecurityGatewaysId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGatewaysId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BeyondcorpApplicationIamMember
	err = ctx.RegisterPackageResource("google-beta:index/beyondcorpApplicationIamMember:BeyondcorpApplicationIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBeyondcorpApplicationIamMember gets an existing BeyondcorpApplicationIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBeyondcorpApplicationIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BeyondcorpApplicationIamMemberState, opts ...pulumi.ResourceOption) (*BeyondcorpApplicationIamMember, error) {
	var resource BeyondcorpApplicationIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/beyondcorpApplicationIamMember:BeyondcorpApplicationIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BeyondcorpApplicationIamMember resources.
type beyondcorpApplicationIamMemberState struct {
	ApplicationId                    *string                                  `pulumi:"applicationId"`
	BeyondcorpApplicationIamMemberId *string                                  `pulumi:"beyondcorpApplicationIamMemberId"`
	Condition                        *BeyondcorpApplicationIamMemberCondition `pulumi:"condition"`
	Etag                             *string                                  `pulumi:"etag"`
	Member                           *string                                  `pulumi:"member"`
	Project                          *string                                  `pulumi:"project"`
	Role                             *string                                  `pulumi:"role"`
	SecurityGatewaysId               *string                                  `pulumi:"securityGatewaysId"`
}

type BeyondcorpApplicationIamMemberState struct {
	ApplicationId                    pulumi.StringPtrInput
	BeyondcorpApplicationIamMemberId pulumi.StringPtrInput
	Condition                        BeyondcorpApplicationIamMemberConditionPtrInput
	Etag                             pulumi.StringPtrInput
	Member                           pulumi.StringPtrInput
	Project                          pulumi.StringPtrInput
	Role                             pulumi.StringPtrInput
	SecurityGatewaysId               pulumi.StringPtrInput
}

func (BeyondcorpApplicationIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpApplicationIamMemberState)(nil)).Elem()
}

type beyondcorpApplicationIamMemberArgs struct {
	ApplicationId                    string                                   `pulumi:"applicationId"`
	BeyondcorpApplicationIamMemberId *string                                  `pulumi:"beyondcorpApplicationIamMemberId"`
	Condition                        *BeyondcorpApplicationIamMemberCondition `pulumi:"condition"`
	Member                           string                                   `pulumi:"member"`
	Project                          *string                                  `pulumi:"project"`
	Role                             string                                   `pulumi:"role"`
	SecurityGatewaysId               string                                   `pulumi:"securityGatewaysId"`
}

// The set of arguments for constructing a BeyondcorpApplicationIamMember resource.
type BeyondcorpApplicationIamMemberArgs struct {
	ApplicationId                    pulumi.StringInput
	BeyondcorpApplicationIamMemberId pulumi.StringPtrInput
	Condition                        BeyondcorpApplicationIamMemberConditionPtrInput
	Member                           pulumi.StringInput
	Project                          pulumi.StringPtrInput
	Role                             pulumi.StringInput
	SecurityGatewaysId               pulumi.StringInput
}

func (BeyondcorpApplicationIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpApplicationIamMemberArgs)(nil)).Elem()
}

type BeyondcorpApplicationIamMemberInput interface {
	pulumi.Input

	ToBeyondcorpApplicationIamMemberOutput() BeyondcorpApplicationIamMemberOutput
	ToBeyondcorpApplicationIamMemberOutputWithContext(ctx context.Context) BeyondcorpApplicationIamMemberOutput
}

func (*BeyondcorpApplicationIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpApplicationIamMember)(nil)).Elem()
}

func (i *BeyondcorpApplicationIamMember) ToBeyondcorpApplicationIamMemberOutput() BeyondcorpApplicationIamMemberOutput {
	return i.ToBeyondcorpApplicationIamMemberOutputWithContext(context.Background())
}

func (i *BeyondcorpApplicationIamMember) ToBeyondcorpApplicationIamMemberOutputWithContext(ctx context.Context) BeyondcorpApplicationIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BeyondcorpApplicationIamMemberOutput)
}

type BeyondcorpApplicationIamMemberOutput struct{ *pulumi.OutputState }

func (BeyondcorpApplicationIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpApplicationIamMember)(nil)).Elem()
}

func (o BeyondcorpApplicationIamMemberOutput) ToBeyondcorpApplicationIamMemberOutput() BeyondcorpApplicationIamMemberOutput {
	return o
}

func (o BeyondcorpApplicationIamMemberOutput) ToBeyondcorpApplicationIamMemberOutputWithContext(ctx context.Context) BeyondcorpApplicationIamMemberOutput {
	return o
}

func (o BeyondcorpApplicationIamMemberOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamMember) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamMemberOutput) BeyondcorpApplicationIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamMember) pulumi.StringOutput { return v.BeyondcorpApplicationIamMemberId }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamMemberOutput) Condition() BeyondcorpApplicationIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamMember) BeyondcorpApplicationIamMemberConditionPtrOutput {
		return v.Condition
	}).(BeyondcorpApplicationIamMemberConditionPtrOutput)
}

func (o BeyondcorpApplicationIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamMemberOutput) SecurityGatewaysId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamMember) pulumi.StringOutput { return v.SecurityGatewaysId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BeyondcorpApplicationIamMemberInput)(nil)).Elem(), &BeyondcorpApplicationIamMember{})
	pulumi.RegisterOutputType(BeyondcorpApplicationIamMemberOutput{})
}
