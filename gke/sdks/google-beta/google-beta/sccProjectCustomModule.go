// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SccProjectCustomModule struct {
	pulumi.CustomResourceState

	// If empty, indicates that the custom module was created in the organization,folder, or project in which you are viewing
	// the custom module. Otherwise, ancestor_module specifies the organization or folder from which the custom module is
	// inherited.
	AncestorModule pulumi.StringOutput `pulumi:"ancestorModule"`
	// The user specified custom configuration for the module.
	CustomConfig SccProjectCustomModuleCustomConfigOutput `pulumi:"customConfig"`
	// The display name of the Security Health Analytics custom module. This display name becomes the finding category for all
	// findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a
	// lowercase letter, and contain alphanumeric characters or underscores only.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The enablement state of the custom module. Possible values: ["ENABLED", "DISABLED"]
	EnablementState pulumi.StringOutput `pulumi:"enablementState"`
	// The editor that last updated the custom module.
	LastEditor pulumi.StringOutput `pulumi:"lastEditor"`
	// The resource name of the custom module. Its format is
	// "projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}". The id {customModule} is
	// server-generated and is not user settable. It will be a numeric id containing 1-20 digits.
	Name                     pulumi.StringOutput                     `pulumi:"name"`
	Project                  pulumi.StringOutput                     `pulumi:"project"`
	SccProjectCustomModuleId pulumi.StringOutput                     `pulumi:"sccProjectCustomModuleId"`
	Timeouts                 SccProjectCustomModuleTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time at which the custom module was last updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewSccProjectCustomModule registers a new resource with the given unique name, arguments, and options.
func NewSccProjectCustomModule(ctx *pulumi.Context,
	name string, args *SccProjectCustomModuleArgs, opts ...pulumi.ResourceOption) (*SccProjectCustomModule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomConfig == nil {
		return nil, errors.New("invalid value for required argument 'CustomConfig'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.EnablementState == nil {
		return nil, errors.New("invalid value for required argument 'EnablementState'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SccProjectCustomModule
	err = ctx.RegisterPackageResource("google-beta:index/sccProjectCustomModule:SccProjectCustomModule", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSccProjectCustomModule gets an existing SccProjectCustomModule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSccProjectCustomModule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SccProjectCustomModuleState, opts ...pulumi.ResourceOption) (*SccProjectCustomModule, error) {
	var resource SccProjectCustomModule
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/sccProjectCustomModule:SccProjectCustomModule", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SccProjectCustomModule resources.
type sccProjectCustomModuleState struct {
	// If empty, indicates that the custom module was created in the organization,folder, or project in which you are viewing
	// the custom module. Otherwise, ancestor_module specifies the organization or folder from which the custom module is
	// inherited.
	AncestorModule *string `pulumi:"ancestorModule"`
	// The user specified custom configuration for the module.
	CustomConfig *SccProjectCustomModuleCustomConfig `pulumi:"customConfig"`
	// The display name of the Security Health Analytics custom module. This display name becomes the finding category for all
	// findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a
	// lowercase letter, and contain alphanumeric characters or underscores only.
	DisplayName *string `pulumi:"displayName"`
	// The enablement state of the custom module. Possible values: ["ENABLED", "DISABLED"]
	EnablementState *string `pulumi:"enablementState"`
	// The editor that last updated the custom module.
	LastEditor *string `pulumi:"lastEditor"`
	// The resource name of the custom module. Its format is
	// "projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}". The id {customModule} is
	// server-generated and is not user settable. It will be a numeric id containing 1-20 digits.
	Name                     *string                         `pulumi:"name"`
	Project                  *string                         `pulumi:"project"`
	SccProjectCustomModuleId *string                         `pulumi:"sccProjectCustomModuleId"`
	Timeouts                 *SccProjectCustomModuleTimeouts `pulumi:"timeouts"`
	// The time at which the custom module was last updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
}

type SccProjectCustomModuleState struct {
	// If empty, indicates that the custom module was created in the organization,folder, or project in which you are viewing
	// the custom module. Otherwise, ancestor_module specifies the organization or folder from which the custom module is
	// inherited.
	AncestorModule pulumi.StringPtrInput
	// The user specified custom configuration for the module.
	CustomConfig SccProjectCustomModuleCustomConfigPtrInput
	// The display name of the Security Health Analytics custom module. This display name becomes the finding category for all
	// findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a
	// lowercase letter, and contain alphanumeric characters or underscores only.
	DisplayName pulumi.StringPtrInput
	// The enablement state of the custom module. Possible values: ["ENABLED", "DISABLED"]
	EnablementState pulumi.StringPtrInput
	// The editor that last updated the custom module.
	LastEditor pulumi.StringPtrInput
	// The resource name of the custom module. Its format is
	// "projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}". The id {customModule} is
	// server-generated and is not user settable. It will be a numeric id containing 1-20 digits.
	Name                     pulumi.StringPtrInput
	Project                  pulumi.StringPtrInput
	SccProjectCustomModuleId pulumi.StringPtrInput
	Timeouts                 SccProjectCustomModuleTimeoutsPtrInput
	// The time at which the custom module was last updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
}

func (SccProjectCustomModuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*sccProjectCustomModuleState)(nil)).Elem()
}

type sccProjectCustomModuleArgs struct {
	// The user specified custom configuration for the module.
	CustomConfig SccProjectCustomModuleCustomConfig `pulumi:"customConfig"`
	// The display name of the Security Health Analytics custom module. This display name becomes the finding category for all
	// findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a
	// lowercase letter, and contain alphanumeric characters or underscores only.
	DisplayName string `pulumi:"displayName"`
	// The enablement state of the custom module. Possible values: ["ENABLED", "DISABLED"]
	EnablementState          string                          `pulumi:"enablementState"`
	Project                  *string                         `pulumi:"project"`
	SccProjectCustomModuleId *string                         `pulumi:"sccProjectCustomModuleId"`
	Timeouts                 *SccProjectCustomModuleTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SccProjectCustomModule resource.
type SccProjectCustomModuleArgs struct {
	// The user specified custom configuration for the module.
	CustomConfig SccProjectCustomModuleCustomConfigInput
	// The display name of the Security Health Analytics custom module. This display name becomes the finding category for all
	// findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a
	// lowercase letter, and contain alphanumeric characters or underscores only.
	DisplayName pulumi.StringInput
	// The enablement state of the custom module. Possible values: ["ENABLED", "DISABLED"]
	EnablementState          pulumi.StringInput
	Project                  pulumi.StringPtrInput
	SccProjectCustomModuleId pulumi.StringPtrInput
	Timeouts                 SccProjectCustomModuleTimeoutsPtrInput
}

func (SccProjectCustomModuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sccProjectCustomModuleArgs)(nil)).Elem()
}

type SccProjectCustomModuleInput interface {
	pulumi.Input

	ToSccProjectCustomModuleOutput() SccProjectCustomModuleOutput
	ToSccProjectCustomModuleOutputWithContext(ctx context.Context) SccProjectCustomModuleOutput
}

func (*SccProjectCustomModule) ElementType() reflect.Type {
	return reflect.TypeOf((**SccProjectCustomModule)(nil)).Elem()
}

func (i *SccProjectCustomModule) ToSccProjectCustomModuleOutput() SccProjectCustomModuleOutput {
	return i.ToSccProjectCustomModuleOutputWithContext(context.Background())
}

func (i *SccProjectCustomModule) ToSccProjectCustomModuleOutputWithContext(ctx context.Context) SccProjectCustomModuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SccProjectCustomModuleOutput)
}

type SccProjectCustomModuleOutput struct{ *pulumi.OutputState }

func (SccProjectCustomModuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SccProjectCustomModule)(nil)).Elem()
}

func (o SccProjectCustomModuleOutput) ToSccProjectCustomModuleOutput() SccProjectCustomModuleOutput {
	return o
}

func (o SccProjectCustomModuleOutput) ToSccProjectCustomModuleOutputWithContext(ctx context.Context) SccProjectCustomModuleOutput {
	return o
}

// If empty, indicates that the custom module was created in the organization,folder, or project in which you are viewing
// the custom module. Otherwise, ancestor_module specifies the organization or folder from which the custom module is
// inherited.
func (o SccProjectCustomModuleOutput) AncestorModule() pulumi.StringOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) pulumi.StringOutput { return v.AncestorModule }).(pulumi.StringOutput)
}

// The user specified custom configuration for the module.
func (o SccProjectCustomModuleOutput) CustomConfig() SccProjectCustomModuleCustomConfigOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) SccProjectCustomModuleCustomConfigOutput { return v.CustomConfig }).(SccProjectCustomModuleCustomConfigOutput)
}

// The display name of the Security Health Analytics custom module. This display name becomes the finding category for all
// findings that are returned by this custom module. The display name must be between 1 and 128 characters, start with a
// lowercase letter, and contain alphanumeric characters or underscores only.
func (o SccProjectCustomModuleOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The enablement state of the custom module. Possible values: ["ENABLED", "DISABLED"]
func (o SccProjectCustomModuleOutput) EnablementState() pulumi.StringOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) pulumi.StringOutput { return v.EnablementState }).(pulumi.StringOutput)
}

// The editor that last updated the custom module.
func (o SccProjectCustomModuleOutput) LastEditor() pulumi.StringOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) pulumi.StringOutput { return v.LastEditor }).(pulumi.StringOutput)
}

// The resource name of the custom module. Its format is
// "projects/{project}/securityHealthAnalyticsSettings/customModules/{customModule}". The id {customModule} is
// server-generated and is not user settable. It will be a numeric id containing 1-20 digits.
func (o SccProjectCustomModuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SccProjectCustomModuleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o SccProjectCustomModuleOutput) SccProjectCustomModuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) pulumi.StringOutput { return v.SccProjectCustomModuleId }).(pulumi.StringOutput)
}

func (o SccProjectCustomModuleOutput) Timeouts() SccProjectCustomModuleTimeoutsPtrOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) SccProjectCustomModuleTimeoutsPtrOutput { return v.Timeouts }).(SccProjectCustomModuleTimeoutsPtrOutput)
}

// The time at which the custom module was last updated. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o SccProjectCustomModuleOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SccProjectCustomModule) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SccProjectCustomModuleInput)(nil)).Elem(), &SccProjectCustomModule{})
	pulumi.RegisterOutputType(SccProjectCustomModuleOutput{})
}
