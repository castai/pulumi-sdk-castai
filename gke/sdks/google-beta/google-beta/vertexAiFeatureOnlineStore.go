// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VertexAiFeatureOnlineStore struct {
	pulumi.CustomResourceState

	// Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore.
	Bigtable VertexAiFeatureOnlineStoreBigtablePtrOutput `pulumi:"bigtable"`
	// The timestamp of when the feature online store was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only
	// need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by
	// default.
	DedicatedServingEndpoint VertexAiFeatureOnlineStoreDedicatedServingEndpointPtrOutput `pulumi:"dedicatedServingEndpoint"`
	EffectiveLabels          pulumi.StringMapOutput                                      `pulumi:"effectiveLabels"`
	// The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is
	// enabled by default for optimized storagetype.
	//
	// Deprecated: Deprecated
	EmbeddingManagement VertexAiFeatureOnlineStoreEmbeddingManagementPtrOutput `pulumi:"embeddingManagement"`
	// Used to perform consistent read-modify-write updates.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
	ForceDestroy pulumi.BoolPtrOutput `pulumi:"forceDestroy"`
	// The labels with user-defined metadata to organize your feature online stores. **Note**: This field is non-authoritative,
	// and will only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of
	// the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are
	// [a-z0-9_]. The first character cannot be a number.
	Name pulumi.StringOutput `pulumi:"name"`
	// Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore
	Optimized VertexAiFeatureOnlineStoreOptimizedPtrOutput `pulumi:"optimized"`
	Project   pulumi.StringOutput                          `pulumi:"project"`
	// The region of feature online store. eg us-central1
	Region pulumi.StringOutput `pulumi:"region"`
	// The state of the Feature Online Store. See the possible states in [this
	// link](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores#state).
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                      `pulumi:"terraformLabels"`
	Timeouts        VertexAiFeatureOnlineStoreTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp of when the feature online store was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	UpdateTime                   pulumi.StringOutput `pulumi:"updateTime"`
	VertexAiFeatureOnlineStoreId pulumi.StringOutput `pulumi:"vertexAiFeatureOnlineStoreId"`
}

// NewVertexAiFeatureOnlineStore registers a new resource with the given unique name, arguments, and options.
func NewVertexAiFeatureOnlineStore(ctx *pulumi.Context,
	name string, args *VertexAiFeatureOnlineStoreArgs, opts ...pulumi.ResourceOption) (*VertexAiFeatureOnlineStore, error) {
	if args == nil {
		args = &VertexAiFeatureOnlineStoreArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VertexAiFeatureOnlineStore
	err = ctx.RegisterPackageResource("google-beta:index/vertexAiFeatureOnlineStore:VertexAiFeatureOnlineStore", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVertexAiFeatureOnlineStore gets an existing VertexAiFeatureOnlineStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVertexAiFeatureOnlineStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VertexAiFeatureOnlineStoreState, opts ...pulumi.ResourceOption) (*VertexAiFeatureOnlineStore, error) {
	var resource VertexAiFeatureOnlineStore
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vertexAiFeatureOnlineStore:VertexAiFeatureOnlineStore", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VertexAiFeatureOnlineStore resources.
type vertexAiFeatureOnlineStoreState struct {
	// Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore.
	Bigtable *VertexAiFeatureOnlineStoreBigtable `pulumi:"bigtable"`
	// The timestamp of when the feature online store was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only
	// need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by
	// default.
	DedicatedServingEndpoint *VertexAiFeatureOnlineStoreDedicatedServingEndpoint `pulumi:"dedicatedServingEndpoint"`
	EffectiveLabels          map[string]string                                   `pulumi:"effectiveLabels"`
	// The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is
	// enabled by default for optimized storagetype.
	//
	// Deprecated: Deprecated
	EmbeddingManagement *VertexAiFeatureOnlineStoreEmbeddingManagement `pulumi:"embeddingManagement"`
	// Used to perform consistent read-modify-write updates.
	Etag *string `pulumi:"etag"`
	// If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// The labels with user-defined metadata to organize your feature online stores. **Note**: This field is non-authoritative,
	// and will only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of
	// the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are
	// [a-z0-9_]. The first character cannot be a number.
	Name *string `pulumi:"name"`
	// Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore
	Optimized *VertexAiFeatureOnlineStoreOptimized `pulumi:"optimized"`
	Project   *string                              `pulumi:"project"`
	// The region of feature online store. eg us-central1
	Region *string `pulumi:"region"`
	// The state of the Feature Online Store. See the possible states in [this
	// link](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores#state).
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                   `pulumi:"terraformLabels"`
	Timeouts        *VertexAiFeatureOnlineStoreTimeouts `pulumi:"timeouts"`
	// The timestamp of when the feature online store was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	UpdateTime                   *string `pulumi:"updateTime"`
	VertexAiFeatureOnlineStoreId *string `pulumi:"vertexAiFeatureOnlineStoreId"`
}

type VertexAiFeatureOnlineStoreState struct {
	// Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore.
	Bigtable VertexAiFeatureOnlineStoreBigtablePtrInput
	// The timestamp of when the feature online store was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits.
	CreateTime pulumi.StringPtrInput
	// The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only
	// need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by
	// default.
	DedicatedServingEndpoint VertexAiFeatureOnlineStoreDedicatedServingEndpointPtrInput
	EffectiveLabels          pulumi.StringMapInput
	// The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is
	// enabled by default for optimized storagetype.
	//
	// Deprecated: Deprecated
	EmbeddingManagement VertexAiFeatureOnlineStoreEmbeddingManagementPtrInput
	// Used to perform consistent read-modify-write updates.
	Etag pulumi.StringPtrInput
	// If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
	ForceDestroy pulumi.BoolPtrInput
	// The labels with user-defined metadata to organize your feature online stores. **Note**: This field is non-authoritative,
	// and will only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of
	// the labels present on the resource.
	Labels pulumi.StringMapInput
	// The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are
	// [a-z0-9_]. The first character cannot be a number.
	Name pulumi.StringPtrInput
	// Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore
	Optimized VertexAiFeatureOnlineStoreOptimizedPtrInput
	Project   pulumi.StringPtrInput
	// The region of feature online store. eg us-central1
	Region pulumi.StringPtrInput
	// The state of the Feature Online Store. See the possible states in [this
	// link](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores#state).
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        VertexAiFeatureOnlineStoreTimeoutsPtrInput
	// The timestamp of when the feature online store was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	UpdateTime                   pulumi.StringPtrInput
	VertexAiFeatureOnlineStoreId pulumi.StringPtrInput
}

func (VertexAiFeatureOnlineStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiFeatureOnlineStoreState)(nil)).Elem()
}

type vertexAiFeatureOnlineStoreArgs struct {
	// Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore.
	Bigtable *VertexAiFeatureOnlineStoreBigtable `pulumi:"bigtable"`
	// The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only
	// need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by
	// default.
	DedicatedServingEndpoint *VertexAiFeatureOnlineStoreDedicatedServingEndpoint `pulumi:"dedicatedServingEndpoint"`
	// The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is
	// enabled by default for optimized storagetype.
	//
	// Deprecated: Deprecated
	EmbeddingManagement *VertexAiFeatureOnlineStoreEmbeddingManagement `pulumi:"embeddingManagement"`
	// If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// The labels with user-defined metadata to organize your feature online stores. **Note**: This field is non-authoritative,
	// and will only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of
	// the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are
	// [a-z0-9_]. The first character cannot be a number.
	Name *string `pulumi:"name"`
	// Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore
	Optimized *VertexAiFeatureOnlineStoreOptimized `pulumi:"optimized"`
	Project   *string                              `pulumi:"project"`
	// The region of feature online store. eg us-central1
	Region                       *string                             `pulumi:"region"`
	Timeouts                     *VertexAiFeatureOnlineStoreTimeouts `pulumi:"timeouts"`
	VertexAiFeatureOnlineStoreId *string                             `pulumi:"vertexAiFeatureOnlineStoreId"`
}

// The set of arguments for constructing a VertexAiFeatureOnlineStore resource.
type VertexAiFeatureOnlineStoreArgs struct {
	// Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore.
	Bigtable VertexAiFeatureOnlineStoreBigtablePtrInput
	// The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only
	// need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by
	// default.
	DedicatedServingEndpoint VertexAiFeatureOnlineStoreDedicatedServingEndpointPtrInput
	// The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is
	// enabled by default for optimized storagetype.
	//
	// Deprecated: Deprecated
	EmbeddingManagement VertexAiFeatureOnlineStoreEmbeddingManagementPtrInput
	// If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
	ForceDestroy pulumi.BoolPtrInput
	// The labels with user-defined metadata to organize your feature online stores. **Note**: This field is non-authoritative,
	// and will only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of
	// the labels present on the resource.
	Labels pulumi.StringMapInput
	// The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are
	// [a-z0-9_]. The first character cannot be a number.
	Name pulumi.StringPtrInput
	// Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this
	// FeatureOnlineStore
	Optimized VertexAiFeatureOnlineStoreOptimizedPtrInput
	Project   pulumi.StringPtrInput
	// The region of feature online store. eg us-central1
	Region                       pulumi.StringPtrInput
	Timeouts                     VertexAiFeatureOnlineStoreTimeoutsPtrInput
	VertexAiFeatureOnlineStoreId pulumi.StringPtrInput
}

func (VertexAiFeatureOnlineStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiFeatureOnlineStoreArgs)(nil)).Elem()
}

type VertexAiFeatureOnlineStoreInput interface {
	pulumi.Input

	ToVertexAiFeatureOnlineStoreOutput() VertexAiFeatureOnlineStoreOutput
	ToVertexAiFeatureOnlineStoreOutputWithContext(ctx context.Context) VertexAiFeatureOnlineStoreOutput
}

func (*VertexAiFeatureOnlineStore) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiFeatureOnlineStore)(nil)).Elem()
}

func (i *VertexAiFeatureOnlineStore) ToVertexAiFeatureOnlineStoreOutput() VertexAiFeatureOnlineStoreOutput {
	return i.ToVertexAiFeatureOnlineStoreOutputWithContext(context.Background())
}

func (i *VertexAiFeatureOnlineStore) ToVertexAiFeatureOnlineStoreOutputWithContext(ctx context.Context) VertexAiFeatureOnlineStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VertexAiFeatureOnlineStoreOutput)
}

type VertexAiFeatureOnlineStoreOutput struct{ *pulumi.OutputState }

func (VertexAiFeatureOnlineStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiFeatureOnlineStore)(nil)).Elem()
}

func (o VertexAiFeatureOnlineStoreOutput) ToVertexAiFeatureOnlineStoreOutput() VertexAiFeatureOnlineStoreOutput {
	return o
}

func (o VertexAiFeatureOnlineStoreOutput) ToVertexAiFeatureOnlineStoreOutputWithContext(ctx context.Context) VertexAiFeatureOnlineStoreOutput {
	return o
}

// Settings for Cloud Bigtable instance that will be created to serve featureValues for all FeatureViews under this
// FeatureOnlineStore.
func (o VertexAiFeatureOnlineStoreOutput) Bigtable() VertexAiFeatureOnlineStoreBigtablePtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) VertexAiFeatureOnlineStoreBigtablePtrOutput { return v.Bigtable }).(VertexAiFeatureOnlineStoreBigtablePtrOutput)
}

// The timestamp of when the feature online store was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and
// up to nine fractional digits.
func (o VertexAiFeatureOnlineStoreOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The dedicated serving endpoint for this FeatureOnlineStore, which is different from common vertex service endpoint. Only
// need to be set when you choose Optimized storage type or enable EmbeddingManagement. Will use public endpoint by
// default.
func (o VertexAiFeatureOnlineStoreOutput) DedicatedServingEndpoint() VertexAiFeatureOnlineStoreDedicatedServingEndpointPtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) VertexAiFeatureOnlineStoreDedicatedServingEndpointPtrOutput {
		return v.DedicatedServingEndpoint
	}).(VertexAiFeatureOnlineStoreDedicatedServingEndpointPtrOutput)
}

func (o VertexAiFeatureOnlineStoreOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The settings for embedding management in FeatureOnlineStore. Embedding management can only be set for BigTable. It is
// enabled by default for optimized storagetype.
//
// Deprecated: Deprecated
func (o VertexAiFeatureOnlineStoreOutput) EmbeddingManagement() VertexAiFeatureOnlineStoreEmbeddingManagementPtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) VertexAiFeatureOnlineStoreEmbeddingManagementPtrOutput {
		return v.EmbeddingManagement
	}).(VertexAiFeatureOnlineStoreEmbeddingManagementPtrOutput)
}

// Used to perform consistent read-modify-write updates.
func (o VertexAiFeatureOnlineStoreOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// If set to true, any FeatureViews and Features for this FeatureOnlineStore will also be deleted.
func (o VertexAiFeatureOnlineStoreOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

// The labels with user-defined metadata to organize your feature online stores. **Note**: This field is non-authoritative,
// and will only manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of
// the labels present on the resource.
func (o VertexAiFeatureOnlineStoreOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name of the Feature Online Store. This value may be up to 60 characters, and valid characters are
// [a-z0-9_]. The first character cannot be a number.
func (o VertexAiFeatureOnlineStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Settings for the Optimized store that will be created to serve featureValues for all FeatureViews under this
// FeatureOnlineStore
func (o VertexAiFeatureOnlineStoreOutput) Optimized() VertexAiFeatureOnlineStoreOptimizedPtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) VertexAiFeatureOnlineStoreOptimizedPtrOutput { return v.Optimized }).(VertexAiFeatureOnlineStoreOptimizedPtrOutput)
}

func (o VertexAiFeatureOnlineStoreOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of feature online store. eg us-central1
func (o VertexAiFeatureOnlineStoreOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The state of the Feature Online Store. See the possible states in [this
// link](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.featureOnlineStores#state).
func (o VertexAiFeatureOnlineStoreOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o VertexAiFeatureOnlineStoreOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o VertexAiFeatureOnlineStoreOutput) Timeouts() VertexAiFeatureOnlineStoreTimeoutsPtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) VertexAiFeatureOnlineStoreTimeoutsPtrOutput { return v.Timeouts }).(VertexAiFeatureOnlineStoreTimeoutsPtrOutput)
}

// The timestamp of when the feature online store was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
func (o VertexAiFeatureOnlineStoreOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o VertexAiFeatureOnlineStoreOutput) VertexAiFeatureOnlineStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStore) pulumi.StringOutput { return v.VertexAiFeatureOnlineStoreId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VertexAiFeatureOnlineStoreInput)(nil)).Elem(), &VertexAiFeatureOnlineStore{})
	pulumi.RegisterOutputType(VertexAiFeatureOnlineStoreOutput{})
}
