// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoggingLogViewIamMember struct {
	pulumi.CustomResourceState

	Bucket                    pulumi.StringOutput                       `pulumi:"bucket"`
	Condition                 LoggingLogViewIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                      pulumi.StringOutput                       `pulumi:"etag"`
	Location                  pulumi.StringOutput                       `pulumi:"location"`
	LoggingLogViewIamMemberId pulumi.StringOutput                       `pulumi:"loggingLogViewIamMemberId"`
	Member                    pulumi.StringOutput                       `pulumi:"member"`
	Name                      pulumi.StringOutput                       `pulumi:"name"`
	Parent                    pulumi.StringOutput                       `pulumi:"parent"`
	Role                      pulumi.StringOutput                       `pulumi:"role"`
}

// NewLoggingLogViewIamMember registers a new resource with the given unique name, arguments, and options.
func NewLoggingLogViewIamMember(ctx *pulumi.Context,
	name string, args *LoggingLogViewIamMemberArgs, opts ...pulumi.ResourceOption) (*LoggingLogViewIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource LoggingLogViewIamMember
	err = ctx.RegisterPackageResource("google-beta:index/loggingLogViewIamMember:LoggingLogViewIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingLogViewIamMember gets an existing LoggingLogViewIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingLogViewIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingLogViewIamMemberState, opts ...pulumi.ResourceOption) (*LoggingLogViewIamMember, error) {
	var resource LoggingLogViewIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/loggingLogViewIamMember:LoggingLogViewIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingLogViewIamMember resources.
type loggingLogViewIamMemberState struct {
	Bucket                    *string                           `pulumi:"bucket"`
	Condition                 *LoggingLogViewIamMemberCondition `pulumi:"condition"`
	Etag                      *string                           `pulumi:"etag"`
	Location                  *string                           `pulumi:"location"`
	LoggingLogViewIamMemberId *string                           `pulumi:"loggingLogViewIamMemberId"`
	Member                    *string                           `pulumi:"member"`
	Name                      *string                           `pulumi:"name"`
	Parent                    *string                           `pulumi:"parent"`
	Role                      *string                           `pulumi:"role"`
}

type LoggingLogViewIamMemberState struct {
	Bucket                    pulumi.StringPtrInput
	Condition                 LoggingLogViewIamMemberConditionPtrInput
	Etag                      pulumi.StringPtrInput
	Location                  pulumi.StringPtrInput
	LoggingLogViewIamMemberId pulumi.StringPtrInput
	Member                    pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	Parent                    pulumi.StringPtrInput
	Role                      pulumi.StringPtrInput
}

func (LoggingLogViewIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingLogViewIamMemberState)(nil)).Elem()
}

type loggingLogViewIamMemberArgs struct {
	Bucket                    string                            `pulumi:"bucket"`
	Condition                 *LoggingLogViewIamMemberCondition `pulumi:"condition"`
	Location                  *string                           `pulumi:"location"`
	LoggingLogViewIamMemberId *string                           `pulumi:"loggingLogViewIamMemberId"`
	Member                    string                            `pulumi:"member"`
	Name                      *string                           `pulumi:"name"`
	Parent                    string                            `pulumi:"parent"`
	Role                      string                            `pulumi:"role"`
}

// The set of arguments for constructing a LoggingLogViewIamMember resource.
type LoggingLogViewIamMemberArgs struct {
	Bucket                    pulumi.StringInput
	Condition                 LoggingLogViewIamMemberConditionPtrInput
	Location                  pulumi.StringPtrInput
	LoggingLogViewIamMemberId pulumi.StringPtrInput
	Member                    pulumi.StringInput
	Name                      pulumi.StringPtrInput
	Parent                    pulumi.StringInput
	Role                      pulumi.StringInput
}

func (LoggingLogViewIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingLogViewIamMemberArgs)(nil)).Elem()
}

type LoggingLogViewIamMemberInput interface {
	pulumi.Input

	ToLoggingLogViewIamMemberOutput() LoggingLogViewIamMemberOutput
	ToLoggingLogViewIamMemberOutputWithContext(ctx context.Context) LoggingLogViewIamMemberOutput
}

func (*LoggingLogViewIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingLogViewIamMember)(nil)).Elem()
}

func (i *LoggingLogViewIamMember) ToLoggingLogViewIamMemberOutput() LoggingLogViewIamMemberOutput {
	return i.ToLoggingLogViewIamMemberOutputWithContext(context.Background())
}

func (i *LoggingLogViewIamMember) ToLoggingLogViewIamMemberOutputWithContext(ctx context.Context) LoggingLogViewIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingLogViewIamMemberOutput)
}

type LoggingLogViewIamMemberOutput struct{ *pulumi.OutputState }

func (LoggingLogViewIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingLogViewIamMember)(nil)).Elem()
}

func (o LoggingLogViewIamMemberOutput) ToLoggingLogViewIamMemberOutput() LoggingLogViewIamMemberOutput {
	return o
}

func (o LoggingLogViewIamMemberOutput) ToLoggingLogViewIamMemberOutputWithContext(ctx context.Context) LoggingLogViewIamMemberOutput {
	return o
}

func (o LoggingLogViewIamMemberOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamMember) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamMemberOutput) Condition() LoggingLogViewIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *LoggingLogViewIamMember) LoggingLogViewIamMemberConditionPtrOutput { return v.Condition }).(LoggingLogViewIamMemberConditionPtrOutput)
}

func (o LoggingLogViewIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamMemberOutput) LoggingLogViewIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamMember) pulumi.StringOutput { return v.LoggingLogViewIamMemberId }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamMemberOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamMember) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingLogViewIamMemberInput)(nil)).Elem(), &LoggingLogViewIamMember{})
	pulumi.RegisterOutputType(LoggingLogViewIamMemberOutput{})
}
