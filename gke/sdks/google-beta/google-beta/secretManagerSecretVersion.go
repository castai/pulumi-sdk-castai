// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecretManagerSecretVersion struct {
	pulumi.CustomResourceState

	// The time at which the Secret was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The deletion policy for the secret version. Setting 'ABANDON' allows the resource to be abandoned rather than deleted.
	// Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values are: *
	// DELETE * DISABLE * ABANDON
	DeletionPolicy pulumi.StringPtrOutput `pulumi:"deletionPolicy"`
	// The time at which the Secret was destroyed. Only present if state is DESTROYED.
	DestroyTime pulumi.StringOutput `pulumi:"destroyTime"`
	// The current state of the SecretVersion.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 pulumi.BoolPtrOutput `pulumi:"isSecretDataBase64"`
	// The resource name of the SecretVersion. Format: 'projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}'
	Name pulumi.StringOutput `pulumi:"name"`
	// Secret Manager secret resource
	Secret pulumi.StringOutput `pulumi:"secret"`
	// The secret data. Must be no larger than 64KiB.
	SecretData                   pulumi.StringOutput                         `pulumi:"secretData"`
	SecretManagerSecretVersionId pulumi.StringOutput                         `pulumi:"secretManagerSecretVersionId"`
	Timeouts                     SecretManagerSecretVersionTimeoutsPtrOutput `pulumi:"timeouts"`
	// The version of the Secret.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewSecretManagerSecretVersion registers a new resource with the given unique name, arguments, and options.
func NewSecretManagerSecretVersion(ctx *pulumi.Context,
	name string, args *SecretManagerSecretVersionArgs, opts ...pulumi.ResourceOption) (*SecretManagerSecretVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Secret == nil {
		return nil, errors.New("invalid value for required argument 'Secret'")
	}
	if args.SecretData == nil {
		return nil, errors.New("invalid value for required argument 'SecretData'")
	}
	if args.SecretData != nil {
		args.SecretData = pulumi.ToSecret(args.SecretData).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretData",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SecretManagerSecretVersion
	err = ctx.RegisterPackageResource("google-beta:index/secretManagerSecretVersion:SecretManagerSecretVersion", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretManagerSecretVersion gets an existing SecretManagerSecretVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretManagerSecretVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretManagerSecretVersionState, opts ...pulumi.ResourceOption) (*SecretManagerSecretVersion, error) {
	var resource SecretManagerSecretVersion
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/secretManagerSecretVersion:SecretManagerSecretVersion", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretManagerSecretVersion resources.
type secretManagerSecretVersionState struct {
	// The time at which the Secret was created.
	CreateTime *string `pulumi:"createTime"`
	// The deletion policy for the secret version. Setting 'ABANDON' allows the resource to be abandoned rather than deleted.
	// Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values are: *
	// DELETE * DISABLE * ABANDON
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// The time at which the Secret was destroyed. Only present if state is DESTROYED.
	DestroyTime *string `pulumi:"destroyTime"`
	// The current state of the SecretVersion.
	Enabled *bool `pulumi:"enabled"`
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 *bool `pulumi:"isSecretDataBase64"`
	// The resource name of the SecretVersion. Format: 'projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}'
	Name *string `pulumi:"name"`
	// Secret Manager secret resource
	Secret *string `pulumi:"secret"`
	// The secret data. Must be no larger than 64KiB.
	SecretData                   *string                             `pulumi:"secretData"`
	SecretManagerSecretVersionId *string                             `pulumi:"secretManagerSecretVersionId"`
	Timeouts                     *SecretManagerSecretVersionTimeouts `pulumi:"timeouts"`
	// The version of the Secret.
	Version *string `pulumi:"version"`
}

type SecretManagerSecretVersionState struct {
	// The time at which the Secret was created.
	CreateTime pulumi.StringPtrInput
	// The deletion policy for the secret version. Setting 'ABANDON' allows the resource to be abandoned rather than deleted.
	// Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values are: *
	// DELETE * DISABLE * ABANDON
	DeletionPolicy pulumi.StringPtrInput
	// The time at which the Secret was destroyed. Only present if state is DESTROYED.
	DestroyTime pulumi.StringPtrInput
	// The current state of the SecretVersion.
	Enabled pulumi.BoolPtrInput
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 pulumi.BoolPtrInput
	// The resource name of the SecretVersion. Format: 'projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}'
	Name pulumi.StringPtrInput
	// Secret Manager secret resource
	Secret pulumi.StringPtrInput
	// The secret data. Must be no larger than 64KiB.
	SecretData                   pulumi.StringPtrInput
	SecretManagerSecretVersionId pulumi.StringPtrInput
	Timeouts                     SecretManagerSecretVersionTimeoutsPtrInput
	// The version of the Secret.
	Version pulumi.StringPtrInput
}

func (SecretManagerSecretVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretManagerSecretVersionState)(nil)).Elem()
}

type secretManagerSecretVersionArgs struct {
	// The deletion policy for the secret version. Setting 'ABANDON' allows the resource to be abandoned rather than deleted.
	// Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values are: *
	// DELETE * DISABLE * ABANDON
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// The current state of the SecretVersion.
	Enabled *bool `pulumi:"enabled"`
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 *bool `pulumi:"isSecretDataBase64"`
	// Secret Manager secret resource
	Secret string `pulumi:"secret"`
	// The secret data. Must be no larger than 64KiB.
	SecretData                   string                              `pulumi:"secretData"`
	SecretManagerSecretVersionId *string                             `pulumi:"secretManagerSecretVersionId"`
	Timeouts                     *SecretManagerSecretVersionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SecretManagerSecretVersion resource.
type SecretManagerSecretVersionArgs struct {
	// The deletion policy for the secret version. Setting 'ABANDON' allows the resource to be abandoned rather than deleted.
	// Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values are: *
	// DELETE * DISABLE * ABANDON
	DeletionPolicy pulumi.StringPtrInput
	// The current state of the SecretVersion.
	Enabled pulumi.BoolPtrInput
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 pulumi.BoolPtrInput
	// Secret Manager secret resource
	Secret pulumi.StringInput
	// The secret data. Must be no larger than 64KiB.
	SecretData                   pulumi.StringInput
	SecretManagerSecretVersionId pulumi.StringPtrInput
	Timeouts                     SecretManagerSecretVersionTimeoutsPtrInput
}

func (SecretManagerSecretVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretManagerSecretVersionArgs)(nil)).Elem()
}

type SecretManagerSecretVersionInput interface {
	pulumi.Input

	ToSecretManagerSecretVersionOutput() SecretManagerSecretVersionOutput
	ToSecretManagerSecretVersionOutputWithContext(ctx context.Context) SecretManagerSecretVersionOutput
}

func (*SecretManagerSecretVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretManagerSecretVersion)(nil)).Elem()
}

func (i *SecretManagerSecretVersion) ToSecretManagerSecretVersionOutput() SecretManagerSecretVersionOutput {
	return i.ToSecretManagerSecretVersionOutputWithContext(context.Background())
}

func (i *SecretManagerSecretVersion) ToSecretManagerSecretVersionOutputWithContext(ctx context.Context) SecretManagerSecretVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretManagerSecretVersionOutput)
}

type SecretManagerSecretVersionOutput struct{ *pulumi.OutputState }

func (SecretManagerSecretVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretManagerSecretVersion)(nil)).Elem()
}

func (o SecretManagerSecretVersionOutput) ToSecretManagerSecretVersionOutput() SecretManagerSecretVersionOutput {
	return o
}

func (o SecretManagerSecretVersionOutput) ToSecretManagerSecretVersionOutputWithContext(ctx context.Context) SecretManagerSecretVersionOutput {
	return o
}

// The time at which the Secret was created.
func (o SecretManagerSecretVersionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The deletion policy for the secret version. Setting 'ABANDON' allows the resource to be abandoned rather than deleted.
// Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values are: *
// DELETE * DISABLE * ABANDON
func (o SecretManagerSecretVersionOutput) DeletionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.StringPtrOutput { return v.DeletionPolicy }).(pulumi.StringPtrOutput)
}

// The time at which the Secret was destroyed. Only present if state is DESTROYED.
func (o SecretManagerSecretVersionOutput) DestroyTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.StringOutput { return v.DestroyTime }).(pulumi.StringOutput)
}

// The current state of the SecretVersion.
func (o SecretManagerSecretVersionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
func (o SecretManagerSecretVersionOutput) IsSecretDataBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.BoolPtrOutput { return v.IsSecretDataBase64 }).(pulumi.BoolPtrOutput)
}

// The resource name of the SecretVersion. Format: 'projects/{{project}}/secrets/{{secret_id}}/versions/{{version}}'
func (o SecretManagerSecretVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Secret Manager secret resource
func (o SecretManagerSecretVersionOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.StringOutput { return v.Secret }).(pulumi.StringOutput)
}

// The secret data. Must be no larger than 64KiB.
func (o SecretManagerSecretVersionOutput) SecretData() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.StringOutput { return v.SecretData }).(pulumi.StringOutput)
}

func (o SecretManagerSecretVersionOutput) SecretManagerSecretVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.StringOutput { return v.SecretManagerSecretVersionId }).(pulumi.StringOutput)
}

func (o SecretManagerSecretVersionOutput) Timeouts() SecretManagerSecretVersionTimeoutsPtrOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) SecretManagerSecretVersionTimeoutsPtrOutput { return v.Timeouts }).(SecretManagerSecretVersionTimeoutsPtrOutput)
}

// The version of the Secret.
func (o SecretManagerSecretVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecretVersion) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretManagerSecretVersionInput)(nil)).Elem(), &SecretManagerSecretVersion{})
	pulumi.RegisterOutputType(SecretManagerSecretVersionOutput{})
}
