// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeDiskIamPolicy struct {
	pulumi.CustomResourceState

	ComputeDiskIamPolicyId pulumi.StringOutput `pulumi:"computeDiskIamPolicyId"`
	Etag                   pulumi.StringOutput `pulumi:"etag"`
	Name                   pulumi.StringOutput `pulumi:"name"`
	PolicyData             pulumi.StringOutput `pulumi:"policyData"`
	Project                pulumi.StringOutput `pulumi:"project"`
	Zone                   pulumi.StringOutput `pulumi:"zone"`
}

// NewComputeDiskIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewComputeDiskIamPolicy(ctx *pulumi.Context,
	name string, args *ComputeDiskIamPolicyArgs, opts ...pulumi.ResourceOption) (*ComputeDiskIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeDiskIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/computeDiskIamPolicy:ComputeDiskIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeDiskIamPolicy gets an existing ComputeDiskIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeDiskIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeDiskIamPolicyState, opts ...pulumi.ResourceOption) (*ComputeDiskIamPolicy, error) {
	var resource ComputeDiskIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeDiskIamPolicy:ComputeDiskIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeDiskIamPolicy resources.
type computeDiskIamPolicyState struct {
	ComputeDiskIamPolicyId *string `pulumi:"computeDiskIamPolicyId"`
	Etag                   *string `pulumi:"etag"`
	Name                   *string `pulumi:"name"`
	PolicyData             *string `pulumi:"policyData"`
	Project                *string `pulumi:"project"`
	Zone                   *string `pulumi:"zone"`
}

type ComputeDiskIamPolicyState struct {
	ComputeDiskIamPolicyId pulumi.StringPtrInput
	Etag                   pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	PolicyData             pulumi.StringPtrInput
	Project                pulumi.StringPtrInput
	Zone                   pulumi.StringPtrInput
}

func (ComputeDiskIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeDiskIamPolicyState)(nil)).Elem()
}

type computeDiskIamPolicyArgs struct {
	ComputeDiskIamPolicyId *string `pulumi:"computeDiskIamPolicyId"`
	Name                   *string `pulumi:"name"`
	PolicyData             string  `pulumi:"policyData"`
	Project                *string `pulumi:"project"`
	Zone                   *string `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeDiskIamPolicy resource.
type ComputeDiskIamPolicyArgs struct {
	ComputeDiskIamPolicyId pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	PolicyData             pulumi.StringInput
	Project                pulumi.StringPtrInput
	Zone                   pulumi.StringPtrInput
}

func (ComputeDiskIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeDiskIamPolicyArgs)(nil)).Elem()
}

type ComputeDiskIamPolicyInput interface {
	pulumi.Input

	ToComputeDiskIamPolicyOutput() ComputeDiskIamPolicyOutput
	ToComputeDiskIamPolicyOutputWithContext(ctx context.Context) ComputeDiskIamPolicyOutput
}

func (*ComputeDiskIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeDiskIamPolicy)(nil)).Elem()
}

func (i *ComputeDiskIamPolicy) ToComputeDiskIamPolicyOutput() ComputeDiskIamPolicyOutput {
	return i.ToComputeDiskIamPolicyOutputWithContext(context.Background())
}

func (i *ComputeDiskIamPolicy) ToComputeDiskIamPolicyOutputWithContext(ctx context.Context) ComputeDiskIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDiskIamPolicyOutput)
}

type ComputeDiskIamPolicyOutput struct{ *pulumi.OutputState }

func (ComputeDiskIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeDiskIamPolicy)(nil)).Elem()
}

func (o ComputeDiskIamPolicyOutput) ToComputeDiskIamPolicyOutput() ComputeDiskIamPolicyOutput {
	return o
}

func (o ComputeDiskIamPolicyOutput) ToComputeDiskIamPolicyOutputWithContext(ctx context.Context) ComputeDiskIamPolicyOutput {
	return o
}

func (o ComputeDiskIamPolicyOutput) ComputeDiskIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDiskIamPolicy) pulumi.StringOutput { return v.ComputeDiskIamPolicyId }).(pulumi.StringOutput)
}

func (o ComputeDiskIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDiskIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeDiskIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDiskIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeDiskIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDiskIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ComputeDiskIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDiskIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeDiskIamPolicyOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeDiskIamPolicy) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeDiskIamPolicyInput)(nil)).Elem(), &ComputeDiskIamPolicy{})
	pulumi.RegisterOutputType(ComputeDiskIamPolicyOutput{})
}
