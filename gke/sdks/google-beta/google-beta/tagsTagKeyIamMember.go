// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TagsTagKeyIamMember struct {
	pulumi.CustomResourceState

	Condition             TagsTagKeyIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                  pulumi.StringOutput                   `pulumi:"etag"`
	Member                pulumi.StringOutput                   `pulumi:"member"`
	Role                  pulumi.StringOutput                   `pulumi:"role"`
	TagKey                pulumi.StringOutput                   `pulumi:"tagKey"`
	TagsTagKeyIamMemberId pulumi.StringOutput                   `pulumi:"tagsTagKeyIamMemberId"`
}

// NewTagsTagKeyIamMember registers a new resource with the given unique name, arguments, and options.
func NewTagsTagKeyIamMember(ctx *pulumi.Context,
	name string, args *TagsTagKeyIamMemberArgs, opts ...pulumi.ResourceOption) (*TagsTagKeyIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.TagKey == nil {
		return nil, errors.New("invalid value for required argument 'TagKey'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource TagsTagKeyIamMember
	err = ctx.RegisterPackageResource("google-beta:index/tagsTagKeyIamMember:TagsTagKeyIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagsTagKeyIamMember gets an existing TagsTagKeyIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagsTagKeyIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagsTagKeyIamMemberState, opts ...pulumi.ResourceOption) (*TagsTagKeyIamMember, error) {
	var resource TagsTagKeyIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/tagsTagKeyIamMember:TagsTagKeyIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagsTagKeyIamMember resources.
type tagsTagKeyIamMemberState struct {
	Condition             *TagsTagKeyIamMemberCondition `pulumi:"condition"`
	Etag                  *string                       `pulumi:"etag"`
	Member                *string                       `pulumi:"member"`
	Role                  *string                       `pulumi:"role"`
	TagKey                *string                       `pulumi:"tagKey"`
	TagsTagKeyIamMemberId *string                       `pulumi:"tagsTagKeyIamMemberId"`
}

type TagsTagKeyIamMemberState struct {
	Condition             TagsTagKeyIamMemberConditionPtrInput
	Etag                  pulumi.StringPtrInput
	Member                pulumi.StringPtrInput
	Role                  pulumi.StringPtrInput
	TagKey                pulumi.StringPtrInput
	TagsTagKeyIamMemberId pulumi.StringPtrInput
}

func (TagsTagKeyIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagsTagKeyIamMemberState)(nil)).Elem()
}

type tagsTagKeyIamMemberArgs struct {
	Condition             *TagsTagKeyIamMemberCondition `pulumi:"condition"`
	Member                string                        `pulumi:"member"`
	Role                  string                        `pulumi:"role"`
	TagKey                string                        `pulumi:"tagKey"`
	TagsTagKeyIamMemberId *string                       `pulumi:"tagsTagKeyIamMemberId"`
}

// The set of arguments for constructing a TagsTagKeyIamMember resource.
type TagsTagKeyIamMemberArgs struct {
	Condition             TagsTagKeyIamMemberConditionPtrInput
	Member                pulumi.StringInput
	Role                  pulumi.StringInput
	TagKey                pulumi.StringInput
	TagsTagKeyIamMemberId pulumi.StringPtrInput
}

func (TagsTagKeyIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagsTagKeyIamMemberArgs)(nil)).Elem()
}

type TagsTagKeyIamMemberInput interface {
	pulumi.Input

	ToTagsTagKeyIamMemberOutput() TagsTagKeyIamMemberOutput
	ToTagsTagKeyIamMemberOutputWithContext(ctx context.Context) TagsTagKeyIamMemberOutput
}

func (*TagsTagKeyIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**TagsTagKeyIamMember)(nil)).Elem()
}

func (i *TagsTagKeyIamMember) ToTagsTagKeyIamMemberOutput() TagsTagKeyIamMemberOutput {
	return i.ToTagsTagKeyIamMemberOutputWithContext(context.Background())
}

func (i *TagsTagKeyIamMember) ToTagsTagKeyIamMemberOutputWithContext(ctx context.Context) TagsTagKeyIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagsTagKeyIamMemberOutput)
}

type TagsTagKeyIamMemberOutput struct{ *pulumi.OutputState }

func (TagsTagKeyIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagsTagKeyIamMember)(nil)).Elem()
}

func (o TagsTagKeyIamMemberOutput) ToTagsTagKeyIamMemberOutput() TagsTagKeyIamMemberOutput {
	return o
}

func (o TagsTagKeyIamMemberOutput) ToTagsTagKeyIamMemberOutputWithContext(ctx context.Context) TagsTagKeyIamMemberOutput {
	return o
}

func (o TagsTagKeyIamMemberOutput) Condition() TagsTagKeyIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *TagsTagKeyIamMember) TagsTagKeyIamMemberConditionPtrOutput { return v.Condition }).(TagsTagKeyIamMemberConditionPtrOutput)
}

func (o TagsTagKeyIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKeyIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o TagsTagKeyIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKeyIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o TagsTagKeyIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKeyIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o TagsTagKeyIamMemberOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKeyIamMember) pulumi.StringOutput { return v.TagKey }).(pulumi.StringOutput)
}

func (o TagsTagKeyIamMemberOutput) TagsTagKeyIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKeyIamMember) pulumi.StringOutput { return v.TagsTagKeyIamMemberId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagsTagKeyIamMemberInput)(nil)).Elem(), &TagsTagKeyIamMember{})
	pulumi.RegisterOutputType(TagsTagKeyIamMemberOutput{})
}
