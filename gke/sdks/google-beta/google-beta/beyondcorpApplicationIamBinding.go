// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BeyondcorpApplicationIamBinding struct {
	pulumi.CustomResourceState

	ApplicationId                     pulumi.StringOutput                               `pulumi:"applicationId"`
	BeyondcorpApplicationIamBindingId pulumi.StringOutput                               `pulumi:"beyondcorpApplicationIamBindingId"`
	Condition                         BeyondcorpApplicationIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                              pulumi.StringOutput                               `pulumi:"etag"`
	Members                           pulumi.StringArrayOutput                          `pulumi:"members"`
	Project                           pulumi.StringOutput                               `pulumi:"project"`
	Role                              pulumi.StringOutput                               `pulumi:"role"`
	SecurityGatewaysId                pulumi.StringOutput                               `pulumi:"securityGatewaysId"`
}

// NewBeyondcorpApplicationIamBinding registers a new resource with the given unique name, arguments, and options.
func NewBeyondcorpApplicationIamBinding(ctx *pulumi.Context,
	name string, args *BeyondcorpApplicationIamBindingArgs, opts ...pulumi.ResourceOption) (*BeyondcorpApplicationIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.SecurityGatewaysId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGatewaysId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BeyondcorpApplicationIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/beyondcorpApplicationIamBinding:BeyondcorpApplicationIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBeyondcorpApplicationIamBinding gets an existing BeyondcorpApplicationIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBeyondcorpApplicationIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BeyondcorpApplicationIamBindingState, opts ...pulumi.ResourceOption) (*BeyondcorpApplicationIamBinding, error) {
	var resource BeyondcorpApplicationIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/beyondcorpApplicationIamBinding:BeyondcorpApplicationIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BeyondcorpApplicationIamBinding resources.
type beyondcorpApplicationIamBindingState struct {
	ApplicationId                     *string                                   `pulumi:"applicationId"`
	BeyondcorpApplicationIamBindingId *string                                   `pulumi:"beyondcorpApplicationIamBindingId"`
	Condition                         *BeyondcorpApplicationIamBindingCondition `pulumi:"condition"`
	Etag                              *string                                   `pulumi:"etag"`
	Members                           []string                                  `pulumi:"members"`
	Project                           *string                                   `pulumi:"project"`
	Role                              *string                                   `pulumi:"role"`
	SecurityGatewaysId                *string                                   `pulumi:"securityGatewaysId"`
}

type BeyondcorpApplicationIamBindingState struct {
	ApplicationId                     pulumi.StringPtrInput
	BeyondcorpApplicationIamBindingId pulumi.StringPtrInput
	Condition                         BeyondcorpApplicationIamBindingConditionPtrInput
	Etag                              pulumi.StringPtrInput
	Members                           pulumi.StringArrayInput
	Project                           pulumi.StringPtrInput
	Role                              pulumi.StringPtrInput
	SecurityGatewaysId                pulumi.StringPtrInput
}

func (BeyondcorpApplicationIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpApplicationIamBindingState)(nil)).Elem()
}

type beyondcorpApplicationIamBindingArgs struct {
	ApplicationId                     string                                    `pulumi:"applicationId"`
	BeyondcorpApplicationIamBindingId *string                                   `pulumi:"beyondcorpApplicationIamBindingId"`
	Condition                         *BeyondcorpApplicationIamBindingCondition `pulumi:"condition"`
	Members                           []string                                  `pulumi:"members"`
	Project                           *string                                   `pulumi:"project"`
	Role                              string                                    `pulumi:"role"`
	SecurityGatewaysId                string                                    `pulumi:"securityGatewaysId"`
}

// The set of arguments for constructing a BeyondcorpApplicationIamBinding resource.
type BeyondcorpApplicationIamBindingArgs struct {
	ApplicationId                     pulumi.StringInput
	BeyondcorpApplicationIamBindingId pulumi.StringPtrInput
	Condition                         BeyondcorpApplicationIamBindingConditionPtrInput
	Members                           pulumi.StringArrayInput
	Project                           pulumi.StringPtrInput
	Role                              pulumi.StringInput
	SecurityGatewaysId                pulumi.StringInput
}

func (BeyondcorpApplicationIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpApplicationIamBindingArgs)(nil)).Elem()
}

type BeyondcorpApplicationIamBindingInput interface {
	pulumi.Input

	ToBeyondcorpApplicationIamBindingOutput() BeyondcorpApplicationIamBindingOutput
	ToBeyondcorpApplicationIamBindingOutputWithContext(ctx context.Context) BeyondcorpApplicationIamBindingOutput
}

func (*BeyondcorpApplicationIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpApplicationIamBinding)(nil)).Elem()
}

func (i *BeyondcorpApplicationIamBinding) ToBeyondcorpApplicationIamBindingOutput() BeyondcorpApplicationIamBindingOutput {
	return i.ToBeyondcorpApplicationIamBindingOutputWithContext(context.Background())
}

func (i *BeyondcorpApplicationIamBinding) ToBeyondcorpApplicationIamBindingOutputWithContext(ctx context.Context) BeyondcorpApplicationIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BeyondcorpApplicationIamBindingOutput)
}

type BeyondcorpApplicationIamBindingOutput struct{ *pulumi.OutputState }

func (BeyondcorpApplicationIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpApplicationIamBinding)(nil)).Elem()
}

func (o BeyondcorpApplicationIamBindingOutput) ToBeyondcorpApplicationIamBindingOutput() BeyondcorpApplicationIamBindingOutput {
	return o
}

func (o BeyondcorpApplicationIamBindingOutput) ToBeyondcorpApplicationIamBindingOutputWithContext(ctx context.Context) BeyondcorpApplicationIamBindingOutput {
	return o
}

func (o BeyondcorpApplicationIamBindingOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamBinding) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamBindingOutput) BeyondcorpApplicationIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamBinding) pulumi.StringOutput {
		return v.BeyondcorpApplicationIamBindingId
	}).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamBindingOutput) Condition() BeyondcorpApplicationIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamBinding) BeyondcorpApplicationIamBindingConditionPtrOutput {
		return v.Condition
	}).(BeyondcorpApplicationIamBindingConditionPtrOutput)
}

func (o BeyondcorpApplicationIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o BeyondcorpApplicationIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationIamBindingOutput) SecurityGatewaysId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplicationIamBinding) pulumi.StringOutput { return v.SecurityGatewaysId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BeyondcorpApplicationIamBindingInput)(nil)).Elem(), &BeyondcorpApplicationIamBinding{})
	pulumi.RegisterOutputType(BeyondcorpApplicationIamBindingOutput{})
}
