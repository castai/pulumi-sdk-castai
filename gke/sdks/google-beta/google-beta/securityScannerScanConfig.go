// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecurityScannerScanConfig struct {
	pulumi.CustomResourceState

	// The authentication configuration. If specified, service will use the authentication configuration during scanning.
	Authentication SecurityScannerScanConfigAuthenticationPtrOutput `pulumi:"authentication"`
	// The blacklist URL patterns as described in https://cloud.google.com/security-scanner/docs/excluded-urls
	BlacklistPatterns pulumi.StringArrayOutput `pulumi:"blacklistPatterns"`
	// The user provider display name of the ScanConfig.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Controls export of scan configurations and results to Cloud Security Command Center. Default value: "ENABLED" Possible
	// values: ["ENABLED", "DISABLED"]
	ExportToSecurityCommandCenter pulumi.StringPtrOutput `pulumi:"exportToSecurityCommandCenter"`
	// The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. Defaults to 15.
	MaxQps pulumi.Float64PtrOutput `pulumi:"maxQps"`
	// A server defined name for this index. Format: 'projects/{{project}}/scanConfigs/{{server_generated_id}}'
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The schedule of the ScanConfig
	Schedule                    SecurityScannerScanConfigSchedulePtrOutput `pulumi:"schedule"`
	SecurityScannerScanConfigId pulumi.StringOutput                        `pulumi:"securityScannerScanConfigId"`
	// The starting URLs from which the scanner finds site pages.
	StartingUrls pulumi.StringArrayOutput `pulumi:"startingUrls"`
	// Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be used as a default. Possible values:
	// ["APP_ENGINE", "COMPUTE"]
	TargetPlatforms pulumi.StringArrayOutput                   `pulumi:"targetPlatforms"`
	Timeouts        SecurityScannerScanConfigTimeoutsPtrOutput `pulumi:"timeouts"`
	// Type of the user agents used for scanning Default value: "CHROME_LINUX" Possible values: ["USER_AGENT_UNSPECIFIED",
	// "CHROME_LINUX", "CHROME_ANDROID", "SAFARI_IPHONE"]
	UserAgent pulumi.StringPtrOutput `pulumi:"userAgent"`
}

// NewSecurityScannerScanConfig registers a new resource with the given unique name, arguments, and options.
func NewSecurityScannerScanConfig(ctx *pulumi.Context,
	name string, args *SecurityScannerScanConfigArgs, opts ...pulumi.ResourceOption) (*SecurityScannerScanConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.StartingUrls == nil {
		return nil, errors.New("invalid value for required argument 'StartingUrls'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SecurityScannerScanConfig
	err = ctx.RegisterPackageResource("google-beta:index/securityScannerScanConfig:SecurityScannerScanConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityScannerScanConfig gets an existing SecurityScannerScanConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityScannerScanConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityScannerScanConfigState, opts ...pulumi.ResourceOption) (*SecurityScannerScanConfig, error) {
	var resource SecurityScannerScanConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/securityScannerScanConfig:SecurityScannerScanConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityScannerScanConfig resources.
type securityScannerScanConfigState struct {
	// The authentication configuration. If specified, service will use the authentication configuration during scanning.
	Authentication *SecurityScannerScanConfigAuthentication `pulumi:"authentication"`
	// The blacklist URL patterns as described in https://cloud.google.com/security-scanner/docs/excluded-urls
	BlacklistPatterns []string `pulumi:"blacklistPatterns"`
	// The user provider display name of the ScanConfig.
	DisplayName *string `pulumi:"displayName"`
	// Controls export of scan configurations and results to Cloud Security Command Center. Default value: "ENABLED" Possible
	// values: ["ENABLED", "DISABLED"]
	ExportToSecurityCommandCenter *string `pulumi:"exportToSecurityCommandCenter"`
	// The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. Defaults to 15.
	MaxQps *float64 `pulumi:"maxQps"`
	// A server defined name for this index. Format: 'projects/{{project}}/scanConfigs/{{server_generated_id}}'
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The schedule of the ScanConfig
	Schedule                    *SecurityScannerScanConfigSchedule `pulumi:"schedule"`
	SecurityScannerScanConfigId *string                            `pulumi:"securityScannerScanConfigId"`
	// The starting URLs from which the scanner finds site pages.
	StartingUrls []string `pulumi:"startingUrls"`
	// Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be used as a default. Possible values:
	// ["APP_ENGINE", "COMPUTE"]
	TargetPlatforms []string                           `pulumi:"targetPlatforms"`
	Timeouts        *SecurityScannerScanConfigTimeouts `pulumi:"timeouts"`
	// Type of the user agents used for scanning Default value: "CHROME_LINUX" Possible values: ["USER_AGENT_UNSPECIFIED",
	// "CHROME_LINUX", "CHROME_ANDROID", "SAFARI_IPHONE"]
	UserAgent *string `pulumi:"userAgent"`
}

type SecurityScannerScanConfigState struct {
	// The authentication configuration. If specified, service will use the authentication configuration during scanning.
	Authentication SecurityScannerScanConfigAuthenticationPtrInput
	// The blacklist URL patterns as described in https://cloud.google.com/security-scanner/docs/excluded-urls
	BlacklistPatterns pulumi.StringArrayInput
	// The user provider display name of the ScanConfig.
	DisplayName pulumi.StringPtrInput
	// Controls export of scan configurations and results to Cloud Security Command Center. Default value: "ENABLED" Possible
	// values: ["ENABLED", "DISABLED"]
	ExportToSecurityCommandCenter pulumi.StringPtrInput
	// The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. Defaults to 15.
	MaxQps pulumi.Float64PtrInput
	// A server defined name for this index. Format: 'projects/{{project}}/scanConfigs/{{server_generated_id}}'
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The schedule of the ScanConfig
	Schedule                    SecurityScannerScanConfigSchedulePtrInput
	SecurityScannerScanConfigId pulumi.StringPtrInput
	// The starting URLs from which the scanner finds site pages.
	StartingUrls pulumi.StringArrayInput
	// Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be used as a default. Possible values:
	// ["APP_ENGINE", "COMPUTE"]
	TargetPlatforms pulumi.StringArrayInput
	Timeouts        SecurityScannerScanConfigTimeoutsPtrInput
	// Type of the user agents used for scanning Default value: "CHROME_LINUX" Possible values: ["USER_AGENT_UNSPECIFIED",
	// "CHROME_LINUX", "CHROME_ANDROID", "SAFARI_IPHONE"]
	UserAgent pulumi.StringPtrInput
}

func (SecurityScannerScanConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityScannerScanConfigState)(nil)).Elem()
}

type securityScannerScanConfigArgs struct {
	// The authentication configuration. If specified, service will use the authentication configuration during scanning.
	Authentication *SecurityScannerScanConfigAuthentication `pulumi:"authentication"`
	// The blacklist URL patterns as described in https://cloud.google.com/security-scanner/docs/excluded-urls
	BlacklistPatterns []string `pulumi:"blacklistPatterns"`
	// The user provider display name of the ScanConfig.
	DisplayName string `pulumi:"displayName"`
	// Controls export of scan configurations and results to Cloud Security Command Center. Default value: "ENABLED" Possible
	// values: ["ENABLED", "DISABLED"]
	ExportToSecurityCommandCenter *string `pulumi:"exportToSecurityCommandCenter"`
	// The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. Defaults to 15.
	MaxQps  *float64 `pulumi:"maxQps"`
	Project *string  `pulumi:"project"`
	// The schedule of the ScanConfig
	Schedule                    *SecurityScannerScanConfigSchedule `pulumi:"schedule"`
	SecurityScannerScanConfigId *string                            `pulumi:"securityScannerScanConfigId"`
	// The starting URLs from which the scanner finds site pages.
	StartingUrls []string `pulumi:"startingUrls"`
	// Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be used as a default. Possible values:
	// ["APP_ENGINE", "COMPUTE"]
	TargetPlatforms []string                           `pulumi:"targetPlatforms"`
	Timeouts        *SecurityScannerScanConfigTimeouts `pulumi:"timeouts"`
	// Type of the user agents used for scanning Default value: "CHROME_LINUX" Possible values: ["USER_AGENT_UNSPECIFIED",
	// "CHROME_LINUX", "CHROME_ANDROID", "SAFARI_IPHONE"]
	UserAgent *string `pulumi:"userAgent"`
}

// The set of arguments for constructing a SecurityScannerScanConfig resource.
type SecurityScannerScanConfigArgs struct {
	// The authentication configuration. If specified, service will use the authentication configuration during scanning.
	Authentication SecurityScannerScanConfigAuthenticationPtrInput
	// The blacklist URL patterns as described in https://cloud.google.com/security-scanner/docs/excluded-urls
	BlacklistPatterns pulumi.StringArrayInput
	// The user provider display name of the ScanConfig.
	DisplayName pulumi.StringInput
	// Controls export of scan configurations and results to Cloud Security Command Center. Default value: "ENABLED" Possible
	// values: ["ENABLED", "DISABLED"]
	ExportToSecurityCommandCenter pulumi.StringPtrInput
	// The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. Defaults to 15.
	MaxQps  pulumi.Float64PtrInput
	Project pulumi.StringPtrInput
	// The schedule of the ScanConfig
	Schedule                    SecurityScannerScanConfigSchedulePtrInput
	SecurityScannerScanConfigId pulumi.StringPtrInput
	// The starting URLs from which the scanner finds site pages.
	StartingUrls pulumi.StringArrayInput
	// Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be used as a default. Possible values:
	// ["APP_ENGINE", "COMPUTE"]
	TargetPlatforms pulumi.StringArrayInput
	Timeouts        SecurityScannerScanConfigTimeoutsPtrInput
	// Type of the user agents used for scanning Default value: "CHROME_LINUX" Possible values: ["USER_AGENT_UNSPECIFIED",
	// "CHROME_LINUX", "CHROME_ANDROID", "SAFARI_IPHONE"]
	UserAgent pulumi.StringPtrInput
}

func (SecurityScannerScanConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityScannerScanConfigArgs)(nil)).Elem()
}

type SecurityScannerScanConfigInput interface {
	pulumi.Input

	ToSecurityScannerScanConfigOutput() SecurityScannerScanConfigOutput
	ToSecurityScannerScanConfigOutputWithContext(ctx context.Context) SecurityScannerScanConfigOutput
}

func (*SecurityScannerScanConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityScannerScanConfig)(nil)).Elem()
}

func (i *SecurityScannerScanConfig) ToSecurityScannerScanConfigOutput() SecurityScannerScanConfigOutput {
	return i.ToSecurityScannerScanConfigOutputWithContext(context.Background())
}

func (i *SecurityScannerScanConfig) ToSecurityScannerScanConfigOutputWithContext(ctx context.Context) SecurityScannerScanConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityScannerScanConfigOutput)
}

type SecurityScannerScanConfigOutput struct{ *pulumi.OutputState }

func (SecurityScannerScanConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityScannerScanConfig)(nil)).Elem()
}

func (o SecurityScannerScanConfigOutput) ToSecurityScannerScanConfigOutput() SecurityScannerScanConfigOutput {
	return o
}

func (o SecurityScannerScanConfigOutput) ToSecurityScannerScanConfigOutputWithContext(ctx context.Context) SecurityScannerScanConfigOutput {
	return o
}

// The authentication configuration. If specified, service will use the authentication configuration during scanning.
func (o SecurityScannerScanConfigOutput) Authentication() SecurityScannerScanConfigAuthenticationPtrOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) SecurityScannerScanConfigAuthenticationPtrOutput {
		return v.Authentication
	}).(SecurityScannerScanConfigAuthenticationPtrOutput)
}

// The blacklist URL patterns as described in https://cloud.google.com/security-scanner/docs/excluded-urls
func (o SecurityScannerScanConfigOutput) BlacklistPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.StringArrayOutput { return v.BlacklistPatterns }).(pulumi.StringArrayOutput)
}

// The user provider display name of the ScanConfig.
func (o SecurityScannerScanConfigOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Controls export of scan configurations and results to Cloud Security Command Center. Default value: "ENABLED" Possible
// values: ["ENABLED", "DISABLED"]
func (o SecurityScannerScanConfigOutput) ExportToSecurityCommandCenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.StringPtrOutput { return v.ExportToSecurityCommandCenter }).(pulumi.StringPtrOutput)
}

// The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. Defaults to 15.
func (o SecurityScannerScanConfigOutput) MaxQps() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.Float64PtrOutput { return v.MaxQps }).(pulumi.Float64PtrOutput)
}

// A server defined name for this index. Format: 'projects/{{project}}/scanConfigs/{{server_generated_id}}'
func (o SecurityScannerScanConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SecurityScannerScanConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The schedule of the ScanConfig
func (o SecurityScannerScanConfigOutput) Schedule() SecurityScannerScanConfigSchedulePtrOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) SecurityScannerScanConfigSchedulePtrOutput { return v.Schedule }).(SecurityScannerScanConfigSchedulePtrOutput)
}

func (o SecurityScannerScanConfigOutput) SecurityScannerScanConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.StringOutput { return v.SecurityScannerScanConfigId }).(pulumi.StringOutput)
}

// The starting URLs from which the scanner finds site pages.
func (o SecurityScannerScanConfigOutput) StartingUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.StringArrayOutput { return v.StartingUrls }).(pulumi.StringArrayOutput)
}

// Set of Cloud Platforms targeted by the scan. If empty, APP_ENGINE will be used as a default. Possible values:
// ["APP_ENGINE", "COMPUTE"]
func (o SecurityScannerScanConfigOutput) TargetPlatforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.StringArrayOutput { return v.TargetPlatforms }).(pulumi.StringArrayOutput)
}

func (o SecurityScannerScanConfigOutput) Timeouts() SecurityScannerScanConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) SecurityScannerScanConfigTimeoutsPtrOutput { return v.Timeouts }).(SecurityScannerScanConfigTimeoutsPtrOutput)
}

// Type of the user agents used for scanning Default value: "CHROME_LINUX" Possible values: ["USER_AGENT_UNSPECIFIED",
// "CHROME_LINUX", "CHROME_ANDROID", "SAFARI_IPHONE"]
func (o SecurityScannerScanConfigOutput) UserAgent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityScannerScanConfig) pulumi.StringPtrOutput { return v.UserAgent }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityScannerScanConfigInput)(nil)).Elem(), &SecurityScannerScanConfig{})
	pulumi.RegisterOutputType(SecurityScannerScanConfigOutput{})
}
