// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HealthcareDicomStoreIamPolicy struct {
	pulumi.CustomResourceState

	DicomStoreId                    pulumi.StringOutput `pulumi:"dicomStoreId"`
	Etag                            pulumi.StringOutput `pulumi:"etag"`
	HealthcareDicomStoreIamPolicyId pulumi.StringOutput `pulumi:"healthcareDicomStoreIamPolicyId"`
	PolicyData                      pulumi.StringOutput `pulumi:"policyData"`
}

// NewHealthcareDicomStoreIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewHealthcareDicomStoreIamPolicy(ctx *pulumi.Context,
	name string, args *HealthcareDicomStoreIamPolicyArgs, opts ...pulumi.ResourceOption) (*HealthcareDicomStoreIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DicomStoreId == nil {
		return nil, errors.New("invalid value for required argument 'DicomStoreId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HealthcareDicomStoreIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/healthcareDicomStoreIamPolicy:HealthcareDicomStoreIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthcareDicomStoreIamPolicy gets an existing HealthcareDicomStoreIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthcareDicomStoreIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthcareDicomStoreIamPolicyState, opts ...pulumi.ResourceOption) (*HealthcareDicomStoreIamPolicy, error) {
	var resource HealthcareDicomStoreIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/healthcareDicomStoreIamPolicy:HealthcareDicomStoreIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthcareDicomStoreIamPolicy resources.
type healthcareDicomStoreIamPolicyState struct {
	DicomStoreId                    *string `pulumi:"dicomStoreId"`
	Etag                            *string `pulumi:"etag"`
	HealthcareDicomStoreIamPolicyId *string `pulumi:"healthcareDicomStoreIamPolicyId"`
	PolicyData                      *string `pulumi:"policyData"`
}

type HealthcareDicomStoreIamPolicyState struct {
	DicomStoreId                    pulumi.StringPtrInput
	Etag                            pulumi.StringPtrInput
	HealthcareDicomStoreIamPolicyId pulumi.StringPtrInput
	PolicyData                      pulumi.StringPtrInput
}

func (HealthcareDicomStoreIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareDicomStoreIamPolicyState)(nil)).Elem()
}

type healthcareDicomStoreIamPolicyArgs struct {
	DicomStoreId                    string  `pulumi:"dicomStoreId"`
	HealthcareDicomStoreIamPolicyId *string `pulumi:"healthcareDicomStoreIamPolicyId"`
	PolicyData                      string  `pulumi:"policyData"`
}

// The set of arguments for constructing a HealthcareDicomStoreIamPolicy resource.
type HealthcareDicomStoreIamPolicyArgs struct {
	DicomStoreId                    pulumi.StringInput
	HealthcareDicomStoreIamPolicyId pulumi.StringPtrInput
	PolicyData                      pulumi.StringInput
}

func (HealthcareDicomStoreIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareDicomStoreIamPolicyArgs)(nil)).Elem()
}

type HealthcareDicomStoreIamPolicyInput interface {
	pulumi.Input

	ToHealthcareDicomStoreIamPolicyOutput() HealthcareDicomStoreIamPolicyOutput
	ToHealthcareDicomStoreIamPolicyOutputWithContext(ctx context.Context) HealthcareDicomStoreIamPolicyOutput
}

func (*HealthcareDicomStoreIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareDicomStoreIamPolicy)(nil)).Elem()
}

func (i *HealthcareDicomStoreIamPolicy) ToHealthcareDicomStoreIamPolicyOutput() HealthcareDicomStoreIamPolicyOutput {
	return i.ToHealthcareDicomStoreIamPolicyOutputWithContext(context.Background())
}

func (i *HealthcareDicomStoreIamPolicy) ToHealthcareDicomStoreIamPolicyOutputWithContext(ctx context.Context) HealthcareDicomStoreIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcareDicomStoreIamPolicyOutput)
}

type HealthcareDicomStoreIamPolicyOutput struct{ *pulumi.OutputState }

func (HealthcareDicomStoreIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareDicomStoreIamPolicy)(nil)).Elem()
}

func (o HealthcareDicomStoreIamPolicyOutput) ToHealthcareDicomStoreIamPolicyOutput() HealthcareDicomStoreIamPolicyOutput {
	return o
}

func (o HealthcareDicomStoreIamPolicyOutput) ToHealthcareDicomStoreIamPolicyOutputWithContext(ctx context.Context) HealthcareDicomStoreIamPolicyOutput {
	return o
}

func (o HealthcareDicomStoreIamPolicyOutput) DicomStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamPolicy) pulumi.StringOutput { return v.DicomStoreId }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamPolicyOutput) HealthcareDicomStoreIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamPolicy) pulumi.StringOutput { return v.HealthcareDicomStoreIamPolicyId }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcareDicomStoreIamPolicyInput)(nil)).Elem(), &HealthcareDicomStoreIamPolicy{})
	pulumi.RegisterOutputType(HealthcareDicomStoreIamPolicyOutput{})
}
