// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryAnalyticsHubDataExchange struct {
	pulumi.CustomResourceState

	BigqueryAnalyticsHubDataExchangeId pulumi.StringOutput `pulumi:"bigqueryAnalyticsHubDataExchangeId"`
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId pulumi.StringOutput `pulumi:"dataExchangeId"`
	// Description of the data exchange.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), and must not start or end with spaces.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Documentation describing the data exchange.
	Documentation pulumi.StringPtrOutput `pulumi:"documentation"`
	// Base64 encoded image representing the data exchange.
	Icon pulumi.StringPtrOutput `pulumi:"icon"`
	// Number of listings contained in the data exchange.
	ListingCount pulumi.Float64Output `pulumi:"listingCount"`
	// The name of the location this data exchange.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the data exchange, for example: "projects/myproject/locations/US/dataExchanges/123"
	Name pulumi.StringOutput `pulumi:"name"`
	// Email or URL of the primary point of contact of the data exchange.
	PrimaryContact pulumi.StringPtrOutput `pulumi:"primaryContact"`
	Project        pulumi.StringOutput    `pulumi:"project"`
	// Configurable data sharing environment option for a data exchange. This field is required for data clean room exchanges.
	SharingEnvironmentConfig BigqueryAnalyticsHubDataExchangeSharingEnvironmentConfigPtrOutput `pulumi:"sharingEnvironmentConfig"`
	Timeouts                 BigqueryAnalyticsHubDataExchangeTimeoutsPtrOutput                 `pulumi:"timeouts"`
}

// NewBigqueryAnalyticsHubDataExchange registers a new resource with the given unique name, arguments, and options.
func NewBigqueryAnalyticsHubDataExchange(ctx *pulumi.Context,
	name string, args *BigqueryAnalyticsHubDataExchangeArgs, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubDataExchange, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataExchangeId == nil {
		return nil, errors.New("invalid value for required argument 'DataExchangeId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryAnalyticsHubDataExchange
	err = ctx.RegisterPackageResource("google-beta:index/bigqueryAnalyticsHubDataExchange:BigqueryAnalyticsHubDataExchange", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryAnalyticsHubDataExchange gets an existing BigqueryAnalyticsHubDataExchange resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryAnalyticsHubDataExchange(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryAnalyticsHubDataExchangeState, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubDataExchange, error) {
	var resource BigqueryAnalyticsHubDataExchange
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/bigqueryAnalyticsHubDataExchange:BigqueryAnalyticsHubDataExchange", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryAnalyticsHubDataExchange resources.
type bigqueryAnalyticsHubDataExchangeState struct {
	BigqueryAnalyticsHubDataExchangeId *string `pulumi:"bigqueryAnalyticsHubDataExchangeId"`
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId *string `pulumi:"dataExchangeId"`
	// Description of the data exchange.
	Description *string `pulumi:"description"`
	// Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), and must not start or end with spaces.
	DisplayName *string `pulumi:"displayName"`
	// Documentation describing the data exchange.
	Documentation *string `pulumi:"documentation"`
	// Base64 encoded image representing the data exchange.
	Icon *string `pulumi:"icon"`
	// Number of listings contained in the data exchange.
	ListingCount *float64 `pulumi:"listingCount"`
	// The name of the location this data exchange.
	Location *string `pulumi:"location"`
	// The resource name of the data exchange, for example: "projects/myproject/locations/US/dataExchanges/123"
	Name *string `pulumi:"name"`
	// Email or URL of the primary point of contact of the data exchange.
	PrimaryContact *string `pulumi:"primaryContact"`
	Project        *string `pulumi:"project"`
	// Configurable data sharing environment option for a data exchange. This field is required for data clean room exchanges.
	SharingEnvironmentConfig *BigqueryAnalyticsHubDataExchangeSharingEnvironmentConfig `pulumi:"sharingEnvironmentConfig"`
	Timeouts                 *BigqueryAnalyticsHubDataExchangeTimeouts                 `pulumi:"timeouts"`
}

type BigqueryAnalyticsHubDataExchangeState struct {
	BigqueryAnalyticsHubDataExchangeId pulumi.StringPtrInput
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId pulumi.StringPtrInput
	// Description of the data exchange.
	Description pulumi.StringPtrInput
	// Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), and must not start or end with spaces.
	DisplayName pulumi.StringPtrInput
	// Documentation describing the data exchange.
	Documentation pulumi.StringPtrInput
	// Base64 encoded image representing the data exchange.
	Icon pulumi.StringPtrInput
	// Number of listings contained in the data exchange.
	ListingCount pulumi.Float64PtrInput
	// The name of the location this data exchange.
	Location pulumi.StringPtrInput
	// The resource name of the data exchange, for example: "projects/myproject/locations/US/dataExchanges/123"
	Name pulumi.StringPtrInput
	// Email or URL of the primary point of contact of the data exchange.
	PrimaryContact pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	// Configurable data sharing environment option for a data exchange. This field is required for data clean room exchanges.
	SharingEnvironmentConfig BigqueryAnalyticsHubDataExchangeSharingEnvironmentConfigPtrInput
	Timeouts                 BigqueryAnalyticsHubDataExchangeTimeoutsPtrInput
}

func (BigqueryAnalyticsHubDataExchangeState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubDataExchangeState)(nil)).Elem()
}

type bigqueryAnalyticsHubDataExchangeArgs struct {
	BigqueryAnalyticsHubDataExchangeId *string `pulumi:"bigqueryAnalyticsHubDataExchangeId"`
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId string `pulumi:"dataExchangeId"`
	// Description of the data exchange.
	Description *string `pulumi:"description"`
	// Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), and must not start or end with spaces.
	DisplayName string `pulumi:"displayName"`
	// Documentation describing the data exchange.
	Documentation *string `pulumi:"documentation"`
	// Base64 encoded image representing the data exchange.
	Icon *string `pulumi:"icon"`
	// The name of the location this data exchange.
	Location string `pulumi:"location"`
	// Email or URL of the primary point of contact of the data exchange.
	PrimaryContact *string `pulumi:"primaryContact"`
	Project        *string `pulumi:"project"`
	// Configurable data sharing environment option for a data exchange. This field is required for data clean room exchanges.
	SharingEnvironmentConfig *BigqueryAnalyticsHubDataExchangeSharingEnvironmentConfig `pulumi:"sharingEnvironmentConfig"`
	Timeouts                 *BigqueryAnalyticsHubDataExchangeTimeouts                 `pulumi:"timeouts"`
}

// The set of arguments for constructing a BigqueryAnalyticsHubDataExchange resource.
type BigqueryAnalyticsHubDataExchangeArgs struct {
	BigqueryAnalyticsHubDataExchangeId pulumi.StringPtrInput
	// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
	// characters that require URL-escaping, or characters outside of ASCII, spaces.
	DataExchangeId pulumi.StringInput
	// Description of the data exchange.
	Description pulumi.StringPtrInput
	// Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9),
	// underscores (_), dashes (-), spaces ( ), and must not start or end with spaces.
	DisplayName pulumi.StringInput
	// Documentation describing the data exchange.
	Documentation pulumi.StringPtrInput
	// Base64 encoded image representing the data exchange.
	Icon pulumi.StringPtrInput
	// The name of the location this data exchange.
	Location pulumi.StringInput
	// Email or URL of the primary point of contact of the data exchange.
	PrimaryContact pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	// Configurable data sharing environment option for a data exchange. This field is required for data clean room exchanges.
	SharingEnvironmentConfig BigqueryAnalyticsHubDataExchangeSharingEnvironmentConfigPtrInput
	Timeouts                 BigqueryAnalyticsHubDataExchangeTimeoutsPtrInput
}

func (BigqueryAnalyticsHubDataExchangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubDataExchangeArgs)(nil)).Elem()
}

type BigqueryAnalyticsHubDataExchangeInput interface {
	pulumi.Input

	ToBigqueryAnalyticsHubDataExchangeOutput() BigqueryAnalyticsHubDataExchangeOutput
	ToBigqueryAnalyticsHubDataExchangeOutputWithContext(ctx context.Context) BigqueryAnalyticsHubDataExchangeOutput
}

func (*BigqueryAnalyticsHubDataExchange) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubDataExchange)(nil)).Elem()
}

func (i *BigqueryAnalyticsHubDataExchange) ToBigqueryAnalyticsHubDataExchangeOutput() BigqueryAnalyticsHubDataExchangeOutput {
	return i.ToBigqueryAnalyticsHubDataExchangeOutputWithContext(context.Background())
}

func (i *BigqueryAnalyticsHubDataExchange) ToBigqueryAnalyticsHubDataExchangeOutputWithContext(ctx context.Context) BigqueryAnalyticsHubDataExchangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryAnalyticsHubDataExchangeOutput)
}

type BigqueryAnalyticsHubDataExchangeOutput struct{ *pulumi.OutputState }

func (BigqueryAnalyticsHubDataExchangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubDataExchange)(nil)).Elem()
}

func (o BigqueryAnalyticsHubDataExchangeOutput) ToBigqueryAnalyticsHubDataExchangeOutput() BigqueryAnalyticsHubDataExchangeOutput {
	return o
}

func (o BigqueryAnalyticsHubDataExchangeOutput) ToBigqueryAnalyticsHubDataExchangeOutputWithContext(ctx context.Context) BigqueryAnalyticsHubDataExchangeOutput {
	return o
}

func (o BigqueryAnalyticsHubDataExchangeOutput) BigqueryAnalyticsHubDataExchangeId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringOutput {
		return v.BigqueryAnalyticsHubDataExchangeId
	}).(pulumi.StringOutput)
}

// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use
// characters that require URL-escaping, or characters outside of ASCII, spaces.
func (o BigqueryAnalyticsHubDataExchangeOutput) DataExchangeId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringOutput { return v.DataExchangeId }).(pulumi.StringOutput)
}

// Description of the data exchange.
func (o BigqueryAnalyticsHubDataExchangeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Human-readable display name of the data exchange. The display name must contain only Unicode letters, numbers (0-9),
// underscores (_), dashes (-), spaces ( ), and must not start or end with spaces.
func (o BigqueryAnalyticsHubDataExchangeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Documentation describing the data exchange.
func (o BigqueryAnalyticsHubDataExchangeOutput) Documentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringPtrOutput { return v.Documentation }).(pulumi.StringPtrOutput)
}

// Base64 encoded image representing the data exchange.
func (o BigqueryAnalyticsHubDataExchangeOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringPtrOutput { return v.Icon }).(pulumi.StringPtrOutput)
}

// Number of listings contained in the data exchange.
func (o BigqueryAnalyticsHubDataExchangeOutput) ListingCount() pulumi.Float64Output {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.Float64Output { return v.ListingCount }).(pulumi.Float64Output)
}

// The name of the location this data exchange.
func (o BigqueryAnalyticsHubDataExchangeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the data exchange, for example: "projects/myproject/locations/US/dataExchanges/123"
func (o BigqueryAnalyticsHubDataExchangeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Email or URL of the primary point of contact of the data exchange.
func (o BigqueryAnalyticsHubDataExchangeOutput) PrimaryContact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringPtrOutput { return v.PrimaryContact }).(pulumi.StringPtrOutput)
}

func (o BigqueryAnalyticsHubDataExchangeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Configurable data sharing environment option for a data exchange. This field is required for data clean room exchanges.
func (o BigqueryAnalyticsHubDataExchangeOutput) SharingEnvironmentConfig() BigqueryAnalyticsHubDataExchangeSharingEnvironmentConfigPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) BigqueryAnalyticsHubDataExchangeSharingEnvironmentConfigPtrOutput {
		return v.SharingEnvironmentConfig
	}).(BigqueryAnalyticsHubDataExchangeSharingEnvironmentConfigPtrOutput)
}

func (o BigqueryAnalyticsHubDataExchangeOutput) Timeouts() BigqueryAnalyticsHubDataExchangeTimeoutsPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubDataExchange) BigqueryAnalyticsHubDataExchangeTimeoutsPtrOutput {
		return v.Timeouts
	}).(BigqueryAnalyticsHubDataExchangeTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryAnalyticsHubDataExchangeInput)(nil)).Elem(), &BigqueryAnalyticsHubDataExchange{})
	pulumi.RegisterOutputType(BigqueryAnalyticsHubDataExchangeOutput{})
}
