// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IapSettings struct {
	pulumi.CustomResourceState

	// Top level wrapper for all access related setting in IAP.
	AccessSettings IapSettingsAccessSettingsPtrOutput `pulumi:"accessSettings"`
	// Top level wrapper for all application related settings in IAP.
	ApplicationSettings IapSettingsApplicationSettingsPtrOutput `pulumi:"applicationSettings"`
	IapSettingsId       pulumi.StringOutput                     `pulumi:"iapSettingsId"`
	// The resource name of the IAP protected resource. Name can have below resources: * organizations/{organization_id} *
	// folders/{folder_id} * projects/{project_id} * projects/{project_id}/iap_web * projects/{project_id}/iap_web/compute *
	// projects/{project_id}/iap_web/compute-{region} * projects/{project_id}/iap_web/compute/services/{service_id} *
	// projects/{project_id}/iap_web/compute-{region}/services/{service_id} * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id} *
	//   projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name     pulumi.StringOutput          `pulumi:"name"`
	Timeouts IapSettingsTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewIapSettings registers a new resource with the given unique name, arguments, and options.
func NewIapSettings(ctx *pulumi.Context,
	name string, args *IapSettingsArgs, opts ...pulumi.ResourceOption) (*IapSettings, error) {
	if args == nil {
		args = &IapSettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IapSettings
	err = ctx.RegisterPackageResource("google-beta:index/iapSettings:IapSettings", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIapSettings gets an existing IapSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIapSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IapSettingsState, opts ...pulumi.ResourceOption) (*IapSettings, error) {
	var resource IapSettings
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/iapSettings:IapSettings", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IapSettings resources.
type iapSettingsState struct {
	// Top level wrapper for all access related setting in IAP.
	AccessSettings *IapSettingsAccessSettings `pulumi:"accessSettings"`
	// Top level wrapper for all application related settings in IAP.
	ApplicationSettings *IapSettingsApplicationSettings `pulumi:"applicationSettings"`
	IapSettingsId       *string                         `pulumi:"iapSettingsId"`
	// The resource name of the IAP protected resource. Name can have below resources: * organizations/{organization_id} *
	// folders/{folder_id} * projects/{project_id} * projects/{project_id}/iap_web * projects/{project_id}/iap_web/compute *
	// projects/{project_id}/iap_web/compute-{region} * projects/{project_id}/iap_web/compute/services/{service_id} *
	// projects/{project_id}/iap_web/compute-{region}/services/{service_id} * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id} *
	//   projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name     *string              `pulumi:"name"`
	Timeouts *IapSettingsTimeouts `pulumi:"timeouts"`
}

type IapSettingsState struct {
	// Top level wrapper for all access related setting in IAP.
	AccessSettings IapSettingsAccessSettingsPtrInput
	// Top level wrapper for all application related settings in IAP.
	ApplicationSettings IapSettingsApplicationSettingsPtrInput
	IapSettingsId       pulumi.StringPtrInput
	// The resource name of the IAP protected resource. Name can have below resources: * organizations/{organization_id} *
	// folders/{folder_id} * projects/{project_id} * projects/{project_id}/iap_web * projects/{project_id}/iap_web/compute *
	// projects/{project_id}/iap_web/compute-{region} * projects/{project_id}/iap_web/compute/services/{service_id} *
	// projects/{project_id}/iap_web/compute-{region}/services/{service_id} * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id} *
	//   projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name     pulumi.StringPtrInput
	Timeouts IapSettingsTimeoutsPtrInput
}

func (IapSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*iapSettingsState)(nil)).Elem()
}

type iapSettingsArgs struct {
	// Top level wrapper for all access related setting in IAP.
	AccessSettings *IapSettingsAccessSettings `pulumi:"accessSettings"`
	// Top level wrapper for all application related settings in IAP.
	ApplicationSettings *IapSettingsApplicationSettings `pulumi:"applicationSettings"`
	IapSettingsId       *string                         `pulumi:"iapSettingsId"`
	// The resource name of the IAP protected resource. Name can have below resources: * organizations/{organization_id} *
	// folders/{folder_id} * projects/{project_id} * projects/{project_id}/iap_web * projects/{project_id}/iap_web/compute *
	// projects/{project_id}/iap_web/compute-{region} * projects/{project_id}/iap_web/compute/services/{service_id} *
	// projects/{project_id}/iap_web/compute-{region}/services/{service_id} * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id} *
	//   projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name     *string              `pulumi:"name"`
	Timeouts *IapSettingsTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a IapSettings resource.
type IapSettingsArgs struct {
	// Top level wrapper for all access related setting in IAP.
	AccessSettings IapSettingsAccessSettingsPtrInput
	// Top level wrapper for all application related settings in IAP.
	ApplicationSettings IapSettingsApplicationSettingsPtrInput
	IapSettingsId       pulumi.StringPtrInput
	// The resource name of the IAP protected resource. Name can have below resources: * organizations/{organization_id} *
	// folders/{folder_id} * projects/{project_id} * projects/{project_id}/iap_web * projects/{project_id}/iap_web/compute *
	// projects/{project_id}/iap_web/compute-{region} * projects/{project_id}/iap_web/compute/services/{service_id} *
	// projects/{project_id}/iap_web/compute-{region}/services/{service_id} * projects/{project_id}/iap_web/appengine-{app_id}
	// * projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id} *
	//   projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
	Name     pulumi.StringPtrInput
	Timeouts IapSettingsTimeoutsPtrInput
}

func (IapSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iapSettingsArgs)(nil)).Elem()
}

type IapSettingsInput interface {
	pulumi.Input

	ToIapSettingsOutput() IapSettingsOutput
	ToIapSettingsOutputWithContext(ctx context.Context) IapSettingsOutput
}

func (*IapSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**IapSettings)(nil)).Elem()
}

func (i *IapSettings) ToIapSettingsOutput() IapSettingsOutput {
	return i.ToIapSettingsOutputWithContext(context.Background())
}

func (i *IapSettings) ToIapSettingsOutputWithContext(ctx context.Context) IapSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapSettingsOutput)
}

type IapSettingsOutput struct{ *pulumi.OutputState }

func (IapSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapSettings)(nil)).Elem()
}

func (o IapSettingsOutput) ToIapSettingsOutput() IapSettingsOutput {
	return o
}

func (o IapSettingsOutput) ToIapSettingsOutputWithContext(ctx context.Context) IapSettingsOutput {
	return o
}

// Top level wrapper for all access related setting in IAP.
func (o IapSettingsOutput) AccessSettings() IapSettingsAccessSettingsPtrOutput {
	return o.ApplyT(func(v *IapSettings) IapSettingsAccessSettingsPtrOutput { return v.AccessSettings }).(IapSettingsAccessSettingsPtrOutput)
}

// Top level wrapper for all application related settings in IAP.
func (o IapSettingsOutput) ApplicationSettings() IapSettingsApplicationSettingsPtrOutput {
	return o.ApplyT(func(v *IapSettings) IapSettingsApplicationSettingsPtrOutput { return v.ApplicationSettings }).(IapSettingsApplicationSettingsPtrOutput)
}

func (o IapSettingsOutput) IapSettingsId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapSettings) pulumi.StringOutput { return v.IapSettingsId }).(pulumi.StringOutput)
}

// The resource name of the IAP protected resource. Name can have below resources: * organizations/{organization_id} *
// folders/{folder_id} * projects/{project_id} * projects/{project_id}/iap_web * projects/{project_id}/iap_web/compute *
// projects/{project_id}/iap_web/compute-{region} * projects/{project_id}/iap_web/compute/services/{service_id} *
// projects/{project_id}/iap_web/compute-{region}/services/{service_id} * projects/{project_id}/iap_web/appengine-{app_id}
//   - projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id} *
//     projects/{project_id}/iap_web/appengine-{app_id}/services/{service_id}/version/{version_id}
func (o IapSettingsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IapSettings) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IapSettingsOutput) Timeouts() IapSettingsTimeoutsPtrOutput {
	return o.ApplyT(func(v *IapSettings) IapSettingsTimeoutsPtrOutput { return v.Timeouts }).(IapSettingsTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IapSettingsInput)(nil)).Elem(), &IapSettings{})
	pulumi.RegisterOutputType(IapSettingsOutput{})
}
