// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MigrationCenterGroup struct {
	pulumi.CustomResourceState

	// Output only. The timestamp when the group was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. The description of the group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Optional. User-friendly display name.
	DisplayName     pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique
	// within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63
	// characters. The ID must match the regular expression: 'a-z?'.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// Labels as key value pairs. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the group.
	Location               pulumi.StringOutput `pulumi:"location"`
	MigrationCenterGroupId pulumi.StringOutput `pulumi:"migrationCenterGroupId"`
	// Output only. The name of the group.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                `pulumi:"terraformLabels"`
	Timeouts        MigrationCenterGroupTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. The timestamp when the group was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewMigrationCenterGroup registers a new resource with the given unique name, arguments, and options.
func NewMigrationCenterGroup(ctx *pulumi.Context,
	name string, args *MigrationCenterGroupArgs, opts ...pulumi.ResourceOption) (*MigrationCenterGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource MigrationCenterGroup
	err = ctx.RegisterPackageResource("google-beta:index/migrationCenterGroup:MigrationCenterGroup", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMigrationCenterGroup gets an existing MigrationCenterGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMigrationCenterGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MigrationCenterGroupState, opts ...pulumi.ResourceOption) (*MigrationCenterGroup, error) {
	var resource MigrationCenterGroup
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/migrationCenterGroup:MigrationCenterGroup", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MigrationCenterGroup resources.
type migrationCenterGroupState struct {
	// Output only. The timestamp when the group was created.
	CreateTime *string `pulumi:"createTime"`
	// Optional. The description of the group.
	Description *string `pulumi:"description"`
	// Optional. User-friendly display name.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique
	// within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63
	// characters. The ID must match the regular expression: 'a-z?'.
	GroupId *string `pulumi:"groupId"`
	// Labels as key value pairs. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the group.
	Location               *string `pulumi:"location"`
	MigrationCenterGroupId *string `pulumi:"migrationCenterGroupId"`
	// Output only. The name of the group.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string             `pulumi:"terraformLabels"`
	Timeouts        *MigrationCenterGroupTimeouts `pulumi:"timeouts"`
	// Output only. The timestamp when the group was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type MigrationCenterGroupState struct {
	// Output only. The timestamp when the group was created.
	CreateTime pulumi.StringPtrInput
	// Optional. The description of the group.
	Description pulumi.StringPtrInput
	// Optional. User-friendly display name.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique
	// within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63
	// characters. The ID must match the regular expression: 'a-z?'.
	GroupId pulumi.StringPtrInput
	// Labels as key value pairs. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the group.
	Location               pulumi.StringPtrInput
	MigrationCenterGroupId pulumi.StringPtrInput
	// Output only. The name of the group.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        MigrationCenterGroupTimeoutsPtrInput
	// Output only. The timestamp when the group was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (MigrationCenterGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*migrationCenterGroupState)(nil)).Elem()
}

type migrationCenterGroupArgs struct {
	// Optional. The description of the group.
	Description *string `pulumi:"description"`
	// Optional. User-friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique
	// within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63
	// characters. The ID must match the regular expression: 'a-z?'.
	GroupId string `pulumi:"groupId"`
	// Labels as key value pairs. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the group.
	Location               string                        `pulumi:"location"`
	MigrationCenterGroupId *string                       `pulumi:"migrationCenterGroupId"`
	Project                *string                       `pulumi:"project"`
	Timeouts               *MigrationCenterGroupTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a MigrationCenterGroup resource.
type MigrationCenterGroupArgs struct {
	// Optional. The description of the group.
	Description pulumi.StringPtrInput
	// Optional. User-friendly display name.
	DisplayName pulumi.StringPtrInput
	// Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique
	// within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63
	// characters. The ID must match the regular expression: 'a-z?'.
	GroupId pulumi.StringInput
	// Labels as key value pairs. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the group.
	Location               pulumi.StringInput
	MigrationCenterGroupId pulumi.StringPtrInput
	Project                pulumi.StringPtrInput
	Timeouts               MigrationCenterGroupTimeoutsPtrInput
}

func (MigrationCenterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*migrationCenterGroupArgs)(nil)).Elem()
}

type MigrationCenterGroupInput interface {
	pulumi.Input

	ToMigrationCenterGroupOutput() MigrationCenterGroupOutput
	ToMigrationCenterGroupOutputWithContext(ctx context.Context) MigrationCenterGroupOutput
}

func (*MigrationCenterGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationCenterGroup)(nil)).Elem()
}

func (i *MigrationCenterGroup) ToMigrationCenterGroupOutput() MigrationCenterGroupOutput {
	return i.ToMigrationCenterGroupOutputWithContext(context.Background())
}

func (i *MigrationCenterGroup) ToMigrationCenterGroupOutputWithContext(ctx context.Context) MigrationCenterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MigrationCenterGroupOutput)
}

type MigrationCenterGroupOutput struct{ *pulumi.OutputState }

func (MigrationCenterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MigrationCenterGroup)(nil)).Elem()
}

func (o MigrationCenterGroupOutput) ToMigrationCenterGroupOutput() MigrationCenterGroupOutput {
	return o
}

func (o MigrationCenterGroupOutput) ToMigrationCenterGroupOutputWithContext(ctx context.Context) MigrationCenterGroupOutput {
	return o
}

// Output only. The timestamp when the group was created.
func (o MigrationCenterGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. The description of the group.
func (o MigrationCenterGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Optional. User-friendly display name.
func (o MigrationCenterGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o MigrationCenterGroupOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Required. User specified ID for the group. It will become the last component of the group name. The ID must be unique
// within the project, must conform with RFC-1034, is restricted to lower-cased letters, and has a maximum length of 63
// characters. The ID must match the regular expression: 'a-z?'.
func (o MigrationCenterGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// Labels as key value pairs. **Note**: This field is non-authoritative, and will only manage the labels present in your
// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o MigrationCenterGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the group.
func (o MigrationCenterGroupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o MigrationCenterGroupOutput) MigrationCenterGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringOutput { return v.MigrationCenterGroupId }).(pulumi.StringOutput)
}

// Output only. The name of the group.
func (o MigrationCenterGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o MigrationCenterGroupOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o MigrationCenterGroupOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o MigrationCenterGroupOutput) Timeouts() MigrationCenterGroupTimeoutsPtrOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) MigrationCenterGroupTimeoutsPtrOutput { return v.Timeouts }).(MigrationCenterGroupTimeoutsPtrOutput)
}

// Output only. The timestamp when the group was last updated.
func (o MigrationCenterGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MigrationCenterGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MigrationCenterGroupInput)(nil)).Elem(), &MigrationCenterGroup{})
	pulumi.RegisterOutputType(MigrationCenterGroupOutput{})
}
