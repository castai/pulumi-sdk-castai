// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeOrganizationSecurityPolicyAssociation struct {
	pulumi.CustomResourceState

	// The resource that the security policy is attached to.
	AttachmentId                                   pulumi.StringOutput `pulumi:"attachmentId"`
	ComputeOrganizationSecurityPolicyAssociationId pulumi.StringOutput `pulumi:"computeOrganizationSecurityPolicyAssociationId"`
	// The display name of the security policy of the association.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The name for an association.
	Name pulumi.StringOutput `pulumi:"name"`
	// The security policy ID of the association.
	PolicyId pulumi.StringOutput                                           `pulumi:"policyId"`
	Timeouts ComputeOrganizationSecurityPolicyAssociationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeOrganizationSecurityPolicyAssociation registers a new resource with the given unique name, arguments, and options.
func NewComputeOrganizationSecurityPolicyAssociation(ctx *pulumi.Context,
	name string, args *ComputeOrganizationSecurityPolicyAssociationArgs, opts ...pulumi.ResourceOption) (*ComputeOrganizationSecurityPolicyAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'AttachmentId'")
	}
	if args.PolicyId == nil {
		return nil, errors.New("invalid value for required argument 'PolicyId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeOrganizationSecurityPolicyAssociation
	err = ctx.RegisterPackageResource("google-beta:index/computeOrganizationSecurityPolicyAssociation:ComputeOrganizationSecurityPolicyAssociation", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeOrganizationSecurityPolicyAssociation gets an existing ComputeOrganizationSecurityPolicyAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeOrganizationSecurityPolicyAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeOrganizationSecurityPolicyAssociationState, opts ...pulumi.ResourceOption) (*ComputeOrganizationSecurityPolicyAssociation, error) {
	var resource ComputeOrganizationSecurityPolicyAssociation
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeOrganizationSecurityPolicyAssociation:ComputeOrganizationSecurityPolicyAssociation", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeOrganizationSecurityPolicyAssociation resources.
type computeOrganizationSecurityPolicyAssociationState struct {
	// The resource that the security policy is attached to.
	AttachmentId                                   *string `pulumi:"attachmentId"`
	ComputeOrganizationSecurityPolicyAssociationId *string `pulumi:"computeOrganizationSecurityPolicyAssociationId"`
	// The display name of the security policy of the association.
	DisplayName *string `pulumi:"displayName"`
	// The name for an association.
	Name *string `pulumi:"name"`
	// The security policy ID of the association.
	PolicyId *string                                               `pulumi:"policyId"`
	Timeouts *ComputeOrganizationSecurityPolicyAssociationTimeouts `pulumi:"timeouts"`
}

type ComputeOrganizationSecurityPolicyAssociationState struct {
	// The resource that the security policy is attached to.
	AttachmentId                                   pulumi.StringPtrInput
	ComputeOrganizationSecurityPolicyAssociationId pulumi.StringPtrInput
	// The display name of the security policy of the association.
	DisplayName pulumi.StringPtrInput
	// The name for an association.
	Name pulumi.StringPtrInput
	// The security policy ID of the association.
	PolicyId pulumi.StringPtrInput
	Timeouts ComputeOrganizationSecurityPolicyAssociationTimeoutsPtrInput
}

func (ComputeOrganizationSecurityPolicyAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeOrganizationSecurityPolicyAssociationState)(nil)).Elem()
}

type computeOrganizationSecurityPolicyAssociationArgs struct {
	// The resource that the security policy is attached to.
	AttachmentId                                   string  `pulumi:"attachmentId"`
	ComputeOrganizationSecurityPolicyAssociationId *string `pulumi:"computeOrganizationSecurityPolicyAssociationId"`
	// The name for an association.
	Name *string `pulumi:"name"`
	// The security policy ID of the association.
	PolicyId string                                                `pulumi:"policyId"`
	Timeouts *ComputeOrganizationSecurityPolicyAssociationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeOrganizationSecurityPolicyAssociation resource.
type ComputeOrganizationSecurityPolicyAssociationArgs struct {
	// The resource that the security policy is attached to.
	AttachmentId                                   pulumi.StringInput
	ComputeOrganizationSecurityPolicyAssociationId pulumi.StringPtrInput
	// The name for an association.
	Name pulumi.StringPtrInput
	// The security policy ID of the association.
	PolicyId pulumi.StringInput
	Timeouts ComputeOrganizationSecurityPolicyAssociationTimeoutsPtrInput
}

func (ComputeOrganizationSecurityPolicyAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeOrganizationSecurityPolicyAssociationArgs)(nil)).Elem()
}

type ComputeOrganizationSecurityPolicyAssociationInput interface {
	pulumi.Input

	ToComputeOrganizationSecurityPolicyAssociationOutput() ComputeOrganizationSecurityPolicyAssociationOutput
	ToComputeOrganizationSecurityPolicyAssociationOutputWithContext(ctx context.Context) ComputeOrganizationSecurityPolicyAssociationOutput
}

func (*ComputeOrganizationSecurityPolicyAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeOrganizationSecurityPolicyAssociation)(nil)).Elem()
}

func (i *ComputeOrganizationSecurityPolicyAssociation) ToComputeOrganizationSecurityPolicyAssociationOutput() ComputeOrganizationSecurityPolicyAssociationOutput {
	return i.ToComputeOrganizationSecurityPolicyAssociationOutputWithContext(context.Background())
}

func (i *ComputeOrganizationSecurityPolicyAssociation) ToComputeOrganizationSecurityPolicyAssociationOutputWithContext(ctx context.Context) ComputeOrganizationSecurityPolicyAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeOrganizationSecurityPolicyAssociationOutput)
}

type ComputeOrganizationSecurityPolicyAssociationOutput struct{ *pulumi.OutputState }

func (ComputeOrganizationSecurityPolicyAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeOrganizationSecurityPolicyAssociation)(nil)).Elem()
}

func (o ComputeOrganizationSecurityPolicyAssociationOutput) ToComputeOrganizationSecurityPolicyAssociationOutput() ComputeOrganizationSecurityPolicyAssociationOutput {
	return o
}

func (o ComputeOrganizationSecurityPolicyAssociationOutput) ToComputeOrganizationSecurityPolicyAssociationOutputWithContext(ctx context.Context) ComputeOrganizationSecurityPolicyAssociationOutput {
	return o
}

// The resource that the security policy is attached to.
func (o ComputeOrganizationSecurityPolicyAssociationOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicyAssociation) pulumi.StringOutput { return v.AttachmentId }).(pulumi.StringOutput)
}

func (o ComputeOrganizationSecurityPolicyAssociationOutput) ComputeOrganizationSecurityPolicyAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicyAssociation) pulumi.StringOutput {
		return v.ComputeOrganizationSecurityPolicyAssociationId
	}).(pulumi.StringOutput)
}

// The display name of the security policy of the association.
func (o ComputeOrganizationSecurityPolicyAssociationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicyAssociation) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The name for an association.
func (o ComputeOrganizationSecurityPolicyAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicyAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The security policy ID of the association.
func (o ComputeOrganizationSecurityPolicyAssociationOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicyAssociation) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

func (o ComputeOrganizationSecurityPolicyAssociationOutput) Timeouts() ComputeOrganizationSecurityPolicyAssociationTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicyAssociation) ComputeOrganizationSecurityPolicyAssociationTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputeOrganizationSecurityPolicyAssociationTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeOrganizationSecurityPolicyAssociationInput)(nil)).Elem(), &ComputeOrganizationSecurityPolicyAssociation{})
	pulumi.RegisterOutputType(ComputeOrganizationSecurityPolicyAssociationOutput{})
}
