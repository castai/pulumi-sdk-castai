// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeFirewall struct {
	pulumi.CustomResourceState

	// The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// permitted connection.
	Allows            ComputeFirewallAllowArrayOutput `pulumi:"allows"`
	ComputeFirewallId pulumi.StringOutput             `pulumi:"computeFirewallId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// denied connection.
	Denies ComputeFirewallDenyArrayOutput `pulumi:"denies"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these
	// ranges. These ranges must be expressed in CIDR format. IPv4 or IPv6 ranges are supported.
	DestinationRanges pulumi.StringArrayOutput `pulumi:"destinationRanges"`
	// Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, one of
	// 'source_ranges', 'source_tags' or 'source_service_accounts' is required. Possible values: ["INGRESS", "EGRESS"]
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Denotes whether the firewall rule is disabled, i.e not applied to the network it is associated with. When set to true,
	// the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall
	// rule will be enabled.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// This field denotes whether to enable logging for a particular firewall rule. If logging is enabled, logs will be
	// exported to Stackdriver.
	//
	// Deprecated: Deprecated
	EnableLogging pulumi.BoolOutput `pulumi:"enableLogging"`
	// This field denotes the logging options for a particular firewall rule. If defined, logging is enabled, and logs will be
	// exported to Cloud Logging.
	LogConfig ComputeFirewallLogConfigPtrOutput `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name or self_link of the network to attach this firewall to.
	Network pulumi.StringOutput `pulumi:"network"`
	// Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is
	// 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence
	// (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW
	// rules having equal priority.
	Priority pulumi.Float64PtrOutput `pulumi:"priority"`
	Project  pulumi.StringOutput     `pulumi:"project"`
	SelfLink pulumi.StringOutput     `pulumi:"selfLink"`
	// If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges.
	// These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties
	// are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs
	// to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to
	// apply. IPv4 or IPv6 ranges are supported. For INGRESS traffic, one of 'source_ranges', 'source_tags' or
	// 'source_service_accounts' is required.
	SourceRanges pulumi.StringArrayOutput `pulumi:"sourceRanges"`
	// If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a
	// service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP
	// address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same
	// time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within
	// sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection
	// does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time
	// as sourceTags or targetTags. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is
	// required.
	SourceServiceAccounts pulumi.StringArrayOutput `pulumi:"sourceServiceAccounts"`
	// If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in
	// source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are
	// associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both
	// properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP
	// that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the
	// firewall to apply. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is required.
	SourceTags pulumi.StringArrayOutput `pulumi:"sourceTags"`
	// A list of service accounts indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither
	// targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.
	TargetServiceAccounts pulumi.StringArrayOutput `pulumi:"targetServiceAccounts"`
	// A list of instance tags indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified
	// network.
	TargetTags pulumi.StringArrayOutput         `pulumi:"targetTags"`
	Timeouts   ComputeFirewallTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeFirewall registers a new resource with the given unique name, arguments, and options.
func NewComputeFirewall(ctx *pulumi.Context,
	name string, args *ComputeFirewallArgs, opts ...pulumi.ResourceOption) (*ComputeFirewall, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeFirewall
	err = ctx.RegisterPackageResource("google-beta:index/computeFirewall:ComputeFirewall", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeFirewall gets an existing ComputeFirewall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeFirewall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeFirewallState, opts ...pulumi.ResourceOption) (*ComputeFirewall, error) {
	var resource ComputeFirewall
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeFirewall:ComputeFirewall", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeFirewall resources.
type computeFirewallState struct {
	// The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// permitted connection.
	Allows            []ComputeFirewallAllow `pulumi:"allows"`
	ComputeFirewallId *string                `pulumi:"computeFirewallId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// denied connection.
	Denies []ComputeFirewallDeny `pulumi:"denies"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these
	// ranges. These ranges must be expressed in CIDR format. IPv4 or IPv6 ranges are supported.
	DestinationRanges []string `pulumi:"destinationRanges"`
	// Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, one of
	// 'source_ranges', 'source_tags' or 'source_service_accounts' is required. Possible values: ["INGRESS", "EGRESS"]
	Direction *string `pulumi:"direction"`
	// Denotes whether the firewall rule is disabled, i.e not applied to the network it is associated with. When set to true,
	// the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall
	// rule will be enabled.
	Disabled *bool `pulumi:"disabled"`
	// This field denotes whether to enable logging for a particular firewall rule. If logging is enabled, logs will be
	// exported to Stackdriver.
	//
	// Deprecated: Deprecated
	EnableLogging *bool `pulumi:"enableLogging"`
	// This field denotes the logging options for a particular firewall rule. If defined, logging is enabled, and logs will be
	// exported to Cloud Logging.
	LogConfig *ComputeFirewallLogConfig `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The name or self_link of the network to attach this firewall to.
	Network *string `pulumi:"network"`
	// Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is
	// 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence
	// (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW
	// rules having equal priority.
	Priority *float64 `pulumi:"priority"`
	Project  *string  `pulumi:"project"`
	SelfLink *string  `pulumi:"selfLink"`
	// If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges.
	// These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties
	// are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs
	// to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to
	// apply. IPv4 or IPv6 ranges are supported. For INGRESS traffic, one of 'source_ranges', 'source_tags' or
	// 'source_service_accounts' is required.
	SourceRanges []string `pulumi:"sourceRanges"`
	// If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a
	// service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP
	// address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same
	// time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within
	// sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection
	// does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time
	// as sourceTags or targetTags. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is
	// required.
	SourceServiceAccounts []string `pulumi:"sourceServiceAccounts"`
	// If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in
	// source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are
	// associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both
	// properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP
	// that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the
	// firewall to apply. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is required.
	SourceTags []string `pulumi:"sourceTags"`
	// A list of service accounts indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither
	// targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.
	TargetServiceAccounts []string `pulumi:"targetServiceAccounts"`
	// A list of instance tags indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified
	// network.
	TargetTags []string                 `pulumi:"targetTags"`
	Timeouts   *ComputeFirewallTimeouts `pulumi:"timeouts"`
}

type ComputeFirewallState struct {
	// The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// permitted connection.
	Allows            ComputeFirewallAllowArrayInput
	ComputeFirewallId pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// denied connection.
	Denies ComputeFirewallDenyArrayInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these
	// ranges. These ranges must be expressed in CIDR format. IPv4 or IPv6 ranges are supported.
	DestinationRanges pulumi.StringArrayInput
	// Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, one of
	// 'source_ranges', 'source_tags' or 'source_service_accounts' is required. Possible values: ["INGRESS", "EGRESS"]
	Direction pulumi.StringPtrInput
	// Denotes whether the firewall rule is disabled, i.e not applied to the network it is associated with. When set to true,
	// the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall
	// rule will be enabled.
	Disabled pulumi.BoolPtrInput
	// This field denotes whether to enable logging for a particular firewall rule. If logging is enabled, logs will be
	// exported to Stackdriver.
	//
	// Deprecated: Deprecated
	EnableLogging pulumi.BoolPtrInput
	// This field denotes the logging options for a particular firewall rule. If defined, logging is enabled, and logs will be
	// exported to Cloud Logging.
	LogConfig ComputeFirewallLogConfigPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The name or self_link of the network to attach this firewall to.
	Network pulumi.StringPtrInput
	// Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is
	// 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence
	// (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW
	// rules having equal priority.
	Priority pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	SelfLink pulumi.StringPtrInput
	// If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges.
	// These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties
	// are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs
	// to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to
	// apply. IPv4 or IPv6 ranges are supported. For INGRESS traffic, one of 'source_ranges', 'source_tags' or
	// 'source_service_accounts' is required.
	SourceRanges pulumi.StringArrayInput
	// If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a
	// service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP
	// address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same
	// time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within
	// sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection
	// does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time
	// as sourceTags or targetTags. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is
	// required.
	SourceServiceAccounts pulumi.StringArrayInput
	// If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in
	// source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are
	// associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both
	// properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP
	// that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the
	// firewall to apply. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is required.
	SourceTags pulumi.StringArrayInput
	// A list of service accounts indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither
	// targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.
	TargetServiceAccounts pulumi.StringArrayInput
	// A list of instance tags indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified
	// network.
	TargetTags pulumi.StringArrayInput
	Timeouts   ComputeFirewallTimeoutsPtrInput
}

func (ComputeFirewallState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeFirewallState)(nil)).Elem()
}

type computeFirewallArgs struct {
	// The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// permitted connection.
	Allows            []ComputeFirewallAllow `pulumi:"allows"`
	ComputeFirewallId *string                `pulumi:"computeFirewallId"`
	// The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// denied connection.
	Denies []ComputeFirewallDeny `pulumi:"denies"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these
	// ranges. These ranges must be expressed in CIDR format. IPv4 or IPv6 ranges are supported.
	DestinationRanges []string `pulumi:"destinationRanges"`
	// Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, one of
	// 'source_ranges', 'source_tags' or 'source_service_accounts' is required. Possible values: ["INGRESS", "EGRESS"]
	Direction *string `pulumi:"direction"`
	// Denotes whether the firewall rule is disabled, i.e not applied to the network it is associated with. When set to true,
	// the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall
	// rule will be enabled.
	Disabled *bool `pulumi:"disabled"`
	// This field denotes whether to enable logging for a particular firewall rule. If logging is enabled, logs will be
	// exported to Stackdriver.
	//
	// Deprecated: Deprecated
	EnableLogging *bool `pulumi:"enableLogging"`
	// This field denotes the logging options for a particular firewall rule. If defined, logging is enabled, and logs will be
	// exported to Cloud Logging.
	LogConfig *ComputeFirewallLogConfig `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The name or self_link of the network to attach this firewall to.
	Network string `pulumi:"network"`
	// Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is
	// 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence
	// (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW
	// rules having equal priority.
	Priority *float64 `pulumi:"priority"`
	Project  *string  `pulumi:"project"`
	// If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges.
	// These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties
	// are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs
	// to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to
	// apply. IPv4 or IPv6 ranges are supported. For INGRESS traffic, one of 'source_ranges', 'source_tags' or
	// 'source_service_accounts' is required.
	SourceRanges []string `pulumi:"sourceRanges"`
	// If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a
	// service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP
	// address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same
	// time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within
	// sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection
	// does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time
	// as sourceTags or targetTags. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is
	// required.
	SourceServiceAccounts []string `pulumi:"sourceServiceAccounts"`
	// If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in
	// source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are
	// associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both
	// properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP
	// that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the
	// firewall to apply. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is required.
	SourceTags []string `pulumi:"sourceTags"`
	// A list of service accounts indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither
	// targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.
	TargetServiceAccounts []string `pulumi:"targetServiceAccounts"`
	// A list of instance tags indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified
	// network.
	TargetTags []string                 `pulumi:"targetTags"`
	Timeouts   *ComputeFirewallTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeFirewall resource.
type ComputeFirewallArgs struct {
	// The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// permitted connection.
	Allows            ComputeFirewallAllowArrayInput
	ComputeFirewallId pulumi.StringPtrInput
	// The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
	// denied connection.
	Denies ComputeFirewallDenyArrayInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these
	// ranges. These ranges must be expressed in CIDR format. IPv4 or IPv6 ranges are supported.
	DestinationRanges pulumi.StringArrayInput
	// Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, one of
	// 'source_ranges', 'source_tags' or 'source_service_accounts' is required. Possible values: ["INGRESS", "EGRESS"]
	Direction pulumi.StringPtrInput
	// Denotes whether the firewall rule is disabled, i.e not applied to the network it is associated with. When set to true,
	// the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall
	// rule will be enabled.
	Disabled pulumi.BoolPtrInput
	// This field denotes whether to enable logging for a particular firewall rule. If logging is enabled, logs will be
	// exported to Stackdriver.
	//
	// Deprecated: Deprecated
	EnableLogging pulumi.BoolPtrInput
	// This field denotes the logging options for a particular firewall rule. If defined, logging is enabled, and logs will be
	// exported to Cloud Logging.
	LogConfig ComputeFirewallLogConfigPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The name or self_link of the network to attach this firewall to.
	Network pulumi.StringInput
	// Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is
	// 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence
	// (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW
	// rules having equal priority.
	Priority pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	// If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges.
	// These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties
	// are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs
	// to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to
	// apply. IPv4 or IPv6 ranges are supported. For INGRESS traffic, one of 'source_ranges', 'source_tags' or
	// 'source_service_accounts' is required.
	SourceRanges pulumi.StringArrayInput
	// If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a
	// service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP
	// address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same
	// time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within
	// sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection
	// does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time
	// as sourceTags or targetTags. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is
	// required.
	SourceServiceAccounts pulumi.StringArrayInput
	// If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in
	// source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are
	// associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both
	// properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP
	// that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the
	// firewall to apply. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is required.
	SourceTags pulumi.StringArrayInput
	// A list of service accounts indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither
	// targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.
	TargetServiceAccounts pulumi.StringArrayInput
	// A list of instance tags indicating sets of instances located in the network that may make network connections as
	// specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified
	// network.
	TargetTags pulumi.StringArrayInput
	Timeouts   ComputeFirewallTimeoutsPtrInput
}

func (ComputeFirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeFirewallArgs)(nil)).Elem()
}

type ComputeFirewallInput interface {
	pulumi.Input

	ToComputeFirewallOutput() ComputeFirewallOutput
	ToComputeFirewallOutputWithContext(ctx context.Context) ComputeFirewallOutput
}

func (*ComputeFirewall) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeFirewall)(nil)).Elem()
}

func (i *ComputeFirewall) ToComputeFirewallOutput() ComputeFirewallOutput {
	return i.ToComputeFirewallOutputWithContext(context.Background())
}

func (i *ComputeFirewall) ToComputeFirewallOutputWithContext(ctx context.Context) ComputeFirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeFirewallOutput)
}

type ComputeFirewallOutput struct{ *pulumi.OutputState }

func (ComputeFirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeFirewall)(nil)).Elem()
}

func (o ComputeFirewallOutput) ToComputeFirewallOutput() ComputeFirewallOutput {
	return o
}

func (o ComputeFirewallOutput) ToComputeFirewallOutputWithContext(ctx context.Context) ComputeFirewallOutput {
	return o
}

// The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
// permitted connection.
func (o ComputeFirewallOutput) Allows() ComputeFirewallAllowArrayOutput {
	return o.ApplyT(func(v *ComputeFirewall) ComputeFirewallAllowArrayOutput { return v.Allows }).(ComputeFirewallAllowArrayOutput)
}

func (o ComputeFirewallOutput) ComputeFirewallId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringOutput { return v.ComputeFirewallId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeFirewallOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a
// denied connection.
func (o ComputeFirewallOutput) Denies() ComputeFirewallDenyArrayOutput {
	return o.ApplyT(func(v *ComputeFirewall) ComputeFirewallDenyArrayOutput { return v.Denies }).(ComputeFirewallDenyArrayOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o ComputeFirewallOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these
// ranges. These ranges must be expressed in CIDR format. IPv4 or IPv6 ranges are supported.
func (o ComputeFirewallOutput) DestinationRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringArrayOutput { return v.DestinationRanges }).(pulumi.StringArrayOutput)
}

// Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, one of
// 'source_ranges', 'source_tags' or 'source_service_accounts' is required. Possible values: ["INGRESS", "EGRESS"]
func (o ComputeFirewallOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Denotes whether the firewall rule is disabled, i.e not applied to the network it is associated with. When set to true,
// the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall
// rule will be enabled.
func (o ComputeFirewallOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// This field denotes whether to enable logging for a particular firewall rule. If logging is enabled, logs will be
// exported to Stackdriver.
//
// Deprecated: Deprecated
func (o ComputeFirewallOutput) EnableLogging() pulumi.BoolOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.BoolOutput { return v.EnableLogging }).(pulumi.BoolOutput)
}

// This field denotes the logging options for a particular firewall rule. If defined, logging is enabled, and logs will be
// exported to Cloud Logging.
func (o ComputeFirewallOutput) LogConfig() ComputeFirewallLogConfigPtrOutput {
	return o.ApplyT(func(v *ComputeFirewall) ComputeFirewallLogConfigPtrOutput { return v.LogConfig }).(ComputeFirewallLogConfigPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeFirewallOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name or self_link of the network to attach this firewall to.
func (o ComputeFirewallOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is
// 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence
// (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW
// rules having equal priority.
func (o ComputeFirewallOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.Float64PtrOutput { return v.Priority }).(pulumi.Float64PtrOutput)
}

func (o ComputeFirewallOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeFirewallOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges.
// These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties
// are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs
// to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to
// apply. IPv4 or IPv6 ranges are supported. For INGRESS traffic, one of 'source_ranges', 'source_tags' or
// 'source_service_accounts' is required.
func (o ComputeFirewallOutput) SourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringArrayOutput { return v.SourceRanges }).(pulumi.StringArrayOutput)
}

// If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a
// service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP
// address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same
// time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within
// sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection
// does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time
// as sourceTags or targetTags. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is
// required.
func (o ComputeFirewallOutput) SourceServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringArrayOutput { return v.SourceServiceAccounts }).(pulumi.StringArrayOutput)
}

// If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in
// source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are
// associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both
// properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP
// that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the
// firewall to apply. For INGRESS traffic, one of 'source_ranges', 'source_tags' or 'source_service_accounts' is required.
func (o ComputeFirewallOutput) SourceTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringArrayOutput { return v.SourceTags }).(pulumi.StringArrayOutput)
}

// A list of service accounts indicating sets of instances located in the network that may make network connections as
// specified in allowed[]. targetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither
// targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.
func (o ComputeFirewallOutput) TargetServiceAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringArrayOutput { return v.TargetServiceAccounts }).(pulumi.StringArrayOutput)
}

// A list of instance tags indicating sets of instances located in the network that may make network connections as
// specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified
// network.
func (o ComputeFirewallOutput) TargetTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeFirewall) pulumi.StringArrayOutput { return v.TargetTags }).(pulumi.StringArrayOutput)
}

func (o ComputeFirewallOutput) Timeouts() ComputeFirewallTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeFirewall) ComputeFirewallTimeoutsPtrOutput { return v.Timeouts }).(ComputeFirewallTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeFirewallInput)(nil)).Elem(), &ComputeFirewall{})
	pulumi.RegisterOutputType(ComputeFirewallOutput{})
}
