// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionBackendServiceIamBinding struct {
	pulumi.CustomResourceState

	ComputeRegionBackendServiceIamBindingId pulumi.StringOutput                                     `pulumi:"computeRegionBackendServiceIamBindingId"`
	Condition                               ComputeRegionBackendServiceIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                                    pulumi.StringOutput                                     `pulumi:"etag"`
	Members                                 pulumi.StringArrayOutput                                `pulumi:"members"`
	Name                                    pulumi.StringOutput                                     `pulumi:"name"`
	Project                                 pulumi.StringOutput                                     `pulumi:"project"`
	Region                                  pulumi.StringOutput                                     `pulumi:"region"`
	Role                                    pulumi.StringOutput                                     `pulumi:"role"`
}

// NewComputeRegionBackendServiceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionBackendServiceIamBinding(ctx *pulumi.Context,
	name string, args *ComputeRegionBackendServiceIamBindingArgs, opts ...pulumi.ResourceOption) (*ComputeRegionBackendServiceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionBackendServiceIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/computeRegionBackendServiceIamBinding:ComputeRegionBackendServiceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionBackendServiceIamBinding gets an existing ComputeRegionBackendServiceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionBackendServiceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionBackendServiceIamBindingState, opts ...pulumi.ResourceOption) (*ComputeRegionBackendServiceIamBinding, error) {
	var resource ComputeRegionBackendServiceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeRegionBackendServiceIamBinding:ComputeRegionBackendServiceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionBackendServiceIamBinding resources.
type computeRegionBackendServiceIamBindingState struct {
	ComputeRegionBackendServiceIamBindingId *string                                         `pulumi:"computeRegionBackendServiceIamBindingId"`
	Condition                               *ComputeRegionBackendServiceIamBindingCondition `pulumi:"condition"`
	Etag                                    *string                                         `pulumi:"etag"`
	Members                                 []string                                        `pulumi:"members"`
	Name                                    *string                                         `pulumi:"name"`
	Project                                 *string                                         `pulumi:"project"`
	Region                                  *string                                         `pulumi:"region"`
	Role                                    *string                                         `pulumi:"role"`
}

type ComputeRegionBackendServiceIamBindingState struct {
	ComputeRegionBackendServiceIamBindingId pulumi.StringPtrInput
	Condition                               ComputeRegionBackendServiceIamBindingConditionPtrInput
	Etag                                    pulumi.StringPtrInput
	Members                                 pulumi.StringArrayInput
	Name                                    pulumi.StringPtrInput
	Project                                 pulumi.StringPtrInput
	Region                                  pulumi.StringPtrInput
	Role                                    pulumi.StringPtrInput
}

func (ComputeRegionBackendServiceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionBackendServiceIamBindingState)(nil)).Elem()
}

type computeRegionBackendServiceIamBindingArgs struct {
	ComputeRegionBackendServiceIamBindingId *string                                         `pulumi:"computeRegionBackendServiceIamBindingId"`
	Condition                               *ComputeRegionBackendServiceIamBindingCondition `pulumi:"condition"`
	Members                                 []string                                        `pulumi:"members"`
	Name                                    *string                                         `pulumi:"name"`
	Project                                 *string                                         `pulumi:"project"`
	Region                                  *string                                         `pulumi:"region"`
	Role                                    string                                          `pulumi:"role"`
}

// The set of arguments for constructing a ComputeRegionBackendServiceIamBinding resource.
type ComputeRegionBackendServiceIamBindingArgs struct {
	ComputeRegionBackendServiceIamBindingId pulumi.StringPtrInput
	Condition                               ComputeRegionBackendServiceIamBindingConditionPtrInput
	Members                                 pulumi.StringArrayInput
	Name                                    pulumi.StringPtrInput
	Project                                 pulumi.StringPtrInput
	Region                                  pulumi.StringPtrInput
	Role                                    pulumi.StringInput
}

func (ComputeRegionBackendServiceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionBackendServiceIamBindingArgs)(nil)).Elem()
}

type ComputeRegionBackendServiceIamBindingInput interface {
	pulumi.Input

	ToComputeRegionBackendServiceIamBindingOutput() ComputeRegionBackendServiceIamBindingOutput
	ToComputeRegionBackendServiceIamBindingOutputWithContext(ctx context.Context) ComputeRegionBackendServiceIamBindingOutput
}

func (*ComputeRegionBackendServiceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionBackendServiceIamBinding)(nil)).Elem()
}

func (i *ComputeRegionBackendServiceIamBinding) ToComputeRegionBackendServiceIamBindingOutput() ComputeRegionBackendServiceIamBindingOutput {
	return i.ToComputeRegionBackendServiceIamBindingOutputWithContext(context.Background())
}

func (i *ComputeRegionBackendServiceIamBinding) ToComputeRegionBackendServiceIamBindingOutputWithContext(ctx context.Context) ComputeRegionBackendServiceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionBackendServiceIamBindingOutput)
}

type ComputeRegionBackendServiceIamBindingOutput struct{ *pulumi.OutputState }

func (ComputeRegionBackendServiceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionBackendServiceIamBinding)(nil)).Elem()
}

func (o ComputeRegionBackendServiceIamBindingOutput) ToComputeRegionBackendServiceIamBindingOutput() ComputeRegionBackendServiceIamBindingOutput {
	return o
}

func (o ComputeRegionBackendServiceIamBindingOutput) ToComputeRegionBackendServiceIamBindingOutputWithContext(ctx context.Context) ComputeRegionBackendServiceIamBindingOutput {
	return o
}

func (o ComputeRegionBackendServiceIamBindingOutput) ComputeRegionBackendServiceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamBinding) pulumi.StringOutput {
		return v.ComputeRegionBackendServiceIamBindingId
	}).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamBindingOutput) Condition() ComputeRegionBackendServiceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamBinding) ComputeRegionBackendServiceIamBindingConditionPtrOutput {
		return v.Condition
	}).(ComputeRegionBackendServiceIamBindingConditionPtrOutput)
}

func (o ComputeRegionBackendServiceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o ComputeRegionBackendServiceIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamBindingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamBinding) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendServiceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionBackendServiceIamBindingInput)(nil)).Elem(), &ComputeRegionBackendServiceIamBinding{})
	pulumi.RegisterOutputType(ComputeRegionBackendServiceIamBindingOutput{})
}
