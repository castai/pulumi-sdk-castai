// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ParameterManagerRegionalParameter struct {
	pulumi.CustomResourceState

	// The time at which the regional Parameter was created.
	CreateTime      pulumi.StringOutput    `pulumi:"createTime"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The format type of the regional parameter. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format pulumi.StringPtrOutput `pulumi:"format"`
	// The labels assigned to this regional Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8
	// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values must be between 0 and 63 characters long, have a UTF-8 encoding
	// of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more
	// than 64 labels can be assigned to a given resource. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the regional parameter. eg us-central1
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the regional Parameter. Format:
	// 'projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}'
	Name pulumi.StringOutput `pulumi:"name"`
	// This must be unique within the project.
	ParameterId                         pulumi.StringOutput `pulumi:"parameterId"`
	ParameterManagerRegionalParameterId pulumi.StringOutput `pulumi:"parameterManagerRegionalParameterId"`
	// An object containing a unique resource identity tied to the regional parameter.
	PolicyMembers ParameterManagerRegionalParameterPolicyMemberArrayOutput `pulumi:"policyMembers"`
	Project       pulumi.StringOutput                                      `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                             `pulumi:"terraformLabels"`
	Timeouts        ParameterManagerRegionalParameterTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time at which the regional Parameter was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewParameterManagerRegionalParameter registers a new resource with the given unique name, arguments, and options.
func NewParameterManagerRegionalParameter(ctx *pulumi.Context,
	name string, args *ParameterManagerRegionalParameterArgs, opts ...pulumi.ResourceOption) (*ParameterManagerRegionalParameter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.ParameterId == nil {
		return nil, errors.New("invalid value for required argument 'ParameterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ParameterManagerRegionalParameter
	err = ctx.RegisterPackageResource("google-beta:index/parameterManagerRegionalParameter:ParameterManagerRegionalParameter", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetParameterManagerRegionalParameter gets an existing ParameterManagerRegionalParameter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetParameterManagerRegionalParameter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ParameterManagerRegionalParameterState, opts ...pulumi.ResourceOption) (*ParameterManagerRegionalParameter, error) {
	var resource ParameterManagerRegionalParameter
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/parameterManagerRegionalParameter:ParameterManagerRegionalParameter", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ParameterManagerRegionalParameter resources.
type parameterManagerRegionalParameterState struct {
	// The time at which the regional Parameter was created.
	CreateTime      *string           `pulumi:"createTime"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The format type of the regional parameter. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format *string `pulumi:"format"`
	// The labels assigned to this regional Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8
	// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values must be between 0 and 63 characters long, have a UTF-8 encoding
	// of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more
	// than 64 labels can be assigned to a given resource. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the regional parameter. eg us-central1
	Location *string `pulumi:"location"`
	// The resource name of the regional Parameter. Format:
	// 'projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}'
	Name *string `pulumi:"name"`
	// This must be unique within the project.
	ParameterId                         *string `pulumi:"parameterId"`
	ParameterManagerRegionalParameterId *string `pulumi:"parameterManagerRegionalParameterId"`
	// An object containing a unique resource identity tied to the regional parameter.
	PolicyMembers []ParameterManagerRegionalParameterPolicyMember `pulumi:"policyMembers"`
	Project       *string                                         `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                          `pulumi:"terraformLabels"`
	Timeouts        *ParameterManagerRegionalParameterTimeouts `pulumi:"timeouts"`
	// The time at which the regional Parameter was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ParameterManagerRegionalParameterState struct {
	// The time at which the regional Parameter was created.
	CreateTime      pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The format type of the regional parameter. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format pulumi.StringPtrInput
	// The labels assigned to this regional Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8
	// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values must be between 0 and 63 characters long, have a UTF-8 encoding
	// of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more
	// than 64 labels can be assigned to a given resource. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location of the regional parameter. eg us-central1
	Location pulumi.StringPtrInput
	// The resource name of the regional Parameter. Format:
	// 'projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}'
	Name pulumi.StringPtrInput
	// This must be unique within the project.
	ParameterId                         pulumi.StringPtrInput
	ParameterManagerRegionalParameterId pulumi.StringPtrInput
	// An object containing a unique resource identity tied to the regional parameter.
	PolicyMembers ParameterManagerRegionalParameterPolicyMemberArrayInput
	Project       pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ParameterManagerRegionalParameterTimeoutsPtrInput
	// The time at which the regional Parameter was updated.
	UpdateTime pulumi.StringPtrInput
}

func (ParameterManagerRegionalParameterState) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterManagerRegionalParameterState)(nil)).Elem()
}

type parameterManagerRegionalParameterArgs struct {
	// The format type of the regional parameter. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format *string `pulumi:"format"`
	// The labels assigned to this regional Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8
	// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values must be between 0 and 63 characters long, have a UTF-8 encoding
	// of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more
	// than 64 labels can be assigned to a given resource. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the regional parameter. eg us-central1
	Location string `pulumi:"location"`
	// This must be unique within the project.
	ParameterId                         string                                     `pulumi:"parameterId"`
	ParameterManagerRegionalParameterId *string                                    `pulumi:"parameterManagerRegionalParameterId"`
	Project                             *string                                    `pulumi:"project"`
	Timeouts                            *ParameterManagerRegionalParameterTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ParameterManagerRegionalParameter resource.
type ParameterManagerRegionalParameterArgs struct {
	// The format type of the regional parameter. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format pulumi.StringPtrInput
	// The labels assigned to this regional Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8
	// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values must be between 0 and 63 characters long, have a UTF-8 encoding
	// of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more
	// than 64 labels can be assigned to a given resource. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location of the regional parameter. eg us-central1
	Location pulumi.StringInput
	// This must be unique within the project.
	ParameterId                         pulumi.StringInput
	ParameterManagerRegionalParameterId pulumi.StringPtrInput
	Project                             pulumi.StringPtrInput
	Timeouts                            ParameterManagerRegionalParameterTimeoutsPtrInput
}

func (ParameterManagerRegionalParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterManagerRegionalParameterArgs)(nil)).Elem()
}

type ParameterManagerRegionalParameterInput interface {
	pulumi.Input

	ToParameterManagerRegionalParameterOutput() ParameterManagerRegionalParameterOutput
	ToParameterManagerRegionalParameterOutputWithContext(ctx context.Context) ParameterManagerRegionalParameterOutput
}

func (*ParameterManagerRegionalParameter) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterManagerRegionalParameter)(nil)).Elem()
}

func (i *ParameterManagerRegionalParameter) ToParameterManagerRegionalParameterOutput() ParameterManagerRegionalParameterOutput {
	return i.ToParameterManagerRegionalParameterOutputWithContext(context.Background())
}

func (i *ParameterManagerRegionalParameter) ToParameterManagerRegionalParameterOutputWithContext(ctx context.Context) ParameterManagerRegionalParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterManagerRegionalParameterOutput)
}

type ParameterManagerRegionalParameterOutput struct{ *pulumi.OutputState }

func (ParameterManagerRegionalParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterManagerRegionalParameter)(nil)).Elem()
}

func (o ParameterManagerRegionalParameterOutput) ToParameterManagerRegionalParameterOutput() ParameterManagerRegionalParameterOutput {
	return o
}

func (o ParameterManagerRegionalParameterOutput) ToParameterManagerRegionalParameterOutputWithContext(ctx context.Context) ParameterManagerRegionalParameterOutput {
	return o
}

// The time at which the regional Parameter was created.
func (o ParameterManagerRegionalParameterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o ParameterManagerRegionalParameterOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The format type of the regional parameter. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
func (o ParameterManagerRegionalParameterOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringPtrOutput { return v.Format }).(pulumi.StringPtrOutput)
}

// The labels assigned to this regional Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8
// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values must be between 0 and 63 characters long, have a UTF-8 encoding
// of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more
// than 64 labels can be assigned to a given resource. An object containing a list of "key": value pairs. Example: {
// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o ParameterManagerRegionalParameterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the regional parameter. eg us-central1
func (o ParameterManagerRegionalParameterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the regional Parameter. Format:
// 'projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}'
func (o ParameterManagerRegionalParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// This must be unique within the project.
func (o ParameterManagerRegionalParameterOutput) ParameterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringOutput { return v.ParameterId }).(pulumi.StringOutput)
}

func (o ParameterManagerRegionalParameterOutput) ParameterManagerRegionalParameterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringOutput {
		return v.ParameterManagerRegionalParameterId
	}).(pulumi.StringOutput)
}

// An object containing a unique resource identity tied to the regional parameter.
func (o ParameterManagerRegionalParameterOutput) PolicyMembers() ParameterManagerRegionalParameterPolicyMemberArrayOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) ParameterManagerRegionalParameterPolicyMemberArrayOutput {
		return v.PolicyMembers
	}).(ParameterManagerRegionalParameterPolicyMemberArrayOutput)
}

func (o ParameterManagerRegionalParameterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ParameterManagerRegionalParameterOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ParameterManagerRegionalParameterOutput) Timeouts() ParameterManagerRegionalParameterTimeoutsPtrOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) ParameterManagerRegionalParameterTimeoutsPtrOutput {
		return v.Timeouts
	}).(ParameterManagerRegionalParameterTimeoutsPtrOutput)
}

// The time at which the regional Parameter was updated.
func (o ParameterManagerRegionalParameterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerRegionalParameter) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterManagerRegionalParameterInput)(nil)).Elem(), &ParameterManagerRegionalParameter{})
	pulumi.RegisterOutputType(ParameterManagerRegionalParameterOutput{})
}
