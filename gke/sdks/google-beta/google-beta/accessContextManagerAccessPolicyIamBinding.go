// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessContextManagerAccessPolicyIamBinding struct {
	pulumi.CustomResourceState

	AccessContextManagerAccessPolicyIamBindingId pulumi.StringOutput                                          `pulumi:"accessContextManagerAccessPolicyIamBindingId"`
	Condition                                    AccessContextManagerAccessPolicyIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                                         pulumi.StringOutput                                          `pulumi:"etag"`
	Members                                      pulumi.StringArrayOutput                                     `pulumi:"members"`
	Name                                         pulumi.StringOutput                                          `pulumi:"name"`
	Role                                         pulumi.StringOutput                                          `pulumi:"role"`
}

// NewAccessContextManagerAccessPolicyIamBinding registers a new resource with the given unique name, arguments, and options.
func NewAccessContextManagerAccessPolicyIamBinding(ctx *pulumi.Context,
	name string, args *AccessContextManagerAccessPolicyIamBindingArgs, opts ...pulumi.ResourceOption) (*AccessContextManagerAccessPolicyIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource AccessContextManagerAccessPolicyIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/accessContextManagerAccessPolicyIamBinding:AccessContextManagerAccessPolicyIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessContextManagerAccessPolicyIamBinding gets an existing AccessContextManagerAccessPolicyIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessContextManagerAccessPolicyIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessContextManagerAccessPolicyIamBindingState, opts ...pulumi.ResourceOption) (*AccessContextManagerAccessPolicyIamBinding, error) {
	var resource AccessContextManagerAccessPolicyIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/accessContextManagerAccessPolicyIamBinding:AccessContextManagerAccessPolicyIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessContextManagerAccessPolicyIamBinding resources.
type accessContextManagerAccessPolicyIamBindingState struct {
	AccessContextManagerAccessPolicyIamBindingId *string                                              `pulumi:"accessContextManagerAccessPolicyIamBindingId"`
	Condition                                    *AccessContextManagerAccessPolicyIamBindingCondition `pulumi:"condition"`
	Etag                                         *string                                              `pulumi:"etag"`
	Members                                      []string                                             `pulumi:"members"`
	Name                                         *string                                              `pulumi:"name"`
	Role                                         *string                                              `pulumi:"role"`
}

type AccessContextManagerAccessPolicyIamBindingState struct {
	AccessContextManagerAccessPolicyIamBindingId pulumi.StringPtrInput
	Condition                                    AccessContextManagerAccessPolicyIamBindingConditionPtrInput
	Etag                                         pulumi.StringPtrInput
	Members                                      pulumi.StringArrayInput
	Name                                         pulumi.StringPtrInput
	Role                                         pulumi.StringPtrInput
}

func (AccessContextManagerAccessPolicyIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessContextManagerAccessPolicyIamBindingState)(nil)).Elem()
}

type accessContextManagerAccessPolicyIamBindingArgs struct {
	AccessContextManagerAccessPolicyIamBindingId *string                                              `pulumi:"accessContextManagerAccessPolicyIamBindingId"`
	Condition                                    *AccessContextManagerAccessPolicyIamBindingCondition `pulumi:"condition"`
	Members                                      []string                                             `pulumi:"members"`
	Name                                         *string                                              `pulumi:"name"`
	Role                                         string                                               `pulumi:"role"`
}

// The set of arguments for constructing a AccessContextManagerAccessPolicyIamBinding resource.
type AccessContextManagerAccessPolicyIamBindingArgs struct {
	AccessContextManagerAccessPolicyIamBindingId pulumi.StringPtrInput
	Condition                                    AccessContextManagerAccessPolicyIamBindingConditionPtrInput
	Members                                      pulumi.StringArrayInput
	Name                                         pulumi.StringPtrInput
	Role                                         pulumi.StringInput
}

func (AccessContextManagerAccessPolicyIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessContextManagerAccessPolicyIamBindingArgs)(nil)).Elem()
}

type AccessContextManagerAccessPolicyIamBindingInput interface {
	pulumi.Input

	ToAccessContextManagerAccessPolicyIamBindingOutput() AccessContextManagerAccessPolicyIamBindingOutput
	ToAccessContextManagerAccessPolicyIamBindingOutputWithContext(ctx context.Context) AccessContextManagerAccessPolicyIamBindingOutput
}

func (*AccessContextManagerAccessPolicyIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessContextManagerAccessPolicyIamBinding)(nil)).Elem()
}

func (i *AccessContextManagerAccessPolicyIamBinding) ToAccessContextManagerAccessPolicyIamBindingOutput() AccessContextManagerAccessPolicyIamBindingOutput {
	return i.ToAccessContextManagerAccessPolicyIamBindingOutputWithContext(context.Background())
}

func (i *AccessContextManagerAccessPolicyIamBinding) ToAccessContextManagerAccessPolicyIamBindingOutputWithContext(ctx context.Context) AccessContextManagerAccessPolicyIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessContextManagerAccessPolicyIamBindingOutput)
}

type AccessContextManagerAccessPolicyIamBindingOutput struct{ *pulumi.OutputState }

func (AccessContextManagerAccessPolicyIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessContextManagerAccessPolicyIamBinding)(nil)).Elem()
}

func (o AccessContextManagerAccessPolicyIamBindingOutput) ToAccessContextManagerAccessPolicyIamBindingOutput() AccessContextManagerAccessPolicyIamBindingOutput {
	return o
}

func (o AccessContextManagerAccessPolicyIamBindingOutput) ToAccessContextManagerAccessPolicyIamBindingOutputWithContext(ctx context.Context) AccessContextManagerAccessPolicyIamBindingOutput {
	return o
}

func (o AccessContextManagerAccessPolicyIamBindingOutput) AccessContextManagerAccessPolicyIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicyIamBinding) pulumi.StringOutput {
		return v.AccessContextManagerAccessPolicyIamBindingId
	}).(pulumi.StringOutput)
}

func (o AccessContextManagerAccessPolicyIamBindingOutput) Condition() AccessContextManagerAccessPolicyIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicyIamBinding) AccessContextManagerAccessPolicyIamBindingConditionPtrOutput {
		return v.Condition
	}).(AccessContextManagerAccessPolicyIamBindingConditionPtrOutput)
}

func (o AccessContextManagerAccessPolicyIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicyIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o AccessContextManagerAccessPolicyIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicyIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o AccessContextManagerAccessPolicyIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicyIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AccessContextManagerAccessPolicyIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicyIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessContextManagerAccessPolicyIamBindingInput)(nil)).Elem(), &AccessContextManagerAccessPolicyIamBinding{})
	pulumi.RegisterOutputType(AccessContextManagerAccessPolicyIamBindingOutput{})
}
