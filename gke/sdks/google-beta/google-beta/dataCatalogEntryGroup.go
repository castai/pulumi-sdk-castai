// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataCatalogEntryGroup struct {
	pulumi.CustomResourceState

	DataCatalogEntryGroupId pulumi.StringOutput `pulumi:"dataCatalogEntryGroupId"`
	// Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A short name to identify the entry group, for example, "analytics data - jan 2011".
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters,
	// numbers and underscores, and be at most 64 characters.
	EntryGroupId pulumi.StringOutput `pulumi:"entryGroupId"`
	// The resource name of the entry group in URL format. Example:
	// projects/{project}/locations/{location}/entryGroups/{entryGroupId}
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// EntryGroup location region.
	Region   pulumi.StringOutput                    `pulumi:"region"`
	Timeouts DataCatalogEntryGroupTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDataCatalogEntryGroup registers a new resource with the given unique name, arguments, and options.
func NewDataCatalogEntryGroup(ctx *pulumi.Context,
	name string, args *DataCatalogEntryGroupArgs, opts ...pulumi.ResourceOption) (*DataCatalogEntryGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntryGroupId == nil {
		return nil, errors.New("invalid value for required argument 'EntryGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataCatalogEntryGroup
	err = ctx.RegisterPackageResource("google-beta:index/dataCatalogEntryGroup:DataCatalogEntryGroup", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataCatalogEntryGroup gets an existing DataCatalogEntryGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataCatalogEntryGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataCatalogEntryGroupState, opts ...pulumi.ResourceOption) (*DataCatalogEntryGroup, error) {
	var resource DataCatalogEntryGroup
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataCatalogEntryGroup:DataCatalogEntryGroup", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataCatalogEntryGroup resources.
type dataCatalogEntryGroupState struct {
	DataCatalogEntryGroupId *string `pulumi:"dataCatalogEntryGroupId"`
	// Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
	Description *string `pulumi:"description"`
	// A short name to identify the entry group, for example, "analytics data - jan 2011".
	DisplayName *string `pulumi:"displayName"`
	// The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters,
	// numbers and underscores, and be at most 64 characters.
	EntryGroupId *string `pulumi:"entryGroupId"`
	// The resource name of the entry group in URL format. Example:
	// projects/{project}/locations/{location}/entryGroups/{entryGroupId}
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// EntryGroup location region.
	Region   *string                        `pulumi:"region"`
	Timeouts *DataCatalogEntryGroupTimeouts `pulumi:"timeouts"`
}

type DataCatalogEntryGroupState struct {
	DataCatalogEntryGroupId pulumi.StringPtrInput
	// Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
	Description pulumi.StringPtrInput
	// A short name to identify the entry group, for example, "analytics data - jan 2011".
	DisplayName pulumi.StringPtrInput
	// The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters,
	// numbers and underscores, and be at most 64 characters.
	EntryGroupId pulumi.StringPtrInput
	// The resource name of the entry group in URL format. Example:
	// projects/{project}/locations/{location}/entryGroups/{entryGroupId}
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// EntryGroup location region.
	Region   pulumi.StringPtrInput
	Timeouts DataCatalogEntryGroupTimeoutsPtrInput
}

func (DataCatalogEntryGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogEntryGroupState)(nil)).Elem()
}

type dataCatalogEntryGroupArgs struct {
	DataCatalogEntryGroupId *string `pulumi:"dataCatalogEntryGroupId"`
	// Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
	Description *string `pulumi:"description"`
	// A short name to identify the entry group, for example, "analytics data - jan 2011".
	DisplayName *string `pulumi:"displayName"`
	// The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters,
	// numbers and underscores, and be at most 64 characters.
	EntryGroupId string  `pulumi:"entryGroupId"`
	Project      *string `pulumi:"project"`
	// EntryGroup location region.
	Region   *string                        `pulumi:"region"`
	Timeouts *DataCatalogEntryGroupTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DataCatalogEntryGroup resource.
type DataCatalogEntryGroupArgs struct {
	DataCatalogEntryGroupId pulumi.StringPtrInput
	// Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
	Description pulumi.StringPtrInput
	// A short name to identify the entry group, for example, "analytics data - jan 2011".
	DisplayName pulumi.StringPtrInput
	// The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters,
	// numbers and underscores, and be at most 64 characters.
	EntryGroupId pulumi.StringInput
	Project      pulumi.StringPtrInput
	// EntryGroup location region.
	Region   pulumi.StringPtrInput
	Timeouts DataCatalogEntryGroupTimeoutsPtrInput
}

func (DataCatalogEntryGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogEntryGroupArgs)(nil)).Elem()
}

type DataCatalogEntryGroupInput interface {
	pulumi.Input

	ToDataCatalogEntryGroupOutput() DataCatalogEntryGroupOutput
	ToDataCatalogEntryGroupOutputWithContext(ctx context.Context) DataCatalogEntryGroupOutput
}

func (*DataCatalogEntryGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogEntryGroup)(nil)).Elem()
}

func (i *DataCatalogEntryGroup) ToDataCatalogEntryGroupOutput() DataCatalogEntryGroupOutput {
	return i.ToDataCatalogEntryGroupOutputWithContext(context.Background())
}

func (i *DataCatalogEntryGroup) ToDataCatalogEntryGroupOutputWithContext(ctx context.Context) DataCatalogEntryGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogEntryGroupOutput)
}

type DataCatalogEntryGroupOutput struct{ *pulumi.OutputState }

func (DataCatalogEntryGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogEntryGroup)(nil)).Elem()
}

func (o DataCatalogEntryGroupOutput) ToDataCatalogEntryGroupOutput() DataCatalogEntryGroupOutput {
	return o
}

func (o DataCatalogEntryGroupOutput) ToDataCatalogEntryGroupOutputWithContext(ctx context.Context) DataCatalogEntryGroupOutput {
	return o
}

func (o DataCatalogEntryGroupOutput) DataCatalogEntryGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroup) pulumi.StringOutput { return v.DataCatalogEntryGroupId }).(pulumi.StringOutput)
}

// Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
func (o DataCatalogEntryGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A short name to identify the entry group, for example, "analytics data - jan 2011".
func (o DataCatalogEntryGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroup) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters,
// numbers and underscores, and be at most 64 characters.
func (o DataCatalogEntryGroupOutput) EntryGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroup) pulumi.StringOutput { return v.EntryGroupId }).(pulumi.StringOutput)
}

// The resource name of the entry group in URL format. Example:
// projects/{project}/locations/{location}/entryGroups/{entryGroupId}
func (o DataCatalogEntryGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DataCatalogEntryGroupOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroup) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// EntryGroup location region.
func (o DataCatalogEntryGroupOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroup) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DataCatalogEntryGroupOutput) Timeouts() DataCatalogEntryGroupTimeoutsPtrOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroup) DataCatalogEntryGroupTimeoutsPtrOutput { return v.Timeouts }).(DataCatalogEntryGroupTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataCatalogEntryGroupInput)(nil)).Elem(), &DataCatalogEntryGroup{})
	pulumi.RegisterOutputType(DataCatalogEntryGroupOutput{})
}
