// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexTaskIamBinding struct {
	pulumi.CustomResourceState

	Condition                DataplexTaskIamBindingConditionPtrOutput `pulumi:"condition"`
	DataplexTaskIamBindingId pulumi.StringOutput                      `pulumi:"dataplexTaskIamBindingId"`
	Etag                     pulumi.StringOutput                      `pulumi:"etag"`
	Lake                     pulumi.StringOutput                      `pulumi:"lake"`
	Location                 pulumi.StringOutput                      `pulumi:"location"`
	Members                  pulumi.StringArrayOutput                 `pulumi:"members"`
	Project                  pulumi.StringOutput                      `pulumi:"project"`
	Role                     pulumi.StringOutput                      `pulumi:"role"`
	TaskId                   pulumi.StringOutput                      `pulumi:"taskId"`
}

// NewDataplexTaskIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDataplexTaskIamBinding(ctx *pulumi.Context,
	name string, args *DataplexTaskIamBindingArgs, opts ...pulumi.ResourceOption) (*DataplexTaskIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Lake == nil {
		return nil, errors.New("invalid value for required argument 'Lake'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.TaskId == nil {
		return nil, errors.New("invalid value for required argument 'TaskId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexTaskIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/dataplexTaskIamBinding:DataplexTaskIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexTaskIamBinding gets an existing DataplexTaskIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexTaskIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexTaskIamBindingState, opts ...pulumi.ResourceOption) (*DataplexTaskIamBinding, error) {
	var resource DataplexTaskIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataplexTaskIamBinding:DataplexTaskIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexTaskIamBinding resources.
type dataplexTaskIamBindingState struct {
	Condition                *DataplexTaskIamBindingCondition `pulumi:"condition"`
	DataplexTaskIamBindingId *string                          `pulumi:"dataplexTaskIamBindingId"`
	Etag                     *string                          `pulumi:"etag"`
	Lake                     *string                          `pulumi:"lake"`
	Location                 *string                          `pulumi:"location"`
	Members                  []string                         `pulumi:"members"`
	Project                  *string                          `pulumi:"project"`
	Role                     *string                          `pulumi:"role"`
	TaskId                   *string                          `pulumi:"taskId"`
}

type DataplexTaskIamBindingState struct {
	Condition                DataplexTaskIamBindingConditionPtrInput
	DataplexTaskIamBindingId pulumi.StringPtrInput
	Etag                     pulumi.StringPtrInput
	Lake                     pulumi.StringPtrInput
	Location                 pulumi.StringPtrInput
	Members                  pulumi.StringArrayInput
	Project                  pulumi.StringPtrInput
	Role                     pulumi.StringPtrInput
	TaskId                   pulumi.StringPtrInput
}

func (DataplexTaskIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexTaskIamBindingState)(nil)).Elem()
}

type dataplexTaskIamBindingArgs struct {
	Condition                *DataplexTaskIamBindingCondition `pulumi:"condition"`
	DataplexTaskIamBindingId *string                          `pulumi:"dataplexTaskIamBindingId"`
	Lake                     string                           `pulumi:"lake"`
	Location                 *string                          `pulumi:"location"`
	Members                  []string                         `pulumi:"members"`
	Project                  *string                          `pulumi:"project"`
	Role                     string                           `pulumi:"role"`
	TaskId                   string                           `pulumi:"taskId"`
}

// The set of arguments for constructing a DataplexTaskIamBinding resource.
type DataplexTaskIamBindingArgs struct {
	Condition                DataplexTaskIamBindingConditionPtrInput
	DataplexTaskIamBindingId pulumi.StringPtrInput
	Lake                     pulumi.StringInput
	Location                 pulumi.StringPtrInput
	Members                  pulumi.StringArrayInput
	Project                  pulumi.StringPtrInput
	Role                     pulumi.StringInput
	TaskId                   pulumi.StringInput
}

func (DataplexTaskIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexTaskIamBindingArgs)(nil)).Elem()
}

type DataplexTaskIamBindingInput interface {
	pulumi.Input

	ToDataplexTaskIamBindingOutput() DataplexTaskIamBindingOutput
	ToDataplexTaskIamBindingOutputWithContext(ctx context.Context) DataplexTaskIamBindingOutput
}

func (*DataplexTaskIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexTaskIamBinding)(nil)).Elem()
}

func (i *DataplexTaskIamBinding) ToDataplexTaskIamBindingOutput() DataplexTaskIamBindingOutput {
	return i.ToDataplexTaskIamBindingOutputWithContext(context.Background())
}

func (i *DataplexTaskIamBinding) ToDataplexTaskIamBindingOutputWithContext(ctx context.Context) DataplexTaskIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexTaskIamBindingOutput)
}

type DataplexTaskIamBindingOutput struct{ *pulumi.OutputState }

func (DataplexTaskIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexTaskIamBinding)(nil)).Elem()
}

func (o DataplexTaskIamBindingOutput) ToDataplexTaskIamBindingOutput() DataplexTaskIamBindingOutput {
	return o
}

func (o DataplexTaskIamBindingOutput) ToDataplexTaskIamBindingOutputWithContext(ctx context.Context) DataplexTaskIamBindingOutput {
	return o
}

func (o DataplexTaskIamBindingOutput) Condition() DataplexTaskIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DataplexTaskIamBinding) DataplexTaskIamBindingConditionPtrOutput { return v.Condition }).(DataplexTaskIamBindingConditionPtrOutput)
}

func (o DataplexTaskIamBindingOutput) DataplexTaskIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamBinding) pulumi.StringOutput { return v.DataplexTaskIamBindingId }).(pulumi.StringOutput)
}

func (o DataplexTaskIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexTaskIamBindingOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamBinding) pulumi.StringOutput { return v.Lake }).(pulumi.StringOutput)
}

func (o DataplexTaskIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexTaskIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataplexTaskIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DataplexTaskIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataplexTaskIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o DataplexTaskIamBindingOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexTaskIamBinding) pulumi.StringOutput { return v.TaskId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexTaskIamBindingInput)(nil)).Elem(), &DataplexTaskIamBinding{})
	pulumi.RegisterOutputType(DataplexTaskIamBindingOutput{})
}
