// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoggingOrganizationSink struct {
	pulumi.CustomResourceState

	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions LoggingOrganizationSinkBigqueryOptionsPtrOutput `pulumi:"bigqueryOptions"`
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination pulumi.StringOutput `pulumi:"destination"`
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions LoggingOrganizationSinkExclusionArrayOutput `pulumi:"exclusions"`
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter pulumi.StringPtrOutput `pulumi:"filter"`
	// Whether or not to include children organizations in the sink export. If true, logs associated with child projects are
	// also exported; otherwise only logs relating to the provided organization are included.
	IncludeChildren pulumi.BoolPtrOutput `pulumi:"includeChildren"`
	// Whether or not to intercept logs from child projects. If true, matching logs will not match with sinks in child
	// resources, except _Required sinks. This sink will be visible to child resources when listing sinks.
	InterceptChildren         pulumi.BoolPtrOutput `pulumi:"interceptChildren"`
	LoggingOrganizationSinkId pulumi.StringOutput  `pulumi:"loggingOrganizationSinkId"`
	// The name of the logging sink.
	Name pulumi.StringOutput `pulumi:"name"`
	// The numeric ID of the organization to be exported to the sink.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// The identity associated with this sink. This identity must be granted write access to the configured destination.
	WriterIdentity pulumi.StringOutput `pulumi:"writerIdentity"`
}

// NewLoggingOrganizationSink registers a new resource with the given unique name, arguments, and options.
func NewLoggingOrganizationSink(ctx *pulumi.Context,
	name string, args *LoggingOrganizationSinkArgs, opts ...pulumi.ResourceOption) (*LoggingOrganizationSink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource LoggingOrganizationSink
	err = ctx.RegisterPackageResource("google-beta:index/loggingOrganizationSink:LoggingOrganizationSink", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingOrganizationSink gets an existing LoggingOrganizationSink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingOrganizationSink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingOrganizationSinkState, opts ...pulumi.ResourceOption) (*LoggingOrganizationSink, error) {
	var resource LoggingOrganizationSink
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/loggingOrganizationSink:LoggingOrganizationSink", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingOrganizationSink resources.
type loggingOrganizationSinkState struct {
	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions *LoggingOrganizationSinkBigqueryOptions `pulumi:"bigqueryOptions"`
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description *string `pulumi:"description"`
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination *string `pulumi:"destination"`
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled *bool `pulumi:"disabled"`
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions []LoggingOrganizationSinkExclusion `pulumi:"exclusions"`
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter *string `pulumi:"filter"`
	// Whether or not to include children organizations in the sink export. If true, logs associated with child projects are
	// also exported; otherwise only logs relating to the provided organization are included.
	IncludeChildren *bool `pulumi:"includeChildren"`
	// Whether or not to intercept logs from child projects. If true, matching logs will not match with sinks in child
	// resources, except _Required sinks. This sink will be visible to child resources when listing sinks.
	InterceptChildren         *bool   `pulumi:"interceptChildren"`
	LoggingOrganizationSinkId *string `pulumi:"loggingOrganizationSinkId"`
	// The name of the logging sink.
	Name *string `pulumi:"name"`
	// The numeric ID of the organization to be exported to the sink.
	OrgId *string `pulumi:"orgId"`
	// The identity associated with this sink. This identity must be granted write access to the configured destination.
	WriterIdentity *string `pulumi:"writerIdentity"`
}

type LoggingOrganizationSinkState struct {
	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions LoggingOrganizationSinkBigqueryOptionsPtrInput
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description pulumi.StringPtrInput
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination pulumi.StringPtrInput
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled pulumi.BoolPtrInput
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions LoggingOrganizationSinkExclusionArrayInput
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter pulumi.StringPtrInput
	// Whether or not to include children organizations in the sink export. If true, logs associated with child projects are
	// also exported; otherwise only logs relating to the provided organization are included.
	IncludeChildren pulumi.BoolPtrInput
	// Whether or not to intercept logs from child projects. If true, matching logs will not match with sinks in child
	// resources, except _Required sinks. This sink will be visible to child resources when listing sinks.
	InterceptChildren         pulumi.BoolPtrInput
	LoggingOrganizationSinkId pulumi.StringPtrInput
	// The name of the logging sink.
	Name pulumi.StringPtrInput
	// The numeric ID of the organization to be exported to the sink.
	OrgId pulumi.StringPtrInput
	// The identity associated with this sink. This identity must be granted write access to the configured destination.
	WriterIdentity pulumi.StringPtrInput
}

func (LoggingOrganizationSinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingOrganizationSinkState)(nil)).Elem()
}

type loggingOrganizationSinkArgs struct {
	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions *LoggingOrganizationSinkBigqueryOptions `pulumi:"bigqueryOptions"`
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description *string `pulumi:"description"`
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination string `pulumi:"destination"`
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled *bool `pulumi:"disabled"`
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions []LoggingOrganizationSinkExclusion `pulumi:"exclusions"`
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter *string `pulumi:"filter"`
	// Whether or not to include children organizations in the sink export. If true, logs associated with child projects are
	// also exported; otherwise only logs relating to the provided organization are included.
	IncludeChildren *bool `pulumi:"includeChildren"`
	// Whether or not to intercept logs from child projects. If true, matching logs will not match with sinks in child
	// resources, except _Required sinks. This sink will be visible to child resources when listing sinks.
	InterceptChildren         *bool   `pulumi:"interceptChildren"`
	LoggingOrganizationSinkId *string `pulumi:"loggingOrganizationSinkId"`
	// The name of the logging sink.
	Name *string `pulumi:"name"`
	// The numeric ID of the organization to be exported to the sink.
	OrgId string `pulumi:"orgId"`
}

// The set of arguments for constructing a LoggingOrganizationSink resource.
type LoggingOrganizationSinkArgs struct {
	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions LoggingOrganizationSinkBigqueryOptionsPtrInput
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description pulumi.StringPtrInput
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination pulumi.StringInput
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled pulumi.BoolPtrInput
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions LoggingOrganizationSinkExclusionArrayInput
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter pulumi.StringPtrInput
	// Whether or not to include children organizations in the sink export. If true, logs associated with child projects are
	// also exported; otherwise only logs relating to the provided organization are included.
	IncludeChildren pulumi.BoolPtrInput
	// Whether or not to intercept logs from child projects. If true, matching logs will not match with sinks in child
	// resources, except _Required sinks. This sink will be visible to child resources when listing sinks.
	InterceptChildren         pulumi.BoolPtrInput
	LoggingOrganizationSinkId pulumi.StringPtrInput
	// The name of the logging sink.
	Name pulumi.StringPtrInput
	// The numeric ID of the organization to be exported to the sink.
	OrgId pulumi.StringInput
}

func (LoggingOrganizationSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingOrganizationSinkArgs)(nil)).Elem()
}

type LoggingOrganizationSinkInput interface {
	pulumi.Input

	ToLoggingOrganizationSinkOutput() LoggingOrganizationSinkOutput
	ToLoggingOrganizationSinkOutputWithContext(ctx context.Context) LoggingOrganizationSinkOutput
}

func (*LoggingOrganizationSink) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingOrganizationSink)(nil)).Elem()
}

func (i *LoggingOrganizationSink) ToLoggingOrganizationSinkOutput() LoggingOrganizationSinkOutput {
	return i.ToLoggingOrganizationSinkOutputWithContext(context.Background())
}

func (i *LoggingOrganizationSink) ToLoggingOrganizationSinkOutputWithContext(ctx context.Context) LoggingOrganizationSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingOrganizationSinkOutput)
}

type LoggingOrganizationSinkOutput struct{ *pulumi.OutputState }

func (LoggingOrganizationSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingOrganizationSink)(nil)).Elem()
}

func (o LoggingOrganizationSinkOutput) ToLoggingOrganizationSinkOutput() LoggingOrganizationSinkOutput {
	return o
}

func (o LoggingOrganizationSinkOutput) ToLoggingOrganizationSinkOutputWithContext(ctx context.Context) LoggingOrganizationSinkOutput {
	return o
}

// Options that affect sinks exporting data to BigQuery.
func (o LoggingOrganizationSinkOutput) BigqueryOptions() LoggingOrganizationSinkBigqueryOptionsPtrOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) LoggingOrganizationSinkBigqueryOptionsPtrOutput {
		return v.BigqueryOptions
	}).(LoggingOrganizationSinkBigqueryOptionsPtrOutput)
}

// A description of this sink. The maximum length of the description is 8000 characters.
func (o LoggingOrganizationSinkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
// write to the above resource.
func (o LoggingOrganizationSinkOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

// If set to True, then this sink is disabled and it does not export any log entries.
func (o LoggingOrganizationSinkOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
// one of exclusion's filters, it will not be exported.
func (o LoggingOrganizationSinkOutput) Exclusions() LoggingOrganizationSinkExclusionArrayOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) LoggingOrganizationSinkExclusionArrayOutput { return v.Exclusions }).(LoggingOrganizationSinkExclusionArrayOutput)
}

// The filter to apply when exporting logs. Only log entries that match the filter are exported.
func (o LoggingOrganizationSinkOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.StringPtrOutput { return v.Filter }).(pulumi.StringPtrOutput)
}

// Whether or not to include children organizations in the sink export. If true, logs associated with child projects are
// also exported; otherwise only logs relating to the provided organization are included.
func (o LoggingOrganizationSinkOutput) IncludeChildren() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.BoolPtrOutput { return v.IncludeChildren }).(pulumi.BoolPtrOutput)
}

// Whether or not to intercept logs from child projects. If true, matching logs will not match with sinks in child
// resources, except _Required sinks. This sink will be visible to child resources when listing sinks.
func (o LoggingOrganizationSinkOutput) InterceptChildren() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.BoolPtrOutput { return v.InterceptChildren }).(pulumi.BoolPtrOutput)
}

func (o LoggingOrganizationSinkOutput) LoggingOrganizationSinkId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.StringOutput { return v.LoggingOrganizationSinkId }).(pulumi.StringOutput)
}

// The name of the logging sink.
func (o LoggingOrganizationSinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The numeric ID of the organization to be exported to the sink.
func (o LoggingOrganizationSinkOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// The identity associated with this sink. This identity must be granted write access to the configured destination.
func (o LoggingOrganizationSinkOutput) WriterIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingOrganizationSink) pulumi.StringOutput { return v.WriterIdentity }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingOrganizationSinkInput)(nil)).Elem(), &LoggingOrganizationSink{})
	pulumi.RegisterOutputType(LoggingOrganizationSinkOutput{})
}
