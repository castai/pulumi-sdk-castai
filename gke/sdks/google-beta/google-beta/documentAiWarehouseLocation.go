// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DocumentAiWarehouseLocation struct {
	pulumi.CustomResourceState

	// The access control mode for accessing the customer data. Possible values: ["ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI",
	// "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID", "ACL_MODE_UNIVERSAL_ACCESS"]
	AccessControlMode pulumi.StringOutput `pulumi:"accessControlMode"`
	// The type of database used to store customer data. Possible values: ["DB_INFRA_SPANNER", "DB_CLOUD_SQL_POSTGRES"]
	DatabaseType                  pulumi.StringOutput `pulumi:"databaseType"`
	DocumentAiWarehouseLocationId pulumi.StringOutput `pulumi:"documentAiWarehouseLocationId"`
	// The default role for the person who create a document. Possible values: ["DOCUMENT_ADMIN", "DOCUMENT_EDITOR",
	// "DOCUMENT_VIEWER"]
	DocumentCreatorDefaultRole pulumi.StringPtrOutput `pulumi:"documentCreatorDefaultRole"`
	// The KMS key used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same
	// key will be used for all provisioned resources, if encryption is available. If the kmsKey is left empty, no encryption
	// will be enforced.
	KmsKey pulumi.StringPtrOutput `pulumi:"kmsKey"`
	// The location in which the instance is to be provisioned. It takes the form
	// projects/{projectNumber}/locations/{location}.
	Location pulumi.StringOutput `pulumi:"location"`
	// The unique identifier of the project.
	ProjectNumber pulumi.StringOutput                          `pulumi:"projectNumber"`
	Timeouts      DocumentAiWarehouseLocationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDocumentAiWarehouseLocation registers a new resource with the given unique name, arguments, and options.
func NewDocumentAiWarehouseLocation(ctx *pulumi.Context,
	name string, args *DocumentAiWarehouseLocationArgs, opts ...pulumi.ResourceOption) (*DocumentAiWarehouseLocation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessControlMode == nil {
		return nil, errors.New("invalid value for required argument 'AccessControlMode'")
	}
	if args.DatabaseType == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseType'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.ProjectNumber == nil {
		return nil, errors.New("invalid value for required argument 'ProjectNumber'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DocumentAiWarehouseLocation
	err = ctx.RegisterPackageResource("google-beta:index/documentAiWarehouseLocation:DocumentAiWarehouseLocation", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDocumentAiWarehouseLocation gets an existing DocumentAiWarehouseLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDocumentAiWarehouseLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DocumentAiWarehouseLocationState, opts ...pulumi.ResourceOption) (*DocumentAiWarehouseLocation, error) {
	var resource DocumentAiWarehouseLocation
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/documentAiWarehouseLocation:DocumentAiWarehouseLocation", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DocumentAiWarehouseLocation resources.
type documentAiWarehouseLocationState struct {
	// The access control mode for accessing the customer data. Possible values: ["ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI",
	// "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID", "ACL_MODE_UNIVERSAL_ACCESS"]
	AccessControlMode *string `pulumi:"accessControlMode"`
	// The type of database used to store customer data. Possible values: ["DB_INFRA_SPANNER", "DB_CLOUD_SQL_POSTGRES"]
	DatabaseType                  *string `pulumi:"databaseType"`
	DocumentAiWarehouseLocationId *string `pulumi:"documentAiWarehouseLocationId"`
	// The default role for the person who create a document. Possible values: ["DOCUMENT_ADMIN", "DOCUMENT_EDITOR",
	// "DOCUMENT_VIEWER"]
	DocumentCreatorDefaultRole *string `pulumi:"documentCreatorDefaultRole"`
	// The KMS key used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same
	// key will be used for all provisioned resources, if encryption is available. If the kmsKey is left empty, no encryption
	// will be enforced.
	KmsKey *string `pulumi:"kmsKey"`
	// The location in which the instance is to be provisioned. It takes the form
	// projects/{projectNumber}/locations/{location}.
	Location *string `pulumi:"location"`
	// The unique identifier of the project.
	ProjectNumber *string                              `pulumi:"projectNumber"`
	Timeouts      *DocumentAiWarehouseLocationTimeouts `pulumi:"timeouts"`
}

type DocumentAiWarehouseLocationState struct {
	// The access control mode for accessing the customer data. Possible values: ["ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI",
	// "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID", "ACL_MODE_UNIVERSAL_ACCESS"]
	AccessControlMode pulumi.StringPtrInput
	// The type of database used to store customer data. Possible values: ["DB_INFRA_SPANNER", "DB_CLOUD_SQL_POSTGRES"]
	DatabaseType                  pulumi.StringPtrInput
	DocumentAiWarehouseLocationId pulumi.StringPtrInput
	// The default role for the person who create a document. Possible values: ["DOCUMENT_ADMIN", "DOCUMENT_EDITOR",
	// "DOCUMENT_VIEWER"]
	DocumentCreatorDefaultRole pulumi.StringPtrInput
	// The KMS key used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same
	// key will be used for all provisioned resources, if encryption is available. If the kmsKey is left empty, no encryption
	// will be enforced.
	KmsKey pulumi.StringPtrInput
	// The location in which the instance is to be provisioned. It takes the form
	// projects/{projectNumber}/locations/{location}.
	Location pulumi.StringPtrInput
	// The unique identifier of the project.
	ProjectNumber pulumi.StringPtrInput
	Timeouts      DocumentAiWarehouseLocationTimeoutsPtrInput
}

func (DocumentAiWarehouseLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*documentAiWarehouseLocationState)(nil)).Elem()
}

type documentAiWarehouseLocationArgs struct {
	// The access control mode for accessing the customer data. Possible values: ["ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI",
	// "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID", "ACL_MODE_UNIVERSAL_ACCESS"]
	AccessControlMode string `pulumi:"accessControlMode"`
	// The type of database used to store customer data. Possible values: ["DB_INFRA_SPANNER", "DB_CLOUD_SQL_POSTGRES"]
	DatabaseType                  string  `pulumi:"databaseType"`
	DocumentAiWarehouseLocationId *string `pulumi:"documentAiWarehouseLocationId"`
	// The default role for the person who create a document. Possible values: ["DOCUMENT_ADMIN", "DOCUMENT_EDITOR",
	// "DOCUMENT_VIEWER"]
	DocumentCreatorDefaultRole *string `pulumi:"documentCreatorDefaultRole"`
	// The KMS key used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same
	// key will be used for all provisioned resources, if encryption is available. If the kmsKey is left empty, no encryption
	// will be enforced.
	KmsKey *string `pulumi:"kmsKey"`
	// The location in which the instance is to be provisioned. It takes the form
	// projects/{projectNumber}/locations/{location}.
	Location string `pulumi:"location"`
	// The unique identifier of the project.
	ProjectNumber string                               `pulumi:"projectNumber"`
	Timeouts      *DocumentAiWarehouseLocationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DocumentAiWarehouseLocation resource.
type DocumentAiWarehouseLocationArgs struct {
	// The access control mode for accessing the customer data. Possible values: ["ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI",
	// "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID", "ACL_MODE_UNIVERSAL_ACCESS"]
	AccessControlMode pulumi.StringInput
	// The type of database used to store customer data. Possible values: ["DB_INFRA_SPANNER", "DB_CLOUD_SQL_POSTGRES"]
	DatabaseType                  pulumi.StringInput
	DocumentAiWarehouseLocationId pulumi.StringPtrInput
	// The default role for the person who create a document. Possible values: ["DOCUMENT_ADMIN", "DOCUMENT_EDITOR",
	// "DOCUMENT_VIEWER"]
	DocumentCreatorDefaultRole pulumi.StringPtrInput
	// The KMS key used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same
	// key will be used for all provisioned resources, if encryption is available. If the kmsKey is left empty, no encryption
	// will be enforced.
	KmsKey pulumi.StringPtrInput
	// The location in which the instance is to be provisioned. It takes the form
	// projects/{projectNumber}/locations/{location}.
	Location pulumi.StringInput
	// The unique identifier of the project.
	ProjectNumber pulumi.StringInput
	Timeouts      DocumentAiWarehouseLocationTimeoutsPtrInput
}

func (DocumentAiWarehouseLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*documentAiWarehouseLocationArgs)(nil)).Elem()
}

type DocumentAiWarehouseLocationInput interface {
	pulumi.Input

	ToDocumentAiWarehouseLocationOutput() DocumentAiWarehouseLocationOutput
	ToDocumentAiWarehouseLocationOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationOutput
}

func (*DocumentAiWarehouseLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentAiWarehouseLocation)(nil)).Elem()
}

func (i *DocumentAiWarehouseLocation) ToDocumentAiWarehouseLocationOutput() DocumentAiWarehouseLocationOutput {
	return i.ToDocumentAiWarehouseLocationOutputWithContext(context.Background())
}

func (i *DocumentAiWarehouseLocation) ToDocumentAiWarehouseLocationOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentAiWarehouseLocationOutput)
}

type DocumentAiWarehouseLocationOutput struct{ *pulumi.OutputState }

func (DocumentAiWarehouseLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DocumentAiWarehouseLocation)(nil)).Elem()
}

func (o DocumentAiWarehouseLocationOutput) ToDocumentAiWarehouseLocationOutput() DocumentAiWarehouseLocationOutput {
	return o
}

func (o DocumentAiWarehouseLocationOutput) ToDocumentAiWarehouseLocationOutputWithContext(ctx context.Context) DocumentAiWarehouseLocationOutput {
	return o
}

// The access control mode for accessing the customer data. Possible values: ["ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI",
// "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID", "ACL_MODE_UNIVERSAL_ACCESS"]
func (o DocumentAiWarehouseLocationOutput) AccessControlMode() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringOutput { return v.AccessControlMode }).(pulumi.StringOutput)
}

// The type of database used to store customer data. Possible values: ["DB_INFRA_SPANNER", "DB_CLOUD_SQL_POSTGRES"]
func (o DocumentAiWarehouseLocationOutput) DatabaseType() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringOutput { return v.DatabaseType }).(pulumi.StringOutput)
}

func (o DocumentAiWarehouseLocationOutput) DocumentAiWarehouseLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringOutput { return v.DocumentAiWarehouseLocationId }).(pulumi.StringOutput)
}

// The default role for the person who create a document. Possible values: ["DOCUMENT_ADMIN", "DOCUMENT_EDITOR",
// "DOCUMENT_VIEWER"]
func (o DocumentAiWarehouseLocationOutput) DocumentCreatorDefaultRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringPtrOutput { return v.DocumentCreatorDefaultRole }).(pulumi.StringPtrOutput)
}

// The KMS key used for CMEK encryption. It is required that the kms key is in the same region as the endpoint. The same
// key will be used for all provisioned resources, if encryption is available. If the kmsKey is left empty, no encryption
// will be enforced.
func (o DocumentAiWarehouseLocationOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringPtrOutput { return v.KmsKey }).(pulumi.StringPtrOutput)
}

// The location in which the instance is to be provisioned. It takes the form
// projects/{projectNumber}/locations/{location}.
func (o DocumentAiWarehouseLocationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The unique identifier of the project.
func (o DocumentAiWarehouseLocationOutput) ProjectNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) pulumi.StringOutput { return v.ProjectNumber }).(pulumi.StringOutput)
}

func (o DocumentAiWarehouseLocationOutput) Timeouts() DocumentAiWarehouseLocationTimeoutsPtrOutput {
	return o.ApplyT(func(v *DocumentAiWarehouseLocation) DocumentAiWarehouseLocationTimeoutsPtrOutput { return v.Timeouts }).(DocumentAiWarehouseLocationTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DocumentAiWarehouseLocationInput)(nil)).Elem(), &DocumentAiWarehouseLocation{})
	pulumi.RegisterOutputType(DocumentAiWarehouseLocationOutput{})
}
