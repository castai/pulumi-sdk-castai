// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceDirectoryNamespace struct {
	pulumi.CustomResourceState

	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Resource labels associated with this Namespace. No more than 64 user labels can be associated with a given resource.
	// Label keys and values can be no longer than 63 characters. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location for the Namespace. A full list of valid locations can be found by running 'gcloud beta service-directory
	// locations list'.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name for the namespace in the format 'projects/*/locations/*/namespaces/*'.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	NamespaceId                 pulumi.StringOutput `pulumi:"namespaceId"`
	Project                     pulumi.StringOutput `pulumi:"project"`
	ServiceDirectoryNamespaceId pulumi.StringOutput `pulumi:"serviceDirectoryNamespaceId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                     `pulumi:"terraformLabels"`
	Timeouts        ServiceDirectoryNamespaceTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewServiceDirectoryNamespace registers a new resource with the given unique name, arguments, and options.
func NewServiceDirectoryNamespace(ctx *pulumi.Context,
	name string, args *ServiceDirectoryNamespaceArgs, opts ...pulumi.ResourceOption) (*ServiceDirectoryNamespace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.NamespaceId == nil {
		return nil, errors.New("invalid value for required argument 'NamespaceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceDirectoryNamespace
	err = ctx.RegisterPackageResource("google-beta:index/serviceDirectoryNamespace:ServiceDirectoryNamespace", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceDirectoryNamespace gets an existing ServiceDirectoryNamespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceDirectoryNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceDirectoryNamespaceState, opts ...pulumi.ResourceOption) (*ServiceDirectoryNamespace, error) {
	var resource ServiceDirectoryNamespace
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/serviceDirectoryNamespace:ServiceDirectoryNamespace", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceDirectoryNamespace resources.
type serviceDirectoryNamespaceState struct {
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Resource labels associated with this Namespace. No more than 64 user labels can be associated with a given resource.
	// Label keys and values can be no longer than 63 characters. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the Namespace. A full list of valid locations can be found by running 'gcloud beta service-directory
	// locations list'.
	Location *string `pulumi:"location"`
	// The resource name for the namespace in the format 'projects/*/locations/*/namespaces/*'.
	Name *string `pulumi:"name"`
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	NamespaceId                 *string `pulumi:"namespaceId"`
	Project                     *string `pulumi:"project"`
	ServiceDirectoryNamespaceId *string `pulumi:"serviceDirectoryNamespaceId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                  `pulumi:"terraformLabels"`
	Timeouts        *ServiceDirectoryNamespaceTimeouts `pulumi:"timeouts"`
}

type ServiceDirectoryNamespaceState struct {
	EffectiveLabels pulumi.StringMapInput
	// Resource labels associated with this Namespace. No more than 64 user labels can be associated with a given resource.
	// Label keys and values can be no longer than 63 characters. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The location for the Namespace. A full list of valid locations can be found by running 'gcloud beta service-directory
	// locations list'.
	Location pulumi.StringPtrInput
	// The resource name for the namespace in the format 'projects/*/locations/*/namespaces/*'.
	Name pulumi.StringPtrInput
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	NamespaceId                 pulumi.StringPtrInput
	Project                     pulumi.StringPtrInput
	ServiceDirectoryNamespaceId pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ServiceDirectoryNamespaceTimeoutsPtrInput
}

func (ServiceDirectoryNamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryNamespaceState)(nil)).Elem()
}

type serviceDirectoryNamespaceArgs struct {
	// Resource labels associated with this Namespace. No more than 64 user labels can be associated with a given resource.
	// Label keys and values can be no longer than 63 characters. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the Namespace. A full list of valid locations can be found by running 'gcloud beta service-directory
	// locations list'.
	Location string `pulumi:"location"`
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	NamespaceId                 string                             `pulumi:"namespaceId"`
	Project                     *string                            `pulumi:"project"`
	ServiceDirectoryNamespaceId *string                            `pulumi:"serviceDirectoryNamespaceId"`
	Timeouts                    *ServiceDirectoryNamespaceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ServiceDirectoryNamespace resource.
type ServiceDirectoryNamespaceArgs struct {
	// Resource labels associated with this Namespace. No more than 64 user labels can be associated with a given resource.
	// Label keys and values can be no longer than 63 characters. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The location for the Namespace. A full list of valid locations can be found by running 'gcloud beta service-directory
	// locations list'.
	Location pulumi.StringInput
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	NamespaceId                 pulumi.StringInput
	Project                     pulumi.StringPtrInput
	ServiceDirectoryNamespaceId pulumi.StringPtrInput
	Timeouts                    ServiceDirectoryNamespaceTimeoutsPtrInput
}

func (ServiceDirectoryNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryNamespaceArgs)(nil)).Elem()
}

type ServiceDirectoryNamespaceInput interface {
	pulumi.Input

	ToServiceDirectoryNamespaceOutput() ServiceDirectoryNamespaceOutput
	ToServiceDirectoryNamespaceOutputWithContext(ctx context.Context) ServiceDirectoryNamespaceOutput
}

func (*ServiceDirectoryNamespace) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryNamespace)(nil)).Elem()
}

func (i *ServiceDirectoryNamespace) ToServiceDirectoryNamespaceOutput() ServiceDirectoryNamespaceOutput {
	return i.ToServiceDirectoryNamespaceOutputWithContext(context.Background())
}

func (i *ServiceDirectoryNamespace) ToServiceDirectoryNamespaceOutputWithContext(ctx context.Context) ServiceDirectoryNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDirectoryNamespaceOutput)
}

type ServiceDirectoryNamespaceOutput struct{ *pulumi.OutputState }

func (ServiceDirectoryNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryNamespace)(nil)).Elem()
}

func (o ServiceDirectoryNamespaceOutput) ToServiceDirectoryNamespaceOutput() ServiceDirectoryNamespaceOutput {
	return o
}

func (o ServiceDirectoryNamespaceOutput) ToServiceDirectoryNamespaceOutputWithContext(ctx context.Context) ServiceDirectoryNamespaceOutput {
	return o
}

func (o ServiceDirectoryNamespaceOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespace) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Resource labels associated with this Namespace. No more than 64 user labels can be associated with a given resource.
// Label keys and values can be no longer than 63 characters. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o ServiceDirectoryNamespaceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespace) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location for the Namespace. A full list of valid locations can be found by running 'gcloud beta service-directory
// locations list'.
func (o ServiceDirectoryNamespaceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespace) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name for the namespace in the format 'projects/*/locations/*/namespaces/*'.
func (o ServiceDirectoryNamespaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
func (o ServiceDirectoryNamespaceOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespace) pulumi.StringOutput { return v.NamespaceId }).(pulumi.StringOutput)
}

func (o ServiceDirectoryNamespaceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespace) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ServiceDirectoryNamespaceOutput) ServiceDirectoryNamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespace) pulumi.StringOutput { return v.ServiceDirectoryNamespaceId }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ServiceDirectoryNamespaceOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespace) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ServiceDirectoryNamespaceOutput) Timeouts() ServiceDirectoryNamespaceTimeoutsPtrOutput {
	return o.ApplyT(func(v *ServiceDirectoryNamespace) ServiceDirectoryNamespaceTimeoutsPtrOutput { return v.Timeouts }).(ServiceDirectoryNamespaceTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDirectoryNamespaceInput)(nil)).Elem(), &ServiceDirectoryNamespace{})
	pulumi.RegisterOutputType(ServiceDirectoryNamespaceOutput{})
}
