// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MonitoringUptimeCheckConfig struct {
	pulumi.CustomResourceState

	// The checker type to use for the check. If the monitored resource type is 'servicedirectory_service', 'checker_type' must
	// be set to 'VPC_CHECKERS'. Possible values: ["STATIC_IP_CHECKERS", "VPC_CHECKERS"]
	CheckerType pulumi.StringOutput `pulumi:"checkerType"`
	// The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and
	// other entries will be ignored. The server will look for an exact match of the string in the page response's content.
	// This field is optional and should only be specified if a content match is required.
	ContentMatchers MonitoringUptimeCheckConfigContentMatcherArrayOutput `pulumi:"contentMatchers"`
	// A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver
	// Workspace in order to make it easier to identify; however, uniqueness is not enforced.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Contains information needed to make an HTTP or HTTPS check.
	HttpCheck MonitoringUptimeCheckConfigHttpCheckPtrOutput `pulumi:"httpCheck"`
	// The [monitored resource] (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The
	// following monitored resource types are supported for uptime checks: * 'aws_ec2_instance' * 'aws_elb_load_balancer' *
	// 'gae_app' * 'gce_instance' * 'k8s_service' * 'servicedirectory_service' * 'uptime_url'
	MonitoredResource             MonitoringUptimeCheckConfigMonitoredResourcePtrOutput `pulumi:"monitoredResource"`
	MonitoringUptimeCheckConfigId pulumi.StringOutput                                   `pulumi:"monitoringUptimeCheckConfigId"`
	// A unique resource name for this UptimeCheckConfig. The format is
	// 'projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID]'.
	Name pulumi.StringOutput `pulumi:"name"`
	// How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5
	// minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
	Period  pulumi.StringPtrOutput `pulumi:"period"`
	Project pulumi.StringOutput    `pulumi:"project"`
	// The group resource associated with the configuration.
	ResourceGroup MonitoringUptimeCheckConfigResourceGroupPtrOutput `pulumi:"resourceGroup"`
	// The list of regions from which the check will be run. Some regions contain one location, and others contain more than
	// one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error
	// message is returned. Not specifying this field will result in uptime checks running from all regions.
	SelectedRegions pulumi.StringArrayOutput `pulumi:"selectedRegions"`
	// A Synthetic Monitor deployed to a Cloud Functions V2 instance.
	SyntheticMonitor MonitoringUptimeCheckConfigSyntheticMonitorPtrOutput `pulumi:"syntheticMonitor"`
	// Contains information needed to make a TCP check.
	TcpCheck MonitoringUptimeCheckConfigTcpCheckPtrOutput `pulumi:"tcpCheck"`
	// The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). See the accepted
	// formats
	Timeout  pulumi.StringOutput                          `pulumi:"timeout"`
	Timeouts MonitoringUptimeCheckConfigTimeoutsPtrOutput `pulumi:"timeouts"`
	// The id of the uptime check
	UptimeCheckId pulumi.StringOutput `pulumi:"uptimeCheckId"`
	// User-supplied key/value data to be used for organizing and identifying the 'UptimeCheckConfig' objects. The field can
	// contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller.
	// Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
	UserLabels pulumi.StringMapOutput `pulumi:"userLabels"`
}

// NewMonitoringUptimeCheckConfig registers a new resource with the given unique name, arguments, and options.
func NewMonitoringUptimeCheckConfig(ctx *pulumi.Context,
	name string, args *MonitoringUptimeCheckConfigArgs, opts ...pulumi.ResourceOption) (*MonitoringUptimeCheckConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Timeout == nil {
		return nil, errors.New("invalid value for required argument 'Timeout'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource MonitoringUptimeCheckConfig
	err = ctx.RegisterPackageResource("google-beta:index/monitoringUptimeCheckConfig:MonitoringUptimeCheckConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMonitoringUptimeCheckConfig gets an existing MonitoringUptimeCheckConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMonitoringUptimeCheckConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MonitoringUptimeCheckConfigState, opts ...pulumi.ResourceOption) (*MonitoringUptimeCheckConfig, error) {
	var resource MonitoringUptimeCheckConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/monitoringUptimeCheckConfig:MonitoringUptimeCheckConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MonitoringUptimeCheckConfig resources.
type monitoringUptimeCheckConfigState struct {
	// The checker type to use for the check. If the monitored resource type is 'servicedirectory_service', 'checker_type' must
	// be set to 'VPC_CHECKERS'. Possible values: ["STATIC_IP_CHECKERS", "VPC_CHECKERS"]
	CheckerType *string `pulumi:"checkerType"`
	// The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and
	// other entries will be ignored. The server will look for an exact match of the string in the page response's content.
	// This field is optional and should only be specified if a content match is required.
	ContentMatchers []MonitoringUptimeCheckConfigContentMatcher `pulumi:"contentMatchers"`
	// A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver
	// Workspace in order to make it easier to identify; however, uniqueness is not enforced.
	DisplayName *string `pulumi:"displayName"`
	// Contains information needed to make an HTTP or HTTPS check.
	HttpCheck *MonitoringUptimeCheckConfigHttpCheck `pulumi:"httpCheck"`
	// The [monitored resource] (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The
	// following monitored resource types are supported for uptime checks: * 'aws_ec2_instance' * 'aws_elb_load_balancer' *
	// 'gae_app' * 'gce_instance' * 'k8s_service' * 'servicedirectory_service' * 'uptime_url'
	MonitoredResource             *MonitoringUptimeCheckConfigMonitoredResource `pulumi:"monitoredResource"`
	MonitoringUptimeCheckConfigId *string                                       `pulumi:"monitoringUptimeCheckConfigId"`
	// A unique resource name for this UptimeCheckConfig. The format is
	// 'projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID]'.
	Name *string `pulumi:"name"`
	// How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5
	// minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
	Period  *string `pulumi:"period"`
	Project *string `pulumi:"project"`
	// The group resource associated with the configuration.
	ResourceGroup *MonitoringUptimeCheckConfigResourceGroup `pulumi:"resourceGroup"`
	// The list of regions from which the check will be run. Some regions contain one location, and others contain more than
	// one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error
	// message is returned. Not specifying this field will result in uptime checks running from all regions.
	SelectedRegions []string `pulumi:"selectedRegions"`
	// A Synthetic Monitor deployed to a Cloud Functions V2 instance.
	SyntheticMonitor *MonitoringUptimeCheckConfigSyntheticMonitor `pulumi:"syntheticMonitor"`
	// Contains information needed to make a TCP check.
	TcpCheck *MonitoringUptimeCheckConfigTcpCheck `pulumi:"tcpCheck"`
	// The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). See the accepted
	// formats
	Timeout  *string                              `pulumi:"timeout"`
	Timeouts *MonitoringUptimeCheckConfigTimeouts `pulumi:"timeouts"`
	// The id of the uptime check
	UptimeCheckId *string `pulumi:"uptimeCheckId"`
	// User-supplied key/value data to be used for organizing and identifying the 'UptimeCheckConfig' objects. The field can
	// contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller.
	// Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
	UserLabels map[string]string `pulumi:"userLabels"`
}

type MonitoringUptimeCheckConfigState struct {
	// The checker type to use for the check. If the monitored resource type is 'servicedirectory_service', 'checker_type' must
	// be set to 'VPC_CHECKERS'. Possible values: ["STATIC_IP_CHECKERS", "VPC_CHECKERS"]
	CheckerType pulumi.StringPtrInput
	// The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and
	// other entries will be ignored. The server will look for an exact match of the string in the page response's content.
	// This field is optional and should only be specified if a content match is required.
	ContentMatchers MonitoringUptimeCheckConfigContentMatcherArrayInput
	// A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver
	// Workspace in order to make it easier to identify; however, uniqueness is not enforced.
	DisplayName pulumi.StringPtrInput
	// Contains information needed to make an HTTP or HTTPS check.
	HttpCheck MonitoringUptimeCheckConfigHttpCheckPtrInput
	// The [monitored resource] (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The
	// following monitored resource types are supported for uptime checks: * 'aws_ec2_instance' * 'aws_elb_load_balancer' *
	// 'gae_app' * 'gce_instance' * 'k8s_service' * 'servicedirectory_service' * 'uptime_url'
	MonitoredResource             MonitoringUptimeCheckConfigMonitoredResourcePtrInput
	MonitoringUptimeCheckConfigId pulumi.StringPtrInput
	// A unique resource name for this UptimeCheckConfig. The format is
	// 'projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID]'.
	Name pulumi.StringPtrInput
	// How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5
	// minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
	Period  pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The group resource associated with the configuration.
	ResourceGroup MonitoringUptimeCheckConfigResourceGroupPtrInput
	// The list of regions from which the check will be run. Some regions contain one location, and others contain more than
	// one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error
	// message is returned. Not specifying this field will result in uptime checks running from all regions.
	SelectedRegions pulumi.StringArrayInput
	// A Synthetic Monitor deployed to a Cloud Functions V2 instance.
	SyntheticMonitor MonitoringUptimeCheckConfigSyntheticMonitorPtrInput
	// Contains information needed to make a TCP check.
	TcpCheck MonitoringUptimeCheckConfigTcpCheckPtrInput
	// The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). See the accepted
	// formats
	Timeout  pulumi.StringPtrInput
	Timeouts MonitoringUptimeCheckConfigTimeoutsPtrInput
	// The id of the uptime check
	UptimeCheckId pulumi.StringPtrInput
	// User-supplied key/value data to be used for organizing and identifying the 'UptimeCheckConfig' objects. The field can
	// contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller.
	// Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
	UserLabels pulumi.StringMapInput
}

func (MonitoringUptimeCheckConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoringUptimeCheckConfigState)(nil)).Elem()
}

type monitoringUptimeCheckConfigArgs struct {
	// The checker type to use for the check. If the monitored resource type is 'servicedirectory_service', 'checker_type' must
	// be set to 'VPC_CHECKERS'. Possible values: ["STATIC_IP_CHECKERS", "VPC_CHECKERS"]
	CheckerType *string `pulumi:"checkerType"`
	// The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and
	// other entries will be ignored. The server will look for an exact match of the string in the page response's content.
	// This field is optional and should only be specified if a content match is required.
	ContentMatchers []MonitoringUptimeCheckConfigContentMatcher `pulumi:"contentMatchers"`
	// A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver
	// Workspace in order to make it easier to identify; however, uniqueness is not enforced.
	DisplayName string `pulumi:"displayName"`
	// Contains information needed to make an HTTP or HTTPS check.
	HttpCheck *MonitoringUptimeCheckConfigHttpCheck `pulumi:"httpCheck"`
	// The [monitored resource] (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The
	// following monitored resource types are supported for uptime checks: * 'aws_ec2_instance' * 'aws_elb_load_balancer' *
	// 'gae_app' * 'gce_instance' * 'k8s_service' * 'servicedirectory_service' * 'uptime_url'
	MonitoredResource             *MonitoringUptimeCheckConfigMonitoredResource `pulumi:"monitoredResource"`
	MonitoringUptimeCheckConfigId *string                                       `pulumi:"monitoringUptimeCheckConfigId"`
	// How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5
	// minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
	Period  *string `pulumi:"period"`
	Project *string `pulumi:"project"`
	// The group resource associated with the configuration.
	ResourceGroup *MonitoringUptimeCheckConfigResourceGroup `pulumi:"resourceGroup"`
	// The list of regions from which the check will be run. Some regions contain one location, and others contain more than
	// one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error
	// message is returned. Not specifying this field will result in uptime checks running from all regions.
	SelectedRegions []string `pulumi:"selectedRegions"`
	// A Synthetic Monitor deployed to a Cloud Functions V2 instance.
	SyntheticMonitor *MonitoringUptimeCheckConfigSyntheticMonitor `pulumi:"syntheticMonitor"`
	// Contains information needed to make a TCP check.
	TcpCheck *MonitoringUptimeCheckConfigTcpCheck `pulumi:"tcpCheck"`
	// The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). See the accepted
	// formats
	Timeout  string                               `pulumi:"timeout"`
	Timeouts *MonitoringUptimeCheckConfigTimeouts `pulumi:"timeouts"`
	// User-supplied key/value data to be used for organizing and identifying the 'UptimeCheckConfig' objects. The field can
	// contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller.
	// Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
	UserLabels map[string]string `pulumi:"userLabels"`
}

// The set of arguments for constructing a MonitoringUptimeCheckConfig resource.
type MonitoringUptimeCheckConfigArgs struct {
	// The checker type to use for the check. If the monitored resource type is 'servicedirectory_service', 'checker_type' must
	// be set to 'VPC_CHECKERS'. Possible values: ["STATIC_IP_CHECKERS", "VPC_CHECKERS"]
	CheckerType pulumi.StringPtrInput
	// The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and
	// other entries will be ignored. The server will look for an exact match of the string in the page response's content.
	// This field is optional and should only be specified if a content match is required.
	ContentMatchers MonitoringUptimeCheckConfigContentMatcherArrayInput
	// A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver
	// Workspace in order to make it easier to identify; however, uniqueness is not enforced.
	DisplayName pulumi.StringInput
	// Contains information needed to make an HTTP or HTTPS check.
	HttpCheck MonitoringUptimeCheckConfigHttpCheckPtrInput
	// The [monitored resource] (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The
	// following monitored resource types are supported for uptime checks: * 'aws_ec2_instance' * 'aws_elb_load_balancer' *
	// 'gae_app' * 'gce_instance' * 'k8s_service' * 'servicedirectory_service' * 'uptime_url'
	MonitoredResource             MonitoringUptimeCheckConfigMonitoredResourcePtrInput
	MonitoringUptimeCheckConfigId pulumi.StringPtrInput
	// How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5
	// minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
	Period  pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The group resource associated with the configuration.
	ResourceGroup MonitoringUptimeCheckConfigResourceGroupPtrInput
	// The list of regions from which the check will be run. Some regions contain one location, and others contain more than
	// one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error
	// message is returned. Not specifying this field will result in uptime checks running from all regions.
	SelectedRegions pulumi.StringArrayInput
	// A Synthetic Monitor deployed to a Cloud Functions V2 instance.
	SyntheticMonitor MonitoringUptimeCheckConfigSyntheticMonitorPtrInput
	// Contains information needed to make a TCP check.
	TcpCheck MonitoringUptimeCheckConfigTcpCheckPtrInput
	// The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). See the accepted
	// formats
	Timeout  pulumi.StringInput
	Timeouts MonitoringUptimeCheckConfigTimeoutsPtrInput
	// User-supplied key/value data to be used for organizing and identifying the 'UptimeCheckConfig' objects. The field can
	// contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller.
	// Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
	UserLabels pulumi.StringMapInput
}

func (MonitoringUptimeCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*monitoringUptimeCheckConfigArgs)(nil)).Elem()
}

type MonitoringUptimeCheckConfigInput interface {
	pulumi.Input

	ToMonitoringUptimeCheckConfigOutput() MonitoringUptimeCheckConfigOutput
	ToMonitoringUptimeCheckConfigOutputWithContext(ctx context.Context) MonitoringUptimeCheckConfigOutput
}

func (*MonitoringUptimeCheckConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringUptimeCheckConfig)(nil)).Elem()
}

func (i *MonitoringUptimeCheckConfig) ToMonitoringUptimeCheckConfigOutput() MonitoringUptimeCheckConfigOutput {
	return i.ToMonitoringUptimeCheckConfigOutputWithContext(context.Background())
}

func (i *MonitoringUptimeCheckConfig) ToMonitoringUptimeCheckConfigOutputWithContext(ctx context.Context) MonitoringUptimeCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringUptimeCheckConfigOutput)
}

type MonitoringUptimeCheckConfigOutput struct{ *pulumi.OutputState }

func (MonitoringUptimeCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringUptimeCheckConfig)(nil)).Elem()
}

func (o MonitoringUptimeCheckConfigOutput) ToMonitoringUptimeCheckConfigOutput() MonitoringUptimeCheckConfigOutput {
	return o
}

func (o MonitoringUptimeCheckConfigOutput) ToMonitoringUptimeCheckConfigOutputWithContext(ctx context.Context) MonitoringUptimeCheckConfigOutput {
	return o
}

// The checker type to use for the check. If the monitored resource type is 'servicedirectory_service', 'checker_type' must
// be set to 'VPC_CHECKERS'. Possible values: ["STATIC_IP_CHECKERS", "VPC_CHECKERS"]
func (o MonitoringUptimeCheckConfigOutput) CheckerType() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringOutput { return v.CheckerType }).(pulumi.StringOutput)
}

// The expected content on the page the check is run against. Currently, only the first entry in the list is supported, and
// other entries will be ignored. The server will look for an exact match of the string in the page response's content.
// This field is optional and should only be specified if a content match is required.
func (o MonitoringUptimeCheckConfigOutput) ContentMatchers() MonitoringUptimeCheckConfigContentMatcherArrayOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) MonitoringUptimeCheckConfigContentMatcherArrayOutput {
		return v.ContentMatchers
	}).(MonitoringUptimeCheckConfigContentMatcherArrayOutput)
}

// A human-friendly name for the uptime check configuration. The display name should be unique within a Stackdriver
// Workspace in order to make it easier to identify; however, uniqueness is not enforced.
func (o MonitoringUptimeCheckConfigOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Contains information needed to make an HTTP or HTTPS check.
func (o MonitoringUptimeCheckConfigOutput) HttpCheck() MonitoringUptimeCheckConfigHttpCheckPtrOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) MonitoringUptimeCheckConfigHttpCheckPtrOutput { return v.HttpCheck }).(MonitoringUptimeCheckConfigHttpCheckPtrOutput)
}

// The [monitored resource] (https://cloud.google.com/monitoring/api/resources) associated with the configuration. The
// following monitored resource types are supported for uptime checks: * 'aws_ec2_instance' * 'aws_elb_load_balancer' *
// 'gae_app' * 'gce_instance' * 'k8s_service' * 'servicedirectory_service' * 'uptime_url'
func (o MonitoringUptimeCheckConfigOutput) MonitoredResource() MonitoringUptimeCheckConfigMonitoredResourcePtrOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) MonitoringUptimeCheckConfigMonitoredResourcePtrOutput {
		return v.MonitoredResource
	}).(MonitoringUptimeCheckConfigMonitoredResourcePtrOutput)
}

func (o MonitoringUptimeCheckConfigOutput) MonitoringUptimeCheckConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringOutput { return v.MonitoringUptimeCheckConfigId }).(pulumi.StringOutput)
}

// A unique resource name for this UptimeCheckConfig. The format is
// 'projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID]'.
func (o MonitoringUptimeCheckConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// How often, in seconds, the uptime check is performed. Currently, the only supported values are 60s (1 minute), 300s (5
// minutes), 600s (10 minutes), and 900s (15 minutes). Optional, defaults to 300s.
func (o MonitoringUptimeCheckConfigOutput) Period() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringPtrOutput { return v.Period }).(pulumi.StringPtrOutput)
}

func (o MonitoringUptimeCheckConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The group resource associated with the configuration.
func (o MonitoringUptimeCheckConfigOutput) ResourceGroup() MonitoringUptimeCheckConfigResourceGroupPtrOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) MonitoringUptimeCheckConfigResourceGroupPtrOutput {
		return v.ResourceGroup
	}).(MonitoringUptimeCheckConfigResourceGroupPtrOutput)
}

// The list of regions from which the check will be run. Some regions contain one location, and others contain more than
// one. If this field is specified, enough regions to include a minimum of 3 locations must be provided, or an error
// message is returned. Not specifying this field will result in uptime checks running from all regions.
func (o MonitoringUptimeCheckConfigOutput) SelectedRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringArrayOutput { return v.SelectedRegions }).(pulumi.StringArrayOutput)
}

// A Synthetic Monitor deployed to a Cloud Functions V2 instance.
func (o MonitoringUptimeCheckConfigOutput) SyntheticMonitor() MonitoringUptimeCheckConfigSyntheticMonitorPtrOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) MonitoringUptimeCheckConfigSyntheticMonitorPtrOutput {
		return v.SyntheticMonitor
	}).(MonitoringUptimeCheckConfigSyntheticMonitorPtrOutput)
}

// Contains information needed to make a TCP check.
func (o MonitoringUptimeCheckConfigOutput) TcpCheck() MonitoringUptimeCheckConfigTcpCheckPtrOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) MonitoringUptimeCheckConfigTcpCheckPtrOutput { return v.TcpCheck }).(MonitoringUptimeCheckConfigTcpCheckPtrOutput)
}

// The maximum amount of time to wait for the request to complete (must be between 1 and 60 seconds). See the accepted
// formats
func (o MonitoringUptimeCheckConfigOutput) Timeout() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringOutput { return v.Timeout }).(pulumi.StringOutput)
}

func (o MonitoringUptimeCheckConfigOutput) Timeouts() MonitoringUptimeCheckConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) MonitoringUptimeCheckConfigTimeoutsPtrOutput { return v.Timeouts }).(MonitoringUptimeCheckConfigTimeoutsPtrOutput)
}

// The id of the uptime check
func (o MonitoringUptimeCheckConfigOutput) UptimeCheckId() pulumi.StringOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringOutput { return v.UptimeCheckId }).(pulumi.StringOutput)
}

// User-supplied key/value data to be used for organizing and identifying the 'UptimeCheckConfig' objects. The field can
// contain up to 64 entries. Each key and value is limited to 63 Unicode characters or 128 bytes, whichever is smaller.
// Labels and values can contain only lowercase letters, numerals, underscores, and dashes. Keys must begin with a letter.
func (o MonitoringUptimeCheckConfigOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MonitoringUptimeCheckConfig) pulumi.StringMapOutput { return v.UserLabels }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringUptimeCheckConfigInput)(nil)).Elem(), &MonitoringUptimeCheckConfig{})
	pulumi.RegisterOutputType(MonitoringUptimeCheckConfigOutput{})
}
