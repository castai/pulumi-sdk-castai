// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClouddeployTarget struct {
	pulumi.CustomResourceState

	// Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See
	// https://google.aip.dev/128#annotations for more details such as format and size limitations. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Information specifying an Anthos Cluster.
	AnthosCluster ClouddeployTargetAnthosClusterPtrOutput `pulumi:"anthosCluster"`
	// Optional. Map of entity IDs to their associated entities. Associated entities allows specifying places other than the
	// deployment target for specific features. For example, the Gateway API canary can be configured to deploy the HTTPRoute
	// to a different cluster(s) than the deployment cluster using associated entities. An entity ID must consist of lower-case
	// letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63
	// characters. In other words, it must match the following regex: `^a-z?$`.
	AssociatedEntities  ClouddeployTargetAssociatedEntityArrayOutput `pulumi:"associatedEntities"`
	ClouddeployTargetId pulumi.StringOutput                          `pulumi:"clouddeployTargetId"`
	// Output only. Time at which the `Target` was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. Information specifying a Custom Target.
	CustomTarget ClouddeployTargetCustomTargetPtrOutput `pulumi:"customTarget"`
	// Optional. The deploy parameters to use for this target.
	DeployParameters pulumi.StringMapOutput `pulumi:"deployParameters"`
	// Optional. Description of the `Target`. Max length is 255 characters.
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
	// delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used
	// in a single configuration; using the same value multiple times is an error. When one or more configurations are
	// specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are
	// specified, execution will use the default specified in `DefaultPool`.
	ExecutionConfigs ClouddeployTargetExecutionConfigArrayOutput `pulumi:"executionConfigs"`
	// Information specifying a GKE Cluster.
	Gke ClouddeployTargetGkePtrOutput `pulumi:"gke"`
	// Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet
	// the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 128 bytes. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// Information specifying a multiTarget.
	MultiTarget ClouddeployTargetMultiTargetPtrOutput `pulumi:"multiTarget"`
	// Name of the `Target`. Format is `a-z?`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The project for the resource
	Project pulumi.StringOutput `pulumi:"project"`
	// Optional. Whether or not the `Target` requires approval.
	RequireApproval pulumi.BoolPtrOutput `pulumi:"requireApproval"`
	// Information specifying a Cloud Run deployment target.
	Run ClouddeployTargetRunPtrOutput `pulumi:"run"`
	// Output only. Resource id of the `Target`.
	TargetId pulumi.StringOutput `pulumi:"targetId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput             `pulumi:"terraformLabels"`
	Timeouts        ClouddeployTargetTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. Unique identifier of the `Target`.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. Most recent time at which the `Target` was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewClouddeployTarget registers a new resource with the given unique name, arguments, and options.
func NewClouddeployTarget(ctx *pulumi.Context,
	name string, args *ClouddeployTargetArgs, opts ...pulumi.ResourceOption) (*ClouddeployTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ClouddeployTarget
	err = ctx.RegisterPackageResource("google-beta:index/clouddeployTarget:ClouddeployTarget", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClouddeployTarget gets an existing ClouddeployTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClouddeployTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClouddeployTargetState, opts ...pulumi.ResourceOption) (*ClouddeployTarget, error) {
	var resource ClouddeployTarget
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/clouddeployTarget:ClouddeployTarget", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClouddeployTarget resources.
type clouddeployTargetState struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See
	// https://google.aip.dev/128#annotations for more details such as format and size limitations. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Information specifying an Anthos Cluster.
	AnthosCluster *ClouddeployTargetAnthosCluster `pulumi:"anthosCluster"`
	// Optional. Map of entity IDs to their associated entities. Associated entities allows specifying places other than the
	// deployment target for specific features. For example, the Gateway API canary can be configured to deploy the HTTPRoute
	// to a different cluster(s) than the deployment cluster using associated entities. An entity ID must consist of lower-case
	// letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63
	// characters. In other words, it must match the following regex: `^a-z?$`.
	AssociatedEntities  []ClouddeployTargetAssociatedEntity `pulumi:"associatedEntities"`
	ClouddeployTargetId *string                             `pulumi:"clouddeployTargetId"`
	// Output only. Time at which the `Target` was created.
	CreateTime *string `pulumi:"createTime"`
	// Optional. Information specifying a Custom Target.
	CustomTarget *ClouddeployTargetCustomTarget `pulumi:"customTarget"`
	// Optional. The deploy parameters to use for this target.
	DeployParameters map[string]string `pulumi:"deployParameters"`
	// Optional. Description of the `Target`. Max length is 255 characters.
	Description          *string           `pulumi:"description"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
	// delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used
	// in a single configuration; using the same value multiple times is an error. When one or more configurations are
	// specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are
	// specified, execution will use the default specified in `DefaultPool`.
	ExecutionConfigs []ClouddeployTargetExecutionConfig `pulumi:"executionConfigs"`
	// Information specifying a GKE Cluster.
	Gke *ClouddeployTargetGke `pulumi:"gke"`
	// Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet
	// the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 128 bytes. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// Information specifying a multiTarget.
	MultiTarget *ClouddeployTargetMultiTarget `pulumi:"multiTarget"`
	// Name of the `Target`. Format is `a-z?`.
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// Optional. Whether or not the `Target` requires approval.
	RequireApproval *bool `pulumi:"requireApproval"`
	// Information specifying a Cloud Run deployment target.
	Run *ClouddeployTargetRun `pulumi:"run"`
	// Output only. Resource id of the `Target`.
	TargetId *string `pulumi:"targetId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string          `pulumi:"terraformLabels"`
	Timeouts        *ClouddeployTargetTimeouts `pulumi:"timeouts"`
	// Output only. Unique identifier of the `Target`.
	Uid *string `pulumi:"uid"`
	// Output only. Most recent time at which the `Target` was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ClouddeployTargetState struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See
	// https://google.aip.dev/128#annotations for more details such as format and size limitations. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Information specifying an Anthos Cluster.
	AnthosCluster ClouddeployTargetAnthosClusterPtrInput
	// Optional. Map of entity IDs to their associated entities. Associated entities allows specifying places other than the
	// deployment target for specific features. For example, the Gateway API canary can be configured to deploy the HTTPRoute
	// to a different cluster(s) than the deployment cluster using associated entities. An entity ID must consist of lower-case
	// letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63
	// characters. In other words, it must match the following regex: `^a-z?$`.
	AssociatedEntities  ClouddeployTargetAssociatedEntityArrayInput
	ClouddeployTargetId pulumi.StringPtrInput
	// Output only. Time at which the `Target` was created.
	CreateTime pulumi.StringPtrInput
	// Optional. Information specifying a Custom Target.
	CustomTarget ClouddeployTargetCustomTargetPtrInput
	// Optional. The deploy parameters to use for this target.
	DeployParameters pulumi.StringMapInput
	// Optional. Description of the `Target`. Max length is 255 characters.
	Description          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
	// delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used
	// in a single configuration; using the same value multiple times is an error. When one or more configurations are
	// specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are
	// specified, execution will use the default specified in `DefaultPool`.
	ExecutionConfigs ClouddeployTargetExecutionConfigArrayInput
	// Information specifying a GKE Cluster.
	Gke ClouddeployTargetGkePtrInput
	// Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet
	// the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 128 bytes. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// Information specifying a multiTarget.
	MultiTarget ClouddeployTargetMultiTargetPtrInput
	// Name of the `Target`. Format is `a-z?`.
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// Optional. Whether or not the `Target` requires approval.
	RequireApproval pulumi.BoolPtrInput
	// Information specifying a Cloud Run deployment target.
	Run ClouddeployTargetRunPtrInput
	// Output only. Resource id of the `Target`.
	TargetId pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ClouddeployTargetTimeoutsPtrInput
	// Output only. Unique identifier of the `Target`.
	Uid pulumi.StringPtrInput
	// Output only. Most recent time at which the `Target` was updated.
	UpdateTime pulumi.StringPtrInput
}

func (ClouddeployTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddeployTargetState)(nil)).Elem()
}

type clouddeployTargetArgs struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See
	// https://google.aip.dev/128#annotations for more details such as format and size limitations. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Information specifying an Anthos Cluster.
	AnthosCluster *ClouddeployTargetAnthosCluster `pulumi:"anthosCluster"`
	// Optional. Map of entity IDs to their associated entities. Associated entities allows specifying places other than the
	// deployment target for specific features. For example, the Gateway API canary can be configured to deploy the HTTPRoute
	// to a different cluster(s) than the deployment cluster using associated entities. An entity ID must consist of lower-case
	// letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63
	// characters. In other words, it must match the following regex: `^a-z?$`.
	AssociatedEntities  []ClouddeployTargetAssociatedEntity `pulumi:"associatedEntities"`
	ClouddeployTargetId *string                             `pulumi:"clouddeployTargetId"`
	// Optional. Information specifying a Custom Target.
	CustomTarget *ClouddeployTargetCustomTarget `pulumi:"customTarget"`
	// Optional. The deploy parameters to use for this target.
	DeployParameters map[string]string `pulumi:"deployParameters"`
	// Optional. Description of the `Target`. Max length is 255 characters.
	Description *string `pulumi:"description"`
	// Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used
	// in a single configuration; using the same value multiple times is an error. When one or more configurations are
	// specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are
	// specified, execution will use the default specified in `DefaultPool`.
	ExecutionConfigs []ClouddeployTargetExecutionConfig `pulumi:"executionConfigs"`
	// Information specifying a GKE Cluster.
	Gke *ClouddeployTargetGke `pulumi:"gke"`
	// Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet
	// the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 128 bytes. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location string `pulumi:"location"`
	// Information specifying a multiTarget.
	MultiTarget *ClouddeployTargetMultiTarget `pulumi:"multiTarget"`
	// Name of the `Target`. Format is `a-z?`.
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// Optional. Whether or not the `Target` requires approval.
	RequireApproval *bool `pulumi:"requireApproval"`
	// Information specifying a Cloud Run deployment target.
	Run      *ClouddeployTargetRun      `pulumi:"run"`
	Timeouts *ClouddeployTargetTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ClouddeployTarget resource.
type ClouddeployTargetArgs struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See
	// https://google.aip.dev/128#annotations for more details such as format and size limitations. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Information specifying an Anthos Cluster.
	AnthosCluster ClouddeployTargetAnthosClusterPtrInput
	// Optional. Map of entity IDs to their associated entities. Associated entities allows specifying places other than the
	// deployment target for specific features. For example, the Gateway API canary can be configured to deploy the HTTPRoute
	// to a different cluster(s) than the deployment cluster using associated entities. An entity ID must consist of lower-case
	// letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63
	// characters. In other words, it must match the following regex: `^a-z?$`.
	AssociatedEntities  ClouddeployTargetAssociatedEntityArrayInput
	ClouddeployTargetId pulumi.StringPtrInput
	// Optional. Information specifying a Custom Target.
	CustomTarget ClouddeployTargetCustomTargetPtrInput
	// Optional. The deploy parameters to use for this target.
	DeployParameters pulumi.StringMapInput
	// Optional. Description of the `Target`. Max length is 255 characters.
	Description pulumi.StringPtrInput
	// Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used
	// in a single configuration; using the same value multiple times is an error. When one or more configurations are
	// specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are
	// specified, execution will use the default specified in `DefaultPool`.
	ExecutionConfigs ClouddeployTargetExecutionConfigArrayInput
	// Information specifying a GKE Cluster.
	Gke ClouddeployTargetGkePtrInput
	// Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet
	// the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 128 bytes. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringInput
	// Information specifying a multiTarget.
	MultiTarget ClouddeployTargetMultiTargetPtrInput
	// Name of the `Target`. Format is `a-z?`.
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// Optional. Whether or not the `Target` requires approval.
	RequireApproval pulumi.BoolPtrInput
	// Information specifying a Cloud Run deployment target.
	Run      ClouddeployTargetRunPtrInput
	Timeouts ClouddeployTargetTimeoutsPtrInput
}

func (ClouddeployTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddeployTargetArgs)(nil)).Elem()
}

type ClouddeployTargetInput interface {
	pulumi.Input

	ToClouddeployTargetOutput() ClouddeployTargetOutput
	ToClouddeployTargetOutputWithContext(ctx context.Context) ClouddeployTargetOutput
}

func (*ClouddeployTarget) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddeployTarget)(nil)).Elem()
}

func (i *ClouddeployTarget) ToClouddeployTargetOutput() ClouddeployTargetOutput {
	return i.ToClouddeployTargetOutputWithContext(context.Background())
}

func (i *ClouddeployTarget) ToClouddeployTargetOutputWithContext(ctx context.Context) ClouddeployTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClouddeployTargetOutput)
}

type ClouddeployTargetOutput struct{ *pulumi.OutputState }

func (ClouddeployTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddeployTarget)(nil)).Elem()
}

func (o ClouddeployTargetOutput) ToClouddeployTargetOutput() ClouddeployTargetOutput {
	return o
}

func (o ClouddeployTargetOutput) ToClouddeployTargetOutputWithContext(ctx context.Context) ClouddeployTargetOutput {
	return o
}

// Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See
// https://google.aip.dev/128#annotations for more details such as format and size limitations. **Note**: This field is
// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
// `effective_annotations` for all of the annotations present on the resource.
func (o ClouddeployTargetOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Information specifying an Anthos Cluster.
func (o ClouddeployTargetOutput) AnthosCluster() ClouddeployTargetAnthosClusterPtrOutput {
	return o.ApplyT(func(v *ClouddeployTarget) ClouddeployTargetAnthosClusterPtrOutput { return v.AnthosCluster }).(ClouddeployTargetAnthosClusterPtrOutput)
}

// Optional. Map of entity IDs to their associated entities. Associated entities allows specifying places other than the
// deployment target for specific features. For example, the Gateway API canary can be configured to deploy the HTTPRoute
// to a different cluster(s) than the deployment cluster using associated entities. An entity ID must consist of lower-case
// letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63
// characters. In other words, it must match the following regex: `^a-z?$`.
func (o ClouddeployTargetOutput) AssociatedEntities() ClouddeployTargetAssociatedEntityArrayOutput {
	return o.ApplyT(func(v *ClouddeployTarget) ClouddeployTargetAssociatedEntityArrayOutput { return v.AssociatedEntities }).(ClouddeployTargetAssociatedEntityArrayOutput)
}

func (o ClouddeployTargetOutput) ClouddeployTargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringOutput { return v.ClouddeployTargetId }).(pulumi.StringOutput)
}

// Output only. Time at which the `Target` was created.
func (o ClouddeployTargetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. Information specifying a Custom Target.
func (o ClouddeployTargetOutput) CustomTarget() ClouddeployTargetCustomTargetPtrOutput {
	return o.ApplyT(func(v *ClouddeployTarget) ClouddeployTargetCustomTargetPtrOutput { return v.CustomTarget }).(ClouddeployTargetCustomTargetPtrOutput)
}

// Optional. The deploy parameters to use for this target.
func (o ClouddeployTargetOutput) DeployParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringMapOutput { return v.DeployParameters }).(pulumi.StringMapOutput)
}

// Optional. Description of the `Target`. Max length is 255 characters.
func (o ClouddeployTargetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClouddeployTargetOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o ClouddeployTargetOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and
// delete requests to ensure the client has an up-to-date value before proceeding.
func (o ClouddeployTargetOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used
// in a single configuration; using the same value multiple times is an error. When one or more configurations are
// specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are
// specified, execution will use the default specified in `DefaultPool`.
func (o ClouddeployTargetOutput) ExecutionConfigs() ClouddeployTargetExecutionConfigArrayOutput {
	return o.ApplyT(func(v *ClouddeployTarget) ClouddeployTargetExecutionConfigArrayOutput { return v.ExecutionConfigs }).(ClouddeployTargetExecutionConfigArrayOutput)
}

// Information specifying a GKE Cluster.
func (o ClouddeployTargetOutput) Gke() ClouddeployTargetGkePtrOutput {
	return o.ApplyT(func(v *ClouddeployTarget) ClouddeployTargetGkePtrOutput { return v.Gke }).(ClouddeployTargetGkePtrOutput)
}

// Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet
// the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
// are additionally constrained to be <= 128 bytes. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field `effective_labels` for all of the labels present on the
// resource.
func (o ClouddeployTargetOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location for the resource
func (o ClouddeployTargetOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Information specifying a multiTarget.
func (o ClouddeployTargetOutput) MultiTarget() ClouddeployTargetMultiTargetPtrOutput {
	return o.ApplyT(func(v *ClouddeployTarget) ClouddeployTargetMultiTargetPtrOutput { return v.MultiTarget }).(ClouddeployTargetMultiTargetPtrOutput)
}

// Name of the `Target`. Format is `a-z?`.
func (o ClouddeployTargetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project for the resource
func (o ClouddeployTargetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. Whether or not the `Target` requires approval.
func (o ClouddeployTargetOutput) RequireApproval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.BoolPtrOutput { return v.RequireApproval }).(pulumi.BoolPtrOutput)
}

// Information specifying a Cloud Run deployment target.
func (o ClouddeployTargetOutput) Run() ClouddeployTargetRunPtrOutput {
	return o.ApplyT(func(v *ClouddeployTarget) ClouddeployTargetRunPtrOutput { return v.Run }).(ClouddeployTargetRunPtrOutput)
}

// Output only. Resource id of the `Target`.
func (o ClouddeployTargetOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ClouddeployTargetOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ClouddeployTargetOutput) Timeouts() ClouddeployTargetTimeoutsPtrOutput {
	return o.ApplyT(func(v *ClouddeployTarget) ClouddeployTargetTimeoutsPtrOutput { return v.Timeouts }).(ClouddeployTargetTimeoutsPtrOutput)
}

// Output only. Unique identifier of the `Target`.
func (o ClouddeployTargetOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. Most recent time at which the `Target` was updated.
func (o ClouddeployTargetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTarget) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClouddeployTargetInput)(nil)).Elem(), &ClouddeployTarget{})
	pulumi.RegisterOutputType(ClouddeployTargetOutput{})
}
