// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecureSourceManagerInstanceIamPolicy struct {
	pulumi.CustomResourceState

	Etag                                   pulumi.StringOutput `pulumi:"etag"`
	InstanceId                             pulumi.StringOutput `pulumi:"instanceId"`
	Location                               pulumi.StringOutput `pulumi:"location"`
	PolicyData                             pulumi.StringOutput `pulumi:"policyData"`
	Project                                pulumi.StringOutput `pulumi:"project"`
	SecureSourceManagerInstanceIamPolicyId pulumi.StringOutput `pulumi:"secureSourceManagerInstanceIamPolicyId"`
}

// NewSecureSourceManagerInstanceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewSecureSourceManagerInstanceIamPolicy(ctx *pulumi.Context,
	name string, args *SecureSourceManagerInstanceIamPolicyArgs, opts ...pulumi.ResourceOption) (*SecureSourceManagerInstanceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SecureSourceManagerInstanceIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/secureSourceManagerInstanceIamPolicy:SecureSourceManagerInstanceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecureSourceManagerInstanceIamPolicy gets an existing SecureSourceManagerInstanceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecureSourceManagerInstanceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecureSourceManagerInstanceIamPolicyState, opts ...pulumi.ResourceOption) (*SecureSourceManagerInstanceIamPolicy, error) {
	var resource SecureSourceManagerInstanceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/secureSourceManagerInstanceIamPolicy:SecureSourceManagerInstanceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecureSourceManagerInstanceIamPolicy resources.
type secureSourceManagerInstanceIamPolicyState struct {
	Etag                                   *string `pulumi:"etag"`
	InstanceId                             *string `pulumi:"instanceId"`
	Location                               *string `pulumi:"location"`
	PolicyData                             *string `pulumi:"policyData"`
	Project                                *string `pulumi:"project"`
	SecureSourceManagerInstanceIamPolicyId *string `pulumi:"secureSourceManagerInstanceIamPolicyId"`
}

type SecureSourceManagerInstanceIamPolicyState struct {
	Etag                                   pulumi.StringPtrInput
	InstanceId                             pulumi.StringPtrInput
	Location                               pulumi.StringPtrInput
	PolicyData                             pulumi.StringPtrInput
	Project                                pulumi.StringPtrInput
	SecureSourceManagerInstanceIamPolicyId pulumi.StringPtrInput
}

func (SecureSourceManagerInstanceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*secureSourceManagerInstanceIamPolicyState)(nil)).Elem()
}

type secureSourceManagerInstanceIamPolicyArgs struct {
	InstanceId                             string  `pulumi:"instanceId"`
	Location                               *string `pulumi:"location"`
	PolicyData                             string  `pulumi:"policyData"`
	Project                                *string `pulumi:"project"`
	SecureSourceManagerInstanceIamPolicyId *string `pulumi:"secureSourceManagerInstanceIamPolicyId"`
}

// The set of arguments for constructing a SecureSourceManagerInstanceIamPolicy resource.
type SecureSourceManagerInstanceIamPolicyArgs struct {
	InstanceId                             pulumi.StringInput
	Location                               pulumi.StringPtrInput
	PolicyData                             pulumi.StringInput
	Project                                pulumi.StringPtrInput
	SecureSourceManagerInstanceIamPolicyId pulumi.StringPtrInput
}

func (SecureSourceManagerInstanceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secureSourceManagerInstanceIamPolicyArgs)(nil)).Elem()
}

type SecureSourceManagerInstanceIamPolicyInput interface {
	pulumi.Input

	ToSecureSourceManagerInstanceIamPolicyOutput() SecureSourceManagerInstanceIamPolicyOutput
	ToSecureSourceManagerInstanceIamPolicyOutputWithContext(ctx context.Context) SecureSourceManagerInstanceIamPolicyOutput
}

func (*SecureSourceManagerInstanceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SecureSourceManagerInstanceIamPolicy)(nil)).Elem()
}

func (i *SecureSourceManagerInstanceIamPolicy) ToSecureSourceManagerInstanceIamPolicyOutput() SecureSourceManagerInstanceIamPolicyOutput {
	return i.ToSecureSourceManagerInstanceIamPolicyOutputWithContext(context.Background())
}

func (i *SecureSourceManagerInstanceIamPolicy) ToSecureSourceManagerInstanceIamPolicyOutputWithContext(ctx context.Context) SecureSourceManagerInstanceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecureSourceManagerInstanceIamPolicyOutput)
}

type SecureSourceManagerInstanceIamPolicyOutput struct{ *pulumi.OutputState }

func (SecureSourceManagerInstanceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecureSourceManagerInstanceIamPolicy)(nil)).Elem()
}

func (o SecureSourceManagerInstanceIamPolicyOutput) ToSecureSourceManagerInstanceIamPolicyOutput() SecureSourceManagerInstanceIamPolicyOutput {
	return o
}

func (o SecureSourceManagerInstanceIamPolicyOutput) ToSecureSourceManagerInstanceIamPolicyOutputWithContext(ctx context.Context) SecureSourceManagerInstanceIamPolicyOutput {
	return o
}

func (o SecureSourceManagerInstanceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamPolicyOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamPolicy) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o SecureSourceManagerInstanceIamPolicyOutput) SecureSourceManagerInstanceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecureSourceManagerInstanceIamPolicy) pulumi.StringOutput {
		return v.SecureSourceManagerInstanceIamPolicyId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecureSourceManagerInstanceIamPolicyInput)(nil)).Elem(), &SecureSourceManagerInstanceIamPolicy{})
	pulumi.RegisterOutputType(SecureSourceManagerInstanceIamPolicyOutput{})
}
