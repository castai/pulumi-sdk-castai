// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeNetworkFirewallPolicyPacketMirroringRule struct {
	pulumi.CustomResourceState

	// The Action to perform when the client connection triggers the rule. Valid actions are "mirror", "do_not_mirror",
	// "goto_next".
	Action                                            pulumi.StringOutput `pulumi:"action"`
	ComputeNetworkFirewallPolicyPacketMirroringRuleId pulumi.StringOutput `pulumi:"computeNetworkFirewallPolicyPacketMirroringRuleId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description for this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction pulumi.StringOutput `pulumi:"direction"`
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringOutput `pulumi:"firewallPolicy"`
	// Type of the resource. Always 'compute#packetMirroringRule' for firewall policy packet mirroring rules
	Kind pulumi.StringOutput `pulumi:"kind"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match ComputeNetworkFirewallPolicyPacketMirroringRuleMatchOutput `pulumi:"match"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest priority.
	Priority pulumi.Float64Output `pulumi:"priority"`
	Project  pulumi.StringOutput  `pulumi:"project"`
	// An optional name for the rule. This field is not a unique identifier and can be updated.
	RuleName pulumi.StringPtrOutput `pulumi:"ruleName"`
	// Calculation of the complexity of a single firewall policy rule.
	RuleTupleCount pulumi.Float64Output `pulumi:"ruleTupleCount"`
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'mirror' and cannot be specified for other actions.
	SecurityProfileGroup pulumi.StringPtrOutput `pulumi:"securityProfileGroup"`
	// A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then
	// the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the
	// targetSecureTag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same
	// time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule
	// applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
	TargetSecureTags ComputeNetworkFirewallPolicyPacketMirroringRuleTargetSecureTagArrayOutput `pulumi:"targetSecureTags"`
	Timeouts         ComputeNetworkFirewallPolicyPacketMirroringRuleTimeoutsPtrOutput          `pulumi:"timeouts"`
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action = 'mirror' and cannot be set
	// for other actions.
	TlsInspect pulumi.BoolPtrOutput `pulumi:"tlsInspect"`
}

// NewComputeNetworkFirewallPolicyPacketMirroringRule registers a new resource with the given unique name, arguments, and options.
func NewComputeNetworkFirewallPolicyPacketMirroringRule(ctx *pulumi.Context,
	name string, args *ComputeNetworkFirewallPolicyPacketMirroringRuleArgs, opts ...pulumi.ResourceOption) (*ComputeNetworkFirewallPolicyPacketMirroringRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Direction == nil {
		return nil, errors.New("invalid value for required argument 'Direction'")
	}
	if args.FirewallPolicy == nil {
		return nil, errors.New("invalid value for required argument 'FirewallPolicy'")
	}
	if args.Match == nil {
		return nil, errors.New("invalid value for required argument 'Match'")
	}
	if args.Priority == nil {
		return nil, errors.New("invalid value for required argument 'Priority'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeNetworkFirewallPolicyPacketMirroringRule
	err = ctx.RegisterPackageResource("google-beta:index/computeNetworkFirewallPolicyPacketMirroringRule:ComputeNetworkFirewallPolicyPacketMirroringRule", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeNetworkFirewallPolicyPacketMirroringRule gets an existing ComputeNetworkFirewallPolicyPacketMirroringRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeNetworkFirewallPolicyPacketMirroringRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeNetworkFirewallPolicyPacketMirroringRuleState, opts ...pulumi.ResourceOption) (*ComputeNetworkFirewallPolicyPacketMirroringRule, error) {
	var resource ComputeNetworkFirewallPolicyPacketMirroringRule
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeNetworkFirewallPolicyPacketMirroringRule:ComputeNetworkFirewallPolicyPacketMirroringRule", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeNetworkFirewallPolicyPacketMirroringRule resources.
type computeNetworkFirewallPolicyPacketMirroringRuleState struct {
	// The Action to perform when the client connection triggers the rule. Valid actions are "mirror", "do_not_mirror",
	// "goto_next".
	Action                                            *string `pulumi:"action"`
	ComputeNetworkFirewallPolicyPacketMirroringRuleId *string `pulumi:"computeNetworkFirewallPolicyPacketMirroringRuleId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description for this resource.
	Description *string `pulumi:"description"`
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction *string `pulumi:"direction"`
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled *bool `pulumi:"disabled"`
	// The firewall policy of the resource.
	FirewallPolicy *string `pulumi:"firewallPolicy"`
	// Type of the resource. Always 'compute#packetMirroringRule' for firewall policy packet mirroring rules
	Kind *string `pulumi:"kind"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match *ComputeNetworkFirewallPolicyPacketMirroringRuleMatch `pulumi:"match"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest priority.
	Priority *float64 `pulumi:"priority"`
	Project  *string  `pulumi:"project"`
	// An optional name for the rule. This field is not a unique identifier and can be updated.
	RuleName *string `pulumi:"ruleName"`
	// Calculation of the complexity of a single firewall policy rule.
	RuleTupleCount *float64 `pulumi:"ruleTupleCount"`
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'mirror' and cannot be specified for other actions.
	SecurityProfileGroup *string `pulumi:"securityProfileGroup"`
	// A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then
	// the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the
	// targetSecureTag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same
	// time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule
	// applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
	TargetSecureTags []ComputeNetworkFirewallPolicyPacketMirroringRuleTargetSecureTag `pulumi:"targetSecureTags"`
	Timeouts         *ComputeNetworkFirewallPolicyPacketMirroringRuleTimeouts         `pulumi:"timeouts"`
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action = 'mirror' and cannot be set
	// for other actions.
	TlsInspect *bool `pulumi:"tlsInspect"`
}

type ComputeNetworkFirewallPolicyPacketMirroringRuleState struct {
	// The Action to perform when the client connection triggers the rule. Valid actions are "mirror", "do_not_mirror",
	// "goto_next".
	Action                                            pulumi.StringPtrInput
	ComputeNetworkFirewallPolicyPacketMirroringRuleId pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description for this resource.
	Description pulumi.StringPtrInput
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction pulumi.StringPtrInput
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled pulumi.BoolPtrInput
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringPtrInput
	// Type of the resource. Always 'compute#packetMirroringRule' for firewall policy packet mirroring rules
	Kind pulumi.StringPtrInput
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match ComputeNetworkFirewallPolicyPacketMirroringRuleMatchPtrInput
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest priority.
	Priority pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	// An optional name for the rule. This field is not a unique identifier and can be updated.
	RuleName pulumi.StringPtrInput
	// Calculation of the complexity of a single firewall policy rule.
	RuleTupleCount pulumi.Float64PtrInput
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'mirror' and cannot be specified for other actions.
	SecurityProfileGroup pulumi.StringPtrInput
	// A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then
	// the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the
	// targetSecureTag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same
	// time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule
	// applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
	TargetSecureTags ComputeNetworkFirewallPolicyPacketMirroringRuleTargetSecureTagArrayInput
	Timeouts         ComputeNetworkFirewallPolicyPacketMirroringRuleTimeoutsPtrInput
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action = 'mirror' and cannot be set
	// for other actions.
	TlsInspect pulumi.BoolPtrInput
}

func (ComputeNetworkFirewallPolicyPacketMirroringRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeNetworkFirewallPolicyPacketMirroringRuleState)(nil)).Elem()
}

type computeNetworkFirewallPolicyPacketMirroringRuleArgs struct {
	// The Action to perform when the client connection triggers the rule. Valid actions are "mirror", "do_not_mirror",
	// "goto_next".
	Action                                            string  `pulumi:"action"`
	ComputeNetworkFirewallPolicyPacketMirroringRuleId *string `pulumi:"computeNetworkFirewallPolicyPacketMirroringRuleId"`
	// An optional description for this resource.
	Description *string `pulumi:"description"`
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction string `pulumi:"direction"`
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled *bool `pulumi:"disabled"`
	// The firewall policy of the resource.
	FirewallPolicy string `pulumi:"firewallPolicy"`
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match ComputeNetworkFirewallPolicyPacketMirroringRuleMatch `pulumi:"match"`
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest priority.
	Priority float64 `pulumi:"priority"`
	Project  *string `pulumi:"project"`
	// An optional name for the rule. This field is not a unique identifier and can be updated.
	RuleName *string `pulumi:"ruleName"`
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'mirror' and cannot be specified for other actions.
	SecurityProfileGroup *string `pulumi:"securityProfileGroup"`
	// A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then
	// the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the
	// targetSecureTag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same
	// time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule
	// applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
	TargetSecureTags []ComputeNetworkFirewallPolicyPacketMirroringRuleTargetSecureTag `pulumi:"targetSecureTags"`
	Timeouts         *ComputeNetworkFirewallPolicyPacketMirroringRuleTimeouts         `pulumi:"timeouts"`
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action = 'mirror' and cannot be set
	// for other actions.
	TlsInspect *bool `pulumi:"tlsInspect"`
}

// The set of arguments for constructing a ComputeNetworkFirewallPolicyPacketMirroringRule resource.
type ComputeNetworkFirewallPolicyPacketMirroringRuleArgs struct {
	// The Action to perform when the client connection triggers the rule. Valid actions are "mirror", "do_not_mirror",
	// "goto_next".
	Action                                            pulumi.StringInput
	ComputeNetworkFirewallPolicyPacketMirroringRuleId pulumi.StringPtrInput
	// An optional description for this resource.
	Description pulumi.StringPtrInput
	// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
	Direction pulumi.StringInput
	// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
	// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
	Disabled pulumi.BoolPtrInput
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringInput
	// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
	// enforced.
	Match ComputeNetworkFirewallPolicyPacketMirroringRuleMatchInput
	// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
	// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
	// lowest priority.
	Priority pulumi.Float64Input
	Project  pulumi.StringPtrInput
	// An optional name for the rule. This field is not a unique identifier and can be updated.
	RuleName pulumi.StringPtrInput
	// A fully-qualified URL of a SecurityProfile resource instance. Example:
	// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
	// Must be specified if action = 'mirror' and cannot be specified for other actions.
	SecurityProfileGroup pulumi.StringPtrInput
	// A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then
	// the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the
	// targetSecureTag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same
	// time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule
	// applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
	TargetSecureTags ComputeNetworkFirewallPolicyPacketMirroringRuleTargetSecureTagArrayInput
	Timeouts         ComputeNetworkFirewallPolicyPacketMirroringRuleTimeoutsPtrInput
	// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action = 'mirror' and cannot be set
	// for other actions.
	TlsInspect pulumi.BoolPtrInput
}

func (ComputeNetworkFirewallPolicyPacketMirroringRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeNetworkFirewallPolicyPacketMirroringRuleArgs)(nil)).Elem()
}

type ComputeNetworkFirewallPolicyPacketMirroringRuleInput interface {
	pulumi.Input

	ToComputeNetworkFirewallPolicyPacketMirroringRuleOutput() ComputeNetworkFirewallPolicyPacketMirroringRuleOutput
	ToComputeNetworkFirewallPolicyPacketMirroringRuleOutputWithContext(ctx context.Context) ComputeNetworkFirewallPolicyPacketMirroringRuleOutput
}

func (*ComputeNetworkFirewallPolicyPacketMirroringRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNetworkFirewallPolicyPacketMirroringRule)(nil)).Elem()
}

func (i *ComputeNetworkFirewallPolicyPacketMirroringRule) ToComputeNetworkFirewallPolicyPacketMirroringRuleOutput() ComputeNetworkFirewallPolicyPacketMirroringRuleOutput {
	return i.ToComputeNetworkFirewallPolicyPacketMirroringRuleOutputWithContext(context.Background())
}

func (i *ComputeNetworkFirewallPolicyPacketMirroringRule) ToComputeNetworkFirewallPolicyPacketMirroringRuleOutputWithContext(ctx context.Context) ComputeNetworkFirewallPolicyPacketMirroringRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeNetworkFirewallPolicyPacketMirroringRuleOutput)
}

type ComputeNetworkFirewallPolicyPacketMirroringRuleOutput struct{ *pulumi.OutputState }

func (ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNetworkFirewallPolicyPacketMirroringRule)(nil)).Elem()
}

func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) ToComputeNetworkFirewallPolicyPacketMirroringRuleOutput() ComputeNetworkFirewallPolicyPacketMirroringRuleOutput {
	return o
}

func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) ToComputeNetworkFirewallPolicyPacketMirroringRuleOutputWithContext(ctx context.Context) ComputeNetworkFirewallPolicyPacketMirroringRuleOutput {
	return o
}

// The Action to perform when the client connection triggers the rule. Valid actions are "mirror", "do_not_mirror",
// "goto_next".
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) ComputeNetworkFirewallPolicyPacketMirroringRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringOutput {
		return v.ComputeNetworkFirewallPolicyPacketMirroringRuleId
	}).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringOutput {
		return v.CreationTimestamp
	}).(pulumi.StringOutput)
}

// An optional description for this resource.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The direction in which this rule applies. Possible values: ["INGRESS", "EGRESS"]
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringOutput { return v.Direction }).(pulumi.StringOutput)
}

// Denotes whether the firewall policy rule is disabled. When set to true, the firewall policy rule is not enforced and
// traffic behaves as if it did not exist. If this is unspecified, the firewall policy rule will be enabled.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The firewall policy of the resource.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) FirewallPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringOutput { return v.FirewallPolicy }).(pulumi.StringOutput)
}

// Type of the resource. Always 'compute#packetMirroringRule' for firewall policy packet mirroring rules
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is
// enforced.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) Match() ComputeNetworkFirewallPolicyPacketMirroringRuleMatchOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) ComputeNetworkFirewallPolicyPacketMirroringRuleMatchOutput {
		return v.Match
	}).(ComputeNetworkFirewallPolicyPacketMirroringRuleMatchOutput)
}

// An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and
// 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the
// lowest priority.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) Priority() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.Float64Output { return v.Priority }).(pulumi.Float64Output)
}

func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// An optional name for the rule. This field is not a unique identifier and can be updated.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringPtrOutput { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Calculation of the complexity of a single firewall policy rule.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) RuleTupleCount() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.Float64Output { return v.RuleTupleCount }).(pulumi.Float64Output)
}

// A fully-qualified URL of a SecurityProfile resource instance. Example:
// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
// Must be specified if action = 'mirror' and cannot be specified for other actions.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) SecurityProfileGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.StringPtrOutput {
		return v.SecurityProfileGroup
	}).(pulumi.StringPtrOutput)
}

// A list of secure tags that controls which instances the firewall rule applies to. If targetSecureTag are specified, then
// the firewall rule applies only to instances in the VPC network that have one of those EFFECTIVE secure tags, if all the
// targetSecureTag are in INEFFECTIVE state, then this rule will be ignored. targetSecureTag may not be set at the same
// time as targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag are specified, the firewall rule
// applies to all instances on the specified network. Maximum number of target label tags allowed is 256.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) TargetSecureTags() ComputeNetworkFirewallPolicyPacketMirroringRuleTargetSecureTagArrayOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) ComputeNetworkFirewallPolicyPacketMirroringRuleTargetSecureTagArrayOutput {
		return v.TargetSecureTags
	}).(ComputeNetworkFirewallPolicyPacketMirroringRuleTargetSecureTagArrayOutput)
}

func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) Timeouts() ComputeNetworkFirewallPolicyPacketMirroringRuleTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) ComputeNetworkFirewallPolicyPacketMirroringRuleTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputeNetworkFirewallPolicyPacketMirroringRuleTimeoutsPtrOutput)
}

// Boolean flag indicating if the traffic should be TLS decrypted. Can be set only if action = 'mirror' and cannot be set
// for other actions.
func (o ComputeNetworkFirewallPolicyPacketMirroringRuleOutput) TlsInspect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeNetworkFirewallPolicyPacketMirroringRule) pulumi.BoolPtrOutput { return v.TlsInspect }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeNetworkFirewallPolicyPacketMirroringRuleInput)(nil)).Elem(), &ComputeNetworkFirewallPolicyPacketMirroringRule{})
	pulumi.RegisterOutputType(ComputeNetworkFirewallPolicyPacketMirroringRuleOutput{})
}
