// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkbenchInstanceIamPolicy struct {
	pulumi.CustomResourceState

	Etag                         pulumi.StringOutput `pulumi:"etag"`
	Location                     pulumi.StringOutput `pulumi:"location"`
	Name                         pulumi.StringOutput `pulumi:"name"`
	PolicyData                   pulumi.StringOutput `pulumi:"policyData"`
	Project                      pulumi.StringOutput `pulumi:"project"`
	WorkbenchInstanceIamPolicyId pulumi.StringOutput `pulumi:"workbenchInstanceIamPolicyId"`
}

// NewWorkbenchInstanceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewWorkbenchInstanceIamPolicy(ctx *pulumi.Context,
	name string, args *WorkbenchInstanceIamPolicyArgs, opts ...pulumi.ResourceOption) (*WorkbenchInstanceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource WorkbenchInstanceIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/workbenchInstanceIamPolicy:WorkbenchInstanceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkbenchInstanceIamPolicy gets an existing WorkbenchInstanceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkbenchInstanceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkbenchInstanceIamPolicyState, opts ...pulumi.ResourceOption) (*WorkbenchInstanceIamPolicy, error) {
	var resource WorkbenchInstanceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/workbenchInstanceIamPolicy:WorkbenchInstanceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkbenchInstanceIamPolicy resources.
type workbenchInstanceIamPolicyState struct {
	Etag                         *string `pulumi:"etag"`
	Location                     *string `pulumi:"location"`
	Name                         *string `pulumi:"name"`
	PolicyData                   *string `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
	WorkbenchInstanceIamPolicyId *string `pulumi:"workbenchInstanceIamPolicyId"`
}

type WorkbenchInstanceIamPolicyState struct {
	Etag                         pulumi.StringPtrInput
	Location                     pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	PolicyData                   pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	WorkbenchInstanceIamPolicyId pulumi.StringPtrInput
}

func (WorkbenchInstanceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*workbenchInstanceIamPolicyState)(nil)).Elem()
}

type workbenchInstanceIamPolicyArgs struct {
	Location                     *string `pulumi:"location"`
	Name                         *string `pulumi:"name"`
	PolicyData                   string  `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
	WorkbenchInstanceIamPolicyId *string `pulumi:"workbenchInstanceIamPolicyId"`
}

// The set of arguments for constructing a WorkbenchInstanceIamPolicy resource.
type WorkbenchInstanceIamPolicyArgs struct {
	Location                     pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	PolicyData                   pulumi.StringInput
	Project                      pulumi.StringPtrInput
	WorkbenchInstanceIamPolicyId pulumi.StringPtrInput
}

func (WorkbenchInstanceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workbenchInstanceIamPolicyArgs)(nil)).Elem()
}

type WorkbenchInstanceIamPolicyInput interface {
	pulumi.Input

	ToWorkbenchInstanceIamPolicyOutput() WorkbenchInstanceIamPolicyOutput
	ToWorkbenchInstanceIamPolicyOutputWithContext(ctx context.Context) WorkbenchInstanceIamPolicyOutput
}

func (*WorkbenchInstanceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbenchInstanceIamPolicy)(nil)).Elem()
}

func (i *WorkbenchInstanceIamPolicy) ToWorkbenchInstanceIamPolicyOutput() WorkbenchInstanceIamPolicyOutput {
	return i.ToWorkbenchInstanceIamPolicyOutputWithContext(context.Background())
}

func (i *WorkbenchInstanceIamPolicy) ToWorkbenchInstanceIamPolicyOutputWithContext(ctx context.Context) WorkbenchInstanceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbenchInstanceIamPolicyOutput)
}

type WorkbenchInstanceIamPolicyOutput struct{ *pulumi.OutputState }

func (WorkbenchInstanceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbenchInstanceIamPolicy)(nil)).Elem()
}

func (o WorkbenchInstanceIamPolicyOutput) ToWorkbenchInstanceIamPolicyOutput() WorkbenchInstanceIamPolicyOutput {
	return o
}

func (o WorkbenchInstanceIamPolicyOutput) ToWorkbenchInstanceIamPolicyOutputWithContext(ctx context.Context) WorkbenchInstanceIamPolicyOutput {
	return o
}

func (o WorkbenchInstanceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamPolicyOutput) WorkbenchInstanceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamPolicy) pulumi.StringOutput { return v.WorkbenchInstanceIamPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkbenchInstanceIamPolicyInput)(nil)).Elem(), &WorkbenchInstanceIamPolicy{})
	pulumi.RegisterOutputType(WorkbenchInstanceIamPolicyOutput{})
}
