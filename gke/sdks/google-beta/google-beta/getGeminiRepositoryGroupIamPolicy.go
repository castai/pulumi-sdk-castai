// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupGeminiRepositoryGroupIamPolicy(ctx *pulumi.Context, args *LookupGeminiRepositoryGroupIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupGeminiRepositoryGroupIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupGeminiRepositoryGroupIamPolicyResult
	err = ctx.InvokePackage("google-beta:index/getGeminiRepositoryGroupIamPolicy:getGeminiRepositoryGroupIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGeminiRepositoryGroupIamPolicy.
type LookupGeminiRepositoryGroupIamPolicyArgs struct {
	CodeRepositoryIndex string  `pulumi:"codeRepositoryIndex"`
	Id                  *string `pulumi:"id"`
	Location            *string `pulumi:"location"`
	Project             *string `pulumi:"project"`
	RepositoryGroupId   string  `pulumi:"repositoryGroupId"`
}

// A collection of values returned by getGeminiRepositoryGroupIamPolicy.
type LookupGeminiRepositoryGroupIamPolicyResult struct {
	CodeRepositoryIndex string `pulumi:"codeRepositoryIndex"`
	Etag                string `pulumi:"etag"`
	Id                  string `pulumi:"id"`
	Location            string `pulumi:"location"`
	PolicyData          string `pulumi:"policyData"`
	Project             string `pulumi:"project"`
	RepositoryGroupId   string `pulumi:"repositoryGroupId"`
}

func LookupGeminiRepositoryGroupIamPolicyOutput(ctx *pulumi.Context, args LookupGeminiRepositoryGroupIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupGeminiRepositoryGroupIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGeminiRepositoryGroupIamPolicyResultOutput, error) {
			args := v.(LookupGeminiRepositoryGroupIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupGeminiRepositoryGroupIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getGeminiRepositoryGroupIamPolicy:getGeminiRepositoryGroupIamPolicy", args, LookupGeminiRepositoryGroupIamPolicyResultOutput{}, options).(LookupGeminiRepositoryGroupIamPolicyResultOutput), nil
		}).(LookupGeminiRepositoryGroupIamPolicyResultOutput)
}

// A collection of arguments for invoking getGeminiRepositoryGroupIamPolicy.
type LookupGeminiRepositoryGroupIamPolicyOutputArgs struct {
	CodeRepositoryIndex pulumi.StringInput    `pulumi:"codeRepositoryIndex"`
	Id                  pulumi.StringPtrInput `pulumi:"id"`
	Location            pulumi.StringPtrInput `pulumi:"location"`
	Project             pulumi.StringPtrInput `pulumi:"project"`
	RepositoryGroupId   pulumi.StringInput    `pulumi:"repositoryGroupId"`
}

func (LookupGeminiRepositoryGroupIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeminiRepositoryGroupIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getGeminiRepositoryGroupIamPolicy.
type LookupGeminiRepositoryGroupIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupGeminiRepositoryGroupIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeminiRepositoryGroupIamPolicyResult)(nil)).Elem()
}

func (o LookupGeminiRepositoryGroupIamPolicyResultOutput) ToLookupGeminiRepositoryGroupIamPolicyResultOutput() LookupGeminiRepositoryGroupIamPolicyResultOutput {
	return o
}

func (o LookupGeminiRepositoryGroupIamPolicyResultOutput) ToLookupGeminiRepositoryGroupIamPolicyResultOutputWithContext(ctx context.Context) LookupGeminiRepositoryGroupIamPolicyResultOutput {
	return o
}

func (o LookupGeminiRepositoryGroupIamPolicyResultOutput) CodeRepositoryIndex() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeminiRepositoryGroupIamPolicyResult) string { return v.CodeRepositoryIndex }).(pulumi.StringOutput)
}

func (o LookupGeminiRepositoryGroupIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeminiRepositoryGroupIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupGeminiRepositoryGroupIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeminiRepositoryGroupIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupGeminiRepositoryGroupIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeminiRepositoryGroupIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupGeminiRepositoryGroupIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeminiRepositoryGroupIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupGeminiRepositoryGroupIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeminiRepositoryGroupIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupGeminiRepositoryGroupIamPolicyResultOutput) RepositoryGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGeminiRepositoryGroupIamPolicyResult) string { return v.RepositoryGroupId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGeminiRepositoryGroupIamPolicyResultOutput{})
}
