// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LookerInstance struct {
	pulumi.CustomResourceState

	// Looker instance Admin settings.
	AdminSettings LookerInstanceAdminSettingsPtrOutput `pulumi:"adminSettings"`
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network} Note that the
	// consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
	ConsumerNetwork pulumi.StringPtrOutput `pulumi:"consumerNetwork"`
	// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Custom domain settings for a Looker instance.
	CustomDomain LookerInstanceCustomDomainPtrOutput `pulumi:"customDomain"`
	// Policy to determine if the cluster should be deleted forcefully. If setting deletion_policy = "FORCE", the Looker
	// instance will be deleted regardless of its nested resources. If set to "DEFAULT", Looker instances that still have
	// nested resources will return an error. Possible values: DEFAULT, FORCE
	DeletionPolicy pulumi.StringPtrOutput `pulumi:"deletionPolicy"`
	// Maintenance denial period for this instance. You must allow at least 14 days of maintenance availability between any two
	// deny maintenance periods.
	DenyMaintenancePeriod LookerInstanceDenyMaintenancePeriodPtrOutput `pulumi:"denyMaintenancePeriod"`
	// Public Egress IP (IPv4).
	EgressPublicIp pulumi.StringOutput `pulumi:"egressPublicIp"`
	// Looker instance encryption settings.
	EncryptionConfig LookerInstanceEncryptionConfigPtrOutput `pulumi:"encryptionConfig"`
	// FIPS 140-2 Encryption enablement for Looker (Google Cloud Core).
	FipsEnabled pulumi.BoolPtrOutput `pulumi:"fipsEnabled"`
	// Private Ingress IP (IPv4).
	IngressPrivateIp pulumi.StringOutput `pulumi:"ingressPrivateIp"`
	// Public Ingress IP (IPv4).
	IngressPublicIp  pulumi.StringOutput `pulumi:"ingressPublicIp"`
	LookerInstanceId pulumi.StringOutput `pulumi:"lookerInstanceId"`
	// Looker instance URI which can be used to access the Looker Instance UI.
	LookerUri pulumi.StringOutput `pulumi:"lookerUri"`
	// The Looker version that the instance is using.
	LookerVersion pulumi.StringOutput `pulumi:"lookerVersion"`
	// Maintenance window for an instance. Maintenance of your instance takes place once a month, and will require your
	// instance to be restarted during updates, which will temporarily disrupt service.
	MaintenanceWindow LookerInstanceMaintenanceWindowPtrOutput `pulumi:"maintenanceWindow"`
	// The ID of the instance or a fully qualified identifier for the instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// Looker Instance OAuth login settings.
	OauthConfig LookerInstanceOauthConfigOutput `pulumi:"oauthConfig"`
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of
	// these values: - LOOKER_CORE_TRIAL: trial instance (Currently Unavailable) - LOOKER_CORE_STANDARD: pay as you go standard
	// instance (Currently Unavailable) - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance -
	// LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_CORE_NONPROD_STANDARD_ANNUAL: nonprod subscription standard instance - LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL:
	//   nonprod subscription enterprise instance - LOOKER_CORE_NONPROD_EMBED_ANNUAL: nonprod subscription embed instance Default
	//   value: "LOOKER_CORE_TRIAL" Possible values: ["LOOKER_CORE_TRIAL", "LOOKER_CORE_STANDARD", "LOOKER_CORE_STANDARD_ANNUAL",
	//   "LOOKER_CORE_ENTERPRISE_ANNUAL", "LOOKER_CORE_EMBED_ANNUAL", "LOOKER_CORE_NONPROD_STANDARD_ANNUAL",
	//   "LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL", "LOOKER_CORE_NONPROD_EMBED_ANNUAL"]
	PlatformEdition pulumi.StringPtrOutput `pulumi:"platformEdition"`
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled pulumi.BoolPtrOutput `pulumi:"privateIpEnabled"`
	Project          pulumi.StringOutput  `pulumi:"project"`
	// Information for Private Service Connect (PSC) setup for a Looker instance.
	PscConfig LookerInstancePscConfigPtrOutput `pulumi:"pscConfig"`
	// Whether Public Service Connect (PSC) is enabled on the Looker instance
	PscEnabled pulumi.BoolPtrOutput `pulumi:"pscEnabled"`
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled pulumi.BoolPtrOutput `pulumi:"publicIpEnabled"`
	// The name of the Looker region of the instance.
	Region pulumi.StringOutput `pulumi:"region"`
	// Name of a reserved IP address range within the consumer network, to be used for private service access connection. User
	// may or may not specify this in a request.
	ReservedRange pulumi.StringPtrOutput          `pulumi:"reservedRange"`
	Timeouts      LookerInstanceTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time the instance was updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Metadata about users for a Looker instance. These settings are only available when platform edition LOOKER_CORE_STANDARD
	// is set. There are ten Standard and two Developer users included in the cost of the product. You can allocate additional
	// Standard, Viewer, and Developer users for this instance. It is an optional step and can be modified later. With the
	// Standard edition of Looker (Google Cloud core), you can provision up to 50 total users, distributed across Viewer,
	// Standard, and Developer.
	UserMetadata LookerInstanceUserMetadataPtrOutput `pulumi:"userMetadata"`
}

// NewLookerInstance registers a new resource with the given unique name, arguments, and options.
func NewLookerInstance(ctx *pulumi.Context,
	name string, args *LookerInstanceArgs, opts ...pulumi.ResourceOption) (*LookerInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OauthConfig == nil {
		return nil, errors.New("invalid value for required argument 'OauthConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource LookerInstance
	err = ctx.RegisterPackageResource("google-beta:index/lookerInstance:LookerInstance", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLookerInstance gets an existing LookerInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLookerInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LookerInstanceState, opts ...pulumi.ResourceOption) (*LookerInstance, error) {
	var resource LookerInstance
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/lookerInstance:LookerInstance", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LookerInstance resources.
type lookerInstanceState struct {
	// Looker instance Admin settings.
	AdminSettings *LookerInstanceAdminSettings `pulumi:"adminSettings"`
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network} Note that the
	// consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
	ConsumerNetwork *string `pulumi:"consumerNetwork"`
	// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	CreateTime *string `pulumi:"createTime"`
	// Custom domain settings for a Looker instance.
	CustomDomain *LookerInstanceCustomDomain `pulumi:"customDomain"`
	// Policy to determine if the cluster should be deleted forcefully. If setting deletion_policy = "FORCE", the Looker
	// instance will be deleted regardless of its nested resources. If set to "DEFAULT", Looker instances that still have
	// nested resources will return an error. Possible values: DEFAULT, FORCE
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// Maintenance denial period for this instance. You must allow at least 14 days of maintenance availability between any two
	// deny maintenance periods.
	DenyMaintenancePeriod *LookerInstanceDenyMaintenancePeriod `pulumi:"denyMaintenancePeriod"`
	// Public Egress IP (IPv4).
	EgressPublicIp *string `pulumi:"egressPublicIp"`
	// Looker instance encryption settings.
	EncryptionConfig *LookerInstanceEncryptionConfig `pulumi:"encryptionConfig"`
	// FIPS 140-2 Encryption enablement for Looker (Google Cloud Core).
	FipsEnabled *bool `pulumi:"fipsEnabled"`
	// Private Ingress IP (IPv4).
	IngressPrivateIp *string `pulumi:"ingressPrivateIp"`
	// Public Ingress IP (IPv4).
	IngressPublicIp  *string `pulumi:"ingressPublicIp"`
	LookerInstanceId *string `pulumi:"lookerInstanceId"`
	// Looker instance URI which can be used to access the Looker Instance UI.
	LookerUri *string `pulumi:"lookerUri"`
	// The Looker version that the instance is using.
	LookerVersion *string `pulumi:"lookerVersion"`
	// Maintenance window for an instance. Maintenance of your instance takes place once a month, and will require your
	// instance to be restarted during updates, which will temporarily disrupt service.
	MaintenanceWindow *LookerInstanceMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The ID of the instance or a fully qualified identifier for the instance.
	Name *string `pulumi:"name"`
	// Looker Instance OAuth login settings.
	OauthConfig *LookerInstanceOauthConfig `pulumi:"oauthConfig"`
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of
	// these values: - LOOKER_CORE_TRIAL: trial instance (Currently Unavailable) - LOOKER_CORE_STANDARD: pay as you go standard
	// instance (Currently Unavailable) - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance -
	// LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_CORE_NONPROD_STANDARD_ANNUAL: nonprod subscription standard instance - LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL:
	//   nonprod subscription enterprise instance - LOOKER_CORE_NONPROD_EMBED_ANNUAL: nonprod subscription embed instance Default
	//   value: "LOOKER_CORE_TRIAL" Possible values: ["LOOKER_CORE_TRIAL", "LOOKER_CORE_STANDARD", "LOOKER_CORE_STANDARD_ANNUAL",
	//   "LOOKER_CORE_ENTERPRISE_ANNUAL", "LOOKER_CORE_EMBED_ANNUAL", "LOOKER_CORE_NONPROD_STANDARD_ANNUAL",
	//   "LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL", "LOOKER_CORE_NONPROD_EMBED_ANNUAL"]
	PlatformEdition *string `pulumi:"platformEdition"`
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled *bool   `pulumi:"privateIpEnabled"`
	Project          *string `pulumi:"project"`
	// Information for Private Service Connect (PSC) setup for a Looker instance.
	PscConfig *LookerInstancePscConfig `pulumi:"pscConfig"`
	// Whether Public Service Connect (PSC) is enabled on the Looker instance
	PscEnabled *bool `pulumi:"pscEnabled"`
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled *bool `pulumi:"publicIpEnabled"`
	// The name of the Looker region of the instance.
	Region *string `pulumi:"region"`
	// Name of a reserved IP address range within the consumer network, to be used for private service access connection. User
	// may or may not specify this in a request.
	ReservedRange *string                 `pulumi:"reservedRange"`
	Timeouts      *LookerInstanceTimeouts `pulumi:"timeouts"`
	// The time the instance was updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	UpdateTime *string `pulumi:"updateTime"`
	// Metadata about users for a Looker instance. These settings are only available when platform edition LOOKER_CORE_STANDARD
	// is set. There are ten Standard and two Developer users included in the cost of the product. You can allocate additional
	// Standard, Viewer, and Developer users for this instance. It is an optional step and can be modified later. With the
	// Standard edition of Looker (Google Cloud core), you can provision up to 50 total users, distributed across Viewer,
	// Standard, and Developer.
	UserMetadata *LookerInstanceUserMetadata `pulumi:"userMetadata"`
}

type LookerInstanceState struct {
	// Looker instance Admin settings.
	AdminSettings LookerInstanceAdminSettingsPtrInput
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network} Note that the
	// consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
	ConsumerNetwork pulumi.StringPtrInput
	// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	CreateTime pulumi.StringPtrInput
	// Custom domain settings for a Looker instance.
	CustomDomain LookerInstanceCustomDomainPtrInput
	// Policy to determine if the cluster should be deleted forcefully. If setting deletion_policy = "FORCE", the Looker
	// instance will be deleted regardless of its nested resources. If set to "DEFAULT", Looker instances that still have
	// nested resources will return an error. Possible values: DEFAULT, FORCE
	DeletionPolicy pulumi.StringPtrInput
	// Maintenance denial period for this instance. You must allow at least 14 days of maintenance availability between any two
	// deny maintenance periods.
	DenyMaintenancePeriod LookerInstanceDenyMaintenancePeriodPtrInput
	// Public Egress IP (IPv4).
	EgressPublicIp pulumi.StringPtrInput
	// Looker instance encryption settings.
	EncryptionConfig LookerInstanceEncryptionConfigPtrInput
	// FIPS 140-2 Encryption enablement for Looker (Google Cloud Core).
	FipsEnabled pulumi.BoolPtrInput
	// Private Ingress IP (IPv4).
	IngressPrivateIp pulumi.StringPtrInput
	// Public Ingress IP (IPv4).
	IngressPublicIp  pulumi.StringPtrInput
	LookerInstanceId pulumi.StringPtrInput
	// Looker instance URI which can be used to access the Looker Instance UI.
	LookerUri pulumi.StringPtrInput
	// The Looker version that the instance is using.
	LookerVersion pulumi.StringPtrInput
	// Maintenance window for an instance. Maintenance of your instance takes place once a month, and will require your
	// instance to be restarted during updates, which will temporarily disrupt service.
	MaintenanceWindow LookerInstanceMaintenanceWindowPtrInput
	// The ID of the instance or a fully qualified identifier for the instance.
	Name pulumi.StringPtrInput
	// Looker Instance OAuth login settings.
	OauthConfig LookerInstanceOauthConfigPtrInput
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of
	// these values: - LOOKER_CORE_TRIAL: trial instance (Currently Unavailable) - LOOKER_CORE_STANDARD: pay as you go standard
	// instance (Currently Unavailable) - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance -
	// LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_CORE_NONPROD_STANDARD_ANNUAL: nonprod subscription standard instance - LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL:
	//   nonprod subscription enterprise instance - LOOKER_CORE_NONPROD_EMBED_ANNUAL: nonprod subscription embed instance Default
	//   value: "LOOKER_CORE_TRIAL" Possible values: ["LOOKER_CORE_TRIAL", "LOOKER_CORE_STANDARD", "LOOKER_CORE_STANDARD_ANNUAL",
	//   "LOOKER_CORE_ENTERPRISE_ANNUAL", "LOOKER_CORE_EMBED_ANNUAL", "LOOKER_CORE_NONPROD_STANDARD_ANNUAL",
	//   "LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL", "LOOKER_CORE_NONPROD_EMBED_ANNUAL"]
	PlatformEdition pulumi.StringPtrInput
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled pulumi.BoolPtrInput
	Project          pulumi.StringPtrInput
	// Information for Private Service Connect (PSC) setup for a Looker instance.
	PscConfig LookerInstancePscConfigPtrInput
	// Whether Public Service Connect (PSC) is enabled on the Looker instance
	PscEnabled pulumi.BoolPtrInput
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled pulumi.BoolPtrInput
	// The name of the Looker region of the instance.
	Region pulumi.StringPtrInput
	// Name of a reserved IP address range within the consumer network, to be used for private service access connection. User
	// may or may not specify this in a request.
	ReservedRange pulumi.StringPtrInput
	Timeouts      LookerInstanceTimeoutsPtrInput
	// The time the instance was updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	UpdateTime pulumi.StringPtrInput
	// Metadata about users for a Looker instance. These settings are only available when platform edition LOOKER_CORE_STANDARD
	// is set. There are ten Standard and two Developer users included in the cost of the product. You can allocate additional
	// Standard, Viewer, and Developer users for this instance. It is an optional step and can be modified later. With the
	// Standard edition of Looker (Google Cloud core), you can provision up to 50 total users, distributed across Viewer,
	// Standard, and Developer.
	UserMetadata LookerInstanceUserMetadataPtrInput
}

func (LookerInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*lookerInstanceState)(nil)).Elem()
}

type lookerInstanceArgs struct {
	// Looker instance Admin settings.
	AdminSettings *LookerInstanceAdminSettings `pulumi:"adminSettings"`
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network} Note that the
	// consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
	ConsumerNetwork *string `pulumi:"consumerNetwork"`
	// Custom domain settings for a Looker instance.
	CustomDomain *LookerInstanceCustomDomain `pulumi:"customDomain"`
	// Policy to determine if the cluster should be deleted forcefully. If setting deletion_policy = "FORCE", the Looker
	// instance will be deleted regardless of its nested resources. If set to "DEFAULT", Looker instances that still have
	// nested resources will return an error. Possible values: DEFAULT, FORCE
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// Maintenance denial period for this instance. You must allow at least 14 days of maintenance availability between any two
	// deny maintenance periods.
	DenyMaintenancePeriod *LookerInstanceDenyMaintenancePeriod `pulumi:"denyMaintenancePeriod"`
	// Looker instance encryption settings.
	EncryptionConfig *LookerInstanceEncryptionConfig `pulumi:"encryptionConfig"`
	// FIPS 140-2 Encryption enablement for Looker (Google Cloud Core).
	FipsEnabled      *bool   `pulumi:"fipsEnabled"`
	LookerInstanceId *string `pulumi:"lookerInstanceId"`
	// Maintenance window for an instance. Maintenance of your instance takes place once a month, and will require your
	// instance to be restarted during updates, which will temporarily disrupt service.
	MaintenanceWindow *LookerInstanceMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The ID of the instance or a fully qualified identifier for the instance.
	Name *string `pulumi:"name"`
	// Looker Instance OAuth login settings.
	OauthConfig LookerInstanceOauthConfig `pulumi:"oauthConfig"`
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of
	// these values: - LOOKER_CORE_TRIAL: trial instance (Currently Unavailable) - LOOKER_CORE_STANDARD: pay as you go standard
	// instance (Currently Unavailable) - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance -
	// LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_CORE_NONPROD_STANDARD_ANNUAL: nonprod subscription standard instance - LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL:
	//   nonprod subscription enterprise instance - LOOKER_CORE_NONPROD_EMBED_ANNUAL: nonprod subscription embed instance Default
	//   value: "LOOKER_CORE_TRIAL" Possible values: ["LOOKER_CORE_TRIAL", "LOOKER_CORE_STANDARD", "LOOKER_CORE_STANDARD_ANNUAL",
	//   "LOOKER_CORE_ENTERPRISE_ANNUAL", "LOOKER_CORE_EMBED_ANNUAL", "LOOKER_CORE_NONPROD_STANDARD_ANNUAL",
	//   "LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL", "LOOKER_CORE_NONPROD_EMBED_ANNUAL"]
	PlatformEdition *string `pulumi:"platformEdition"`
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled *bool   `pulumi:"privateIpEnabled"`
	Project          *string `pulumi:"project"`
	// Information for Private Service Connect (PSC) setup for a Looker instance.
	PscConfig *LookerInstancePscConfig `pulumi:"pscConfig"`
	// Whether Public Service Connect (PSC) is enabled on the Looker instance
	PscEnabled *bool `pulumi:"pscEnabled"`
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled *bool `pulumi:"publicIpEnabled"`
	// The name of the Looker region of the instance.
	Region *string `pulumi:"region"`
	// Name of a reserved IP address range within the consumer network, to be used for private service access connection. User
	// may or may not specify this in a request.
	ReservedRange *string                 `pulumi:"reservedRange"`
	Timeouts      *LookerInstanceTimeouts `pulumi:"timeouts"`
	// Metadata about users for a Looker instance. These settings are only available when platform edition LOOKER_CORE_STANDARD
	// is set. There are ten Standard and two Developer users included in the cost of the product. You can allocate additional
	// Standard, Viewer, and Developer users for this instance. It is an optional step and can be modified later. With the
	// Standard edition of Looker (Google Cloud core), you can provision up to 50 total users, distributed across Viewer,
	// Standard, and Developer.
	UserMetadata *LookerInstanceUserMetadata `pulumi:"userMetadata"`
}

// The set of arguments for constructing a LookerInstance resource.
type LookerInstanceArgs struct {
	// Looker instance Admin settings.
	AdminSettings LookerInstanceAdminSettingsPtrInput
	// Network name in the consumer project in the format of: projects/{project}/global/networks/{network} Note that the
	// consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
	ConsumerNetwork pulumi.StringPtrInput
	// Custom domain settings for a Looker instance.
	CustomDomain LookerInstanceCustomDomainPtrInput
	// Policy to determine if the cluster should be deleted forcefully. If setting deletion_policy = "FORCE", the Looker
	// instance will be deleted regardless of its nested resources. If set to "DEFAULT", Looker instances that still have
	// nested resources will return an error. Possible values: DEFAULT, FORCE
	DeletionPolicy pulumi.StringPtrInput
	// Maintenance denial period for this instance. You must allow at least 14 days of maintenance availability between any two
	// deny maintenance periods.
	DenyMaintenancePeriod LookerInstanceDenyMaintenancePeriodPtrInput
	// Looker instance encryption settings.
	EncryptionConfig LookerInstanceEncryptionConfigPtrInput
	// FIPS 140-2 Encryption enablement for Looker (Google Cloud Core).
	FipsEnabled      pulumi.BoolPtrInput
	LookerInstanceId pulumi.StringPtrInput
	// Maintenance window for an instance. Maintenance of your instance takes place once a month, and will require your
	// instance to be restarted during updates, which will temporarily disrupt service.
	MaintenanceWindow LookerInstanceMaintenanceWindowPtrInput
	// The ID of the instance or a fully qualified identifier for the instance.
	Name pulumi.StringPtrInput
	// Looker Instance OAuth login settings.
	OauthConfig LookerInstanceOauthConfigInput
	// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of
	// these values: - LOOKER_CORE_TRIAL: trial instance (Currently Unavailable) - LOOKER_CORE_STANDARD: pay as you go standard
	// instance (Currently Unavailable) - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance -
	// LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
	// - LOOKER_CORE_NONPROD_STANDARD_ANNUAL: nonprod subscription standard instance - LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL:
	//   nonprod subscription enterprise instance - LOOKER_CORE_NONPROD_EMBED_ANNUAL: nonprod subscription embed instance Default
	//   value: "LOOKER_CORE_TRIAL" Possible values: ["LOOKER_CORE_TRIAL", "LOOKER_CORE_STANDARD", "LOOKER_CORE_STANDARD_ANNUAL",
	//   "LOOKER_CORE_ENTERPRISE_ANNUAL", "LOOKER_CORE_EMBED_ANNUAL", "LOOKER_CORE_NONPROD_STANDARD_ANNUAL",
	//   "LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL", "LOOKER_CORE_NONPROD_EMBED_ANNUAL"]
	PlatformEdition pulumi.StringPtrInput
	// Whether private IP is enabled on the Looker instance.
	PrivateIpEnabled pulumi.BoolPtrInput
	Project          pulumi.StringPtrInput
	// Information for Private Service Connect (PSC) setup for a Looker instance.
	PscConfig LookerInstancePscConfigPtrInput
	// Whether Public Service Connect (PSC) is enabled on the Looker instance
	PscEnabled pulumi.BoolPtrInput
	// Whether public IP is enabled on the Looker instance.
	PublicIpEnabled pulumi.BoolPtrInput
	// The name of the Looker region of the instance.
	Region pulumi.StringPtrInput
	// Name of a reserved IP address range within the consumer network, to be used for private service access connection. User
	// may or may not specify this in a request.
	ReservedRange pulumi.StringPtrInput
	Timeouts      LookerInstanceTimeoutsPtrInput
	// Metadata about users for a Looker instance. These settings are only available when platform edition LOOKER_CORE_STANDARD
	// is set. There are ten Standard and two Developer users included in the cost of the product. You can allocate additional
	// Standard, Viewer, and Developer users for this instance. It is an optional step and can be modified later. With the
	// Standard edition of Looker (Google Cloud core), you can provision up to 50 total users, distributed across Viewer,
	// Standard, and Developer.
	UserMetadata LookerInstanceUserMetadataPtrInput
}

func (LookerInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lookerInstanceArgs)(nil)).Elem()
}

type LookerInstanceInput interface {
	pulumi.Input

	ToLookerInstanceOutput() LookerInstanceOutput
	ToLookerInstanceOutputWithContext(ctx context.Context) LookerInstanceOutput
}

func (*LookerInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**LookerInstance)(nil)).Elem()
}

func (i *LookerInstance) ToLookerInstanceOutput() LookerInstanceOutput {
	return i.ToLookerInstanceOutputWithContext(context.Background())
}

func (i *LookerInstance) ToLookerInstanceOutputWithContext(ctx context.Context) LookerInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LookerInstanceOutput)
}

type LookerInstanceOutput struct{ *pulumi.OutputState }

func (LookerInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LookerInstance)(nil)).Elem()
}

func (o LookerInstanceOutput) ToLookerInstanceOutput() LookerInstanceOutput {
	return o
}

func (o LookerInstanceOutput) ToLookerInstanceOutputWithContext(ctx context.Context) LookerInstanceOutput {
	return o
}

// Looker instance Admin settings.
func (o LookerInstanceOutput) AdminSettings() LookerInstanceAdminSettingsPtrOutput {
	return o.ApplyT(func(v *LookerInstance) LookerInstanceAdminSettingsPtrOutput { return v.AdminSettings }).(LookerInstanceAdminSettingsPtrOutput)
}

// Network name in the consumer project in the format of: projects/{project}/global/networks/{network} Note that the
// consumer network may be in a different GCP project than the consumer project that is hosting the Looker Instance.
func (o LookerInstanceOutput) ConsumerNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringPtrOutput { return v.ConsumerNetwork }).(pulumi.StringPtrOutput)
}

// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
func (o LookerInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Custom domain settings for a Looker instance.
func (o LookerInstanceOutput) CustomDomain() LookerInstanceCustomDomainPtrOutput {
	return o.ApplyT(func(v *LookerInstance) LookerInstanceCustomDomainPtrOutput { return v.CustomDomain }).(LookerInstanceCustomDomainPtrOutput)
}

// Policy to determine if the cluster should be deleted forcefully. If setting deletion_policy = "FORCE", the Looker
// instance will be deleted regardless of its nested resources. If set to "DEFAULT", Looker instances that still have
// nested resources will return an error. Possible values: DEFAULT, FORCE
func (o LookerInstanceOutput) DeletionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringPtrOutput { return v.DeletionPolicy }).(pulumi.StringPtrOutput)
}

// Maintenance denial period for this instance. You must allow at least 14 days of maintenance availability between any two
// deny maintenance periods.
func (o LookerInstanceOutput) DenyMaintenancePeriod() LookerInstanceDenyMaintenancePeriodPtrOutput {
	return o.ApplyT(func(v *LookerInstance) LookerInstanceDenyMaintenancePeriodPtrOutput { return v.DenyMaintenancePeriod }).(LookerInstanceDenyMaintenancePeriodPtrOutput)
}

// Public Egress IP (IPv4).
func (o LookerInstanceOutput) EgressPublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.EgressPublicIp }).(pulumi.StringOutput)
}

// Looker instance encryption settings.
func (o LookerInstanceOutput) EncryptionConfig() LookerInstanceEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *LookerInstance) LookerInstanceEncryptionConfigPtrOutput { return v.EncryptionConfig }).(LookerInstanceEncryptionConfigPtrOutput)
}

// FIPS 140-2 Encryption enablement for Looker (Google Cloud Core).
func (o LookerInstanceOutput) FipsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.BoolPtrOutput { return v.FipsEnabled }).(pulumi.BoolPtrOutput)
}

// Private Ingress IP (IPv4).
func (o LookerInstanceOutput) IngressPrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.IngressPrivateIp }).(pulumi.StringOutput)
}

// Public Ingress IP (IPv4).
func (o LookerInstanceOutput) IngressPublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.IngressPublicIp }).(pulumi.StringOutput)
}

func (o LookerInstanceOutput) LookerInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.LookerInstanceId }).(pulumi.StringOutput)
}

// Looker instance URI which can be used to access the Looker Instance UI.
func (o LookerInstanceOutput) LookerUri() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.LookerUri }).(pulumi.StringOutput)
}

// The Looker version that the instance is using.
func (o LookerInstanceOutput) LookerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.LookerVersion }).(pulumi.StringOutput)
}

// Maintenance window for an instance. Maintenance of your instance takes place once a month, and will require your
// instance to be restarted during updates, which will temporarily disrupt service.
func (o LookerInstanceOutput) MaintenanceWindow() LookerInstanceMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *LookerInstance) LookerInstanceMaintenanceWindowPtrOutput { return v.MaintenanceWindow }).(LookerInstanceMaintenanceWindowPtrOutput)
}

// The ID of the instance or a fully qualified identifier for the instance.
func (o LookerInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Looker Instance OAuth login settings.
func (o LookerInstanceOutput) OauthConfig() LookerInstanceOauthConfigOutput {
	return o.ApplyT(func(v *LookerInstance) LookerInstanceOauthConfigOutput { return v.OauthConfig }).(LookerInstanceOauthConfigOutput)
}

// Platform editions for a Looker instance. Each edition maps to a set of instance features, like its size. Must be one of
// these values: - LOOKER_CORE_TRIAL: trial instance (Currently Unavailable) - LOOKER_CORE_STANDARD: pay as you go standard
// instance (Currently Unavailable) - LOOKER_CORE_STANDARD_ANNUAL: subscription standard instance -
// LOOKER_CORE_ENTERPRISE_ANNUAL: subscription enterprise instance - LOOKER_CORE_EMBED_ANNUAL: subscription embed instance
//   - LOOKER_CORE_NONPROD_STANDARD_ANNUAL: nonprod subscription standard instance - LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL:
//     nonprod subscription enterprise instance - LOOKER_CORE_NONPROD_EMBED_ANNUAL: nonprod subscription embed instance Default
//     value: "LOOKER_CORE_TRIAL" Possible values: ["LOOKER_CORE_TRIAL", "LOOKER_CORE_STANDARD", "LOOKER_CORE_STANDARD_ANNUAL",
//     "LOOKER_CORE_ENTERPRISE_ANNUAL", "LOOKER_CORE_EMBED_ANNUAL", "LOOKER_CORE_NONPROD_STANDARD_ANNUAL",
//     "LOOKER_CORE_NONPROD_ENTERPRISE_ANNUAL", "LOOKER_CORE_NONPROD_EMBED_ANNUAL"]
func (o LookerInstanceOutput) PlatformEdition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringPtrOutput { return v.PlatformEdition }).(pulumi.StringPtrOutput)
}

// Whether private IP is enabled on the Looker instance.
func (o LookerInstanceOutput) PrivateIpEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.BoolPtrOutput { return v.PrivateIpEnabled }).(pulumi.BoolPtrOutput)
}

func (o LookerInstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Information for Private Service Connect (PSC) setup for a Looker instance.
func (o LookerInstanceOutput) PscConfig() LookerInstancePscConfigPtrOutput {
	return o.ApplyT(func(v *LookerInstance) LookerInstancePscConfigPtrOutput { return v.PscConfig }).(LookerInstancePscConfigPtrOutput)
}

// Whether Public Service Connect (PSC) is enabled on the Looker instance
func (o LookerInstanceOutput) PscEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.BoolPtrOutput { return v.PscEnabled }).(pulumi.BoolPtrOutput)
}

// Whether public IP is enabled on the Looker instance.
func (o LookerInstanceOutput) PublicIpEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.BoolPtrOutput { return v.PublicIpEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the Looker region of the instance.
func (o LookerInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Name of a reserved IP address range within the consumer network, to be used for private service access connection. User
// may or may not specify this in a request.
func (o LookerInstanceOutput) ReservedRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringPtrOutput { return v.ReservedRange }).(pulumi.StringPtrOutput)
}

func (o LookerInstanceOutput) Timeouts() LookerInstanceTimeoutsPtrOutput {
	return o.ApplyT(func(v *LookerInstance) LookerInstanceTimeoutsPtrOutput { return v.Timeouts }).(LookerInstanceTimeoutsPtrOutput)
}

// The time the instance was updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
func (o LookerInstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *LookerInstance) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Metadata about users for a Looker instance. These settings are only available when platform edition LOOKER_CORE_STANDARD
// is set. There are ten Standard and two Developer users included in the cost of the product. You can allocate additional
// Standard, Viewer, and Developer users for this instance. It is an optional step and can be modified later. With the
// Standard edition of Looker (Google Cloud core), you can provision up to 50 total users, distributed across Viewer,
// Standard, and Developer.
func (o LookerInstanceOutput) UserMetadata() LookerInstanceUserMetadataPtrOutput {
	return o.ApplyT(func(v *LookerInstance) LookerInstanceUserMetadataPtrOutput { return v.UserMetadata }).(LookerInstanceUserMetadataPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LookerInstanceInput)(nil)).Elem(), &LookerInstance{})
	pulumi.RegisterOutputType(LookerInstanceOutput{})
}
