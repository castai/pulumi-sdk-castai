// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataCatalogTagTemplate struct {
	pulumi.CustomResourceState

	DataCatalogTagTemplateId pulumi.StringOutput `pulumi:"dataCatalogTagTemplateId"`
	// The display name for this template.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Set of tag template field IDs and the settings for the field. This set is an exhaustive list of the allowed fields. This
	// set must contain at least one field and at most 500 fields. The change of field_id will be resulting in re-creating of
	// field. The change of primitive_type will be resulting in re-creating of field, however if the field is a required, you
	// cannot update it.
	Fields DataCatalogTagTemplateFieldArrayOutput `pulumi:"fields"`
	// This confirms the deletion of any possible tags using this template. Must be set to true in order to delete the tag
	// template.
	ForceDelete pulumi.BoolPtrOutput `pulumi:"forceDelete"`
	// The resource name of the tag template in URL format. Example:
	// projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Template location region.
	Region pulumi.StringOutput `pulumi:"region"`
	// The id of the tag template to create.
	TagTemplateId pulumi.StringOutput                     `pulumi:"tagTemplateId"`
	Timeouts      DataCatalogTagTemplateTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDataCatalogTagTemplate registers a new resource with the given unique name, arguments, and options.
func NewDataCatalogTagTemplate(ctx *pulumi.Context,
	name string, args *DataCatalogTagTemplateArgs, opts ...pulumi.ResourceOption) (*DataCatalogTagTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Fields == nil {
		return nil, errors.New("invalid value for required argument 'Fields'")
	}
	if args.TagTemplateId == nil {
		return nil, errors.New("invalid value for required argument 'TagTemplateId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataCatalogTagTemplate
	err = ctx.RegisterPackageResource("google-beta:index/dataCatalogTagTemplate:DataCatalogTagTemplate", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataCatalogTagTemplate gets an existing DataCatalogTagTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataCatalogTagTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataCatalogTagTemplateState, opts ...pulumi.ResourceOption) (*DataCatalogTagTemplate, error) {
	var resource DataCatalogTagTemplate
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataCatalogTagTemplate:DataCatalogTagTemplate", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataCatalogTagTemplate resources.
type dataCatalogTagTemplateState struct {
	DataCatalogTagTemplateId *string `pulumi:"dataCatalogTagTemplateId"`
	// The display name for this template.
	DisplayName *string `pulumi:"displayName"`
	// Set of tag template field IDs and the settings for the field. This set is an exhaustive list of the allowed fields. This
	// set must contain at least one field and at most 500 fields. The change of field_id will be resulting in re-creating of
	// field. The change of primitive_type will be resulting in re-creating of field, however if the field is a required, you
	// cannot update it.
	Fields []DataCatalogTagTemplateField `pulumi:"fields"`
	// This confirms the deletion of any possible tags using this template. Must be set to true in order to delete the tag
	// template.
	ForceDelete *bool `pulumi:"forceDelete"`
	// The resource name of the tag template in URL format. Example:
	// projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Template location region.
	Region *string `pulumi:"region"`
	// The id of the tag template to create.
	TagTemplateId *string                         `pulumi:"tagTemplateId"`
	Timeouts      *DataCatalogTagTemplateTimeouts `pulumi:"timeouts"`
}

type DataCatalogTagTemplateState struct {
	DataCatalogTagTemplateId pulumi.StringPtrInput
	// The display name for this template.
	DisplayName pulumi.StringPtrInput
	// Set of tag template field IDs and the settings for the field. This set is an exhaustive list of the allowed fields. This
	// set must contain at least one field and at most 500 fields. The change of field_id will be resulting in re-creating of
	// field. The change of primitive_type will be resulting in re-creating of field, however if the field is a required, you
	// cannot update it.
	Fields DataCatalogTagTemplateFieldArrayInput
	// This confirms the deletion of any possible tags using this template. Must be set to true in order to delete the tag
	// template.
	ForceDelete pulumi.BoolPtrInput
	// The resource name of the tag template in URL format. Example:
	// projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Template location region.
	Region pulumi.StringPtrInput
	// The id of the tag template to create.
	TagTemplateId pulumi.StringPtrInput
	Timeouts      DataCatalogTagTemplateTimeoutsPtrInput
}

func (DataCatalogTagTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogTagTemplateState)(nil)).Elem()
}

type dataCatalogTagTemplateArgs struct {
	DataCatalogTagTemplateId *string `pulumi:"dataCatalogTagTemplateId"`
	// The display name for this template.
	DisplayName *string `pulumi:"displayName"`
	// Set of tag template field IDs and the settings for the field. This set is an exhaustive list of the allowed fields. This
	// set must contain at least one field and at most 500 fields. The change of field_id will be resulting in re-creating of
	// field. The change of primitive_type will be resulting in re-creating of field, however if the field is a required, you
	// cannot update it.
	Fields []DataCatalogTagTemplateField `pulumi:"fields"`
	// This confirms the deletion of any possible tags using this template. Must be set to true in order to delete the tag
	// template.
	ForceDelete *bool   `pulumi:"forceDelete"`
	Project     *string `pulumi:"project"`
	// Template location region.
	Region *string `pulumi:"region"`
	// The id of the tag template to create.
	TagTemplateId string                          `pulumi:"tagTemplateId"`
	Timeouts      *DataCatalogTagTemplateTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DataCatalogTagTemplate resource.
type DataCatalogTagTemplateArgs struct {
	DataCatalogTagTemplateId pulumi.StringPtrInput
	// The display name for this template.
	DisplayName pulumi.StringPtrInput
	// Set of tag template field IDs and the settings for the field. This set is an exhaustive list of the allowed fields. This
	// set must contain at least one field and at most 500 fields. The change of field_id will be resulting in re-creating of
	// field. The change of primitive_type will be resulting in re-creating of field, however if the field is a required, you
	// cannot update it.
	Fields DataCatalogTagTemplateFieldArrayInput
	// This confirms the deletion of any possible tags using this template. Must be set to true in order to delete the tag
	// template.
	ForceDelete pulumi.BoolPtrInput
	Project     pulumi.StringPtrInput
	// Template location region.
	Region pulumi.StringPtrInput
	// The id of the tag template to create.
	TagTemplateId pulumi.StringInput
	Timeouts      DataCatalogTagTemplateTimeoutsPtrInput
}

func (DataCatalogTagTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogTagTemplateArgs)(nil)).Elem()
}

type DataCatalogTagTemplateInput interface {
	pulumi.Input

	ToDataCatalogTagTemplateOutput() DataCatalogTagTemplateOutput
	ToDataCatalogTagTemplateOutputWithContext(ctx context.Context) DataCatalogTagTemplateOutput
}

func (*DataCatalogTagTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogTagTemplate)(nil)).Elem()
}

func (i *DataCatalogTagTemplate) ToDataCatalogTagTemplateOutput() DataCatalogTagTemplateOutput {
	return i.ToDataCatalogTagTemplateOutputWithContext(context.Background())
}

func (i *DataCatalogTagTemplate) ToDataCatalogTagTemplateOutputWithContext(ctx context.Context) DataCatalogTagTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogTagTemplateOutput)
}

type DataCatalogTagTemplateOutput struct{ *pulumi.OutputState }

func (DataCatalogTagTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogTagTemplate)(nil)).Elem()
}

func (o DataCatalogTagTemplateOutput) ToDataCatalogTagTemplateOutput() DataCatalogTagTemplateOutput {
	return o
}

func (o DataCatalogTagTemplateOutput) ToDataCatalogTagTemplateOutputWithContext(ctx context.Context) DataCatalogTagTemplateOutput {
	return o
}

func (o DataCatalogTagTemplateOutput) DataCatalogTagTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplate) pulumi.StringOutput { return v.DataCatalogTagTemplateId }).(pulumi.StringOutput)
}

// The display name for this template.
func (o DataCatalogTagTemplateOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplate) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Set of tag template field IDs and the settings for the field. This set is an exhaustive list of the allowed fields. This
// set must contain at least one field and at most 500 fields. The change of field_id will be resulting in re-creating of
// field. The change of primitive_type will be resulting in re-creating of field, however if the field is a required, you
// cannot update it.
func (o DataCatalogTagTemplateOutput) Fields() DataCatalogTagTemplateFieldArrayOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplate) DataCatalogTagTemplateFieldArrayOutput { return v.Fields }).(DataCatalogTagTemplateFieldArrayOutput)
}

// This confirms the deletion of any possible tags using this template. Must be set to true in order to delete the tag
// template.
func (o DataCatalogTagTemplateOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplate) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// The resource name of the tag template in URL format. Example:
// projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}
func (o DataCatalogTagTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplate) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Template location region.
func (o DataCatalogTagTemplateOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplate) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The id of the tag template to create.
func (o DataCatalogTagTemplateOutput) TagTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplate) pulumi.StringOutput { return v.TagTemplateId }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateOutput) Timeouts() DataCatalogTagTemplateTimeoutsPtrOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplate) DataCatalogTagTemplateTimeoutsPtrOutput { return v.Timeouts }).(DataCatalogTagTemplateTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataCatalogTagTemplateInput)(nil)).Elem(), &DataCatalogTagTemplate{})
	pulumi.RegisterOutputType(DataCatalogTagTemplateOutput{})
}
