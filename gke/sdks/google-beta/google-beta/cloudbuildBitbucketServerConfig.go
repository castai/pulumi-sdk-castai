// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudbuildBitbucketServerConfig struct {
	pulumi.CustomResourceState

	// Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. Changing this
	// field will result in deleting/ recreating the resource.
	ApiKey                            pulumi.StringOutput `pulumi:"apiKey"`
	CloudbuildBitbucketServerConfigId pulumi.StringOutput `pulumi:"cloudbuildBitbucketServerConfigId"`
	// The ID to use for the BitbucketServerConfig, which will become the final component of the BitbucketServerConfig's
	// resource name.
	ConfigId pulumi.StringOutput `pulumi:"configId"`
	// Connected Bitbucket Server repositories for this config.
	ConnectedRepositories CloudbuildBitbucketServerConfigConnectedRepositoryArrayOutput `pulumi:"connectedRepositories"`
	// Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to
	// change it, please create another BitbucketServerConfig.
	HostUri pulumi.StringOutput `pulumi:"hostUri"`
	// The location of this bitbucket server config.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name for the config.
	Name pulumi.StringOutput `pulumi:"name"`
	// The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private
	// service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by
	// public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance
	// will be made over the public internet. Must be in the format projects/{project}/global/networks/{network}, where
	// {project} is a project number or id and {network} is the name of a VPC network in the project.
	PeeredNetwork pulumi.StringPtrOutput `pulumi:"peeredNetwork"`
	Project       pulumi.StringOutput    `pulumi:"project"`
	// Secret Manager secrets needed by the config.
	Secrets CloudbuildBitbucketServerConfigSecretsOutput `pulumi:"secrets"`
	// SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of
	// .pem, .cer, or .crt.
	SslCa    pulumi.StringPtrOutput                           `pulumi:"sslCa"`
	Timeouts CloudbuildBitbucketServerConfigTimeoutsPtrOutput `pulumi:"timeouts"`
	// Username of the account Cloud Build will use on Bitbucket Server.
	Username pulumi.StringOutput `pulumi:"username"`
	// Output only. UUID included in webhook requests. The UUID is used to look up the corresponding config.
	WebhookKey pulumi.StringOutput `pulumi:"webhookKey"`
}

// NewCloudbuildBitbucketServerConfig registers a new resource with the given unique name, arguments, and options.
func NewCloudbuildBitbucketServerConfig(ctx *pulumi.Context,
	name string, args *CloudbuildBitbucketServerConfigArgs, opts ...pulumi.ResourceOption) (*CloudbuildBitbucketServerConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiKey == nil {
		return nil, errors.New("invalid value for required argument 'ApiKey'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.HostUri == nil {
		return nil, errors.New("invalid value for required argument 'HostUri'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Secrets == nil {
		return nil, errors.New("invalid value for required argument 'Secrets'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudbuildBitbucketServerConfig
	err = ctx.RegisterPackageResource("google-beta:index/cloudbuildBitbucketServerConfig:CloudbuildBitbucketServerConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudbuildBitbucketServerConfig gets an existing CloudbuildBitbucketServerConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudbuildBitbucketServerConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudbuildBitbucketServerConfigState, opts ...pulumi.ResourceOption) (*CloudbuildBitbucketServerConfig, error) {
	var resource CloudbuildBitbucketServerConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/cloudbuildBitbucketServerConfig:CloudbuildBitbucketServerConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudbuildBitbucketServerConfig resources.
type cloudbuildBitbucketServerConfigState struct {
	// Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. Changing this
	// field will result in deleting/ recreating the resource.
	ApiKey                            *string `pulumi:"apiKey"`
	CloudbuildBitbucketServerConfigId *string `pulumi:"cloudbuildBitbucketServerConfigId"`
	// The ID to use for the BitbucketServerConfig, which will become the final component of the BitbucketServerConfig's
	// resource name.
	ConfigId *string `pulumi:"configId"`
	// Connected Bitbucket Server repositories for this config.
	ConnectedRepositories []CloudbuildBitbucketServerConfigConnectedRepository `pulumi:"connectedRepositories"`
	// Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to
	// change it, please create another BitbucketServerConfig.
	HostUri *string `pulumi:"hostUri"`
	// The location of this bitbucket server config.
	Location *string `pulumi:"location"`
	// The resource name for the config.
	Name *string `pulumi:"name"`
	// The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private
	// service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by
	// public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance
	// will be made over the public internet. Must be in the format projects/{project}/global/networks/{network}, where
	// {project} is a project number or id and {network} is the name of a VPC network in the project.
	PeeredNetwork *string `pulumi:"peeredNetwork"`
	Project       *string `pulumi:"project"`
	// Secret Manager secrets needed by the config.
	Secrets *CloudbuildBitbucketServerConfigSecrets `pulumi:"secrets"`
	// SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of
	// .pem, .cer, or .crt.
	SslCa    *string                                  `pulumi:"sslCa"`
	Timeouts *CloudbuildBitbucketServerConfigTimeouts `pulumi:"timeouts"`
	// Username of the account Cloud Build will use on Bitbucket Server.
	Username *string `pulumi:"username"`
	// Output only. UUID included in webhook requests. The UUID is used to look up the corresponding config.
	WebhookKey *string `pulumi:"webhookKey"`
}

type CloudbuildBitbucketServerConfigState struct {
	// Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. Changing this
	// field will result in deleting/ recreating the resource.
	ApiKey                            pulumi.StringPtrInput
	CloudbuildBitbucketServerConfigId pulumi.StringPtrInput
	// The ID to use for the BitbucketServerConfig, which will become the final component of the BitbucketServerConfig's
	// resource name.
	ConfigId pulumi.StringPtrInput
	// Connected Bitbucket Server repositories for this config.
	ConnectedRepositories CloudbuildBitbucketServerConfigConnectedRepositoryArrayInput
	// Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to
	// change it, please create another BitbucketServerConfig.
	HostUri pulumi.StringPtrInput
	// The location of this bitbucket server config.
	Location pulumi.StringPtrInput
	// The resource name for the config.
	Name pulumi.StringPtrInput
	// The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private
	// service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by
	// public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance
	// will be made over the public internet. Must be in the format projects/{project}/global/networks/{network}, where
	// {project} is a project number or id and {network} is the name of a VPC network in the project.
	PeeredNetwork pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	// Secret Manager secrets needed by the config.
	Secrets CloudbuildBitbucketServerConfigSecretsPtrInput
	// SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of
	// .pem, .cer, or .crt.
	SslCa    pulumi.StringPtrInput
	Timeouts CloudbuildBitbucketServerConfigTimeoutsPtrInput
	// Username of the account Cloud Build will use on Bitbucket Server.
	Username pulumi.StringPtrInput
	// Output only. UUID included in webhook requests. The UUID is used to look up the corresponding config.
	WebhookKey pulumi.StringPtrInput
}

func (CloudbuildBitbucketServerConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudbuildBitbucketServerConfigState)(nil)).Elem()
}

type cloudbuildBitbucketServerConfigArgs struct {
	// Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. Changing this
	// field will result in deleting/ recreating the resource.
	ApiKey                            string  `pulumi:"apiKey"`
	CloudbuildBitbucketServerConfigId *string `pulumi:"cloudbuildBitbucketServerConfigId"`
	// The ID to use for the BitbucketServerConfig, which will become the final component of the BitbucketServerConfig's
	// resource name.
	ConfigId string `pulumi:"configId"`
	// Connected Bitbucket Server repositories for this config.
	ConnectedRepositories []CloudbuildBitbucketServerConfigConnectedRepository `pulumi:"connectedRepositories"`
	// Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to
	// change it, please create another BitbucketServerConfig.
	HostUri string `pulumi:"hostUri"`
	// The location of this bitbucket server config.
	Location string `pulumi:"location"`
	// The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private
	// service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by
	// public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance
	// will be made over the public internet. Must be in the format projects/{project}/global/networks/{network}, where
	// {project} is a project number or id and {network} is the name of a VPC network in the project.
	PeeredNetwork *string `pulumi:"peeredNetwork"`
	Project       *string `pulumi:"project"`
	// Secret Manager secrets needed by the config.
	Secrets CloudbuildBitbucketServerConfigSecrets `pulumi:"secrets"`
	// SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of
	// .pem, .cer, or .crt.
	SslCa    *string                                  `pulumi:"sslCa"`
	Timeouts *CloudbuildBitbucketServerConfigTimeouts `pulumi:"timeouts"`
	// Username of the account Cloud Build will use on Bitbucket Server.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a CloudbuildBitbucketServerConfig resource.
type CloudbuildBitbucketServerConfigArgs struct {
	// Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. Changing this
	// field will result in deleting/ recreating the resource.
	ApiKey                            pulumi.StringInput
	CloudbuildBitbucketServerConfigId pulumi.StringPtrInput
	// The ID to use for the BitbucketServerConfig, which will become the final component of the BitbucketServerConfig's
	// resource name.
	ConfigId pulumi.StringInput
	// Connected Bitbucket Server repositories for this config.
	ConnectedRepositories CloudbuildBitbucketServerConfigConnectedRepositoryArrayInput
	// Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to
	// change it, please create another BitbucketServerConfig.
	HostUri pulumi.StringInput
	// The location of this bitbucket server config.
	Location pulumi.StringInput
	// The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private
	// service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by
	// public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance
	// will be made over the public internet. Must be in the format projects/{project}/global/networks/{network}, where
	// {project} is a project number or id and {network} is the name of a VPC network in the project.
	PeeredNetwork pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	// Secret Manager secrets needed by the config.
	Secrets CloudbuildBitbucketServerConfigSecretsInput
	// SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of
	// .pem, .cer, or .crt.
	SslCa    pulumi.StringPtrInput
	Timeouts CloudbuildBitbucketServerConfigTimeoutsPtrInput
	// Username of the account Cloud Build will use on Bitbucket Server.
	Username pulumi.StringInput
}

func (CloudbuildBitbucketServerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudbuildBitbucketServerConfigArgs)(nil)).Elem()
}

type CloudbuildBitbucketServerConfigInput interface {
	pulumi.Input

	ToCloudbuildBitbucketServerConfigOutput() CloudbuildBitbucketServerConfigOutput
	ToCloudbuildBitbucketServerConfigOutputWithContext(ctx context.Context) CloudbuildBitbucketServerConfigOutput
}

func (*CloudbuildBitbucketServerConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudbuildBitbucketServerConfig)(nil)).Elem()
}

func (i *CloudbuildBitbucketServerConfig) ToCloudbuildBitbucketServerConfigOutput() CloudbuildBitbucketServerConfigOutput {
	return i.ToCloudbuildBitbucketServerConfigOutputWithContext(context.Background())
}

func (i *CloudbuildBitbucketServerConfig) ToCloudbuildBitbucketServerConfigOutputWithContext(ctx context.Context) CloudbuildBitbucketServerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudbuildBitbucketServerConfigOutput)
}

type CloudbuildBitbucketServerConfigOutput struct{ *pulumi.OutputState }

func (CloudbuildBitbucketServerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudbuildBitbucketServerConfig)(nil)).Elem()
}

func (o CloudbuildBitbucketServerConfigOutput) ToCloudbuildBitbucketServerConfigOutput() CloudbuildBitbucketServerConfigOutput {
	return o
}

func (o CloudbuildBitbucketServerConfigOutput) ToCloudbuildBitbucketServerConfigOutputWithContext(ctx context.Context) CloudbuildBitbucketServerConfigOutput {
	return o
}

// Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. Changing this
// field will result in deleting/ recreating the resource.
func (o CloudbuildBitbucketServerConfigOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringOutput { return v.ApiKey }).(pulumi.StringOutput)
}

func (o CloudbuildBitbucketServerConfigOutput) CloudbuildBitbucketServerConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringOutput {
		return v.CloudbuildBitbucketServerConfigId
	}).(pulumi.StringOutput)
}

// The ID to use for the BitbucketServerConfig, which will become the final component of the BitbucketServerConfig's
// resource name.
func (o CloudbuildBitbucketServerConfigOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringOutput { return v.ConfigId }).(pulumi.StringOutput)
}

// Connected Bitbucket Server repositories for this config.
func (o CloudbuildBitbucketServerConfigOutput) ConnectedRepositories() CloudbuildBitbucketServerConfigConnectedRepositoryArrayOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) CloudbuildBitbucketServerConfigConnectedRepositoryArrayOutput {
		return v.ConnectedRepositories
	}).(CloudbuildBitbucketServerConfigConnectedRepositoryArrayOutput)
}

// Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to
// change it, please create another BitbucketServerConfig.
func (o CloudbuildBitbucketServerConfigOutput) HostUri() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringOutput { return v.HostUri }).(pulumi.StringOutput)
}

// The location of this bitbucket server config.
func (o CloudbuildBitbucketServerConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name for the config.
func (o CloudbuildBitbucketServerConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private
// service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by
// public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance
// will be made over the public internet. Must be in the format projects/{project}/global/networks/{network}, where
// {project} is a project number or id and {network} is the name of a VPC network in the project.
func (o CloudbuildBitbucketServerConfigOutput) PeeredNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringPtrOutput { return v.PeeredNetwork }).(pulumi.StringPtrOutput)
}

func (o CloudbuildBitbucketServerConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Secret Manager secrets needed by the config.
func (o CloudbuildBitbucketServerConfigOutput) Secrets() CloudbuildBitbucketServerConfigSecretsOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) CloudbuildBitbucketServerConfigSecretsOutput {
		return v.Secrets
	}).(CloudbuildBitbucketServerConfigSecretsOutput)
}

// SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of
// .pem, .cer, or .crt.
func (o CloudbuildBitbucketServerConfigOutput) SslCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringPtrOutput { return v.SslCa }).(pulumi.StringPtrOutput)
}

func (o CloudbuildBitbucketServerConfigOutput) Timeouts() CloudbuildBitbucketServerConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) CloudbuildBitbucketServerConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(CloudbuildBitbucketServerConfigTimeoutsPtrOutput)
}

// Username of the account Cloud Build will use on Bitbucket Server.
func (o CloudbuildBitbucketServerConfigOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

// Output only. UUID included in webhook requests. The UUID is used to look up the corresponding config.
func (o CloudbuildBitbucketServerConfigOutput) WebhookKey() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudbuildBitbucketServerConfig) pulumi.StringOutput { return v.WebhookKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudbuildBitbucketServerConfigInput)(nil)).Elem(), &CloudbuildBitbucketServerConfig{})
	pulumi.RegisterOutputType(CloudbuildBitbucketServerConfigOutput{})
}
