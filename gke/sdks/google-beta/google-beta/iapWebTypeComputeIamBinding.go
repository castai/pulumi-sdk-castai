// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IapWebTypeComputeIamBinding struct {
	pulumi.CustomResourceState

	Condition                     IapWebTypeComputeIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	IapWebTypeComputeIamBindingId pulumi.StringOutput                           `pulumi:"iapWebTypeComputeIamBindingId"`
	Members                       pulumi.StringArrayOutput                      `pulumi:"members"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
}

// NewIapWebTypeComputeIamBinding registers a new resource with the given unique name, arguments, and options.
func NewIapWebTypeComputeIamBinding(ctx *pulumi.Context,
	name string, args *IapWebTypeComputeIamBindingArgs, opts ...pulumi.ResourceOption) (*IapWebTypeComputeIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IapWebTypeComputeIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/iapWebTypeComputeIamBinding:IapWebTypeComputeIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIapWebTypeComputeIamBinding gets an existing IapWebTypeComputeIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIapWebTypeComputeIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IapWebTypeComputeIamBindingState, opts ...pulumi.ResourceOption) (*IapWebTypeComputeIamBinding, error) {
	var resource IapWebTypeComputeIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/iapWebTypeComputeIamBinding:IapWebTypeComputeIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IapWebTypeComputeIamBinding resources.
type iapWebTypeComputeIamBindingState struct {
	Condition                     *IapWebTypeComputeIamBindingCondition `pulumi:"condition"`
	Etag                          *string                               `pulumi:"etag"`
	IapWebTypeComputeIamBindingId *string                               `pulumi:"iapWebTypeComputeIamBindingId"`
	Members                       []string                              `pulumi:"members"`
	Project                       *string                               `pulumi:"project"`
	Role                          *string                               `pulumi:"role"`
}

type IapWebTypeComputeIamBindingState struct {
	Condition                     IapWebTypeComputeIamBindingConditionPtrInput
	Etag                          pulumi.StringPtrInput
	IapWebTypeComputeIamBindingId pulumi.StringPtrInput
	Members                       pulumi.StringArrayInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
}

func (IapWebTypeComputeIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*iapWebTypeComputeIamBindingState)(nil)).Elem()
}

type iapWebTypeComputeIamBindingArgs struct {
	Condition                     *IapWebTypeComputeIamBindingCondition `pulumi:"condition"`
	IapWebTypeComputeIamBindingId *string                               `pulumi:"iapWebTypeComputeIamBindingId"`
	Members                       []string                              `pulumi:"members"`
	Project                       *string                               `pulumi:"project"`
	Role                          string                                `pulumi:"role"`
}

// The set of arguments for constructing a IapWebTypeComputeIamBinding resource.
type IapWebTypeComputeIamBindingArgs struct {
	Condition                     IapWebTypeComputeIamBindingConditionPtrInput
	IapWebTypeComputeIamBindingId pulumi.StringPtrInput
	Members                       pulumi.StringArrayInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringInput
}

func (IapWebTypeComputeIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iapWebTypeComputeIamBindingArgs)(nil)).Elem()
}

type IapWebTypeComputeIamBindingInput interface {
	pulumi.Input

	ToIapWebTypeComputeIamBindingOutput() IapWebTypeComputeIamBindingOutput
	ToIapWebTypeComputeIamBindingOutputWithContext(ctx context.Context) IapWebTypeComputeIamBindingOutput
}

func (*IapWebTypeComputeIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**IapWebTypeComputeIamBinding)(nil)).Elem()
}

func (i *IapWebTypeComputeIamBinding) ToIapWebTypeComputeIamBindingOutput() IapWebTypeComputeIamBindingOutput {
	return i.ToIapWebTypeComputeIamBindingOutputWithContext(context.Background())
}

func (i *IapWebTypeComputeIamBinding) ToIapWebTypeComputeIamBindingOutputWithContext(ctx context.Context) IapWebTypeComputeIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapWebTypeComputeIamBindingOutput)
}

type IapWebTypeComputeIamBindingOutput struct{ *pulumi.OutputState }

func (IapWebTypeComputeIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapWebTypeComputeIamBinding)(nil)).Elem()
}

func (o IapWebTypeComputeIamBindingOutput) ToIapWebTypeComputeIamBindingOutput() IapWebTypeComputeIamBindingOutput {
	return o
}

func (o IapWebTypeComputeIamBindingOutput) ToIapWebTypeComputeIamBindingOutputWithContext(ctx context.Context) IapWebTypeComputeIamBindingOutput {
	return o
}

func (o IapWebTypeComputeIamBindingOutput) Condition() IapWebTypeComputeIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamBinding) IapWebTypeComputeIamBindingConditionPtrOutput { return v.Condition }).(IapWebTypeComputeIamBindingConditionPtrOutput)
}

func (o IapWebTypeComputeIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamBindingOutput) IapWebTypeComputeIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamBinding) pulumi.StringOutput { return v.IapWebTypeComputeIamBindingId }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o IapWebTypeComputeIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IapWebTypeComputeIamBindingInput)(nil)).Elem(), &IapWebTypeComputeIamBinding{})
	pulumi.RegisterOutputType(IapWebTypeComputeIamBindingOutput{})
}
