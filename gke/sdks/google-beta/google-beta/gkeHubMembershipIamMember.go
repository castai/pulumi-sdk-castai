// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeHubMembershipIamMember struct {
	pulumi.CustomResourceState

	Condition                   GkeHubMembershipIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                        pulumi.StringOutput                         `pulumi:"etag"`
	GkeHubMembershipIamMemberId pulumi.StringOutput                         `pulumi:"gkeHubMembershipIamMemberId"`
	Location                    pulumi.StringOutput                         `pulumi:"location"`
	Member                      pulumi.StringOutput                         `pulumi:"member"`
	MembershipId                pulumi.StringOutput                         `pulumi:"membershipId"`
	Project                     pulumi.StringOutput                         `pulumi:"project"`
	Role                        pulumi.StringOutput                         `pulumi:"role"`
}

// NewGkeHubMembershipIamMember registers a new resource with the given unique name, arguments, and options.
func NewGkeHubMembershipIamMember(ctx *pulumi.Context,
	name string, args *GkeHubMembershipIamMemberArgs, opts ...pulumi.ResourceOption) (*GkeHubMembershipIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.MembershipId == nil {
		return nil, errors.New("invalid value for required argument 'MembershipId'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeHubMembershipIamMember
	err = ctx.RegisterPackageResource("google-beta:index/gkeHubMembershipIamMember:GkeHubMembershipIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeHubMembershipIamMember gets an existing GkeHubMembershipIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeHubMembershipIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeHubMembershipIamMemberState, opts ...pulumi.ResourceOption) (*GkeHubMembershipIamMember, error) {
	var resource GkeHubMembershipIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/gkeHubMembershipIamMember:GkeHubMembershipIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeHubMembershipIamMember resources.
type gkeHubMembershipIamMemberState struct {
	Condition                   *GkeHubMembershipIamMemberCondition `pulumi:"condition"`
	Etag                        *string                             `pulumi:"etag"`
	GkeHubMembershipIamMemberId *string                             `pulumi:"gkeHubMembershipIamMemberId"`
	Location                    *string                             `pulumi:"location"`
	Member                      *string                             `pulumi:"member"`
	MembershipId                *string                             `pulumi:"membershipId"`
	Project                     *string                             `pulumi:"project"`
	Role                        *string                             `pulumi:"role"`
}

type GkeHubMembershipIamMemberState struct {
	Condition                   GkeHubMembershipIamMemberConditionPtrInput
	Etag                        pulumi.StringPtrInput
	GkeHubMembershipIamMemberId pulumi.StringPtrInput
	Location                    pulumi.StringPtrInput
	Member                      pulumi.StringPtrInput
	MembershipId                pulumi.StringPtrInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringPtrInput
}

func (GkeHubMembershipIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubMembershipIamMemberState)(nil)).Elem()
}

type gkeHubMembershipIamMemberArgs struct {
	Condition                   *GkeHubMembershipIamMemberCondition `pulumi:"condition"`
	GkeHubMembershipIamMemberId *string                             `pulumi:"gkeHubMembershipIamMemberId"`
	Location                    *string                             `pulumi:"location"`
	Member                      string                              `pulumi:"member"`
	MembershipId                string                              `pulumi:"membershipId"`
	Project                     *string                             `pulumi:"project"`
	Role                        string                              `pulumi:"role"`
}

// The set of arguments for constructing a GkeHubMembershipIamMember resource.
type GkeHubMembershipIamMemberArgs struct {
	Condition                   GkeHubMembershipIamMemberConditionPtrInput
	GkeHubMembershipIamMemberId pulumi.StringPtrInput
	Location                    pulumi.StringPtrInput
	Member                      pulumi.StringInput
	MembershipId                pulumi.StringInput
	Project                     pulumi.StringPtrInput
	Role                        pulumi.StringInput
}

func (GkeHubMembershipIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubMembershipIamMemberArgs)(nil)).Elem()
}

type GkeHubMembershipIamMemberInput interface {
	pulumi.Input

	ToGkeHubMembershipIamMemberOutput() GkeHubMembershipIamMemberOutput
	ToGkeHubMembershipIamMemberOutputWithContext(ctx context.Context) GkeHubMembershipIamMemberOutput
}

func (*GkeHubMembershipIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubMembershipIamMember)(nil)).Elem()
}

func (i *GkeHubMembershipIamMember) ToGkeHubMembershipIamMemberOutput() GkeHubMembershipIamMemberOutput {
	return i.ToGkeHubMembershipIamMemberOutputWithContext(context.Background())
}

func (i *GkeHubMembershipIamMember) ToGkeHubMembershipIamMemberOutputWithContext(ctx context.Context) GkeHubMembershipIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeHubMembershipIamMemberOutput)
}

type GkeHubMembershipIamMemberOutput struct{ *pulumi.OutputState }

func (GkeHubMembershipIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubMembershipIamMember)(nil)).Elem()
}

func (o GkeHubMembershipIamMemberOutput) ToGkeHubMembershipIamMemberOutput() GkeHubMembershipIamMemberOutput {
	return o
}

func (o GkeHubMembershipIamMemberOutput) ToGkeHubMembershipIamMemberOutputWithContext(ctx context.Context) GkeHubMembershipIamMemberOutput {
	return o
}

func (o GkeHubMembershipIamMemberOutput) Condition() GkeHubMembershipIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamMember) GkeHubMembershipIamMemberConditionPtrOutput { return v.Condition }).(GkeHubMembershipIamMemberConditionPtrOutput)
}

func (o GkeHubMembershipIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamMemberOutput) GkeHubMembershipIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamMember) pulumi.StringOutput { return v.GkeHubMembershipIamMemberId }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamMemberOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamMember) pulumi.StringOutput { return v.MembershipId }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeHubMembershipIamMemberInput)(nil)).Elem(), &GkeHubMembershipIamMember{})
	pulumi.RegisterOutputType(GkeHubMembershipIamMemberOutput{})
}
