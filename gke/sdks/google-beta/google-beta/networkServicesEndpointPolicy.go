// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkServicesEndpointPolicy struct {
	pulumi.CustomResourceState

	// This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic
	// at the matched endpoints.
	AuthorizationPolicy pulumi.StringPtrOutput `pulumi:"authorizationPolicy"`
	// A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from
	// the proxy to the actual endpoints.
	ClientTlsPolicy pulumi.StringPtrOutput `pulumi:"clientTlsPolicy"`
	// Time the TcpRoute was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Required. A matcher that selects endpoints to which the policies should be applied.
	EndpointMatcher NetworkServicesEndpointPolicyEndpointMatcherOutput `pulumi:"endpointMatcher"`
	// Set of label tags associated with the TcpRoute resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the EndpointPolicy resource.
	Name                            pulumi.StringOutput `pulumi:"name"`
	NetworkServicesEndpointPolicyId pulumi.StringOutput `pulumi:"networkServicesEndpointPolicyId"`
	Project                         pulumi.StringOutput `pulumi:"project"`
	// A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be
	// applied to terminate the inbound traffic at the identified backends.
	ServerTlsPolicy pulumi.StringPtrOutput `pulumi:"serverTlsPolicy"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                         `pulumi:"terraformLabels"`
	Timeouts        NetworkServicesEndpointPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
	// Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
	TrafficPortSelector NetworkServicesEndpointPolicyTrafficPortSelectorPtrOutput `pulumi:"trafficPortSelector"`
	// The type of endpoint policy. This is primarily used to validate the configuration. Possible values: ["SIDECAR_PROXY",
	// "GRPC_SERVER"]
	Type pulumi.StringOutput `pulumi:"type"`
	// Time the TcpRoute was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkServicesEndpointPolicy registers a new resource with the given unique name, arguments, and options.
func NewNetworkServicesEndpointPolicy(ctx *pulumi.Context,
	name string, args *NetworkServicesEndpointPolicyArgs, opts ...pulumi.ResourceOption) (*NetworkServicesEndpointPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndpointMatcher == nil {
		return nil, errors.New("invalid value for required argument 'EndpointMatcher'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkServicesEndpointPolicy
	err = ctx.RegisterPackageResource("google-beta:index/networkServicesEndpointPolicy:NetworkServicesEndpointPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkServicesEndpointPolicy gets an existing NetworkServicesEndpointPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkServicesEndpointPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkServicesEndpointPolicyState, opts ...pulumi.ResourceOption) (*NetworkServicesEndpointPolicy, error) {
	var resource NetworkServicesEndpointPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkServicesEndpointPolicy:NetworkServicesEndpointPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkServicesEndpointPolicy resources.
type networkServicesEndpointPolicyState struct {
	// This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic
	// at the matched endpoints.
	AuthorizationPolicy *string `pulumi:"authorizationPolicy"`
	// A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from
	// the proxy to the actual endpoints.
	ClientTlsPolicy *string `pulumi:"clientTlsPolicy"`
	// Time the TcpRoute was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Required. A matcher that selects endpoints to which the policies should be applied.
	EndpointMatcher *NetworkServicesEndpointPolicyEndpointMatcher `pulumi:"endpointMatcher"`
	// Set of label tags associated with the TcpRoute resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the EndpointPolicy resource.
	Name                            *string `pulumi:"name"`
	NetworkServicesEndpointPolicyId *string `pulumi:"networkServicesEndpointPolicyId"`
	Project                         *string `pulumi:"project"`
	// A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be
	// applied to terminate the inbound traffic at the identified backends.
	ServerTlsPolicy *string `pulumi:"serverTlsPolicy"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                      `pulumi:"terraformLabels"`
	Timeouts        *NetworkServicesEndpointPolicyTimeouts `pulumi:"timeouts"`
	// Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
	TrafficPortSelector *NetworkServicesEndpointPolicyTrafficPortSelector `pulumi:"trafficPortSelector"`
	// The type of endpoint policy. This is primarily used to validate the configuration. Possible values: ["SIDECAR_PROXY",
	// "GRPC_SERVER"]
	Type *string `pulumi:"type"`
	// Time the TcpRoute was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkServicesEndpointPolicyState struct {
	// This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic
	// at the matched endpoints.
	AuthorizationPolicy pulumi.StringPtrInput
	// A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from
	// the proxy to the actual endpoints.
	ClientTlsPolicy pulumi.StringPtrInput
	// Time the TcpRoute was created in UTC.
	CreateTime pulumi.StringPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Required. A matcher that selects endpoints to which the policies should be applied.
	EndpointMatcher NetworkServicesEndpointPolicyEndpointMatcherPtrInput
	// Set of label tags associated with the TcpRoute resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// Name of the EndpointPolicy resource.
	Name                            pulumi.StringPtrInput
	NetworkServicesEndpointPolicyId pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	// A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be
	// applied to terminate the inbound traffic at the identified backends.
	ServerTlsPolicy pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkServicesEndpointPolicyTimeoutsPtrInput
	// Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
	TrafficPortSelector NetworkServicesEndpointPolicyTrafficPortSelectorPtrInput
	// The type of endpoint policy. This is primarily used to validate the configuration. Possible values: ["SIDECAR_PROXY",
	// "GRPC_SERVER"]
	Type pulumi.StringPtrInput
	// Time the TcpRoute was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkServicesEndpointPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesEndpointPolicyState)(nil)).Elem()
}

type networkServicesEndpointPolicyArgs struct {
	// This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic
	// at the matched endpoints.
	AuthorizationPolicy *string `pulumi:"authorizationPolicy"`
	// A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from
	// the proxy to the actual endpoints.
	ClientTlsPolicy *string `pulumi:"clientTlsPolicy"`
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// Required. A matcher that selects endpoints to which the policies should be applied.
	EndpointMatcher NetworkServicesEndpointPolicyEndpointMatcher `pulumi:"endpointMatcher"`
	// Set of label tags associated with the TcpRoute resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the EndpointPolicy resource.
	Name                            *string `pulumi:"name"`
	NetworkServicesEndpointPolicyId *string `pulumi:"networkServicesEndpointPolicyId"`
	Project                         *string `pulumi:"project"`
	// A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be
	// applied to terminate the inbound traffic at the identified backends.
	ServerTlsPolicy *string                                `pulumi:"serverTlsPolicy"`
	Timeouts        *NetworkServicesEndpointPolicyTimeouts `pulumi:"timeouts"`
	// Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
	TrafficPortSelector *NetworkServicesEndpointPolicyTrafficPortSelector `pulumi:"trafficPortSelector"`
	// The type of endpoint policy. This is primarily used to validate the configuration. Possible values: ["SIDECAR_PROXY",
	// "GRPC_SERVER"]
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a NetworkServicesEndpointPolicy resource.
type NetworkServicesEndpointPolicyArgs struct {
	// This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic
	// at the matched endpoints.
	AuthorizationPolicy pulumi.StringPtrInput
	// A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from
	// the proxy to the actual endpoints.
	ClientTlsPolicy pulumi.StringPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// Required. A matcher that selects endpoints to which the policies should be applied.
	EndpointMatcher NetworkServicesEndpointPolicyEndpointMatcherInput
	// Set of label tags associated with the TcpRoute resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// Name of the EndpointPolicy resource.
	Name                            pulumi.StringPtrInput
	NetworkServicesEndpointPolicyId pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	// A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be
	// applied to terminate the inbound traffic at the identified backends.
	ServerTlsPolicy pulumi.StringPtrInput
	Timeouts        NetworkServicesEndpointPolicyTimeoutsPtrInput
	// Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
	TrafficPortSelector NetworkServicesEndpointPolicyTrafficPortSelectorPtrInput
	// The type of endpoint policy. This is primarily used to validate the configuration. Possible values: ["SIDECAR_PROXY",
	// "GRPC_SERVER"]
	Type pulumi.StringInput
}

func (NetworkServicesEndpointPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesEndpointPolicyArgs)(nil)).Elem()
}

type NetworkServicesEndpointPolicyInput interface {
	pulumi.Input

	ToNetworkServicesEndpointPolicyOutput() NetworkServicesEndpointPolicyOutput
	ToNetworkServicesEndpointPolicyOutputWithContext(ctx context.Context) NetworkServicesEndpointPolicyOutput
}

func (*NetworkServicesEndpointPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesEndpointPolicy)(nil)).Elem()
}

func (i *NetworkServicesEndpointPolicy) ToNetworkServicesEndpointPolicyOutput() NetworkServicesEndpointPolicyOutput {
	return i.ToNetworkServicesEndpointPolicyOutputWithContext(context.Background())
}

func (i *NetworkServicesEndpointPolicy) ToNetworkServicesEndpointPolicyOutputWithContext(ctx context.Context) NetworkServicesEndpointPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicesEndpointPolicyOutput)
}

type NetworkServicesEndpointPolicyOutput struct{ *pulumi.OutputState }

func (NetworkServicesEndpointPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesEndpointPolicy)(nil)).Elem()
}

func (o NetworkServicesEndpointPolicyOutput) ToNetworkServicesEndpointPolicyOutput() NetworkServicesEndpointPolicyOutput {
	return o
}

func (o NetworkServicesEndpointPolicyOutput) ToNetworkServicesEndpointPolicyOutputWithContext(ctx context.Context) NetworkServicesEndpointPolicyOutput {
	return o
}

// This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic
// at the matched endpoints.
func (o NetworkServicesEndpointPolicyOutput) AuthorizationPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringPtrOutput { return v.AuthorizationPolicy }).(pulumi.StringPtrOutput)
}

// A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from
// the proxy to the actual endpoints.
func (o NetworkServicesEndpointPolicyOutput) ClientTlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringPtrOutput { return v.ClientTlsPolicy }).(pulumi.StringPtrOutput)
}

// Time the TcpRoute was created in UTC.
func (o NetworkServicesEndpointPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A free-text description of the resource. Max length 1024 characters.
func (o NetworkServicesEndpointPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkServicesEndpointPolicyOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Required. A matcher that selects endpoints to which the policies should be applied.
func (o NetworkServicesEndpointPolicyOutput) EndpointMatcher() NetworkServicesEndpointPolicyEndpointMatcherOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) NetworkServicesEndpointPolicyEndpointMatcherOutput {
		return v.EndpointMatcher
	}).(NetworkServicesEndpointPolicyEndpointMatcherOutput)
}

// Set of label tags associated with the TcpRoute resource. **Note**: This field is non-authoritative, and will only manage
// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
// the resource.
func (o NetworkServicesEndpointPolicyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the EndpointPolicy resource.
func (o NetworkServicesEndpointPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkServicesEndpointPolicyOutput) NetworkServicesEndpointPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringOutput { return v.NetworkServicesEndpointPolicyId }).(pulumi.StringOutput)
}

func (o NetworkServicesEndpointPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be
// applied to terminate the inbound traffic at the identified backends.
func (o NetworkServicesEndpointPolicyOutput) ServerTlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringPtrOutput { return v.ServerTlsPolicy }).(pulumi.StringPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkServicesEndpointPolicyOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkServicesEndpointPolicyOutput) Timeouts() NetworkServicesEndpointPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) NetworkServicesEndpointPolicyTimeoutsPtrOutput {
		return v.Timeouts
	}).(NetworkServicesEndpointPolicyTimeoutsPtrOutput)
}

// Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.
func (o NetworkServicesEndpointPolicyOutput) TrafficPortSelector() NetworkServicesEndpointPolicyTrafficPortSelectorPtrOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) NetworkServicesEndpointPolicyTrafficPortSelectorPtrOutput {
		return v.TrafficPortSelector
	}).(NetworkServicesEndpointPolicyTrafficPortSelectorPtrOutput)
}

// The type of endpoint policy. This is primarily used to validate the configuration. Possible values: ["SIDECAR_PROXY",
// "GRPC_SERVER"]
func (o NetworkServicesEndpointPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Time the TcpRoute was updated in UTC.
func (o NetworkServicesEndpointPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesEndpointPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicesEndpointPolicyInput)(nil)).Elem(), &NetworkServicesEndpointPolicy{})
	pulumi.RegisterOutputType(NetworkServicesEndpointPolicyOutput{})
}
