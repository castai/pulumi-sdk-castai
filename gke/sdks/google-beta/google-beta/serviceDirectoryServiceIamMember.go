// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceDirectoryServiceIamMember struct {
	pulumi.CustomResourceState

	Condition                          ServiceDirectoryServiceIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                               pulumi.StringOutput                                `pulumi:"etag"`
	Member                             pulumi.StringOutput                                `pulumi:"member"`
	Name                               pulumi.StringOutput                                `pulumi:"name"`
	Role                               pulumi.StringOutput                                `pulumi:"role"`
	ServiceDirectoryServiceIamMemberId pulumi.StringOutput                                `pulumi:"serviceDirectoryServiceIamMemberId"`
}

// NewServiceDirectoryServiceIamMember registers a new resource with the given unique name, arguments, and options.
func NewServiceDirectoryServiceIamMember(ctx *pulumi.Context,
	name string, args *ServiceDirectoryServiceIamMemberArgs, opts ...pulumi.ResourceOption) (*ServiceDirectoryServiceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceDirectoryServiceIamMember
	err = ctx.RegisterPackageResource("google-beta:index/serviceDirectoryServiceIamMember:ServiceDirectoryServiceIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceDirectoryServiceIamMember gets an existing ServiceDirectoryServiceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceDirectoryServiceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceDirectoryServiceIamMemberState, opts ...pulumi.ResourceOption) (*ServiceDirectoryServiceIamMember, error) {
	var resource ServiceDirectoryServiceIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/serviceDirectoryServiceIamMember:ServiceDirectoryServiceIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceDirectoryServiceIamMember resources.
type serviceDirectoryServiceIamMemberState struct {
	Condition                          *ServiceDirectoryServiceIamMemberCondition `pulumi:"condition"`
	Etag                               *string                                    `pulumi:"etag"`
	Member                             *string                                    `pulumi:"member"`
	Name                               *string                                    `pulumi:"name"`
	Role                               *string                                    `pulumi:"role"`
	ServiceDirectoryServiceIamMemberId *string                                    `pulumi:"serviceDirectoryServiceIamMemberId"`
}

type ServiceDirectoryServiceIamMemberState struct {
	Condition                          ServiceDirectoryServiceIamMemberConditionPtrInput
	Etag                               pulumi.StringPtrInput
	Member                             pulumi.StringPtrInput
	Name                               pulumi.StringPtrInput
	Role                               pulumi.StringPtrInput
	ServiceDirectoryServiceIamMemberId pulumi.StringPtrInput
}

func (ServiceDirectoryServiceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryServiceIamMemberState)(nil)).Elem()
}

type serviceDirectoryServiceIamMemberArgs struct {
	Condition                          *ServiceDirectoryServiceIamMemberCondition `pulumi:"condition"`
	Member                             string                                     `pulumi:"member"`
	Name                               *string                                    `pulumi:"name"`
	Role                               string                                     `pulumi:"role"`
	ServiceDirectoryServiceIamMemberId *string                                    `pulumi:"serviceDirectoryServiceIamMemberId"`
}

// The set of arguments for constructing a ServiceDirectoryServiceIamMember resource.
type ServiceDirectoryServiceIamMemberArgs struct {
	Condition                          ServiceDirectoryServiceIamMemberConditionPtrInput
	Member                             pulumi.StringInput
	Name                               pulumi.StringPtrInput
	Role                               pulumi.StringInput
	ServiceDirectoryServiceIamMemberId pulumi.StringPtrInput
}

func (ServiceDirectoryServiceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryServiceIamMemberArgs)(nil)).Elem()
}

type ServiceDirectoryServiceIamMemberInput interface {
	pulumi.Input

	ToServiceDirectoryServiceIamMemberOutput() ServiceDirectoryServiceIamMemberOutput
	ToServiceDirectoryServiceIamMemberOutputWithContext(ctx context.Context) ServiceDirectoryServiceIamMemberOutput
}

func (*ServiceDirectoryServiceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryServiceIamMember)(nil)).Elem()
}

func (i *ServiceDirectoryServiceIamMember) ToServiceDirectoryServiceIamMemberOutput() ServiceDirectoryServiceIamMemberOutput {
	return i.ToServiceDirectoryServiceIamMemberOutputWithContext(context.Background())
}

func (i *ServiceDirectoryServiceIamMember) ToServiceDirectoryServiceIamMemberOutputWithContext(ctx context.Context) ServiceDirectoryServiceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDirectoryServiceIamMemberOutput)
}

type ServiceDirectoryServiceIamMemberOutput struct{ *pulumi.OutputState }

func (ServiceDirectoryServiceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryServiceIamMember)(nil)).Elem()
}

func (o ServiceDirectoryServiceIamMemberOutput) ToServiceDirectoryServiceIamMemberOutput() ServiceDirectoryServiceIamMemberOutput {
	return o
}

func (o ServiceDirectoryServiceIamMemberOutput) ToServiceDirectoryServiceIamMemberOutputWithContext(ctx context.Context) ServiceDirectoryServiceIamMemberOutput {
	return o
}

func (o ServiceDirectoryServiceIamMemberOutput) Condition() ServiceDirectoryServiceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamMember) ServiceDirectoryServiceIamMemberConditionPtrOutput {
		return v.Condition
	}).(ServiceDirectoryServiceIamMemberConditionPtrOutput)
}

func (o ServiceDirectoryServiceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceIamMemberOutput) ServiceDirectoryServiceIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryServiceIamMember) pulumi.StringOutput {
		return v.ServiceDirectoryServiceIamMemberId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDirectoryServiceIamMemberInput)(nil)).Elem(), &ServiceDirectoryServiceIamMember{})
	pulumi.RegisterOutputType(ServiceDirectoryServiceIamMemberOutput{})
}
