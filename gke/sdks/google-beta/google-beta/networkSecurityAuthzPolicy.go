// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkSecurityAuthzPolicy struct {
	pulumi.CustomResourceState

	// When the action is CUSTOM, customProvider must be specified. When the action is ALLOW, only requests matching the policy
	// will be allowed. When the action is DENY, only requests matching the policy will be denied. When a request arrives, the
	// policies are evaluated in the following order: 1. If there is a CUSTOM policy that matches the request, the CUSTOM
	// policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the
	// request. 2. If there are any DENY policies that match the request, the request is denied. 3. If there are no ALLOW
	// policies for the resource or if any of the ALLOW policies match the request, the request is allowed. 4. Else the request
	// is denied by default if none of the configured AuthzPolicies with ALLOW action match the request. Possible values:
	// ["ALLOW", "DENY", "CUSTOM"]
	Action pulumi.StringOutput `pulumi:"action"`
	// The timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One
	// of cloudIap or authzExtension must be specified.
	CustomProvider NetworkSecurityAuthzPolicyCustomProviderPtrOutput `pulumi:"customProvider"`
	// A human-readable description of the resource.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP
	// rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow
	// or Deny Action. Limited to 5 rules.
	HttpRules NetworkSecurityAuthzPolicyHttpRuleArrayOutput `pulumi:"httpRules"`
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. Name of the AuthzPolicy resource.
	Name                         pulumi.StringOutput `pulumi:"name"`
	NetworkSecurityAuthzPolicyId pulumi.StringOutput `pulumi:"networkSecurityAuthzPolicyId"`
	Project                      pulumi.StringOutput `pulumi:"project"`
	// Specifies the set of resources to which this policy should be applied to.
	Target NetworkSecurityAuthzPolicyTargetOutput `pulumi:"target"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                      `pulumi:"terraformLabels"`
	Timeouts        NetworkSecurityAuthzPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkSecurityAuthzPolicy registers a new resource with the given unique name, arguments, and options.
func NewNetworkSecurityAuthzPolicy(ctx *pulumi.Context,
	name string, args *NetworkSecurityAuthzPolicyArgs, opts ...pulumi.ResourceOption) (*NetworkSecurityAuthzPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkSecurityAuthzPolicy
	err = ctx.RegisterPackageResource("google-beta:index/networkSecurityAuthzPolicy:NetworkSecurityAuthzPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkSecurityAuthzPolicy gets an existing NetworkSecurityAuthzPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSecurityAuthzPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkSecurityAuthzPolicyState, opts ...pulumi.ResourceOption) (*NetworkSecurityAuthzPolicy, error) {
	var resource NetworkSecurityAuthzPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkSecurityAuthzPolicy:NetworkSecurityAuthzPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkSecurityAuthzPolicy resources.
type networkSecurityAuthzPolicyState struct {
	// When the action is CUSTOM, customProvider must be specified. When the action is ALLOW, only requests matching the policy
	// will be allowed. When the action is DENY, only requests matching the policy will be denied. When a request arrives, the
	// policies are evaluated in the following order: 1. If there is a CUSTOM policy that matches the request, the CUSTOM
	// policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the
	// request. 2. If there are any DENY policies that match the request, the request is denied. 3. If there are no ALLOW
	// policies for the resource or if any of the ALLOW policies match the request, the request is allowed. 4. Else the request
	// is denied by default if none of the configured AuthzPolicies with ALLOW action match the request. Possible values:
	// ["ALLOW", "DENY", "CUSTOM"]
	Action *string `pulumi:"action"`
	// The timestamp when the resource was created.
	CreateTime *string `pulumi:"createTime"`
	// Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One
	// of cloudIap or authzExtension must be specified.
	CustomProvider *NetworkSecurityAuthzPolicyCustomProvider `pulumi:"customProvider"`
	// A human-readable description of the resource.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP
	// rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow
	// or Deny Action. Limited to 5 rules.
	HttpRules []NetworkSecurityAuthzPolicyHttpRule `pulumi:"httpRules"`
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// Identifier. Name of the AuthzPolicy resource.
	Name                         *string `pulumi:"name"`
	NetworkSecurityAuthzPolicyId *string `pulumi:"networkSecurityAuthzPolicyId"`
	Project                      *string `pulumi:"project"`
	// Specifies the set of resources to which this policy should be applied to.
	Target *NetworkSecurityAuthzPolicyTarget `pulumi:"target"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                   `pulumi:"terraformLabels"`
	Timeouts        *NetworkSecurityAuthzPolicyTimeouts `pulumi:"timeouts"`
	// The timestamp when the resource was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkSecurityAuthzPolicyState struct {
	// When the action is CUSTOM, customProvider must be specified. When the action is ALLOW, only requests matching the policy
	// will be allowed. When the action is DENY, only requests matching the policy will be denied. When a request arrives, the
	// policies are evaluated in the following order: 1. If there is a CUSTOM policy that matches the request, the CUSTOM
	// policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the
	// request. 2. If there are any DENY policies that match the request, the request is denied. 3. If there are no ALLOW
	// policies for the resource or if any of the ALLOW policies match the request, the request is allowed. 4. Else the request
	// is denied by default if none of the configured AuthzPolicies with ALLOW action match the request. Possible values:
	// ["ALLOW", "DENY", "CUSTOM"]
	Action pulumi.StringPtrInput
	// The timestamp when the resource was created.
	CreateTime pulumi.StringPtrInput
	// Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One
	// of cloudIap or authzExtension must be specified.
	CustomProvider NetworkSecurityAuthzPolicyCustomProviderPtrInput
	// A human-readable description of the resource.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP
	// rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow
	// or Deny Action. Limited to 5 rules.
	HttpRules NetworkSecurityAuthzPolicyHttpRuleArrayInput
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// Identifier. Name of the AuthzPolicy resource.
	Name                         pulumi.StringPtrInput
	NetworkSecurityAuthzPolicyId pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	// Specifies the set of resources to which this policy should be applied to.
	Target NetworkSecurityAuthzPolicyTargetPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkSecurityAuthzPolicyTimeoutsPtrInput
	// The timestamp when the resource was updated.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkSecurityAuthzPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityAuthzPolicyState)(nil)).Elem()
}

type networkSecurityAuthzPolicyArgs struct {
	// When the action is CUSTOM, customProvider must be specified. When the action is ALLOW, only requests matching the policy
	// will be allowed. When the action is DENY, only requests matching the policy will be denied. When a request arrives, the
	// policies are evaluated in the following order: 1. If there is a CUSTOM policy that matches the request, the CUSTOM
	// policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the
	// request. 2. If there are any DENY policies that match the request, the request is denied. 3. If there are no ALLOW
	// policies for the resource or if any of the ALLOW policies match the request, the request is allowed. 4. Else the request
	// is denied by default if none of the configured AuthzPolicies with ALLOW action match the request. Possible values:
	// ["ALLOW", "DENY", "CUSTOM"]
	Action string `pulumi:"action"`
	// Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One
	// of cloudIap or authzExtension must be specified.
	CustomProvider *NetworkSecurityAuthzPolicyCustomProvider `pulumi:"customProvider"`
	// A human-readable description of the resource.
	Description *string `pulumi:"description"`
	// A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP
	// rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow
	// or Deny Action. Limited to 5 rules.
	HttpRules []NetworkSecurityAuthzPolicyHttpRule `pulumi:"httpRules"`
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the resource.
	Location string `pulumi:"location"`
	// Identifier. Name of the AuthzPolicy resource.
	Name                         *string `pulumi:"name"`
	NetworkSecurityAuthzPolicyId *string `pulumi:"networkSecurityAuthzPolicyId"`
	Project                      *string `pulumi:"project"`
	// Specifies the set of resources to which this policy should be applied to.
	Target   NetworkSecurityAuthzPolicyTarget    `pulumi:"target"`
	Timeouts *NetworkSecurityAuthzPolicyTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NetworkSecurityAuthzPolicy resource.
type NetworkSecurityAuthzPolicyArgs struct {
	// When the action is CUSTOM, customProvider must be specified. When the action is ALLOW, only requests matching the policy
	// will be allowed. When the action is DENY, only requests matching the policy will be denied. When a request arrives, the
	// policies are evaluated in the following order: 1. If there is a CUSTOM policy that matches the request, the CUSTOM
	// policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the
	// request. 2. If there are any DENY policies that match the request, the request is denied. 3. If there are no ALLOW
	// policies for the resource or if any of the ALLOW policies match the request, the request is allowed. 4. Else the request
	// is denied by default if none of the configured AuthzPolicies with ALLOW action match the request. Possible values:
	// ["ALLOW", "DENY", "CUSTOM"]
	Action pulumi.StringInput
	// Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One
	// of cloudIap or authzExtension must be specified.
	CustomProvider NetworkSecurityAuthzPolicyCustomProviderPtrInput
	// A human-readable description of the resource.
	Description pulumi.StringPtrInput
	// A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP
	// rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow
	// or Deny Action. Limited to 5 rules.
	HttpRules NetworkSecurityAuthzPolicyHttpRuleArrayInput
	// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The location of the resource.
	Location pulumi.StringInput
	// Identifier. Name of the AuthzPolicy resource.
	Name                         pulumi.StringPtrInput
	NetworkSecurityAuthzPolicyId pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	// Specifies the set of resources to which this policy should be applied to.
	Target   NetworkSecurityAuthzPolicyTargetInput
	Timeouts NetworkSecurityAuthzPolicyTimeoutsPtrInput
}

func (NetworkSecurityAuthzPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityAuthzPolicyArgs)(nil)).Elem()
}

type NetworkSecurityAuthzPolicyInput interface {
	pulumi.Input

	ToNetworkSecurityAuthzPolicyOutput() NetworkSecurityAuthzPolicyOutput
	ToNetworkSecurityAuthzPolicyOutputWithContext(ctx context.Context) NetworkSecurityAuthzPolicyOutput
}

func (*NetworkSecurityAuthzPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityAuthzPolicy)(nil)).Elem()
}

func (i *NetworkSecurityAuthzPolicy) ToNetworkSecurityAuthzPolicyOutput() NetworkSecurityAuthzPolicyOutput {
	return i.ToNetworkSecurityAuthzPolicyOutputWithContext(context.Background())
}

func (i *NetworkSecurityAuthzPolicy) ToNetworkSecurityAuthzPolicyOutputWithContext(ctx context.Context) NetworkSecurityAuthzPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityAuthzPolicyOutput)
}

type NetworkSecurityAuthzPolicyOutput struct{ *pulumi.OutputState }

func (NetworkSecurityAuthzPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityAuthzPolicy)(nil)).Elem()
}

func (o NetworkSecurityAuthzPolicyOutput) ToNetworkSecurityAuthzPolicyOutput() NetworkSecurityAuthzPolicyOutput {
	return o
}

func (o NetworkSecurityAuthzPolicyOutput) ToNetworkSecurityAuthzPolicyOutputWithContext(ctx context.Context) NetworkSecurityAuthzPolicyOutput {
	return o
}

// When the action is CUSTOM, customProvider must be specified. When the action is ALLOW, only requests matching the policy
// will be allowed. When the action is DENY, only requests matching the policy will be denied. When a request arrives, the
// policies are evaluated in the following order: 1. If there is a CUSTOM policy that matches the request, the CUSTOM
// policy is evaluated using the custom authorization providers and the request is denied if the provider rejects the
// request. 2. If there are any DENY policies that match the request, the request is denied. 3. If there are no ALLOW
// policies for the resource or if any of the ALLOW policies match the request, the request is allowed. 4. Else the request
// is denied by default if none of the configured AuthzPolicies with ALLOW action match the request. Possible values:
// ["ALLOW", "DENY", "CUSTOM"]
func (o NetworkSecurityAuthzPolicyOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

// The timestamp when the resource was created.
func (o NetworkSecurityAuthzPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Required if the action is CUSTOM. Allows delegating authorization decisions to Cloud IAP or to Service Extensions. One
// of cloudIap or authzExtension must be specified.
func (o NetworkSecurityAuthzPolicyOutput) CustomProvider() NetworkSecurityAuthzPolicyCustomProviderPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) NetworkSecurityAuthzPolicyCustomProviderPtrOutput {
		return v.CustomProvider
	}).(NetworkSecurityAuthzPolicyCustomProviderPtrOutput)
}

// A human-readable description of the resource.
func (o NetworkSecurityAuthzPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkSecurityAuthzPolicyOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A list of authorization HTTP rules to match against the incoming request.A policy match occurs when at least one HTTP
// rule matches the request or when no HTTP rules are specified in the policy. At least one HTTP Rule is required for Allow
// or Deny Action. Limited to 5 rules.
func (o NetworkSecurityAuthzPolicyOutput) HttpRules() NetworkSecurityAuthzPolicyHttpRuleArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) NetworkSecurityAuthzPolicyHttpRuleArrayOutput { return v.HttpRules }).(NetworkSecurityAuthzPolicyHttpRuleArrayOutput)
}

// Set of labels associated with the AuthzExtension resource. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o NetworkSecurityAuthzPolicyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the resource.
func (o NetworkSecurityAuthzPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. Name of the AuthzPolicy resource.
func (o NetworkSecurityAuthzPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityAuthzPolicyOutput) NetworkSecurityAuthzPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringOutput { return v.NetworkSecurityAuthzPolicyId }).(pulumi.StringOutput)
}

func (o NetworkSecurityAuthzPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the set of resources to which this policy should be applied to.
func (o NetworkSecurityAuthzPolicyOutput) Target() NetworkSecurityAuthzPolicyTargetOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) NetworkSecurityAuthzPolicyTargetOutput { return v.Target }).(NetworkSecurityAuthzPolicyTargetOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkSecurityAuthzPolicyOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkSecurityAuthzPolicyOutput) Timeouts() NetworkSecurityAuthzPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) NetworkSecurityAuthzPolicyTimeoutsPtrOutput { return v.Timeouts }).(NetworkSecurityAuthzPolicyTimeoutsPtrOutput)
}

// The timestamp when the resource was updated.
func (o NetworkSecurityAuthzPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityAuthzPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityAuthzPolicyInput)(nil)).Elem(), &NetworkSecurityAuthzPolicy{})
	pulumi.RegisterOutputType(NetworkSecurityAuthzPolicyOutput{})
}
