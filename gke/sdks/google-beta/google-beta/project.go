// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Project struct {
	pulumi.CustomResourceState

	// Create the 'default' network automatically. Default true. If set to false, the default network will be deleted. Note
	// that, for quota purposes, you will still need to have 1 network slot available to create the project successfully, even
	// if you set auto_create_network to false, since the network will exist momentarily.
	AutoCreateNetwork pulumi.BoolPtrOutput   `pulumi:"autoCreateNetwork"`
	BillingAccount    pulumi.StringPtrOutput `pulumi:"billingAccount"`
	DeletionPolicy    pulumi.StringPtrOutput `pulumi:"deletionPolicy"`
	EffectiveLabels   pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The numeric ID of the folder this project should be created under. Only one of org_id or folder_id may be specified. If
	// the folder_id is specified, then the project is created under the specified folder. Changing this forces the project to
	// be migrated to the newly specified folder.
	FolderId            pulumi.StringPtrOutput `pulumi:"folderId"`
	GoogleBetaProjectId pulumi.StringOutput    `pulumi:"googleBetaProjectId"`
	// A set of key/value label pairs to assign to the project. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The display name of the project.
	Name pulumi.StringOutput `pulumi:"name"`
	// The numeric identifier of the project.
	Number pulumi.StringOutput `pulumi:"number"`
	// The numeric ID of the organization this project belongs to. Changing this forces a new project to be created. Only one
	// of org_id or folder_id may be specified. If the org_id is specified then the project is created at the top level.
	// Changing this forces the project to be migrated to the newly specified organization.
	OrgId pulumi.StringPtrOutput `pulumi:"orgId"`
	// The project ID. Changing this forces a new project to be created.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored when
	// empty. This field is only set at create time and modifying this field after creation will trigger recreation. To apply
	// tags to an existing resource, see the google-beta.TagsTagValue resource.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// (ReadOnly) The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput   `pulumi:"terraformLabels"`
	Timeouts        ProjectTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOption) (*Project, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource Project
	err = ctx.RegisterPackageResource("google-beta:index/project:Project", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectState, opts ...pulumi.ResourceOption) (*Project, error) {
	var resource Project
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/project:Project", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Project resources.
type projectState struct {
	// Create the 'default' network automatically. Default true. If set to false, the default network will be deleted. Note
	// that, for quota purposes, you will still need to have 1 network slot available to create the project successfully, even
	// if you set auto_create_network to false, since the network will exist momentarily.
	AutoCreateNetwork *bool             `pulumi:"autoCreateNetwork"`
	BillingAccount    *string           `pulumi:"billingAccount"`
	DeletionPolicy    *string           `pulumi:"deletionPolicy"`
	EffectiveLabels   map[string]string `pulumi:"effectiveLabels"`
	// The numeric ID of the folder this project should be created under. Only one of org_id or folder_id may be specified. If
	// the folder_id is specified, then the project is created under the specified folder. Changing this forces the project to
	// be migrated to the newly specified folder.
	FolderId            *string `pulumi:"folderId"`
	GoogleBetaProjectId *string `pulumi:"googleBetaProjectId"`
	// A set of key/value label pairs to assign to the project. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// The display name of the project.
	Name *string `pulumi:"name"`
	// The numeric identifier of the project.
	Number *string `pulumi:"number"`
	// The numeric ID of the organization this project belongs to. Changing this forces a new project to be created. Only one
	// of org_id or folder_id may be specified. If the org_id is specified then the project is created at the top level.
	// Changing this forces the project to be migrated to the newly specified organization.
	OrgId *string `pulumi:"orgId"`
	// The project ID. Changing this forces a new project to be created.
	ProjectId *string `pulumi:"projectId"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored when
	// empty. This field is only set at create time and modifying this field after creation will trigger recreation. To apply
	// tags to an existing resource, see the google-beta.TagsTagValue resource.
	Tags map[string]string `pulumi:"tags"`
	// (ReadOnly) The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string `pulumi:"terraformLabels"`
	Timeouts        *ProjectTimeouts  `pulumi:"timeouts"`
}

type ProjectState struct {
	// Create the 'default' network automatically. Default true. If set to false, the default network will be deleted. Note
	// that, for quota purposes, you will still need to have 1 network slot available to create the project successfully, even
	// if you set auto_create_network to false, since the network will exist momentarily.
	AutoCreateNetwork pulumi.BoolPtrInput
	BillingAccount    pulumi.StringPtrInput
	DeletionPolicy    pulumi.StringPtrInput
	EffectiveLabels   pulumi.StringMapInput
	// The numeric ID of the folder this project should be created under. Only one of org_id or folder_id may be specified. If
	// the folder_id is specified, then the project is created under the specified folder. Changing this forces the project to
	// be migrated to the newly specified folder.
	FolderId            pulumi.StringPtrInput
	GoogleBetaProjectId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the project. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// The display name of the project.
	Name pulumi.StringPtrInput
	// The numeric identifier of the project.
	Number pulumi.StringPtrInput
	// The numeric ID of the organization this project belongs to. Changing this forces a new project to be created. Only one
	// of org_id or folder_id may be specified. If the org_id is specified then the project is created at the top level.
	// Changing this forces the project to be migrated to the newly specified organization.
	OrgId pulumi.StringPtrInput
	// The project ID. Changing this forces a new project to be created.
	ProjectId pulumi.StringPtrInput
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored when
	// empty. This field is only set at create time and modifying this field after creation will trigger recreation. To apply
	// tags to an existing resource, see the google-beta.TagsTagValue resource.
	Tags pulumi.StringMapInput
	// (ReadOnly) The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ProjectTimeoutsPtrInput
}

func (ProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectState)(nil)).Elem()
}

type projectArgs struct {
	// Create the 'default' network automatically. Default true. If set to false, the default network will be deleted. Note
	// that, for quota purposes, you will still need to have 1 network slot available to create the project successfully, even
	// if you set auto_create_network to false, since the network will exist momentarily.
	AutoCreateNetwork *bool   `pulumi:"autoCreateNetwork"`
	BillingAccount    *string `pulumi:"billingAccount"`
	DeletionPolicy    *string `pulumi:"deletionPolicy"`
	// The numeric ID of the folder this project should be created under. Only one of org_id or folder_id may be specified. If
	// the folder_id is specified, then the project is created under the specified folder. Changing this forces the project to
	// be migrated to the newly specified folder.
	FolderId            *string `pulumi:"folderId"`
	GoogleBetaProjectId *string `pulumi:"googleBetaProjectId"`
	// A set of key/value label pairs to assign to the project. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// The display name of the project.
	Name *string `pulumi:"name"`
	// The numeric ID of the organization this project belongs to. Changing this forces a new project to be created. Only one
	// of org_id or folder_id may be specified. If the org_id is specified then the project is created at the top level.
	// Changing this forces the project to be migrated to the newly specified organization.
	OrgId *string `pulumi:"orgId"`
	// The project ID. Changing this forces a new project to be created.
	ProjectId string `pulumi:"projectId"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored when
	// empty. This field is only set at create time and modifying this field after creation will trigger recreation. To apply
	// tags to an existing resource, see the google-beta.TagsTagValue resource.
	Tags     map[string]string `pulumi:"tags"`
	Timeouts *ProjectTimeouts  `pulumi:"timeouts"`
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// Create the 'default' network automatically. Default true. If set to false, the default network will be deleted. Note
	// that, for quota purposes, you will still need to have 1 network slot available to create the project successfully, even
	// if you set auto_create_network to false, since the network will exist momentarily.
	AutoCreateNetwork pulumi.BoolPtrInput
	BillingAccount    pulumi.StringPtrInput
	DeletionPolicy    pulumi.StringPtrInput
	// The numeric ID of the folder this project should be created under. Only one of org_id or folder_id may be specified. If
	// the folder_id is specified, then the project is created under the specified folder. Changing this forces the project to
	// be migrated to the newly specified folder.
	FolderId            pulumi.StringPtrInput
	GoogleBetaProjectId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the project. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// The display name of the project.
	Name pulumi.StringPtrInput
	// The numeric ID of the organization this project belongs to. Changing this forces a new project to be created. Only one
	// of org_id or folder_id may be specified. If the org_id is specified then the project is created at the top level.
	// Changing this forces the project to be migrated to the newly specified organization.
	OrgId pulumi.StringPtrInput
	// The project ID. Changing this forces a new project to be created.
	ProjectId pulumi.StringInput
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored when
	// empty. This field is only set at create time and modifying this field after creation will trigger recreation. To apply
	// tags to an existing resource, see the google-beta.TagsTagValue resource.
	Tags     pulumi.StringMapInput
	Timeouts ProjectTimeoutsPtrInput
}

func (ProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectArgs)(nil)).Elem()
}

type ProjectInput interface {
	pulumi.Input

	ToProjectOutput() ProjectOutput
	ToProjectOutputWithContext(ctx context.Context) ProjectOutput
}

func (*Project) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil)).Elem()
}

func (i *Project) ToProjectOutput() ProjectOutput {
	return i.ToProjectOutputWithContext(context.Background())
}

func (i *Project) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOutput)
}

type ProjectOutput struct{ *pulumi.OutputState }

func (ProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil)).Elem()
}

func (o ProjectOutput) ToProjectOutput() ProjectOutput {
	return o
}

func (o ProjectOutput) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return o
}

// Create the 'default' network automatically. Default true. If set to false, the default network will be deleted. Note
// that, for quota purposes, you will still need to have 1 network slot available to create the project successfully, even
// if you set auto_create_network to false, since the network will exist momentarily.
func (o ProjectOutput) AutoCreateNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.BoolPtrOutput { return v.AutoCreateNetwork }).(pulumi.BoolPtrOutput)
}

func (o ProjectOutput) BillingAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.BillingAccount }).(pulumi.StringPtrOutput)
}

func (o ProjectOutput) DeletionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.DeletionPolicy }).(pulumi.StringPtrOutput)
}

func (o ProjectOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Project) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The numeric ID of the folder this project should be created under. Only one of org_id or folder_id may be specified. If
// the folder_id is specified, then the project is created under the specified folder. Changing this forces the project to
// be migrated to the newly specified folder.
func (o ProjectOutput) FolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.FolderId }).(pulumi.StringPtrOutput)
}

func (o ProjectOutput) GoogleBetaProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.GoogleBetaProjectId }).(pulumi.StringOutput)
}

// A set of key/value label pairs to assign to the project. **Note**: This field is non-authoritative, and will only manage
// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
// the resource.
func (o ProjectOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Project) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The display name of the project.
func (o ProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The numeric identifier of the project.
func (o ProjectOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.Number }).(pulumi.StringOutput)
}

// The numeric ID of the organization this project belongs to. Changing this forces a new project to be created. Only one
// of org_id or folder_id may be specified. If the org_id is specified then the project is created at the top level.
// Changing this forces the project to be migrated to the newly specified organization.
func (o ProjectOutput) OrgId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Project) pulumi.StringPtrOutput { return v.OrgId }).(pulumi.StringPtrOutput)
}

// The project ID. Changing this forces a new project to be created.
func (o ProjectOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Project) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored when
// empty. This field is only set at create time and modifying this field after creation will trigger recreation. To apply
// tags to an existing resource, see the google-beta.TagsTagValue resource.
func (o ProjectOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Project) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// (ReadOnly) The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ProjectOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Project) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ProjectOutput) Timeouts() ProjectTimeoutsPtrOutput {
	return o.ApplyT(func(v *Project) ProjectTimeoutsPtrOutput { return v.Timeouts }).(ProjectTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectInput)(nil)).Elem(), &Project{})
	pulumi.RegisterOutputType(ProjectOutput{})
}
