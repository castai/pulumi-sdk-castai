// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDataformRepositoryIamPolicy(ctx *pulumi.Context, args *LookupDataformRepositoryIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupDataformRepositoryIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupDataformRepositoryIamPolicyResult
	err = ctx.InvokePackage("google-beta:index/getDataformRepositoryIamPolicy:getDataformRepositoryIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataformRepositoryIamPolicy.
type LookupDataformRepositoryIamPolicyArgs struct {
	Id         *string `pulumi:"id"`
	Project    *string `pulumi:"project"`
	Region     *string `pulumi:"region"`
	Repository string  `pulumi:"repository"`
}

// A collection of values returned by getDataformRepositoryIamPolicy.
type LookupDataformRepositoryIamPolicyResult struct {
	Etag       string `pulumi:"etag"`
	Id         string `pulumi:"id"`
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Region     string `pulumi:"region"`
	Repository string `pulumi:"repository"`
}

func LookupDataformRepositoryIamPolicyOutput(ctx *pulumi.Context, args LookupDataformRepositoryIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupDataformRepositoryIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDataformRepositoryIamPolicyResultOutput, error) {
			args := v.(LookupDataformRepositoryIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupDataformRepositoryIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getDataformRepositoryIamPolicy:getDataformRepositoryIamPolicy", args, LookupDataformRepositoryIamPolicyResultOutput{}, options).(LookupDataformRepositoryIamPolicyResultOutput), nil
		}).(LookupDataformRepositoryIamPolicyResultOutput)
}

// A collection of arguments for invoking getDataformRepositoryIamPolicy.
type LookupDataformRepositoryIamPolicyOutputArgs struct {
	Id         pulumi.StringPtrInput `pulumi:"id"`
	Project    pulumi.StringPtrInput `pulumi:"project"`
	Region     pulumi.StringPtrInput `pulumi:"region"`
	Repository pulumi.StringInput    `pulumi:"repository"`
}

func (LookupDataformRepositoryIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataformRepositoryIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getDataformRepositoryIamPolicy.
type LookupDataformRepositoryIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupDataformRepositoryIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataformRepositoryIamPolicyResult)(nil)).Elem()
}

func (o LookupDataformRepositoryIamPolicyResultOutput) ToLookupDataformRepositoryIamPolicyResultOutput() LookupDataformRepositoryIamPolicyResultOutput {
	return o
}

func (o LookupDataformRepositoryIamPolicyResultOutput) ToLookupDataformRepositoryIamPolicyResultOutputWithContext(ctx context.Context) LookupDataformRepositoryIamPolicyResultOutput {
	return o
}

func (o LookupDataformRepositoryIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataformRepositoryIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupDataformRepositoryIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataformRepositoryIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDataformRepositoryIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataformRepositoryIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupDataformRepositoryIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataformRepositoryIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupDataformRepositoryIamPolicyResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataformRepositoryIamPolicyResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupDataformRepositoryIamPolicyResultOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDataformRepositoryIamPolicyResult) string { return v.Repository }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataformRepositoryIamPolicyResultOutput{})
}
