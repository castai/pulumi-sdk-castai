// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClouddeployAutomation struct {
	pulumi.CustomResourceState

	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations             pulumi.StringMapOutput `pulumi:"annotations"`
	ClouddeployAutomationId pulumi.StringOutput    `pulumi:"clouddeployAutomationId"`
	// Output only. Time at which the automation was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The delivery_pipeline for the resource
	DeliveryPipeline pulumi.StringOutput `pulumi:"deliveryPipeline"`
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. The weak etag of the 'Automation' resource. This checksum is computed by the server based on the value of
	// other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before
	// proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the 'Automation'.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to
	// 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	Rules ClouddeployAutomationRuleArrayOutput `pulumi:"rules"`
	// Required. Selected resources to which the automation will be applied.
	Selector ClouddeployAutomationSelectorOutput `pulumi:"selector"`
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended pulumi.BoolPtrOutput `pulumi:"suspended"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                 `pulumi:"terraformLabels"`
	Timeouts        ClouddeployAutomationTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. Unique identifier of the 'Automation'.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Output only. Time at which the automation was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewClouddeployAutomation registers a new resource with the given unique name, arguments, and options.
func NewClouddeployAutomation(ctx *pulumi.Context,
	name string, args *ClouddeployAutomationArgs, opts ...pulumi.ResourceOption) (*ClouddeployAutomation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeliveryPipeline == nil {
		return nil, errors.New("invalid value for required argument 'DeliveryPipeline'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.Selector == nil {
		return nil, errors.New("invalid value for required argument 'Selector'")
	}
	if args.ServiceAccount == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccount'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ClouddeployAutomation
	err = ctx.RegisterPackageResource("google-beta:index/clouddeployAutomation:ClouddeployAutomation", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClouddeployAutomation gets an existing ClouddeployAutomation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClouddeployAutomation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClouddeployAutomationState, opts ...pulumi.ResourceOption) (*ClouddeployAutomation, error) {
	var resource ClouddeployAutomation
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/clouddeployAutomation:ClouddeployAutomation", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClouddeployAutomation resources.
type clouddeployAutomationState struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations             map[string]string `pulumi:"annotations"`
	ClouddeployAutomationId *string           `pulumi:"clouddeployAutomationId"`
	// Output only. Time at which the automation was created.
	CreateTime *string `pulumi:"createTime"`
	// The delivery_pipeline for the resource
	DeliveryPipeline *string `pulumi:"deliveryPipeline"`
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description          *string           `pulumi:"description"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// Optional. The weak etag of the 'Automation' resource. This checksum is computed by the server based on the value of
	// other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before
	// proceeding.
	Etag *string `pulumi:"etag"`
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// Name of the 'Automation'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to
	// 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	Rules []ClouddeployAutomationRule `pulumi:"rules"`
	// Required. Selected resources to which the automation will be applied.
	Selector *ClouddeployAutomationSelector `pulumi:"selector"`
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended *bool `pulumi:"suspended"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string              `pulumi:"terraformLabels"`
	Timeouts        *ClouddeployAutomationTimeouts `pulumi:"timeouts"`
	// Output only. Unique identifier of the 'Automation'.
	Uid *string `pulumi:"uid"`
	// Output only. Time at which the automation was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ClouddeployAutomationState struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations             pulumi.StringMapInput
	ClouddeployAutomationId pulumi.StringPtrInput
	// Output only. Time at which the automation was created.
	CreateTime pulumi.StringPtrInput
	// The delivery_pipeline for the resource
	DeliveryPipeline pulumi.StringPtrInput
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// Optional. The weak etag of the 'Automation' resource. This checksum is computed by the server based on the value of
	// other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before
	// proceeding.
	Etag pulumi.StringPtrInput
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// Name of the 'Automation'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to
	// 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	Rules ClouddeployAutomationRuleArrayInput
	// Required. Selected resources to which the automation will be applied.
	Selector ClouddeployAutomationSelectorPtrInput
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount pulumi.StringPtrInput
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended pulumi.BoolPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ClouddeployAutomationTimeoutsPtrInput
	// Output only. Unique identifier of the 'Automation'.
	Uid pulumi.StringPtrInput
	// Output only. Time at which the automation was updated.
	UpdateTime pulumi.StringPtrInput
}

func (ClouddeployAutomationState) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddeployAutomationState)(nil)).Elem()
}

type clouddeployAutomationArgs struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations             map[string]string `pulumi:"annotations"`
	ClouddeployAutomationId *string           `pulumi:"clouddeployAutomationId"`
	// The delivery_pipeline for the resource
	DeliveryPipeline string `pulumi:"deliveryPipeline"`
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description *string `pulumi:"description"`
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location string `pulumi:"location"`
	// Name of the 'Automation'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to
	// 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	Rules []ClouddeployAutomationRule `pulumi:"rules"`
	// Required. Selected resources to which the automation will be applied.
	Selector ClouddeployAutomationSelector `pulumi:"selector"`
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount string `pulumi:"serviceAccount"`
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended *bool                          `pulumi:"suspended"`
	Timeouts  *ClouddeployAutomationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ClouddeployAutomation resource.
type ClouddeployAutomationArgs struct {
	// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
	// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
	// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
	// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
	// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
	// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
	// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
	// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
	// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
	Annotations             pulumi.StringMapInput
	ClouddeployAutomationId pulumi.StringPtrInput
	// The delivery_pipeline for the resource
	DeliveryPipeline pulumi.StringInput
	// Optional. Description of the 'Automation'. Max length is 255 characters.
	Description pulumi.StringPtrInput
	// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
	// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
	// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
	// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
	// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringInput
	// Name of the 'Automation'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to
	// 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
	Rules ClouddeployAutomationRuleArrayInput
	// Required. Selected resources to which the automation will be applied.
	Selector ClouddeployAutomationSelectorInput
	// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
	ServiceAccount pulumi.StringInput
	// Optional. When Suspended, automation is deactivated from execution.
	Suspended pulumi.BoolPtrInput
	Timeouts  ClouddeployAutomationTimeoutsPtrInput
}

func (ClouddeployAutomationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddeployAutomationArgs)(nil)).Elem()
}

type ClouddeployAutomationInput interface {
	pulumi.Input

	ToClouddeployAutomationOutput() ClouddeployAutomationOutput
	ToClouddeployAutomationOutputWithContext(ctx context.Context) ClouddeployAutomationOutput
}

func (*ClouddeployAutomation) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddeployAutomation)(nil)).Elem()
}

func (i *ClouddeployAutomation) ToClouddeployAutomationOutput() ClouddeployAutomationOutput {
	return i.ToClouddeployAutomationOutputWithContext(context.Background())
}

func (i *ClouddeployAutomation) ToClouddeployAutomationOutputWithContext(ctx context.Context) ClouddeployAutomationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClouddeployAutomationOutput)
}

type ClouddeployAutomationOutput struct{ *pulumi.OutputState }

func (ClouddeployAutomationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddeployAutomation)(nil)).Elem()
}

func (o ClouddeployAutomationOutput) ToClouddeployAutomationOutput() ClouddeployAutomationOutput {
	return o
}

func (o ClouddeployAutomationOutput) ToClouddeployAutomationOutputWithContext(ctx context.Context) ClouddeployAutomationOutput {
	return o
}

// Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations
// must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an
// optional prefix and name, separated by a slash ('/'). * The name segment is required and must be 63 characters or less,
// beginning and ending with an alphanumeric character ('[a-z0-9A-Z]') with dashes ('-'), underscores ('_'), dots ('.'),
// and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS
// labels separated by dots('.'), not longer than 253 characters in total, followed by a slash ('/'). See
// https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more
// details. **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
// Please refer to the field 'effective_annotations' for all of the annotations present on the resource.
func (o ClouddeployAutomationOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o ClouddeployAutomationOutput) ClouddeployAutomationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.ClouddeployAutomationId }).(pulumi.StringOutput)
}

// Output only. Time at which the automation was created.
func (o ClouddeployAutomationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The delivery_pipeline for the resource
func (o ClouddeployAutomationOutput) DeliveryPipeline() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.DeliveryPipeline }).(pulumi.StringOutput)
}

// Optional. Description of the 'Automation'. Max length is 255 characters.
func (o ClouddeployAutomationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ClouddeployAutomationOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o ClouddeployAutomationOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. The weak etag of the 'Automation' resource. This checksum is computed by the server based on the value of
// other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before
// proceeding.
func (o ClouddeployAutomationOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the
// following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and
// dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a
// lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values
// are additionally constrained to be <= 63 characters. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o ClouddeployAutomationOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location for the resource
func (o ClouddeployAutomationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the 'Automation'.
func (o ClouddeployAutomationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ClouddeployAutomationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to
// 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution.
func (o ClouddeployAutomationOutput) Rules() ClouddeployAutomationRuleArrayOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) ClouddeployAutomationRuleArrayOutput { return v.Rules }).(ClouddeployAutomationRuleArrayOutput)
}

// Required. Selected resources to which the automation will be applied.
func (o ClouddeployAutomationOutput) Selector() ClouddeployAutomationSelectorOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) ClouddeployAutomationSelectorOutput { return v.Selector }).(ClouddeployAutomationSelectorOutput)
}

// Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
func (o ClouddeployAutomationOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Optional. When Suspended, automation is deactivated from execution.
func (o ClouddeployAutomationOutput) Suspended() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.BoolPtrOutput { return v.Suspended }).(pulumi.BoolPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ClouddeployAutomationOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ClouddeployAutomationOutput) Timeouts() ClouddeployAutomationTimeoutsPtrOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) ClouddeployAutomationTimeoutsPtrOutput { return v.Timeouts }).(ClouddeployAutomationTimeoutsPtrOutput)
}

// Output only. Unique identifier of the 'Automation'.
func (o ClouddeployAutomationOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Output only. Time at which the automation was updated.
func (o ClouddeployAutomationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployAutomation) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClouddeployAutomationInput)(nil)).Elem(), &ClouddeployAutomation{})
	pulumi.RegisterOutputType(ClouddeployAutomationOutput{})
}
