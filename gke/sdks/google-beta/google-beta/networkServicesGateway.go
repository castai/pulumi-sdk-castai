// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkServicesGateway struct {
	pulumi.CustomResourceState

	// Zero or one IPv4-address on which the Gateway will receive the traffic. When no address is provided, an IP from the
	// subnetwork is allocated This field only applies to gateways of type 'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH'
	// listen on 0.0.0.0.
	Addresses pulumi.StringArrayOutput `pulumi:"addresses"`
	// A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing
	// a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.
	CertificateUrls pulumi.StringArrayOutput `pulumi:"certificateUrls"`
	// Time the AccessPolicy was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// When deleting a gateway of type 'SECURE_WEB_GATEWAY', this boolean option will also delete auto generated router by the
	// gateway creation. If there is no other gateway of type 'SECURE_WEB_GATEWAY' remaining for that region and network it
	// will be deleted.
	DeleteSwgAutogenRouterOnDestroy pulumi.BoolPtrOutput `pulumi:"deleteSwgAutogenRouterOnDestroy"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM
	// to Proxy) initiated connections. For example: 'projects/*/locations/*/gatewaySecurityPolicies/swg-policy'. This policy
	// is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	GatewaySecurityPolicy pulumi.StringPtrOutput `pulumi:"gatewaySecurityPolicy"`
	// Set of label tags associated with the Gateway resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the gateway. The default value is 'global'.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Short name of the Gateway resource to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The relative resource name identifying the VPC network that is using this configuration. For example:
	// 'projects/*/global/networks/network-1'. Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	Network                  pulumi.StringPtrOutput `pulumi:"network"`
	NetworkServicesGatewayId pulumi.StringOutput    `pulumi:"networkServicesGatewayId"`
	// One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports.
	// Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 and support
	// multiple ports.
	Ports   pulumi.Float64ArrayOutput `pulumi:"ports"`
	Project pulumi.StringOutput       `pulumi:"project"`
	// The routing mode of the Gateway. This field is configurable only for gateways of type SECURE_WEB_GATEWAY. This field is
	// required for gateways of type SECURE_WEB_GATEWAY. Possible values: ["NEXT_HOP_ROUTING_MODE"]
	RoutingMode pulumi.StringPtrOutput `pulumi:"routingMode"`
	// Immutable. Scope determines how configuration across multiple Gateway instances are merged. The configuration for
	// multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load
	// balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// Server-defined URL of this resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is
	// disabled.
	ServerTlsPolicy pulumi.StringPtrOutput `pulumi:"serverTlsPolicy"`
	// The relative resource name identifying the subnetwork in which this SWG is allocated. For example:
	// 'projects/*/regions/us-central1/subnetworks/network-1'. Currently, this field is specific to gateways of type
	// 'SECURE_WEB_GATEWAY.
	Subnetwork pulumi.StringPtrOutput `pulumi:"subnetwork"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                  `pulumi:"terraformLabels"`
	Timeouts        NetworkServicesGatewayTimeoutsPtrOutput `pulumi:"timeouts"`
	// Immutable. The type of the customer-managed gateway. Possible values are: * OPEN_MESH * SECURE_WEB_GATEWAY. Possible
	// values: ["TYPE_UNSPECIFIED", "OPEN_MESH", "SECURE_WEB_GATEWAY"]
	Type pulumi.StringOutput `pulumi:"type"`
	// Time the AccessPolicy was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkServicesGateway registers a new resource with the given unique name, arguments, and options.
func NewNetworkServicesGateway(ctx *pulumi.Context,
	name string, args *NetworkServicesGatewayArgs, opts ...pulumi.ResourceOption) (*NetworkServicesGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ports == nil {
		return nil, errors.New("invalid value for required argument 'Ports'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkServicesGateway
	err = ctx.RegisterPackageResource("google-beta:index/networkServicesGateway:NetworkServicesGateway", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkServicesGateway gets an existing NetworkServicesGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkServicesGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkServicesGatewayState, opts ...pulumi.ResourceOption) (*NetworkServicesGateway, error) {
	var resource NetworkServicesGateway
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkServicesGateway:NetworkServicesGateway", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkServicesGateway resources.
type networkServicesGatewayState struct {
	// Zero or one IPv4-address on which the Gateway will receive the traffic. When no address is provided, an IP from the
	// subnetwork is allocated This field only applies to gateways of type 'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH'
	// listen on 0.0.0.0.
	Addresses []string `pulumi:"addresses"`
	// A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing
	// a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.
	CertificateUrls []string `pulumi:"certificateUrls"`
	// Time the AccessPolicy was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// When deleting a gateway of type 'SECURE_WEB_GATEWAY', this boolean option will also delete auto generated router by the
	// gateway creation. If there is no other gateway of type 'SECURE_WEB_GATEWAY' remaining for that region and network it
	// will be deleted.
	DeleteSwgAutogenRouterOnDestroy *bool `pulumi:"deleteSwgAutogenRouterOnDestroy"`
	// A free-text description of the resource. Max length 1024 characters.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM
	// to Proxy) initiated connections. For example: 'projects/*/locations/*/gatewaySecurityPolicies/swg-policy'. This policy
	// is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	GatewaySecurityPolicy *string `pulumi:"gatewaySecurityPolicy"`
	// Set of label tags associated with the Gateway resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the gateway. The default value is 'global'.
	Location *string `pulumi:"location"`
	// Short name of the Gateway resource to be created.
	Name *string `pulumi:"name"`
	// The relative resource name identifying the VPC network that is using this configuration. For example:
	// 'projects/*/global/networks/network-1'. Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	Network                  *string `pulumi:"network"`
	NetworkServicesGatewayId *string `pulumi:"networkServicesGatewayId"`
	// One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports.
	// Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 and support
	// multiple ports.
	Ports   []float64 `pulumi:"ports"`
	Project *string   `pulumi:"project"`
	// The routing mode of the Gateway. This field is configurable only for gateways of type SECURE_WEB_GATEWAY. This field is
	// required for gateways of type SECURE_WEB_GATEWAY. Possible values: ["NEXT_HOP_ROUTING_MODE"]
	RoutingMode *string `pulumi:"routingMode"`
	// Immutable. Scope determines how configuration across multiple Gateway instances are merged. The configuration for
	// multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load
	// balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
	Scope *string `pulumi:"scope"`
	// Server-defined URL of this resource.
	SelfLink *string `pulumi:"selfLink"`
	// A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is
	// disabled.
	ServerTlsPolicy *string `pulumi:"serverTlsPolicy"`
	// The relative resource name identifying the subnetwork in which this SWG is allocated. For example:
	// 'projects/*/regions/us-central1/subnetworks/network-1'. Currently, this field is specific to gateways of type
	// 'SECURE_WEB_GATEWAY.
	Subnetwork *string `pulumi:"subnetwork"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string               `pulumi:"terraformLabels"`
	Timeouts        *NetworkServicesGatewayTimeouts `pulumi:"timeouts"`
	// Immutable. The type of the customer-managed gateway. Possible values are: * OPEN_MESH * SECURE_WEB_GATEWAY. Possible
	// values: ["TYPE_UNSPECIFIED", "OPEN_MESH", "SECURE_WEB_GATEWAY"]
	Type *string `pulumi:"type"`
	// Time the AccessPolicy was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkServicesGatewayState struct {
	// Zero or one IPv4-address on which the Gateway will receive the traffic. When no address is provided, an IP from the
	// subnetwork is allocated This field only applies to gateways of type 'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH'
	// listen on 0.0.0.0.
	Addresses pulumi.StringArrayInput
	// A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing
	// a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.
	CertificateUrls pulumi.StringArrayInput
	// Time the AccessPolicy was created in UTC.
	CreateTime pulumi.StringPtrInput
	// When deleting a gateway of type 'SECURE_WEB_GATEWAY', this boolean option will also delete auto generated router by the
	// gateway creation. If there is no other gateway of type 'SECURE_WEB_GATEWAY' remaining for that region and network it
	// will be deleted.
	DeleteSwgAutogenRouterOnDestroy pulumi.BoolPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM
	// to Proxy) initiated connections. For example: 'projects/*/locations/*/gatewaySecurityPolicies/swg-policy'. This policy
	// is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	GatewaySecurityPolicy pulumi.StringPtrInput
	// Set of label tags associated with the Gateway resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// The location of the gateway. The default value is 'global'.
	Location pulumi.StringPtrInput
	// Short name of the Gateway resource to be created.
	Name pulumi.StringPtrInput
	// The relative resource name identifying the VPC network that is using this configuration. For example:
	// 'projects/*/global/networks/network-1'. Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	Network                  pulumi.StringPtrInput
	NetworkServicesGatewayId pulumi.StringPtrInput
	// One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports.
	// Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 and support
	// multiple ports.
	Ports   pulumi.Float64ArrayInput
	Project pulumi.StringPtrInput
	// The routing mode of the Gateway. This field is configurable only for gateways of type SECURE_WEB_GATEWAY. This field is
	// required for gateways of type SECURE_WEB_GATEWAY. Possible values: ["NEXT_HOP_ROUTING_MODE"]
	RoutingMode pulumi.StringPtrInput
	// Immutable. Scope determines how configuration across multiple Gateway instances are merged. The configuration for
	// multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load
	// balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
	Scope pulumi.StringPtrInput
	// Server-defined URL of this resource.
	SelfLink pulumi.StringPtrInput
	// A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is
	// disabled.
	ServerTlsPolicy pulumi.StringPtrInput
	// The relative resource name identifying the subnetwork in which this SWG is allocated. For example:
	// 'projects/*/regions/us-central1/subnetworks/network-1'. Currently, this field is specific to gateways of type
	// 'SECURE_WEB_GATEWAY.
	Subnetwork pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkServicesGatewayTimeoutsPtrInput
	// Immutable. The type of the customer-managed gateway. Possible values are: * OPEN_MESH * SECURE_WEB_GATEWAY. Possible
	// values: ["TYPE_UNSPECIFIED", "OPEN_MESH", "SECURE_WEB_GATEWAY"]
	Type pulumi.StringPtrInput
	// Time the AccessPolicy was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkServicesGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesGatewayState)(nil)).Elem()
}

type networkServicesGatewayArgs struct {
	// Zero or one IPv4-address on which the Gateway will receive the traffic. When no address is provided, an IP from the
	// subnetwork is allocated This field only applies to gateways of type 'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH'
	// listen on 0.0.0.0.
	Addresses []string `pulumi:"addresses"`
	// A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing
	// a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.
	CertificateUrls []string `pulumi:"certificateUrls"`
	// When deleting a gateway of type 'SECURE_WEB_GATEWAY', this boolean option will also delete auto generated router by the
	// gateway creation. If there is no other gateway of type 'SECURE_WEB_GATEWAY' remaining for that region and network it
	// will be deleted.
	DeleteSwgAutogenRouterOnDestroy *bool `pulumi:"deleteSwgAutogenRouterOnDestroy"`
	// A free-text description of the resource. Max length 1024 characters.
	Description *string `pulumi:"description"`
	// A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM
	// to Proxy) initiated connections. For example: 'projects/*/locations/*/gatewaySecurityPolicies/swg-policy'. This policy
	// is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	GatewaySecurityPolicy *string `pulumi:"gatewaySecurityPolicy"`
	// Set of label tags associated with the Gateway resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the gateway. The default value is 'global'.
	Location *string `pulumi:"location"`
	// Short name of the Gateway resource to be created.
	Name *string `pulumi:"name"`
	// The relative resource name identifying the VPC network that is using this configuration. For example:
	// 'projects/*/global/networks/network-1'. Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	Network                  *string `pulumi:"network"`
	NetworkServicesGatewayId *string `pulumi:"networkServicesGatewayId"`
	// One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports.
	// Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 and support
	// multiple ports.
	Ports   []float64 `pulumi:"ports"`
	Project *string   `pulumi:"project"`
	// The routing mode of the Gateway. This field is configurable only for gateways of type SECURE_WEB_GATEWAY. This field is
	// required for gateways of type SECURE_WEB_GATEWAY. Possible values: ["NEXT_HOP_ROUTING_MODE"]
	RoutingMode *string `pulumi:"routingMode"`
	// Immutable. Scope determines how configuration across multiple Gateway instances are merged. The configuration for
	// multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load
	// balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
	Scope *string `pulumi:"scope"`
	// A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is
	// disabled.
	ServerTlsPolicy *string `pulumi:"serverTlsPolicy"`
	// The relative resource name identifying the subnetwork in which this SWG is allocated. For example:
	// 'projects/*/regions/us-central1/subnetworks/network-1'. Currently, this field is specific to gateways of type
	// 'SECURE_WEB_GATEWAY.
	Subnetwork *string                         `pulumi:"subnetwork"`
	Timeouts   *NetworkServicesGatewayTimeouts `pulumi:"timeouts"`
	// Immutable. The type of the customer-managed gateway. Possible values are: * OPEN_MESH * SECURE_WEB_GATEWAY. Possible
	// values: ["TYPE_UNSPECIFIED", "OPEN_MESH", "SECURE_WEB_GATEWAY"]
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a NetworkServicesGateway resource.
type NetworkServicesGatewayArgs struct {
	// Zero or one IPv4-address on which the Gateway will receive the traffic. When no address is provided, an IP from the
	// subnetwork is allocated This field only applies to gateways of type 'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH'
	// listen on 0.0.0.0.
	Addresses pulumi.StringArrayInput
	// A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing
	// a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.
	CertificateUrls pulumi.StringArrayInput
	// When deleting a gateway of type 'SECURE_WEB_GATEWAY', this boolean option will also delete auto generated router by the
	// gateway creation. If there is no other gateway of type 'SECURE_WEB_GATEWAY' remaining for that region and network it
	// will be deleted.
	DeleteSwgAutogenRouterOnDestroy pulumi.BoolPtrInput
	// A free-text description of the resource. Max length 1024 characters.
	Description pulumi.StringPtrInput
	// A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM
	// to Proxy) initiated connections. For example: 'projects/*/locations/*/gatewaySecurityPolicies/swg-policy'. This policy
	// is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	GatewaySecurityPolicy pulumi.StringPtrInput
	// Set of label tags associated with the Gateway resource. **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// The location of the gateway. The default value is 'global'.
	Location pulumi.StringPtrInput
	// Short name of the Gateway resource to be created.
	Name pulumi.StringPtrInput
	// The relative resource name identifying the VPC network that is using this configuration. For example:
	// 'projects/*/global/networks/network-1'. Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY'.
	Network                  pulumi.StringPtrInput
	NetworkServicesGatewayId pulumi.StringPtrInput
	// One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports.
	// Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 and support
	// multiple ports.
	Ports   pulumi.Float64ArrayInput
	Project pulumi.StringPtrInput
	// The routing mode of the Gateway. This field is configurable only for gateways of type SECURE_WEB_GATEWAY. This field is
	// required for gateways of type SECURE_WEB_GATEWAY. Possible values: ["NEXT_HOP_ROUTING_MODE"]
	RoutingMode pulumi.StringPtrInput
	// Immutable. Scope determines how configuration across multiple Gateway instances are merged. The configuration for
	// multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load
	// balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
	Scope pulumi.StringPtrInput
	// A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is
	// disabled.
	ServerTlsPolicy pulumi.StringPtrInput
	// The relative resource name identifying the subnetwork in which this SWG is allocated. For example:
	// 'projects/*/regions/us-central1/subnetworks/network-1'. Currently, this field is specific to gateways of type
	// 'SECURE_WEB_GATEWAY.
	Subnetwork pulumi.StringPtrInput
	Timeouts   NetworkServicesGatewayTimeoutsPtrInput
	// Immutable. The type of the customer-managed gateway. Possible values are: * OPEN_MESH * SECURE_WEB_GATEWAY. Possible
	// values: ["TYPE_UNSPECIFIED", "OPEN_MESH", "SECURE_WEB_GATEWAY"]
	Type pulumi.StringInput
}

func (NetworkServicesGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkServicesGatewayArgs)(nil)).Elem()
}

type NetworkServicesGatewayInput interface {
	pulumi.Input

	ToNetworkServicesGatewayOutput() NetworkServicesGatewayOutput
	ToNetworkServicesGatewayOutputWithContext(ctx context.Context) NetworkServicesGatewayOutput
}

func (*NetworkServicesGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesGateway)(nil)).Elem()
}

func (i *NetworkServicesGateway) ToNetworkServicesGatewayOutput() NetworkServicesGatewayOutput {
	return i.ToNetworkServicesGatewayOutputWithContext(context.Background())
}

func (i *NetworkServicesGateway) ToNetworkServicesGatewayOutputWithContext(ctx context.Context) NetworkServicesGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkServicesGatewayOutput)
}

type NetworkServicesGatewayOutput struct{ *pulumi.OutputState }

func (NetworkServicesGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkServicesGateway)(nil)).Elem()
}

func (o NetworkServicesGatewayOutput) ToNetworkServicesGatewayOutput() NetworkServicesGatewayOutput {
	return o
}

func (o NetworkServicesGatewayOutput) ToNetworkServicesGatewayOutputWithContext(ctx context.Context) NetworkServicesGatewayOutput {
	return o
}

// Zero or one IPv4-address on which the Gateway will receive the traffic. When no address is provided, an IP from the
// subnetwork is allocated This field only applies to gateways of type 'SECURE_WEB_GATEWAY'. Gateways of type 'OPEN_MESH'
// listen on 0.0.0.0.
func (o NetworkServicesGatewayOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringArrayOutput { return v.Addresses }).(pulumi.StringArrayOutput)
}

// A fully-qualified Certificates URL reference. The proxy presents a Certificate (selected based on SNI) when establishing
// a TLS connection. This feature only applies to gateways of type 'SECURE_WEB_GATEWAY'.
func (o NetworkServicesGatewayOutput) CertificateUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringArrayOutput { return v.CertificateUrls }).(pulumi.StringArrayOutput)
}

// Time the AccessPolicy was created in UTC.
func (o NetworkServicesGatewayOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// When deleting a gateway of type 'SECURE_WEB_GATEWAY', this boolean option will also delete auto generated router by the
// gateway creation. If there is no other gateway of type 'SECURE_WEB_GATEWAY' remaining for that region and network it
// will be deleted.
func (o NetworkServicesGatewayOutput) DeleteSwgAutogenRouterOnDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.BoolPtrOutput { return v.DeleteSwgAutogenRouterOnDestroy }).(pulumi.BoolPtrOutput)
}

// A free-text description of the resource. Max length 1024 characters.
func (o NetworkServicesGatewayOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkServicesGatewayOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A fully-qualified GatewaySecurityPolicy URL reference. Defines how a server should apply security policy to inbound (VM
// to Proxy) initiated connections. For example: 'projects/*/locations/*/gatewaySecurityPolicies/swg-policy'. This policy
// is specific to gateways of type 'SECURE_WEB_GATEWAY'.
func (o NetworkServicesGatewayOutput) GatewaySecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringPtrOutput { return v.GatewaySecurityPolicy }).(pulumi.StringPtrOutput)
}

// Set of label tags associated with the Gateway resource. **Note**: This field is non-authoritative, and will only manage
// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
// the resource.
func (o NetworkServicesGatewayOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the gateway. The default value is 'global'.
func (o NetworkServicesGatewayOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Short name of the Gateway resource to be created.
func (o NetworkServicesGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The relative resource name identifying the VPC network that is using this configuration. For example:
// 'projects/*/global/networks/network-1'. Currently, this field is specific to gateways of type 'SECURE_WEB_GATEWAY'.
func (o NetworkServicesGatewayOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringPtrOutput { return v.Network }).(pulumi.StringPtrOutput)
}

func (o NetworkServicesGatewayOutput) NetworkServicesGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringOutput { return v.NetworkServicesGatewayId }).(pulumi.StringOutput)
}

// One or more port numbers (1-65535), on which the Gateway will receive traffic. The proxy binds to the specified ports.
// Gateways of type 'SECURE_WEB_GATEWAY' are limited to 1 port. Gateways of type 'OPEN_MESH' listen on 0.0.0.0 and support
// multiple ports.
func (o NetworkServicesGatewayOutput) Ports() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.Float64ArrayOutput { return v.Ports }).(pulumi.Float64ArrayOutput)
}

func (o NetworkServicesGatewayOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The routing mode of the Gateway. This field is configurable only for gateways of type SECURE_WEB_GATEWAY. This field is
// required for gateways of type SECURE_WEB_GATEWAY. Possible values: ["NEXT_HOP_ROUTING_MODE"]
func (o NetworkServicesGatewayOutput) RoutingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringPtrOutput { return v.RoutingMode }).(pulumi.StringPtrOutput)
}

// Immutable. Scope determines how configuration across multiple Gateway instances are merged. The configuration for
// multiple Gateway instances with the same scope will be merged as presented as a single coniguration to the proxy/load
// balancer. Max length 64 characters. Scope should start with a letter and can only have letters, numbers, hyphens.
func (o NetworkServicesGatewayOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

// Server-defined URL of this resource.
func (o NetworkServicesGatewayOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// A fully-qualified ServerTLSPolicy URL reference. Specifies how TLS traffic is terminated. If empty, TLS termination is
// disabled.
func (o NetworkServicesGatewayOutput) ServerTlsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringPtrOutput { return v.ServerTlsPolicy }).(pulumi.StringPtrOutput)
}

// The relative resource name identifying the subnetwork in which this SWG is allocated. For example:
// 'projects/*/regions/us-central1/subnetworks/network-1'. Currently, this field is specific to gateways of type
// 'SECURE_WEB_GATEWAY.
func (o NetworkServicesGatewayOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringPtrOutput { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkServicesGatewayOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkServicesGatewayOutput) Timeouts() NetworkServicesGatewayTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) NetworkServicesGatewayTimeoutsPtrOutput { return v.Timeouts }).(NetworkServicesGatewayTimeoutsPtrOutput)
}

// Immutable. The type of the customer-managed gateway. Possible values are: * OPEN_MESH * SECURE_WEB_GATEWAY. Possible
// values: ["TYPE_UNSPECIFIED", "OPEN_MESH", "SECURE_WEB_GATEWAY"]
func (o NetworkServicesGatewayOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Time the AccessPolicy was updated in UTC.
func (o NetworkServicesGatewayOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkServicesGateway) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkServicesGatewayInput)(nil)).Elem(), &NetworkServicesGateway{})
	pulumi.RegisterOutputType(NetworkServicesGatewayOutput{})
}
