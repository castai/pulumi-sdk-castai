// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IapWebTypeComputeIamMember struct {
	pulumi.CustomResourceState

	Condition                    IapWebTypeComputeIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	IapWebTypeComputeIamMemberId pulumi.StringOutput                          `pulumi:"iapWebTypeComputeIamMemberId"`
	Member                       pulumi.StringOutput                          `pulumi:"member"`
	Project                      pulumi.StringOutput                          `pulumi:"project"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
}

// NewIapWebTypeComputeIamMember registers a new resource with the given unique name, arguments, and options.
func NewIapWebTypeComputeIamMember(ctx *pulumi.Context,
	name string, args *IapWebTypeComputeIamMemberArgs, opts ...pulumi.ResourceOption) (*IapWebTypeComputeIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IapWebTypeComputeIamMember
	err = ctx.RegisterPackageResource("google-beta:index/iapWebTypeComputeIamMember:IapWebTypeComputeIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIapWebTypeComputeIamMember gets an existing IapWebTypeComputeIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIapWebTypeComputeIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IapWebTypeComputeIamMemberState, opts ...pulumi.ResourceOption) (*IapWebTypeComputeIamMember, error) {
	var resource IapWebTypeComputeIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/iapWebTypeComputeIamMember:IapWebTypeComputeIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IapWebTypeComputeIamMember resources.
type iapWebTypeComputeIamMemberState struct {
	Condition                    *IapWebTypeComputeIamMemberCondition `pulumi:"condition"`
	Etag                         *string                              `pulumi:"etag"`
	IapWebTypeComputeIamMemberId *string                              `pulumi:"iapWebTypeComputeIamMemberId"`
	Member                       *string                              `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Role                         *string                              `pulumi:"role"`
}

type IapWebTypeComputeIamMemberState struct {
	Condition                    IapWebTypeComputeIamMemberConditionPtrInput
	Etag                         pulumi.StringPtrInput
	IapWebTypeComputeIamMemberId pulumi.StringPtrInput
	Member                       pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringPtrInput
}

func (IapWebTypeComputeIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*iapWebTypeComputeIamMemberState)(nil)).Elem()
}

type iapWebTypeComputeIamMemberArgs struct {
	Condition                    *IapWebTypeComputeIamMemberCondition `pulumi:"condition"`
	IapWebTypeComputeIamMemberId *string                              `pulumi:"iapWebTypeComputeIamMemberId"`
	Member                       string                               `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Role                         string                               `pulumi:"role"`
}

// The set of arguments for constructing a IapWebTypeComputeIamMember resource.
type IapWebTypeComputeIamMemberArgs struct {
	Condition                    IapWebTypeComputeIamMemberConditionPtrInput
	IapWebTypeComputeIamMemberId pulumi.StringPtrInput
	Member                       pulumi.StringInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringInput
}

func (IapWebTypeComputeIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iapWebTypeComputeIamMemberArgs)(nil)).Elem()
}

type IapWebTypeComputeIamMemberInput interface {
	pulumi.Input

	ToIapWebTypeComputeIamMemberOutput() IapWebTypeComputeIamMemberOutput
	ToIapWebTypeComputeIamMemberOutputWithContext(ctx context.Context) IapWebTypeComputeIamMemberOutput
}

func (*IapWebTypeComputeIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**IapWebTypeComputeIamMember)(nil)).Elem()
}

func (i *IapWebTypeComputeIamMember) ToIapWebTypeComputeIamMemberOutput() IapWebTypeComputeIamMemberOutput {
	return i.ToIapWebTypeComputeIamMemberOutputWithContext(context.Background())
}

func (i *IapWebTypeComputeIamMember) ToIapWebTypeComputeIamMemberOutputWithContext(ctx context.Context) IapWebTypeComputeIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapWebTypeComputeIamMemberOutput)
}

type IapWebTypeComputeIamMemberOutput struct{ *pulumi.OutputState }

func (IapWebTypeComputeIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapWebTypeComputeIamMember)(nil)).Elem()
}

func (o IapWebTypeComputeIamMemberOutput) ToIapWebTypeComputeIamMemberOutput() IapWebTypeComputeIamMemberOutput {
	return o
}

func (o IapWebTypeComputeIamMemberOutput) ToIapWebTypeComputeIamMemberOutputWithContext(ctx context.Context) IapWebTypeComputeIamMemberOutput {
	return o
}

func (o IapWebTypeComputeIamMemberOutput) Condition() IapWebTypeComputeIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamMember) IapWebTypeComputeIamMemberConditionPtrOutput { return v.Condition }).(IapWebTypeComputeIamMemberConditionPtrOutput)
}

func (o IapWebTypeComputeIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamMemberOutput) IapWebTypeComputeIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamMember) pulumi.StringOutput { return v.IapWebTypeComputeIamMemberId }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o IapWebTypeComputeIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebTypeComputeIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IapWebTypeComputeIamMemberInput)(nil)).Elem(), &IapWebTypeComputeIamMember{})
	pulumi.RegisterOutputType(IapWebTypeComputeIamMemberOutput{})
}
