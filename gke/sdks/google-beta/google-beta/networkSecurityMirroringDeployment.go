// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkSecurityMirroringDeployment struct {
	pulumi.CustomResourceState

	// Output only. [Output only] Create time stamp
	CreateTime      pulumi.StringOutput    `pulumi:"createTime"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded to. Format is:
	// projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
	ForwardingRule pulumi.StringOutput `pulumi:"forwardingRule"`
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122. See documentation for resource type 'networksecurity.googleapis.com/MirroringDeployment'.
	Location pulumi.StringOutput `pulumi:"location"`
	// Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
	// 'projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}'
	MirroringDeploymentGroup pulumi.StringOutput `pulumi:"mirroringDeploymentGroup"`
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and mirroring_deployment_id
	// from the method_signature of Create RPC
	MirroringDeploymentId pulumi.StringOutput `pulumi:"mirroringDeploymentId"`
	// Immutable. Identifier. The name of the MirroringDeployment.
	Name                                 pulumi.StringOutput `pulumi:"name"`
	NetworkSecurityMirroringDeploymentId pulumi.StringOutput `pulumi:"networkSecurityMirroringDeploymentId"`
	Project                              pulumi.StringOutput `pulumi:"project"`
	// Output only. Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Output only. Current state of the deployment. Possible values: STATE_UNSPECIFIED ACTIVE CREATING DELETING OUT_OF_SYNC
	// DELETE_FAILED
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                              `pulumi:"terraformLabels"`
	Timeouts        NetworkSecurityMirroringDeploymentTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. [Output only] Update time stamp
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkSecurityMirroringDeployment registers a new resource with the given unique name, arguments, and options.
func NewNetworkSecurityMirroringDeployment(ctx *pulumi.Context,
	name string, args *NetworkSecurityMirroringDeploymentArgs, opts ...pulumi.ResourceOption) (*NetworkSecurityMirroringDeployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ForwardingRule == nil {
		return nil, errors.New("invalid value for required argument 'ForwardingRule'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.MirroringDeploymentGroup == nil {
		return nil, errors.New("invalid value for required argument 'MirroringDeploymentGroup'")
	}
	if args.MirroringDeploymentId == nil {
		return nil, errors.New("invalid value for required argument 'MirroringDeploymentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkSecurityMirroringDeployment
	err = ctx.RegisterPackageResource("google-beta:index/networkSecurityMirroringDeployment:NetworkSecurityMirroringDeployment", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkSecurityMirroringDeployment gets an existing NetworkSecurityMirroringDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkSecurityMirroringDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkSecurityMirroringDeploymentState, opts ...pulumi.ResourceOption) (*NetworkSecurityMirroringDeployment, error) {
	var resource NetworkSecurityMirroringDeployment
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/networkSecurityMirroringDeployment:NetworkSecurityMirroringDeployment", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkSecurityMirroringDeployment resources.
type networkSecurityMirroringDeploymentState struct {
	// Output only. [Output only] Create time stamp
	CreateTime      *string           `pulumi:"createTime"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded to. Format is:
	// projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
	ForwardingRule *string `pulumi:"forwardingRule"`
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122. See documentation for resource type 'networksecurity.googleapis.com/MirroringDeployment'.
	Location *string `pulumi:"location"`
	// Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
	// 'projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}'
	MirroringDeploymentGroup *string `pulumi:"mirroringDeploymentGroup"`
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and mirroring_deployment_id
	// from the method_signature of Create RPC
	MirroringDeploymentId *string `pulumi:"mirroringDeploymentId"`
	// Immutable. Identifier. The name of the MirroringDeployment.
	Name                                 *string `pulumi:"name"`
	NetworkSecurityMirroringDeploymentId *string `pulumi:"networkSecurityMirroringDeploymentId"`
	Project                              *string `pulumi:"project"`
	// Output only. Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling *bool `pulumi:"reconciling"`
	// Output only. Current state of the deployment. Possible values: STATE_UNSPECIFIED ACTIVE CREATING DELETING OUT_OF_SYNC
	// DELETE_FAILED
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                           `pulumi:"terraformLabels"`
	Timeouts        *NetworkSecurityMirroringDeploymentTimeouts `pulumi:"timeouts"`
	// Output only. [Output only] Update time stamp
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkSecurityMirroringDeploymentState struct {
	// Output only. [Output only] Create time stamp
	CreateTime      pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded to. Format is:
	// projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
	ForwardingRule pulumi.StringPtrInput
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122. See documentation for resource type 'networksecurity.googleapis.com/MirroringDeployment'.
	Location pulumi.StringPtrInput
	// Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
	// 'projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}'
	MirroringDeploymentGroup pulumi.StringPtrInput
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and mirroring_deployment_id
	// from the method_signature of Create RPC
	MirroringDeploymentId pulumi.StringPtrInput
	// Immutable. Identifier. The name of the MirroringDeployment.
	Name                                 pulumi.StringPtrInput
	NetworkSecurityMirroringDeploymentId pulumi.StringPtrInput
	Project                              pulumi.StringPtrInput
	// Output only. Whether reconciling is in progress, recommended per https://google.aip.dev/128.
	Reconciling pulumi.BoolPtrInput
	// Output only. Current state of the deployment. Possible values: STATE_UNSPECIFIED ACTIVE CREATING DELETING OUT_OF_SYNC
	// DELETE_FAILED
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkSecurityMirroringDeploymentTimeoutsPtrInput
	// Output only. [Output only] Update time stamp
	UpdateTime pulumi.StringPtrInput
}

func (NetworkSecurityMirroringDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityMirroringDeploymentState)(nil)).Elem()
}

type networkSecurityMirroringDeploymentArgs struct {
	// Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded to. Format is:
	// projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
	ForwardingRule string `pulumi:"forwardingRule"`
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122. See documentation for resource type 'networksecurity.googleapis.com/MirroringDeployment'.
	Location string `pulumi:"location"`
	// Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
	// 'projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}'
	MirroringDeploymentGroup string `pulumi:"mirroringDeploymentGroup"`
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and mirroring_deployment_id
	// from the method_signature of Create RPC
	MirroringDeploymentId                string                                      `pulumi:"mirroringDeploymentId"`
	NetworkSecurityMirroringDeploymentId *string                                     `pulumi:"networkSecurityMirroringDeploymentId"`
	Project                              *string                                     `pulumi:"project"`
	Timeouts                             *NetworkSecurityMirroringDeploymentTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NetworkSecurityMirroringDeployment resource.
type NetworkSecurityMirroringDeploymentArgs struct {
	// Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded to. Format is:
	// projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
	ForwardingRule pulumi.StringInput
	// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
	// https://google.aip.dev/122. See documentation for resource type 'networksecurity.googleapis.com/MirroringDeployment'.
	Location pulumi.StringInput
	// Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
	// 'projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}'
	MirroringDeploymentGroup pulumi.StringInput
	// Required. Id of the requesting object If auto-generating Id server-side, remove this field and mirroring_deployment_id
	// from the method_signature of Create RPC
	MirroringDeploymentId                pulumi.StringInput
	NetworkSecurityMirroringDeploymentId pulumi.StringPtrInput
	Project                              pulumi.StringPtrInput
	Timeouts                             NetworkSecurityMirroringDeploymentTimeoutsPtrInput
}

func (NetworkSecurityMirroringDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkSecurityMirroringDeploymentArgs)(nil)).Elem()
}

type NetworkSecurityMirroringDeploymentInput interface {
	pulumi.Input

	ToNetworkSecurityMirroringDeploymentOutput() NetworkSecurityMirroringDeploymentOutput
	ToNetworkSecurityMirroringDeploymentOutputWithContext(ctx context.Context) NetworkSecurityMirroringDeploymentOutput
}

func (*NetworkSecurityMirroringDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityMirroringDeployment)(nil)).Elem()
}

func (i *NetworkSecurityMirroringDeployment) ToNetworkSecurityMirroringDeploymentOutput() NetworkSecurityMirroringDeploymentOutput {
	return i.ToNetworkSecurityMirroringDeploymentOutputWithContext(context.Background())
}

func (i *NetworkSecurityMirroringDeployment) ToNetworkSecurityMirroringDeploymentOutputWithContext(ctx context.Context) NetworkSecurityMirroringDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityMirroringDeploymentOutput)
}

type NetworkSecurityMirroringDeploymentOutput struct{ *pulumi.OutputState }

func (NetworkSecurityMirroringDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityMirroringDeployment)(nil)).Elem()
}

func (o NetworkSecurityMirroringDeploymentOutput) ToNetworkSecurityMirroringDeploymentOutput() NetworkSecurityMirroringDeploymentOutput {
	return o
}

func (o NetworkSecurityMirroringDeploymentOutput) ToNetworkSecurityMirroringDeploymentOutputWithContext(ctx context.Context) NetworkSecurityMirroringDeploymentOutput {
	return o
}

// Output only. [Output only] Create time stamp
func (o NetworkSecurityMirroringDeploymentOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o NetworkSecurityMirroringDeploymentOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Required. Immutable. The regional load balancer which the mirrored traffic should be forwarded to. Format is:
// projects/{project}/regions/{region}/forwardingRules/{forwardingRule}
func (o NetworkSecurityMirroringDeploymentOutput) ForwardingRule() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput { return v.ForwardingRule }).(pulumi.StringOutput)
}

// Optional. Labels as key value pairs **Note**: This field is non-authoritative, and will only manage the labels present
// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o NetworkSecurityMirroringDeploymentOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource 'name'. It identifies the resource within its parent collection as described in
// https://google.aip.dev/122. See documentation for resource type 'networksecurity.googleapis.com/MirroringDeployment'.
func (o NetworkSecurityMirroringDeploymentOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Required. Immutable. The Mirroring Deployment Group that this resource is part of. Format is:
// 'projects/{project}/locations/global/mirroringDeploymentGroups/{mirroringDeploymentGroup}'
func (o NetworkSecurityMirroringDeploymentOutput) MirroringDeploymentGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput { return v.MirroringDeploymentGroup }).(pulumi.StringOutput)
}

// Required. Id of the requesting object If auto-generating Id server-side, remove this field and mirroring_deployment_id
// from the method_signature of Create RPC
func (o NetworkSecurityMirroringDeploymentOutput) MirroringDeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput { return v.MirroringDeploymentId }).(pulumi.StringOutput)
}

// Immutable. Identifier. The name of the MirroringDeployment.
func (o NetworkSecurityMirroringDeploymentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkSecurityMirroringDeploymentOutput) NetworkSecurityMirroringDeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput {
		return v.NetworkSecurityMirroringDeploymentId
	}).(pulumi.StringOutput)
}

func (o NetworkSecurityMirroringDeploymentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. Whether reconciling is in progress, recommended per https://google.aip.dev/128.
func (o NetworkSecurityMirroringDeploymentOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Output only. Current state of the deployment. Possible values: STATE_UNSPECIFIED ACTIVE CREATING DELETING OUT_OF_SYNC
// DELETE_FAILED
func (o NetworkSecurityMirroringDeploymentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkSecurityMirroringDeploymentOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkSecurityMirroringDeploymentOutput) Timeouts() NetworkSecurityMirroringDeploymentTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) NetworkSecurityMirroringDeploymentTimeoutsPtrOutput {
		return v.Timeouts
	}).(NetworkSecurityMirroringDeploymentTimeoutsPtrOutput)
}

// Output only. [Output only] Update time stamp
func (o NetworkSecurityMirroringDeploymentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkSecurityMirroringDeployment) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkSecurityMirroringDeploymentInput)(nil)).Elem(), &NetworkSecurityMirroringDeployment{})
	pulumi.RegisterOutputType(NetworkSecurityMirroringDeploymentOutput{})
}
