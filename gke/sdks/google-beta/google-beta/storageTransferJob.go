// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StorageTransferJob struct {
	pulumi.CustomResourceState

	// When the Transfer Job was created.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// When the Transfer Job was deleted.
	DeletionTime pulumi.StringOutput `pulumi:"deletionTime"`
	// Unique description to identify the Transfer Job.
	Description pulumi.StringOutput                    `pulumi:"description"`
	EventStream StorageTransferJobEventStreamPtrOutput `pulumi:"eventStream"`
	// When the Transfer Job was last modified.
	LastModificationTime pulumi.StringOutput `pulumi:"lastModificationTime"`
	// The name of the Transfer Job.
	Name pulumi.StringOutput `pulumi:"name"`
	// Notification configuration.
	NotificationConfig StorageTransferJobNotificationConfigPtrOutput `pulumi:"notificationConfig"`
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Replication specification.
	ReplicationSpec StorageTransferJobReplicationSpecPtrOutput `pulumi:"replicationSpec"`
	// Schedule specification defining when the Transfer Job should be scheduled to start, end and what time to run.
	Schedule StorageTransferJobSchedulePtrOutput `pulumi:"schedule"`
	// Status of the job. Default: ENABLED. NOTE: The effect of the new job status takes place during a subsequent job run. For
	// example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the
	// status change would not affect the current operation.
	Status               pulumi.StringPtrOutput `pulumi:"status"`
	StorageTransferJobId pulumi.StringOutput    `pulumi:"storageTransferJobId"`
	// Transfer specification.
	TransferSpec StorageTransferJobTransferSpecPtrOutput `pulumi:"transferSpec"`
}

// NewStorageTransferJob registers a new resource with the given unique name, arguments, and options.
func NewStorageTransferJob(ctx *pulumi.Context,
	name string, args *StorageTransferJobArgs, opts ...pulumi.ResourceOption) (*StorageTransferJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource StorageTransferJob
	err = ctx.RegisterPackageResource("google-beta:index/storageTransferJob:StorageTransferJob", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageTransferJob gets an existing StorageTransferJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageTransferJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageTransferJobState, opts ...pulumi.ResourceOption) (*StorageTransferJob, error) {
	var resource StorageTransferJob
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/storageTransferJob:StorageTransferJob", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageTransferJob resources.
type storageTransferJobState struct {
	// When the Transfer Job was created.
	CreationTime *string `pulumi:"creationTime"`
	// When the Transfer Job was deleted.
	DeletionTime *string `pulumi:"deletionTime"`
	// Unique description to identify the Transfer Job.
	Description *string                        `pulumi:"description"`
	EventStream *StorageTransferJobEventStream `pulumi:"eventStream"`
	// When the Transfer Job was last modified.
	LastModificationTime *string `pulumi:"lastModificationTime"`
	// The name of the Transfer Job.
	Name *string `pulumi:"name"`
	// Notification configuration.
	NotificationConfig *StorageTransferJobNotificationConfig `pulumi:"notificationConfig"`
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Replication specification.
	ReplicationSpec *StorageTransferJobReplicationSpec `pulumi:"replicationSpec"`
	// Schedule specification defining when the Transfer Job should be scheduled to start, end and what time to run.
	Schedule *StorageTransferJobSchedule `pulumi:"schedule"`
	// Status of the job. Default: ENABLED. NOTE: The effect of the new job status takes place during a subsequent job run. For
	// example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the
	// status change would not affect the current operation.
	Status               *string `pulumi:"status"`
	StorageTransferJobId *string `pulumi:"storageTransferJobId"`
	// Transfer specification.
	TransferSpec *StorageTransferJobTransferSpec `pulumi:"transferSpec"`
}

type StorageTransferJobState struct {
	// When the Transfer Job was created.
	CreationTime pulumi.StringPtrInput
	// When the Transfer Job was deleted.
	DeletionTime pulumi.StringPtrInput
	// Unique description to identify the Transfer Job.
	Description pulumi.StringPtrInput
	EventStream StorageTransferJobEventStreamPtrInput
	// When the Transfer Job was last modified.
	LastModificationTime pulumi.StringPtrInput
	// The name of the Transfer Job.
	Name pulumi.StringPtrInput
	// Notification configuration.
	NotificationConfig StorageTransferJobNotificationConfigPtrInput
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Replication specification.
	ReplicationSpec StorageTransferJobReplicationSpecPtrInput
	// Schedule specification defining when the Transfer Job should be scheduled to start, end and what time to run.
	Schedule StorageTransferJobSchedulePtrInput
	// Status of the job. Default: ENABLED. NOTE: The effect of the new job status takes place during a subsequent job run. For
	// example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the
	// status change would not affect the current operation.
	Status               pulumi.StringPtrInput
	StorageTransferJobId pulumi.StringPtrInput
	// Transfer specification.
	TransferSpec StorageTransferJobTransferSpecPtrInput
}

func (StorageTransferJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageTransferJobState)(nil)).Elem()
}

type storageTransferJobArgs struct {
	// Unique description to identify the Transfer Job.
	Description string                         `pulumi:"description"`
	EventStream *StorageTransferJobEventStream `pulumi:"eventStream"`
	// The name of the Transfer Job.
	Name *string `pulumi:"name"`
	// Notification configuration.
	NotificationConfig *StorageTransferJobNotificationConfig `pulumi:"notificationConfig"`
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Replication specification.
	ReplicationSpec *StorageTransferJobReplicationSpec `pulumi:"replicationSpec"`
	// Schedule specification defining when the Transfer Job should be scheduled to start, end and what time to run.
	Schedule *StorageTransferJobSchedule `pulumi:"schedule"`
	// Status of the job. Default: ENABLED. NOTE: The effect of the new job status takes place during a subsequent job run. For
	// example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the
	// status change would not affect the current operation.
	Status               *string `pulumi:"status"`
	StorageTransferJobId *string `pulumi:"storageTransferJobId"`
	// Transfer specification.
	TransferSpec *StorageTransferJobTransferSpec `pulumi:"transferSpec"`
}

// The set of arguments for constructing a StorageTransferJob resource.
type StorageTransferJobArgs struct {
	// Unique description to identify the Transfer Job.
	Description pulumi.StringInput
	EventStream StorageTransferJobEventStreamPtrInput
	// The name of the Transfer Job.
	Name pulumi.StringPtrInput
	// Notification configuration.
	NotificationConfig StorageTransferJobNotificationConfigPtrInput
	// The project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Replication specification.
	ReplicationSpec StorageTransferJobReplicationSpecPtrInput
	// Schedule specification defining when the Transfer Job should be scheduled to start, end and what time to run.
	Schedule StorageTransferJobSchedulePtrInput
	// Status of the job. Default: ENABLED. NOTE: The effect of the new job status takes place during a subsequent job run. For
	// example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the
	// status change would not affect the current operation.
	Status               pulumi.StringPtrInput
	StorageTransferJobId pulumi.StringPtrInput
	// Transfer specification.
	TransferSpec StorageTransferJobTransferSpecPtrInput
}

func (StorageTransferJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageTransferJobArgs)(nil)).Elem()
}

type StorageTransferJobInput interface {
	pulumi.Input

	ToStorageTransferJobOutput() StorageTransferJobOutput
	ToStorageTransferJobOutputWithContext(ctx context.Context) StorageTransferJobOutput
}

func (*StorageTransferJob) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTransferJob)(nil)).Elem()
}

func (i *StorageTransferJob) ToStorageTransferJobOutput() StorageTransferJobOutput {
	return i.ToStorageTransferJobOutputWithContext(context.Background())
}

func (i *StorageTransferJob) ToStorageTransferJobOutputWithContext(ctx context.Context) StorageTransferJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageTransferJobOutput)
}

type StorageTransferJobOutput struct{ *pulumi.OutputState }

func (StorageTransferJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageTransferJob)(nil)).Elem()
}

func (o StorageTransferJobOutput) ToStorageTransferJobOutput() StorageTransferJobOutput {
	return o
}

func (o StorageTransferJobOutput) ToStorageTransferJobOutputWithContext(ctx context.Context) StorageTransferJobOutput {
	return o
}

// When the Transfer Job was created.
func (o StorageTransferJobOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTransferJob) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// When the Transfer Job was deleted.
func (o StorageTransferJobOutput) DeletionTime() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTransferJob) pulumi.StringOutput { return v.DeletionTime }).(pulumi.StringOutput)
}

// Unique description to identify the Transfer Job.
func (o StorageTransferJobOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTransferJob) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o StorageTransferJobOutput) EventStream() StorageTransferJobEventStreamPtrOutput {
	return o.ApplyT(func(v *StorageTransferJob) StorageTransferJobEventStreamPtrOutput { return v.EventStream }).(StorageTransferJobEventStreamPtrOutput)
}

// When the Transfer Job was last modified.
func (o StorageTransferJobOutput) LastModificationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTransferJob) pulumi.StringOutput { return v.LastModificationTime }).(pulumi.StringOutput)
}

// The name of the Transfer Job.
func (o StorageTransferJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTransferJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Notification configuration.
func (o StorageTransferJobOutput) NotificationConfig() StorageTransferJobNotificationConfigPtrOutput {
	return o.ApplyT(func(v *StorageTransferJob) StorageTransferJobNotificationConfigPtrOutput { return v.NotificationConfig }).(StorageTransferJobNotificationConfigPtrOutput)
}

// The project in which the resource belongs. If it is not provided, the provider project is used.
func (o StorageTransferJobOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTransferJob) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Replication specification.
func (o StorageTransferJobOutput) ReplicationSpec() StorageTransferJobReplicationSpecPtrOutput {
	return o.ApplyT(func(v *StorageTransferJob) StorageTransferJobReplicationSpecPtrOutput { return v.ReplicationSpec }).(StorageTransferJobReplicationSpecPtrOutput)
}

// Schedule specification defining when the Transfer Job should be scheduled to start, end and what time to run.
func (o StorageTransferJobOutput) Schedule() StorageTransferJobSchedulePtrOutput {
	return o.ApplyT(func(v *StorageTransferJob) StorageTransferJobSchedulePtrOutput { return v.Schedule }).(StorageTransferJobSchedulePtrOutput)
}

// Status of the job. Default: ENABLED. NOTE: The effect of the new job status takes place during a subsequent job run. For
// example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the
// status change would not affect the current operation.
func (o StorageTransferJobOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageTransferJob) pulumi.StringPtrOutput { return v.Status }).(pulumi.StringPtrOutput)
}

func (o StorageTransferJobOutput) StorageTransferJobId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageTransferJob) pulumi.StringOutput { return v.StorageTransferJobId }).(pulumi.StringOutput)
}

// Transfer specification.
func (o StorageTransferJobOutput) TransferSpec() StorageTransferJobTransferSpecPtrOutput {
	return o.ApplyT(func(v *StorageTransferJob) StorageTransferJobTransferSpecPtrOutput { return v.TransferSpec }).(StorageTransferJobTransferSpecPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageTransferJobInput)(nil)).Elem(), &StorageTransferJob{})
	pulumi.RegisterOutputType(StorageTransferJobOutput{})
}
