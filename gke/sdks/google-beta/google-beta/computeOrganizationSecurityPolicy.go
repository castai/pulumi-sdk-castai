// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeOrganizationSecurityPolicy struct {
	pulumi.CustomResourceState

	ComputeOrganizationSecurityPolicyId pulumi.StringOutput `pulumi:"computeOrganizationSecurityPolicyId"`
	// A textual description for the organization security policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A textual name of the security policy.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Fingerprint of this resource. This field is used internally during updates of this resource.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// The parent of this OrganizationSecurityPolicy in the Cloud Resource Hierarchy. Format: organizations/{organization_id}
	// or folders/{folder_id}
	Parent pulumi.StringOutput `pulumi:"parent"`
	// The unique identifier for the resource. This identifier is defined by the server.
	PolicyId pulumi.StringOutput                                `pulumi:"policyId"`
	Timeouts ComputeOrganizationSecurityPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type indicates the intended use of the security policy. For organization security policies, the only supported type
	// is "FIREWALL". Default value: "FIREWALL" Possible values: ["FIREWALL"]
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewComputeOrganizationSecurityPolicy registers a new resource with the given unique name, arguments, and options.
func NewComputeOrganizationSecurityPolicy(ctx *pulumi.Context,
	name string, args *ComputeOrganizationSecurityPolicyArgs, opts ...pulumi.ResourceOption) (*ComputeOrganizationSecurityPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeOrganizationSecurityPolicy
	err = ctx.RegisterPackageResource("google-beta:index/computeOrganizationSecurityPolicy:ComputeOrganizationSecurityPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeOrganizationSecurityPolicy gets an existing ComputeOrganizationSecurityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeOrganizationSecurityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeOrganizationSecurityPolicyState, opts ...pulumi.ResourceOption) (*ComputeOrganizationSecurityPolicy, error) {
	var resource ComputeOrganizationSecurityPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeOrganizationSecurityPolicy:ComputeOrganizationSecurityPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeOrganizationSecurityPolicy resources.
type computeOrganizationSecurityPolicyState struct {
	ComputeOrganizationSecurityPolicyId *string `pulumi:"computeOrganizationSecurityPolicyId"`
	// A textual description for the organization security policy.
	Description *string `pulumi:"description"`
	// A textual name of the security policy.
	DisplayName *string `pulumi:"displayName"`
	// Fingerprint of this resource. This field is used internally during updates of this resource.
	Fingerprint *string `pulumi:"fingerprint"`
	// The parent of this OrganizationSecurityPolicy in the Cloud Resource Hierarchy. Format: organizations/{organization_id}
	// or folders/{folder_id}
	Parent *string `pulumi:"parent"`
	// The unique identifier for the resource. This identifier is defined by the server.
	PolicyId *string                                    `pulumi:"policyId"`
	Timeouts *ComputeOrganizationSecurityPolicyTimeouts `pulumi:"timeouts"`
	// The type indicates the intended use of the security policy. For organization security policies, the only supported type
	// is "FIREWALL". Default value: "FIREWALL" Possible values: ["FIREWALL"]
	Type *string `pulumi:"type"`
}

type ComputeOrganizationSecurityPolicyState struct {
	ComputeOrganizationSecurityPolicyId pulumi.StringPtrInput
	// A textual description for the organization security policy.
	Description pulumi.StringPtrInput
	// A textual name of the security policy.
	DisplayName pulumi.StringPtrInput
	// Fingerprint of this resource. This field is used internally during updates of this resource.
	Fingerprint pulumi.StringPtrInput
	// The parent of this OrganizationSecurityPolicy in the Cloud Resource Hierarchy. Format: organizations/{organization_id}
	// or folders/{folder_id}
	Parent pulumi.StringPtrInput
	// The unique identifier for the resource. This identifier is defined by the server.
	PolicyId pulumi.StringPtrInput
	Timeouts ComputeOrganizationSecurityPolicyTimeoutsPtrInput
	// The type indicates the intended use of the security policy. For organization security policies, the only supported type
	// is "FIREWALL". Default value: "FIREWALL" Possible values: ["FIREWALL"]
	Type pulumi.StringPtrInput
}

func (ComputeOrganizationSecurityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeOrganizationSecurityPolicyState)(nil)).Elem()
}

type computeOrganizationSecurityPolicyArgs struct {
	ComputeOrganizationSecurityPolicyId *string `pulumi:"computeOrganizationSecurityPolicyId"`
	// A textual description for the organization security policy.
	Description *string `pulumi:"description"`
	// A textual name of the security policy.
	DisplayName string `pulumi:"displayName"`
	// The parent of this OrganizationSecurityPolicy in the Cloud Resource Hierarchy. Format: organizations/{organization_id}
	// or folders/{folder_id}
	Parent   string                                     `pulumi:"parent"`
	Timeouts *ComputeOrganizationSecurityPolicyTimeouts `pulumi:"timeouts"`
	// The type indicates the intended use of the security policy. For organization security policies, the only supported type
	// is "FIREWALL". Default value: "FIREWALL" Possible values: ["FIREWALL"]
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a ComputeOrganizationSecurityPolicy resource.
type ComputeOrganizationSecurityPolicyArgs struct {
	ComputeOrganizationSecurityPolicyId pulumi.StringPtrInput
	// A textual description for the organization security policy.
	Description pulumi.StringPtrInput
	// A textual name of the security policy.
	DisplayName pulumi.StringInput
	// The parent of this OrganizationSecurityPolicy in the Cloud Resource Hierarchy. Format: organizations/{organization_id}
	// or folders/{folder_id}
	Parent   pulumi.StringInput
	Timeouts ComputeOrganizationSecurityPolicyTimeoutsPtrInput
	// The type indicates the intended use of the security policy. For organization security policies, the only supported type
	// is "FIREWALL". Default value: "FIREWALL" Possible values: ["FIREWALL"]
	Type pulumi.StringPtrInput
}

func (ComputeOrganizationSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeOrganizationSecurityPolicyArgs)(nil)).Elem()
}

type ComputeOrganizationSecurityPolicyInput interface {
	pulumi.Input

	ToComputeOrganizationSecurityPolicyOutput() ComputeOrganizationSecurityPolicyOutput
	ToComputeOrganizationSecurityPolicyOutputWithContext(ctx context.Context) ComputeOrganizationSecurityPolicyOutput
}

func (*ComputeOrganizationSecurityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeOrganizationSecurityPolicy)(nil)).Elem()
}

func (i *ComputeOrganizationSecurityPolicy) ToComputeOrganizationSecurityPolicyOutput() ComputeOrganizationSecurityPolicyOutput {
	return i.ToComputeOrganizationSecurityPolicyOutputWithContext(context.Background())
}

func (i *ComputeOrganizationSecurityPolicy) ToComputeOrganizationSecurityPolicyOutputWithContext(ctx context.Context) ComputeOrganizationSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeOrganizationSecurityPolicyOutput)
}

type ComputeOrganizationSecurityPolicyOutput struct{ *pulumi.OutputState }

func (ComputeOrganizationSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeOrganizationSecurityPolicy)(nil)).Elem()
}

func (o ComputeOrganizationSecurityPolicyOutput) ToComputeOrganizationSecurityPolicyOutput() ComputeOrganizationSecurityPolicyOutput {
	return o
}

func (o ComputeOrganizationSecurityPolicyOutput) ToComputeOrganizationSecurityPolicyOutputWithContext(ctx context.Context) ComputeOrganizationSecurityPolicyOutput {
	return o
}

func (o ComputeOrganizationSecurityPolicyOutput) ComputeOrganizationSecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicy) pulumi.StringOutput {
		return v.ComputeOrganizationSecurityPolicyId
	}).(pulumi.StringOutput)
}

// A textual description for the organization security policy.
func (o ComputeOrganizationSecurityPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A textual name of the security policy.
func (o ComputeOrganizationSecurityPolicyOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicy) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Fingerprint of this resource. This field is used internally during updates of this resource.
func (o ComputeOrganizationSecurityPolicyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicy) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// The parent of this OrganizationSecurityPolicy in the Cloud Resource Hierarchy. Format: organizations/{organization_id}
// or folders/{folder_id}
func (o ComputeOrganizationSecurityPolicyOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicy) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// The unique identifier for the resource. This identifier is defined by the server.
func (o ComputeOrganizationSecurityPolicyOutput) PolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicy) pulumi.StringOutput { return v.PolicyId }).(pulumi.StringOutput)
}

func (o ComputeOrganizationSecurityPolicyOutput) Timeouts() ComputeOrganizationSecurityPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicy) ComputeOrganizationSecurityPolicyTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputeOrganizationSecurityPolicyTimeoutsPtrOutput)
}

// The type indicates the intended use of the security policy. For organization security policies, the only supported type
// is "FIREWALL". Default value: "FIREWALL" Possible values: ["FIREWALL"]
func (o ComputeOrganizationSecurityPolicyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeOrganizationSecurityPolicy) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeOrganizationSecurityPolicyInput)(nil)).Elem(), &ComputeOrganizationSecurityPolicy{})
	pulumi.RegisterOutputType(ComputeOrganizationSecurityPolicyOutput{})
}
