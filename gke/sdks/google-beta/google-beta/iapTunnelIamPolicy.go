// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IapTunnelIamPolicy struct {
	pulumi.CustomResourceState

	Etag                 pulumi.StringOutput `pulumi:"etag"`
	IapTunnelIamPolicyId pulumi.StringOutput `pulumi:"iapTunnelIamPolicyId"`
	PolicyData           pulumi.StringOutput `pulumi:"policyData"`
	Project              pulumi.StringOutput `pulumi:"project"`
}

// NewIapTunnelIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewIapTunnelIamPolicy(ctx *pulumi.Context,
	name string, args *IapTunnelIamPolicyArgs, opts ...pulumi.ResourceOption) (*IapTunnelIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IapTunnelIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/iapTunnelIamPolicy:IapTunnelIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIapTunnelIamPolicy gets an existing IapTunnelIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIapTunnelIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IapTunnelIamPolicyState, opts ...pulumi.ResourceOption) (*IapTunnelIamPolicy, error) {
	var resource IapTunnelIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/iapTunnelIamPolicy:IapTunnelIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IapTunnelIamPolicy resources.
type iapTunnelIamPolicyState struct {
	Etag                 *string `pulumi:"etag"`
	IapTunnelIamPolicyId *string `pulumi:"iapTunnelIamPolicyId"`
	PolicyData           *string `pulumi:"policyData"`
	Project              *string `pulumi:"project"`
}

type IapTunnelIamPolicyState struct {
	Etag                 pulumi.StringPtrInput
	IapTunnelIamPolicyId pulumi.StringPtrInput
	PolicyData           pulumi.StringPtrInput
	Project              pulumi.StringPtrInput
}

func (IapTunnelIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*iapTunnelIamPolicyState)(nil)).Elem()
}

type iapTunnelIamPolicyArgs struct {
	IapTunnelIamPolicyId *string `pulumi:"iapTunnelIamPolicyId"`
	PolicyData           string  `pulumi:"policyData"`
	Project              *string `pulumi:"project"`
}

// The set of arguments for constructing a IapTunnelIamPolicy resource.
type IapTunnelIamPolicyArgs struct {
	IapTunnelIamPolicyId pulumi.StringPtrInput
	PolicyData           pulumi.StringInput
	Project              pulumi.StringPtrInput
}

func (IapTunnelIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iapTunnelIamPolicyArgs)(nil)).Elem()
}

type IapTunnelIamPolicyInput interface {
	pulumi.Input

	ToIapTunnelIamPolicyOutput() IapTunnelIamPolicyOutput
	ToIapTunnelIamPolicyOutputWithContext(ctx context.Context) IapTunnelIamPolicyOutput
}

func (*IapTunnelIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**IapTunnelIamPolicy)(nil)).Elem()
}

func (i *IapTunnelIamPolicy) ToIapTunnelIamPolicyOutput() IapTunnelIamPolicyOutput {
	return i.ToIapTunnelIamPolicyOutputWithContext(context.Background())
}

func (i *IapTunnelIamPolicy) ToIapTunnelIamPolicyOutputWithContext(ctx context.Context) IapTunnelIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapTunnelIamPolicyOutput)
}

type IapTunnelIamPolicyOutput struct{ *pulumi.OutputState }

func (IapTunnelIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapTunnelIamPolicy)(nil)).Elem()
}

func (o IapTunnelIamPolicyOutput) ToIapTunnelIamPolicyOutput() IapTunnelIamPolicyOutput {
	return o
}

func (o IapTunnelIamPolicyOutput) ToIapTunnelIamPolicyOutputWithContext(ctx context.Context) IapTunnelIamPolicyOutput {
	return o
}

func (o IapTunnelIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o IapTunnelIamPolicyOutput) IapTunnelIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelIamPolicy) pulumi.StringOutput { return v.IapTunnelIamPolicyId }).(pulumi.StringOutput)
}

func (o IapTunnelIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o IapTunnelIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IapTunnelIamPolicyInput)(nil)).Elem(), &IapTunnelIamPolicy{})
	pulumi.RegisterOutputType(IapTunnelIamPolicyOutput{})
}
