// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VertexAiEndpointIamBinding struct {
	pulumi.CustomResourceState

	Condition                    VertexAiEndpointIamBindingConditionPtrOutput `pulumi:"condition"`
	Endpoint                     pulumi.StringOutput                          `pulumi:"endpoint"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	Location                     pulumi.StringOutput                          `pulumi:"location"`
	Members                      pulumi.StringArrayOutput                     `pulumi:"members"`
	Project                      pulumi.StringOutput                          `pulumi:"project"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
	VertexAiEndpointIamBindingId pulumi.StringOutput                          `pulumi:"vertexAiEndpointIamBindingId"`
}

// NewVertexAiEndpointIamBinding registers a new resource with the given unique name, arguments, and options.
func NewVertexAiEndpointIamBinding(ctx *pulumi.Context,
	name string, args *VertexAiEndpointIamBindingArgs, opts ...pulumi.ResourceOption) (*VertexAiEndpointIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VertexAiEndpointIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/vertexAiEndpointIamBinding:VertexAiEndpointIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVertexAiEndpointIamBinding gets an existing VertexAiEndpointIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVertexAiEndpointIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VertexAiEndpointIamBindingState, opts ...pulumi.ResourceOption) (*VertexAiEndpointIamBinding, error) {
	var resource VertexAiEndpointIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vertexAiEndpointIamBinding:VertexAiEndpointIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VertexAiEndpointIamBinding resources.
type vertexAiEndpointIamBindingState struct {
	Condition                    *VertexAiEndpointIamBindingCondition `pulumi:"condition"`
	Endpoint                     *string                              `pulumi:"endpoint"`
	Etag                         *string                              `pulumi:"etag"`
	Location                     *string                              `pulumi:"location"`
	Members                      []string                             `pulumi:"members"`
	Project                      *string                              `pulumi:"project"`
	Role                         *string                              `pulumi:"role"`
	VertexAiEndpointIamBindingId *string                              `pulumi:"vertexAiEndpointIamBindingId"`
}

type VertexAiEndpointIamBindingState struct {
	Condition                    VertexAiEndpointIamBindingConditionPtrInput
	Endpoint                     pulumi.StringPtrInput
	Etag                         pulumi.StringPtrInput
	Location                     pulumi.StringPtrInput
	Members                      pulumi.StringArrayInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringPtrInput
	VertexAiEndpointIamBindingId pulumi.StringPtrInput
}

func (VertexAiEndpointIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiEndpointIamBindingState)(nil)).Elem()
}

type vertexAiEndpointIamBindingArgs struct {
	Condition                    *VertexAiEndpointIamBindingCondition `pulumi:"condition"`
	Endpoint                     string                               `pulumi:"endpoint"`
	Location                     *string                              `pulumi:"location"`
	Members                      []string                             `pulumi:"members"`
	Project                      *string                              `pulumi:"project"`
	Role                         string                               `pulumi:"role"`
	VertexAiEndpointIamBindingId *string                              `pulumi:"vertexAiEndpointIamBindingId"`
}

// The set of arguments for constructing a VertexAiEndpointIamBinding resource.
type VertexAiEndpointIamBindingArgs struct {
	Condition                    VertexAiEndpointIamBindingConditionPtrInput
	Endpoint                     pulumi.StringInput
	Location                     pulumi.StringPtrInput
	Members                      pulumi.StringArrayInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringInput
	VertexAiEndpointIamBindingId pulumi.StringPtrInput
}

func (VertexAiEndpointIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiEndpointIamBindingArgs)(nil)).Elem()
}

type VertexAiEndpointIamBindingInput interface {
	pulumi.Input

	ToVertexAiEndpointIamBindingOutput() VertexAiEndpointIamBindingOutput
	ToVertexAiEndpointIamBindingOutputWithContext(ctx context.Context) VertexAiEndpointIamBindingOutput
}

func (*VertexAiEndpointIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiEndpointIamBinding)(nil)).Elem()
}

func (i *VertexAiEndpointIamBinding) ToVertexAiEndpointIamBindingOutput() VertexAiEndpointIamBindingOutput {
	return i.ToVertexAiEndpointIamBindingOutputWithContext(context.Background())
}

func (i *VertexAiEndpointIamBinding) ToVertexAiEndpointIamBindingOutputWithContext(ctx context.Context) VertexAiEndpointIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VertexAiEndpointIamBindingOutput)
}

type VertexAiEndpointIamBindingOutput struct{ *pulumi.OutputState }

func (VertexAiEndpointIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiEndpointIamBinding)(nil)).Elem()
}

func (o VertexAiEndpointIamBindingOutput) ToVertexAiEndpointIamBindingOutput() VertexAiEndpointIamBindingOutput {
	return o
}

func (o VertexAiEndpointIamBindingOutput) ToVertexAiEndpointIamBindingOutputWithContext(ctx context.Context) VertexAiEndpointIamBindingOutput {
	return o
}

func (o VertexAiEndpointIamBindingOutput) Condition() VertexAiEndpointIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamBinding) VertexAiEndpointIamBindingConditionPtrOutput { return v.Condition }).(VertexAiEndpointIamBindingConditionPtrOutput)
}

func (o VertexAiEndpointIamBindingOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamBinding) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o VertexAiEndpointIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamBindingOutput) VertexAiEndpointIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamBinding) pulumi.StringOutput { return v.VertexAiEndpointIamBindingId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VertexAiEndpointIamBindingInput)(nil)).Elem(), &VertexAiEndpointIamBinding{})
	pulumi.RegisterOutputType(VertexAiEndpointIamBindingOutput{})
}
