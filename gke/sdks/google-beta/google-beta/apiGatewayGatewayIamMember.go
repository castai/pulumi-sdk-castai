// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiGatewayGatewayIamMember struct {
	pulumi.CustomResourceState

	ApiGatewayGatewayIamMemberId pulumi.StringOutput                          `pulumi:"apiGatewayGatewayIamMemberId"`
	Condition                    ApiGatewayGatewayIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	Gateway                      pulumi.StringOutput                          `pulumi:"gateway"`
	Member                       pulumi.StringOutput                          `pulumi:"member"`
	Project                      pulumi.StringOutput                          `pulumi:"project"`
	Region                       pulumi.StringOutput                          `pulumi:"region"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
}

// NewApiGatewayGatewayIamMember registers a new resource with the given unique name, arguments, and options.
func NewApiGatewayGatewayIamMember(ctx *pulumi.Context,
	name string, args *ApiGatewayGatewayIamMemberArgs, opts ...pulumi.ResourceOption) (*ApiGatewayGatewayIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Gateway == nil {
		return nil, errors.New("invalid value for required argument 'Gateway'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ApiGatewayGatewayIamMember
	err = ctx.RegisterPackageResource("google-beta:index/apiGatewayGatewayIamMember:ApiGatewayGatewayIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiGatewayGatewayIamMember gets an existing ApiGatewayGatewayIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiGatewayGatewayIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiGatewayGatewayIamMemberState, opts ...pulumi.ResourceOption) (*ApiGatewayGatewayIamMember, error) {
	var resource ApiGatewayGatewayIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/apiGatewayGatewayIamMember:ApiGatewayGatewayIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiGatewayGatewayIamMember resources.
type apiGatewayGatewayIamMemberState struct {
	ApiGatewayGatewayIamMemberId *string                              `pulumi:"apiGatewayGatewayIamMemberId"`
	Condition                    *ApiGatewayGatewayIamMemberCondition `pulumi:"condition"`
	Etag                         *string                              `pulumi:"etag"`
	Gateway                      *string                              `pulumi:"gateway"`
	Member                       *string                              `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Region                       *string                              `pulumi:"region"`
	Role                         *string                              `pulumi:"role"`
}

type ApiGatewayGatewayIamMemberState struct {
	ApiGatewayGatewayIamMemberId pulumi.StringPtrInput
	Condition                    ApiGatewayGatewayIamMemberConditionPtrInput
	Etag                         pulumi.StringPtrInput
	Gateway                      pulumi.StringPtrInput
	Member                       pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
	Role                         pulumi.StringPtrInput
}

func (ApiGatewayGatewayIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayGatewayIamMemberState)(nil)).Elem()
}

type apiGatewayGatewayIamMemberArgs struct {
	ApiGatewayGatewayIamMemberId *string                              `pulumi:"apiGatewayGatewayIamMemberId"`
	Condition                    *ApiGatewayGatewayIamMemberCondition `pulumi:"condition"`
	Gateway                      string                               `pulumi:"gateway"`
	Member                       string                               `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Region                       *string                              `pulumi:"region"`
	Role                         string                               `pulumi:"role"`
}

// The set of arguments for constructing a ApiGatewayGatewayIamMember resource.
type ApiGatewayGatewayIamMemberArgs struct {
	ApiGatewayGatewayIamMemberId pulumi.StringPtrInput
	Condition                    ApiGatewayGatewayIamMemberConditionPtrInput
	Gateway                      pulumi.StringInput
	Member                       pulumi.StringInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
	Role                         pulumi.StringInput
}

func (ApiGatewayGatewayIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiGatewayGatewayIamMemberArgs)(nil)).Elem()
}

type ApiGatewayGatewayIamMemberInput interface {
	pulumi.Input

	ToApiGatewayGatewayIamMemberOutput() ApiGatewayGatewayIamMemberOutput
	ToApiGatewayGatewayIamMemberOutputWithContext(ctx context.Context) ApiGatewayGatewayIamMemberOutput
}

func (*ApiGatewayGatewayIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayGatewayIamMember)(nil)).Elem()
}

func (i *ApiGatewayGatewayIamMember) ToApiGatewayGatewayIamMemberOutput() ApiGatewayGatewayIamMemberOutput {
	return i.ToApiGatewayGatewayIamMemberOutputWithContext(context.Background())
}

func (i *ApiGatewayGatewayIamMember) ToApiGatewayGatewayIamMemberOutputWithContext(ctx context.Context) ApiGatewayGatewayIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiGatewayGatewayIamMemberOutput)
}

type ApiGatewayGatewayIamMemberOutput struct{ *pulumi.OutputState }

func (ApiGatewayGatewayIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiGatewayGatewayIamMember)(nil)).Elem()
}

func (o ApiGatewayGatewayIamMemberOutput) ToApiGatewayGatewayIamMemberOutput() ApiGatewayGatewayIamMemberOutput {
	return o
}

func (o ApiGatewayGatewayIamMemberOutput) ToApiGatewayGatewayIamMemberOutputWithContext(ctx context.Context) ApiGatewayGatewayIamMemberOutput {
	return o
}

func (o ApiGatewayGatewayIamMemberOutput) ApiGatewayGatewayIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamMember) pulumi.StringOutput { return v.ApiGatewayGatewayIamMemberId }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamMemberOutput) Condition() ApiGatewayGatewayIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamMember) ApiGatewayGatewayIamMemberConditionPtrOutput { return v.Condition }).(ApiGatewayGatewayIamMemberConditionPtrOutput)
}

func (o ApiGatewayGatewayIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamMemberOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamMember) pulumi.StringOutput { return v.Gateway }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ApiGatewayGatewayIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiGatewayGatewayIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiGatewayGatewayIamMemberInput)(nil)).Elem(), &ApiGatewayGatewayIamMember{})
	pulumi.RegisterOutputType(ApiGatewayGatewayIamMemberOutput{})
}
