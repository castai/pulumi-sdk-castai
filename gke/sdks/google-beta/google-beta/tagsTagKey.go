// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TagsTagKey struct {
	pulumi.CustomResourceState

	// Output only. Creation time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// User-assigned description of the TagKey. Must not exceed 256 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The generated numeric id for the TagKey.
	Name pulumi.StringOutput `pulumi:"name"`
	// Output only. Namespaced name of the TagKey.
	NamespacedName pulumi.StringOutput `pulumi:"namespacedName"`
	// Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id} or
	// projects/{project_id_or_number}.
	Parent pulumi.StringOutput `pulumi:"parent"`
	// Optional. A purpose cannot be changed once set. A purpose denotes that this Tag is intended for use in policies of a
	// specific policy engine, and will involve that policy engine in management operations involving this Tag. Possible
	// values: ["GCE_FIREWALL"]
	Purpose pulumi.StringPtrOutput `pulumi:"purpose"`
	// Optional. Purpose data cannot be changed once set. Purpose data corresponds to the policy system that the tag is
	// intended for. For example, the GCE_FIREWALL purpose expects data in the following format: 'network =
	// "<project-name>/<vpc-name>"'.
	PurposeData pulumi.StringMapOutput `pulumi:"purposeData"`
	// Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag
	// namespace. The short name can have a maximum length of 256 characters. The permitted character set for the shortName
	// includes all UTF-8 encoded Unicode characters except single quotes ('), double quotes ("), backslashes (\\), and forward
	// slashes (/).
	ShortName    pulumi.StringOutput         `pulumi:"shortName"`
	TagsTagKeyId pulumi.StringOutput         `pulumi:"tagsTagKeyId"`
	Timeouts     TagsTagKeyTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. Update time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
	// digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewTagsTagKey registers a new resource with the given unique name, arguments, and options.
func NewTagsTagKey(ctx *pulumi.Context,
	name string, args *TagsTagKeyArgs, opts ...pulumi.ResourceOption) (*TagsTagKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.ShortName == nil {
		return nil, errors.New("invalid value for required argument 'ShortName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource TagsTagKey
	err = ctx.RegisterPackageResource("google-beta:index/tagsTagKey:TagsTagKey", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagsTagKey gets an existing TagsTagKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagsTagKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagsTagKeyState, opts ...pulumi.ResourceOption) (*TagsTagKey, error) {
	var resource TagsTagKey
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/tagsTagKey:TagsTagKey", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagsTagKey resources.
type tagsTagKeyState struct {
	// Output only. Creation time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// User-assigned description of the TagKey. Must not exceed 256 characters.
	Description *string `pulumi:"description"`
	// The generated numeric id for the TagKey.
	Name *string `pulumi:"name"`
	// Output only. Namespaced name of the TagKey.
	NamespacedName *string `pulumi:"namespacedName"`
	// Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id} or
	// projects/{project_id_or_number}.
	Parent *string `pulumi:"parent"`
	// Optional. A purpose cannot be changed once set. A purpose denotes that this Tag is intended for use in policies of a
	// specific policy engine, and will involve that policy engine in management operations involving this Tag. Possible
	// values: ["GCE_FIREWALL"]
	Purpose *string `pulumi:"purpose"`
	// Optional. Purpose data cannot be changed once set. Purpose data corresponds to the policy system that the tag is
	// intended for. For example, the GCE_FIREWALL purpose expects data in the following format: 'network =
	// "<project-name>/<vpc-name>"'.
	PurposeData map[string]string `pulumi:"purposeData"`
	// Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag
	// namespace. The short name can have a maximum length of 256 characters. The permitted character set for the shortName
	// includes all UTF-8 encoded Unicode characters except single quotes ('), double quotes ("), backslashes (\\), and forward
	// slashes (/).
	ShortName    *string             `pulumi:"shortName"`
	TagsTagKeyId *string             `pulumi:"tagsTagKeyId"`
	Timeouts     *TagsTagKeyTimeouts `pulumi:"timeouts"`
	// Output only. Update time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
	// digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
}

type TagsTagKeyState struct {
	// Output only. Creation time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// User-assigned description of the TagKey. Must not exceed 256 characters.
	Description pulumi.StringPtrInput
	// The generated numeric id for the TagKey.
	Name pulumi.StringPtrInput
	// Output only. Namespaced name of the TagKey.
	NamespacedName pulumi.StringPtrInput
	// Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id} or
	// projects/{project_id_or_number}.
	Parent pulumi.StringPtrInput
	// Optional. A purpose cannot be changed once set. A purpose denotes that this Tag is intended for use in policies of a
	// specific policy engine, and will involve that policy engine in management operations involving this Tag. Possible
	// values: ["GCE_FIREWALL"]
	Purpose pulumi.StringPtrInput
	// Optional. Purpose data cannot be changed once set. Purpose data corresponds to the policy system that the tag is
	// intended for. For example, the GCE_FIREWALL purpose expects data in the following format: 'network =
	// "<project-name>/<vpc-name>"'.
	PurposeData pulumi.StringMapInput
	// Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag
	// namespace. The short name can have a maximum length of 256 characters. The permitted character set for the shortName
	// includes all UTF-8 encoded Unicode characters except single quotes ('), double quotes ("), backslashes (\\), and forward
	// slashes (/).
	ShortName    pulumi.StringPtrInput
	TagsTagKeyId pulumi.StringPtrInput
	Timeouts     TagsTagKeyTimeoutsPtrInput
	// Output only. Update time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
	// digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
}

func (TagsTagKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagsTagKeyState)(nil)).Elem()
}

type tagsTagKeyArgs struct {
	// User-assigned description of the TagKey. Must not exceed 256 characters.
	Description *string `pulumi:"description"`
	// Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id} or
	// projects/{project_id_or_number}.
	Parent string `pulumi:"parent"`
	// Optional. A purpose cannot be changed once set. A purpose denotes that this Tag is intended for use in policies of a
	// specific policy engine, and will involve that policy engine in management operations involving this Tag. Possible
	// values: ["GCE_FIREWALL"]
	Purpose *string `pulumi:"purpose"`
	// Optional. Purpose data cannot be changed once set. Purpose data corresponds to the policy system that the tag is
	// intended for. For example, the GCE_FIREWALL purpose expects data in the following format: 'network =
	// "<project-name>/<vpc-name>"'.
	PurposeData map[string]string `pulumi:"purposeData"`
	// Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag
	// namespace. The short name can have a maximum length of 256 characters. The permitted character set for the shortName
	// includes all UTF-8 encoded Unicode characters except single quotes ('), double quotes ("), backslashes (\\), and forward
	// slashes (/).
	ShortName    string              `pulumi:"shortName"`
	TagsTagKeyId *string             `pulumi:"tagsTagKeyId"`
	Timeouts     *TagsTagKeyTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a TagsTagKey resource.
type TagsTagKeyArgs struct {
	// User-assigned description of the TagKey. Must not exceed 256 characters.
	Description pulumi.StringPtrInput
	// Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id} or
	// projects/{project_id_or_number}.
	Parent pulumi.StringInput
	// Optional. A purpose cannot be changed once set. A purpose denotes that this Tag is intended for use in policies of a
	// specific policy engine, and will involve that policy engine in management operations involving this Tag. Possible
	// values: ["GCE_FIREWALL"]
	Purpose pulumi.StringPtrInput
	// Optional. Purpose data cannot be changed once set. Purpose data corresponds to the policy system that the tag is
	// intended for. For example, the GCE_FIREWALL purpose expects data in the following format: 'network =
	// "<project-name>/<vpc-name>"'.
	PurposeData pulumi.StringMapInput
	// Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag
	// namespace. The short name can have a maximum length of 256 characters. The permitted character set for the shortName
	// includes all UTF-8 encoded Unicode characters except single quotes ('), double quotes ("), backslashes (\\), and forward
	// slashes (/).
	ShortName    pulumi.StringInput
	TagsTagKeyId pulumi.StringPtrInput
	Timeouts     TagsTagKeyTimeoutsPtrInput
}

func (TagsTagKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagsTagKeyArgs)(nil)).Elem()
}

type TagsTagKeyInput interface {
	pulumi.Input

	ToTagsTagKeyOutput() TagsTagKeyOutput
	ToTagsTagKeyOutputWithContext(ctx context.Context) TagsTagKeyOutput
}

func (*TagsTagKey) ElementType() reflect.Type {
	return reflect.TypeOf((**TagsTagKey)(nil)).Elem()
}

func (i *TagsTagKey) ToTagsTagKeyOutput() TagsTagKeyOutput {
	return i.ToTagsTagKeyOutputWithContext(context.Background())
}

func (i *TagsTagKey) ToTagsTagKeyOutputWithContext(ctx context.Context) TagsTagKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagsTagKeyOutput)
}

type TagsTagKeyOutput struct{ *pulumi.OutputState }

func (TagsTagKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagsTagKey)(nil)).Elem()
}

func (o TagsTagKeyOutput) ToTagsTagKeyOutput() TagsTagKeyOutput {
	return o
}

func (o TagsTagKeyOutput) ToTagsTagKeyOutputWithContext(ctx context.Context) TagsTagKeyOutput {
	return o
}

// Output only. Creation time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o TagsTagKeyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// User-assigned description of the TagKey. Must not exceed 256 characters.
func (o TagsTagKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The generated numeric id for the TagKey.
func (o TagsTagKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Output only. Namespaced name of the TagKey.
func (o TagsTagKeyOutput) NamespacedName() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringOutput { return v.NamespacedName }).(pulumi.StringOutput)
}

// Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id} or
// projects/{project_id_or_number}.
func (o TagsTagKeyOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// Optional. A purpose cannot be changed once set. A purpose denotes that this Tag is intended for use in policies of a
// specific policy engine, and will involve that policy engine in management operations involving this Tag. Possible
// values: ["GCE_FIREWALL"]
func (o TagsTagKeyOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringPtrOutput { return v.Purpose }).(pulumi.StringPtrOutput)
}

// Optional. Purpose data cannot be changed once set. Purpose data corresponds to the policy system that the tag is
// intended for. For example, the GCE_FIREWALL purpose expects data in the following format: 'network =
// "<project-name>/<vpc-name>"'.
func (o TagsTagKeyOutput) PurposeData() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringMapOutput { return v.PurposeData }).(pulumi.StringMapOutput)
}

// Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag
// namespace. The short name can have a maximum length of 256 characters. The permitted character set for the shortName
// includes all UTF-8 encoded Unicode characters except single quotes ('), double quotes ("), backslashes (\\), and forward
// slashes (/).
func (o TagsTagKeyOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringOutput { return v.ShortName }).(pulumi.StringOutput)
}

func (o TagsTagKeyOutput) TagsTagKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringOutput { return v.TagsTagKeyId }).(pulumi.StringOutput)
}

func (o TagsTagKeyOutput) Timeouts() TagsTagKeyTimeoutsPtrOutput {
	return o.ApplyT(func(v *TagsTagKey) TagsTagKeyTimeoutsPtrOutput { return v.Timeouts }).(TagsTagKeyTimeoutsPtrOutput)
}

// Output only. Update time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
// digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o TagsTagKeyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagKey) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagsTagKeyInput)(nil)).Elem(), &TagsTagKey{})
	pulumi.RegisterOutputType(TagsTagKeyOutput{})
}
