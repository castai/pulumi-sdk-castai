// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkstationsWorkstationIamPolicy struct {
	pulumi.CustomResourceState

	Etag                               pulumi.StringOutput `pulumi:"etag"`
	Location                           pulumi.StringOutput `pulumi:"location"`
	PolicyData                         pulumi.StringOutput `pulumi:"policyData"`
	Project                            pulumi.StringOutput `pulumi:"project"`
	WorkstationClusterId               pulumi.StringOutput `pulumi:"workstationClusterId"`
	WorkstationConfigId                pulumi.StringOutput `pulumi:"workstationConfigId"`
	WorkstationId                      pulumi.StringOutput `pulumi:"workstationId"`
	WorkstationsWorkstationIamPolicyId pulumi.StringOutput `pulumi:"workstationsWorkstationIamPolicyId"`
}

// NewWorkstationsWorkstationIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewWorkstationsWorkstationIamPolicy(ctx *pulumi.Context,
	name string, args *WorkstationsWorkstationIamPolicyArgs, opts ...pulumi.ResourceOption) (*WorkstationsWorkstationIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.WorkstationClusterId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationClusterId'")
	}
	if args.WorkstationConfigId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationConfigId'")
	}
	if args.WorkstationId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource WorkstationsWorkstationIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/workstationsWorkstationIamPolicy:WorkstationsWorkstationIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkstationsWorkstationIamPolicy gets an existing WorkstationsWorkstationIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkstationsWorkstationIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkstationsWorkstationIamPolicyState, opts ...pulumi.ResourceOption) (*WorkstationsWorkstationIamPolicy, error) {
	var resource WorkstationsWorkstationIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/workstationsWorkstationIamPolicy:WorkstationsWorkstationIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkstationsWorkstationIamPolicy resources.
type workstationsWorkstationIamPolicyState struct {
	Etag                               *string `pulumi:"etag"`
	Location                           *string `pulumi:"location"`
	PolicyData                         *string `pulumi:"policyData"`
	Project                            *string `pulumi:"project"`
	WorkstationClusterId               *string `pulumi:"workstationClusterId"`
	WorkstationConfigId                *string `pulumi:"workstationConfigId"`
	WorkstationId                      *string `pulumi:"workstationId"`
	WorkstationsWorkstationIamPolicyId *string `pulumi:"workstationsWorkstationIamPolicyId"`
}

type WorkstationsWorkstationIamPolicyState struct {
	Etag                               pulumi.StringPtrInput
	Location                           pulumi.StringPtrInput
	PolicyData                         pulumi.StringPtrInput
	Project                            pulumi.StringPtrInput
	WorkstationClusterId               pulumi.StringPtrInput
	WorkstationConfigId                pulumi.StringPtrInput
	WorkstationId                      pulumi.StringPtrInput
	WorkstationsWorkstationIamPolicyId pulumi.StringPtrInput
}

func (WorkstationsWorkstationIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*workstationsWorkstationIamPolicyState)(nil)).Elem()
}

type workstationsWorkstationIamPolicyArgs struct {
	Location                           *string `pulumi:"location"`
	PolicyData                         string  `pulumi:"policyData"`
	Project                            *string `pulumi:"project"`
	WorkstationClusterId               string  `pulumi:"workstationClusterId"`
	WorkstationConfigId                string  `pulumi:"workstationConfigId"`
	WorkstationId                      string  `pulumi:"workstationId"`
	WorkstationsWorkstationIamPolicyId *string `pulumi:"workstationsWorkstationIamPolicyId"`
}

// The set of arguments for constructing a WorkstationsWorkstationIamPolicy resource.
type WorkstationsWorkstationIamPolicyArgs struct {
	Location                           pulumi.StringPtrInput
	PolicyData                         pulumi.StringInput
	Project                            pulumi.StringPtrInput
	WorkstationClusterId               pulumi.StringInput
	WorkstationConfigId                pulumi.StringInput
	WorkstationId                      pulumi.StringInput
	WorkstationsWorkstationIamPolicyId pulumi.StringPtrInput
}

func (WorkstationsWorkstationIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workstationsWorkstationIamPolicyArgs)(nil)).Elem()
}

type WorkstationsWorkstationIamPolicyInput interface {
	pulumi.Input

	ToWorkstationsWorkstationIamPolicyOutput() WorkstationsWorkstationIamPolicyOutput
	ToWorkstationsWorkstationIamPolicyOutputWithContext(ctx context.Context) WorkstationsWorkstationIamPolicyOutput
}

func (*WorkstationsWorkstationIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkstationsWorkstationIamPolicy)(nil)).Elem()
}

func (i *WorkstationsWorkstationIamPolicy) ToWorkstationsWorkstationIamPolicyOutput() WorkstationsWorkstationIamPolicyOutput {
	return i.ToWorkstationsWorkstationIamPolicyOutputWithContext(context.Background())
}

func (i *WorkstationsWorkstationIamPolicy) ToWorkstationsWorkstationIamPolicyOutputWithContext(ctx context.Context) WorkstationsWorkstationIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkstationsWorkstationIamPolicyOutput)
}

type WorkstationsWorkstationIamPolicyOutput struct{ *pulumi.OutputState }

func (WorkstationsWorkstationIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkstationsWorkstationIamPolicy)(nil)).Elem()
}

func (o WorkstationsWorkstationIamPolicyOutput) ToWorkstationsWorkstationIamPolicyOutput() WorkstationsWorkstationIamPolicyOutput {
	return o
}

func (o WorkstationsWorkstationIamPolicyOutput) ToWorkstationsWorkstationIamPolicyOutputWithContext(ctx context.Context) WorkstationsWorkstationIamPolicyOutput {
	return o
}

func (o WorkstationsWorkstationIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationIamPolicyOutput) WorkstationClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationIamPolicy) pulumi.StringOutput { return v.WorkstationClusterId }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationIamPolicyOutput) WorkstationConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationIamPolicy) pulumi.StringOutput { return v.WorkstationConfigId }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationIamPolicyOutput) WorkstationId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationIamPolicy) pulumi.StringOutput { return v.WorkstationId }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationIamPolicyOutput) WorkstationsWorkstationIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationIamPolicy) pulumi.StringOutput {
		return v.WorkstationsWorkstationIamPolicyId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkstationsWorkstationIamPolicyInput)(nil)).Elem(), &WorkstationsWorkstationIamPolicy{})
	pulumi.RegisterOutputType(WorkstationsWorkstationIamPolicyOutput{})
}
