// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DialogflowCxEntityType struct {
	pulumi.CustomResourceState

	// Represents kinds of entities. * AUTO_EXPANSION_MODE_UNSPECIFIED: Auto expansion disabled for the entity. *
	// AUTO_EXPANSION_MODE_DEFAULT: Allows an agent to recognize values that have not been explicitly listed in the entity.
	// Possible values: ["AUTO_EXPANSION_MODE_DEFAULT", "AUTO_EXPANSION_MODE_UNSPECIFIED"]
	AutoExpansionMode        pulumi.StringPtrOutput `pulumi:"autoExpansionMode"`
	DialogflowCxEntityTypeId pulumi.StringOutput    `pulumi:"dialogflowCxEntityTypeId"`
	// The human-readable name of the entity type, unique within the agent.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolPtrOutput `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities DialogflowCxEntityTypeEntityArrayOutput `pulumi:"entities"`
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with
	// entry giant(an adjective), you might consider adding giants(a noun) as an exclusion. If the kind of entity type is
	// KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases DialogflowCxEntityTypeExcludedPhraseArrayOutput `pulumi:"excludedPhrases"`
	// Indicates whether the entity type can be automatically expanded. * KIND_MAP: Map entity types allow mapping of a group
	// of synonyms to a canonical value. * KIND_LIST: List entity types contain a set of entries that do not map to canonical
	// values. However, list entity types can contain references to other entity types (with or without aliases). *
	// KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values. Possible values: ["KIND_MAP",
	// "KIND_LIST", "KIND_REGEXP"]
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The language of the following fields in entityType: EntityType.entities.value EntityType.entities.synonyms
	// EntityType.excluded_phrases.value If not specified, the agent's default language is used. Many languages are supported.
	// Note: languages must be enabled in the agent before they can be used.
	LanguageCode pulumi.StringPtrOutput `pulumi:"languageCode"`
	// The unique identifier of the entity type. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
	// ID>/entityTypes/<Entity Type ID>.
	Name pulumi.StringOutput `pulumi:"name"`
	// The agent to create a entity type for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent pulumi.StringPtrOutput `pulumi:"parent"`
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and
	// intent parameters referring to the entity type will be replaced by parameter name when logging.
	Redact   pulumi.BoolPtrOutput                    `pulumi:"redact"`
	Timeouts DialogflowCxEntityTypeTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDialogflowCxEntityType registers a new resource with the given unique name, arguments, and options.
func NewDialogflowCxEntityType(ctx *pulumi.Context,
	name string, args *DialogflowCxEntityTypeArgs, opts ...pulumi.ResourceOption) (*DialogflowCxEntityType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Entities == nil {
		return nil, errors.New("invalid value for required argument 'Entities'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DialogflowCxEntityType
	err = ctx.RegisterPackageResource("google-beta:index/dialogflowCxEntityType:DialogflowCxEntityType", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDialogflowCxEntityType gets an existing DialogflowCxEntityType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDialogflowCxEntityType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DialogflowCxEntityTypeState, opts ...pulumi.ResourceOption) (*DialogflowCxEntityType, error) {
	var resource DialogflowCxEntityType
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dialogflowCxEntityType:DialogflowCxEntityType", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DialogflowCxEntityType resources.
type dialogflowCxEntityTypeState struct {
	// Represents kinds of entities. * AUTO_EXPANSION_MODE_UNSPECIFIED: Auto expansion disabled for the entity. *
	// AUTO_EXPANSION_MODE_DEFAULT: Allows an agent to recognize values that have not been explicitly listed in the entity.
	// Possible values: ["AUTO_EXPANSION_MODE_DEFAULT", "AUTO_EXPANSION_MODE_UNSPECIFIED"]
	AutoExpansionMode        *string `pulumi:"autoExpansionMode"`
	DialogflowCxEntityTypeId *string `pulumi:"dialogflowCxEntityTypeId"`
	// The human-readable name of the entity type, unique within the agent.
	DisplayName *string `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction *bool `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities []DialogflowCxEntityTypeEntity `pulumi:"entities"`
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with
	// entry giant(an adjective), you might consider adding giants(a noun) as an exclusion. If the kind of entity type is
	// KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases []DialogflowCxEntityTypeExcludedPhrase `pulumi:"excludedPhrases"`
	// Indicates whether the entity type can be automatically expanded. * KIND_MAP: Map entity types allow mapping of a group
	// of synonyms to a canonical value. * KIND_LIST: List entity types contain a set of entries that do not map to canonical
	// values. However, list entity types can contain references to other entity types (with or without aliases). *
	// KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values. Possible values: ["KIND_MAP",
	// "KIND_LIST", "KIND_REGEXP"]
	Kind *string `pulumi:"kind"`
	// The language of the following fields in entityType: EntityType.entities.value EntityType.entities.synonyms
	// EntityType.excluded_phrases.value If not specified, the agent's default language is used. Many languages are supported.
	// Note: languages must be enabled in the agent before they can be used.
	LanguageCode *string `pulumi:"languageCode"`
	// The unique identifier of the entity type. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
	// ID>/entityTypes/<Entity Type ID>.
	Name *string `pulumi:"name"`
	// The agent to create a entity type for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent *string `pulumi:"parent"`
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and
	// intent parameters referring to the entity type will be replaced by parameter name when logging.
	Redact   *bool                           `pulumi:"redact"`
	Timeouts *DialogflowCxEntityTypeTimeouts `pulumi:"timeouts"`
}

type DialogflowCxEntityTypeState struct {
	// Represents kinds of entities. * AUTO_EXPANSION_MODE_UNSPECIFIED: Auto expansion disabled for the entity. *
	// AUTO_EXPANSION_MODE_DEFAULT: Allows an agent to recognize values that have not been explicitly listed in the entity.
	// Possible values: ["AUTO_EXPANSION_MODE_DEFAULT", "AUTO_EXPANSION_MODE_UNSPECIFIED"]
	AutoExpansionMode        pulumi.StringPtrInput
	DialogflowCxEntityTypeId pulumi.StringPtrInput
	// The human-readable name of the entity type, unique within the agent.
	DisplayName pulumi.StringPtrInput
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolPtrInput
	// The collection of entity entries associated with the entity type.
	Entities DialogflowCxEntityTypeEntityArrayInput
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with
	// entry giant(an adjective), you might consider adding giants(a noun) as an exclusion. If the kind of entity type is
	// KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases DialogflowCxEntityTypeExcludedPhraseArrayInput
	// Indicates whether the entity type can be automatically expanded. * KIND_MAP: Map entity types allow mapping of a group
	// of synonyms to a canonical value. * KIND_LIST: List entity types contain a set of entries that do not map to canonical
	// values. However, list entity types can contain references to other entity types (with or without aliases). *
	// KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values. Possible values: ["KIND_MAP",
	// "KIND_LIST", "KIND_REGEXP"]
	Kind pulumi.StringPtrInput
	// The language of the following fields in entityType: EntityType.entities.value EntityType.entities.synonyms
	// EntityType.excluded_phrases.value If not specified, the agent's default language is used. Many languages are supported.
	// Note: languages must be enabled in the agent before they can be used.
	LanguageCode pulumi.StringPtrInput
	// The unique identifier of the entity type. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
	// ID>/entityTypes/<Entity Type ID>.
	Name pulumi.StringPtrInput
	// The agent to create a entity type for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent pulumi.StringPtrInput
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and
	// intent parameters referring to the entity type will be replaced by parameter name when logging.
	Redact   pulumi.BoolPtrInput
	Timeouts DialogflowCxEntityTypeTimeoutsPtrInput
}

func (DialogflowCxEntityTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowCxEntityTypeState)(nil)).Elem()
}

type dialogflowCxEntityTypeArgs struct {
	// Represents kinds of entities. * AUTO_EXPANSION_MODE_UNSPECIFIED: Auto expansion disabled for the entity. *
	// AUTO_EXPANSION_MODE_DEFAULT: Allows an agent to recognize values that have not been explicitly listed in the entity.
	// Possible values: ["AUTO_EXPANSION_MODE_DEFAULT", "AUTO_EXPANSION_MODE_UNSPECIFIED"]
	AutoExpansionMode        *string `pulumi:"autoExpansionMode"`
	DialogflowCxEntityTypeId *string `pulumi:"dialogflowCxEntityTypeId"`
	// The human-readable name of the entity type, unique within the agent.
	DisplayName string `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction *bool `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities []DialogflowCxEntityTypeEntity `pulumi:"entities"`
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with
	// entry giant(an adjective), you might consider adding giants(a noun) as an exclusion. If the kind of entity type is
	// KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases []DialogflowCxEntityTypeExcludedPhrase `pulumi:"excludedPhrases"`
	// Indicates whether the entity type can be automatically expanded. * KIND_MAP: Map entity types allow mapping of a group
	// of synonyms to a canonical value. * KIND_LIST: List entity types contain a set of entries that do not map to canonical
	// values. However, list entity types can contain references to other entity types (with or without aliases). *
	// KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values. Possible values: ["KIND_MAP",
	// "KIND_LIST", "KIND_REGEXP"]
	Kind string `pulumi:"kind"`
	// The language of the following fields in entityType: EntityType.entities.value EntityType.entities.synonyms
	// EntityType.excluded_phrases.value If not specified, the agent's default language is used. Many languages are supported.
	// Note: languages must be enabled in the agent before they can be used.
	LanguageCode *string `pulumi:"languageCode"`
	// The agent to create a entity type for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent *string `pulumi:"parent"`
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and
	// intent parameters referring to the entity type will be replaced by parameter name when logging.
	Redact   *bool                           `pulumi:"redact"`
	Timeouts *DialogflowCxEntityTypeTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DialogflowCxEntityType resource.
type DialogflowCxEntityTypeArgs struct {
	// Represents kinds of entities. * AUTO_EXPANSION_MODE_UNSPECIFIED: Auto expansion disabled for the entity. *
	// AUTO_EXPANSION_MODE_DEFAULT: Allows an agent to recognize values that have not been explicitly listed in the entity.
	// Possible values: ["AUTO_EXPANSION_MODE_DEFAULT", "AUTO_EXPANSION_MODE_UNSPECIFIED"]
	AutoExpansionMode        pulumi.StringPtrInput
	DialogflowCxEntityTypeId pulumi.StringPtrInput
	// The human-readable name of the entity type, unique within the agent.
	DisplayName pulumi.StringInput
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolPtrInput
	// The collection of entity entries associated with the entity type.
	Entities DialogflowCxEntityTypeEntityArrayInput
	// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with
	// entry giant(an adjective), you might consider adding giants(a noun) as an exclusion. If the kind of entity type is
	// KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
	ExcludedPhrases DialogflowCxEntityTypeExcludedPhraseArrayInput
	// Indicates whether the entity type can be automatically expanded. * KIND_MAP: Map entity types allow mapping of a group
	// of synonyms to a canonical value. * KIND_LIST: List entity types contain a set of entries that do not map to canonical
	// values. However, list entity types can contain references to other entity types (with or without aliases). *
	// KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values. Possible values: ["KIND_MAP",
	// "KIND_LIST", "KIND_REGEXP"]
	Kind pulumi.StringInput
	// The language of the following fields in entityType: EntityType.entities.value EntityType.entities.synonyms
	// EntityType.excluded_phrases.value If not specified, the agent's default language is used. Many languages are supported.
	// Note: languages must be enabled in the agent before they can be used.
	LanguageCode pulumi.StringPtrInput
	// The agent to create a entity type for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent pulumi.StringPtrInput
	// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and
	// intent parameters referring to the entity type will be replaced by parameter name when logging.
	Redact   pulumi.BoolPtrInput
	Timeouts DialogflowCxEntityTypeTimeoutsPtrInput
}

func (DialogflowCxEntityTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowCxEntityTypeArgs)(nil)).Elem()
}

type DialogflowCxEntityTypeInput interface {
	pulumi.Input

	ToDialogflowCxEntityTypeOutput() DialogflowCxEntityTypeOutput
	ToDialogflowCxEntityTypeOutputWithContext(ctx context.Context) DialogflowCxEntityTypeOutput
}

func (*DialogflowCxEntityType) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowCxEntityType)(nil)).Elem()
}

func (i *DialogflowCxEntityType) ToDialogflowCxEntityTypeOutput() DialogflowCxEntityTypeOutput {
	return i.ToDialogflowCxEntityTypeOutputWithContext(context.Background())
}

func (i *DialogflowCxEntityType) ToDialogflowCxEntityTypeOutputWithContext(ctx context.Context) DialogflowCxEntityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DialogflowCxEntityTypeOutput)
}

type DialogflowCxEntityTypeOutput struct{ *pulumi.OutputState }

func (DialogflowCxEntityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowCxEntityType)(nil)).Elem()
}

func (o DialogflowCxEntityTypeOutput) ToDialogflowCxEntityTypeOutput() DialogflowCxEntityTypeOutput {
	return o
}

func (o DialogflowCxEntityTypeOutput) ToDialogflowCxEntityTypeOutputWithContext(ctx context.Context) DialogflowCxEntityTypeOutput {
	return o
}

// Represents kinds of entities. * AUTO_EXPANSION_MODE_UNSPECIFIED: Auto expansion disabled for the entity. *
// AUTO_EXPANSION_MODE_DEFAULT: Allows an agent to recognize values that have not been explicitly listed in the entity.
// Possible values: ["AUTO_EXPANSION_MODE_DEFAULT", "AUTO_EXPANSION_MODE_UNSPECIFIED"]
func (o DialogflowCxEntityTypeOutput) AutoExpansionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) pulumi.StringPtrOutput { return v.AutoExpansionMode }).(pulumi.StringPtrOutput)
}

func (o DialogflowCxEntityTypeOutput) DialogflowCxEntityTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) pulumi.StringOutput { return v.DialogflowCxEntityTypeId }).(pulumi.StringOutput)
}

// The human-readable name of the entity type, unique within the agent.
func (o DialogflowCxEntityTypeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Enables fuzzy entity extraction during classification.
func (o DialogflowCxEntityTypeOutput) EnableFuzzyExtraction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) pulumi.BoolPtrOutput { return v.EnableFuzzyExtraction }).(pulumi.BoolPtrOutput)
}

// The collection of entity entries associated with the entity type.
func (o DialogflowCxEntityTypeOutput) Entities() DialogflowCxEntityTypeEntityArrayOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) DialogflowCxEntityTypeEntityArrayOutput { return v.Entities }).(DialogflowCxEntityTypeEntityArrayOutput)
}

// Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with
// entry giant(an adjective), you might consider adding giants(a noun) as an exclusion. If the kind of entity type is
// KIND_MAP, then the phrases specified by entities and excluded phrases should be mutually exclusive.
func (o DialogflowCxEntityTypeOutput) ExcludedPhrases() DialogflowCxEntityTypeExcludedPhraseArrayOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) DialogflowCxEntityTypeExcludedPhraseArrayOutput {
		return v.ExcludedPhrases
	}).(DialogflowCxEntityTypeExcludedPhraseArrayOutput)
}

// Indicates whether the entity type can be automatically expanded. * KIND_MAP: Map entity types allow mapping of a group
// of synonyms to a canonical value. * KIND_LIST: List entity types contain a set of entries that do not map to canonical
// values. However, list entity types can contain references to other entity types (with or without aliases). *
// KIND_REGEXP: Regexp entity types allow to specify regular expressions in entries values. Possible values: ["KIND_MAP",
// "KIND_LIST", "KIND_REGEXP"]
func (o DialogflowCxEntityTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// The language of the following fields in entityType: EntityType.entities.value EntityType.entities.synonyms
// EntityType.excluded_phrases.value If not specified, the agent's default language is used. Many languages are supported.
// Note: languages must be enabled in the agent before they can be used.
func (o DialogflowCxEntityTypeOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) pulumi.StringPtrOutput { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

// The unique identifier of the entity type. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
// ID>/entityTypes/<Entity Type ID>.
func (o DialogflowCxEntityTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The agent to create a entity type for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
func (o DialogflowCxEntityTypeOutput) Parent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) pulumi.StringPtrOutput { return v.Parent }).(pulumi.StringPtrOutput)
}

// Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and
// intent parameters referring to the entity type will be replaced by parameter name when logging.
func (o DialogflowCxEntityTypeOutput) Redact() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) pulumi.BoolPtrOutput { return v.Redact }).(pulumi.BoolPtrOutput)
}

func (o DialogflowCxEntityTypeOutput) Timeouts() DialogflowCxEntityTypeTimeoutsPtrOutput {
	return o.ApplyT(func(v *DialogflowCxEntityType) DialogflowCxEntityTypeTimeoutsPtrOutput { return v.Timeouts }).(DialogflowCxEntityTypeTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DialogflowCxEntityTypeInput)(nil)).Elem(), &DialogflowCxEntityType{})
	pulumi.RegisterOutputType(DialogflowCxEntityTypeOutput{})
}
