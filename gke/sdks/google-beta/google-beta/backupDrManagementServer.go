// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BackupDrManagementServer struct {
	pulumi.CustomResourceState

	BackupDrManagementServerId pulumi.StringOutput `pulumi:"backupDrManagementServerId"`
	// The location for the management server (management console)
	Location pulumi.StringOutput `pulumi:"location"`
	// The management console URI
	ManagementUris BackupDrManagementServerManagementUriArrayOutput `pulumi:"managementUris"`
	// The name of management server (management console)
	Name pulumi.StringOutput `pulumi:"name"`
	// Network details to create management server (management console).
	Networks BackupDrManagementServerNetworkArrayOutput `pulumi:"networks"`
	// The oauth2ClientId of management console.
	Oauth2ClientId pulumi.StringOutput                       `pulumi:"oauth2ClientId"`
	Project        pulumi.StringOutput                       `pulumi:"project"`
	Timeouts       BackupDrManagementServerTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewBackupDrManagementServer registers a new resource with the given unique name, arguments, and options.
func NewBackupDrManagementServer(ctx *pulumi.Context,
	name string, args *BackupDrManagementServerArgs, opts ...pulumi.ResourceOption) (*BackupDrManagementServer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BackupDrManagementServer
	err = ctx.RegisterPackageResource("google-beta:index/backupDrManagementServer:BackupDrManagementServer", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupDrManagementServer gets an existing BackupDrManagementServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupDrManagementServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupDrManagementServerState, opts ...pulumi.ResourceOption) (*BackupDrManagementServer, error) {
	var resource BackupDrManagementServer
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/backupDrManagementServer:BackupDrManagementServer", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupDrManagementServer resources.
type backupDrManagementServerState struct {
	BackupDrManagementServerId *string `pulumi:"backupDrManagementServerId"`
	// The location for the management server (management console)
	Location *string `pulumi:"location"`
	// The management console URI
	ManagementUris []BackupDrManagementServerManagementUri `pulumi:"managementUris"`
	// The name of management server (management console)
	Name *string `pulumi:"name"`
	// Network details to create management server (management console).
	Networks []BackupDrManagementServerNetwork `pulumi:"networks"`
	// The oauth2ClientId of management console.
	Oauth2ClientId *string                           `pulumi:"oauth2ClientId"`
	Project        *string                           `pulumi:"project"`
	Timeouts       *BackupDrManagementServerTimeouts `pulumi:"timeouts"`
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type *string `pulumi:"type"`
}

type BackupDrManagementServerState struct {
	BackupDrManagementServerId pulumi.StringPtrInput
	// The location for the management server (management console)
	Location pulumi.StringPtrInput
	// The management console URI
	ManagementUris BackupDrManagementServerManagementUriArrayInput
	// The name of management server (management console)
	Name pulumi.StringPtrInput
	// Network details to create management server (management console).
	Networks BackupDrManagementServerNetworkArrayInput
	// The oauth2ClientId of management console.
	Oauth2ClientId pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	Timeouts       BackupDrManagementServerTimeoutsPtrInput
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type pulumi.StringPtrInput
}

func (BackupDrManagementServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupDrManagementServerState)(nil)).Elem()
}

type backupDrManagementServerArgs struct {
	BackupDrManagementServerId *string `pulumi:"backupDrManagementServerId"`
	// The location for the management server (management console)
	Location string `pulumi:"location"`
	// The name of management server (management console)
	Name *string `pulumi:"name"`
	// Network details to create management server (management console).
	Networks []BackupDrManagementServerNetwork `pulumi:"networks"`
	Project  *string                           `pulumi:"project"`
	Timeouts *BackupDrManagementServerTimeouts `pulumi:"timeouts"`
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a BackupDrManagementServer resource.
type BackupDrManagementServerArgs struct {
	BackupDrManagementServerId pulumi.StringPtrInput
	// The location for the management server (management console)
	Location pulumi.StringInput
	// The name of management server (management console)
	Name pulumi.StringPtrInput
	// Network details to create management server (management console).
	Networks BackupDrManagementServerNetworkArrayInput
	Project  pulumi.StringPtrInput
	Timeouts BackupDrManagementServerTimeoutsPtrInput
	// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
	Type pulumi.StringPtrInput
}

func (BackupDrManagementServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupDrManagementServerArgs)(nil)).Elem()
}

type BackupDrManagementServerInput interface {
	pulumi.Input

	ToBackupDrManagementServerOutput() BackupDrManagementServerOutput
	ToBackupDrManagementServerOutputWithContext(ctx context.Context) BackupDrManagementServerOutput
}

func (*BackupDrManagementServer) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupDrManagementServer)(nil)).Elem()
}

func (i *BackupDrManagementServer) ToBackupDrManagementServerOutput() BackupDrManagementServerOutput {
	return i.ToBackupDrManagementServerOutputWithContext(context.Background())
}

func (i *BackupDrManagementServer) ToBackupDrManagementServerOutputWithContext(ctx context.Context) BackupDrManagementServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupDrManagementServerOutput)
}

type BackupDrManagementServerOutput struct{ *pulumi.OutputState }

func (BackupDrManagementServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupDrManagementServer)(nil)).Elem()
}

func (o BackupDrManagementServerOutput) ToBackupDrManagementServerOutput() BackupDrManagementServerOutput {
	return o
}

func (o BackupDrManagementServerOutput) ToBackupDrManagementServerOutputWithContext(ctx context.Context) BackupDrManagementServerOutput {
	return o
}

func (o BackupDrManagementServerOutput) BackupDrManagementServerId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrManagementServer) pulumi.StringOutput { return v.BackupDrManagementServerId }).(pulumi.StringOutput)
}

// The location for the management server (management console)
func (o BackupDrManagementServerOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrManagementServer) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The management console URI
func (o BackupDrManagementServerOutput) ManagementUris() BackupDrManagementServerManagementUriArrayOutput {
	return o.ApplyT(func(v *BackupDrManagementServer) BackupDrManagementServerManagementUriArrayOutput {
		return v.ManagementUris
	}).(BackupDrManagementServerManagementUriArrayOutput)
}

// The name of management server (management console)
func (o BackupDrManagementServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrManagementServer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network details to create management server (management console).
func (o BackupDrManagementServerOutput) Networks() BackupDrManagementServerNetworkArrayOutput {
	return o.ApplyT(func(v *BackupDrManagementServer) BackupDrManagementServerNetworkArrayOutput { return v.Networks }).(BackupDrManagementServerNetworkArrayOutput)
}

// The oauth2ClientId of management console.
func (o BackupDrManagementServerOutput) Oauth2ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrManagementServer) pulumi.StringOutput { return v.Oauth2ClientId }).(pulumi.StringOutput)
}

func (o BackupDrManagementServerOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupDrManagementServer) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BackupDrManagementServerOutput) Timeouts() BackupDrManagementServerTimeoutsPtrOutput {
	return o.ApplyT(func(v *BackupDrManagementServer) BackupDrManagementServerTimeoutsPtrOutput { return v.Timeouts }).(BackupDrManagementServerTimeoutsPtrOutput)
}

// The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
func (o BackupDrManagementServerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupDrManagementServer) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupDrManagementServerInput)(nil)).Elem(), &BackupDrManagementServer{})
	pulumi.RegisterOutputType(BackupDrManagementServerOutput{})
}
