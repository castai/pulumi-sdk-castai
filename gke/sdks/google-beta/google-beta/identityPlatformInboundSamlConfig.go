// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IdentityPlatformInboundSamlConfig struct {
	pulumi.CustomResourceState

	// Human friendly display name.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// If this config allows users to sign in with the provider.
	Enabled                             pulumi.BoolPtrOutput `pulumi:"enabled"`
	IdentityPlatformInboundSamlConfigId pulumi.StringOutput  `pulumi:"identityPlatformInboundSamlConfigId"`
	// SAML IdP configuration when the project acts as the relying party
	IdpConfig IdentityPlatformInboundSamlConfigIdpConfigOutput `pulumi:"idpConfig"`
	// The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters, hyphens,
	// underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an alphanumeric
	// character, and have at least 2 characters.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an
	// authentication assertion issued by a SAML identity provider.
	SpConfig IdentityPlatformInboundSamlConfigSpConfigOutput    `pulumi:"spConfig"`
	Timeouts IdentityPlatformInboundSamlConfigTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewIdentityPlatformInboundSamlConfig registers a new resource with the given unique name, arguments, and options.
func NewIdentityPlatformInboundSamlConfig(ctx *pulumi.Context,
	name string, args *IdentityPlatformInboundSamlConfigArgs, opts ...pulumi.ResourceOption) (*IdentityPlatformInboundSamlConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.IdpConfig == nil {
		return nil, errors.New("invalid value for required argument 'IdpConfig'")
	}
	if args.SpConfig == nil {
		return nil, errors.New("invalid value for required argument 'SpConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IdentityPlatformInboundSamlConfig
	err = ctx.RegisterPackageResource("google-beta:index/identityPlatformInboundSamlConfig:IdentityPlatformInboundSamlConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPlatformInboundSamlConfig gets an existing IdentityPlatformInboundSamlConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPlatformInboundSamlConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPlatformInboundSamlConfigState, opts ...pulumi.ResourceOption) (*IdentityPlatformInboundSamlConfig, error) {
	var resource IdentityPlatformInboundSamlConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/identityPlatformInboundSamlConfig:IdentityPlatformInboundSamlConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPlatformInboundSamlConfig resources.
type identityPlatformInboundSamlConfigState struct {
	// Human friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// If this config allows users to sign in with the provider.
	Enabled                             *bool   `pulumi:"enabled"`
	IdentityPlatformInboundSamlConfigId *string `pulumi:"identityPlatformInboundSamlConfigId"`
	// SAML IdP configuration when the project acts as the relying party
	IdpConfig *IdentityPlatformInboundSamlConfigIdpConfig `pulumi:"idpConfig"`
	// The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters, hyphens,
	// underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an alphanumeric
	// character, and have at least 2 characters.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an
	// authentication assertion issued by a SAML identity provider.
	SpConfig *IdentityPlatformInboundSamlConfigSpConfig `pulumi:"spConfig"`
	Timeouts *IdentityPlatformInboundSamlConfigTimeouts `pulumi:"timeouts"`
}

type IdentityPlatformInboundSamlConfigState struct {
	// Human friendly display name.
	DisplayName pulumi.StringPtrInput
	// If this config allows users to sign in with the provider.
	Enabled                             pulumi.BoolPtrInput
	IdentityPlatformInboundSamlConfigId pulumi.StringPtrInput
	// SAML IdP configuration when the project acts as the relying party
	IdpConfig IdentityPlatformInboundSamlConfigIdpConfigPtrInput
	// The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters, hyphens,
	// underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an alphanumeric
	// character, and have at least 2 characters.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an
	// authentication assertion issued by a SAML identity provider.
	SpConfig IdentityPlatformInboundSamlConfigSpConfigPtrInput
	Timeouts IdentityPlatformInboundSamlConfigTimeoutsPtrInput
}

func (IdentityPlatformInboundSamlConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPlatformInboundSamlConfigState)(nil)).Elem()
}

type identityPlatformInboundSamlConfigArgs struct {
	// Human friendly display name.
	DisplayName string `pulumi:"displayName"`
	// If this config allows users to sign in with the provider.
	Enabled                             *bool   `pulumi:"enabled"`
	IdentityPlatformInboundSamlConfigId *string `pulumi:"identityPlatformInboundSamlConfigId"`
	// SAML IdP configuration when the project acts as the relying party
	IdpConfig IdentityPlatformInboundSamlConfigIdpConfig `pulumi:"idpConfig"`
	// The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters, hyphens,
	// underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an alphanumeric
	// character, and have at least 2 characters.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an
	// authentication assertion issued by a SAML identity provider.
	SpConfig IdentityPlatformInboundSamlConfigSpConfig  `pulumi:"spConfig"`
	Timeouts *IdentityPlatformInboundSamlConfigTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a IdentityPlatformInboundSamlConfig resource.
type IdentityPlatformInboundSamlConfigArgs struct {
	// Human friendly display name.
	DisplayName pulumi.StringInput
	// If this config allows users to sign in with the provider.
	Enabled                             pulumi.BoolPtrInput
	IdentityPlatformInboundSamlConfigId pulumi.StringPtrInput
	// SAML IdP configuration when the project acts as the relying party
	IdpConfig IdentityPlatformInboundSamlConfigIdpConfigInput
	// The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters, hyphens,
	// underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an alphanumeric
	// character, and have at least 2 characters.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an
	// authentication assertion issued by a SAML identity provider.
	SpConfig IdentityPlatformInboundSamlConfigSpConfigInput
	Timeouts IdentityPlatformInboundSamlConfigTimeoutsPtrInput
}

func (IdentityPlatformInboundSamlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPlatformInboundSamlConfigArgs)(nil)).Elem()
}

type IdentityPlatformInboundSamlConfigInput interface {
	pulumi.Input

	ToIdentityPlatformInboundSamlConfigOutput() IdentityPlatformInboundSamlConfigOutput
	ToIdentityPlatformInboundSamlConfigOutputWithContext(ctx context.Context) IdentityPlatformInboundSamlConfigOutput
}

func (*IdentityPlatformInboundSamlConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPlatformInboundSamlConfig)(nil)).Elem()
}

func (i *IdentityPlatformInboundSamlConfig) ToIdentityPlatformInboundSamlConfigOutput() IdentityPlatformInboundSamlConfigOutput {
	return i.ToIdentityPlatformInboundSamlConfigOutputWithContext(context.Background())
}

func (i *IdentityPlatformInboundSamlConfig) ToIdentityPlatformInboundSamlConfigOutputWithContext(ctx context.Context) IdentityPlatformInboundSamlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPlatformInboundSamlConfigOutput)
}

type IdentityPlatformInboundSamlConfigOutput struct{ *pulumi.OutputState }

func (IdentityPlatformInboundSamlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPlatformInboundSamlConfig)(nil)).Elem()
}

func (o IdentityPlatformInboundSamlConfigOutput) ToIdentityPlatformInboundSamlConfigOutput() IdentityPlatformInboundSamlConfigOutput {
	return o
}

func (o IdentityPlatformInboundSamlConfigOutput) ToIdentityPlatformInboundSamlConfigOutputWithContext(ctx context.Context) IdentityPlatformInboundSamlConfigOutput {
	return o
}

// Human friendly display name.
func (o IdentityPlatformInboundSamlConfigOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformInboundSamlConfig) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// If this config allows users to sign in with the provider.
func (o IdentityPlatformInboundSamlConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformInboundSamlConfig) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o IdentityPlatformInboundSamlConfigOutput) IdentityPlatformInboundSamlConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformInboundSamlConfig) pulumi.StringOutput {
		return v.IdentityPlatformInboundSamlConfigId
	}).(pulumi.StringOutput)
}

// SAML IdP configuration when the project acts as the relying party
func (o IdentityPlatformInboundSamlConfigOutput) IdpConfig() IdentityPlatformInboundSamlConfigIdpConfigOutput {
	return o.ApplyT(func(v *IdentityPlatformInboundSamlConfig) IdentityPlatformInboundSamlConfigIdpConfigOutput {
		return v.IdpConfig
	}).(IdentityPlatformInboundSamlConfigIdpConfigOutput)
}

// The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric characters, hyphens,
// underscores or periods. The part after 'saml.' must also start with a lowercase letter, end with an alphanumeric
// character, and have at least 2 characters.
func (o IdentityPlatformInboundSamlConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformInboundSamlConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityPlatformInboundSamlConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformInboundSamlConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an
// authentication assertion issued by a SAML identity provider.
func (o IdentityPlatformInboundSamlConfigOutput) SpConfig() IdentityPlatformInboundSamlConfigSpConfigOutput {
	return o.ApplyT(func(v *IdentityPlatformInboundSamlConfig) IdentityPlatformInboundSamlConfigSpConfigOutput {
		return v.SpConfig
	}).(IdentityPlatformInboundSamlConfigSpConfigOutput)
}

func (o IdentityPlatformInboundSamlConfigOutput) Timeouts() IdentityPlatformInboundSamlConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformInboundSamlConfig) IdentityPlatformInboundSamlConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(IdentityPlatformInboundSamlConfigTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPlatformInboundSamlConfigInput)(nil)).Elem(), &IdentityPlatformInboundSamlConfig{})
	pulumi.RegisterOutputType(IdentityPlatformInboundSamlConfigOutput{})
}
