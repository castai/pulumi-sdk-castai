// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VmwareengineNetworkPolicy struct {
	pulumi.CustomResourceState

	// Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// User-provided description for this network policy.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// IP address range in CIDR notation used to create internet access and external IP access. An RFC 1918 CIDR block, with a
	// "/26" prefix, is required. The range cannot overlap with any prefixes either in the consumer VPC network or in use by
	// the private clouds attached to that VPC network.
	EdgeServicesCidr pulumi.StringOutput `pulumi:"edgeServicesCidr"`
	// Network service that allows External IP addresses to be assigned to VMware workloads. This service can only be enabled
	// when internetAccess is also enabled.
	ExternalIp VmwareengineNetworkPolicyExternalIpPtrOutput `pulumi:"externalIp"`
	// Network service that allows VMware workloads to access the internet.
	InternetAccess VmwareengineNetworkPolicyInternetAccessPtrOutput `pulumi:"internetAccess"`
	// The resource name of the location (region) to create the new network policy in. Resource names are schemeless URIs that
	// follow the conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-central1
	Location pulumi.StringOutput `pulumi:"location"`
	// The ID of the Network Policy.
	Name     pulumi.StringOutput                        `pulumi:"name"`
	Project  pulumi.StringOutput                        `pulumi:"project"`
	Timeouts VmwareengineNetworkPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
	// System-generated unique identifier for the resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project} can either be a
	// project number or a project ID.
	VmwareEngineNetwork pulumi.StringOutput `pulumi:"vmwareEngineNetwork"`
	// The canonical name of the VMware Engine network in the form:
	// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
	VmwareEngineNetworkCanonical pulumi.StringOutput `pulumi:"vmwareEngineNetworkCanonical"`
	VmwareengineNetworkPolicyId  pulumi.StringOutput `pulumi:"vmwareengineNetworkPolicyId"`
}

// NewVmwareengineNetworkPolicy registers a new resource with the given unique name, arguments, and options.
func NewVmwareengineNetworkPolicy(ctx *pulumi.Context,
	name string, args *VmwareengineNetworkPolicyArgs, opts ...pulumi.ResourceOption) (*VmwareengineNetworkPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EdgeServicesCidr == nil {
		return nil, errors.New("invalid value for required argument 'EdgeServicesCidr'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.VmwareEngineNetwork == nil {
		return nil, errors.New("invalid value for required argument 'VmwareEngineNetwork'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VmwareengineNetworkPolicy
	err = ctx.RegisterPackageResource("google-beta:index/vmwareengineNetworkPolicy:VmwareengineNetworkPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVmwareengineNetworkPolicy gets an existing VmwareengineNetworkPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVmwareengineNetworkPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VmwareengineNetworkPolicyState, opts ...pulumi.ResourceOption) (*VmwareengineNetworkPolicy, error) {
	var resource VmwareengineNetworkPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vmwareengineNetworkPolicy:VmwareengineNetworkPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VmwareengineNetworkPolicy resources.
type vmwareengineNetworkPolicyState struct {
	// Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// User-provided description for this network policy.
	Description *string `pulumi:"description"`
	// IP address range in CIDR notation used to create internet access and external IP access. An RFC 1918 CIDR block, with a
	// "/26" prefix, is required. The range cannot overlap with any prefixes either in the consumer VPC network or in use by
	// the private clouds attached to that VPC network.
	EdgeServicesCidr *string `pulumi:"edgeServicesCidr"`
	// Network service that allows External IP addresses to be assigned to VMware workloads. This service can only be enabled
	// when internetAccess is also enabled.
	ExternalIp *VmwareengineNetworkPolicyExternalIp `pulumi:"externalIp"`
	// Network service that allows VMware workloads to access the internet.
	InternetAccess *VmwareengineNetworkPolicyInternetAccess `pulumi:"internetAccess"`
	// The resource name of the location (region) to create the new network policy in. Resource names are schemeless URIs that
	// follow the conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-central1
	Location *string `pulumi:"location"`
	// The ID of the Network Policy.
	Name     *string                            `pulumi:"name"`
	Project  *string                            `pulumi:"project"`
	Timeouts *VmwareengineNetworkPolicyTimeouts `pulumi:"timeouts"`
	// System-generated unique identifier for the resource.
	Uid *string `pulumi:"uid"`
	// Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project} can either be a
	// project number or a project ID.
	VmwareEngineNetwork *string `pulumi:"vmwareEngineNetwork"`
	// The canonical name of the VMware Engine network in the form:
	// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
	VmwareEngineNetworkCanonical *string `pulumi:"vmwareEngineNetworkCanonical"`
	VmwareengineNetworkPolicyId  *string `pulumi:"vmwareengineNetworkPolicyId"`
}

type VmwareengineNetworkPolicyState struct {
	// Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// User-provided description for this network policy.
	Description pulumi.StringPtrInput
	// IP address range in CIDR notation used to create internet access and external IP access. An RFC 1918 CIDR block, with a
	// "/26" prefix, is required. The range cannot overlap with any prefixes either in the consumer VPC network or in use by
	// the private clouds attached to that VPC network.
	EdgeServicesCidr pulumi.StringPtrInput
	// Network service that allows External IP addresses to be assigned to VMware workloads. This service can only be enabled
	// when internetAccess is also enabled.
	ExternalIp VmwareengineNetworkPolicyExternalIpPtrInput
	// Network service that allows VMware workloads to access the internet.
	InternetAccess VmwareengineNetworkPolicyInternetAccessPtrInput
	// The resource name of the location (region) to create the new network policy in. Resource names are schemeless URIs that
	// follow the conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-central1
	Location pulumi.StringPtrInput
	// The ID of the Network Policy.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts VmwareengineNetworkPolicyTimeoutsPtrInput
	// System-generated unique identifier for the resource.
	Uid pulumi.StringPtrInput
	// Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project} can either be a
	// project number or a project ID.
	VmwareEngineNetwork pulumi.StringPtrInput
	// The canonical name of the VMware Engine network in the form:
	// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
	VmwareEngineNetworkCanonical pulumi.StringPtrInput
	VmwareengineNetworkPolicyId  pulumi.StringPtrInput
}

func (VmwareengineNetworkPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmwareengineNetworkPolicyState)(nil)).Elem()
}

type vmwareengineNetworkPolicyArgs struct {
	// User-provided description for this network policy.
	Description *string `pulumi:"description"`
	// IP address range in CIDR notation used to create internet access and external IP access. An RFC 1918 CIDR block, with a
	// "/26" prefix, is required. The range cannot overlap with any prefixes either in the consumer VPC network or in use by
	// the private clouds attached to that VPC network.
	EdgeServicesCidr string `pulumi:"edgeServicesCidr"`
	// Network service that allows External IP addresses to be assigned to VMware workloads. This service can only be enabled
	// when internetAccess is also enabled.
	ExternalIp *VmwareengineNetworkPolicyExternalIp `pulumi:"externalIp"`
	// Network service that allows VMware workloads to access the internet.
	InternetAccess *VmwareengineNetworkPolicyInternetAccess `pulumi:"internetAccess"`
	// The resource name of the location (region) to create the new network policy in. Resource names are schemeless URIs that
	// follow the conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-central1
	Location string `pulumi:"location"`
	// The ID of the Network Policy.
	Name     *string                            `pulumi:"name"`
	Project  *string                            `pulumi:"project"`
	Timeouts *VmwareengineNetworkPolicyTimeouts `pulumi:"timeouts"`
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project} can either be a
	// project number or a project ID.
	VmwareEngineNetwork         string  `pulumi:"vmwareEngineNetwork"`
	VmwareengineNetworkPolicyId *string `pulumi:"vmwareengineNetworkPolicyId"`
}

// The set of arguments for constructing a VmwareengineNetworkPolicy resource.
type VmwareengineNetworkPolicyArgs struct {
	// User-provided description for this network policy.
	Description pulumi.StringPtrInput
	// IP address range in CIDR notation used to create internet access and external IP access. An RFC 1918 CIDR block, with a
	// "/26" prefix, is required. The range cannot overlap with any prefixes either in the consumer VPC network or in use by
	// the private clouds attached to that VPC network.
	EdgeServicesCidr pulumi.StringInput
	// Network service that allows External IP addresses to be assigned to VMware workloads. This service can only be enabled
	// when internetAccess is also enabled.
	ExternalIp VmwareengineNetworkPolicyExternalIpPtrInput
	// Network service that allows VMware workloads to access the internet.
	InternetAccess VmwareengineNetworkPolicyInternetAccessPtrInput
	// The resource name of the location (region) to create the new network policy in. Resource names are schemeless URIs that
	// follow the conventions in https://cloud.google.com/apis/design/resource_names. For example:
	// projects/my-project/locations/us-central1
	Location pulumi.StringInput
	// The ID of the Network Policy.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts VmwareengineNetworkPolicyTimeoutsPtrInput
	// The relative resource name of the VMware Engine network. Specify the name in the following form:
	// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project} can either be a
	// project number or a project ID.
	VmwareEngineNetwork         pulumi.StringInput
	VmwareengineNetworkPolicyId pulumi.StringPtrInput
}

func (VmwareengineNetworkPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmwareengineNetworkPolicyArgs)(nil)).Elem()
}

type VmwareengineNetworkPolicyInput interface {
	pulumi.Input

	ToVmwareengineNetworkPolicyOutput() VmwareengineNetworkPolicyOutput
	ToVmwareengineNetworkPolicyOutputWithContext(ctx context.Context) VmwareengineNetworkPolicyOutput
}

func (*VmwareengineNetworkPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareengineNetworkPolicy)(nil)).Elem()
}

func (i *VmwareengineNetworkPolicy) ToVmwareengineNetworkPolicyOutput() VmwareengineNetworkPolicyOutput {
	return i.ToVmwareengineNetworkPolicyOutputWithContext(context.Background())
}

func (i *VmwareengineNetworkPolicy) ToVmwareengineNetworkPolicyOutputWithContext(ctx context.Context) VmwareengineNetworkPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareengineNetworkPolicyOutput)
}

type VmwareengineNetworkPolicyOutput struct{ *pulumi.OutputState }

func (VmwareengineNetworkPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareengineNetworkPolicy)(nil)).Elem()
}

func (o VmwareengineNetworkPolicyOutput) ToVmwareengineNetworkPolicyOutput() VmwareengineNetworkPolicyOutput {
	return o
}

func (o VmwareengineNetworkPolicyOutput) ToVmwareengineNetworkPolicyOutputWithContext(ctx context.Context) VmwareengineNetworkPolicyOutput {
	return o
}

// Creation time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o VmwareengineNetworkPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// User-provided description for this network policy.
func (o VmwareengineNetworkPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// IP address range in CIDR notation used to create internet access and external IP access. An RFC 1918 CIDR block, with a
// "/26" prefix, is required. The range cannot overlap with any prefixes either in the consumer VPC network or in use by
// the private clouds attached to that VPC network.
func (o VmwareengineNetworkPolicyOutput) EdgeServicesCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.EdgeServicesCidr }).(pulumi.StringOutput)
}

// Network service that allows External IP addresses to be assigned to VMware workloads. This service can only be enabled
// when internetAccess is also enabled.
func (o VmwareengineNetworkPolicyOutput) ExternalIp() VmwareengineNetworkPolicyExternalIpPtrOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) VmwareengineNetworkPolicyExternalIpPtrOutput { return v.ExternalIp }).(VmwareengineNetworkPolicyExternalIpPtrOutput)
}

// Network service that allows VMware workloads to access the internet.
func (o VmwareengineNetworkPolicyOutput) InternetAccess() VmwareengineNetworkPolicyInternetAccessPtrOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) VmwareengineNetworkPolicyInternetAccessPtrOutput {
		return v.InternetAccess
	}).(VmwareengineNetworkPolicyInternetAccessPtrOutput)
}

// The resource name of the location (region) to create the new network policy in. Resource names are schemeless URIs that
// follow the conventions in https://cloud.google.com/apis/design/resource_names. For example:
// projects/my-project/locations/us-central1
func (o VmwareengineNetworkPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The ID of the Network Policy.
func (o VmwareengineNetworkPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VmwareengineNetworkPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o VmwareengineNetworkPolicyOutput) Timeouts() VmwareengineNetworkPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) VmwareengineNetworkPolicyTimeoutsPtrOutput { return v.Timeouts }).(VmwareengineNetworkPolicyTimeoutsPtrOutput)
}

// System-generated unique identifier for the resource.
func (o VmwareengineNetworkPolicyOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Last updated time of this resource. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o VmwareengineNetworkPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The relative resource name of the VMware Engine network. Specify the name in the following form:
// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project} can either be a
// project number or a project ID.
func (o VmwareengineNetworkPolicyOutput) VmwareEngineNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.VmwareEngineNetwork }).(pulumi.StringOutput)
}

// The canonical name of the VMware Engine network in the form:
// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
func (o VmwareengineNetworkPolicyOutput) VmwareEngineNetworkCanonical() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.VmwareEngineNetworkCanonical }).(pulumi.StringOutput)
}

func (o VmwareengineNetworkPolicyOutput) VmwareengineNetworkPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *VmwareengineNetworkPolicy) pulumi.StringOutput { return v.VmwareengineNetworkPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareengineNetworkPolicyInput)(nil)).Elem(), &VmwareengineNetworkPolicy{})
	pulumi.RegisterOutputType(VmwareengineNetworkPolicyOutput{})
}
