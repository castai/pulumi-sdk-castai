// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataformRepositoryIamMember struct {
	pulumi.CustomResourceState

	Condition                     DataformRepositoryIamMemberConditionPtrOutput `pulumi:"condition"`
	DataformRepositoryIamMemberId pulumi.StringOutput                           `pulumi:"dataformRepositoryIamMemberId"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	Member                        pulumi.StringOutput                           `pulumi:"member"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	Region                        pulumi.StringOutput                           `pulumi:"region"`
	Repository                    pulumi.StringOutput                           `pulumi:"repository"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
}

// NewDataformRepositoryIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataformRepositoryIamMember(ctx *pulumi.Context,
	name string, args *DataformRepositoryIamMemberArgs, opts ...pulumi.ResourceOption) (*DataformRepositoryIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Repository == nil {
		return nil, errors.New("invalid value for required argument 'Repository'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataformRepositoryIamMember
	err = ctx.RegisterPackageResource("google-beta:index/dataformRepositoryIamMember:DataformRepositoryIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataformRepositoryIamMember gets an existing DataformRepositoryIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataformRepositoryIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataformRepositoryIamMemberState, opts ...pulumi.ResourceOption) (*DataformRepositoryIamMember, error) {
	var resource DataformRepositoryIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataformRepositoryIamMember:DataformRepositoryIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataformRepositoryIamMember resources.
type dataformRepositoryIamMemberState struct {
	Condition                     *DataformRepositoryIamMemberCondition `pulumi:"condition"`
	DataformRepositoryIamMemberId *string                               `pulumi:"dataformRepositoryIamMemberId"`
	Etag                          *string                               `pulumi:"etag"`
	Member                        *string                               `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	Region                        *string                               `pulumi:"region"`
	Repository                    *string                               `pulumi:"repository"`
	Role                          *string                               `pulumi:"role"`
}

type DataformRepositoryIamMemberState struct {
	Condition                     DataformRepositoryIamMemberConditionPtrInput
	DataformRepositoryIamMemberId pulumi.StringPtrInput
	Etag                          pulumi.StringPtrInput
	Member                        pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Region                        pulumi.StringPtrInput
	Repository                    pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
}

func (DataformRepositoryIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataformRepositoryIamMemberState)(nil)).Elem()
}

type dataformRepositoryIamMemberArgs struct {
	Condition                     *DataformRepositoryIamMemberCondition `pulumi:"condition"`
	DataformRepositoryIamMemberId *string                               `pulumi:"dataformRepositoryIamMemberId"`
	Member                        string                                `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	Region                        *string                               `pulumi:"region"`
	Repository                    string                                `pulumi:"repository"`
	Role                          string                                `pulumi:"role"`
}

// The set of arguments for constructing a DataformRepositoryIamMember resource.
type DataformRepositoryIamMemberArgs struct {
	Condition                     DataformRepositoryIamMemberConditionPtrInput
	DataformRepositoryIamMemberId pulumi.StringPtrInput
	Member                        pulumi.StringInput
	Project                       pulumi.StringPtrInput
	Region                        pulumi.StringPtrInput
	Repository                    pulumi.StringInput
	Role                          pulumi.StringInput
}

func (DataformRepositoryIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataformRepositoryIamMemberArgs)(nil)).Elem()
}

type DataformRepositoryIamMemberInput interface {
	pulumi.Input

	ToDataformRepositoryIamMemberOutput() DataformRepositoryIamMemberOutput
	ToDataformRepositoryIamMemberOutputWithContext(ctx context.Context) DataformRepositoryIamMemberOutput
}

func (*DataformRepositoryIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataformRepositoryIamMember)(nil)).Elem()
}

func (i *DataformRepositoryIamMember) ToDataformRepositoryIamMemberOutput() DataformRepositoryIamMemberOutput {
	return i.ToDataformRepositoryIamMemberOutputWithContext(context.Background())
}

func (i *DataformRepositoryIamMember) ToDataformRepositoryIamMemberOutputWithContext(ctx context.Context) DataformRepositoryIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataformRepositoryIamMemberOutput)
}

type DataformRepositoryIamMemberOutput struct{ *pulumi.OutputState }

func (DataformRepositoryIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataformRepositoryIamMember)(nil)).Elem()
}

func (o DataformRepositoryIamMemberOutput) ToDataformRepositoryIamMemberOutput() DataformRepositoryIamMemberOutput {
	return o
}

func (o DataformRepositoryIamMemberOutput) ToDataformRepositoryIamMemberOutputWithContext(ctx context.Context) DataformRepositoryIamMemberOutput {
	return o
}

func (o DataformRepositoryIamMemberOutput) Condition() DataformRepositoryIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataformRepositoryIamMember) DataformRepositoryIamMemberConditionPtrOutput { return v.Condition }).(DataformRepositoryIamMemberConditionPtrOutput)
}

func (o DataformRepositoryIamMemberOutput) DataformRepositoryIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamMember) pulumi.StringOutput { return v.DataformRepositoryIamMemberId }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamMemberOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamMember) pulumi.StringOutput { return v.Repository }).(pulumi.StringOutput)
}

func (o DataformRepositoryIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataformRepositoryIamMemberInput)(nil)).Elem(), &DataformRepositoryIamMember{})
	pulumi.RegisterOutputType(DataformRepositoryIamMemberOutput{})
}
