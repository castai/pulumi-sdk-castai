// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HealthcareHl7V2Store struct {
	pulumi.CustomResourceState

	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                pulumi.StringOutput    `pulumi:"dataset"`
	EffectiveLabels        pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	HealthcareHl7V2StoreId pulumi.StringOutput    `pulumi:"healthcareHl7V2StoreId"`
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name for the Hl7V2Store. ** Changing this property may recreate the Hl7v2 store (removing all data) **
	Name pulumi.StringOutput `pulumi:"name"`
	// A nested object resource.
	//
	// Deprecated: Deprecated
	NotificationConfig HealthcareHl7V2StoreNotificationConfigPtrOutput `pulumi:"notificationConfig"`
	// A list of notification configs. Each configuration uses a filter to determine whether to publish a message (both Ingest
	// & Create) on the corresponding notification destination. Only the message name is sent as part of the notification.
	// Supplied by the client.
	NotificationConfigs HealthcareHl7V2StoreNotificationConfigArrayOutput `pulumi:"notificationConfigs"`
	// A nested object resource.
	ParserConfig HealthcareHl7V2StoreParserConfigPtrOutput `pulumi:"parserConfig"`
	// Determines whether duplicate messages are allowed.
	RejectDuplicateMessage pulumi.BoolPtrOutput `pulumi:"rejectDuplicateMessage"`
	// The fully qualified name of this dataset
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                `pulumi:"terraformLabels"`
	Timeouts        HealthcareHl7V2StoreTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewHealthcareHl7V2Store registers a new resource with the given unique name, arguments, and options.
func NewHealthcareHl7V2Store(ctx *pulumi.Context,
	name string, args *HealthcareHl7V2StoreArgs, opts ...pulumi.ResourceOption) (*HealthcareHl7V2Store, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dataset == nil {
		return nil, errors.New("invalid value for required argument 'Dataset'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HealthcareHl7V2Store
	err = ctx.RegisterPackageResource("google-beta:index/healthcareHl7V2Store:HealthcareHl7V2Store", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthcareHl7V2Store gets an existing HealthcareHl7V2Store resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthcareHl7V2Store(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthcareHl7V2StoreState, opts ...pulumi.ResourceOption) (*HealthcareHl7V2Store, error) {
	var resource HealthcareHl7V2Store
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/healthcareHl7V2Store:HealthcareHl7V2Store", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthcareHl7V2Store resources.
type healthcareHl7V2StoreState struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                *string           `pulumi:"dataset"`
	EffectiveLabels        map[string]string `pulumi:"effectiveLabels"`
	HealthcareHl7V2StoreId *string           `pulumi:"healthcareHl7V2StoreId"`
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name for the Hl7V2Store. ** Changing this property may recreate the Hl7v2 store (removing all data) **
	Name *string `pulumi:"name"`
	// A nested object resource.
	//
	// Deprecated: Deprecated
	NotificationConfig *HealthcareHl7V2StoreNotificationConfig `pulumi:"notificationConfig"`
	// A list of notification configs. Each configuration uses a filter to determine whether to publish a message (both Ingest
	// & Create) on the corresponding notification destination. Only the message name is sent as part of the notification.
	// Supplied by the client.
	NotificationConfigs []HealthcareHl7V2StoreNotificationConfig `pulumi:"notificationConfigs"`
	// A nested object resource.
	ParserConfig *HealthcareHl7V2StoreParserConfig `pulumi:"parserConfig"`
	// Determines whether duplicate messages are allowed.
	RejectDuplicateMessage *bool `pulumi:"rejectDuplicateMessage"`
	// The fully qualified name of this dataset
	SelfLink *string `pulumi:"selfLink"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string             `pulumi:"terraformLabels"`
	Timeouts        *HealthcareHl7V2StoreTimeouts `pulumi:"timeouts"`
}

type HealthcareHl7V2StoreState struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                pulumi.StringPtrInput
	EffectiveLabels        pulumi.StringMapInput
	HealthcareHl7V2StoreId pulumi.StringPtrInput
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The resource name for the Hl7V2Store. ** Changing this property may recreate the Hl7v2 store (removing all data) **
	Name pulumi.StringPtrInput
	// A nested object resource.
	//
	// Deprecated: Deprecated
	NotificationConfig HealthcareHl7V2StoreNotificationConfigPtrInput
	// A list of notification configs. Each configuration uses a filter to determine whether to publish a message (both Ingest
	// & Create) on the corresponding notification destination. Only the message name is sent as part of the notification.
	// Supplied by the client.
	NotificationConfigs HealthcareHl7V2StoreNotificationConfigArrayInput
	// A nested object resource.
	ParserConfig HealthcareHl7V2StoreParserConfigPtrInput
	// Determines whether duplicate messages are allowed.
	RejectDuplicateMessage pulumi.BoolPtrInput
	// The fully qualified name of this dataset
	SelfLink pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        HealthcareHl7V2StoreTimeoutsPtrInput
}

func (HealthcareHl7V2StoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareHl7V2StoreState)(nil)).Elem()
}

type healthcareHl7V2StoreArgs struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                string  `pulumi:"dataset"`
	HealthcareHl7V2StoreId *string `pulumi:"healthcareHl7V2StoreId"`
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name for the Hl7V2Store. ** Changing this property may recreate the Hl7v2 store (removing all data) **
	Name *string `pulumi:"name"`
	// A nested object resource.
	//
	// Deprecated: Deprecated
	NotificationConfig *HealthcareHl7V2StoreNotificationConfig `pulumi:"notificationConfig"`
	// A list of notification configs. Each configuration uses a filter to determine whether to publish a message (both Ingest
	// & Create) on the corresponding notification destination. Only the message name is sent as part of the notification.
	// Supplied by the client.
	NotificationConfigs []HealthcareHl7V2StoreNotificationConfig `pulumi:"notificationConfigs"`
	// A nested object resource.
	ParserConfig *HealthcareHl7V2StoreParserConfig `pulumi:"parserConfig"`
	// Determines whether duplicate messages are allowed.
	RejectDuplicateMessage *bool                         `pulumi:"rejectDuplicateMessage"`
	Timeouts               *HealthcareHl7V2StoreTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a HealthcareHl7V2Store resource.
type HealthcareHl7V2StoreArgs struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                pulumi.StringInput
	HealthcareHl7V2StoreId pulumi.StringPtrInput
	// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The resource name for the Hl7V2Store. ** Changing this property may recreate the Hl7v2 store (removing all data) **
	Name pulumi.StringPtrInput
	// A nested object resource.
	//
	// Deprecated: Deprecated
	NotificationConfig HealthcareHl7V2StoreNotificationConfigPtrInput
	// A list of notification configs. Each configuration uses a filter to determine whether to publish a message (both Ingest
	// & Create) on the corresponding notification destination. Only the message name is sent as part of the notification.
	// Supplied by the client.
	NotificationConfigs HealthcareHl7V2StoreNotificationConfigArrayInput
	// A nested object resource.
	ParserConfig HealthcareHl7V2StoreParserConfigPtrInput
	// Determines whether duplicate messages are allowed.
	RejectDuplicateMessage pulumi.BoolPtrInput
	Timeouts               HealthcareHl7V2StoreTimeoutsPtrInput
}

func (HealthcareHl7V2StoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareHl7V2StoreArgs)(nil)).Elem()
}

type HealthcareHl7V2StoreInput interface {
	pulumi.Input

	ToHealthcareHl7V2StoreOutput() HealthcareHl7V2StoreOutput
	ToHealthcareHl7V2StoreOutputWithContext(ctx context.Context) HealthcareHl7V2StoreOutput
}

func (*HealthcareHl7V2Store) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareHl7V2Store)(nil)).Elem()
}

func (i *HealthcareHl7V2Store) ToHealthcareHl7V2StoreOutput() HealthcareHl7V2StoreOutput {
	return i.ToHealthcareHl7V2StoreOutputWithContext(context.Background())
}

func (i *HealthcareHl7V2Store) ToHealthcareHl7V2StoreOutputWithContext(ctx context.Context) HealthcareHl7V2StoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcareHl7V2StoreOutput)
}

type HealthcareHl7V2StoreOutput struct{ *pulumi.OutputState }

func (HealthcareHl7V2StoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareHl7V2Store)(nil)).Elem()
}

func (o HealthcareHl7V2StoreOutput) ToHealthcareHl7V2StoreOutput() HealthcareHl7V2StoreOutput {
	return o
}

func (o HealthcareHl7V2StoreOutput) ToHealthcareHl7V2StoreOutputWithContext(ctx context.Context) HealthcareHl7V2StoreOutput {
	return o
}

// Identifies the dataset addressed by this request. Must be in the format
// 'projects/{project}/locations/{location}/datasets/{dataset}'
func (o HealthcareHl7V2StoreOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) pulumi.StringOutput { return v.Dataset }).(pulumi.StringOutput)
}

func (o HealthcareHl7V2StoreOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o HealthcareHl7V2StoreOutput) HealthcareHl7V2StoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) pulumi.StringOutput { return v.HealthcareHl7V2StoreId }).(pulumi.StringOutput)
}

// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a
// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o HealthcareHl7V2StoreOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name for the Hl7V2Store. ** Changing this property may recreate the Hl7v2 store (removing all data) **
func (o HealthcareHl7V2StoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A nested object resource.
//
// Deprecated: Deprecated
func (o HealthcareHl7V2StoreOutput) NotificationConfig() HealthcareHl7V2StoreNotificationConfigPtrOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) HealthcareHl7V2StoreNotificationConfigPtrOutput {
		return v.NotificationConfig
	}).(HealthcareHl7V2StoreNotificationConfigPtrOutput)
}

// A list of notification configs. Each configuration uses a filter to determine whether to publish a message (both Ingest
// & Create) on the corresponding notification destination. Only the message name is sent as part of the notification.
// Supplied by the client.
func (o HealthcareHl7V2StoreOutput) NotificationConfigs() HealthcareHl7V2StoreNotificationConfigArrayOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) HealthcareHl7V2StoreNotificationConfigArrayOutput {
		return v.NotificationConfigs
	}).(HealthcareHl7V2StoreNotificationConfigArrayOutput)
}

// A nested object resource.
func (o HealthcareHl7V2StoreOutput) ParserConfig() HealthcareHl7V2StoreParserConfigPtrOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) HealthcareHl7V2StoreParserConfigPtrOutput { return v.ParserConfig }).(HealthcareHl7V2StoreParserConfigPtrOutput)
}

// Determines whether duplicate messages are allowed.
func (o HealthcareHl7V2StoreOutput) RejectDuplicateMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) pulumi.BoolPtrOutput { return v.RejectDuplicateMessage }).(pulumi.BoolPtrOutput)
}

// The fully qualified name of this dataset
func (o HealthcareHl7V2StoreOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o HealthcareHl7V2StoreOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o HealthcareHl7V2StoreOutput) Timeouts() HealthcareHl7V2StoreTimeoutsPtrOutput {
	return o.ApplyT(func(v *HealthcareHl7V2Store) HealthcareHl7V2StoreTimeoutsPtrOutput { return v.Timeouts }).(HealthcareHl7V2StoreTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcareHl7V2StoreInput)(nil)).Elem(), &HealthcareHl7V2Store{})
	pulumi.RegisterOutputType(HealthcareHl7V2StoreOutput{})
}
