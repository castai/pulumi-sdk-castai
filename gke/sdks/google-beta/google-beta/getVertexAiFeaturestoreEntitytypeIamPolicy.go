// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVertexAiFeaturestoreEntitytypeIamPolicy(ctx *pulumi.Context, args *LookupVertexAiFeaturestoreEntitytypeIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupVertexAiFeaturestoreEntitytypeIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupVertexAiFeaturestoreEntitytypeIamPolicyResult
	err = ctx.InvokePackage("google-beta:index/getVertexAiFeaturestoreEntitytypeIamPolicy:getVertexAiFeaturestoreEntitytypeIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVertexAiFeaturestoreEntitytypeIamPolicy.
type LookupVertexAiFeaturestoreEntitytypeIamPolicyArgs struct {
	Entitytype   string  `pulumi:"entitytype"`
	Featurestore string  `pulumi:"featurestore"`
	Id           *string `pulumi:"id"`
}

// A collection of values returned by getVertexAiFeaturestoreEntitytypeIamPolicy.
type LookupVertexAiFeaturestoreEntitytypeIamPolicyResult struct {
	Entitytype   string `pulumi:"entitytype"`
	Etag         string `pulumi:"etag"`
	Featurestore string `pulumi:"featurestore"`
	Id           string `pulumi:"id"`
	PolicyData   string `pulumi:"policyData"`
}

func LookupVertexAiFeaturestoreEntitytypeIamPolicyOutput(ctx *pulumi.Context, args LookupVertexAiFeaturestoreEntitytypeIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput, error) {
			args := v.(LookupVertexAiFeaturestoreEntitytypeIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getVertexAiFeaturestoreEntitytypeIamPolicy:getVertexAiFeaturestoreEntitytypeIamPolicy", args, LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput{}, options).(LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput), nil
		}).(LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput)
}

// A collection of arguments for invoking getVertexAiFeaturestoreEntitytypeIamPolicy.
type LookupVertexAiFeaturestoreEntitytypeIamPolicyOutputArgs struct {
	Entitytype   pulumi.StringInput    `pulumi:"entitytype"`
	Featurestore pulumi.StringInput    `pulumi:"featurestore"`
	Id           pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupVertexAiFeaturestoreEntitytypeIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVertexAiFeaturestoreEntitytypeIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getVertexAiFeaturestoreEntitytypeIamPolicy.
type LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVertexAiFeaturestoreEntitytypeIamPolicyResult)(nil)).Elem()
}

func (o LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput) ToLookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput() LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput {
	return o
}

func (o LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput) ToLookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutputWithContext(ctx context.Context) LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput {
	return o
}

func (o LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput) Entitytype() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVertexAiFeaturestoreEntitytypeIamPolicyResult) string { return v.Entitytype }).(pulumi.StringOutput)
}

func (o LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVertexAiFeaturestoreEntitytypeIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput) Featurestore() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVertexAiFeaturestoreEntitytypeIamPolicyResult) string { return v.Featurestore }).(pulumi.StringOutput)
}

func (o LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVertexAiFeaturestoreEntitytypeIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVertexAiFeaturestoreEntitytypeIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVertexAiFeaturestoreEntitytypeIamPolicyResultOutput{})
}
