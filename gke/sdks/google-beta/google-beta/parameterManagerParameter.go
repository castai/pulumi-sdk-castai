// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ParameterManagerParameter struct {
	pulumi.CustomResourceState

	// The time at which the Parameter was created.
	CreateTime      pulumi.StringOutput    `pulumi:"createTime"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The format type of the parameter resource. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format pulumi.StringPtrOutput `pulumi:"format"`
	// The labels assigned to this Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name of the Parameter. Format: 'projects/{{project}}/locations/global/parameters/{{parameter_id}}'
	Name pulumi.StringOutput `pulumi:"name"`
	// This must be unique within the project.
	ParameterId                 pulumi.StringOutput `pulumi:"parameterId"`
	ParameterManagerParameterId pulumi.StringOutput `pulumi:"parameterManagerParameterId"`
	// Policy member strings of a Google Cloud resource.
	PolicyMembers ParameterManagerParameterPolicyMemberArrayOutput `pulumi:"policyMembers"`
	Project       pulumi.StringOutput                              `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                     `pulumi:"terraformLabels"`
	Timeouts        ParameterManagerParameterTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time at which the Parameter was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewParameterManagerParameter registers a new resource with the given unique name, arguments, and options.
func NewParameterManagerParameter(ctx *pulumi.Context,
	name string, args *ParameterManagerParameterArgs, opts ...pulumi.ResourceOption) (*ParameterManagerParameter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ParameterId == nil {
		return nil, errors.New("invalid value for required argument 'ParameterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ParameterManagerParameter
	err = ctx.RegisterPackageResource("google-beta:index/parameterManagerParameter:ParameterManagerParameter", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetParameterManagerParameter gets an existing ParameterManagerParameter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetParameterManagerParameter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ParameterManagerParameterState, opts ...pulumi.ResourceOption) (*ParameterManagerParameter, error) {
	var resource ParameterManagerParameter
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/parameterManagerParameter:ParameterManagerParameter", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ParameterManagerParameter resources.
type parameterManagerParameterState struct {
	// The time at which the Parameter was created.
	CreateTime      *string           `pulumi:"createTime"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The format type of the parameter resource. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format *string `pulumi:"format"`
	// The labels assigned to this Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name of the Parameter. Format: 'projects/{{project}}/locations/global/parameters/{{parameter_id}}'
	Name *string `pulumi:"name"`
	// This must be unique within the project.
	ParameterId                 *string `pulumi:"parameterId"`
	ParameterManagerParameterId *string `pulumi:"parameterManagerParameterId"`
	// Policy member strings of a Google Cloud resource.
	PolicyMembers []ParameterManagerParameterPolicyMember `pulumi:"policyMembers"`
	Project       *string                                 `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                  `pulumi:"terraformLabels"`
	Timeouts        *ParameterManagerParameterTimeouts `pulumi:"timeouts"`
	// The time at which the Parameter was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type ParameterManagerParameterState struct {
	// The time at which the Parameter was created.
	CreateTime      pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The format type of the parameter resource. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format pulumi.StringPtrInput
	// The labels assigned to this Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The resource name of the Parameter. Format: 'projects/{{project}}/locations/global/parameters/{{parameter_id}}'
	Name pulumi.StringPtrInput
	// This must be unique within the project.
	ParameterId                 pulumi.StringPtrInput
	ParameterManagerParameterId pulumi.StringPtrInput
	// Policy member strings of a Google Cloud resource.
	PolicyMembers ParameterManagerParameterPolicyMemberArrayInput
	Project       pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ParameterManagerParameterTimeoutsPtrInput
	// The time at which the Parameter was updated.
	UpdateTime pulumi.StringPtrInput
}

func (ParameterManagerParameterState) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterManagerParameterState)(nil)).Elem()
}

type parameterManagerParameterArgs struct {
	// The format type of the parameter resource. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format *string `pulumi:"format"`
	// The labels assigned to this Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// This must be unique within the project.
	ParameterId                 string                             `pulumi:"parameterId"`
	ParameterManagerParameterId *string                            `pulumi:"parameterManagerParameterId"`
	Project                     *string                            `pulumi:"project"`
	Timeouts                    *ParameterManagerParameterTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ParameterManagerParameter resource.
type ParameterManagerParameterArgs struct {
	// The format type of the parameter resource. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
	Format pulumi.StringPtrInput
	// The labels assigned to this Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// This must be unique within the project.
	ParameterId                 pulumi.StringInput
	ParameterManagerParameterId pulumi.StringPtrInput
	Project                     pulumi.StringPtrInput
	Timeouts                    ParameterManagerParameterTimeoutsPtrInput
}

func (ParameterManagerParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*parameterManagerParameterArgs)(nil)).Elem()
}

type ParameterManagerParameterInput interface {
	pulumi.Input

	ToParameterManagerParameterOutput() ParameterManagerParameterOutput
	ToParameterManagerParameterOutputWithContext(ctx context.Context) ParameterManagerParameterOutput
}

func (*ParameterManagerParameter) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterManagerParameter)(nil)).Elem()
}

func (i *ParameterManagerParameter) ToParameterManagerParameterOutput() ParameterManagerParameterOutput {
	return i.ToParameterManagerParameterOutputWithContext(context.Background())
}

func (i *ParameterManagerParameter) ToParameterManagerParameterOutputWithContext(ctx context.Context) ParameterManagerParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterManagerParameterOutput)
}

type ParameterManagerParameterOutput struct{ *pulumi.OutputState }

func (ParameterManagerParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ParameterManagerParameter)(nil)).Elem()
}

func (o ParameterManagerParameterOutput) ToParameterManagerParameterOutput() ParameterManagerParameterOutput {
	return o
}

func (o ParameterManagerParameterOutput) ToParameterManagerParameterOutputWithContext(ctx context.Context) ParameterManagerParameterOutput {
	return o
}

// The time at which the Parameter was created.
func (o ParameterManagerParameterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o ParameterManagerParameterOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The format type of the parameter resource. Default value: "UNFORMATTED" Possible values: ["UNFORMATTED", "YAML", "JSON"]
func (o ParameterManagerParameterOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringPtrOutput { return v.Format }).(pulumi.StringPtrOutput)
}

// The labels assigned to this Parameter. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
// refer to the field 'effective_labels' for all of the labels present on the resource.
func (o ParameterManagerParameterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name of the Parameter. Format: 'projects/{{project}}/locations/global/parameters/{{parameter_id}}'
func (o ParameterManagerParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// This must be unique within the project.
func (o ParameterManagerParameterOutput) ParameterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringOutput { return v.ParameterId }).(pulumi.StringOutput)
}

func (o ParameterManagerParameterOutput) ParameterManagerParameterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringOutput { return v.ParameterManagerParameterId }).(pulumi.StringOutput)
}

// Policy member strings of a Google Cloud resource.
func (o ParameterManagerParameterOutput) PolicyMembers() ParameterManagerParameterPolicyMemberArrayOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) ParameterManagerParameterPolicyMemberArrayOutput {
		return v.PolicyMembers
	}).(ParameterManagerParameterPolicyMemberArrayOutput)
}

func (o ParameterManagerParameterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ParameterManagerParameterOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ParameterManagerParameterOutput) Timeouts() ParameterManagerParameterTimeoutsPtrOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) ParameterManagerParameterTimeoutsPtrOutput { return v.Timeouts }).(ParameterManagerParameterTimeoutsPtrOutput)
}

// The time at which the Parameter was updated.
func (o ParameterManagerParameterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ParameterManagerParameter) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterManagerParameterInput)(nil)).Elem(), &ParameterManagerParameter{})
	pulumi.RegisterOutputType(ParameterManagerParameterOutput{})
}
