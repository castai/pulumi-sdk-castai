// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RuntimeconfigConfigIamMember struct {
	pulumi.CustomResourceState

	Condition                      RuntimeconfigConfigIamMemberConditionPtrOutput `pulumi:"condition"`
	Config                         pulumi.StringOutput                            `pulumi:"config"`
	Etag                           pulumi.StringOutput                            `pulumi:"etag"`
	Member                         pulumi.StringOutput                            `pulumi:"member"`
	Project                        pulumi.StringOutput                            `pulumi:"project"`
	Role                           pulumi.StringOutput                            `pulumi:"role"`
	RuntimeconfigConfigIamMemberId pulumi.StringOutput                            `pulumi:"runtimeconfigConfigIamMemberId"`
}

// NewRuntimeconfigConfigIamMember registers a new resource with the given unique name, arguments, and options.
func NewRuntimeconfigConfigIamMember(ctx *pulumi.Context,
	name string, args *RuntimeconfigConfigIamMemberArgs, opts ...pulumi.ResourceOption) (*RuntimeconfigConfigIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource RuntimeconfigConfigIamMember
	err = ctx.RegisterPackageResource("google-beta:index/runtimeconfigConfigIamMember:RuntimeconfigConfigIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRuntimeconfigConfigIamMember gets an existing RuntimeconfigConfigIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRuntimeconfigConfigIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RuntimeconfigConfigIamMemberState, opts ...pulumi.ResourceOption) (*RuntimeconfigConfigIamMember, error) {
	var resource RuntimeconfigConfigIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/runtimeconfigConfigIamMember:RuntimeconfigConfigIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RuntimeconfigConfigIamMember resources.
type runtimeconfigConfigIamMemberState struct {
	Condition                      *RuntimeconfigConfigIamMemberCondition `pulumi:"condition"`
	Config                         *string                                `pulumi:"config"`
	Etag                           *string                                `pulumi:"etag"`
	Member                         *string                                `pulumi:"member"`
	Project                        *string                                `pulumi:"project"`
	Role                           *string                                `pulumi:"role"`
	RuntimeconfigConfigIamMemberId *string                                `pulumi:"runtimeconfigConfigIamMemberId"`
}

type RuntimeconfigConfigIamMemberState struct {
	Condition                      RuntimeconfigConfigIamMemberConditionPtrInput
	Config                         pulumi.StringPtrInput
	Etag                           pulumi.StringPtrInput
	Member                         pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
	Role                           pulumi.StringPtrInput
	RuntimeconfigConfigIamMemberId pulumi.StringPtrInput
}

func (RuntimeconfigConfigIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*runtimeconfigConfigIamMemberState)(nil)).Elem()
}

type runtimeconfigConfigIamMemberArgs struct {
	Condition                      *RuntimeconfigConfigIamMemberCondition `pulumi:"condition"`
	Config                         string                                 `pulumi:"config"`
	Member                         string                                 `pulumi:"member"`
	Project                        *string                                `pulumi:"project"`
	Role                           string                                 `pulumi:"role"`
	RuntimeconfigConfigIamMemberId *string                                `pulumi:"runtimeconfigConfigIamMemberId"`
}

// The set of arguments for constructing a RuntimeconfigConfigIamMember resource.
type RuntimeconfigConfigIamMemberArgs struct {
	Condition                      RuntimeconfigConfigIamMemberConditionPtrInput
	Config                         pulumi.StringInput
	Member                         pulumi.StringInput
	Project                        pulumi.StringPtrInput
	Role                           pulumi.StringInput
	RuntimeconfigConfigIamMemberId pulumi.StringPtrInput
}

func (RuntimeconfigConfigIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*runtimeconfigConfigIamMemberArgs)(nil)).Elem()
}

type RuntimeconfigConfigIamMemberInput interface {
	pulumi.Input

	ToRuntimeconfigConfigIamMemberOutput() RuntimeconfigConfigIamMemberOutput
	ToRuntimeconfigConfigIamMemberOutputWithContext(ctx context.Context) RuntimeconfigConfigIamMemberOutput
}

func (*RuntimeconfigConfigIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimeconfigConfigIamMember)(nil)).Elem()
}

func (i *RuntimeconfigConfigIamMember) ToRuntimeconfigConfigIamMemberOutput() RuntimeconfigConfigIamMemberOutput {
	return i.ToRuntimeconfigConfigIamMemberOutputWithContext(context.Background())
}

func (i *RuntimeconfigConfigIamMember) ToRuntimeconfigConfigIamMemberOutputWithContext(ctx context.Context) RuntimeconfigConfigIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuntimeconfigConfigIamMemberOutput)
}

type RuntimeconfigConfigIamMemberOutput struct{ *pulumi.OutputState }

func (RuntimeconfigConfigIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuntimeconfigConfigIamMember)(nil)).Elem()
}

func (o RuntimeconfigConfigIamMemberOutput) ToRuntimeconfigConfigIamMemberOutput() RuntimeconfigConfigIamMemberOutput {
	return o
}

func (o RuntimeconfigConfigIamMemberOutput) ToRuntimeconfigConfigIamMemberOutputWithContext(ctx context.Context) RuntimeconfigConfigIamMemberOutput {
	return o
}

func (o RuntimeconfigConfigIamMemberOutput) Condition() RuntimeconfigConfigIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamMember) RuntimeconfigConfigIamMemberConditionPtrOutput {
		return v.Condition
	}).(RuntimeconfigConfigIamMemberConditionPtrOutput)
}

func (o RuntimeconfigConfigIamMemberOutput) Config() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamMember) pulumi.StringOutput { return v.Config }).(pulumi.StringOutput)
}

func (o RuntimeconfigConfigIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o RuntimeconfigConfigIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o RuntimeconfigConfigIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o RuntimeconfigConfigIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o RuntimeconfigConfigIamMemberOutput) RuntimeconfigConfigIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *RuntimeconfigConfigIamMember) pulumi.StringOutput { return v.RuntimeconfigConfigIamMemberId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RuntimeconfigConfigIamMemberInput)(nil)).Elem(), &RuntimeconfigConfigIamMember{})
	pulumi.RegisterOutputType(RuntimeconfigConfigIamMemberOutput{})
}
