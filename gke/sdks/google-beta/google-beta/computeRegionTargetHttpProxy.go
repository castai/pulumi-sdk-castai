// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionTargetHttpProxy struct {
	pulumi.CustomResourceState

	ComputeRegionTargetHttpProxyId pulumi.StringOutput `pulumi:"computeRegionTargetHttpProxyId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies how long to keep a connection open, after completing a response, while there is no matching traffic (in
	// seconds). If an HTTP keepalive is not specified, a default value (600 seconds) will be used. For Regional HTTP(S) load
	// balancer, the minimum allowed value is 5 seconds and the maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec pulumi.Float64PtrOutput `pulumi:"httpKeepAliveTimeoutSec"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The unique identifier for the resource.
	ProxyId pulumi.Float64Output `pulumi:"proxyId"`
	// The Region in which the created target https proxy should reside. If it is not provided, the provider region is used.
	Region   pulumi.StringOutput                           `pulumi:"region"`
	SelfLink pulumi.StringOutput                           `pulumi:"selfLink"`
	Timeouts ComputeRegionTargetHttpProxyTimeoutsPtrOutput `pulumi:"timeouts"`
	// A reference to the RegionUrlMap resource that defines the mapping from URL to the BackendService.
	UrlMap pulumi.StringOutput `pulumi:"urlMap"`
}

// NewComputeRegionTargetHttpProxy registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionTargetHttpProxy(ctx *pulumi.Context,
	name string, args *ComputeRegionTargetHttpProxyArgs, opts ...pulumi.ResourceOption) (*ComputeRegionTargetHttpProxy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UrlMap == nil {
		return nil, errors.New("invalid value for required argument 'UrlMap'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionTargetHttpProxy
	err = ctx.RegisterPackageResource("google-beta:index/computeRegionTargetHttpProxy:ComputeRegionTargetHttpProxy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionTargetHttpProxy gets an existing ComputeRegionTargetHttpProxy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionTargetHttpProxy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionTargetHttpProxyState, opts ...pulumi.ResourceOption) (*ComputeRegionTargetHttpProxy, error) {
	var resource ComputeRegionTargetHttpProxy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeRegionTargetHttpProxy:ComputeRegionTargetHttpProxy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionTargetHttpProxy resources.
type computeRegionTargetHttpProxyState struct {
	ComputeRegionTargetHttpProxyId *string `pulumi:"computeRegionTargetHttpProxyId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Specifies how long to keep a connection open, after completing a response, while there is no matching traffic (in
	// seconds). If an HTTP keepalive is not specified, a default value (600 seconds) will be used. For Regional HTTP(S) load
	// balancer, the minimum allowed value is 5 seconds and the maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec *float64 `pulumi:"httpKeepAliveTimeoutSec"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The unique identifier for the resource.
	ProxyId *float64 `pulumi:"proxyId"`
	// The Region in which the created target https proxy should reside. If it is not provided, the provider region is used.
	Region   *string                               `pulumi:"region"`
	SelfLink *string                               `pulumi:"selfLink"`
	Timeouts *ComputeRegionTargetHttpProxyTimeouts `pulumi:"timeouts"`
	// A reference to the RegionUrlMap resource that defines the mapping from URL to the BackendService.
	UrlMap *string `pulumi:"urlMap"`
}

type ComputeRegionTargetHttpProxyState struct {
	ComputeRegionTargetHttpProxyId pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Specifies how long to keep a connection open, after completing a response, while there is no matching traffic (in
	// seconds). If an HTTP keepalive is not specified, a default value (600 seconds) will be used. For Regional HTTP(S) load
	// balancer, the minimum allowed value is 5 seconds and the maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec pulumi.Float64PtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The unique identifier for the resource.
	ProxyId pulumi.Float64PtrInput
	// The Region in which the created target https proxy should reside. If it is not provided, the provider region is used.
	Region   pulumi.StringPtrInput
	SelfLink pulumi.StringPtrInput
	Timeouts ComputeRegionTargetHttpProxyTimeoutsPtrInput
	// A reference to the RegionUrlMap resource that defines the mapping from URL to the BackendService.
	UrlMap pulumi.StringPtrInput
}

func (ComputeRegionTargetHttpProxyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionTargetHttpProxyState)(nil)).Elem()
}

type computeRegionTargetHttpProxyArgs struct {
	ComputeRegionTargetHttpProxyId *string `pulumi:"computeRegionTargetHttpProxyId"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Specifies how long to keep a connection open, after completing a response, while there is no matching traffic (in
	// seconds). If an HTTP keepalive is not specified, a default value (600 seconds) will be used. For Regional HTTP(S) load
	// balancer, the minimum allowed value is 5 seconds and the maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec *float64 `pulumi:"httpKeepAliveTimeoutSec"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The Region in which the created target https proxy should reside. If it is not provided, the provider region is used.
	Region   *string                               `pulumi:"region"`
	Timeouts *ComputeRegionTargetHttpProxyTimeouts `pulumi:"timeouts"`
	// A reference to the RegionUrlMap resource that defines the mapping from URL to the BackendService.
	UrlMap string `pulumi:"urlMap"`
}

// The set of arguments for constructing a ComputeRegionTargetHttpProxy resource.
type ComputeRegionTargetHttpProxyArgs struct {
	ComputeRegionTargetHttpProxyId pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Specifies how long to keep a connection open, after completing a response, while there is no matching traffic (in
	// seconds). If an HTTP keepalive is not specified, a default value (600 seconds) will be used. For Regional HTTP(S) load
	// balancer, the minimum allowed value is 5 seconds and the maximum allowed value is 600 seconds.
	HttpKeepAliveTimeoutSec pulumi.Float64PtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The Region in which the created target https proxy should reside. If it is not provided, the provider region is used.
	Region   pulumi.StringPtrInput
	Timeouts ComputeRegionTargetHttpProxyTimeoutsPtrInput
	// A reference to the RegionUrlMap resource that defines the mapping from URL to the BackendService.
	UrlMap pulumi.StringInput
}

func (ComputeRegionTargetHttpProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionTargetHttpProxyArgs)(nil)).Elem()
}

type ComputeRegionTargetHttpProxyInput interface {
	pulumi.Input

	ToComputeRegionTargetHttpProxyOutput() ComputeRegionTargetHttpProxyOutput
	ToComputeRegionTargetHttpProxyOutputWithContext(ctx context.Context) ComputeRegionTargetHttpProxyOutput
}

func (*ComputeRegionTargetHttpProxy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionTargetHttpProxy)(nil)).Elem()
}

func (i *ComputeRegionTargetHttpProxy) ToComputeRegionTargetHttpProxyOutput() ComputeRegionTargetHttpProxyOutput {
	return i.ToComputeRegionTargetHttpProxyOutputWithContext(context.Background())
}

func (i *ComputeRegionTargetHttpProxy) ToComputeRegionTargetHttpProxyOutputWithContext(ctx context.Context) ComputeRegionTargetHttpProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionTargetHttpProxyOutput)
}

type ComputeRegionTargetHttpProxyOutput struct{ *pulumi.OutputState }

func (ComputeRegionTargetHttpProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionTargetHttpProxy)(nil)).Elem()
}

func (o ComputeRegionTargetHttpProxyOutput) ToComputeRegionTargetHttpProxyOutput() ComputeRegionTargetHttpProxyOutput {
	return o
}

func (o ComputeRegionTargetHttpProxyOutput) ToComputeRegionTargetHttpProxyOutputWithContext(ctx context.Context) ComputeRegionTargetHttpProxyOutput {
	return o
}

func (o ComputeRegionTargetHttpProxyOutput) ComputeRegionTargetHttpProxyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.StringOutput { return v.ComputeRegionTargetHttpProxyId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeRegionTargetHttpProxyOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource.
func (o ComputeRegionTargetHttpProxyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies how long to keep a connection open, after completing a response, while there is no matching traffic (in
// seconds). If an HTTP keepalive is not specified, a default value (600 seconds) will be used. For Regional HTTP(S) load
// balancer, the minimum allowed value is 5 seconds and the maximum allowed value is 600 seconds.
func (o ComputeRegionTargetHttpProxyOutput) HttpKeepAliveTimeoutSec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.Float64PtrOutput { return v.HttpKeepAliveTimeoutSec }).(pulumi.Float64PtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeRegionTargetHttpProxyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeRegionTargetHttpProxyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The unique identifier for the resource.
func (o ComputeRegionTargetHttpProxyOutput) ProxyId() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.Float64Output { return v.ProxyId }).(pulumi.Float64Output)
}

// The Region in which the created target https proxy should reside. If it is not provided, the provider region is used.
func (o ComputeRegionTargetHttpProxyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComputeRegionTargetHttpProxyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

func (o ComputeRegionTargetHttpProxyOutput) Timeouts() ComputeRegionTargetHttpProxyTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) ComputeRegionTargetHttpProxyTimeoutsPtrOutput { return v.Timeouts }).(ComputeRegionTargetHttpProxyTimeoutsPtrOutput)
}

// A reference to the RegionUrlMap resource that defines the mapping from URL to the BackendService.
func (o ComputeRegionTargetHttpProxyOutput) UrlMap() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionTargetHttpProxy) pulumi.StringOutput { return v.UrlMap }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionTargetHttpProxyInput)(nil)).Elem(), &ComputeRegionTargetHttpProxy{})
	pulumi.RegisterOutputType(ComputeRegionTargetHttpProxyOutput{})
}
