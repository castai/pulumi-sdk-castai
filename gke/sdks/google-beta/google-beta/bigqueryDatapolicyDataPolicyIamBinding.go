// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryDatapolicyDataPolicyIamBinding struct {
	pulumi.CustomResourceState

	BigqueryDatapolicyDataPolicyIamBindingId pulumi.StringOutput                                      `pulumi:"bigqueryDatapolicyDataPolicyIamBindingId"`
	Condition                                BigqueryDatapolicyDataPolicyIamBindingConditionPtrOutput `pulumi:"condition"`
	DataPolicyId                             pulumi.StringOutput                                      `pulumi:"dataPolicyId"`
	Etag                                     pulumi.StringOutput                                      `pulumi:"etag"`
	Location                                 pulumi.StringOutput                                      `pulumi:"location"`
	Members                                  pulumi.StringArrayOutput                                 `pulumi:"members"`
	Project                                  pulumi.StringOutput                                      `pulumi:"project"`
	Role                                     pulumi.StringOutput                                      `pulumi:"role"`
}

// NewBigqueryDatapolicyDataPolicyIamBinding registers a new resource with the given unique name, arguments, and options.
func NewBigqueryDatapolicyDataPolicyIamBinding(ctx *pulumi.Context,
	name string, args *BigqueryDatapolicyDataPolicyIamBindingArgs, opts ...pulumi.ResourceOption) (*BigqueryDatapolicyDataPolicyIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'DataPolicyId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryDatapolicyDataPolicyIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/bigqueryDatapolicyDataPolicyIamBinding:BigqueryDatapolicyDataPolicyIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryDatapolicyDataPolicyIamBinding gets an existing BigqueryDatapolicyDataPolicyIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryDatapolicyDataPolicyIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryDatapolicyDataPolicyIamBindingState, opts ...pulumi.ResourceOption) (*BigqueryDatapolicyDataPolicyIamBinding, error) {
	var resource BigqueryDatapolicyDataPolicyIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/bigqueryDatapolicyDataPolicyIamBinding:BigqueryDatapolicyDataPolicyIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryDatapolicyDataPolicyIamBinding resources.
type bigqueryDatapolicyDataPolicyIamBindingState struct {
	BigqueryDatapolicyDataPolicyIamBindingId *string                                          `pulumi:"bigqueryDatapolicyDataPolicyIamBindingId"`
	Condition                                *BigqueryDatapolicyDataPolicyIamBindingCondition `pulumi:"condition"`
	DataPolicyId                             *string                                          `pulumi:"dataPolicyId"`
	Etag                                     *string                                          `pulumi:"etag"`
	Location                                 *string                                          `pulumi:"location"`
	Members                                  []string                                         `pulumi:"members"`
	Project                                  *string                                          `pulumi:"project"`
	Role                                     *string                                          `pulumi:"role"`
}

type BigqueryDatapolicyDataPolicyIamBindingState struct {
	BigqueryDatapolicyDataPolicyIamBindingId pulumi.StringPtrInput
	Condition                                BigqueryDatapolicyDataPolicyIamBindingConditionPtrInput
	DataPolicyId                             pulumi.StringPtrInput
	Etag                                     pulumi.StringPtrInput
	Location                                 pulumi.StringPtrInput
	Members                                  pulumi.StringArrayInput
	Project                                  pulumi.StringPtrInput
	Role                                     pulumi.StringPtrInput
}

func (BigqueryDatapolicyDataPolicyIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryDatapolicyDataPolicyIamBindingState)(nil)).Elem()
}

type bigqueryDatapolicyDataPolicyIamBindingArgs struct {
	BigqueryDatapolicyDataPolicyIamBindingId *string                                          `pulumi:"bigqueryDatapolicyDataPolicyIamBindingId"`
	Condition                                *BigqueryDatapolicyDataPolicyIamBindingCondition `pulumi:"condition"`
	DataPolicyId                             string                                           `pulumi:"dataPolicyId"`
	Location                                 *string                                          `pulumi:"location"`
	Members                                  []string                                         `pulumi:"members"`
	Project                                  *string                                          `pulumi:"project"`
	Role                                     string                                           `pulumi:"role"`
}

// The set of arguments for constructing a BigqueryDatapolicyDataPolicyIamBinding resource.
type BigqueryDatapolicyDataPolicyIamBindingArgs struct {
	BigqueryDatapolicyDataPolicyIamBindingId pulumi.StringPtrInput
	Condition                                BigqueryDatapolicyDataPolicyIamBindingConditionPtrInput
	DataPolicyId                             pulumi.StringInput
	Location                                 pulumi.StringPtrInput
	Members                                  pulumi.StringArrayInput
	Project                                  pulumi.StringPtrInput
	Role                                     pulumi.StringInput
}

func (BigqueryDatapolicyDataPolicyIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryDatapolicyDataPolicyIamBindingArgs)(nil)).Elem()
}

type BigqueryDatapolicyDataPolicyIamBindingInput interface {
	pulumi.Input

	ToBigqueryDatapolicyDataPolicyIamBindingOutput() BigqueryDatapolicyDataPolicyIamBindingOutput
	ToBigqueryDatapolicyDataPolicyIamBindingOutputWithContext(ctx context.Context) BigqueryDatapolicyDataPolicyIamBindingOutput
}

func (*BigqueryDatapolicyDataPolicyIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryDatapolicyDataPolicyIamBinding)(nil)).Elem()
}

func (i *BigqueryDatapolicyDataPolicyIamBinding) ToBigqueryDatapolicyDataPolicyIamBindingOutput() BigqueryDatapolicyDataPolicyIamBindingOutput {
	return i.ToBigqueryDatapolicyDataPolicyIamBindingOutputWithContext(context.Background())
}

func (i *BigqueryDatapolicyDataPolicyIamBinding) ToBigqueryDatapolicyDataPolicyIamBindingOutputWithContext(ctx context.Context) BigqueryDatapolicyDataPolicyIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryDatapolicyDataPolicyIamBindingOutput)
}

type BigqueryDatapolicyDataPolicyIamBindingOutput struct{ *pulumi.OutputState }

func (BigqueryDatapolicyDataPolicyIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryDatapolicyDataPolicyIamBinding)(nil)).Elem()
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) ToBigqueryDatapolicyDataPolicyIamBindingOutput() BigqueryDatapolicyDataPolicyIamBindingOutput {
	return o
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) ToBigqueryDatapolicyDataPolicyIamBindingOutputWithContext(ctx context.Context) BigqueryDatapolicyDataPolicyIamBindingOutput {
	return o
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) BigqueryDatapolicyDataPolicyIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicyIamBinding) pulumi.StringOutput {
		return v.BigqueryDatapolicyDataPolicyIamBindingId
	}).(pulumi.StringOutput)
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) Condition() BigqueryDatapolicyDataPolicyIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicyIamBinding) BigqueryDatapolicyDataPolicyIamBindingConditionPtrOutput {
		return v.Condition
	}).(BigqueryDatapolicyDataPolicyIamBindingConditionPtrOutput)
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) DataPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicyIamBinding) pulumi.StringOutput { return v.DataPolicyId }).(pulumi.StringOutput)
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicyIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicyIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicyIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicyIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigqueryDatapolicyDataPolicyIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicyIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryDatapolicyDataPolicyIamBindingInput)(nil)).Elem(), &BigqueryDatapolicyDataPolicyIamBinding{})
	pulumi.RegisterOutputType(BigqueryDatapolicyDataPolicyIamBindingOutput{})
}
