// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkstationsWorkstationConfig struct {
	pulumi.CustomResourceState

	// A list of port ranges specifying single ports or ranges of ports that are externally accessible in the workstation.
	// Allowed ports must be one of 22, 80, or within range 1024-65535. If not specified defaults to ports 22, 80, and ports
	// 1024-65535.
	AllowedPorts WorkstationsWorkstationConfigAllowedPortArrayOutput `pulumi:"allowedPorts"`
	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Status conditions describing the current resource state.
	Conditions WorkstationsWorkstationConfigConditionArrayOutput `pulumi:"conditions"`
	// Container that will be run for each workstation using this configuration when that workstation is started.
	Container WorkstationsWorkstationConfigContainerPtrOutput `pulumi:"container"`
	// Time when this resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
	// Details can be found in the conditions field.
	Degraded pulumi.BoolOutput `pulumi:"degraded"`
	// Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a
	// websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require
	// plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
	DisableTcpConnections pulumi.BoolPtrOutput `pulumi:"disableTcpConnections"`
	// Human-readable name for this resource.
	DisplayName          pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Whether to enable Linux 'auditd' logging on the workstation. When enabled, a service account must also be specified that
	// has 'logging.buckets.write' permission on the project. Operating system audit logging is distinct from Cloud Audit Logs.
	EnableAuditAgent pulumi.BoolPtrOutput `pulumi:"enableAuditAgent"`
	// Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot
	// disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is
	// not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
	// If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to
	// recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the
	// persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the
	// workstation session will automatically be stopped within 7 hours.
	EncryptionKey WorkstationsWorkstationConfigEncryptionKeyPtrOutput `pulumi:"encryptionKey"`
	// Ephemeral directories which won't persist across workstation sessions.
	EphemeralDirectories WorkstationsWorkstationConfigEphemeralDirectoryArrayOutput `pulumi:"ephemeralDirectories"`
	// Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date
	// value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Runtime host for a workstation.
	Host WorkstationsWorkstationConfigHostPtrOutput `pulumi:"host"`
	// How long to wait before automatically stopping an instance that hasn't recently received any user traffic. A value of 0
	// indicates that this instance should never time out from idleness. Defaults to 20 minutes. A duration in seconds with up
	// to nine fractional digits, ending with 's'. Example: "3.5s".
	IdleTimeout pulumi.StringPtrOutput `pulumi:"idleTimeout"`
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location where the workstation cluster config should reside.
	Location pulumi.StringOutput `pulumi:"location"`
	// Maximum number of workstations under this configuration a user can have workstations.workstation.use permission on. Only
	// enforced on CreateWorkstation API calls on the user issuing the API request.
	MaxUsableWorkstations pulumi.Float64Output `pulumi:"maxUsableWorkstations"`
	// Full name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// Directories to persist across workstation sessions.
	PersistentDirectories WorkstationsWorkstationConfigPersistentDirectoryArrayOutput `pulumi:"persistentDirectories"`
	Project               pulumi.StringOutput                                         `pulumi:"project"`
	// Readiness checks to be performed on a workstation.
	ReadinessChecks WorkstationsWorkstationConfigReadinessCheckArrayOutput `pulumi:"readinessChecks"`
	// Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the
	// workstation cluster's region must be specifiedâ€”for example, '['us-central1-a', 'us-central1-f']'. If this field is
	// empty, two default zones within the region are used. Immutable after the workstation configuration is created.
	ReplicaZones pulumi.StringArrayOutput `pulumi:"replicaZones"`
	// How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that
	// workstations using this configuration should never time out from running duration. Must be greater than 0 and less than
	// 24 hours if 'encryption_key' is set. Defaults to 12 hours. A duration in seconds with up to nine fractional digits,
	// ending with 's'. Example: "3.5s".
	RunningTimeout pulumi.StringPtrOutput `pulumi:"runningTimeout"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                         `pulumi:"terraformLabels"`
	Timeouts        WorkstationsWorkstationConfigTimeoutsPtrOutput `pulumi:"timeouts"`
	// The system-generated UID of the resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The ID of the parent workstation cluster.
	WorkstationClusterId pulumi.StringOutput `pulumi:"workstationClusterId"`
	// The ID to be assigned to the workstation cluster config.
	WorkstationConfigId             pulumi.StringOutput `pulumi:"workstationConfigId"`
	WorkstationsWorkstationConfigId pulumi.StringOutput `pulumi:"workstationsWorkstationConfigId"`
}

// NewWorkstationsWorkstationConfig registers a new resource with the given unique name, arguments, and options.
func NewWorkstationsWorkstationConfig(ctx *pulumi.Context,
	name string, args *WorkstationsWorkstationConfigArgs, opts ...pulumi.ResourceOption) (*WorkstationsWorkstationConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.WorkstationClusterId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationClusterId'")
	}
	if args.WorkstationConfigId == nil {
		return nil, errors.New("invalid value for required argument 'WorkstationConfigId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource WorkstationsWorkstationConfig
	err = ctx.RegisterPackageResource("google-beta:index/workstationsWorkstationConfig:WorkstationsWorkstationConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkstationsWorkstationConfig gets an existing WorkstationsWorkstationConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkstationsWorkstationConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkstationsWorkstationConfigState, opts ...pulumi.ResourceOption) (*WorkstationsWorkstationConfig, error) {
	var resource WorkstationsWorkstationConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/workstationsWorkstationConfig:WorkstationsWorkstationConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkstationsWorkstationConfig resources.
type workstationsWorkstationConfigState struct {
	// A list of port ranges specifying single ports or ranges of ports that are externally accessible in the workstation.
	// Allowed ports must be one of 22, 80, or within range 1024-65535. If not specified defaults to ports 22, 80, and ports
	// 1024-65535.
	AllowedPorts []WorkstationsWorkstationConfigAllowedPort `pulumi:"allowedPorts"`
	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Status conditions describing the current resource state.
	Conditions []WorkstationsWorkstationConfigCondition `pulumi:"conditions"`
	// Container that will be run for each workstation using this configuration when that workstation is started.
	Container *WorkstationsWorkstationConfigContainer `pulumi:"container"`
	// Time when this resource was created.
	CreateTime *string `pulumi:"createTime"`
	// Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
	// Details can be found in the conditions field.
	Degraded *bool `pulumi:"degraded"`
	// Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a
	// websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require
	// plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
	DisableTcpConnections *bool `pulumi:"disableTcpConnections"`
	// Human-readable name for this resource.
	DisplayName          *string           `pulumi:"displayName"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// Whether to enable Linux 'auditd' logging on the workstation. When enabled, a service account must also be specified that
	// has 'logging.buckets.write' permission on the project. Operating system audit logging is distinct from Cloud Audit Logs.
	EnableAuditAgent *bool `pulumi:"enableAuditAgent"`
	// Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot
	// disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is
	// not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
	// If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to
	// recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the
	// persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the
	// workstation session will automatically be stopped within 7 hours.
	EncryptionKey *WorkstationsWorkstationConfigEncryptionKey `pulumi:"encryptionKey"`
	// Ephemeral directories which won't persist across workstation sessions.
	EphemeralDirectories []WorkstationsWorkstationConfigEphemeralDirectory `pulumi:"ephemeralDirectories"`
	// Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date
	// value before proceeding.
	Etag *string `pulumi:"etag"`
	// Runtime host for a workstation.
	Host *WorkstationsWorkstationConfigHost `pulumi:"host"`
	// How long to wait before automatically stopping an instance that hasn't recently received any user traffic. A value of 0
	// indicates that this instance should never time out from idleness. Defaults to 20 minutes. A duration in seconds with up
	// to nine fractional digits, ending with 's'. Example: "3.5s".
	IdleTimeout *string `pulumi:"idleTimeout"`
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the workstation cluster config should reside.
	Location *string `pulumi:"location"`
	// Maximum number of workstations under this configuration a user can have workstations.workstation.use permission on. Only
	// enforced on CreateWorkstation API calls on the user issuing the API request.
	MaxUsableWorkstations *float64 `pulumi:"maxUsableWorkstations"`
	// Full name of this resource.
	Name *string `pulumi:"name"`
	// Directories to persist across workstation sessions.
	PersistentDirectories []WorkstationsWorkstationConfigPersistentDirectory `pulumi:"persistentDirectories"`
	Project               *string                                            `pulumi:"project"`
	// Readiness checks to be performed on a workstation.
	ReadinessChecks []WorkstationsWorkstationConfigReadinessCheck `pulumi:"readinessChecks"`
	// Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the
	// workstation cluster's region must be specifiedâ€”for example, '['us-central1-a', 'us-central1-f']'. If this field is
	// empty, two default zones within the region are used. Immutable after the workstation configuration is created.
	ReplicaZones []string `pulumi:"replicaZones"`
	// How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that
	// workstations using this configuration should never time out from running duration. Must be greater than 0 and less than
	// 24 hours if 'encryption_key' is set. Defaults to 12 hours. A duration in seconds with up to nine fractional digits,
	// ending with 's'. Example: "3.5s".
	RunningTimeout *string `pulumi:"runningTimeout"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                      `pulumi:"terraformLabels"`
	Timeouts        *WorkstationsWorkstationConfigTimeouts `pulumi:"timeouts"`
	// The system-generated UID of the resource.
	Uid *string `pulumi:"uid"`
	// The ID of the parent workstation cluster.
	WorkstationClusterId *string `pulumi:"workstationClusterId"`
	// The ID to be assigned to the workstation cluster config.
	WorkstationConfigId             *string `pulumi:"workstationConfigId"`
	WorkstationsWorkstationConfigId *string `pulumi:"workstationsWorkstationConfigId"`
}

type WorkstationsWorkstationConfigState struct {
	// A list of port ranges specifying single ports or ranges of ports that are externally accessible in the workstation.
	// Allowed ports must be one of 22, 80, or within range 1024-65535. If not specified defaults to ports 22, 80, and ports
	// 1024-65535.
	AllowedPorts WorkstationsWorkstationConfigAllowedPortArrayInput
	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Status conditions describing the current resource state.
	Conditions WorkstationsWorkstationConfigConditionArrayInput
	// Container that will be run for each workstation using this configuration when that workstation is started.
	Container WorkstationsWorkstationConfigContainerPtrInput
	// Time when this resource was created.
	CreateTime pulumi.StringPtrInput
	// Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
	// Details can be found in the conditions field.
	Degraded pulumi.BoolPtrInput
	// Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a
	// websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require
	// plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
	DisableTcpConnections pulumi.BoolPtrInput
	// Human-readable name for this resource.
	DisplayName          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// Whether to enable Linux 'auditd' logging on the workstation. When enabled, a service account must also be specified that
	// has 'logging.buckets.write' permission on the project. Operating system audit logging is distinct from Cloud Audit Logs.
	EnableAuditAgent pulumi.BoolPtrInput
	// Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot
	// disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is
	// not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
	// If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to
	// recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the
	// persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the
	// workstation session will automatically be stopped within 7 hours.
	EncryptionKey WorkstationsWorkstationConfigEncryptionKeyPtrInput
	// Ephemeral directories which won't persist across workstation sessions.
	EphemeralDirectories WorkstationsWorkstationConfigEphemeralDirectoryArrayInput
	// Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date
	// value before proceeding.
	Etag pulumi.StringPtrInput
	// Runtime host for a workstation.
	Host WorkstationsWorkstationConfigHostPtrInput
	// How long to wait before automatically stopping an instance that hasn't recently received any user traffic. A value of 0
	// indicates that this instance should never time out from idleness. Defaults to 20 minutes. A duration in seconds with up
	// to nine fractional digits, ending with 's'. Example: "3.5s".
	IdleTimeout pulumi.StringPtrInput
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location where the workstation cluster config should reside.
	Location pulumi.StringPtrInput
	// Maximum number of workstations under this configuration a user can have workstations.workstation.use permission on. Only
	// enforced on CreateWorkstation API calls on the user issuing the API request.
	MaxUsableWorkstations pulumi.Float64PtrInput
	// Full name of this resource.
	Name pulumi.StringPtrInput
	// Directories to persist across workstation sessions.
	PersistentDirectories WorkstationsWorkstationConfigPersistentDirectoryArrayInput
	Project               pulumi.StringPtrInput
	// Readiness checks to be performed on a workstation.
	ReadinessChecks WorkstationsWorkstationConfigReadinessCheckArrayInput
	// Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the
	// workstation cluster's region must be specifiedâ€”for example, '['us-central1-a', 'us-central1-f']'. If this field is
	// empty, two default zones within the region are used. Immutable after the workstation configuration is created.
	ReplicaZones pulumi.StringArrayInput
	// How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that
	// workstations using this configuration should never time out from running duration. Must be greater than 0 and less than
	// 24 hours if 'encryption_key' is set. Defaults to 12 hours. A duration in seconds with up to nine fractional digits,
	// ending with 's'. Example: "3.5s".
	RunningTimeout pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        WorkstationsWorkstationConfigTimeoutsPtrInput
	// The system-generated UID of the resource.
	Uid pulumi.StringPtrInput
	// The ID of the parent workstation cluster.
	WorkstationClusterId pulumi.StringPtrInput
	// The ID to be assigned to the workstation cluster config.
	WorkstationConfigId             pulumi.StringPtrInput
	WorkstationsWorkstationConfigId pulumi.StringPtrInput
}

func (WorkstationsWorkstationConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*workstationsWorkstationConfigState)(nil)).Elem()
}

type workstationsWorkstationConfigArgs struct {
	// A list of port ranges specifying single ports or ranges of ports that are externally accessible in the workstation.
	// Allowed ports must be one of 22, 80, or within range 1024-65535. If not specified defaults to ports 22, 80, and ports
	// 1024-65535.
	AllowedPorts []WorkstationsWorkstationConfigAllowedPort `pulumi:"allowedPorts"`
	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Container that will be run for each workstation using this configuration when that workstation is started.
	Container *WorkstationsWorkstationConfigContainer `pulumi:"container"`
	// Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a
	// websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require
	// plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
	DisableTcpConnections *bool `pulumi:"disableTcpConnections"`
	// Human-readable name for this resource.
	DisplayName *string `pulumi:"displayName"`
	// Whether to enable Linux 'auditd' logging on the workstation. When enabled, a service account must also be specified that
	// has 'logging.buckets.write' permission on the project. Operating system audit logging is distinct from Cloud Audit Logs.
	EnableAuditAgent *bool `pulumi:"enableAuditAgent"`
	// Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot
	// disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is
	// not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
	// If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to
	// recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the
	// persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the
	// workstation session will automatically be stopped within 7 hours.
	EncryptionKey *WorkstationsWorkstationConfigEncryptionKey `pulumi:"encryptionKey"`
	// Ephemeral directories which won't persist across workstation sessions.
	EphemeralDirectories []WorkstationsWorkstationConfigEphemeralDirectory `pulumi:"ephemeralDirectories"`
	// Runtime host for a workstation.
	Host *WorkstationsWorkstationConfigHost `pulumi:"host"`
	// How long to wait before automatically stopping an instance that hasn't recently received any user traffic. A value of 0
	// indicates that this instance should never time out from idleness. Defaults to 20 minutes. A duration in seconds with up
	// to nine fractional digits, ending with 's'. Example: "3.5s".
	IdleTimeout *string `pulumi:"idleTimeout"`
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where the workstation cluster config should reside.
	Location string `pulumi:"location"`
	// Maximum number of workstations under this configuration a user can have workstations.workstation.use permission on. Only
	// enforced on CreateWorkstation API calls on the user issuing the API request.
	MaxUsableWorkstations *float64 `pulumi:"maxUsableWorkstations"`
	// Directories to persist across workstation sessions.
	PersistentDirectories []WorkstationsWorkstationConfigPersistentDirectory `pulumi:"persistentDirectories"`
	Project               *string                                            `pulumi:"project"`
	// Readiness checks to be performed on a workstation.
	ReadinessChecks []WorkstationsWorkstationConfigReadinessCheck `pulumi:"readinessChecks"`
	// Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the
	// workstation cluster's region must be specifiedâ€”for example, '['us-central1-a', 'us-central1-f']'. If this field is
	// empty, two default zones within the region are used. Immutable after the workstation configuration is created.
	ReplicaZones []string `pulumi:"replicaZones"`
	// How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that
	// workstations using this configuration should never time out from running duration. Must be greater than 0 and less than
	// 24 hours if 'encryption_key' is set. Defaults to 12 hours. A duration in seconds with up to nine fractional digits,
	// ending with 's'. Example: "3.5s".
	RunningTimeout *string                                `pulumi:"runningTimeout"`
	Timeouts       *WorkstationsWorkstationConfigTimeouts `pulumi:"timeouts"`
	// The ID of the parent workstation cluster.
	WorkstationClusterId string `pulumi:"workstationClusterId"`
	// The ID to be assigned to the workstation cluster config.
	WorkstationConfigId             string  `pulumi:"workstationConfigId"`
	WorkstationsWorkstationConfigId *string `pulumi:"workstationsWorkstationConfigId"`
}

// The set of arguments for constructing a WorkstationsWorkstationConfig resource.
type WorkstationsWorkstationConfigArgs struct {
	// A list of port ranges specifying single ports or ranges of ports that are externally accessible in the workstation.
	// Allowed ports must be one of 22, 80, or within range 1024-65535. If not specified defaults to ports 22, 80, and ports
	// 1024-65535.
	AllowedPorts WorkstationsWorkstationConfigAllowedPortArrayInput
	// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
	// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Container that will be run for each workstation using this configuration when that workstation is started.
	Container WorkstationsWorkstationConfigContainerPtrInput
	// Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a
	// websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require
	// plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
	DisableTcpConnections pulumi.BoolPtrInput
	// Human-readable name for this resource.
	DisplayName pulumi.StringPtrInput
	// Whether to enable Linux 'auditd' logging on the workstation. When enabled, a service account must also be specified that
	// has 'logging.buckets.write' permission on the project. Operating system audit logging is distinct from Cloud Audit Logs.
	EnableAuditAgent pulumi.BoolPtrInput
	// Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot
	// disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is
	// not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
	// If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to
	// recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the
	// persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the
	// workstation session will automatically be stopped within 7 hours.
	EncryptionKey WorkstationsWorkstationConfigEncryptionKeyPtrInput
	// Ephemeral directories which won't persist across workstation sessions.
	EphemeralDirectories WorkstationsWorkstationConfigEphemeralDirectoryArrayInput
	// Runtime host for a workstation.
	Host WorkstationsWorkstationConfigHostPtrInput
	// How long to wait before automatically stopping an instance that hasn't recently received any user traffic. A value of 0
	// indicates that this instance should never time out from idleness. Defaults to 20 minutes. A duration in seconds with up
	// to nine fractional digits, ending with 's'. Example: "3.5s".
	IdleTimeout pulumi.StringPtrInput
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
	// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
	// Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location where the workstation cluster config should reside.
	Location pulumi.StringInput
	// Maximum number of workstations under this configuration a user can have workstations.workstation.use permission on. Only
	// enforced on CreateWorkstation API calls on the user issuing the API request.
	MaxUsableWorkstations pulumi.Float64PtrInput
	// Directories to persist across workstation sessions.
	PersistentDirectories WorkstationsWorkstationConfigPersistentDirectoryArrayInput
	Project               pulumi.StringPtrInput
	// Readiness checks to be performed on a workstation.
	ReadinessChecks WorkstationsWorkstationConfigReadinessCheckArrayInput
	// Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the
	// workstation cluster's region must be specifiedâ€”for example, '['us-central1-a', 'us-central1-f']'. If this field is
	// empty, two default zones within the region are used. Immutable after the workstation configuration is created.
	ReplicaZones pulumi.StringArrayInput
	// How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that
	// workstations using this configuration should never time out from running duration. Must be greater than 0 and less than
	// 24 hours if 'encryption_key' is set. Defaults to 12 hours. A duration in seconds with up to nine fractional digits,
	// ending with 's'. Example: "3.5s".
	RunningTimeout pulumi.StringPtrInput
	Timeouts       WorkstationsWorkstationConfigTimeoutsPtrInput
	// The ID of the parent workstation cluster.
	WorkstationClusterId pulumi.StringInput
	// The ID to be assigned to the workstation cluster config.
	WorkstationConfigId             pulumi.StringInput
	WorkstationsWorkstationConfigId pulumi.StringPtrInput
}

func (WorkstationsWorkstationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workstationsWorkstationConfigArgs)(nil)).Elem()
}

type WorkstationsWorkstationConfigInput interface {
	pulumi.Input

	ToWorkstationsWorkstationConfigOutput() WorkstationsWorkstationConfigOutput
	ToWorkstationsWorkstationConfigOutputWithContext(ctx context.Context) WorkstationsWorkstationConfigOutput
}

func (*WorkstationsWorkstationConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkstationsWorkstationConfig)(nil)).Elem()
}

func (i *WorkstationsWorkstationConfig) ToWorkstationsWorkstationConfigOutput() WorkstationsWorkstationConfigOutput {
	return i.ToWorkstationsWorkstationConfigOutputWithContext(context.Background())
}

func (i *WorkstationsWorkstationConfig) ToWorkstationsWorkstationConfigOutputWithContext(ctx context.Context) WorkstationsWorkstationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkstationsWorkstationConfigOutput)
}

type WorkstationsWorkstationConfigOutput struct{ *pulumi.OutputState }

func (WorkstationsWorkstationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkstationsWorkstationConfig)(nil)).Elem()
}

func (o WorkstationsWorkstationConfigOutput) ToWorkstationsWorkstationConfigOutput() WorkstationsWorkstationConfigOutput {
	return o
}

func (o WorkstationsWorkstationConfigOutput) ToWorkstationsWorkstationConfigOutputWithContext(ctx context.Context) WorkstationsWorkstationConfigOutput {
	return o
}

// A list of port ranges specifying single ports or ranges of ports that are externally accessible in the workstation.
// Allowed ports must be one of 22, 80, or within range 1024-65535. If not specified defaults to ports 22, 80, and ports
// 1024-65535.
func (o WorkstationsWorkstationConfigOutput) AllowedPorts() WorkstationsWorkstationConfigAllowedPortArrayOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) WorkstationsWorkstationConfigAllowedPortArrayOutput {
		return v.AllowedPorts
	}).(WorkstationsWorkstationConfigAllowedPortArrayOutput)
}

// Client-specified annotations. This is distinct from labels. **Note**: This field is non-authoritative, and will only
// manage the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
// annotations present on the resource.
func (o WorkstationsWorkstationConfigOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Status conditions describing the current resource state.
func (o WorkstationsWorkstationConfigOutput) Conditions() WorkstationsWorkstationConfigConditionArrayOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) WorkstationsWorkstationConfigConditionArrayOutput {
		return v.Conditions
	}).(WorkstationsWorkstationConfigConditionArrayOutput)
}

// Container that will be run for each workstation using this configuration when that workstation is started.
func (o WorkstationsWorkstationConfigOutput) Container() WorkstationsWorkstationConfigContainerPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) WorkstationsWorkstationConfigContainerPtrOutput {
		return v.Container
	}).(WorkstationsWorkstationConfigContainerPtrOutput)
}

// Time when this resource was created.
func (o WorkstationsWorkstationConfigOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Whether this resource is in degraded mode, in which case it may require user action to restore full functionality.
// Details can be found in the conditions field.
func (o WorkstationsWorkstationConfigOutput) Degraded() pulumi.BoolOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.BoolOutput { return v.Degraded }).(pulumi.BoolOutput)
}

// Disables support for plain TCP connections in the workstation. By default the service supports TCP connections via a
// websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require
// plain tcp connections, such as ssh. When enabled, all communication must occur over https or wss.
func (o WorkstationsWorkstationConfigOutput) DisableTcpConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.BoolPtrOutput { return v.DisableTcpConnections }).(pulumi.BoolPtrOutput)
}

// Human-readable name for this resource.
func (o WorkstationsWorkstationConfigOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o WorkstationsWorkstationConfigOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o WorkstationsWorkstationConfigOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Whether to enable Linux 'auditd' logging on the workstation. When enabled, a service account must also be specified that
// has 'logging.buckets.write' permission on the project. Operating system audit logging is distinct from Cloud Audit Logs.
func (o WorkstationsWorkstationConfigOutput) EnableAuditAgent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.BoolPtrOutput { return v.EnableAuditAgent }).(pulumi.BoolPtrOutput)
}

// Encrypts resources of this workstation configuration using a customer-managed encryption key. If specified, the boot
// disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is
// not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata.
// If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to
// recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the
// persistent disk is recreated. Otherwise, data on the persistent disk will be lost. If the encryption key is revoked, the
// workstation session will automatically be stopped within 7 hours.
func (o WorkstationsWorkstationConfigOutput) EncryptionKey() WorkstationsWorkstationConfigEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) WorkstationsWorkstationConfigEncryptionKeyPtrOutput {
		return v.EncryptionKey
	}).(WorkstationsWorkstationConfigEncryptionKeyPtrOutput)
}

// Ephemeral directories which won't persist across workstation sessions.
func (o WorkstationsWorkstationConfigOutput) EphemeralDirectories() WorkstationsWorkstationConfigEphemeralDirectoryArrayOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) WorkstationsWorkstationConfigEphemeralDirectoryArrayOutput {
		return v.EphemeralDirectories
	}).(WorkstationsWorkstationConfigEphemeralDirectoryArrayOutput)
}

// Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date
// value before proceeding.
func (o WorkstationsWorkstationConfigOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Runtime host for a workstation.
func (o WorkstationsWorkstationConfigOutput) Host() WorkstationsWorkstationConfigHostPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) WorkstationsWorkstationConfigHostPtrOutput { return v.Host }).(WorkstationsWorkstationConfigHostPtrOutput)
}

// How long to wait before automatically stopping an instance that hasn't recently received any user traffic. A value of 0
// indicates that this instance should never time out from idleness. Defaults to 20 minutes. A duration in seconds with up
// to nine fractional digits, ending with 's'. Example: "3.5s".
func (o WorkstationsWorkstationConfigOutput) IdleTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringPtrOutput { return v.IdleTimeout }).(pulumi.StringPtrOutput)
}

// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine
// resources. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
// Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o WorkstationsWorkstationConfigOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location where the workstation cluster config should reside.
func (o WorkstationsWorkstationConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Maximum number of workstations under this configuration a user can have workstations.workstation.use permission on. Only
// enforced on CreateWorkstation API calls on the user issuing the API request.
func (o WorkstationsWorkstationConfigOutput) MaxUsableWorkstations() pulumi.Float64Output {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.Float64Output { return v.MaxUsableWorkstations }).(pulumi.Float64Output)
}

// Full name of this resource.
func (o WorkstationsWorkstationConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Directories to persist across workstation sessions.
func (o WorkstationsWorkstationConfigOutput) PersistentDirectories() WorkstationsWorkstationConfigPersistentDirectoryArrayOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) WorkstationsWorkstationConfigPersistentDirectoryArrayOutput {
		return v.PersistentDirectories
	}).(WorkstationsWorkstationConfigPersistentDirectoryArrayOutput)
}

func (o WorkstationsWorkstationConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Readiness checks to be performed on a workstation.
func (o WorkstationsWorkstationConfigOutput) ReadinessChecks() WorkstationsWorkstationConfigReadinessCheckArrayOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) WorkstationsWorkstationConfigReadinessCheckArrayOutput {
		return v.ReadinessChecks
	}).(WorkstationsWorkstationConfigReadinessCheckArrayOutput)
}

// Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the
// workstation cluster's region must be specifiedâ€”for example, '['us-central1-a', 'us-central1-f']'. If this field is
// empty, two default zones within the region are used. Immutable after the workstation configuration is created.
func (o WorkstationsWorkstationConfigOutput) ReplicaZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringArrayOutput { return v.ReplicaZones }).(pulumi.StringArrayOutput)
}

// How long to wait before automatically stopping a workstation after it was started. A value of 0 indicates that
// workstations using this configuration should never time out from running duration. Must be greater than 0 and less than
// 24 hours if 'encryption_key' is set. Defaults to 12 hours. A duration in seconds with up to nine fractional digits,
// ending with 's'. Example: "3.5s".
func (o WorkstationsWorkstationConfigOutput) RunningTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringPtrOutput { return v.RunningTimeout }).(pulumi.StringPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o WorkstationsWorkstationConfigOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o WorkstationsWorkstationConfigOutput) Timeouts() WorkstationsWorkstationConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) WorkstationsWorkstationConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(WorkstationsWorkstationConfigTimeoutsPtrOutput)
}

// The system-generated UID of the resource.
func (o WorkstationsWorkstationConfigOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The ID of the parent workstation cluster.
func (o WorkstationsWorkstationConfigOutput) WorkstationClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringOutput { return v.WorkstationClusterId }).(pulumi.StringOutput)
}

// The ID to be assigned to the workstation cluster config.
func (o WorkstationsWorkstationConfigOutput) WorkstationConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringOutput { return v.WorkstationConfigId }).(pulumi.StringOutput)
}

func (o WorkstationsWorkstationConfigOutput) WorkstationsWorkstationConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkstationsWorkstationConfig) pulumi.StringOutput { return v.WorkstationsWorkstationConfigId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkstationsWorkstationConfigInput)(nil)).Elem(), &WorkstationsWorkstationConfig{})
	pulumi.RegisterOutputType(WorkstationsWorkstationConfigOutput{})
}
