// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionDiskIamMember struct {
	pulumi.CustomResourceState

	ComputeRegionDiskIamMemberId pulumi.StringOutput                          `pulumi:"computeRegionDiskIamMemberId"`
	Condition                    ComputeRegionDiskIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	Member                       pulumi.StringOutput                          `pulumi:"member"`
	Name                         pulumi.StringOutput                          `pulumi:"name"`
	Project                      pulumi.StringOutput                          `pulumi:"project"`
	Region                       pulumi.StringOutput                          `pulumi:"region"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
}

// NewComputeRegionDiskIamMember registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionDiskIamMember(ctx *pulumi.Context,
	name string, args *ComputeRegionDiskIamMemberArgs, opts ...pulumi.ResourceOption) (*ComputeRegionDiskIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionDiskIamMember
	err = ctx.RegisterPackageResource("google-beta:index/computeRegionDiskIamMember:ComputeRegionDiskIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionDiskIamMember gets an existing ComputeRegionDiskIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionDiskIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionDiskIamMemberState, opts ...pulumi.ResourceOption) (*ComputeRegionDiskIamMember, error) {
	var resource ComputeRegionDiskIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeRegionDiskIamMember:ComputeRegionDiskIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionDiskIamMember resources.
type computeRegionDiskIamMemberState struct {
	ComputeRegionDiskIamMemberId *string                              `pulumi:"computeRegionDiskIamMemberId"`
	Condition                    *ComputeRegionDiskIamMemberCondition `pulumi:"condition"`
	Etag                         *string                              `pulumi:"etag"`
	Member                       *string                              `pulumi:"member"`
	Name                         *string                              `pulumi:"name"`
	Project                      *string                              `pulumi:"project"`
	Region                       *string                              `pulumi:"region"`
	Role                         *string                              `pulumi:"role"`
}

type ComputeRegionDiskIamMemberState struct {
	ComputeRegionDiskIamMemberId pulumi.StringPtrInput
	Condition                    ComputeRegionDiskIamMemberConditionPtrInput
	Etag                         pulumi.StringPtrInput
	Member                       pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
	Role                         pulumi.StringPtrInput
}

func (ComputeRegionDiskIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionDiskIamMemberState)(nil)).Elem()
}

type computeRegionDiskIamMemberArgs struct {
	ComputeRegionDiskIamMemberId *string                              `pulumi:"computeRegionDiskIamMemberId"`
	Condition                    *ComputeRegionDiskIamMemberCondition `pulumi:"condition"`
	Member                       string                               `pulumi:"member"`
	Name                         *string                              `pulumi:"name"`
	Project                      *string                              `pulumi:"project"`
	Region                       *string                              `pulumi:"region"`
	Role                         string                               `pulumi:"role"`
}

// The set of arguments for constructing a ComputeRegionDiskIamMember resource.
type ComputeRegionDiskIamMemberArgs struct {
	ComputeRegionDiskIamMemberId pulumi.StringPtrInput
	Condition                    ComputeRegionDiskIamMemberConditionPtrInput
	Member                       pulumi.StringInput
	Name                         pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
	Role                         pulumi.StringInput
}

func (ComputeRegionDiskIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionDiskIamMemberArgs)(nil)).Elem()
}

type ComputeRegionDiskIamMemberInput interface {
	pulumi.Input

	ToComputeRegionDiskIamMemberOutput() ComputeRegionDiskIamMemberOutput
	ToComputeRegionDiskIamMemberOutputWithContext(ctx context.Context) ComputeRegionDiskIamMemberOutput
}

func (*ComputeRegionDiskIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionDiskIamMember)(nil)).Elem()
}

func (i *ComputeRegionDiskIamMember) ToComputeRegionDiskIamMemberOutput() ComputeRegionDiskIamMemberOutput {
	return i.ToComputeRegionDiskIamMemberOutputWithContext(context.Background())
}

func (i *ComputeRegionDiskIamMember) ToComputeRegionDiskIamMemberOutputWithContext(ctx context.Context) ComputeRegionDiskIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionDiskIamMemberOutput)
}

type ComputeRegionDiskIamMemberOutput struct{ *pulumi.OutputState }

func (ComputeRegionDiskIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionDiskIamMember)(nil)).Elem()
}

func (o ComputeRegionDiskIamMemberOutput) ToComputeRegionDiskIamMemberOutput() ComputeRegionDiskIamMemberOutput {
	return o
}

func (o ComputeRegionDiskIamMemberOutput) ToComputeRegionDiskIamMemberOutputWithContext(ctx context.Context) ComputeRegionDiskIamMemberOutput {
	return o
}

func (o ComputeRegionDiskIamMemberOutput) ComputeRegionDiskIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamMember) pulumi.StringOutput { return v.ComputeRegionDiskIamMemberId }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamMemberOutput) Condition() ComputeRegionDiskIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamMember) ComputeRegionDiskIamMemberConditionPtrOutput { return v.Condition }).(ComputeRegionDiskIamMemberConditionPtrOutput)
}

func (o ComputeRegionDiskIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionDiskIamMemberInput)(nil)).Elem(), &ComputeRegionDiskIamMember{})
	pulumi.RegisterOutputType(ComputeRegionDiskIamMemberOutput{})
}
