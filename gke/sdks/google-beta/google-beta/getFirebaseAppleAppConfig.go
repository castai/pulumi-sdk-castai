// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetFirebaseAppleAppConfig(ctx *pulumi.Context, args *GetFirebaseAppleAppConfigArgs, opts ...pulumi.InvokeOption) (*GetFirebaseAppleAppConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetFirebaseAppleAppConfigResult
	err = ctx.InvokePackage("google-beta:index/getFirebaseAppleAppConfig:getFirebaseAppleAppConfig", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFirebaseAppleAppConfig.
type GetFirebaseAppleAppConfigArgs struct {
	AppId   string  `pulumi:"appId"`
	Project *string `pulumi:"project"`
}

// A collection of values returned by getFirebaseAppleAppConfig.
type GetFirebaseAppleAppConfigResult struct {
	AppId              string  `pulumi:"appId"`
	ConfigFileContents string  `pulumi:"configFileContents"`
	ConfigFilename     string  `pulumi:"configFilename"`
	Id                 string  `pulumi:"id"`
	Project            *string `pulumi:"project"`
}

func GetFirebaseAppleAppConfigOutput(ctx *pulumi.Context, args GetFirebaseAppleAppConfigOutputArgs, opts ...pulumi.InvokeOption) GetFirebaseAppleAppConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFirebaseAppleAppConfigResultOutput, error) {
			args := v.(GetFirebaseAppleAppConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetFirebaseAppleAppConfigResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getFirebaseAppleAppConfig:getFirebaseAppleAppConfig", args, GetFirebaseAppleAppConfigResultOutput{}, options).(GetFirebaseAppleAppConfigResultOutput), nil
		}).(GetFirebaseAppleAppConfigResultOutput)
}

// A collection of arguments for invoking getFirebaseAppleAppConfig.
type GetFirebaseAppleAppConfigOutputArgs struct {
	AppId   pulumi.StringInput    `pulumi:"appId"`
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (GetFirebaseAppleAppConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirebaseAppleAppConfigArgs)(nil)).Elem()
}

// A collection of values returned by getFirebaseAppleAppConfig.
type GetFirebaseAppleAppConfigResultOutput struct{ *pulumi.OutputState }

func (GetFirebaseAppleAppConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirebaseAppleAppConfigResult)(nil)).Elem()
}

func (o GetFirebaseAppleAppConfigResultOutput) ToGetFirebaseAppleAppConfigResultOutput() GetFirebaseAppleAppConfigResultOutput {
	return o
}

func (o GetFirebaseAppleAppConfigResultOutput) ToGetFirebaseAppleAppConfigResultOutputWithContext(ctx context.Context) GetFirebaseAppleAppConfigResultOutput {
	return o
}

func (o GetFirebaseAppleAppConfigResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirebaseAppleAppConfigResult) string { return v.AppId }).(pulumi.StringOutput)
}

func (o GetFirebaseAppleAppConfigResultOutput) ConfigFileContents() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirebaseAppleAppConfigResult) string { return v.ConfigFileContents }).(pulumi.StringOutput)
}

func (o GetFirebaseAppleAppConfigResultOutput) ConfigFilename() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirebaseAppleAppConfigResult) string { return v.ConfigFilename }).(pulumi.StringOutput)
}

func (o GetFirebaseAppleAppConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirebaseAppleAppConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFirebaseAppleAppConfigResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFirebaseAppleAppConfigResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFirebaseAppleAppConfigResultOutput{})
}
