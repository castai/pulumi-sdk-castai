// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryConnection struct {
	pulumi.CustomResourceState

	// Connection properties specific to Amazon Web Services.
	Aws BigqueryConnectionAwsPtrOutput `pulumi:"aws"`
	// Container for connection properties specific to Azure.
	Azure                BigqueryConnectionAzurePtrOutput `pulumi:"azure"`
	BigqueryConnectionId pulumi.StringOutput              `pulumi:"bigqueryConnectionId"`
	// Container for connection properties for delegation of access to GCP resources.
	CloudResource BigqueryConnectionCloudResourcePtrOutput `pulumi:"cloudResource"`
	// Connection properties specific to Cloud Spanner
	CloudSpanner BigqueryConnectionCloudSpannerPtrOutput `pulumi:"cloudSpanner"`
	// Connection properties specific to the Cloud SQL.
	CloudSql BigqueryConnectionCloudSqlPtrOutput `pulumi:"cloudSql"`
	// Optional connection id that should be assigned to the created connection.
	ConnectionId pulumi.StringOutput `pulumi:"connectionId"`
	// A descriptive description for the connection
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A descriptive name for the connection
	FriendlyName pulumi.StringPtrOutput `pulumi:"friendlyName"`
	// True if the connection has credential assigned.
	HasCredential pulumi.BoolOutput `pulumi:"hasCredential"`
	// Optional. The Cloud KMS key that is used for encryption. Example:
	// projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
	KmsKeyName pulumi.StringPtrOutput `pulumi:"kmsKeyName"`
	// The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the
	// connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery
	// EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed
	// regions are aws-us-east-1 Azure allowed regions are azure-eastus2
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The resource name of the connection in the form of:
	// "projects/{project_id}/locations/{location_id}/connections/{connectionId}"
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Container for connection properties to execute stored procedures for Apache Spark. resources.
	Spark    BigqueryConnectionSparkPtrOutput    `pulumi:"spark"`
	Timeouts BigqueryConnectionTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewBigqueryConnection registers a new resource with the given unique name, arguments, and options.
func NewBigqueryConnection(ctx *pulumi.Context,
	name string, args *BigqueryConnectionArgs, opts ...pulumi.ResourceOption) (*BigqueryConnection, error) {
	if args == nil {
		args = &BigqueryConnectionArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryConnection
	err = ctx.RegisterPackageResource("google-beta:index/bigqueryConnection:BigqueryConnection", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryConnection gets an existing BigqueryConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryConnectionState, opts ...pulumi.ResourceOption) (*BigqueryConnection, error) {
	var resource BigqueryConnection
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/bigqueryConnection:BigqueryConnection", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryConnection resources.
type bigqueryConnectionState struct {
	// Connection properties specific to Amazon Web Services.
	Aws *BigqueryConnectionAws `pulumi:"aws"`
	// Container for connection properties specific to Azure.
	Azure                *BigqueryConnectionAzure `pulumi:"azure"`
	BigqueryConnectionId *string                  `pulumi:"bigqueryConnectionId"`
	// Container for connection properties for delegation of access to GCP resources.
	CloudResource *BigqueryConnectionCloudResource `pulumi:"cloudResource"`
	// Connection properties specific to Cloud Spanner
	CloudSpanner *BigqueryConnectionCloudSpanner `pulumi:"cloudSpanner"`
	// Connection properties specific to the Cloud SQL.
	CloudSql *BigqueryConnectionCloudSql `pulumi:"cloudSql"`
	// Optional connection id that should be assigned to the created connection.
	ConnectionId *string `pulumi:"connectionId"`
	// A descriptive description for the connection
	Description *string `pulumi:"description"`
	// A descriptive name for the connection
	FriendlyName *string `pulumi:"friendlyName"`
	// True if the connection has credential assigned.
	HasCredential *bool `pulumi:"hasCredential"`
	// Optional. The Cloud KMS key that is used for encryption. Example:
	// projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the
	// connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery
	// EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed
	// regions are aws-us-east-1 Azure allowed regions are azure-eastus2
	Location *string `pulumi:"location"`
	// The resource name of the connection in the form of:
	// "projects/{project_id}/locations/{location_id}/connections/{connectionId}"
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Container for connection properties to execute stored procedures for Apache Spark. resources.
	Spark    *BigqueryConnectionSpark    `pulumi:"spark"`
	Timeouts *BigqueryConnectionTimeouts `pulumi:"timeouts"`
}

type BigqueryConnectionState struct {
	// Connection properties specific to Amazon Web Services.
	Aws BigqueryConnectionAwsPtrInput
	// Container for connection properties specific to Azure.
	Azure                BigqueryConnectionAzurePtrInput
	BigqueryConnectionId pulumi.StringPtrInput
	// Container for connection properties for delegation of access to GCP resources.
	CloudResource BigqueryConnectionCloudResourcePtrInput
	// Connection properties specific to Cloud Spanner
	CloudSpanner BigqueryConnectionCloudSpannerPtrInput
	// Connection properties specific to the Cloud SQL.
	CloudSql BigqueryConnectionCloudSqlPtrInput
	// Optional connection id that should be assigned to the created connection.
	ConnectionId pulumi.StringPtrInput
	// A descriptive description for the connection
	Description pulumi.StringPtrInput
	// A descriptive name for the connection
	FriendlyName pulumi.StringPtrInput
	// True if the connection has credential assigned.
	HasCredential pulumi.BoolPtrInput
	// Optional. The Cloud KMS key that is used for encryption. Example:
	// projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
	KmsKeyName pulumi.StringPtrInput
	// The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the
	// connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery
	// EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed
	// regions are aws-us-east-1 Azure allowed regions are azure-eastus2
	Location pulumi.StringPtrInput
	// The resource name of the connection in the form of:
	// "projects/{project_id}/locations/{location_id}/connections/{connectionId}"
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Container for connection properties to execute stored procedures for Apache Spark. resources.
	Spark    BigqueryConnectionSparkPtrInput
	Timeouts BigqueryConnectionTimeoutsPtrInput
}

func (BigqueryConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryConnectionState)(nil)).Elem()
}

type bigqueryConnectionArgs struct {
	// Connection properties specific to Amazon Web Services.
	Aws *BigqueryConnectionAws `pulumi:"aws"`
	// Container for connection properties specific to Azure.
	Azure                *BigqueryConnectionAzure `pulumi:"azure"`
	BigqueryConnectionId *string                  `pulumi:"bigqueryConnectionId"`
	// Container for connection properties for delegation of access to GCP resources.
	CloudResource *BigqueryConnectionCloudResource `pulumi:"cloudResource"`
	// Connection properties specific to Cloud Spanner
	CloudSpanner *BigqueryConnectionCloudSpanner `pulumi:"cloudSpanner"`
	// Connection properties specific to the Cloud SQL.
	CloudSql *BigqueryConnectionCloudSql `pulumi:"cloudSql"`
	// Optional connection id that should be assigned to the created connection.
	ConnectionId *string `pulumi:"connectionId"`
	// A descriptive description for the connection
	Description *string `pulumi:"description"`
	// A descriptive name for the connection
	FriendlyName *string `pulumi:"friendlyName"`
	// Optional. The Cloud KMS key that is used for encryption. Example:
	// projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the
	// connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery
	// EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed
	// regions are aws-us-east-1 Azure allowed regions are azure-eastus2
	Location *string `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// Container for connection properties to execute stored procedures for Apache Spark. resources.
	Spark    *BigqueryConnectionSpark    `pulumi:"spark"`
	Timeouts *BigqueryConnectionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BigqueryConnection resource.
type BigqueryConnectionArgs struct {
	// Connection properties specific to Amazon Web Services.
	Aws BigqueryConnectionAwsPtrInput
	// Container for connection properties specific to Azure.
	Azure                BigqueryConnectionAzurePtrInput
	BigqueryConnectionId pulumi.StringPtrInput
	// Container for connection properties for delegation of access to GCP resources.
	CloudResource BigqueryConnectionCloudResourcePtrInput
	// Connection properties specific to Cloud Spanner
	CloudSpanner BigqueryConnectionCloudSpannerPtrInput
	// Connection properties specific to the Cloud SQL.
	CloudSql BigqueryConnectionCloudSqlPtrInput
	// Optional connection id that should be assigned to the created connection.
	ConnectionId pulumi.StringPtrInput
	// A descriptive description for the connection
	Description pulumi.StringPtrInput
	// A descriptive name for the connection
	FriendlyName pulumi.StringPtrInput
	// Optional. The Cloud KMS key that is used for encryption. Example:
	// projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
	KmsKeyName pulumi.StringPtrInput
	// The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the
	// connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery
	// EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed
	// regions are aws-us-east-1 Azure allowed regions are azure-eastus2
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// Container for connection properties to execute stored procedures for Apache Spark. resources.
	Spark    BigqueryConnectionSparkPtrInput
	Timeouts BigqueryConnectionTimeoutsPtrInput
}

func (BigqueryConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryConnectionArgs)(nil)).Elem()
}

type BigqueryConnectionInput interface {
	pulumi.Input

	ToBigqueryConnectionOutput() BigqueryConnectionOutput
	ToBigqueryConnectionOutputWithContext(ctx context.Context) BigqueryConnectionOutput
}

func (*BigqueryConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryConnection)(nil)).Elem()
}

func (i *BigqueryConnection) ToBigqueryConnectionOutput() BigqueryConnectionOutput {
	return i.ToBigqueryConnectionOutputWithContext(context.Background())
}

func (i *BigqueryConnection) ToBigqueryConnectionOutputWithContext(ctx context.Context) BigqueryConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryConnectionOutput)
}

type BigqueryConnectionOutput struct{ *pulumi.OutputState }

func (BigqueryConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryConnection)(nil)).Elem()
}

func (o BigqueryConnectionOutput) ToBigqueryConnectionOutput() BigqueryConnectionOutput {
	return o
}

func (o BigqueryConnectionOutput) ToBigqueryConnectionOutputWithContext(ctx context.Context) BigqueryConnectionOutput {
	return o
}

// Connection properties specific to Amazon Web Services.
func (o BigqueryConnectionOutput) Aws() BigqueryConnectionAwsPtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) BigqueryConnectionAwsPtrOutput { return v.Aws }).(BigqueryConnectionAwsPtrOutput)
}

// Container for connection properties specific to Azure.
func (o BigqueryConnectionOutput) Azure() BigqueryConnectionAzurePtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) BigqueryConnectionAzurePtrOutput { return v.Azure }).(BigqueryConnectionAzurePtrOutput)
}

func (o BigqueryConnectionOutput) BigqueryConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnection) pulumi.StringOutput { return v.BigqueryConnectionId }).(pulumi.StringOutput)
}

// Container for connection properties for delegation of access to GCP resources.
func (o BigqueryConnectionOutput) CloudResource() BigqueryConnectionCloudResourcePtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) BigqueryConnectionCloudResourcePtrOutput { return v.CloudResource }).(BigqueryConnectionCloudResourcePtrOutput)
}

// Connection properties specific to Cloud Spanner
func (o BigqueryConnectionOutput) CloudSpanner() BigqueryConnectionCloudSpannerPtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) BigqueryConnectionCloudSpannerPtrOutput { return v.CloudSpanner }).(BigqueryConnectionCloudSpannerPtrOutput)
}

// Connection properties specific to the Cloud SQL.
func (o BigqueryConnectionOutput) CloudSql() BigqueryConnectionCloudSqlPtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) BigqueryConnectionCloudSqlPtrOutput { return v.CloudSql }).(BigqueryConnectionCloudSqlPtrOutput)
}

// Optional connection id that should be assigned to the created connection.
func (o BigqueryConnectionOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnection) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

// A descriptive description for the connection
func (o BigqueryConnectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A descriptive name for the connection
func (o BigqueryConnectionOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) pulumi.StringPtrOutput { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// True if the connection has credential assigned.
func (o BigqueryConnectionOutput) HasCredential() pulumi.BoolOutput {
	return o.ApplyT(func(v *BigqueryConnection) pulumi.BoolOutput { return v.HasCredential }).(pulumi.BoolOutput)
}

// Optional. The Cloud KMS key that is used for encryption. Example:
// projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]
func (o BigqueryConnectionOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) pulumi.StringPtrOutput { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// The geographic location where the connection should reside. Cloud SQL instance must be in the same location as the
// connection with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery
// EU. Examples: US, EU, asia-northeast1, us-central1, europe-west1. Spanner Connections same as spanner region AWS allowed
// regions are aws-us-east-1 Azure allowed regions are azure-eastus2
func (o BigqueryConnectionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The resource name of the connection in the form of:
// "projects/{project_id}/locations/{location_id}/connections/{connectionId}"
func (o BigqueryConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BigqueryConnectionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnection) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Container for connection properties to execute stored procedures for Apache Spark. resources.
func (o BigqueryConnectionOutput) Spark() BigqueryConnectionSparkPtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) BigqueryConnectionSparkPtrOutput { return v.Spark }).(BigqueryConnectionSparkPtrOutput)
}

func (o BigqueryConnectionOutput) Timeouts() BigqueryConnectionTimeoutsPtrOutput {
	return o.ApplyT(func(v *BigqueryConnection) BigqueryConnectionTimeoutsPtrOutput { return v.Timeouts }).(BigqueryConnectionTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryConnectionInput)(nil)).Elem(), &BigqueryConnection{})
	pulumi.RegisterOutputType(BigqueryConnectionOutput{})
}
