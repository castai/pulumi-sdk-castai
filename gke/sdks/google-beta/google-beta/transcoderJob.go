// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TranscoderJob struct {
	pulumi.CustomResourceState

	// The configuration for this template.
	Config TranscoderJobConfigPtrOutput `pulumi:"config"`
	// The time the job was created.
	CreateTime      pulumi.StringOutput    `pulumi:"createTime"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The time the transcoding finished.
	EndTime pulumi.StringOutput `pulumi:"endTime"`
	// The labels associated with this job. You can use these to organize and group your jobs. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the transcoding job resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the job.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The time the transcoding started.
	StartTime pulumi.StringOutput `pulumi:"startTime"`
	// The current state of the job.
	State pulumi.StringOutput `pulumi:"state"`
	// Specify the templateId to use for populating Job.config. The default is preset/web-hd, which is the only supported
	// preset.
	TemplateId pulumi.StringOutput `pulumi:"templateId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput         `pulumi:"terraformLabels"`
	Timeouts        TranscoderJobTimeoutsPtrOutput `pulumi:"timeouts"`
	TranscoderJobId pulumi.StringOutput            `pulumi:"transcoderJobId"`
}

// NewTranscoderJob registers a new resource with the given unique name, arguments, and options.
func NewTranscoderJob(ctx *pulumi.Context,
	name string, args *TranscoderJobArgs, opts ...pulumi.ResourceOption) (*TranscoderJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource TranscoderJob
	err = ctx.RegisterPackageResource("google-beta:index/transcoderJob:TranscoderJob", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTranscoderJob gets an existing TranscoderJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTranscoderJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TranscoderJobState, opts ...pulumi.ResourceOption) (*TranscoderJob, error) {
	var resource TranscoderJob
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/transcoderJob:TranscoderJob", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TranscoderJob resources.
type transcoderJobState struct {
	// The configuration for this template.
	Config *TranscoderJobConfig `pulumi:"config"`
	// The time the job was created.
	CreateTime      *string           `pulumi:"createTime"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The time the transcoding finished.
	EndTime *string `pulumi:"endTime"`
	// The labels associated with this job. You can use these to organize and group your jobs. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the transcoding job resource.
	Location *string `pulumi:"location"`
	// The resource name of the job.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The time the transcoding started.
	StartTime *string `pulumi:"startTime"`
	// The current state of the job.
	State *string `pulumi:"state"`
	// Specify the templateId to use for populating Job.config. The default is preset/web-hd, which is the only supported
	// preset.
	TemplateId *string `pulumi:"templateId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string      `pulumi:"terraformLabels"`
	Timeouts        *TranscoderJobTimeouts `pulumi:"timeouts"`
	TranscoderJobId *string                `pulumi:"transcoderJobId"`
}

type TranscoderJobState struct {
	// The configuration for this template.
	Config TranscoderJobConfigPtrInput
	// The time the job was created.
	CreateTime      pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The time the transcoding finished.
	EndTime pulumi.StringPtrInput
	// The labels associated with this job. You can use these to organize and group your jobs. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the transcoding job resource.
	Location pulumi.StringPtrInput
	// The resource name of the job.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The time the transcoding started.
	StartTime pulumi.StringPtrInput
	// The current state of the job.
	State pulumi.StringPtrInput
	// Specify the templateId to use for populating Job.config. The default is preset/web-hd, which is the only supported
	// preset.
	TemplateId pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        TranscoderJobTimeoutsPtrInput
	TranscoderJobId pulumi.StringPtrInput
}

func (TranscoderJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*transcoderJobState)(nil)).Elem()
}

type transcoderJobArgs struct {
	// The configuration for this template.
	Config *TranscoderJobConfig `pulumi:"config"`
	// The labels associated with this job. You can use these to organize and group your jobs. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the transcoding job resource.
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// Specify the templateId to use for populating Job.config. The default is preset/web-hd, which is the only supported
	// preset.
	TemplateId      *string                `pulumi:"templateId"`
	Timeouts        *TranscoderJobTimeouts `pulumi:"timeouts"`
	TranscoderJobId *string                `pulumi:"transcoderJobId"`
}

// The set of arguments for constructing a TranscoderJob resource.
type TranscoderJobArgs struct {
	// The configuration for this template.
	Config TranscoderJobConfigPtrInput
	// The labels associated with this job. You can use these to organize and group your jobs. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the transcoding job resource.
	Location pulumi.StringInput
	Project  pulumi.StringPtrInput
	// Specify the templateId to use for populating Job.config. The default is preset/web-hd, which is the only supported
	// preset.
	TemplateId      pulumi.StringPtrInput
	Timeouts        TranscoderJobTimeoutsPtrInput
	TranscoderJobId pulumi.StringPtrInput
}

func (TranscoderJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transcoderJobArgs)(nil)).Elem()
}

type TranscoderJobInput interface {
	pulumi.Input

	ToTranscoderJobOutput() TranscoderJobOutput
	ToTranscoderJobOutputWithContext(ctx context.Context) TranscoderJobOutput
}

func (*TranscoderJob) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscoderJob)(nil)).Elem()
}

func (i *TranscoderJob) ToTranscoderJobOutput() TranscoderJobOutput {
	return i.ToTranscoderJobOutputWithContext(context.Background())
}

func (i *TranscoderJob) ToTranscoderJobOutputWithContext(ctx context.Context) TranscoderJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TranscoderJobOutput)
}

type TranscoderJobOutput struct{ *pulumi.OutputState }

func (TranscoderJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TranscoderJob)(nil)).Elem()
}

func (o TranscoderJobOutput) ToTranscoderJobOutput() TranscoderJobOutput {
	return o
}

func (o TranscoderJobOutput) ToTranscoderJobOutputWithContext(ctx context.Context) TranscoderJobOutput {
	return o
}

// The configuration for this template.
func (o TranscoderJobOutput) Config() TranscoderJobConfigPtrOutput {
	return o.ApplyT(func(v *TranscoderJob) TranscoderJobConfigPtrOutput { return v.Config }).(TranscoderJobConfigPtrOutput)
}

// The time the job was created.
func (o TranscoderJobOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o TranscoderJobOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The time the transcoding finished.
func (o TranscoderJobOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringOutput { return v.EndTime }).(pulumi.StringOutput)
}

// The labels associated with this job. You can use these to organize and group your jobs. **Note**: This field is
// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o TranscoderJobOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the transcoding job resource.
func (o TranscoderJobOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the job.
func (o TranscoderJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o TranscoderJobOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The time the transcoding started.
func (o TranscoderJobOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringOutput { return v.StartTime }).(pulumi.StringOutput)
}

// The current state of the job.
func (o TranscoderJobOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Specify the templateId to use for populating Job.config. The default is preset/web-hd, which is the only supported
// preset.
func (o TranscoderJobOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringOutput { return v.TemplateId }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o TranscoderJobOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o TranscoderJobOutput) Timeouts() TranscoderJobTimeoutsPtrOutput {
	return o.ApplyT(func(v *TranscoderJob) TranscoderJobTimeoutsPtrOutput { return v.Timeouts }).(TranscoderJobTimeoutsPtrOutput)
}

func (o TranscoderJobOutput) TranscoderJobId() pulumi.StringOutput {
	return o.ApplyT(func(v *TranscoderJob) pulumi.StringOutput { return v.TranscoderJobId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TranscoderJobInput)(nil)).Elem(), &TranscoderJob{})
	pulumi.RegisterOutputType(TranscoderJobOutput{})
}
