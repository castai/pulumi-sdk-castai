// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeHubFeatureIamBinding struct {
	pulumi.CustomResourceState

	Condition                 GkeHubFeatureIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                      pulumi.StringOutput                       `pulumi:"etag"`
	GkeHubFeatureIamBindingId pulumi.StringOutput                       `pulumi:"gkeHubFeatureIamBindingId"`
	Location                  pulumi.StringOutput                       `pulumi:"location"`
	Members                   pulumi.StringArrayOutput                  `pulumi:"members"`
	Name                      pulumi.StringOutput                       `pulumi:"name"`
	Project                   pulumi.StringOutput                       `pulumi:"project"`
	Role                      pulumi.StringOutput                       `pulumi:"role"`
}

// NewGkeHubFeatureIamBinding registers a new resource with the given unique name, arguments, and options.
func NewGkeHubFeatureIamBinding(ctx *pulumi.Context,
	name string, args *GkeHubFeatureIamBindingArgs, opts ...pulumi.ResourceOption) (*GkeHubFeatureIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeHubFeatureIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/gkeHubFeatureIamBinding:GkeHubFeatureIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeHubFeatureIamBinding gets an existing GkeHubFeatureIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeHubFeatureIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeHubFeatureIamBindingState, opts ...pulumi.ResourceOption) (*GkeHubFeatureIamBinding, error) {
	var resource GkeHubFeatureIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/gkeHubFeatureIamBinding:GkeHubFeatureIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeHubFeatureIamBinding resources.
type gkeHubFeatureIamBindingState struct {
	Condition                 *GkeHubFeatureIamBindingCondition `pulumi:"condition"`
	Etag                      *string                           `pulumi:"etag"`
	GkeHubFeatureIamBindingId *string                           `pulumi:"gkeHubFeatureIamBindingId"`
	Location                  *string                           `pulumi:"location"`
	Members                   []string                          `pulumi:"members"`
	Name                      *string                           `pulumi:"name"`
	Project                   *string                           `pulumi:"project"`
	Role                      *string                           `pulumi:"role"`
}

type GkeHubFeatureIamBindingState struct {
	Condition                 GkeHubFeatureIamBindingConditionPtrInput
	Etag                      pulumi.StringPtrInput
	GkeHubFeatureIamBindingId pulumi.StringPtrInput
	Location                  pulumi.StringPtrInput
	Members                   pulumi.StringArrayInput
	Name                      pulumi.StringPtrInput
	Project                   pulumi.StringPtrInput
	Role                      pulumi.StringPtrInput
}

func (GkeHubFeatureIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubFeatureIamBindingState)(nil)).Elem()
}

type gkeHubFeatureIamBindingArgs struct {
	Condition                 *GkeHubFeatureIamBindingCondition `pulumi:"condition"`
	GkeHubFeatureIamBindingId *string                           `pulumi:"gkeHubFeatureIamBindingId"`
	Location                  *string                           `pulumi:"location"`
	Members                   []string                          `pulumi:"members"`
	Name                      *string                           `pulumi:"name"`
	Project                   *string                           `pulumi:"project"`
	Role                      string                            `pulumi:"role"`
}

// The set of arguments for constructing a GkeHubFeatureIamBinding resource.
type GkeHubFeatureIamBindingArgs struct {
	Condition                 GkeHubFeatureIamBindingConditionPtrInput
	GkeHubFeatureIamBindingId pulumi.StringPtrInput
	Location                  pulumi.StringPtrInput
	Members                   pulumi.StringArrayInput
	Name                      pulumi.StringPtrInput
	Project                   pulumi.StringPtrInput
	Role                      pulumi.StringInput
}

func (GkeHubFeatureIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubFeatureIamBindingArgs)(nil)).Elem()
}

type GkeHubFeatureIamBindingInput interface {
	pulumi.Input

	ToGkeHubFeatureIamBindingOutput() GkeHubFeatureIamBindingOutput
	ToGkeHubFeatureIamBindingOutputWithContext(ctx context.Context) GkeHubFeatureIamBindingOutput
}

func (*GkeHubFeatureIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubFeatureIamBinding)(nil)).Elem()
}

func (i *GkeHubFeatureIamBinding) ToGkeHubFeatureIamBindingOutput() GkeHubFeatureIamBindingOutput {
	return i.ToGkeHubFeatureIamBindingOutputWithContext(context.Background())
}

func (i *GkeHubFeatureIamBinding) ToGkeHubFeatureIamBindingOutputWithContext(ctx context.Context) GkeHubFeatureIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeHubFeatureIamBindingOutput)
}

type GkeHubFeatureIamBindingOutput struct{ *pulumi.OutputState }

func (GkeHubFeatureIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubFeatureIamBinding)(nil)).Elem()
}

func (o GkeHubFeatureIamBindingOutput) ToGkeHubFeatureIamBindingOutput() GkeHubFeatureIamBindingOutput {
	return o
}

func (o GkeHubFeatureIamBindingOutput) ToGkeHubFeatureIamBindingOutputWithContext(ctx context.Context) GkeHubFeatureIamBindingOutput {
	return o
}

func (o GkeHubFeatureIamBindingOutput) Condition() GkeHubFeatureIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *GkeHubFeatureIamBinding) GkeHubFeatureIamBindingConditionPtrOutput { return v.Condition }).(GkeHubFeatureIamBindingConditionPtrOutput)
}

func (o GkeHubFeatureIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeatureIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o GkeHubFeatureIamBindingOutput) GkeHubFeatureIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeatureIamBinding) pulumi.StringOutput { return v.GkeHubFeatureIamBindingId }).(pulumi.StringOutput)
}

func (o GkeHubFeatureIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeatureIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o GkeHubFeatureIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GkeHubFeatureIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o GkeHubFeatureIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeatureIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GkeHubFeatureIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeatureIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o GkeHubFeatureIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeatureIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeHubFeatureIamBindingInput)(nil)).Elem(), &GkeHubFeatureIamBinding{})
	pulumi.RegisterOutputType(GkeHubFeatureIamBindingOutput{})
}
