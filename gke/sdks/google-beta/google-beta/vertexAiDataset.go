// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VertexAiDataset struct {
	pulumi.CustomResourceState

	// The timestamp of when the dataset was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8
	// characters.
	DisplayName     pulumi.StringOutput    `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be
	// secured by this key.
	EncryptionSpec VertexAiDatasetEncryptionSpecPtrOutput `pulumi:"encryptionSpec"`
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is
	// defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in
	// gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri pulumi.StringOutput `pulumi:"metadataSchemaUri"`
	// The resource name of the Dataset. This value is set by Google.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The region of the dataset. eg us-central1
	Region pulumi.StringOutput `pulumi:"region"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput           `pulumi:"terraformLabels"`
	Timeouts        VertexAiDatasetTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp of when the dataset was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	UpdateTime        pulumi.StringOutput `pulumi:"updateTime"`
	VertexAiDatasetId pulumi.StringOutput `pulumi:"vertexAiDatasetId"`
}

// NewVertexAiDataset registers a new resource with the given unique name, arguments, and options.
func NewVertexAiDataset(ctx *pulumi.Context,
	name string, args *VertexAiDatasetArgs, opts ...pulumi.ResourceOption) (*VertexAiDataset, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.MetadataSchemaUri == nil {
		return nil, errors.New("invalid value for required argument 'MetadataSchemaUri'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VertexAiDataset
	err = ctx.RegisterPackageResource("google-beta:index/vertexAiDataset:VertexAiDataset", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVertexAiDataset gets an existing VertexAiDataset resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVertexAiDataset(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VertexAiDatasetState, opts ...pulumi.ResourceOption) (*VertexAiDataset, error) {
	var resource VertexAiDataset
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vertexAiDataset:VertexAiDataset", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VertexAiDataset resources.
type vertexAiDatasetState struct {
	// The timestamp of when the dataset was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8
	// characters.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be
	// secured by this key.
	EncryptionSpec *VertexAiDatasetEncryptionSpec `pulumi:"encryptionSpec"`
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is
	// defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in
	// gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri *string `pulumi:"metadataSchemaUri"`
	// The resource name of the Dataset. This value is set by Google.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The region of the dataset. eg us-central1
	Region *string `pulumi:"region"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string        `pulumi:"terraformLabels"`
	Timeouts        *VertexAiDatasetTimeouts `pulumi:"timeouts"`
	// The timestamp of when the dataset was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	UpdateTime        *string `pulumi:"updateTime"`
	VertexAiDatasetId *string `pulumi:"vertexAiDatasetId"`
}

type VertexAiDatasetState struct {
	// The timestamp of when the dataset was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime pulumi.StringPtrInput
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8
	// characters.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be
	// secured by this key.
	EncryptionSpec VertexAiDatasetEncryptionSpecPtrInput
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is
	// defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in
	// gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri pulumi.StringPtrInput
	// The resource name of the Dataset. This value is set by Google.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The region of the dataset. eg us-central1
	Region pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        VertexAiDatasetTimeoutsPtrInput
	// The timestamp of when the dataset was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	UpdateTime        pulumi.StringPtrInput
	VertexAiDatasetId pulumi.StringPtrInput
}

func (VertexAiDatasetState) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiDatasetState)(nil)).Elem()
}

type vertexAiDatasetArgs struct {
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8
	// characters.
	DisplayName string `pulumi:"displayName"`
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be
	// secured by this key.
	EncryptionSpec *VertexAiDatasetEncryptionSpec `pulumi:"encryptionSpec"`
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is
	// defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in
	// gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri string  `pulumi:"metadataSchemaUri"`
	Project           *string `pulumi:"project"`
	// The region of the dataset. eg us-central1
	Region            *string                  `pulumi:"region"`
	Timeouts          *VertexAiDatasetTimeouts `pulumi:"timeouts"`
	VertexAiDatasetId *string                  `pulumi:"vertexAiDatasetId"`
}

// The set of arguments for constructing a VertexAiDataset resource.
type VertexAiDatasetArgs struct {
	// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8
	// characters.
	DisplayName pulumi.StringInput
	// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be
	// secured by this key.
	EncryptionSpec VertexAiDatasetEncryptionSpecPtrInput
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is
	// defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in
	// gs://google-cloud-aiplatform/schema/dataset/metadata/.
	MetadataSchemaUri pulumi.StringInput
	Project           pulumi.StringPtrInput
	// The region of the dataset. eg us-central1
	Region            pulumi.StringPtrInput
	Timeouts          VertexAiDatasetTimeoutsPtrInput
	VertexAiDatasetId pulumi.StringPtrInput
}

func (VertexAiDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiDatasetArgs)(nil)).Elem()
}

type VertexAiDatasetInput interface {
	pulumi.Input

	ToVertexAiDatasetOutput() VertexAiDatasetOutput
	ToVertexAiDatasetOutputWithContext(ctx context.Context) VertexAiDatasetOutput
}

func (*VertexAiDataset) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiDataset)(nil)).Elem()
}

func (i *VertexAiDataset) ToVertexAiDatasetOutput() VertexAiDatasetOutput {
	return i.ToVertexAiDatasetOutputWithContext(context.Background())
}

func (i *VertexAiDataset) ToVertexAiDatasetOutputWithContext(ctx context.Context) VertexAiDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VertexAiDatasetOutput)
}

type VertexAiDatasetOutput struct{ *pulumi.OutputState }

func (VertexAiDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiDataset)(nil)).Elem()
}

func (o VertexAiDatasetOutput) ToVertexAiDatasetOutput() VertexAiDatasetOutput {
	return o
}

func (o VertexAiDatasetOutput) ToVertexAiDatasetOutputWithContext(ctx context.Context) VertexAiDatasetOutput {
	return o
}

// The timestamp of when the dataset was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits.
func (o VertexAiDatasetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8
// characters.
func (o VertexAiDatasetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o VertexAiDatasetOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be
// secured by this key.
func (o VertexAiDatasetOutput) EncryptionSpec() VertexAiDatasetEncryptionSpecPtrOutput {
	return o.ApplyT(func(v *VertexAiDataset) VertexAiDatasetEncryptionSpecPtrOutput { return v.EncryptionSpec }).(VertexAiDatasetEncryptionSpecPtrOutput)
}

// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o VertexAiDatasetOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is
// defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in
// gs://google-cloud-aiplatform/schema/dataset/metadata/.
func (o VertexAiDatasetOutput) MetadataSchemaUri() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringOutput { return v.MetadataSchemaUri }).(pulumi.StringOutput)
}

// The resource name of the Dataset. This value is set by Google.
func (o VertexAiDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VertexAiDatasetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of the dataset. eg us-central1
func (o VertexAiDatasetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o VertexAiDatasetOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o VertexAiDatasetOutput) Timeouts() VertexAiDatasetTimeoutsPtrOutput {
	return o.ApplyT(func(v *VertexAiDataset) VertexAiDatasetTimeoutsPtrOutput { return v.Timeouts }).(VertexAiDatasetTimeoutsPtrOutput)
}

// The timestamp of when the dataset was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
// nine fractional digits.
func (o VertexAiDatasetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o VertexAiDatasetOutput) VertexAiDatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiDataset) pulumi.StringOutput { return v.VertexAiDatasetId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VertexAiDatasetInput)(nil)).Elem(), &VertexAiDataset{})
	pulumi.RegisterOutputType(VertexAiDatasetOutput{})
}
