// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DnsManagedZoneIamBinding struct {
	pulumi.CustomResourceState

	Condition                  DnsManagedZoneIamBindingConditionPtrOutput `pulumi:"condition"`
	DnsManagedZoneIamBindingId pulumi.StringOutput                        `pulumi:"dnsManagedZoneIamBindingId"`
	Etag                       pulumi.StringOutput                        `pulumi:"etag"`
	ManagedZone                pulumi.StringOutput                        `pulumi:"managedZone"`
	Members                    pulumi.StringArrayOutput                   `pulumi:"members"`
	Project                    pulumi.StringOutput                        `pulumi:"project"`
	Role                       pulumi.StringOutput                        `pulumi:"role"`
}

// NewDnsManagedZoneIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDnsManagedZoneIamBinding(ctx *pulumi.Context,
	name string, args *DnsManagedZoneIamBindingArgs, opts ...pulumi.ResourceOption) (*DnsManagedZoneIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ManagedZone == nil {
		return nil, errors.New("invalid value for required argument 'ManagedZone'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DnsManagedZoneIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/dnsManagedZoneIamBinding:DnsManagedZoneIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsManagedZoneIamBinding gets an existing DnsManagedZoneIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsManagedZoneIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsManagedZoneIamBindingState, opts ...pulumi.ResourceOption) (*DnsManagedZoneIamBinding, error) {
	var resource DnsManagedZoneIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dnsManagedZoneIamBinding:DnsManagedZoneIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsManagedZoneIamBinding resources.
type dnsManagedZoneIamBindingState struct {
	Condition                  *DnsManagedZoneIamBindingCondition `pulumi:"condition"`
	DnsManagedZoneIamBindingId *string                            `pulumi:"dnsManagedZoneIamBindingId"`
	Etag                       *string                            `pulumi:"etag"`
	ManagedZone                *string                            `pulumi:"managedZone"`
	Members                    []string                           `pulumi:"members"`
	Project                    *string                            `pulumi:"project"`
	Role                       *string                            `pulumi:"role"`
}

type DnsManagedZoneIamBindingState struct {
	Condition                  DnsManagedZoneIamBindingConditionPtrInput
	DnsManagedZoneIamBindingId pulumi.StringPtrInput
	Etag                       pulumi.StringPtrInput
	ManagedZone                pulumi.StringPtrInput
	Members                    pulumi.StringArrayInput
	Project                    pulumi.StringPtrInput
	Role                       pulumi.StringPtrInput
}

func (DnsManagedZoneIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsManagedZoneIamBindingState)(nil)).Elem()
}

type dnsManagedZoneIamBindingArgs struct {
	Condition                  *DnsManagedZoneIamBindingCondition `pulumi:"condition"`
	DnsManagedZoneIamBindingId *string                            `pulumi:"dnsManagedZoneIamBindingId"`
	ManagedZone                string                             `pulumi:"managedZone"`
	Members                    []string                           `pulumi:"members"`
	Project                    *string                            `pulumi:"project"`
	Role                       string                             `pulumi:"role"`
}

// The set of arguments for constructing a DnsManagedZoneIamBinding resource.
type DnsManagedZoneIamBindingArgs struct {
	Condition                  DnsManagedZoneIamBindingConditionPtrInput
	DnsManagedZoneIamBindingId pulumi.StringPtrInput
	ManagedZone                pulumi.StringInput
	Members                    pulumi.StringArrayInput
	Project                    pulumi.StringPtrInput
	Role                       pulumi.StringInput
}

func (DnsManagedZoneIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsManagedZoneIamBindingArgs)(nil)).Elem()
}

type DnsManagedZoneIamBindingInput interface {
	pulumi.Input

	ToDnsManagedZoneIamBindingOutput() DnsManagedZoneIamBindingOutput
	ToDnsManagedZoneIamBindingOutputWithContext(ctx context.Context) DnsManagedZoneIamBindingOutput
}

func (*DnsManagedZoneIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsManagedZoneIamBinding)(nil)).Elem()
}

func (i *DnsManagedZoneIamBinding) ToDnsManagedZoneIamBindingOutput() DnsManagedZoneIamBindingOutput {
	return i.ToDnsManagedZoneIamBindingOutputWithContext(context.Background())
}

func (i *DnsManagedZoneIamBinding) ToDnsManagedZoneIamBindingOutputWithContext(ctx context.Context) DnsManagedZoneIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsManagedZoneIamBindingOutput)
}

type DnsManagedZoneIamBindingOutput struct{ *pulumi.OutputState }

func (DnsManagedZoneIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsManagedZoneIamBinding)(nil)).Elem()
}

func (o DnsManagedZoneIamBindingOutput) ToDnsManagedZoneIamBindingOutput() DnsManagedZoneIamBindingOutput {
	return o
}

func (o DnsManagedZoneIamBindingOutput) ToDnsManagedZoneIamBindingOutputWithContext(ctx context.Context) DnsManagedZoneIamBindingOutput {
	return o
}

func (o DnsManagedZoneIamBindingOutput) Condition() DnsManagedZoneIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamBinding) DnsManagedZoneIamBindingConditionPtrOutput { return v.Condition }).(DnsManagedZoneIamBindingConditionPtrOutput)
}

func (o DnsManagedZoneIamBindingOutput) DnsManagedZoneIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamBinding) pulumi.StringOutput { return v.DnsManagedZoneIamBindingId }).(pulumi.StringOutput)
}

func (o DnsManagedZoneIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DnsManagedZoneIamBindingOutput) ManagedZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamBinding) pulumi.StringOutput { return v.ManagedZone }).(pulumi.StringOutput)
}

func (o DnsManagedZoneIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DnsManagedZoneIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DnsManagedZoneIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsManagedZoneIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DnsManagedZoneIamBindingInput)(nil)).Elem(), &DnsManagedZoneIamBinding{})
	pulumi.RegisterOutputType(DnsManagedZoneIamBindingOutput{})
}
