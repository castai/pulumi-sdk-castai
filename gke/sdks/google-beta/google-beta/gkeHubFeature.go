// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeHubFeature struct {
	pulumi.CustomResourceState

	// Output only. When the Feature resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Output only. When the Feature resource was deleted.
	DeleteTime      pulumi.StringOutput    `pulumi:"deleteTime"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Optional. Fleet Default Membership Configuration.
	FleetDefaultMemberConfig GkeHubFeatureFleetDefaultMemberConfigPtrOutput `pulumi:"fleetDefaultMemberConfig"`
	GkeHubFeatureId          pulumi.StringOutput                            `pulumi:"gkeHubFeatureId"`
	// GCP labels for this Feature. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// The full, unique name of this Feature resource
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// State of the Feature resource itself.
	ResourceStates GkeHubFeatureResourceStateArrayOutput `pulumi:"resourceStates"`
	// Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be
	// unused.
	Spec GkeHubFeatureSpecPtrOutput `pulumi:"spec"`
	// Output only. The Hub-wide Feature state
	States GkeHubFeatureStateTypeArrayOutput `pulumi:"states"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput         `pulumi:"terraformLabels"`
	Timeouts        GkeHubFeatureTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. When the Feature resource was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewGkeHubFeature registers a new resource with the given unique name, arguments, and options.
func NewGkeHubFeature(ctx *pulumi.Context,
	name string, args *GkeHubFeatureArgs, opts ...pulumi.ResourceOption) (*GkeHubFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeHubFeature
	err = ctx.RegisterPackageResource("google-beta:index/gkeHubFeature:GkeHubFeature", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeHubFeature gets an existing GkeHubFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeHubFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeHubFeatureState, opts ...pulumi.ResourceOption) (*GkeHubFeature, error) {
	var resource GkeHubFeature
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/gkeHubFeature:GkeHubFeature", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeHubFeature resources.
type gkeHubFeatureState struct {
	// Output only. When the Feature resource was created.
	CreateTime *string `pulumi:"createTime"`
	// Output only. When the Feature resource was deleted.
	DeleteTime      *string           `pulumi:"deleteTime"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Optional. Fleet Default Membership Configuration.
	FleetDefaultMemberConfig *GkeHubFeatureFleetDefaultMemberConfig `pulumi:"fleetDefaultMemberConfig"`
	GkeHubFeatureId          *string                                `pulumi:"gkeHubFeatureId"`
	// GCP labels for this Feature. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// The full, unique name of this Feature resource
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// State of the Feature resource itself.
	ResourceStates []GkeHubFeatureResourceState `pulumi:"resourceStates"`
	// Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be
	// unused.
	Spec *GkeHubFeatureSpec `pulumi:"spec"`
	// Output only. The Hub-wide Feature state
	States []GkeHubFeatureStateType `pulumi:"states"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string      `pulumi:"terraformLabels"`
	Timeouts        *GkeHubFeatureTimeouts `pulumi:"timeouts"`
	// Output only. When the Feature resource was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type GkeHubFeatureState struct {
	// Output only. When the Feature resource was created.
	CreateTime pulumi.StringPtrInput
	// Output only. When the Feature resource was deleted.
	DeleteTime      pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Optional. Fleet Default Membership Configuration.
	FleetDefaultMemberConfig GkeHubFeatureFleetDefaultMemberConfigPtrInput
	GkeHubFeatureId          pulumi.StringPtrInput
	// GCP labels for this Feature. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// The full, unique name of this Feature resource
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// State of the Feature resource itself.
	ResourceStates GkeHubFeatureResourceStateArrayInput
	// Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be
	// unused.
	Spec GkeHubFeatureSpecPtrInput
	// Output only. The Hub-wide Feature state
	States GkeHubFeatureStateTypeArrayInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        GkeHubFeatureTimeoutsPtrInput
	// Output only. When the Feature resource was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (GkeHubFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubFeatureState)(nil)).Elem()
}

type gkeHubFeatureArgs struct {
	// Optional. Fleet Default Membership Configuration.
	FleetDefaultMemberConfig *GkeHubFeatureFleetDefaultMemberConfig `pulumi:"fleetDefaultMemberConfig"`
	GkeHubFeatureId          *string                                `pulumi:"gkeHubFeatureId"`
	// GCP labels for this Feature. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location string `pulumi:"location"`
	// The full, unique name of this Feature resource
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be
	// unused.
	Spec     *GkeHubFeatureSpec     `pulumi:"spec"`
	Timeouts *GkeHubFeatureTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a GkeHubFeature resource.
type GkeHubFeatureArgs struct {
	// Optional. Fleet Default Membership Configuration.
	FleetDefaultMemberConfig GkeHubFeatureFleetDefaultMemberConfigPtrInput
	GkeHubFeatureId          pulumi.StringPtrInput
	// GCP labels for this Feature. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringInput
	// The full, unique name of this Feature resource
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be
	// unused.
	Spec     GkeHubFeatureSpecPtrInput
	Timeouts GkeHubFeatureTimeoutsPtrInput
}

func (GkeHubFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubFeatureArgs)(nil)).Elem()
}

type GkeHubFeatureInput interface {
	pulumi.Input

	ToGkeHubFeatureOutput() GkeHubFeatureOutput
	ToGkeHubFeatureOutputWithContext(ctx context.Context) GkeHubFeatureOutput
}

func (*GkeHubFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubFeature)(nil)).Elem()
}

func (i *GkeHubFeature) ToGkeHubFeatureOutput() GkeHubFeatureOutput {
	return i.ToGkeHubFeatureOutputWithContext(context.Background())
}

func (i *GkeHubFeature) ToGkeHubFeatureOutputWithContext(ctx context.Context) GkeHubFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeHubFeatureOutput)
}

type GkeHubFeatureOutput struct{ *pulumi.OutputState }

func (GkeHubFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubFeature)(nil)).Elem()
}

func (o GkeHubFeatureOutput) ToGkeHubFeatureOutput() GkeHubFeatureOutput {
	return o
}

func (o GkeHubFeatureOutput) ToGkeHubFeatureOutputWithContext(ctx context.Context) GkeHubFeatureOutput {
	return o
}

// Output only. When the Feature resource was created.
func (o GkeHubFeatureOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Output only. When the Feature resource was deleted.
func (o GkeHubFeatureOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

func (o GkeHubFeatureOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Optional. Fleet Default Membership Configuration.
func (o GkeHubFeatureOutput) FleetDefaultMemberConfig() GkeHubFeatureFleetDefaultMemberConfigPtrOutput {
	return o.ApplyT(func(v *GkeHubFeature) GkeHubFeatureFleetDefaultMemberConfigPtrOutput {
		return v.FleetDefaultMemberConfig
	}).(GkeHubFeatureFleetDefaultMemberConfigPtrOutput)
}

func (o GkeHubFeatureOutput) GkeHubFeatureId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringOutput { return v.GkeHubFeatureId }).(pulumi.StringOutput)
}

// GCP labels for this Feature. **Note**: This field is non-authoritative, and will only manage the labels present in your
// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o GkeHubFeatureOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location for the resource
func (o GkeHubFeatureOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The full, unique name of this Feature resource
func (o GkeHubFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GkeHubFeatureOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// State of the Feature resource itself.
func (o GkeHubFeatureOutput) ResourceStates() GkeHubFeatureResourceStateArrayOutput {
	return o.ApplyT(func(v *GkeHubFeature) GkeHubFeatureResourceStateArrayOutput { return v.ResourceStates }).(GkeHubFeatureResourceStateArrayOutput)
}

// Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be
// unused.
func (o GkeHubFeatureOutput) Spec() GkeHubFeatureSpecPtrOutput {
	return o.ApplyT(func(v *GkeHubFeature) GkeHubFeatureSpecPtrOutput { return v.Spec }).(GkeHubFeatureSpecPtrOutput)
}

// Output only. The Hub-wide Feature state
func (o GkeHubFeatureOutput) States() GkeHubFeatureStateTypeArrayOutput {
	return o.ApplyT(func(v *GkeHubFeature) GkeHubFeatureStateTypeArrayOutput { return v.States }).(GkeHubFeatureStateTypeArrayOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o GkeHubFeatureOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o GkeHubFeatureOutput) Timeouts() GkeHubFeatureTimeoutsPtrOutput {
	return o.ApplyT(func(v *GkeHubFeature) GkeHubFeatureTimeoutsPtrOutput { return v.Timeouts }).(GkeHubFeatureTimeoutsPtrOutput)
}

// Output only. When the Feature resource was last updated.
func (o GkeHubFeatureOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFeature) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeHubFeatureInput)(nil)).Elem(), &GkeHubFeature{})
	pulumi.RegisterOutputType(GkeHubFeatureOutput{})
}
