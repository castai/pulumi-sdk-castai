// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EndpointsServiceConsumersIamPolicy struct {
	pulumi.CustomResourceState

	ConsumerProject                      pulumi.StringOutput `pulumi:"consumerProject"`
	EndpointsServiceConsumersIamPolicyId pulumi.StringOutput `pulumi:"endpointsServiceConsumersIamPolicyId"`
	Etag                                 pulumi.StringOutput `pulumi:"etag"`
	PolicyData                           pulumi.StringOutput `pulumi:"policyData"`
	ServiceName                          pulumi.StringOutput `pulumi:"serviceName"`
}

// NewEndpointsServiceConsumersIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewEndpointsServiceConsumersIamPolicy(ctx *pulumi.Context,
	name string, args *EndpointsServiceConsumersIamPolicyArgs, opts ...pulumi.ResourceOption) (*EndpointsServiceConsumersIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsumerProject == nil {
		return nil, errors.New("invalid value for required argument 'ConsumerProject'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource EndpointsServiceConsumersIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/endpointsServiceConsumersIamPolicy:EndpointsServiceConsumersIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointsServiceConsumersIamPolicy gets an existing EndpointsServiceConsumersIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointsServiceConsumersIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointsServiceConsumersIamPolicyState, opts ...pulumi.ResourceOption) (*EndpointsServiceConsumersIamPolicy, error) {
	var resource EndpointsServiceConsumersIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/endpointsServiceConsumersIamPolicy:EndpointsServiceConsumersIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointsServiceConsumersIamPolicy resources.
type endpointsServiceConsumersIamPolicyState struct {
	ConsumerProject                      *string `pulumi:"consumerProject"`
	EndpointsServiceConsumersIamPolicyId *string `pulumi:"endpointsServiceConsumersIamPolicyId"`
	Etag                                 *string `pulumi:"etag"`
	PolicyData                           *string `pulumi:"policyData"`
	ServiceName                          *string `pulumi:"serviceName"`
}

type EndpointsServiceConsumersIamPolicyState struct {
	ConsumerProject                      pulumi.StringPtrInput
	EndpointsServiceConsumersIamPolicyId pulumi.StringPtrInput
	Etag                                 pulumi.StringPtrInput
	PolicyData                           pulumi.StringPtrInput
	ServiceName                          pulumi.StringPtrInput
}

func (EndpointsServiceConsumersIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointsServiceConsumersIamPolicyState)(nil)).Elem()
}

type endpointsServiceConsumersIamPolicyArgs struct {
	ConsumerProject                      string  `pulumi:"consumerProject"`
	EndpointsServiceConsumersIamPolicyId *string `pulumi:"endpointsServiceConsumersIamPolicyId"`
	PolicyData                           string  `pulumi:"policyData"`
	ServiceName                          string  `pulumi:"serviceName"`
}

// The set of arguments for constructing a EndpointsServiceConsumersIamPolicy resource.
type EndpointsServiceConsumersIamPolicyArgs struct {
	ConsumerProject                      pulumi.StringInput
	EndpointsServiceConsumersIamPolicyId pulumi.StringPtrInput
	PolicyData                           pulumi.StringInput
	ServiceName                          pulumi.StringInput
}

func (EndpointsServiceConsumersIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointsServiceConsumersIamPolicyArgs)(nil)).Elem()
}

type EndpointsServiceConsumersIamPolicyInput interface {
	pulumi.Input

	ToEndpointsServiceConsumersIamPolicyOutput() EndpointsServiceConsumersIamPolicyOutput
	ToEndpointsServiceConsumersIamPolicyOutputWithContext(ctx context.Context) EndpointsServiceConsumersIamPolicyOutput
}

func (*EndpointsServiceConsumersIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsServiceConsumersIamPolicy)(nil)).Elem()
}

func (i *EndpointsServiceConsumersIamPolicy) ToEndpointsServiceConsumersIamPolicyOutput() EndpointsServiceConsumersIamPolicyOutput {
	return i.ToEndpointsServiceConsumersIamPolicyOutputWithContext(context.Background())
}

func (i *EndpointsServiceConsumersIamPolicy) ToEndpointsServiceConsumersIamPolicyOutputWithContext(ctx context.Context) EndpointsServiceConsumersIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsServiceConsumersIamPolicyOutput)
}

type EndpointsServiceConsumersIamPolicyOutput struct{ *pulumi.OutputState }

func (EndpointsServiceConsumersIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsServiceConsumersIamPolicy)(nil)).Elem()
}

func (o EndpointsServiceConsumersIamPolicyOutput) ToEndpointsServiceConsumersIamPolicyOutput() EndpointsServiceConsumersIamPolicyOutput {
	return o
}

func (o EndpointsServiceConsumersIamPolicyOutput) ToEndpointsServiceConsumersIamPolicyOutputWithContext(ctx context.Context) EndpointsServiceConsumersIamPolicyOutput {
	return o
}

func (o EndpointsServiceConsumersIamPolicyOutput) ConsumerProject() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceConsumersIamPolicy) pulumi.StringOutput { return v.ConsumerProject }).(pulumi.StringOutput)
}

func (o EndpointsServiceConsumersIamPolicyOutput) EndpointsServiceConsumersIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceConsumersIamPolicy) pulumi.StringOutput {
		return v.EndpointsServiceConsumersIamPolicyId
	}).(pulumi.StringOutput)
}

func (o EndpointsServiceConsumersIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceConsumersIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o EndpointsServiceConsumersIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceConsumersIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o EndpointsServiceConsumersIamPolicyOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceConsumersIamPolicy) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointsServiceConsumersIamPolicyInput)(nil)).Elem(), &EndpointsServiceConsumersIamPolicy{})
	pulumi.RegisterOutputType(EndpointsServiceConsumersIamPolicyOutput{})
}
