// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBigqueryDatapolicyDataPolicyIamPolicy(ctx *pulumi.Context, args *LookupBigqueryDatapolicyDataPolicyIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupBigqueryDatapolicyDataPolicyIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupBigqueryDatapolicyDataPolicyIamPolicyResult
	err = ctx.InvokePackage("google-beta:index/getBigqueryDatapolicyDataPolicyIamPolicy:getBigqueryDatapolicyDataPolicyIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBigqueryDatapolicyDataPolicyIamPolicy.
type LookupBigqueryDatapolicyDataPolicyIamPolicyArgs struct {
	DataPolicyId string  `pulumi:"dataPolicyId"`
	Id           *string `pulumi:"id"`
	Location     *string `pulumi:"location"`
	Project      *string `pulumi:"project"`
}

// A collection of values returned by getBigqueryDatapolicyDataPolicyIamPolicy.
type LookupBigqueryDatapolicyDataPolicyIamPolicyResult struct {
	DataPolicyId string `pulumi:"dataPolicyId"`
	Etag         string `pulumi:"etag"`
	Id           string `pulumi:"id"`
	Location     string `pulumi:"location"`
	PolicyData   string `pulumi:"policyData"`
	Project      string `pulumi:"project"`
}

func LookupBigqueryDatapolicyDataPolicyIamPolicyOutput(ctx *pulumi.Context, args LookupBigqueryDatapolicyDataPolicyIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput, error) {
			args := v.(LookupBigqueryDatapolicyDataPolicyIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getBigqueryDatapolicyDataPolicyIamPolicy:getBigqueryDatapolicyDataPolicyIamPolicy", args, LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput{}, options).(LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput), nil
		}).(LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput)
}

// A collection of arguments for invoking getBigqueryDatapolicyDataPolicyIamPolicy.
type LookupBigqueryDatapolicyDataPolicyIamPolicyOutputArgs struct {
	DataPolicyId pulumi.StringInput    `pulumi:"dataPolicyId"`
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Location     pulumi.StringPtrInput `pulumi:"location"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupBigqueryDatapolicyDataPolicyIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBigqueryDatapolicyDataPolicyIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getBigqueryDatapolicyDataPolicyIamPolicy.
type LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBigqueryDatapolicyDataPolicyIamPolicyResult)(nil)).Elem()
}

func (o LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput) ToLookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput() LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput {
	return o
}

func (o LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput) ToLookupBigqueryDatapolicyDataPolicyIamPolicyResultOutputWithContext(ctx context.Context) LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput {
	return o
}

func (o LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput) DataPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigqueryDatapolicyDataPolicyIamPolicyResult) string { return v.DataPolicyId }).(pulumi.StringOutput)
}

func (o LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigqueryDatapolicyDataPolicyIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigqueryDatapolicyDataPolicyIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigqueryDatapolicyDataPolicyIamPolicyResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigqueryDatapolicyDataPolicyIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigqueryDatapolicyDataPolicyIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBigqueryDatapolicyDataPolicyIamPolicyResultOutput{})
}
