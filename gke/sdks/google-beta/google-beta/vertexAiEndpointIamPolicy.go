// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VertexAiEndpointIamPolicy struct {
	pulumi.CustomResourceState

	Endpoint                    pulumi.StringOutput `pulumi:"endpoint"`
	Etag                        pulumi.StringOutput `pulumi:"etag"`
	Location                    pulumi.StringOutput `pulumi:"location"`
	PolicyData                  pulumi.StringOutput `pulumi:"policyData"`
	Project                     pulumi.StringOutput `pulumi:"project"`
	VertexAiEndpointIamPolicyId pulumi.StringOutput `pulumi:"vertexAiEndpointIamPolicyId"`
}

// NewVertexAiEndpointIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewVertexAiEndpointIamPolicy(ctx *pulumi.Context,
	name string, args *VertexAiEndpointIamPolicyArgs, opts ...pulumi.ResourceOption) (*VertexAiEndpointIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VertexAiEndpointIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/vertexAiEndpointIamPolicy:VertexAiEndpointIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVertexAiEndpointIamPolicy gets an existing VertexAiEndpointIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVertexAiEndpointIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VertexAiEndpointIamPolicyState, opts ...pulumi.ResourceOption) (*VertexAiEndpointIamPolicy, error) {
	var resource VertexAiEndpointIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vertexAiEndpointIamPolicy:VertexAiEndpointIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VertexAiEndpointIamPolicy resources.
type vertexAiEndpointIamPolicyState struct {
	Endpoint                    *string `pulumi:"endpoint"`
	Etag                        *string `pulumi:"etag"`
	Location                    *string `pulumi:"location"`
	PolicyData                  *string `pulumi:"policyData"`
	Project                     *string `pulumi:"project"`
	VertexAiEndpointIamPolicyId *string `pulumi:"vertexAiEndpointIamPolicyId"`
}

type VertexAiEndpointIamPolicyState struct {
	Endpoint                    pulumi.StringPtrInput
	Etag                        pulumi.StringPtrInput
	Location                    pulumi.StringPtrInput
	PolicyData                  pulumi.StringPtrInput
	Project                     pulumi.StringPtrInput
	VertexAiEndpointIamPolicyId pulumi.StringPtrInput
}

func (VertexAiEndpointIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiEndpointIamPolicyState)(nil)).Elem()
}

type vertexAiEndpointIamPolicyArgs struct {
	Endpoint                    string  `pulumi:"endpoint"`
	Location                    *string `pulumi:"location"`
	PolicyData                  string  `pulumi:"policyData"`
	Project                     *string `pulumi:"project"`
	VertexAiEndpointIamPolicyId *string `pulumi:"vertexAiEndpointIamPolicyId"`
}

// The set of arguments for constructing a VertexAiEndpointIamPolicy resource.
type VertexAiEndpointIamPolicyArgs struct {
	Endpoint                    pulumi.StringInput
	Location                    pulumi.StringPtrInput
	PolicyData                  pulumi.StringInput
	Project                     pulumi.StringPtrInput
	VertexAiEndpointIamPolicyId pulumi.StringPtrInput
}

func (VertexAiEndpointIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiEndpointIamPolicyArgs)(nil)).Elem()
}

type VertexAiEndpointIamPolicyInput interface {
	pulumi.Input

	ToVertexAiEndpointIamPolicyOutput() VertexAiEndpointIamPolicyOutput
	ToVertexAiEndpointIamPolicyOutputWithContext(ctx context.Context) VertexAiEndpointIamPolicyOutput
}

func (*VertexAiEndpointIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiEndpointIamPolicy)(nil)).Elem()
}

func (i *VertexAiEndpointIamPolicy) ToVertexAiEndpointIamPolicyOutput() VertexAiEndpointIamPolicyOutput {
	return i.ToVertexAiEndpointIamPolicyOutputWithContext(context.Background())
}

func (i *VertexAiEndpointIamPolicy) ToVertexAiEndpointIamPolicyOutputWithContext(ctx context.Context) VertexAiEndpointIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VertexAiEndpointIamPolicyOutput)
}

type VertexAiEndpointIamPolicyOutput struct{ *pulumi.OutputState }

func (VertexAiEndpointIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiEndpointIamPolicy)(nil)).Elem()
}

func (o VertexAiEndpointIamPolicyOutput) ToVertexAiEndpointIamPolicyOutput() VertexAiEndpointIamPolicyOutput {
	return o
}

func (o VertexAiEndpointIamPolicyOutput) ToVertexAiEndpointIamPolicyOutputWithContext(ctx context.Context) VertexAiEndpointIamPolicyOutput {
	return o
}

func (o VertexAiEndpointIamPolicyOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamPolicy) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o VertexAiEndpointIamPolicyOutput) VertexAiEndpointIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiEndpointIamPolicy) pulumi.StringOutput { return v.VertexAiEndpointIamPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VertexAiEndpointIamPolicyInput)(nil)).Elem(), &VertexAiEndpointIamPolicy{})
	pulumi.RegisterOutputType(VertexAiEndpointIamPolicyOutput{})
}
