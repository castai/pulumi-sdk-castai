// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VertexAiIndexEndpoint struct {
	pulumi.CustomResourceState

	// The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The description of the Index.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
	DisplayName     pulumi.StringOutput    `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Used to perform consistent read-modify-write updates.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The labels with user-defined metadata to organize your Indexes. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name of the Index.
	Name pulumi.StringOutput `pulumi:"name"`
	// The full name of the Google Compute Engine
	// [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be
	// peered. Private services access must already be configured for the network. If left unspecified, the index endpoint is
	// not peered with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
	// 'projects/{project}/global/networks/{network}'. Where '{project}' is a project number, as in '12345', and '{network}' is
	// network name.
	Network pulumi.StringPtrOutput `pulumi:"network"`
	// Optional. Configuration for private service connect. 'network' and 'privateServiceConnectConfig' are mutually exclusive.
	PrivateServiceConnectConfig VertexAiIndexEndpointPrivateServiceConnectConfigPtrOutput `pulumi:"privateServiceConnectConfig"`
	Project                     pulumi.StringOutput                                       `pulumi:"project"`
	// If publicEndpointEnabled is true, this field will be populated with the domain name to use for this index endpoint.
	PublicEndpointDomainName pulumi.StringOutput `pulumi:"publicEndpointDomainName"`
	// If true, the deployed index will be accessible through public endpoint.
	PublicEndpointEnabled pulumi.BoolPtrOutput `pulumi:"publicEndpointEnabled"`
	// The region of the index endpoint. eg us-central1
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                 `pulumi:"terraformLabels"`
	Timeouts        VertexAiIndexEndpointTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp of when the Index was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	UpdateTime              pulumi.StringOutput `pulumi:"updateTime"`
	VertexAiIndexEndpointId pulumi.StringOutput `pulumi:"vertexAiIndexEndpointId"`
}

// NewVertexAiIndexEndpoint registers a new resource with the given unique name, arguments, and options.
func NewVertexAiIndexEndpoint(ctx *pulumi.Context,
	name string, args *VertexAiIndexEndpointArgs, opts ...pulumi.ResourceOption) (*VertexAiIndexEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VertexAiIndexEndpoint
	err = ctx.RegisterPackageResource("google-beta:index/vertexAiIndexEndpoint:VertexAiIndexEndpoint", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVertexAiIndexEndpoint gets an existing VertexAiIndexEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVertexAiIndexEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VertexAiIndexEndpointState, opts ...pulumi.ResourceOption) (*VertexAiIndexEndpoint, error) {
	var resource VertexAiIndexEndpoint
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/vertexAiIndexEndpoint:VertexAiIndexEndpoint", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VertexAiIndexEndpoint resources.
type vertexAiIndexEndpointState struct {
	// The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// The description of the Index.
	Description *string `pulumi:"description"`
	// The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Used to perform consistent read-modify-write updates.
	Etag *string `pulumi:"etag"`
	// The labels with user-defined metadata to organize your Indexes. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name of the Index.
	Name *string `pulumi:"name"`
	// The full name of the Google Compute Engine
	// [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be
	// peered. Private services access must already be configured for the network. If left unspecified, the index endpoint is
	// not peered with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
	// 'projects/{project}/global/networks/{network}'. Where '{project}' is a project number, as in '12345', and '{network}' is
	// network name.
	Network *string `pulumi:"network"`
	// Optional. Configuration for private service connect. 'network' and 'privateServiceConnectConfig' are mutually exclusive.
	PrivateServiceConnectConfig *VertexAiIndexEndpointPrivateServiceConnectConfig `pulumi:"privateServiceConnectConfig"`
	Project                     *string                                           `pulumi:"project"`
	// If publicEndpointEnabled is true, this field will be populated with the domain name to use for this index endpoint.
	PublicEndpointDomainName *string `pulumi:"publicEndpointDomainName"`
	// If true, the deployed index will be accessible through public endpoint.
	PublicEndpointEnabled *bool `pulumi:"publicEndpointEnabled"`
	// The region of the index endpoint. eg us-central1
	Region *string `pulumi:"region"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string              `pulumi:"terraformLabels"`
	Timeouts        *VertexAiIndexEndpointTimeouts `pulumi:"timeouts"`
	// The timestamp of when the Index was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	UpdateTime              *string `pulumi:"updateTime"`
	VertexAiIndexEndpointId *string `pulumi:"vertexAiIndexEndpointId"`
}

type VertexAiIndexEndpointState struct {
	// The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime pulumi.StringPtrInput
	// The description of the Index.
	Description pulumi.StringPtrInput
	// The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Used to perform consistent read-modify-write updates.
	Etag pulumi.StringPtrInput
	// The labels with user-defined metadata to organize your Indexes. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The resource name of the Index.
	Name pulumi.StringPtrInput
	// The full name of the Google Compute Engine
	// [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be
	// peered. Private services access must already be configured for the network. If left unspecified, the index endpoint is
	// not peered with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
	// 'projects/{project}/global/networks/{network}'. Where '{project}' is a project number, as in '12345', and '{network}' is
	// network name.
	Network pulumi.StringPtrInput
	// Optional. Configuration for private service connect. 'network' and 'privateServiceConnectConfig' are mutually exclusive.
	PrivateServiceConnectConfig VertexAiIndexEndpointPrivateServiceConnectConfigPtrInput
	Project                     pulumi.StringPtrInput
	// If publicEndpointEnabled is true, this field will be populated with the domain name to use for this index endpoint.
	PublicEndpointDomainName pulumi.StringPtrInput
	// If true, the deployed index will be accessible through public endpoint.
	PublicEndpointEnabled pulumi.BoolPtrInput
	// The region of the index endpoint. eg us-central1
	Region pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        VertexAiIndexEndpointTimeoutsPtrInput
	// The timestamp of when the Index was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	UpdateTime              pulumi.StringPtrInput
	VertexAiIndexEndpointId pulumi.StringPtrInput
}

func (VertexAiIndexEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiIndexEndpointState)(nil)).Elem()
}

type vertexAiIndexEndpointArgs struct {
	// The description of the Index.
	Description *string `pulumi:"description"`
	// The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
	DisplayName string `pulumi:"displayName"`
	// The labels with user-defined metadata to organize your Indexes. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The full name of the Google Compute Engine
	// [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be
	// peered. Private services access must already be configured for the network. If left unspecified, the index endpoint is
	// not peered with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
	// 'projects/{project}/global/networks/{network}'. Where '{project}' is a project number, as in '12345', and '{network}' is
	// network name.
	Network *string `pulumi:"network"`
	// Optional. Configuration for private service connect. 'network' and 'privateServiceConnectConfig' are mutually exclusive.
	PrivateServiceConnectConfig *VertexAiIndexEndpointPrivateServiceConnectConfig `pulumi:"privateServiceConnectConfig"`
	Project                     *string                                           `pulumi:"project"`
	// If true, the deployed index will be accessible through public endpoint.
	PublicEndpointEnabled *bool `pulumi:"publicEndpointEnabled"`
	// The region of the index endpoint. eg us-central1
	Region                  *string                        `pulumi:"region"`
	Timeouts                *VertexAiIndexEndpointTimeouts `pulumi:"timeouts"`
	VertexAiIndexEndpointId *string                        `pulumi:"vertexAiIndexEndpointId"`
}

// The set of arguments for constructing a VertexAiIndexEndpoint resource.
type VertexAiIndexEndpointArgs struct {
	// The description of the Index.
	Description pulumi.StringPtrInput
	// The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
	DisplayName pulumi.StringInput
	// The labels with user-defined metadata to organize your Indexes. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// The full name of the Google Compute Engine
	// [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be
	// peered. Private services access must already be configured for the network. If left unspecified, the index endpoint is
	// not peered with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
	// 'projects/{project}/global/networks/{network}'. Where '{project}' is a project number, as in '12345', and '{network}' is
	// network name.
	Network pulumi.StringPtrInput
	// Optional. Configuration for private service connect. 'network' and 'privateServiceConnectConfig' are mutually exclusive.
	PrivateServiceConnectConfig VertexAiIndexEndpointPrivateServiceConnectConfigPtrInput
	Project                     pulumi.StringPtrInput
	// If true, the deployed index will be accessible through public endpoint.
	PublicEndpointEnabled pulumi.BoolPtrInput
	// The region of the index endpoint. eg us-central1
	Region                  pulumi.StringPtrInput
	Timeouts                VertexAiIndexEndpointTimeoutsPtrInput
	VertexAiIndexEndpointId pulumi.StringPtrInput
}

func (VertexAiIndexEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiIndexEndpointArgs)(nil)).Elem()
}

type VertexAiIndexEndpointInput interface {
	pulumi.Input

	ToVertexAiIndexEndpointOutput() VertexAiIndexEndpointOutput
	ToVertexAiIndexEndpointOutputWithContext(ctx context.Context) VertexAiIndexEndpointOutput
}

func (*VertexAiIndexEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiIndexEndpoint)(nil)).Elem()
}

func (i *VertexAiIndexEndpoint) ToVertexAiIndexEndpointOutput() VertexAiIndexEndpointOutput {
	return i.ToVertexAiIndexEndpointOutputWithContext(context.Background())
}

func (i *VertexAiIndexEndpoint) ToVertexAiIndexEndpointOutputWithContext(ctx context.Context) VertexAiIndexEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VertexAiIndexEndpointOutput)
}

type VertexAiIndexEndpointOutput struct{ *pulumi.OutputState }

func (VertexAiIndexEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiIndexEndpoint)(nil)).Elem()
}

func (o VertexAiIndexEndpointOutput) ToVertexAiIndexEndpointOutput() VertexAiIndexEndpointOutput {
	return o
}

func (o VertexAiIndexEndpointOutput) ToVertexAiIndexEndpointOutputWithContext(ctx context.Context) VertexAiIndexEndpointOutput {
	return o
}

// The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits.
func (o VertexAiIndexEndpointOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The description of the Index.
func (o VertexAiIndexEndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
func (o VertexAiIndexEndpointOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o VertexAiIndexEndpointOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Used to perform consistent read-modify-write updates.
func (o VertexAiIndexEndpointOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The labels with user-defined metadata to organize your Indexes. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o VertexAiIndexEndpointOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name of the Index.
func (o VertexAiIndexEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The full name of the Google Compute Engine
// [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be
// peered. Private services access must already be configured for the network. If left unspecified, the index endpoint is
// not peered with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
// 'projects/{project}/global/networks/{network}'. Where '{project}' is a project number, as in '12345', and '{network}' is
// network name.
func (o VertexAiIndexEndpointOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringPtrOutput { return v.Network }).(pulumi.StringPtrOutput)
}

// Optional. Configuration for private service connect. 'network' and 'privateServiceConnectConfig' are mutually exclusive.
func (o VertexAiIndexEndpointOutput) PrivateServiceConnectConfig() VertexAiIndexEndpointPrivateServiceConnectConfigPtrOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) VertexAiIndexEndpointPrivateServiceConnectConfigPtrOutput {
		return v.PrivateServiceConnectConfig
	}).(VertexAiIndexEndpointPrivateServiceConnectConfigPtrOutput)
}

func (o VertexAiIndexEndpointOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// If publicEndpointEnabled is true, this field will be populated with the domain name to use for this index endpoint.
func (o VertexAiIndexEndpointOutput) PublicEndpointDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringOutput { return v.PublicEndpointDomainName }).(pulumi.StringOutput)
}

// If true, the deployed index will be accessible through public endpoint.
func (o VertexAiIndexEndpointOutput) PublicEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.BoolPtrOutput { return v.PublicEndpointEnabled }).(pulumi.BoolPtrOutput)
}

// The region of the index endpoint. eg us-central1
func (o VertexAiIndexEndpointOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o VertexAiIndexEndpointOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o VertexAiIndexEndpointOutput) Timeouts() VertexAiIndexEndpointTimeoutsPtrOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) VertexAiIndexEndpointTimeoutsPtrOutput { return v.Timeouts }).(VertexAiIndexEndpointTimeoutsPtrOutput)
}

// The timestamp of when the Index was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits.
func (o VertexAiIndexEndpointOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o VertexAiIndexEndpointOutput) VertexAiIndexEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiIndexEndpoint) pulumi.StringOutput { return v.VertexAiIndexEndpointId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VertexAiIndexEndpointInput)(nil)).Elem(), &VertexAiIndexEndpoint{})
	pulumi.RegisterOutputType(VertexAiIndexEndpointOutput{})
}
