// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IapAppEngineServiceIamPolicy struct {
	pulumi.CustomResourceState

	AppId                          pulumi.StringOutput `pulumi:"appId"`
	Etag                           pulumi.StringOutput `pulumi:"etag"`
	IapAppEngineServiceIamPolicyId pulumi.StringOutput `pulumi:"iapAppEngineServiceIamPolicyId"`
	PolicyData                     pulumi.StringOutput `pulumi:"policyData"`
	Project                        pulumi.StringOutput `pulumi:"project"`
	Service                        pulumi.StringOutput `pulumi:"service"`
}

// NewIapAppEngineServiceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewIapAppEngineServiceIamPolicy(ctx *pulumi.Context,
	name string, args *IapAppEngineServiceIamPolicyArgs, opts ...pulumi.ResourceOption) (*IapAppEngineServiceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IapAppEngineServiceIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/iapAppEngineServiceIamPolicy:IapAppEngineServiceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIapAppEngineServiceIamPolicy gets an existing IapAppEngineServiceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIapAppEngineServiceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IapAppEngineServiceIamPolicyState, opts ...pulumi.ResourceOption) (*IapAppEngineServiceIamPolicy, error) {
	var resource IapAppEngineServiceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/iapAppEngineServiceIamPolicy:IapAppEngineServiceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IapAppEngineServiceIamPolicy resources.
type iapAppEngineServiceIamPolicyState struct {
	AppId                          *string `pulumi:"appId"`
	Etag                           *string `pulumi:"etag"`
	IapAppEngineServiceIamPolicyId *string `pulumi:"iapAppEngineServiceIamPolicyId"`
	PolicyData                     *string `pulumi:"policyData"`
	Project                        *string `pulumi:"project"`
	Service                        *string `pulumi:"service"`
}

type IapAppEngineServiceIamPolicyState struct {
	AppId                          pulumi.StringPtrInput
	Etag                           pulumi.StringPtrInput
	IapAppEngineServiceIamPolicyId pulumi.StringPtrInput
	PolicyData                     pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
	Service                        pulumi.StringPtrInput
}

func (IapAppEngineServiceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*iapAppEngineServiceIamPolicyState)(nil)).Elem()
}

type iapAppEngineServiceIamPolicyArgs struct {
	AppId                          string  `pulumi:"appId"`
	IapAppEngineServiceIamPolicyId *string `pulumi:"iapAppEngineServiceIamPolicyId"`
	PolicyData                     string  `pulumi:"policyData"`
	Project                        *string `pulumi:"project"`
	Service                        string  `pulumi:"service"`
}

// The set of arguments for constructing a IapAppEngineServiceIamPolicy resource.
type IapAppEngineServiceIamPolicyArgs struct {
	AppId                          pulumi.StringInput
	IapAppEngineServiceIamPolicyId pulumi.StringPtrInput
	PolicyData                     pulumi.StringInput
	Project                        pulumi.StringPtrInput
	Service                        pulumi.StringInput
}

func (IapAppEngineServiceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iapAppEngineServiceIamPolicyArgs)(nil)).Elem()
}

type IapAppEngineServiceIamPolicyInput interface {
	pulumi.Input

	ToIapAppEngineServiceIamPolicyOutput() IapAppEngineServiceIamPolicyOutput
	ToIapAppEngineServiceIamPolicyOutputWithContext(ctx context.Context) IapAppEngineServiceIamPolicyOutput
}

func (*IapAppEngineServiceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**IapAppEngineServiceIamPolicy)(nil)).Elem()
}

func (i *IapAppEngineServiceIamPolicy) ToIapAppEngineServiceIamPolicyOutput() IapAppEngineServiceIamPolicyOutput {
	return i.ToIapAppEngineServiceIamPolicyOutputWithContext(context.Background())
}

func (i *IapAppEngineServiceIamPolicy) ToIapAppEngineServiceIamPolicyOutputWithContext(ctx context.Context) IapAppEngineServiceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapAppEngineServiceIamPolicyOutput)
}

type IapAppEngineServiceIamPolicyOutput struct{ *pulumi.OutputState }

func (IapAppEngineServiceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapAppEngineServiceIamPolicy)(nil)).Elem()
}

func (o IapAppEngineServiceIamPolicyOutput) ToIapAppEngineServiceIamPolicyOutput() IapAppEngineServiceIamPolicyOutput {
	return o
}

func (o IapAppEngineServiceIamPolicyOutput) ToIapAppEngineServiceIamPolicyOutputWithContext(ctx context.Context) IapAppEngineServiceIamPolicyOutput {
	return o
}

func (o IapAppEngineServiceIamPolicyOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineServiceIamPolicy) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

func (o IapAppEngineServiceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineServiceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o IapAppEngineServiceIamPolicyOutput) IapAppEngineServiceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineServiceIamPolicy) pulumi.StringOutput { return v.IapAppEngineServiceIamPolicyId }).(pulumi.StringOutput)
}

func (o IapAppEngineServiceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineServiceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o IapAppEngineServiceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineServiceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o IapAppEngineServiceIamPolicyOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *IapAppEngineServiceIamPolicy) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IapAppEngineServiceIamPolicyInput)(nil)).Elem(), &IapAppEngineServiceIamPolicy{})
	pulumi.RegisterOutputType(IapAppEngineServiceIamPolicyOutput{})
}
