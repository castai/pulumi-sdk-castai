// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComposerUserWorkloadsSecret struct {
	pulumi.CustomResourceState

	ComposerUserWorkloadsSecretId pulumi.StringOutput `pulumi:"composerUserWorkloadsSecretId"`
	// A map of the secret data.
	Data pulumi.StringMapOutput `pulumi:"data"`
	// Name of the environment.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// Name of the secret.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The location or Compute Engine region for the environment.
	Region   pulumi.StringOutput                          `pulumi:"region"`
	Timeouts ComposerUserWorkloadsSecretTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComposerUserWorkloadsSecret registers a new resource with the given unique name, arguments, and options.
func NewComposerUserWorkloadsSecret(ctx *pulumi.Context,
	name string, args *ComposerUserWorkloadsSecretArgs, opts ...pulumi.ResourceOption) (*ComposerUserWorkloadsSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.Data != nil {
		args.Data = pulumi.ToSecret(args.Data).(pulumi.StringMapInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"data",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComposerUserWorkloadsSecret
	err = ctx.RegisterPackageResource("google-beta:index/composerUserWorkloadsSecret:ComposerUserWorkloadsSecret", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComposerUserWorkloadsSecret gets an existing ComposerUserWorkloadsSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComposerUserWorkloadsSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComposerUserWorkloadsSecretState, opts ...pulumi.ResourceOption) (*ComposerUserWorkloadsSecret, error) {
	var resource ComposerUserWorkloadsSecret
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/composerUserWorkloadsSecret:ComposerUserWorkloadsSecret", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComposerUserWorkloadsSecret resources.
type composerUserWorkloadsSecretState struct {
	ComposerUserWorkloadsSecretId *string `pulumi:"composerUserWorkloadsSecretId"`
	// A map of the secret data.
	Data map[string]string `pulumi:"data"`
	// Name of the environment.
	Environment *string `pulumi:"environment"`
	// Name of the secret.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The location or Compute Engine region for the environment.
	Region   *string                              `pulumi:"region"`
	Timeouts *ComposerUserWorkloadsSecretTimeouts `pulumi:"timeouts"`
}

type ComposerUserWorkloadsSecretState struct {
	ComposerUserWorkloadsSecretId pulumi.StringPtrInput
	// A map of the secret data.
	Data pulumi.StringMapInput
	// Name of the environment.
	Environment pulumi.StringPtrInput
	// Name of the secret.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The location or Compute Engine region for the environment.
	Region   pulumi.StringPtrInput
	Timeouts ComposerUserWorkloadsSecretTimeoutsPtrInput
}

func (ComposerUserWorkloadsSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*composerUserWorkloadsSecretState)(nil)).Elem()
}

type composerUserWorkloadsSecretArgs struct {
	ComposerUserWorkloadsSecretId *string `pulumi:"composerUserWorkloadsSecretId"`
	// A map of the secret data.
	Data map[string]string `pulumi:"data"`
	// Name of the environment.
	Environment string `pulumi:"environment"`
	// Name of the secret.
	Name *string `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The location or Compute Engine region for the environment.
	Region   *string                              `pulumi:"region"`
	Timeouts *ComposerUserWorkloadsSecretTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComposerUserWorkloadsSecret resource.
type ComposerUserWorkloadsSecretArgs struct {
	ComposerUserWorkloadsSecretId pulumi.StringPtrInput
	// A map of the secret data.
	Data pulumi.StringMapInput
	// Name of the environment.
	Environment pulumi.StringInput
	// Name of the secret.
	Name pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The location or Compute Engine region for the environment.
	Region   pulumi.StringPtrInput
	Timeouts ComposerUserWorkloadsSecretTimeoutsPtrInput
}

func (ComposerUserWorkloadsSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*composerUserWorkloadsSecretArgs)(nil)).Elem()
}

type ComposerUserWorkloadsSecretInput interface {
	pulumi.Input

	ToComposerUserWorkloadsSecretOutput() ComposerUserWorkloadsSecretOutput
	ToComposerUserWorkloadsSecretOutputWithContext(ctx context.Context) ComposerUserWorkloadsSecretOutput
}

func (*ComposerUserWorkloadsSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**ComposerUserWorkloadsSecret)(nil)).Elem()
}

func (i *ComposerUserWorkloadsSecret) ToComposerUserWorkloadsSecretOutput() ComposerUserWorkloadsSecretOutput {
	return i.ToComposerUserWorkloadsSecretOutputWithContext(context.Background())
}

func (i *ComposerUserWorkloadsSecret) ToComposerUserWorkloadsSecretOutputWithContext(ctx context.Context) ComposerUserWorkloadsSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComposerUserWorkloadsSecretOutput)
}

type ComposerUserWorkloadsSecretOutput struct{ *pulumi.OutputState }

func (ComposerUserWorkloadsSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComposerUserWorkloadsSecret)(nil)).Elem()
}

func (o ComposerUserWorkloadsSecretOutput) ToComposerUserWorkloadsSecretOutput() ComposerUserWorkloadsSecretOutput {
	return o
}

func (o ComposerUserWorkloadsSecretOutput) ToComposerUserWorkloadsSecretOutputWithContext(ctx context.Context) ComposerUserWorkloadsSecretOutput {
	return o
}

func (o ComposerUserWorkloadsSecretOutput) ComposerUserWorkloadsSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComposerUserWorkloadsSecret) pulumi.StringOutput { return v.ComposerUserWorkloadsSecretId }).(pulumi.StringOutput)
}

// A map of the secret data.
func (o ComposerUserWorkloadsSecretOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComposerUserWorkloadsSecret) pulumi.StringMapOutput { return v.Data }).(pulumi.StringMapOutput)
}

// Name of the environment.
func (o ComposerUserWorkloadsSecretOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *ComposerUserWorkloadsSecret) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// Name of the secret.
func (o ComposerUserWorkloadsSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComposerUserWorkloadsSecret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
func (o ComposerUserWorkloadsSecretOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComposerUserWorkloadsSecret) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The location or Compute Engine region for the environment.
func (o ComposerUserWorkloadsSecretOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComposerUserWorkloadsSecret) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComposerUserWorkloadsSecretOutput) Timeouts() ComposerUserWorkloadsSecretTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComposerUserWorkloadsSecret) ComposerUserWorkloadsSecretTimeoutsPtrOutput { return v.Timeouts }).(ComposerUserWorkloadsSecretTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComposerUserWorkloadsSecretInput)(nil)).Elem(), &ComposerUserWorkloadsSecret{})
	pulumi.RegisterOutputType(ComposerUserWorkloadsSecretOutput{})
}
