// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataformRepositoryReleaseConfig struct {
	pulumi.CustomResourceState

	// Optional. If set, fields of codeCompilationConfig override the default compilation settings that are specified in
	// dataform.json.
	CodeCompilationConfig DataformRepositoryReleaseConfigCodeCompilationConfigPtrOutput `pulumi:"codeCompilationConfig"`
	// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
	CronSchedule                      pulumi.StringPtrOutput `pulumi:"cronSchedule"`
	DataformRepositoryReleaseConfigId pulumi.StringOutput    `pulumi:"dataformRepositoryReleaseConfigId"`
	// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository.
	GitCommitish pulumi.StringOutput `pulumi:"gitCommitish"`
	// The release's name.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Records of the 10 most recent scheduled release attempts, ordered in in descending order of releaseTime. Updated
	// whenever automatic creation of a compilation result is triggered by cronSchedule.
	RecentScheduledReleaseRecords DataformRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput `pulumi:"recentScheduledReleaseRecords"`
	// A reference to the region
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// A reference to the Dataform repository
	Repository pulumi.StringPtrOutput `pulumi:"repository"`
	// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone
	// database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
	TimeZone pulumi.StringPtrOutput                           `pulumi:"timeZone"`
	Timeouts DataformRepositoryReleaseConfigTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDataformRepositoryReleaseConfig registers a new resource with the given unique name, arguments, and options.
func NewDataformRepositoryReleaseConfig(ctx *pulumi.Context,
	name string, args *DataformRepositoryReleaseConfigArgs, opts ...pulumi.ResourceOption) (*DataformRepositoryReleaseConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GitCommitish == nil {
		return nil, errors.New("invalid value for required argument 'GitCommitish'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataformRepositoryReleaseConfig
	err = ctx.RegisterPackageResource("google-beta:index/dataformRepositoryReleaseConfig:DataformRepositoryReleaseConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataformRepositoryReleaseConfig gets an existing DataformRepositoryReleaseConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataformRepositoryReleaseConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataformRepositoryReleaseConfigState, opts ...pulumi.ResourceOption) (*DataformRepositoryReleaseConfig, error) {
	var resource DataformRepositoryReleaseConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/dataformRepositoryReleaseConfig:DataformRepositoryReleaseConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataformRepositoryReleaseConfig resources.
type dataformRepositoryReleaseConfigState struct {
	// Optional. If set, fields of codeCompilationConfig override the default compilation settings that are specified in
	// dataform.json.
	CodeCompilationConfig *DataformRepositoryReleaseConfigCodeCompilationConfig `pulumi:"codeCompilationConfig"`
	// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
	CronSchedule                      *string `pulumi:"cronSchedule"`
	DataformRepositoryReleaseConfigId *string `pulumi:"dataformRepositoryReleaseConfigId"`
	// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository.
	GitCommitish *string `pulumi:"gitCommitish"`
	// The release's name.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Records of the 10 most recent scheduled release attempts, ordered in in descending order of releaseTime. Updated
	// whenever automatic creation of a compilation result is triggered by cronSchedule.
	RecentScheduledReleaseRecords []DataformRepositoryReleaseConfigRecentScheduledReleaseRecord `pulumi:"recentScheduledReleaseRecords"`
	// A reference to the region
	Region *string `pulumi:"region"`
	// A reference to the Dataform repository
	Repository *string `pulumi:"repository"`
	// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone
	// database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
	TimeZone *string                                  `pulumi:"timeZone"`
	Timeouts *DataformRepositoryReleaseConfigTimeouts `pulumi:"timeouts"`
}

type DataformRepositoryReleaseConfigState struct {
	// Optional. If set, fields of codeCompilationConfig override the default compilation settings that are specified in
	// dataform.json.
	CodeCompilationConfig DataformRepositoryReleaseConfigCodeCompilationConfigPtrInput
	// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
	CronSchedule                      pulumi.StringPtrInput
	DataformRepositoryReleaseConfigId pulumi.StringPtrInput
	// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository.
	GitCommitish pulumi.StringPtrInput
	// The release's name.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Records of the 10 most recent scheduled release attempts, ordered in in descending order of releaseTime. Updated
	// whenever automatic creation of a compilation result is triggered by cronSchedule.
	RecentScheduledReleaseRecords DataformRepositoryReleaseConfigRecentScheduledReleaseRecordArrayInput
	// A reference to the region
	Region pulumi.StringPtrInput
	// A reference to the Dataform repository
	Repository pulumi.StringPtrInput
	// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone
	// database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
	TimeZone pulumi.StringPtrInput
	Timeouts DataformRepositoryReleaseConfigTimeoutsPtrInput
}

func (DataformRepositoryReleaseConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataformRepositoryReleaseConfigState)(nil)).Elem()
}

type dataformRepositoryReleaseConfigArgs struct {
	// Optional. If set, fields of codeCompilationConfig override the default compilation settings that are specified in
	// dataform.json.
	CodeCompilationConfig *DataformRepositoryReleaseConfigCodeCompilationConfig `pulumi:"codeCompilationConfig"`
	// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
	CronSchedule                      *string `pulumi:"cronSchedule"`
	DataformRepositoryReleaseConfigId *string `pulumi:"dataformRepositoryReleaseConfigId"`
	// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository.
	GitCommitish string `pulumi:"gitCommitish"`
	// The release's name.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// A reference to the region
	Region *string `pulumi:"region"`
	// A reference to the Dataform repository
	Repository *string `pulumi:"repository"`
	// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone
	// database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
	TimeZone *string                                  `pulumi:"timeZone"`
	Timeouts *DataformRepositoryReleaseConfigTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DataformRepositoryReleaseConfig resource.
type DataformRepositoryReleaseConfigArgs struct {
	// Optional. If set, fields of codeCompilationConfig override the default compilation settings that are specified in
	// dataform.json.
	CodeCompilationConfig DataformRepositoryReleaseConfigCodeCompilationConfigPtrInput
	// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
	CronSchedule                      pulumi.StringPtrInput
	DataformRepositoryReleaseConfigId pulumi.StringPtrInput
	// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository.
	GitCommitish pulumi.StringInput
	// The release's name.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// A reference to the region
	Region pulumi.StringPtrInput
	// A reference to the Dataform repository
	Repository pulumi.StringPtrInput
	// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone
	// database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
	TimeZone pulumi.StringPtrInput
	Timeouts DataformRepositoryReleaseConfigTimeoutsPtrInput
}

func (DataformRepositoryReleaseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataformRepositoryReleaseConfigArgs)(nil)).Elem()
}

type DataformRepositoryReleaseConfigInput interface {
	pulumi.Input

	ToDataformRepositoryReleaseConfigOutput() DataformRepositoryReleaseConfigOutput
	ToDataformRepositoryReleaseConfigOutputWithContext(ctx context.Context) DataformRepositoryReleaseConfigOutput
}

func (*DataformRepositoryReleaseConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**DataformRepositoryReleaseConfig)(nil)).Elem()
}

func (i *DataformRepositoryReleaseConfig) ToDataformRepositoryReleaseConfigOutput() DataformRepositoryReleaseConfigOutput {
	return i.ToDataformRepositoryReleaseConfigOutputWithContext(context.Background())
}

func (i *DataformRepositoryReleaseConfig) ToDataformRepositoryReleaseConfigOutputWithContext(ctx context.Context) DataformRepositoryReleaseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataformRepositoryReleaseConfigOutput)
}

type DataformRepositoryReleaseConfigOutput struct{ *pulumi.OutputState }

func (DataformRepositoryReleaseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataformRepositoryReleaseConfig)(nil)).Elem()
}

func (o DataformRepositoryReleaseConfigOutput) ToDataformRepositoryReleaseConfigOutput() DataformRepositoryReleaseConfigOutput {
	return o
}

func (o DataformRepositoryReleaseConfigOutput) ToDataformRepositoryReleaseConfigOutputWithContext(ctx context.Context) DataformRepositoryReleaseConfigOutput {
	return o
}

// Optional. If set, fields of codeCompilationConfig override the default compilation settings that are specified in
// dataform.json.
func (o DataformRepositoryReleaseConfigOutput) CodeCompilationConfig() DataformRepositoryReleaseConfigCodeCompilationConfigPtrOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) DataformRepositoryReleaseConfigCodeCompilationConfigPtrOutput {
		return v.CodeCompilationConfig
	}).(DataformRepositoryReleaseConfigCodeCompilationConfigPtrOutput)
}

// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
func (o DataformRepositoryReleaseConfigOutput) CronSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) pulumi.StringPtrOutput { return v.CronSchedule }).(pulumi.StringPtrOutput)
}

func (o DataformRepositoryReleaseConfigOutput) DataformRepositoryReleaseConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) pulumi.StringOutput {
		return v.DataformRepositoryReleaseConfigId
	}).(pulumi.StringOutput)
}

// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository.
func (o DataformRepositoryReleaseConfigOutput) GitCommitish() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) pulumi.StringOutput { return v.GitCommitish }).(pulumi.StringOutput)
}

// The release's name.
func (o DataformRepositoryReleaseConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DataformRepositoryReleaseConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Records of the 10 most recent scheduled release attempts, ordered in in descending order of releaseTime. Updated
// whenever automatic creation of a compilation result is triggered by cronSchedule.
func (o DataformRepositoryReleaseConfigOutput) RecentScheduledReleaseRecords() DataformRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) DataformRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput {
		return v.RecentScheduledReleaseRecords
	}).(DataformRepositoryReleaseConfigRecentScheduledReleaseRecordArrayOutput)
}

// A reference to the region
func (o DataformRepositoryReleaseConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// A reference to the Dataform repository
func (o DataformRepositoryReleaseConfigOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) pulumi.StringPtrOutput { return v.Repository }).(pulumi.StringPtrOutput)
}

// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone
// database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
func (o DataformRepositoryReleaseConfigOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o DataformRepositoryReleaseConfigOutput) Timeouts() DataformRepositoryReleaseConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *DataformRepositoryReleaseConfig) DataformRepositoryReleaseConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(DataformRepositoryReleaseConfigTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataformRepositoryReleaseConfigInput)(nil)).Elem(), &DataformRepositoryReleaseConfig{})
	pulumi.RegisterOutputType(DataformRepositoryReleaseConfigOutput{})
}
