// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetContainerEngineVersions(ctx *pulumi.Context, args *GetContainerEngineVersionsArgs, opts ...pulumi.InvokeOption) (*GetContainerEngineVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetContainerEngineVersionsResult
	err = ctx.InvokePackage("google-beta:index/getContainerEngineVersions:getContainerEngineVersions", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerEngineVersions.
type GetContainerEngineVersionsArgs struct {
	Id            *string `pulumi:"id"`
	Location      *string `pulumi:"location"`
	Project       *string `pulumi:"project"`
	VersionPrefix *string `pulumi:"versionPrefix"`
}

// A collection of values returned by getContainerEngineVersions.
type GetContainerEngineVersionsResult struct {
	DefaultClusterVersion        string            `pulumi:"defaultClusterVersion"`
	Id                           string            `pulumi:"id"`
	LatestMasterVersion          string            `pulumi:"latestMasterVersion"`
	LatestNodeVersion            string            `pulumi:"latestNodeVersion"`
	Location                     *string           `pulumi:"location"`
	Project                      *string           `pulumi:"project"`
	ReleaseChannelDefaultVersion map[string]string `pulumi:"releaseChannelDefaultVersion"`
	ReleaseChannelLatestVersion  map[string]string `pulumi:"releaseChannelLatestVersion"`
	ValidMasterVersions          []string          `pulumi:"validMasterVersions"`
	ValidNodeVersions            []string          `pulumi:"validNodeVersions"`
	VersionPrefix                *string           `pulumi:"versionPrefix"`
}

func GetContainerEngineVersionsOutput(ctx *pulumi.Context, args GetContainerEngineVersionsOutputArgs, opts ...pulumi.InvokeOption) GetContainerEngineVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetContainerEngineVersionsResultOutput, error) {
			args := v.(GetContainerEngineVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetContainerEngineVersionsResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google-beta:index/getContainerEngineVersions:getContainerEngineVersions", args, GetContainerEngineVersionsResultOutput{}, options).(GetContainerEngineVersionsResultOutput), nil
		}).(GetContainerEngineVersionsResultOutput)
}

// A collection of arguments for invoking getContainerEngineVersions.
type GetContainerEngineVersionsOutputArgs struct {
	Id            pulumi.StringPtrInput `pulumi:"id"`
	Location      pulumi.StringPtrInput `pulumi:"location"`
	Project       pulumi.StringPtrInput `pulumi:"project"`
	VersionPrefix pulumi.StringPtrInput `pulumi:"versionPrefix"`
}

func (GetContainerEngineVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerEngineVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getContainerEngineVersions.
type GetContainerEngineVersionsResultOutput struct{ *pulumi.OutputState }

func (GetContainerEngineVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerEngineVersionsResult)(nil)).Elem()
}

func (o GetContainerEngineVersionsResultOutput) ToGetContainerEngineVersionsResultOutput() GetContainerEngineVersionsResultOutput {
	return o
}

func (o GetContainerEngineVersionsResultOutput) ToGetContainerEngineVersionsResultOutputWithContext(ctx context.Context) GetContainerEngineVersionsResultOutput {
	return o
}

func (o GetContainerEngineVersionsResultOutput) DefaultClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) string { return v.DefaultClusterVersion }).(pulumi.StringOutput)
}

func (o GetContainerEngineVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetContainerEngineVersionsResultOutput) LatestMasterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) string { return v.LatestMasterVersion }).(pulumi.StringOutput)
}

func (o GetContainerEngineVersionsResultOutput) LatestNodeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) string { return v.LatestNodeVersion }).(pulumi.StringOutput)
}

func (o GetContainerEngineVersionsResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o GetContainerEngineVersionsResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o GetContainerEngineVersionsResultOutput) ReleaseChannelDefaultVersion() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) map[string]string { return v.ReleaseChannelDefaultVersion }).(pulumi.StringMapOutput)
}

func (o GetContainerEngineVersionsResultOutput) ReleaseChannelLatestVersion() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) map[string]string { return v.ReleaseChannelLatestVersion }).(pulumi.StringMapOutput)
}

func (o GetContainerEngineVersionsResultOutput) ValidMasterVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) []string { return v.ValidMasterVersions }).(pulumi.StringArrayOutput)
}

func (o GetContainerEngineVersionsResultOutput) ValidNodeVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) []string { return v.ValidNodeVersions }).(pulumi.StringArrayOutput)
}

func (o GetContainerEngineVersionsResultOutput) VersionPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetContainerEngineVersionsResult) *string { return v.VersionPrefix }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetContainerEngineVersionsResultOutput{})
}
