// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HealthcareDicomStore struct {
	pulumi.CustomResourceState

	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                pulumi.StringOutput    `pulumi:"dataset"`
	EffectiveLabels        pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	HealthcareDicomStoreId pulumi.StringOutput    `pulumi:"healthcareDicomStoreId"`
	// User-supplied key-value pairs used to organize DICOM stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name for the DicomStore. ** Changing this property may recreate the Dicom store (removing all data) **
	Name pulumi.StringOutput `pulumi:"name"`
	// A nested object resource.
	NotificationConfig HealthcareDicomStoreNotificationConfigPtrOutput `pulumi:"notificationConfig"`
	// The fully qualified name of this dataset
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// To enable streaming to BigQuery, configure the streamConfigs object in your DICOM store. streamConfigs is an array, so
	// you can specify multiple BigQuery destinations. You can stream metadata from a single DICOM store to up to five BigQuery
	// tables in a BigQuery dataset.
	StreamConfigs HealthcareDicomStoreStreamConfigArrayOutput `pulumi:"streamConfigs"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                `pulumi:"terraformLabels"`
	Timeouts        HealthcareDicomStoreTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewHealthcareDicomStore registers a new resource with the given unique name, arguments, and options.
func NewHealthcareDicomStore(ctx *pulumi.Context,
	name string, args *HealthcareDicomStoreArgs, opts ...pulumi.ResourceOption) (*HealthcareDicomStore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Dataset == nil {
		return nil, errors.New("invalid value for required argument 'Dataset'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HealthcareDicomStore
	err = ctx.RegisterPackageResource("google-beta:index/healthcareDicomStore:HealthcareDicomStore", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthcareDicomStore gets an existing HealthcareDicomStore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthcareDicomStore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthcareDicomStoreState, opts ...pulumi.ResourceOption) (*HealthcareDicomStore, error) {
	var resource HealthcareDicomStore
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/healthcareDicomStore:HealthcareDicomStore", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthcareDicomStore resources.
type healthcareDicomStoreState struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                *string           `pulumi:"dataset"`
	EffectiveLabels        map[string]string `pulumi:"effectiveLabels"`
	HealthcareDicomStoreId *string           `pulumi:"healthcareDicomStoreId"`
	// User-supplied key-value pairs used to organize DICOM stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name for the DicomStore. ** Changing this property may recreate the Dicom store (removing all data) **
	Name *string `pulumi:"name"`
	// A nested object resource.
	NotificationConfig *HealthcareDicomStoreNotificationConfig `pulumi:"notificationConfig"`
	// The fully qualified name of this dataset
	SelfLink *string `pulumi:"selfLink"`
	// To enable streaming to BigQuery, configure the streamConfigs object in your DICOM store. streamConfigs is an array, so
	// you can specify multiple BigQuery destinations. You can stream metadata from a single DICOM store to up to five BigQuery
	// tables in a BigQuery dataset.
	StreamConfigs []HealthcareDicomStoreStreamConfig `pulumi:"streamConfigs"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string             `pulumi:"terraformLabels"`
	Timeouts        *HealthcareDicomStoreTimeouts `pulumi:"timeouts"`
}

type HealthcareDicomStoreState struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                pulumi.StringPtrInput
	EffectiveLabels        pulumi.StringMapInput
	HealthcareDicomStoreId pulumi.StringPtrInput
	// User-supplied key-value pairs used to organize DICOM stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The resource name for the DicomStore. ** Changing this property may recreate the Dicom store (removing all data) **
	Name pulumi.StringPtrInput
	// A nested object resource.
	NotificationConfig HealthcareDicomStoreNotificationConfigPtrInput
	// The fully qualified name of this dataset
	SelfLink pulumi.StringPtrInput
	// To enable streaming to BigQuery, configure the streamConfigs object in your DICOM store. streamConfigs is an array, so
	// you can specify multiple BigQuery destinations. You can stream metadata from a single DICOM store to up to five BigQuery
	// tables in a BigQuery dataset.
	StreamConfigs HealthcareDicomStoreStreamConfigArrayInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        HealthcareDicomStoreTimeoutsPtrInput
}

func (HealthcareDicomStoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareDicomStoreState)(nil)).Elem()
}

type healthcareDicomStoreArgs struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                string  `pulumi:"dataset"`
	HealthcareDicomStoreId *string `pulumi:"healthcareDicomStoreId"`
	// User-supplied key-value pairs used to organize DICOM stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name for the DicomStore. ** Changing this property may recreate the Dicom store (removing all data) **
	Name *string `pulumi:"name"`
	// A nested object resource.
	NotificationConfig *HealthcareDicomStoreNotificationConfig `pulumi:"notificationConfig"`
	// To enable streaming to BigQuery, configure the streamConfigs object in your DICOM store. streamConfigs is an array, so
	// you can specify multiple BigQuery destinations. You can stream metadata from a single DICOM store to up to five BigQuery
	// tables in a BigQuery dataset.
	StreamConfigs []HealthcareDicomStoreStreamConfig `pulumi:"streamConfigs"`
	Timeouts      *HealthcareDicomStoreTimeouts      `pulumi:"timeouts"`
}

// The set of arguments for constructing a HealthcareDicomStore resource.
type HealthcareDicomStoreArgs struct {
	// Identifies the dataset addressed by this request. Must be in the format
	// 'projects/{project}/locations/{location}/datasets/{dataset}'
	Dataset                pulumi.StringInput
	HealthcareDicomStoreId pulumi.StringPtrInput
	// User-supplied key-value pairs used to organize DICOM stores. Label keys must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
	// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
	// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
	// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The resource name for the DicomStore. ** Changing this property may recreate the Dicom store (removing all data) **
	Name pulumi.StringPtrInput
	// A nested object resource.
	NotificationConfig HealthcareDicomStoreNotificationConfigPtrInput
	// To enable streaming to BigQuery, configure the streamConfigs object in your DICOM store. streamConfigs is an array, so
	// you can specify multiple BigQuery destinations. You can stream metadata from a single DICOM store to up to five BigQuery
	// tables in a BigQuery dataset.
	StreamConfigs HealthcareDicomStoreStreamConfigArrayInput
	Timeouts      HealthcareDicomStoreTimeoutsPtrInput
}

func (HealthcareDicomStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareDicomStoreArgs)(nil)).Elem()
}

type HealthcareDicomStoreInput interface {
	pulumi.Input

	ToHealthcareDicomStoreOutput() HealthcareDicomStoreOutput
	ToHealthcareDicomStoreOutputWithContext(ctx context.Context) HealthcareDicomStoreOutput
}

func (*HealthcareDicomStore) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareDicomStore)(nil)).Elem()
}

func (i *HealthcareDicomStore) ToHealthcareDicomStoreOutput() HealthcareDicomStoreOutput {
	return i.ToHealthcareDicomStoreOutputWithContext(context.Background())
}

func (i *HealthcareDicomStore) ToHealthcareDicomStoreOutputWithContext(ctx context.Context) HealthcareDicomStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcareDicomStoreOutput)
}

type HealthcareDicomStoreOutput struct{ *pulumi.OutputState }

func (HealthcareDicomStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareDicomStore)(nil)).Elem()
}

func (o HealthcareDicomStoreOutput) ToHealthcareDicomStoreOutput() HealthcareDicomStoreOutput {
	return o
}

func (o HealthcareDicomStoreOutput) ToHealthcareDicomStoreOutputWithContext(ctx context.Context) HealthcareDicomStoreOutput {
	return o
}

// Identifies the dataset addressed by this request. Must be in the format
// 'projects/{project}/locations/{location}/datasets/{dataset}'
func (o HealthcareDicomStoreOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) pulumi.StringOutput { return v.Dataset }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o HealthcareDicomStoreOutput) HealthcareDicomStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) pulumi.StringOutput { return v.HealthcareDicomStoreId }).(pulumi.StringOutput)
}

// User-supplied key-value pairs used to organize DICOM stores. Label keys must be between 1 and 63 characters long, have a
// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
// [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62} Label values are optional, must be between 1 and 63 characters long, have a
// UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store. An object containing a list of
// "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is
// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o HealthcareDicomStoreOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name for the DicomStore. ** Changing this property may recreate the Dicom store (removing all data) **
func (o HealthcareDicomStoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A nested object resource.
func (o HealthcareDicomStoreOutput) NotificationConfig() HealthcareDicomStoreNotificationConfigPtrOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) HealthcareDicomStoreNotificationConfigPtrOutput {
		return v.NotificationConfig
	}).(HealthcareDicomStoreNotificationConfigPtrOutput)
}

// The fully qualified name of this dataset
func (o HealthcareDicomStoreOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// To enable streaming to BigQuery, configure the streamConfigs object in your DICOM store. streamConfigs is an array, so
// you can specify multiple BigQuery destinations. You can stream metadata from a single DICOM store to up to five BigQuery
// tables in a BigQuery dataset.
func (o HealthcareDicomStoreOutput) StreamConfigs() HealthcareDicomStoreStreamConfigArrayOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) HealthcareDicomStoreStreamConfigArrayOutput { return v.StreamConfigs }).(HealthcareDicomStoreStreamConfigArrayOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o HealthcareDicomStoreOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o HealthcareDicomStoreOutput) Timeouts() HealthcareDicomStoreTimeoutsPtrOutput {
	return o.ApplyT(func(v *HealthcareDicomStore) HealthcareDicomStoreTimeoutsPtrOutput { return v.Timeouts }).(HealthcareDicomStoreTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcareDicomStoreInput)(nil)).Elem(), &HealthcareDicomStore{})
	pulumi.RegisterOutputType(HealthcareDicomStoreOutput{})
}
