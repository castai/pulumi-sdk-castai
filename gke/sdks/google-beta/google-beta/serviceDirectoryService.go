// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceDirectoryService struct {
	pulumi.CustomResourceState

	// Metadata for the service. This data can be consumed by service clients. The entire metadata dictionary may contain up to
	// 2000 characters, spread across all key-value pairs. Metadata that goes beyond any these limits will be rejected.
	Metadata pulumi.StringMapOutput `pulumi:"metadata"`
	// The resource name for the service in the format 'projects/*/locations/*/namespaces/*/services/*'.
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource name of the namespace this service will belong to.
	Namespace                 pulumi.StringOutput `pulumi:"namespace"`
	ServiceDirectoryServiceId pulumi.StringOutput `pulumi:"serviceDirectoryServiceId"`
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	ServiceId pulumi.StringOutput                      `pulumi:"serviceId"`
	Timeouts  ServiceDirectoryServiceTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewServiceDirectoryService registers a new resource with the given unique name, arguments, and options.
func NewServiceDirectoryService(ctx *pulumi.Context,
	name string, args *ServiceDirectoryServiceArgs, opts ...pulumi.ResourceOption) (*ServiceDirectoryService, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceDirectoryService
	err = ctx.RegisterPackageResource("google-beta:index/serviceDirectoryService:ServiceDirectoryService", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceDirectoryService gets an existing ServiceDirectoryService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceDirectoryService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceDirectoryServiceState, opts ...pulumi.ResourceOption) (*ServiceDirectoryService, error) {
	var resource ServiceDirectoryService
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/serviceDirectoryService:ServiceDirectoryService", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceDirectoryService resources.
type serviceDirectoryServiceState struct {
	// Metadata for the service. This data can be consumed by service clients. The entire metadata dictionary may contain up to
	// 2000 characters, spread across all key-value pairs. Metadata that goes beyond any these limits will be rejected.
	Metadata map[string]string `pulumi:"metadata"`
	// The resource name for the service in the format 'projects/*/locations/*/namespaces/*/services/*'.
	Name *string `pulumi:"name"`
	// The resource name of the namespace this service will belong to.
	Namespace                 *string `pulumi:"namespace"`
	ServiceDirectoryServiceId *string `pulumi:"serviceDirectoryServiceId"`
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	ServiceId *string                          `pulumi:"serviceId"`
	Timeouts  *ServiceDirectoryServiceTimeouts `pulumi:"timeouts"`
}

type ServiceDirectoryServiceState struct {
	// Metadata for the service. This data can be consumed by service clients. The entire metadata dictionary may contain up to
	// 2000 characters, spread across all key-value pairs. Metadata that goes beyond any these limits will be rejected.
	Metadata pulumi.StringMapInput
	// The resource name for the service in the format 'projects/*/locations/*/namespaces/*/services/*'.
	Name pulumi.StringPtrInput
	// The resource name of the namespace this service will belong to.
	Namespace                 pulumi.StringPtrInput
	ServiceDirectoryServiceId pulumi.StringPtrInput
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	ServiceId pulumi.StringPtrInput
	Timeouts  ServiceDirectoryServiceTimeoutsPtrInput
}

func (ServiceDirectoryServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryServiceState)(nil)).Elem()
}

type serviceDirectoryServiceArgs struct {
	// Metadata for the service. This data can be consumed by service clients. The entire metadata dictionary may contain up to
	// 2000 characters, spread across all key-value pairs. Metadata that goes beyond any these limits will be rejected.
	Metadata map[string]string `pulumi:"metadata"`
	// The resource name of the namespace this service will belong to.
	Namespace                 string  `pulumi:"namespace"`
	ServiceDirectoryServiceId *string `pulumi:"serviceDirectoryServiceId"`
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	ServiceId string                           `pulumi:"serviceId"`
	Timeouts  *ServiceDirectoryServiceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ServiceDirectoryService resource.
type ServiceDirectoryServiceArgs struct {
	// Metadata for the service. This data can be consumed by service clients. The entire metadata dictionary may contain up to
	// 2000 characters, spread across all key-value pairs. Metadata that goes beyond any these limits will be rejected.
	Metadata pulumi.StringMapInput
	// The resource name of the namespace this service will belong to.
	Namespace                 pulumi.StringInput
	ServiceDirectoryServiceId pulumi.StringPtrInput
	// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
	ServiceId pulumi.StringInput
	Timeouts  ServiceDirectoryServiceTimeoutsPtrInput
}

func (ServiceDirectoryServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceDirectoryServiceArgs)(nil)).Elem()
}

type ServiceDirectoryServiceInput interface {
	pulumi.Input

	ToServiceDirectoryServiceOutput() ServiceDirectoryServiceOutput
	ToServiceDirectoryServiceOutputWithContext(ctx context.Context) ServiceDirectoryServiceOutput
}

func (*ServiceDirectoryService) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryService)(nil)).Elem()
}

func (i *ServiceDirectoryService) ToServiceDirectoryServiceOutput() ServiceDirectoryServiceOutput {
	return i.ToServiceDirectoryServiceOutputWithContext(context.Background())
}

func (i *ServiceDirectoryService) ToServiceDirectoryServiceOutputWithContext(ctx context.Context) ServiceDirectoryServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDirectoryServiceOutput)
}

type ServiceDirectoryServiceOutput struct{ *pulumi.OutputState }

func (ServiceDirectoryServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDirectoryService)(nil)).Elem()
}

func (o ServiceDirectoryServiceOutput) ToServiceDirectoryServiceOutput() ServiceDirectoryServiceOutput {
	return o
}

func (o ServiceDirectoryServiceOutput) ToServiceDirectoryServiceOutputWithContext(ctx context.Context) ServiceDirectoryServiceOutput {
	return o
}

// Metadata for the service. This data can be consumed by service clients. The entire metadata dictionary may contain up to
// 2000 characters, spread across all key-value pairs. Metadata that goes beyond any these limits will be rejected.
func (o ServiceDirectoryServiceOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceDirectoryService) pulumi.StringMapOutput { return v.Metadata }).(pulumi.StringMapOutput)
}

// The resource name for the service in the format 'projects/*/locations/*/namespaces/*/services/*'.
func (o ServiceDirectoryServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource name of the namespace this service will belong to.
func (o ServiceDirectoryServiceOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryService) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceOutput) ServiceDirectoryServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryService) pulumi.StringOutput { return v.ServiceDirectoryServiceId }).(pulumi.StringOutput)
}

// The Resource ID must be 1-63 characters long, including digits, lowercase letters or the hyphen character.
func (o ServiceDirectoryServiceOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceDirectoryService) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

func (o ServiceDirectoryServiceOutput) Timeouts() ServiceDirectoryServiceTimeoutsPtrOutput {
	return o.ApplyT(func(v *ServiceDirectoryService) ServiceDirectoryServiceTimeoutsPtrOutput { return v.Timeouts }).(ServiceDirectoryServiceTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDirectoryServiceInput)(nil)).Elem(), &ServiceDirectoryService{})
	pulumi.RegisterOutputType(ServiceDirectoryServiceOutput{})
}
