// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionBackendService struct {
	pulumi.CustomResourceState

	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec pulumi.Float64PtrOutput `pulumi:"affinityCookieTtlSec"`
	// The set of backends that serve this RegionBackendService.
	Backends ComputeRegionBackendServiceBackendArrayOutput `pulumi:"backends"`
	// Cloud CDN configuration for this BackendService.
	CdnPolicy ComputeRegionBackendServiceCdnPolicyPtrOutput `pulumi:"cdnPolicy"`
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	CircuitBreakers               ComputeRegionBackendServiceCircuitBreakersPtrOutput `pulumi:"circuitBreakers"`
	ComputeRegionBackendServiceId pulumi.StringOutput                                 `pulumi:"computeRegionBackendServiceId"`
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec pulumi.Float64PtrOutput `pulumi:"connectionDrainingTimeoutSec"`
	// Connection Tracking configuration for this BackendService. This is available only for Layer 4 Internal Load Balancing
	// and Network Load Balancing.
	ConnectionTrackingPolicy ComputeRegionBackendServiceConnectionTrackingPolicyPtrOutput `pulumi:"connectionTrackingPolicy"`
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies when all of the following are true - *
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED * 'protocol' is set to HTTP, HTTPS, or HTTP2 * 'locality_lb_policy'
	// is set to MAGLEV or RING_HASH
	ConsistentHash ComputeRegionBackendServiceConsistentHashPtrOutput `pulumi:"consistentHash"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// If true, enable Cloud CDN for this RegionBackendService.
	EnableCdn pulumi.BoolPtrOutput `pulumi:"enableCdn"`
	// Policy for failovers.
	FailoverPolicy ComputeRegionBackendServiceFailoverPolicyPtrOutput `pulumi:"failoverPolicy"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// The unique identifier for the resource. This identifier is defined by the server.
	GeneratedId pulumi.Float64Output `pulumi:"generatedId"`
	// The set of URLs to HealthCheck resources for health checking this RegionBackendService. Currently at most one health
	// check can be specified. A health check must be specified unless the backend service uses an internet or serverless NEG
	// as a backend.
	HealthChecks pulumi.StringArrayOutput `pulumi:"healthChecks"`
	// Settings for enabling Cloud Identity Aware Proxy
	Iap ComputeRegionBackendServiceIapPtrOutput `pulumi:"iap"`
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy pulumi.StringPtrOutput `pulumi:"ipAddressSelectionPolicy"`
	// Indicates what kind of load balancing this regional backend service will be used for. A backend service created for one
	// type of load balancing cannot be used with the other(s). For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "INTERNAL" Possible values:
	// ["EXTERNAL", "EXTERNAL_MANAGED", "INTERNAL", "INTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrOutput `pulumi:"loadBalancingScheme"`
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy pulumi.StringPtrOutput `pulumi:"localityLbPolicy"`
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig ComputeRegionBackendServiceLogConfigPtrOutput `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The URL of the network to which this backend service belongs. This field can only be specified when the load balancing
	// scheme is set to INTERNAL.
	Network pulumi.StringPtrOutput `pulumi:"network"`
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	OutlierDetection ComputeRegionBackendServiceOutlierDetectionPtrOutput `pulumi:"outlierDetection"`
	// A named port on a backend instance group representing the port for communication to the backend VMs in that group.
	// Required when the loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the
	// backends are instance groups. The named port must be defined on each backend instance group. This parameter has no
	// meaning if the backends are NEGs. API sets a default of "http" if not given. Must be omitted when the
	// loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
	PortName pulumi.StringOutput `pulumi:"portName"`
	Project  pulumi.StringOutput `pulumi:"project"`
	// The protocol this RegionBackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only
	// valid for beta HTTP/2 load balancer types and may result in errors if used with the GA API. Possible values: ["HTTP",
	// "HTTPS", "HTTP2", "SSL", "TCP", "UDP", "GRPC", "UNSPECIFIED"]
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// The Region in which the created backend service should reside. If it is not provided, the provider region is used.
	Region pulumi.StringOutput `pulumi:"region"`
	// The security policy associated with this backend service.
	SecurityPolicy pulumi.StringPtrOutput `pulumi:"securityPolicy"`
	SelfLink       pulumi.StringOutput    `pulumi:"selfLink"`
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "CLIENT_IP_NO_DESTINATION", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity pulumi.StringOutput `pulumi:"sessionAffinity"`
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie ComputeRegionBackendServiceStrongSessionAffinityCookiePtrOutput `pulumi:"strongSessionAffinityCookie"`
	// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing
	// and Internal HTTP(S) load balancing.
	Subsetting ComputeRegionBackendServiceSubsettingPtrOutput `pulumi:"subsetting"`
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec pulumi.Float64Output                         `pulumi:"timeoutSec"`
	Timeouts   ComputeRegionBackendServiceTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeRegionBackendService registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionBackendService(ctx *pulumi.Context,
	name string, args *ComputeRegionBackendServiceArgs, opts ...pulumi.ResourceOption) (*ComputeRegionBackendService, error) {
	if args == nil {
		args = &ComputeRegionBackendServiceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionBackendService
	err = ctx.RegisterPackageResource("google-beta:index/computeRegionBackendService:ComputeRegionBackendService", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionBackendService gets an existing ComputeRegionBackendService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionBackendService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionBackendServiceState, opts ...pulumi.ResourceOption) (*ComputeRegionBackendService, error) {
	var resource ComputeRegionBackendService
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeRegionBackendService:ComputeRegionBackendService", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionBackendService resources.
type computeRegionBackendServiceState struct {
	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec *float64 `pulumi:"affinityCookieTtlSec"`
	// The set of backends that serve this RegionBackendService.
	Backends []ComputeRegionBackendServiceBackend `pulumi:"backends"`
	// Cloud CDN configuration for this BackendService.
	CdnPolicy *ComputeRegionBackendServiceCdnPolicy `pulumi:"cdnPolicy"`
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	CircuitBreakers               *ComputeRegionBackendServiceCircuitBreakers `pulumi:"circuitBreakers"`
	ComputeRegionBackendServiceId *string                                     `pulumi:"computeRegionBackendServiceId"`
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec *float64 `pulumi:"connectionDrainingTimeoutSec"`
	// Connection Tracking configuration for this BackendService. This is available only for Layer 4 Internal Load Balancing
	// and Network Load Balancing.
	ConnectionTrackingPolicy *ComputeRegionBackendServiceConnectionTrackingPolicy `pulumi:"connectionTrackingPolicy"`
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies when all of the following are true - *
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED * 'protocol' is set to HTTP, HTTPS, or HTTP2 * 'locality_lb_policy'
	// is set to MAGLEV or RING_HASH
	ConsistentHash *ComputeRegionBackendServiceConsistentHash `pulumi:"consistentHash"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// If true, enable Cloud CDN for this RegionBackendService.
	EnableCdn *bool `pulumi:"enableCdn"`
	// Policy for failovers.
	FailoverPolicy *ComputeRegionBackendServiceFailoverPolicy `pulumi:"failoverPolicy"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint *string `pulumi:"fingerprint"`
	// The unique identifier for the resource. This identifier is defined by the server.
	GeneratedId *float64 `pulumi:"generatedId"`
	// The set of URLs to HealthCheck resources for health checking this RegionBackendService. Currently at most one health
	// check can be specified. A health check must be specified unless the backend service uses an internet or serverless NEG
	// as a backend.
	HealthChecks []string `pulumi:"healthChecks"`
	// Settings for enabling Cloud Identity Aware Proxy
	Iap *ComputeRegionBackendServiceIap `pulumi:"iap"`
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy *string `pulumi:"ipAddressSelectionPolicy"`
	// Indicates what kind of load balancing this regional backend service will be used for. A backend service created for one
	// type of load balancing cannot be used with the other(s). For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "INTERNAL" Possible values:
	// ["EXTERNAL", "EXTERNAL_MANAGED", "INTERNAL", "INTERNAL_MANAGED"]
	LoadBalancingScheme *string `pulumi:"loadBalancingScheme"`
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy *string `pulumi:"localityLbPolicy"`
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig *ComputeRegionBackendServiceLogConfig `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The URL of the network to which this backend service belongs. This field can only be specified when the load balancing
	// scheme is set to INTERNAL.
	Network *string `pulumi:"network"`
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	OutlierDetection *ComputeRegionBackendServiceOutlierDetection `pulumi:"outlierDetection"`
	// A named port on a backend instance group representing the port for communication to the backend VMs in that group.
	// Required when the loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the
	// backends are instance groups. The named port must be defined on each backend instance group. This parameter has no
	// meaning if the backends are NEGs. API sets a default of "http" if not given. Must be omitted when the
	// loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
	PortName *string `pulumi:"portName"`
	Project  *string `pulumi:"project"`
	// The protocol this RegionBackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only
	// valid for beta HTTP/2 load balancer types and may result in errors if used with the GA API. Possible values: ["HTTP",
	// "HTTPS", "HTTP2", "SSL", "TCP", "UDP", "GRPC", "UNSPECIFIED"]
	Protocol *string `pulumi:"protocol"`
	// The Region in which the created backend service should reside. If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The security policy associated with this backend service.
	SecurityPolicy *string `pulumi:"securityPolicy"`
	SelfLink       *string `pulumi:"selfLink"`
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "CLIENT_IP_NO_DESTINATION", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie *ComputeRegionBackendServiceStrongSessionAffinityCookie `pulumi:"strongSessionAffinityCookie"`
	// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing
	// and Internal HTTP(S) load balancing.
	Subsetting *ComputeRegionBackendServiceSubsetting `pulumi:"subsetting"`
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec *float64                             `pulumi:"timeoutSec"`
	Timeouts   *ComputeRegionBackendServiceTimeouts `pulumi:"timeouts"`
}

type ComputeRegionBackendServiceState struct {
	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec pulumi.Float64PtrInput
	// The set of backends that serve this RegionBackendService.
	Backends ComputeRegionBackendServiceBackendArrayInput
	// Cloud CDN configuration for this BackendService.
	CdnPolicy ComputeRegionBackendServiceCdnPolicyPtrInput
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	CircuitBreakers               ComputeRegionBackendServiceCircuitBreakersPtrInput
	ComputeRegionBackendServiceId pulumi.StringPtrInput
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec pulumi.Float64PtrInput
	// Connection Tracking configuration for this BackendService. This is available only for Layer 4 Internal Load Balancing
	// and Network Load Balancing.
	ConnectionTrackingPolicy ComputeRegionBackendServiceConnectionTrackingPolicyPtrInput
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies when all of the following are true - *
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED * 'protocol' is set to HTTP, HTTPS, or HTTP2 * 'locality_lb_policy'
	// is set to MAGLEV or RING_HASH
	ConsistentHash ComputeRegionBackendServiceConsistentHashPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// If true, enable Cloud CDN for this RegionBackendService.
	EnableCdn pulumi.BoolPtrInput
	// Policy for failovers.
	FailoverPolicy ComputeRegionBackendServiceFailoverPolicyPtrInput
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint pulumi.StringPtrInput
	// The unique identifier for the resource. This identifier is defined by the server.
	GeneratedId pulumi.Float64PtrInput
	// The set of URLs to HealthCheck resources for health checking this RegionBackendService. Currently at most one health
	// check can be specified. A health check must be specified unless the backend service uses an internet or serverless NEG
	// as a backend.
	HealthChecks pulumi.StringArrayInput
	// Settings for enabling Cloud Identity Aware Proxy
	Iap ComputeRegionBackendServiceIapPtrInput
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy pulumi.StringPtrInput
	// Indicates what kind of load balancing this regional backend service will be used for. A backend service created for one
	// type of load balancing cannot be used with the other(s). For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "INTERNAL" Possible values:
	// ["EXTERNAL", "EXTERNAL_MANAGED", "INTERNAL", "INTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrInput
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy pulumi.StringPtrInput
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig ComputeRegionBackendServiceLogConfigPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The URL of the network to which this backend service belongs. This field can only be specified when the load balancing
	// scheme is set to INTERNAL.
	Network pulumi.StringPtrInput
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	OutlierDetection ComputeRegionBackendServiceOutlierDetectionPtrInput
	// A named port on a backend instance group representing the port for communication to the backend VMs in that group.
	// Required when the loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the
	// backends are instance groups. The named port must be defined on each backend instance group. This parameter has no
	// meaning if the backends are NEGs. API sets a default of "http" if not given. Must be omitted when the
	// loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
	PortName pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// The protocol this RegionBackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only
	// valid for beta HTTP/2 load balancer types and may result in errors if used with the GA API. Possible values: ["HTTP",
	// "HTTPS", "HTTP2", "SSL", "TCP", "UDP", "GRPC", "UNSPECIFIED"]
	Protocol pulumi.StringPtrInput
	// The Region in which the created backend service should reside. If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The security policy associated with this backend service.
	SecurityPolicy pulumi.StringPtrInput
	SelfLink       pulumi.StringPtrInput
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "CLIENT_IP_NO_DESTINATION", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity pulumi.StringPtrInput
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie ComputeRegionBackendServiceStrongSessionAffinityCookiePtrInput
	// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing
	// and Internal HTTP(S) load balancing.
	Subsetting ComputeRegionBackendServiceSubsettingPtrInput
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec pulumi.Float64PtrInput
	Timeouts   ComputeRegionBackendServiceTimeoutsPtrInput
}

func (ComputeRegionBackendServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionBackendServiceState)(nil)).Elem()
}

type computeRegionBackendServiceArgs struct {
	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec *float64 `pulumi:"affinityCookieTtlSec"`
	// The set of backends that serve this RegionBackendService.
	Backends []ComputeRegionBackendServiceBackend `pulumi:"backends"`
	// Cloud CDN configuration for this BackendService.
	CdnPolicy *ComputeRegionBackendServiceCdnPolicy `pulumi:"cdnPolicy"`
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	CircuitBreakers               *ComputeRegionBackendServiceCircuitBreakers `pulumi:"circuitBreakers"`
	ComputeRegionBackendServiceId *string                                     `pulumi:"computeRegionBackendServiceId"`
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec *float64 `pulumi:"connectionDrainingTimeoutSec"`
	// Connection Tracking configuration for this BackendService. This is available only for Layer 4 Internal Load Balancing
	// and Network Load Balancing.
	ConnectionTrackingPolicy *ComputeRegionBackendServiceConnectionTrackingPolicy `pulumi:"connectionTrackingPolicy"`
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies when all of the following are true - *
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED * 'protocol' is set to HTTP, HTTPS, or HTTP2 * 'locality_lb_policy'
	// is set to MAGLEV or RING_HASH
	ConsistentHash *ComputeRegionBackendServiceConsistentHash `pulumi:"consistentHash"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// If true, enable Cloud CDN for this RegionBackendService.
	EnableCdn *bool `pulumi:"enableCdn"`
	// Policy for failovers.
	FailoverPolicy *ComputeRegionBackendServiceFailoverPolicy `pulumi:"failoverPolicy"`
	// The set of URLs to HealthCheck resources for health checking this RegionBackendService. Currently at most one health
	// check can be specified. A health check must be specified unless the backend service uses an internet or serverless NEG
	// as a backend.
	HealthChecks []string `pulumi:"healthChecks"`
	// Settings for enabling Cloud Identity Aware Proxy
	Iap *ComputeRegionBackendServiceIap `pulumi:"iap"`
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy *string `pulumi:"ipAddressSelectionPolicy"`
	// Indicates what kind of load balancing this regional backend service will be used for. A backend service created for one
	// type of load balancing cannot be used with the other(s). For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "INTERNAL" Possible values:
	// ["EXTERNAL", "EXTERNAL_MANAGED", "INTERNAL", "INTERNAL_MANAGED"]
	LoadBalancingScheme *string `pulumi:"loadBalancingScheme"`
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy *string `pulumi:"localityLbPolicy"`
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig *ComputeRegionBackendServiceLogConfig `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The URL of the network to which this backend service belongs. This field can only be specified when the load balancing
	// scheme is set to INTERNAL.
	Network *string `pulumi:"network"`
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	OutlierDetection *ComputeRegionBackendServiceOutlierDetection `pulumi:"outlierDetection"`
	// A named port on a backend instance group representing the port for communication to the backend VMs in that group.
	// Required when the loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the
	// backends are instance groups. The named port must be defined on each backend instance group. This parameter has no
	// meaning if the backends are NEGs. API sets a default of "http" if not given. Must be omitted when the
	// loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
	PortName *string `pulumi:"portName"`
	Project  *string `pulumi:"project"`
	// The protocol this RegionBackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only
	// valid for beta HTTP/2 load balancer types and may result in errors if used with the GA API. Possible values: ["HTTP",
	// "HTTPS", "HTTP2", "SSL", "TCP", "UDP", "GRPC", "UNSPECIFIED"]
	Protocol *string `pulumi:"protocol"`
	// The Region in which the created backend service should reside. If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The security policy associated with this backend service.
	SecurityPolicy *string `pulumi:"securityPolicy"`
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "CLIENT_IP_NO_DESTINATION", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie *ComputeRegionBackendServiceStrongSessionAffinityCookie `pulumi:"strongSessionAffinityCookie"`
	// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing
	// and Internal HTTP(S) load balancing.
	Subsetting *ComputeRegionBackendServiceSubsetting `pulumi:"subsetting"`
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec *float64                             `pulumi:"timeoutSec"`
	Timeouts   *ComputeRegionBackendServiceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeRegionBackendService resource.
type ComputeRegionBackendServiceArgs struct {
	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec pulumi.Float64PtrInput
	// The set of backends that serve this RegionBackendService.
	Backends ComputeRegionBackendServiceBackendArrayInput
	// Cloud CDN configuration for this BackendService.
	CdnPolicy ComputeRegionBackendServiceCdnPolicyPtrInput
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	CircuitBreakers               ComputeRegionBackendServiceCircuitBreakersPtrInput
	ComputeRegionBackendServiceId pulumi.StringPtrInput
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec pulumi.Float64PtrInput
	// Connection Tracking configuration for this BackendService. This is available only for Layer 4 Internal Load Balancing
	// and Network Load Balancing.
	ConnectionTrackingPolicy ComputeRegionBackendServiceConnectionTrackingPolicyPtrInput
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies when all of the following are true - *
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED * 'protocol' is set to HTTP, HTTPS, or HTTP2 * 'locality_lb_policy'
	// is set to MAGLEV or RING_HASH
	ConsistentHash ComputeRegionBackendServiceConsistentHashPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// If true, enable Cloud CDN for this RegionBackendService.
	EnableCdn pulumi.BoolPtrInput
	// Policy for failovers.
	FailoverPolicy ComputeRegionBackendServiceFailoverPolicyPtrInput
	// The set of URLs to HealthCheck resources for health checking this RegionBackendService. Currently at most one health
	// check can be specified. A health check must be specified unless the backend service uses an internet or serverless NEG
	// as a backend.
	HealthChecks pulumi.StringArrayInput
	// Settings for enabling Cloud Identity Aware Proxy
	Iap ComputeRegionBackendServiceIapPtrInput
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy pulumi.StringPtrInput
	// Indicates what kind of load balancing this regional backend service will be used for. A backend service created for one
	// type of load balancing cannot be used with the other(s). For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "INTERNAL" Possible values:
	// ["EXTERNAL", "EXTERNAL_MANAGED", "INTERNAL", "INTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrInput
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy pulumi.StringPtrInput
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig ComputeRegionBackendServiceLogConfigPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The URL of the network to which this backend service belongs. This field can only be specified when the load balancing
	// scheme is set to INTERNAL.
	Network pulumi.StringPtrInput
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. This field is applicable only when the
	// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
	OutlierDetection ComputeRegionBackendServiceOutlierDetectionPtrInput
	// A named port on a backend instance group representing the port for communication to the backend VMs in that group.
	// Required when the loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the
	// backends are instance groups. The named port must be defined on each backend instance group. This parameter has no
	// meaning if the backends are NEGs. API sets a default of "http" if not given. Must be omitted when the
	// loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
	PortName pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// The protocol this RegionBackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only
	// valid for beta HTTP/2 load balancer types and may result in errors if used with the GA API. Possible values: ["HTTP",
	// "HTTPS", "HTTP2", "SSL", "TCP", "UDP", "GRPC", "UNSPECIFIED"]
	Protocol pulumi.StringPtrInput
	// The Region in which the created backend service should reside. If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The security policy associated with this backend service.
	SecurityPolicy pulumi.StringPtrInput
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "CLIENT_IP_NO_DESTINATION", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity pulumi.StringPtrInput
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie ComputeRegionBackendServiceStrongSessionAffinityCookiePtrInput
	// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing
	// and Internal HTTP(S) load balancing.
	Subsetting ComputeRegionBackendServiceSubsettingPtrInput
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec pulumi.Float64PtrInput
	Timeouts   ComputeRegionBackendServiceTimeoutsPtrInput
}

func (ComputeRegionBackendServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionBackendServiceArgs)(nil)).Elem()
}

type ComputeRegionBackendServiceInput interface {
	pulumi.Input

	ToComputeRegionBackendServiceOutput() ComputeRegionBackendServiceOutput
	ToComputeRegionBackendServiceOutputWithContext(ctx context.Context) ComputeRegionBackendServiceOutput
}

func (*ComputeRegionBackendService) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionBackendService)(nil)).Elem()
}

func (i *ComputeRegionBackendService) ToComputeRegionBackendServiceOutput() ComputeRegionBackendServiceOutput {
	return i.ToComputeRegionBackendServiceOutputWithContext(context.Background())
}

func (i *ComputeRegionBackendService) ToComputeRegionBackendServiceOutputWithContext(ctx context.Context) ComputeRegionBackendServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionBackendServiceOutput)
}

type ComputeRegionBackendServiceOutput struct{ *pulumi.OutputState }

func (ComputeRegionBackendServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionBackendService)(nil)).Elem()
}

func (o ComputeRegionBackendServiceOutput) ToComputeRegionBackendServiceOutput() ComputeRegionBackendServiceOutput {
	return o
}

func (o ComputeRegionBackendServiceOutput) ToComputeRegionBackendServiceOutputWithContext(ctx context.Context) ComputeRegionBackendServiceOutput {
	return o
}

// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
// load balancing scheme is INTERNAL, this field is not used.
func (o ComputeRegionBackendServiceOutput) AffinityCookieTtlSec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.Float64PtrOutput { return v.AffinityCookieTtlSec }).(pulumi.Float64PtrOutput)
}

// The set of backends that serve this RegionBackendService.
func (o ComputeRegionBackendServiceOutput) Backends() ComputeRegionBackendServiceBackendArrayOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceBackendArrayOutput { return v.Backends }).(ComputeRegionBackendServiceBackendArrayOutput)
}

// Cloud CDN configuration for this BackendService.
func (o ComputeRegionBackendServiceOutput) CdnPolicy() ComputeRegionBackendServiceCdnPolicyPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceCdnPolicyPtrOutput { return v.CdnPolicy }).(ComputeRegionBackendServiceCdnPolicyPtrOutput)
}

// Settings controlling the volume of connections to a backend service. This field is applicable only when the
// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
func (o ComputeRegionBackendServiceOutput) CircuitBreakers() ComputeRegionBackendServiceCircuitBreakersPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceCircuitBreakersPtrOutput {
		return v.CircuitBreakers
	}).(ComputeRegionBackendServiceCircuitBreakersPtrOutput)
}

func (o ComputeRegionBackendServiceOutput) ComputeRegionBackendServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.ComputeRegionBackendServiceId }).(pulumi.StringOutput)
}

// Time for which instance will be drained (not accept new connections, but still work to finish started).
func (o ComputeRegionBackendServiceOutput) ConnectionDrainingTimeoutSec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.Float64PtrOutput { return v.ConnectionDrainingTimeoutSec }).(pulumi.Float64PtrOutput)
}

// Connection Tracking configuration for this BackendService. This is available only for Layer 4 Internal Load Balancing
// and Network Load Balancing.
func (o ComputeRegionBackendServiceOutput) ConnectionTrackingPolicy() ComputeRegionBackendServiceConnectionTrackingPolicyPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceConnectionTrackingPolicyPtrOutput {
		return v.ConnectionTrackingPolicy
	}).(ComputeRegionBackendServiceConnectionTrackingPolicyPtrOutput)
}

// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
// destination host will be lost when one or more hosts are added/removed from the destination service. This field
// specifies parameters that control consistent hashing. This field only applies when all of the following are true - *
// 'load_balancing_scheme' is set to INTERNAL_MANAGED * 'protocol' is set to HTTP, HTTPS, or HTTP2 * 'locality_lb_policy'
// is set to MAGLEV or RING_HASH
func (o ComputeRegionBackendServiceOutput) ConsistentHash() ComputeRegionBackendServiceConsistentHashPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceConsistentHashPtrOutput {
		return v.ConsistentHash
	}).(ComputeRegionBackendServiceConsistentHashPtrOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeRegionBackendServiceOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource.
func (o ComputeRegionBackendServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// If true, enable Cloud CDN for this RegionBackendService.
func (o ComputeRegionBackendServiceOutput) EnableCdn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.BoolPtrOutput { return v.EnableCdn }).(pulumi.BoolPtrOutput)
}

// Policy for failovers.
func (o ComputeRegionBackendServiceOutput) FailoverPolicy() ComputeRegionBackendServiceFailoverPolicyPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceFailoverPolicyPtrOutput {
		return v.FailoverPolicy
	}).(ComputeRegionBackendServiceFailoverPolicyPtrOutput)
}

// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
func (o ComputeRegionBackendServiceOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// The unique identifier for the resource. This identifier is defined by the server.
func (o ComputeRegionBackendServiceOutput) GeneratedId() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.Float64Output { return v.GeneratedId }).(pulumi.Float64Output)
}

// The set of URLs to HealthCheck resources for health checking this RegionBackendService. Currently at most one health
// check can be specified. A health check must be specified unless the backend service uses an internet or serverless NEG
// as a backend.
func (o ComputeRegionBackendServiceOutput) HealthChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringArrayOutput { return v.HealthChecks }).(pulumi.StringArrayOutput)
}

// Settings for enabling Cloud Identity Aware Proxy
func (o ComputeRegionBackendServiceOutput) Iap() ComputeRegionBackendServiceIapPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceIapPtrOutput { return v.Iap }).(ComputeRegionBackendServiceIapPtrOutput)
}

// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
func (o ComputeRegionBackendServiceOutput) IpAddressSelectionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringPtrOutput { return v.IpAddressSelectionPolicy }).(pulumi.StringPtrOutput)
}

// Indicates what kind of load balancing this regional backend service will be used for. A backend service created for one
// type of load balancing cannot be used with the other(s). For more information, refer to [Choosing a load
// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "INTERNAL" Possible values:
// ["EXTERNAL", "EXTERNAL_MANAGED", "INTERNAL", "INTERNAL_MANAGED"]
func (o ComputeRegionBackendServiceOutput) LoadBalancingScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringPtrOutput { return v.LoadBalancingScheme }).(pulumi.StringPtrOutput)
}

// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
// opened to the same address as the destination address of the incoming connection before the connection was redirected to
// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
func (o ComputeRegionBackendServiceOutput) LocalityLbPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringPtrOutput { return v.LocalityLbPolicy }).(pulumi.StringPtrOutput)
}

// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
// enabled, logs will be exported to Stackdriver.
func (o ComputeRegionBackendServiceOutput) LogConfig() ComputeRegionBackendServiceLogConfigPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceLogConfigPtrOutput { return v.LogConfig }).(ComputeRegionBackendServiceLogConfigPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeRegionBackendServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The URL of the network to which this backend service belongs. This field can only be specified when the load balancing
// scheme is set to INTERNAL.
func (o ComputeRegionBackendServiceOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringPtrOutput { return v.Network }).(pulumi.StringPtrOutput)
}

// Settings controlling eviction of unhealthy hosts from the load balancing pool. This field is applicable only when the
// 'load_balancing_scheme' is set to INTERNAL_MANAGED and the 'protocol' is set to HTTP, HTTPS, or HTTP2.
func (o ComputeRegionBackendServiceOutput) OutlierDetection() ComputeRegionBackendServiceOutlierDetectionPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceOutlierDetectionPtrOutput {
		return v.OutlierDetection
	}).(ComputeRegionBackendServiceOutlierDetectionPtrOutput)
}

// A named port on a backend instance group representing the port for communication to the backend VMs in that group.
// Required when the loadBalancingScheme is EXTERNAL, EXTERNAL_MANAGED, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the
// backends are instance groups. The named port must be defined on each backend instance group. This parameter has no
// meaning if the backends are NEGs. API sets a default of "http" if not given. Must be omitted when the
// loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).
func (o ComputeRegionBackendServiceOutput) PortName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.PortName }).(pulumi.StringOutput)
}

func (o ComputeRegionBackendServiceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The protocol this RegionBackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only
// valid for beta HTTP/2 load balancer types and may result in errors if used with the GA API. Possible values: ["HTTP",
// "HTTPS", "HTTP2", "SSL", "TCP", "UDP", "GRPC", "UNSPECIFIED"]
func (o ComputeRegionBackendServiceOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// The Region in which the created backend service should reside. If it is not provided, the provider region is used.
func (o ComputeRegionBackendServiceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The security policy associated with this backend service.
func (o ComputeRegionBackendServiceOutput) SecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringPtrOutput { return v.SecurityPolicy }).(pulumi.StringPtrOutput)
}

func (o ComputeRegionBackendServiceOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
// "HTTP_COOKIE", "CLIENT_IP_NO_DESTINATION", "STRONG_COOKIE_AFFINITY"]
func (o ComputeRegionBackendServiceOutput) SessionAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.StringOutput { return v.SessionAffinity }).(pulumi.StringOutput)
}

// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
func (o ComputeRegionBackendServiceOutput) StrongSessionAffinityCookie() ComputeRegionBackendServiceStrongSessionAffinityCookiePtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceStrongSessionAffinityCookiePtrOutput {
		return v.StrongSessionAffinityCookie
	}).(ComputeRegionBackendServiceStrongSessionAffinityCookiePtrOutput)
}

// Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing
// and Internal HTTP(S) load balancing.
func (o ComputeRegionBackendServiceOutput) Subsetting() ComputeRegionBackendServiceSubsettingPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceSubsettingPtrOutput {
		return v.Subsetting
	}).(ComputeRegionBackendServiceSubsettingPtrOutput)
}

// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
func (o ComputeRegionBackendServiceOutput) TimeoutSec() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeRegionBackendService) pulumi.Float64Output { return v.TimeoutSec }).(pulumi.Float64Output)
}

func (o ComputeRegionBackendServiceOutput) Timeouts() ComputeRegionBackendServiceTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeRegionBackendService) ComputeRegionBackendServiceTimeoutsPtrOutput { return v.Timeouts }).(ComputeRegionBackendServiceTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionBackendServiceInput)(nil)).Elem(), &ComputeRegionBackendService{})
	pulumi.RegisterOutputType(ComputeRegionBackendServiceOutput{})
}
