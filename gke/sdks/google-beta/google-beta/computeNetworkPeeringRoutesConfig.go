// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeNetworkPeeringRoutesConfig struct {
	pulumi.CustomResourceState

	ComputeNetworkPeeringRoutesConfigId pulumi.StringOutput `pulumi:"computeNetworkPeeringRoutesConfigId"`
	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes pulumi.BoolOutput `pulumi:"exportCustomRoutes"`
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes pulumi.BoolOutput `pulumi:"importCustomRoutes"`
	// The name of the primary network for the peering.
	Network pulumi.StringOutput `pulumi:"network"`
	// Name of the peering.
	Peering  pulumi.StringOutput                                `pulumi:"peering"`
	Project  pulumi.StringOutput                                `pulumi:"project"`
	Timeouts ComputeNetworkPeeringRoutesConfigTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeNetworkPeeringRoutesConfig registers a new resource with the given unique name, arguments, and options.
func NewComputeNetworkPeeringRoutesConfig(ctx *pulumi.Context,
	name string, args *ComputeNetworkPeeringRoutesConfigArgs, opts ...pulumi.ResourceOption) (*ComputeNetworkPeeringRoutesConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ExportCustomRoutes == nil {
		return nil, errors.New("invalid value for required argument 'ExportCustomRoutes'")
	}
	if args.ImportCustomRoutes == nil {
		return nil, errors.New("invalid value for required argument 'ImportCustomRoutes'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.Peering == nil {
		return nil, errors.New("invalid value for required argument 'Peering'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeNetworkPeeringRoutesConfig
	err = ctx.RegisterPackageResource("google-beta:index/computeNetworkPeeringRoutesConfig:ComputeNetworkPeeringRoutesConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeNetworkPeeringRoutesConfig gets an existing ComputeNetworkPeeringRoutesConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeNetworkPeeringRoutesConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeNetworkPeeringRoutesConfigState, opts ...pulumi.ResourceOption) (*ComputeNetworkPeeringRoutesConfig, error) {
	var resource ComputeNetworkPeeringRoutesConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/computeNetworkPeeringRoutesConfig:ComputeNetworkPeeringRoutesConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeNetworkPeeringRoutesConfig resources.
type computeNetworkPeeringRoutesConfigState struct {
	ComputeNetworkPeeringRoutesConfigId *string `pulumi:"computeNetworkPeeringRoutesConfigId"`
	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes *bool `pulumi:"exportCustomRoutes"`
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes *bool `pulumi:"importCustomRoutes"`
	// The name of the primary network for the peering.
	Network *string `pulumi:"network"`
	// Name of the peering.
	Peering  *string                                    `pulumi:"peering"`
	Project  *string                                    `pulumi:"project"`
	Timeouts *ComputeNetworkPeeringRoutesConfigTimeouts `pulumi:"timeouts"`
}

type ComputeNetworkPeeringRoutesConfigState struct {
	ComputeNetworkPeeringRoutesConfigId pulumi.StringPtrInput
	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes pulumi.BoolPtrInput
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes pulumi.BoolPtrInput
	// The name of the primary network for the peering.
	Network pulumi.StringPtrInput
	// Name of the peering.
	Peering  pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts ComputeNetworkPeeringRoutesConfigTimeoutsPtrInput
}

func (ComputeNetworkPeeringRoutesConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeNetworkPeeringRoutesConfigState)(nil)).Elem()
}

type computeNetworkPeeringRoutesConfigArgs struct {
	ComputeNetworkPeeringRoutesConfigId *string `pulumi:"computeNetworkPeeringRoutesConfigId"`
	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes bool `pulumi:"exportCustomRoutes"`
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes bool `pulumi:"importCustomRoutes"`
	// The name of the primary network for the peering.
	Network string `pulumi:"network"`
	// Name of the peering.
	Peering  string                                     `pulumi:"peering"`
	Project  *string                                    `pulumi:"project"`
	Timeouts *ComputeNetworkPeeringRoutesConfigTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeNetworkPeeringRoutesConfig resource.
type ComputeNetworkPeeringRoutesConfigArgs struct {
	ComputeNetworkPeeringRoutesConfigId pulumi.StringPtrInput
	// Whether to export the custom routes to the peer network.
	ExportCustomRoutes pulumi.BoolInput
	// Whether to import the custom routes to the peer network.
	ImportCustomRoutes pulumi.BoolInput
	// The name of the primary network for the peering.
	Network pulumi.StringInput
	// Name of the peering.
	Peering  pulumi.StringInput
	Project  pulumi.StringPtrInput
	Timeouts ComputeNetworkPeeringRoutesConfigTimeoutsPtrInput
}

func (ComputeNetworkPeeringRoutesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeNetworkPeeringRoutesConfigArgs)(nil)).Elem()
}

type ComputeNetworkPeeringRoutesConfigInput interface {
	pulumi.Input

	ToComputeNetworkPeeringRoutesConfigOutput() ComputeNetworkPeeringRoutesConfigOutput
	ToComputeNetworkPeeringRoutesConfigOutputWithContext(ctx context.Context) ComputeNetworkPeeringRoutesConfigOutput
}

func (*ComputeNetworkPeeringRoutesConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNetworkPeeringRoutesConfig)(nil)).Elem()
}

func (i *ComputeNetworkPeeringRoutesConfig) ToComputeNetworkPeeringRoutesConfigOutput() ComputeNetworkPeeringRoutesConfigOutput {
	return i.ToComputeNetworkPeeringRoutesConfigOutputWithContext(context.Background())
}

func (i *ComputeNetworkPeeringRoutesConfig) ToComputeNetworkPeeringRoutesConfigOutputWithContext(ctx context.Context) ComputeNetworkPeeringRoutesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeNetworkPeeringRoutesConfigOutput)
}

type ComputeNetworkPeeringRoutesConfigOutput struct{ *pulumi.OutputState }

func (ComputeNetworkPeeringRoutesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeNetworkPeeringRoutesConfig)(nil)).Elem()
}

func (o ComputeNetworkPeeringRoutesConfigOutput) ToComputeNetworkPeeringRoutesConfigOutput() ComputeNetworkPeeringRoutesConfigOutput {
	return o
}

func (o ComputeNetworkPeeringRoutesConfigOutput) ToComputeNetworkPeeringRoutesConfigOutputWithContext(ctx context.Context) ComputeNetworkPeeringRoutesConfigOutput {
	return o
}

func (o ComputeNetworkPeeringRoutesConfigOutput) ComputeNetworkPeeringRoutesConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkPeeringRoutesConfig) pulumi.StringOutput {
		return v.ComputeNetworkPeeringRoutesConfigId
	}).(pulumi.StringOutput)
}

// Whether to export the custom routes to the peer network.
func (o ComputeNetworkPeeringRoutesConfigOutput) ExportCustomRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v *ComputeNetworkPeeringRoutesConfig) pulumi.BoolOutput { return v.ExportCustomRoutes }).(pulumi.BoolOutput)
}

// Whether to import the custom routes to the peer network.
func (o ComputeNetworkPeeringRoutesConfigOutput) ImportCustomRoutes() pulumi.BoolOutput {
	return o.ApplyT(func(v *ComputeNetworkPeeringRoutesConfig) pulumi.BoolOutput { return v.ImportCustomRoutes }).(pulumi.BoolOutput)
}

// The name of the primary network for the peering.
func (o ComputeNetworkPeeringRoutesConfigOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkPeeringRoutesConfig) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

// Name of the peering.
func (o ComputeNetworkPeeringRoutesConfigOutput) Peering() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkPeeringRoutesConfig) pulumi.StringOutput { return v.Peering }).(pulumi.StringOutput)
}

func (o ComputeNetworkPeeringRoutesConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeNetworkPeeringRoutesConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeNetworkPeeringRoutesConfigOutput) Timeouts() ComputeNetworkPeeringRoutesConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeNetworkPeeringRoutesConfig) ComputeNetworkPeeringRoutesConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputeNetworkPeeringRoutesConfigTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeNetworkPeeringRoutesConfigInput)(nil)).Elem(), &ComputeNetworkPeeringRoutesConfig{})
	pulumi.RegisterOutputType(ComputeNetworkPeeringRoutesConfigOutput{})
}
