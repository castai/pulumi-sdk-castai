// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkbenchInstanceIamBinding struct {
	pulumi.CustomResourceState

	Condition                     WorkbenchInstanceIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	Location                      pulumi.StringOutput                           `pulumi:"location"`
	Members                       pulumi.StringArrayOutput                      `pulumi:"members"`
	Name                          pulumi.StringOutput                           `pulumi:"name"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
	WorkbenchInstanceIamBindingId pulumi.StringOutput                           `pulumi:"workbenchInstanceIamBindingId"`
}

// NewWorkbenchInstanceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewWorkbenchInstanceIamBinding(ctx *pulumi.Context,
	name string, args *WorkbenchInstanceIamBindingArgs, opts ...pulumi.ResourceOption) (*WorkbenchInstanceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource WorkbenchInstanceIamBinding
	err = ctx.RegisterPackageResource("google-beta:index/workbenchInstanceIamBinding:WorkbenchInstanceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkbenchInstanceIamBinding gets an existing WorkbenchInstanceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkbenchInstanceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkbenchInstanceIamBindingState, opts ...pulumi.ResourceOption) (*WorkbenchInstanceIamBinding, error) {
	var resource WorkbenchInstanceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/workbenchInstanceIamBinding:WorkbenchInstanceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkbenchInstanceIamBinding resources.
type workbenchInstanceIamBindingState struct {
	Condition                     *WorkbenchInstanceIamBindingCondition `pulumi:"condition"`
	Etag                          *string                               `pulumi:"etag"`
	Location                      *string                               `pulumi:"location"`
	Members                       []string                              `pulumi:"members"`
	Name                          *string                               `pulumi:"name"`
	Project                       *string                               `pulumi:"project"`
	Role                          *string                               `pulumi:"role"`
	WorkbenchInstanceIamBindingId *string                               `pulumi:"workbenchInstanceIamBindingId"`
}

type WorkbenchInstanceIamBindingState struct {
	Condition                     WorkbenchInstanceIamBindingConditionPtrInput
	Etag                          pulumi.StringPtrInput
	Location                      pulumi.StringPtrInput
	Members                       pulumi.StringArrayInput
	Name                          pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
	WorkbenchInstanceIamBindingId pulumi.StringPtrInput
}

func (WorkbenchInstanceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*workbenchInstanceIamBindingState)(nil)).Elem()
}

type workbenchInstanceIamBindingArgs struct {
	Condition                     *WorkbenchInstanceIamBindingCondition `pulumi:"condition"`
	Location                      *string                               `pulumi:"location"`
	Members                       []string                              `pulumi:"members"`
	Name                          *string                               `pulumi:"name"`
	Project                       *string                               `pulumi:"project"`
	Role                          string                                `pulumi:"role"`
	WorkbenchInstanceIamBindingId *string                               `pulumi:"workbenchInstanceIamBindingId"`
}

// The set of arguments for constructing a WorkbenchInstanceIamBinding resource.
type WorkbenchInstanceIamBindingArgs struct {
	Condition                     WorkbenchInstanceIamBindingConditionPtrInput
	Location                      pulumi.StringPtrInput
	Members                       pulumi.StringArrayInput
	Name                          pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringInput
	WorkbenchInstanceIamBindingId pulumi.StringPtrInput
}

func (WorkbenchInstanceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workbenchInstanceIamBindingArgs)(nil)).Elem()
}

type WorkbenchInstanceIamBindingInput interface {
	pulumi.Input

	ToWorkbenchInstanceIamBindingOutput() WorkbenchInstanceIamBindingOutput
	ToWorkbenchInstanceIamBindingOutputWithContext(ctx context.Context) WorkbenchInstanceIamBindingOutput
}

func (*WorkbenchInstanceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbenchInstanceIamBinding)(nil)).Elem()
}

func (i *WorkbenchInstanceIamBinding) ToWorkbenchInstanceIamBindingOutput() WorkbenchInstanceIamBindingOutput {
	return i.ToWorkbenchInstanceIamBindingOutputWithContext(context.Background())
}

func (i *WorkbenchInstanceIamBinding) ToWorkbenchInstanceIamBindingOutputWithContext(ctx context.Context) WorkbenchInstanceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkbenchInstanceIamBindingOutput)
}

type WorkbenchInstanceIamBindingOutput struct{ *pulumi.OutputState }

func (WorkbenchInstanceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkbenchInstanceIamBinding)(nil)).Elem()
}

func (o WorkbenchInstanceIamBindingOutput) ToWorkbenchInstanceIamBindingOutput() WorkbenchInstanceIamBindingOutput {
	return o
}

func (o WorkbenchInstanceIamBindingOutput) ToWorkbenchInstanceIamBindingOutputWithContext(ctx context.Context) WorkbenchInstanceIamBindingOutput {
	return o
}

func (o WorkbenchInstanceIamBindingOutput) Condition() WorkbenchInstanceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamBinding) WorkbenchInstanceIamBindingConditionPtrOutput { return v.Condition }).(WorkbenchInstanceIamBindingConditionPtrOutput)
}

func (o WorkbenchInstanceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o WorkbenchInstanceIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o WorkbenchInstanceIamBindingOutput) WorkbenchInstanceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkbenchInstanceIamBinding) pulumi.StringOutput { return v.WorkbenchInstanceIamBindingId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkbenchInstanceIamBindingInput)(nil)).Elem(), &WorkbenchInstanceIamBinding{})
	pulumi.RegisterOutputType(WorkbenchInstanceIamBindingOutput{})
}
