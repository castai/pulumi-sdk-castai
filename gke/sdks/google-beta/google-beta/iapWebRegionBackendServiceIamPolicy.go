// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package googlebeta

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google-beta/v6/google-beta/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IapWebRegionBackendServiceIamPolicy struct {
	pulumi.CustomResourceState

	Etag                                  pulumi.StringOutput `pulumi:"etag"`
	IapWebRegionBackendServiceIamPolicyId pulumi.StringOutput `pulumi:"iapWebRegionBackendServiceIamPolicyId"`
	PolicyData                            pulumi.StringOutput `pulumi:"policyData"`
	Project                               pulumi.StringOutput `pulumi:"project"`
	Region                                pulumi.StringOutput `pulumi:"region"`
	WebRegionBackendService               pulumi.StringOutput `pulumi:"webRegionBackendService"`
}

// NewIapWebRegionBackendServiceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewIapWebRegionBackendServiceIamPolicy(ctx *pulumi.Context,
	name string, args *IapWebRegionBackendServiceIamPolicyArgs, opts ...pulumi.ResourceOption) (*IapWebRegionBackendServiceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.WebRegionBackendService == nil {
		return nil, errors.New("invalid value for required argument 'WebRegionBackendService'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IapWebRegionBackendServiceIamPolicy
	err = ctx.RegisterPackageResource("google-beta:index/iapWebRegionBackendServiceIamPolicy:IapWebRegionBackendServiceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIapWebRegionBackendServiceIamPolicy gets an existing IapWebRegionBackendServiceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIapWebRegionBackendServiceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IapWebRegionBackendServiceIamPolicyState, opts ...pulumi.ResourceOption) (*IapWebRegionBackendServiceIamPolicy, error) {
	var resource IapWebRegionBackendServiceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google-beta:index/iapWebRegionBackendServiceIamPolicy:IapWebRegionBackendServiceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IapWebRegionBackendServiceIamPolicy resources.
type iapWebRegionBackendServiceIamPolicyState struct {
	Etag                                  *string `pulumi:"etag"`
	IapWebRegionBackendServiceIamPolicyId *string `pulumi:"iapWebRegionBackendServiceIamPolicyId"`
	PolicyData                            *string `pulumi:"policyData"`
	Project                               *string `pulumi:"project"`
	Region                                *string `pulumi:"region"`
	WebRegionBackendService               *string `pulumi:"webRegionBackendService"`
}

type IapWebRegionBackendServiceIamPolicyState struct {
	Etag                                  pulumi.StringPtrInput
	IapWebRegionBackendServiceIamPolicyId pulumi.StringPtrInput
	PolicyData                            pulumi.StringPtrInput
	Project                               pulumi.StringPtrInput
	Region                                pulumi.StringPtrInput
	WebRegionBackendService               pulumi.StringPtrInput
}

func (IapWebRegionBackendServiceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*iapWebRegionBackendServiceIamPolicyState)(nil)).Elem()
}

type iapWebRegionBackendServiceIamPolicyArgs struct {
	IapWebRegionBackendServiceIamPolicyId *string `pulumi:"iapWebRegionBackendServiceIamPolicyId"`
	PolicyData                            string  `pulumi:"policyData"`
	Project                               *string `pulumi:"project"`
	Region                                *string `pulumi:"region"`
	WebRegionBackendService               string  `pulumi:"webRegionBackendService"`
}

// The set of arguments for constructing a IapWebRegionBackendServiceIamPolicy resource.
type IapWebRegionBackendServiceIamPolicyArgs struct {
	IapWebRegionBackendServiceIamPolicyId pulumi.StringPtrInput
	PolicyData                            pulumi.StringInput
	Project                               pulumi.StringPtrInput
	Region                                pulumi.StringPtrInput
	WebRegionBackendService               pulumi.StringInput
}

func (IapWebRegionBackendServiceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iapWebRegionBackendServiceIamPolicyArgs)(nil)).Elem()
}

type IapWebRegionBackendServiceIamPolicyInput interface {
	pulumi.Input

	ToIapWebRegionBackendServiceIamPolicyOutput() IapWebRegionBackendServiceIamPolicyOutput
	ToIapWebRegionBackendServiceIamPolicyOutputWithContext(ctx context.Context) IapWebRegionBackendServiceIamPolicyOutput
}

func (*IapWebRegionBackendServiceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**IapWebRegionBackendServiceIamPolicy)(nil)).Elem()
}

func (i *IapWebRegionBackendServiceIamPolicy) ToIapWebRegionBackendServiceIamPolicyOutput() IapWebRegionBackendServiceIamPolicyOutput {
	return i.ToIapWebRegionBackendServiceIamPolicyOutputWithContext(context.Background())
}

func (i *IapWebRegionBackendServiceIamPolicy) ToIapWebRegionBackendServiceIamPolicyOutputWithContext(ctx context.Context) IapWebRegionBackendServiceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapWebRegionBackendServiceIamPolicyOutput)
}

type IapWebRegionBackendServiceIamPolicyOutput struct{ *pulumi.OutputState }

func (IapWebRegionBackendServiceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapWebRegionBackendServiceIamPolicy)(nil)).Elem()
}

func (o IapWebRegionBackendServiceIamPolicyOutput) ToIapWebRegionBackendServiceIamPolicyOutput() IapWebRegionBackendServiceIamPolicyOutput {
	return o
}

func (o IapWebRegionBackendServiceIamPolicyOutput) ToIapWebRegionBackendServiceIamPolicyOutputWithContext(ctx context.Context) IapWebRegionBackendServiceIamPolicyOutput {
	return o
}

func (o IapWebRegionBackendServiceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebRegionBackendServiceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o IapWebRegionBackendServiceIamPolicyOutput) IapWebRegionBackendServiceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebRegionBackendServiceIamPolicy) pulumi.StringOutput {
		return v.IapWebRegionBackendServiceIamPolicyId
	}).(pulumi.StringOutput)
}

func (o IapWebRegionBackendServiceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebRegionBackendServiceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o IapWebRegionBackendServiceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebRegionBackendServiceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o IapWebRegionBackendServiceIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebRegionBackendServiceIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o IapWebRegionBackendServiceIamPolicyOutput) WebRegionBackendService() pulumi.StringOutput {
	return o.ApplyT(func(v *IapWebRegionBackendServiceIamPolicy) pulumi.StringOutput { return v.WebRegionBackendService }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IapWebRegionBackendServiceIamPolicyInput)(nil)).Elem(), &IapWebRegionBackendServiceIamPolicy{})
	pulumi.RegisterOutputType(IapWebRegionBackendServiceIamPolicyOutput{})
}
