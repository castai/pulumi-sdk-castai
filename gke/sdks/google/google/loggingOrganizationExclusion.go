// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoggingOrganizationExclusion struct {
	pulumi.CustomResourceState

	// A human-readable description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                         pulumi.StringOutput `pulumi:"filter"`
	LoggingOrganizationExclusionId pulumi.StringOutput `pulumi:"loggingOrganizationExclusionId"`
	// The name of the logging exclusion.
	Name  pulumi.StringOutput `pulumi:"name"`
	OrgId pulumi.StringOutput `pulumi:"orgId"`
}

// NewLoggingOrganizationExclusion registers a new resource with the given unique name, arguments, and options.
func NewLoggingOrganizationExclusion(ctx *pulumi.Context,
	name string, args *LoggingOrganizationExclusionArgs, opts ...pulumi.ResourceOption) (*LoggingOrganizationExclusion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Filter == nil {
		return nil, errors.New("invalid value for required argument 'Filter'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource LoggingOrganizationExclusion
	err = ctx.RegisterPackageResource("google:index/loggingOrganizationExclusion:LoggingOrganizationExclusion", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingOrganizationExclusion gets an existing LoggingOrganizationExclusion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingOrganizationExclusion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingOrganizationExclusionState, opts ...pulumi.ResourceOption) (*LoggingOrganizationExclusion, error) {
	var resource LoggingOrganizationExclusion
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/loggingOrganizationExclusion:LoggingOrganizationExclusion", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingOrganizationExclusion resources.
type loggingOrganizationExclusionState struct {
	// A human-readable description.
	Description *string `pulumi:"description"`
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled *bool `pulumi:"disabled"`
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                         *string `pulumi:"filter"`
	LoggingOrganizationExclusionId *string `pulumi:"loggingOrganizationExclusionId"`
	// The name of the logging exclusion.
	Name  *string `pulumi:"name"`
	OrgId *string `pulumi:"orgId"`
}

type LoggingOrganizationExclusionState struct {
	// A human-readable description.
	Description pulumi.StringPtrInput
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled pulumi.BoolPtrInput
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                         pulumi.StringPtrInput
	LoggingOrganizationExclusionId pulumi.StringPtrInput
	// The name of the logging exclusion.
	Name  pulumi.StringPtrInput
	OrgId pulumi.StringPtrInput
}

func (LoggingOrganizationExclusionState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingOrganizationExclusionState)(nil)).Elem()
}

type loggingOrganizationExclusionArgs struct {
	// A human-readable description.
	Description *string `pulumi:"description"`
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled *bool `pulumi:"disabled"`
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                         string  `pulumi:"filter"`
	LoggingOrganizationExclusionId *string `pulumi:"loggingOrganizationExclusionId"`
	// The name of the logging exclusion.
	Name  *string `pulumi:"name"`
	OrgId string  `pulumi:"orgId"`
}

// The set of arguments for constructing a LoggingOrganizationExclusion resource.
type LoggingOrganizationExclusionArgs struct {
	// A human-readable description.
	Description pulumi.StringPtrInput
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled pulumi.BoolPtrInput
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                         pulumi.StringInput
	LoggingOrganizationExclusionId pulumi.StringPtrInput
	// The name of the logging exclusion.
	Name  pulumi.StringPtrInput
	OrgId pulumi.StringInput
}

func (LoggingOrganizationExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingOrganizationExclusionArgs)(nil)).Elem()
}

type LoggingOrganizationExclusionInput interface {
	pulumi.Input

	ToLoggingOrganizationExclusionOutput() LoggingOrganizationExclusionOutput
	ToLoggingOrganizationExclusionOutputWithContext(ctx context.Context) LoggingOrganizationExclusionOutput
}

func (*LoggingOrganizationExclusion) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingOrganizationExclusion)(nil)).Elem()
}

func (i *LoggingOrganizationExclusion) ToLoggingOrganizationExclusionOutput() LoggingOrganizationExclusionOutput {
	return i.ToLoggingOrganizationExclusionOutputWithContext(context.Background())
}

func (i *LoggingOrganizationExclusion) ToLoggingOrganizationExclusionOutputWithContext(ctx context.Context) LoggingOrganizationExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingOrganizationExclusionOutput)
}

type LoggingOrganizationExclusionOutput struct{ *pulumi.OutputState }

func (LoggingOrganizationExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingOrganizationExclusion)(nil)).Elem()
}

func (o LoggingOrganizationExclusionOutput) ToLoggingOrganizationExclusionOutput() LoggingOrganizationExclusionOutput {
	return o
}

func (o LoggingOrganizationExclusionOutput) ToLoggingOrganizationExclusionOutputWithContext(ctx context.Context) LoggingOrganizationExclusionOutput {
	return o
}

// A human-readable description.
func (o LoggingOrganizationExclusionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingOrganizationExclusion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether this exclusion rule should be disabled or not. This defaults to false.
func (o LoggingOrganizationExclusionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingOrganizationExclusion) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
func (o LoggingOrganizationExclusionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingOrganizationExclusion) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

func (o LoggingOrganizationExclusionOutput) LoggingOrganizationExclusionId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingOrganizationExclusion) pulumi.StringOutput { return v.LoggingOrganizationExclusionId }).(pulumi.StringOutput)
}

// The name of the logging exclusion.
func (o LoggingOrganizationExclusionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingOrganizationExclusion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o LoggingOrganizationExclusionOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingOrganizationExclusion) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingOrganizationExclusionInput)(nil)).Elem(), &LoggingOrganizationExclusion{})
	pulumi.RegisterOutputType(LoggingOrganizationExclusionOutput{})
}
