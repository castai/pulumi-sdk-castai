// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BiglakeTable struct {
	pulumi.CustomResourceState

	BiglakeTableId pulumi.StringOutput `pulumi:"biglakeTableId"`
	// Output only. The creation time of the table. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The id of the parent database.
	Database pulumi.StringPtrOutput `pulumi:"database"`
	// Output only. The deletion time of the table. Only set after the table is deleted. A timestamp in RFC3339 UTC "Zulu"
	// format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
	// "2014-10-02T15:01:23.045123456Z".
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// The checksum of a table object computed by the server based on the value of other fields. It may be sent on update
	// requests to ensure the client has an up-to-date value before proceeding. It is only checked for update table operations.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Output only. The time when this table is considered expired. Only set after the table is deleted. A timestamp in RFC3339
	// UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
	// "2014-10-02T15:01:23.045123456Z".
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// Options of a Hive table.
	HiveOptions BiglakeTableHiveOptionsPtrOutput `pulumi:"hiveOptions"`
	// Output only. The name of the Table. Format:
	// projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}/databases/{databaseId}/tables/{tableId}
	Name     pulumi.StringOutput           `pulumi:"name"`
	Timeouts BiglakeTableTimeoutsPtrOutput `pulumi:"timeouts"`
	// The database type. Possible values: ["HIVE"]
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// Output only. The last modification time of the table. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewBiglakeTable registers a new resource with the given unique name, arguments, and options.
func NewBiglakeTable(ctx *pulumi.Context,
	name string, args *BiglakeTableArgs, opts ...pulumi.ResourceOption) (*BiglakeTable, error) {
	if args == nil {
		args = &BiglakeTableArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BiglakeTable
	err = ctx.RegisterPackageResource("google:index/biglakeTable:BiglakeTable", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBiglakeTable gets an existing BiglakeTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBiglakeTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BiglakeTableState, opts ...pulumi.ResourceOption) (*BiglakeTable, error) {
	var resource BiglakeTable
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/biglakeTable:BiglakeTable", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BiglakeTable resources.
type biglakeTableState struct {
	BiglakeTableId *string `pulumi:"biglakeTableId"`
	// Output only. The creation time of the table. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// The id of the parent database.
	Database *string `pulumi:"database"`
	// Output only. The deletion time of the table. Only set after the table is deleted. A timestamp in RFC3339 UTC "Zulu"
	// format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
	// "2014-10-02T15:01:23.045123456Z".
	DeleteTime *string `pulumi:"deleteTime"`
	// The checksum of a table object computed by the server based on the value of other fields. It may be sent on update
	// requests to ensure the client has an up-to-date value before proceeding. It is only checked for update table operations.
	Etag *string `pulumi:"etag"`
	// Output only. The time when this table is considered expired. Only set after the table is deleted. A timestamp in RFC3339
	// UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
	// "2014-10-02T15:01:23.045123456Z".
	ExpireTime *string `pulumi:"expireTime"`
	// Options of a Hive table.
	HiveOptions *BiglakeTableHiveOptions `pulumi:"hiveOptions"`
	// Output only. The name of the Table. Format:
	// projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}/databases/{databaseId}/tables/{tableId}
	Name     *string               `pulumi:"name"`
	Timeouts *BiglakeTableTimeouts `pulumi:"timeouts"`
	// The database type. Possible values: ["HIVE"]
	Type *string `pulumi:"type"`
	// Output only. The last modification time of the table. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
}

type BiglakeTableState struct {
	BiglakeTableId pulumi.StringPtrInput
	// Output only. The creation time of the table. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// The id of the parent database.
	Database pulumi.StringPtrInput
	// Output only. The deletion time of the table. Only set after the table is deleted. A timestamp in RFC3339 UTC "Zulu"
	// format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
	// "2014-10-02T15:01:23.045123456Z".
	DeleteTime pulumi.StringPtrInput
	// The checksum of a table object computed by the server based on the value of other fields. It may be sent on update
	// requests to ensure the client has an up-to-date value before proceeding. It is only checked for update table operations.
	Etag pulumi.StringPtrInput
	// Output only. The time when this table is considered expired. Only set after the table is deleted. A timestamp in RFC3339
	// UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
	// "2014-10-02T15:01:23.045123456Z".
	ExpireTime pulumi.StringPtrInput
	// Options of a Hive table.
	HiveOptions BiglakeTableHiveOptionsPtrInput
	// Output only. The name of the Table. Format:
	// projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}/databases/{databaseId}/tables/{tableId}
	Name     pulumi.StringPtrInput
	Timeouts BiglakeTableTimeoutsPtrInput
	// The database type. Possible values: ["HIVE"]
	Type pulumi.StringPtrInput
	// Output only. The last modification time of the table. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
}

func (BiglakeTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*biglakeTableState)(nil)).Elem()
}

type biglakeTableArgs struct {
	BiglakeTableId *string `pulumi:"biglakeTableId"`
	// The id of the parent database.
	Database *string `pulumi:"database"`
	// Options of a Hive table.
	HiveOptions *BiglakeTableHiveOptions `pulumi:"hiveOptions"`
	// Output only. The name of the Table. Format:
	// projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}/databases/{databaseId}/tables/{tableId}
	Name     *string               `pulumi:"name"`
	Timeouts *BiglakeTableTimeouts `pulumi:"timeouts"`
	// The database type. Possible values: ["HIVE"]
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a BiglakeTable resource.
type BiglakeTableArgs struct {
	BiglakeTableId pulumi.StringPtrInput
	// The id of the parent database.
	Database pulumi.StringPtrInput
	// Options of a Hive table.
	HiveOptions BiglakeTableHiveOptionsPtrInput
	// Output only. The name of the Table. Format:
	// projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}/databases/{databaseId}/tables/{tableId}
	Name     pulumi.StringPtrInput
	Timeouts BiglakeTableTimeoutsPtrInput
	// The database type. Possible values: ["HIVE"]
	Type pulumi.StringPtrInput
}

func (BiglakeTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*biglakeTableArgs)(nil)).Elem()
}

type BiglakeTableInput interface {
	pulumi.Input

	ToBiglakeTableOutput() BiglakeTableOutput
	ToBiglakeTableOutputWithContext(ctx context.Context) BiglakeTableOutput
}

func (*BiglakeTable) ElementType() reflect.Type {
	return reflect.TypeOf((**BiglakeTable)(nil)).Elem()
}

func (i *BiglakeTable) ToBiglakeTableOutput() BiglakeTableOutput {
	return i.ToBiglakeTableOutputWithContext(context.Background())
}

func (i *BiglakeTable) ToBiglakeTableOutputWithContext(ctx context.Context) BiglakeTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BiglakeTableOutput)
}

type BiglakeTableOutput struct{ *pulumi.OutputState }

func (BiglakeTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BiglakeTable)(nil)).Elem()
}

func (o BiglakeTableOutput) ToBiglakeTableOutput() BiglakeTableOutput {
	return o
}

func (o BiglakeTableOutput) ToBiglakeTableOutputWithContext(ctx context.Context) BiglakeTableOutput {
	return o
}

func (o BiglakeTableOutput) BiglakeTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeTable) pulumi.StringOutput { return v.BiglakeTableId }).(pulumi.StringOutput)
}

// Output only. The creation time of the table. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o BiglakeTableOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeTable) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The id of the parent database.
func (o BiglakeTableOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BiglakeTable) pulumi.StringPtrOutput { return v.Database }).(pulumi.StringPtrOutput)
}

// Output only. The deletion time of the table. Only set after the table is deleted. A timestamp in RFC3339 UTC "Zulu"
// format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
// "2014-10-02T15:01:23.045123456Z".
func (o BiglakeTableOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeTable) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// The checksum of a table object computed by the server based on the value of other fields. It may be sent on update
// requests to ensure the client has an up-to-date value before proceeding. It is only checked for update table operations.
func (o BiglakeTableOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeTable) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Output only. The time when this table is considered expired. Only set after the table is deleted. A timestamp in RFC3339
// UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and
// "2014-10-02T15:01:23.045123456Z".
func (o BiglakeTableOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeTable) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// Options of a Hive table.
func (o BiglakeTableOutput) HiveOptions() BiglakeTableHiveOptionsPtrOutput {
	return o.ApplyT(func(v *BiglakeTable) BiglakeTableHiveOptionsPtrOutput { return v.HiveOptions }).(BiglakeTableHiveOptionsPtrOutput)
}

// Output only. The name of the Table. Format:
// projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}/databases/{databaseId}/tables/{tableId}
func (o BiglakeTableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeTable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BiglakeTableOutput) Timeouts() BiglakeTableTimeoutsPtrOutput {
	return o.ApplyT(func(v *BiglakeTable) BiglakeTableTimeoutsPtrOutput { return v.Timeouts }).(BiglakeTableTimeoutsPtrOutput)
}

// The database type. Possible values: ["HIVE"]
func (o BiglakeTableOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BiglakeTable) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// Output only. The last modification time of the table. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o BiglakeTableOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeTable) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BiglakeTableInput)(nil)).Elem(), &BiglakeTable{})
	pulumi.RegisterOutputType(BiglakeTableOutput{})
}
