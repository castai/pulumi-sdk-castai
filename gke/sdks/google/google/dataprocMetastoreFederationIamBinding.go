// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataprocMetastoreFederationIamBinding struct {
	pulumi.CustomResourceState

	Condition                               DataprocMetastoreFederationIamBindingConditionPtrOutput `pulumi:"condition"`
	DataprocMetastoreFederationIamBindingId pulumi.StringOutput                                     `pulumi:"dataprocMetastoreFederationIamBindingId"`
	Etag                                    pulumi.StringOutput                                     `pulumi:"etag"`
	FederationId                            pulumi.StringOutput                                     `pulumi:"federationId"`
	Location                                pulumi.StringOutput                                     `pulumi:"location"`
	Members                                 pulumi.StringArrayOutput                                `pulumi:"members"`
	Project                                 pulumi.StringOutput                                     `pulumi:"project"`
	Role                                    pulumi.StringOutput                                     `pulumi:"role"`
}

// NewDataprocMetastoreFederationIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDataprocMetastoreFederationIamBinding(ctx *pulumi.Context,
	name string, args *DataprocMetastoreFederationIamBindingArgs, opts ...pulumi.ResourceOption) (*DataprocMetastoreFederationIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FederationId == nil {
		return nil, errors.New("invalid value for required argument 'FederationId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataprocMetastoreFederationIamBinding
	err = ctx.RegisterPackageResource("google:index/dataprocMetastoreFederationIamBinding:DataprocMetastoreFederationIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocMetastoreFederationIamBinding gets an existing DataprocMetastoreFederationIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocMetastoreFederationIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocMetastoreFederationIamBindingState, opts ...pulumi.ResourceOption) (*DataprocMetastoreFederationIamBinding, error) {
	var resource DataprocMetastoreFederationIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataprocMetastoreFederationIamBinding:DataprocMetastoreFederationIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocMetastoreFederationIamBinding resources.
type dataprocMetastoreFederationIamBindingState struct {
	Condition                               *DataprocMetastoreFederationIamBindingCondition `pulumi:"condition"`
	DataprocMetastoreFederationIamBindingId *string                                         `pulumi:"dataprocMetastoreFederationIamBindingId"`
	Etag                                    *string                                         `pulumi:"etag"`
	FederationId                            *string                                         `pulumi:"federationId"`
	Location                                *string                                         `pulumi:"location"`
	Members                                 []string                                        `pulumi:"members"`
	Project                                 *string                                         `pulumi:"project"`
	Role                                    *string                                         `pulumi:"role"`
}

type DataprocMetastoreFederationIamBindingState struct {
	Condition                               DataprocMetastoreFederationIamBindingConditionPtrInput
	DataprocMetastoreFederationIamBindingId pulumi.StringPtrInput
	Etag                                    pulumi.StringPtrInput
	FederationId                            pulumi.StringPtrInput
	Location                                pulumi.StringPtrInput
	Members                                 pulumi.StringArrayInput
	Project                                 pulumi.StringPtrInput
	Role                                    pulumi.StringPtrInput
}

func (DataprocMetastoreFederationIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreFederationIamBindingState)(nil)).Elem()
}

type dataprocMetastoreFederationIamBindingArgs struct {
	Condition                               *DataprocMetastoreFederationIamBindingCondition `pulumi:"condition"`
	DataprocMetastoreFederationIamBindingId *string                                         `pulumi:"dataprocMetastoreFederationIamBindingId"`
	FederationId                            string                                          `pulumi:"federationId"`
	Location                                *string                                         `pulumi:"location"`
	Members                                 []string                                        `pulumi:"members"`
	Project                                 *string                                         `pulumi:"project"`
	Role                                    string                                          `pulumi:"role"`
}

// The set of arguments for constructing a DataprocMetastoreFederationIamBinding resource.
type DataprocMetastoreFederationIamBindingArgs struct {
	Condition                               DataprocMetastoreFederationIamBindingConditionPtrInput
	DataprocMetastoreFederationIamBindingId pulumi.StringPtrInput
	FederationId                            pulumi.StringInput
	Location                                pulumi.StringPtrInput
	Members                                 pulumi.StringArrayInput
	Project                                 pulumi.StringPtrInput
	Role                                    pulumi.StringInput
}

func (DataprocMetastoreFederationIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreFederationIamBindingArgs)(nil)).Elem()
}

type DataprocMetastoreFederationIamBindingInput interface {
	pulumi.Input

	ToDataprocMetastoreFederationIamBindingOutput() DataprocMetastoreFederationIamBindingOutput
	ToDataprocMetastoreFederationIamBindingOutputWithContext(ctx context.Context) DataprocMetastoreFederationIamBindingOutput
}

func (*DataprocMetastoreFederationIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreFederationIamBinding)(nil)).Elem()
}

func (i *DataprocMetastoreFederationIamBinding) ToDataprocMetastoreFederationIamBindingOutput() DataprocMetastoreFederationIamBindingOutput {
	return i.ToDataprocMetastoreFederationIamBindingOutputWithContext(context.Background())
}

func (i *DataprocMetastoreFederationIamBinding) ToDataprocMetastoreFederationIamBindingOutputWithContext(ctx context.Context) DataprocMetastoreFederationIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocMetastoreFederationIamBindingOutput)
}

type DataprocMetastoreFederationIamBindingOutput struct{ *pulumi.OutputState }

func (DataprocMetastoreFederationIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreFederationIamBinding)(nil)).Elem()
}

func (o DataprocMetastoreFederationIamBindingOutput) ToDataprocMetastoreFederationIamBindingOutput() DataprocMetastoreFederationIamBindingOutput {
	return o
}

func (o DataprocMetastoreFederationIamBindingOutput) ToDataprocMetastoreFederationIamBindingOutputWithContext(ctx context.Context) DataprocMetastoreFederationIamBindingOutput {
	return o
}

func (o DataprocMetastoreFederationIamBindingOutput) Condition() DataprocMetastoreFederationIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamBinding) DataprocMetastoreFederationIamBindingConditionPtrOutput {
		return v.Condition
	}).(DataprocMetastoreFederationIamBindingConditionPtrOutput)
}

func (o DataprocMetastoreFederationIamBindingOutput) DataprocMetastoreFederationIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamBinding) pulumi.StringOutput {
		return v.DataprocMetastoreFederationIamBindingId
	}).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamBindingOutput) FederationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamBinding) pulumi.StringOutput { return v.FederationId }).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DataprocMetastoreFederationIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocMetastoreFederationIamBindingInput)(nil)).Elem(), &DataprocMetastoreFederationIamBinding{})
	pulumi.RegisterOutputType(DataprocMetastoreFederationIamBindingOutput{})
}
