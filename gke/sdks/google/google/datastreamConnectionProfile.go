// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DatastreamConnectionProfile struct {
	pulumi.CustomResourceState

	// BigQuery warehouse profile.
	BigqueryProfile DatastreamConnectionProfileBigqueryProfilePtrOutput `pulumi:"bigqueryProfile"`
	// The connection profile identifier.
	ConnectionProfileId pulumi.StringOutput `pulumi:"connectionProfileId"`
	// Create the connection profile without validating it.
	CreateWithoutValidation       pulumi.BoolPtrOutput `pulumi:"createWithoutValidation"`
	DatastreamConnectionProfileId pulumi.StringOutput  `pulumi:"datastreamConnectionProfileId"`
	// Display name.
	DisplayName     pulumi.StringOutput    `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Forward SSH tunnel connectivity.
	ForwardSshConnectivity DatastreamConnectionProfileForwardSshConnectivityPtrOutput `pulumi:"forwardSshConnectivity"`
	// Cloud Storage bucket profile.
	GcsProfile DatastreamConnectionProfileGcsProfilePtrOutput `pulumi:"gcsProfile"`
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of the location this connection profile is located in.
	Location pulumi.StringOutput `pulumi:"location"`
	// MySQL database profile.
	MysqlProfile DatastreamConnectionProfileMysqlProfilePtrOutput `pulumi:"mysqlProfile"`
	// The resource's name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Oracle database profile.
	OracleProfile DatastreamConnectionProfileOracleProfilePtrOutput `pulumi:"oracleProfile"`
	// PostgreSQL database profile.
	PostgresqlProfile DatastreamConnectionProfilePostgresqlProfilePtrOutput `pulumi:"postgresqlProfile"`
	// Private connectivity.
	PrivateConnectivity DatastreamConnectionProfilePrivateConnectivityPtrOutput `pulumi:"privateConnectivity"`
	Project             pulumi.StringOutput                                     `pulumi:"project"`
	// SQL Server database profile.
	SqlServerProfile DatastreamConnectionProfileSqlServerProfilePtrOutput `pulumi:"sqlServerProfile"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                       `pulumi:"terraformLabels"`
	Timeouts        DatastreamConnectionProfileTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDatastreamConnectionProfile registers a new resource with the given unique name, arguments, and options.
func NewDatastreamConnectionProfile(ctx *pulumi.Context,
	name string, args *DatastreamConnectionProfileArgs, opts ...pulumi.ResourceOption) (*DatastreamConnectionProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionProfileId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DatastreamConnectionProfile
	err = ctx.RegisterPackageResource("google:index/datastreamConnectionProfile:DatastreamConnectionProfile", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatastreamConnectionProfile gets an existing DatastreamConnectionProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatastreamConnectionProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatastreamConnectionProfileState, opts ...pulumi.ResourceOption) (*DatastreamConnectionProfile, error) {
	var resource DatastreamConnectionProfile
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/datastreamConnectionProfile:DatastreamConnectionProfile", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatastreamConnectionProfile resources.
type datastreamConnectionProfileState struct {
	// BigQuery warehouse profile.
	BigqueryProfile *DatastreamConnectionProfileBigqueryProfile `pulumi:"bigqueryProfile"`
	// The connection profile identifier.
	ConnectionProfileId *string `pulumi:"connectionProfileId"`
	// Create the connection profile without validating it.
	CreateWithoutValidation       *bool   `pulumi:"createWithoutValidation"`
	DatastreamConnectionProfileId *string `pulumi:"datastreamConnectionProfileId"`
	// Display name.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Forward SSH tunnel connectivity.
	ForwardSshConnectivity *DatastreamConnectionProfileForwardSshConnectivity `pulumi:"forwardSshConnectivity"`
	// Cloud Storage bucket profile.
	GcsProfile *DatastreamConnectionProfileGcsProfile `pulumi:"gcsProfile"`
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location this connection profile is located in.
	Location *string `pulumi:"location"`
	// MySQL database profile.
	MysqlProfile *DatastreamConnectionProfileMysqlProfile `pulumi:"mysqlProfile"`
	// The resource's name.
	Name *string `pulumi:"name"`
	// Oracle database profile.
	OracleProfile *DatastreamConnectionProfileOracleProfile `pulumi:"oracleProfile"`
	// PostgreSQL database profile.
	PostgresqlProfile *DatastreamConnectionProfilePostgresqlProfile `pulumi:"postgresqlProfile"`
	// Private connectivity.
	PrivateConnectivity *DatastreamConnectionProfilePrivateConnectivity `pulumi:"privateConnectivity"`
	Project             *string                                         `pulumi:"project"`
	// SQL Server database profile.
	SqlServerProfile *DatastreamConnectionProfileSqlServerProfile `pulumi:"sqlServerProfile"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                    `pulumi:"terraformLabels"`
	Timeouts        *DatastreamConnectionProfileTimeouts `pulumi:"timeouts"`
}

type DatastreamConnectionProfileState struct {
	// BigQuery warehouse profile.
	BigqueryProfile DatastreamConnectionProfileBigqueryProfilePtrInput
	// The connection profile identifier.
	ConnectionProfileId pulumi.StringPtrInput
	// Create the connection profile without validating it.
	CreateWithoutValidation       pulumi.BoolPtrInput
	DatastreamConnectionProfileId pulumi.StringPtrInput
	// Display name.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Forward SSH tunnel connectivity.
	ForwardSshConnectivity DatastreamConnectionProfileForwardSshConnectivityPtrInput
	// Cloud Storage bucket profile.
	GcsProfile DatastreamConnectionProfileGcsProfilePtrInput
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of the location this connection profile is located in.
	Location pulumi.StringPtrInput
	// MySQL database profile.
	MysqlProfile DatastreamConnectionProfileMysqlProfilePtrInput
	// The resource's name.
	Name pulumi.StringPtrInput
	// Oracle database profile.
	OracleProfile DatastreamConnectionProfileOracleProfilePtrInput
	// PostgreSQL database profile.
	PostgresqlProfile DatastreamConnectionProfilePostgresqlProfilePtrInput
	// Private connectivity.
	PrivateConnectivity DatastreamConnectionProfilePrivateConnectivityPtrInput
	Project             pulumi.StringPtrInput
	// SQL Server database profile.
	SqlServerProfile DatastreamConnectionProfileSqlServerProfilePtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DatastreamConnectionProfileTimeoutsPtrInput
}

func (DatastreamConnectionProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*datastreamConnectionProfileState)(nil)).Elem()
}

type datastreamConnectionProfileArgs struct {
	// BigQuery warehouse profile.
	BigqueryProfile *DatastreamConnectionProfileBigqueryProfile `pulumi:"bigqueryProfile"`
	// The connection profile identifier.
	ConnectionProfileId string `pulumi:"connectionProfileId"`
	// Create the connection profile without validating it.
	CreateWithoutValidation       *bool   `pulumi:"createWithoutValidation"`
	DatastreamConnectionProfileId *string `pulumi:"datastreamConnectionProfileId"`
	// Display name.
	DisplayName string `pulumi:"displayName"`
	// Forward SSH tunnel connectivity.
	ForwardSshConnectivity *DatastreamConnectionProfileForwardSshConnectivity `pulumi:"forwardSshConnectivity"`
	// Cloud Storage bucket profile.
	GcsProfile *DatastreamConnectionProfileGcsProfile `pulumi:"gcsProfile"`
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location this connection profile is located in.
	Location string `pulumi:"location"`
	// MySQL database profile.
	MysqlProfile *DatastreamConnectionProfileMysqlProfile `pulumi:"mysqlProfile"`
	// Oracle database profile.
	OracleProfile *DatastreamConnectionProfileOracleProfile `pulumi:"oracleProfile"`
	// PostgreSQL database profile.
	PostgresqlProfile *DatastreamConnectionProfilePostgresqlProfile `pulumi:"postgresqlProfile"`
	// Private connectivity.
	PrivateConnectivity *DatastreamConnectionProfilePrivateConnectivity `pulumi:"privateConnectivity"`
	Project             *string                                         `pulumi:"project"`
	// SQL Server database profile.
	SqlServerProfile *DatastreamConnectionProfileSqlServerProfile `pulumi:"sqlServerProfile"`
	Timeouts         *DatastreamConnectionProfileTimeouts         `pulumi:"timeouts"`
}

// The set of arguments for constructing a DatastreamConnectionProfile resource.
type DatastreamConnectionProfileArgs struct {
	// BigQuery warehouse profile.
	BigqueryProfile DatastreamConnectionProfileBigqueryProfilePtrInput
	// The connection profile identifier.
	ConnectionProfileId pulumi.StringInput
	// Create the connection profile without validating it.
	CreateWithoutValidation       pulumi.BoolPtrInput
	DatastreamConnectionProfileId pulumi.StringPtrInput
	// Display name.
	DisplayName pulumi.StringInput
	// Forward SSH tunnel connectivity.
	ForwardSshConnectivity DatastreamConnectionProfileForwardSshConnectivityPtrInput
	// Cloud Storage bucket profile.
	GcsProfile DatastreamConnectionProfileGcsProfilePtrInput
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of the location this connection profile is located in.
	Location pulumi.StringInput
	// MySQL database profile.
	MysqlProfile DatastreamConnectionProfileMysqlProfilePtrInput
	// Oracle database profile.
	OracleProfile DatastreamConnectionProfileOracleProfilePtrInput
	// PostgreSQL database profile.
	PostgresqlProfile DatastreamConnectionProfilePostgresqlProfilePtrInput
	// Private connectivity.
	PrivateConnectivity DatastreamConnectionProfilePrivateConnectivityPtrInput
	Project             pulumi.StringPtrInput
	// SQL Server database profile.
	SqlServerProfile DatastreamConnectionProfileSqlServerProfilePtrInput
	Timeouts         DatastreamConnectionProfileTimeoutsPtrInput
}

func (DatastreamConnectionProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*datastreamConnectionProfileArgs)(nil)).Elem()
}

type DatastreamConnectionProfileInput interface {
	pulumi.Input

	ToDatastreamConnectionProfileOutput() DatastreamConnectionProfileOutput
	ToDatastreamConnectionProfileOutputWithContext(ctx context.Context) DatastreamConnectionProfileOutput
}

func (*DatastreamConnectionProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastreamConnectionProfile)(nil)).Elem()
}

func (i *DatastreamConnectionProfile) ToDatastreamConnectionProfileOutput() DatastreamConnectionProfileOutput {
	return i.ToDatastreamConnectionProfileOutputWithContext(context.Background())
}

func (i *DatastreamConnectionProfile) ToDatastreamConnectionProfileOutputWithContext(ctx context.Context) DatastreamConnectionProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastreamConnectionProfileOutput)
}

type DatastreamConnectionProfileOutput struct{ *pulumi.OutputState }

func (DatastreamConnectionProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastreamConnectionProfile)(nil)).Elem()
}

func (o DatastreamConnectionProfileOutput) ToDatastreamConnectionProfileOutput() DatastreamConnectionProfileOutput {
	return o
}

func (o DatastreamConnectionProfileOutput) ToDatastreamConnectionProfileOutputWithContext(ctx context.Context) DatastreamConnectionProfileOutput {
	return o
}

// BigQuery warehouse profile.
func (o DatastreamConnectionProfileOutput) BigqueryProfile() DatastreamConnectionProfileBigqueryProfilePtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) DatastreamConnectionProfileBigqueryProfilePtrOutput {
		return v.BigqueryProfile
	}).(DatastreamConnectionProfileBigqueryProfilePtrOutput)
}

// The connection profile identifier.
func (o DatastreamConnectionProfileOutput) ConnectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.StringOutput { return v.ConnectionProfileId }).(pulumi.StringOutput)
}

// Create the connection profile without validating it.
func (o DatastreamConnectionProfileOutput) CreateWithoutValidation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.BoolPtrOutput { return v.CreateWithoutValidation }).(pulumi.BoolPtrOutput)
}

func (o DatastreamConnectionProfileOutput) DatastreamConnectionProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.StringOutput { return v.DatastreamConnectionProfileId }).(pulumi.StringOutput)
}

// Display name.
func (o DatastreamConnectionProfileOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o DatastreamConnectionProfileOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Forward SSH tunnel connectivity.
func (o DatastreamConnectionProfileOutput) ForwardSshConnectivity() DatastreamConnectionProfileForwardSshConnectivityPtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) DatastreamConnectionProfileForwardSshConnectivityPtrOutput {
		return v.ForwardSshConnectivity
	}).(DatastreamConnectionProfileForwardSshConnectivityPtrOutput)
}

// Cloud Storage bucket profile.
func (o DatastreamConnectionProfileOutput) GcsProfile() DatastreamConnectionProfileGcsProfilePtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) DatastreamConnectionProfileGcsProfilePtrOutput {
		return v.GcsProfile
	}).(DatastreamConnectionProfileGcsProfilePtrOutput)
}

// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
// refer to the field 'effective_labels' for all of the labels present on the resource.
func (o DatastreamConnectionProfileOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the location this connection profile is located in.
func (o DatastreamConnectionProfileOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// MySQL database profile.
func (o DatastreamConnectionProfileOutput) MysqlProfile() DatastreamConnectionProfileMysqlProfilePtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) DatastreamConnectionProfileMysqlProfilePtrOutput {
		return v.MysqlProfile
	}).(DatastreamConnectionProfileMysqlProfilePtrOutput)
}

// The resource's name.
func (o DatastreamConnectionProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Oracle database profile.
func (o DatastreamConnectionProfileOutput) OracleProfile() DatastreamConnectionProfileOracleProfilePtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) DatastreamConnectionProfileOracleProfilePtrOutput {
		return v.OracleProfile
	}).(DatastreamConnectionProfileOracleProfilePtrOutput)
}

// PostgreSQL database profile.
func (o DatastreamConnectionProfileOutput) PostgresqlProfile() DatastreamConnectionProfilePostgresqlProfilePtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) DatastreamConnectionProfilePostgresqlProfilePtrOutput {
		return v.PostgresqlProfile
	}).(DatastreamConnectionProfilePostgresqlProfilePtrOutput)
}

// Private connectivity.
func (o DatastreamConnectionProfileOutput) PrivateConnectivity() DatastreamConnectionProfilePrivateConnectivityPtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) DatastreamConnectionProfilePrivateConnectivityPtrOutput {
		return v.PrivateConnectivity
	}).(DatastreamConnectionProfilePrivateConnectivityPtrOutput)
}

func (o DatastreamConnectionProfileOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// SQL Server database profile.
func (o DatastreamConnectionProfileOutput) SqlServerProfile() DatastreamConnectionProfileSqlServerProfilePtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) DatastreamConnectionProfileSqlServerProfilePtrOutput {
		return v.SqlServerProfile
	}).(DatastreamConnectionProfileSqlServerProfilePtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DatastreamConnectionProfileOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DatastreamConnectionProfileOutput) Timeouts() DatastreamConnectionProfileTimeoutsPtrOutput {
	return o.ApplyT(func(v *DatastreamConnectionProfile) DatastreamConnectionProfileTimeoutsPtrOutput { return v.Timeouts }).(DatastreamConnectionProfileTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatastreamConnectionProfileInput)(nil)).Elem(), &DatastreamConnectionProfile{})
	pulumi.RegisterOutputType(DatastreamConnectionProfileOutput{})
}
