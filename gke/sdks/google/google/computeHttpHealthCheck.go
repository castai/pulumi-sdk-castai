// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeHttpHealthCheck struct {
	pulumi.CustomResourceState

	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec         pulumi.Float64PtrOutput `pulumi:"checkIntervalSec"`
	ComputeHttpHealthCheckId pulumi.StringOutput     `pulumi:"computeHttpHealthCheckId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold pulumi.Float64PtrOutput `pulumi:"healthyThreshold"`
	// The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of
	// which this health check is performed will be used.
	Host pulumi.StringPtrOutput `pulumi:"host"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// The TCP port number for the HTTP health check request. The default value is 80.
	Port    pulumi.Float64PtrOutput `pulumi:"port"`
	Project pulumi.StringOutput     `pulumi:"project"`
	// The request path of the HTTP health check request. The default value is /.
	RequestPath pulumi.StringPtrOutput `pulumi:"requestPath"`
	SelfLink    pulumi.StringOutput    `pulumi:"selfLink"`
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec pulumi.Float64PtrOutput                 `pulumi:"timeoutSec"`
	Timeouts   ComputeHttpHealthCheckTimeoutsPtrOutput `pulumi:"timeouts"`
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold pulumi.Float64PtrOutput `pulumi:"unhealthyThreshold"`
}

// NewComputeHttpHealthCheck registers a new resource with the given unique name, arguments, and options.
func NewComputeHttpHealthCheck(ctx *pulumi.Context,
	name string, args *ComputeHttpHealthCheckArgs, opts ...pulumi.ResourceOption) (*ComputeHttpHealthCheck, error) {
	if args == nil {
		args = &ComputeHttpHealthCheckArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeHttpHealthCheck
	err = ctx.RegisterPackageResource("google:index/computeHttpHealthCheck:ComputeHttpHealthCheck", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeHttpHealthCheck gets an existing ComputeHttpHealthCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeHttpHealthCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeHttpHealthCheckState, opts ...pulumi.ResourceOption) (*ComputeHttpHealthCheck, error) {
	var resource ComputeHttpHealthCheck
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeHttpHealthCheck:ComputeHttpHealthCheck", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeHttpHealthCheck resources.
type computeHttpHealthCheckState struct {
	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec         *float64 `pulumi:"checkIntervalSec"`
	ComputeHttpHealthCheckId *string  `pulumi:"computeHttpHealthCheckId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold *float64 `pulumi:"healthyThreshold"`
	// The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of
	// which this health check is performed will be used.
	Host *string `pulumi:"host"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The TCP port number for the HTTP health check request. The default value is 80.
	Port    *float64 `pulumi:"port"`
	Project *string  `pulumi:"project"`
	// The request path of the HTTP health check request. The default value is /.
	RequestPath *string `pulumi:"requestPath"`
	SelfLink    *string `pulumi:"selfLink"`
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec *float64                        `pulumi:"timeoutSec"`
	Timeouts   *ComputeHttpHealthCheckTimeouts `pulumi:"timeouts"`
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold *float64 `pulumi:"unhealthyThreshold"`
}

type ComputeHttpHealthCheckState struct {
	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec         pulumi.Float64PtrInput
	ComputeHttpHealthCheckId pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold pulumi.Float64PtrInput
	// The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of
	// which this health check is performed will be used.
	Host pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The TCP port number for the HTTP health check request. The default value is 80.
	Port    pulumi.Float64PtrInput
	Project pulumi.StringPtrInput
	// The request path of the HTTP health check request. The default value is /.
	RequestPath pulumi.StringPtrInput
	SelfLink    pulumi.StringPtrInput
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec pulumi.Float64PtrInput
	Timeouts   ComputeHttpHealthCheckTimeoutsPtrInput
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold pulumi.Float64PtrInput
}

func (ComputeHttpHealthCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeHttpHealthCheckState)(nil)).Elem()
}

type computeHttpHealthCheckArgs struct {
	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec         *float64 `pulumi:"checkIntervalSec"`
	ComputeHttpHealthCheckId *string  `pulumi:"computeHttpHealthCheckId"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold *float64 `pulumi:"healthyThreshold"`
	// The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of
	// which this health check is performed will be used.
	Host *string `pulumi:"host"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// The TCP port number for the HTTP health check request. The default value is 80.
	Port    *float64 `pulumi:"port"`
	Project *string  `pulumi:"project"`
	// The request path of the HTTP health check request. The default value is /.
	RequestPath *string `pulumi:"requestPath"`
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec *float64                        `pulumi:"timeoutSec"`
	Timeouts   *ComputeHttpHealthCheckTimeouts `pulumi:"timeouts"`
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold *float64 `pulumi:"unhealthyThreshold"`
}

// The set of arguments for constructing a ComputeHttpHealthCheck resource.
type ComputeHttpHealthCheckArgs struct {
	// How often (in seconds) to send a health check. The default value is 5 seconds.
	CheckIntervalSec         pulumi.Float64PtrInput
	ComputeHttpHealthCheckId pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
	HealthyThreshold pulumi.Float64PtrInput
	// The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of
	// which this health check is performed will be used.
	Host pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// The TCP port number for the HTTP health check request. The default value is 80.
	Port    pulumi.Float64PtrInput
	Project pulumi.StringPtrInput
	// The request path of the HTTP health check request. The default value is /.
	RequestPath pulumi.StringPtrInput
	// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
	// have greater value than checkIntervalSec.
	TimeoutSec pulumi.Float64PtrInput
	Timeouts   ComputeHttpHealthCheckTimeoutsPtrInput
	// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
	UnhealthyThreshold pulumi.Float64PtrInput
}

func (ComputeHttpHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeHttpHealthCheckArgs)(nil)).Elem()
}

type ComputeHttpHealthCheckInput interface {
	pulumi.Input

	ToComputeHttpHealthCheckOutput() ComputeHttpHealthCheckOutput
	ToComputeHttpHealthCheckOutputWithContext(ctx context.Context) ComputeHttpHealthCheckOutput
}

func (*ComputeHttpHealthCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeHttpHealthCheck)(nil)).Elem()
}

func (i *ComputeHttpHealthCheck) ToComputeHttpHealthCheckOutput() ComputeHttpHealthCheckOutput {
	return i.ToComputeHttpHealthCheckOutputWithContext(context.Background())
}

func (i *ComputeHttpHealthCheck) ToComputeHttpHealthCheckOutputWithContext(ctx context.Context) ComputeHttpHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeHttpHealthCheckOutput)
}

type ComputeHttpHealthCheckOutput struct{ *pulumi.OutputState }

func (ComputeHttpHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeHttpHealthCheck)(nil)).Elem()
}

func (o ComputeHttpHealthCheckOutput) ToComputeHttpHealthCheckOutput() ComputeHttpHealthCheckOutput {
	return o
}

func (o ComputeHttpHealthCheckOutput) ToComputeHttpHealthCheckOutputWithContext(ctx context.Context) ComputeHttpHealthCheckOutput {
	return o
}

// How often (in seconds) to send a health check. The default value is 5 seconds.
func (o ComputeHttpHealthCheckOutput) CheckIntervalSec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.Float64PtrOutput { return v.CheckIntervalSec }).(pulumi.Float64PtrOutput)
}

func (o ComputeHttpHealthCheckOutput) ComputeHttpHealthCheckId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.StringOutput { return v.ComputeHttpHealthCheckId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeHttpHealthCheckOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o ComputeHttpHealthCheckOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
func (o ComputeHttpHealthCheckOutput) HealthyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.Float64PtrOutput { return v.HealthyThreshold }).(pulumi.Float64PtrOutput)
}

// The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of
// which this health check is performed will be used.
func (o ComputeHttpHealthCheckOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.StringPtrOutput { return v.Host }).(pulumi.StringPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeHttpHealthCheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The TCP port number for the HTTP health check request. The default value is 80.
func (o ComputeHttpHealthCheckOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.Float64PtrOutput { return v.Port }).(pulumi.Float64PtrOutput)
}

func (o ComputeHttpHealthCheckOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The request path of the HTTP health check request. The default value is /.
func (o ComputeHttpHealthCheckOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.StringPtrOutput { return v.RequestPath }).(pulumi.StringPtrOutput)
}

func (o ComputeHttpHealthCheckOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to
// have greater value than checkIntervalSec.
func (o ComputeHttpHealthCheckOutput) TimeoutSec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.Float64PtrOutput { return v.TimeoutSec }).(pulumi.Float64PtrOutput)
}

func (o ComputeHttpHealthCheckOutput) Timeouts() ComputeHttpHealthCheckTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) ComputeHttpHealthCheckTimeoutsPtrOutput { return v.Timeouts }).(ComputeHttpHealthCheckTimeoutsPtrOutput)
}

// A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
func (o ComputeHttpHealthCheckOutput) UnhealthyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeHttpHealthCheck) pulumi.Float64PtrOutput { return v.UnhealthyThreshold }).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeHttpHealthCheckInput)(nil)).Elem(), &ComputeHttpHealthCheck{})
	pulumi.RegisterOutputType(ComputeHttpHealthCheckOutput{})
}
