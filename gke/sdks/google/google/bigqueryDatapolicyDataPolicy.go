// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryDatapolicyDataPolicy struct {
	pulumi.CustomResourceState

	BigqueryDatapolicyDataPolicyId pulumi.StringOutput `pulumi:"bigqueryDatapolicyDataPolicyId"`
	// The data masking policy that specifies the data masking rule to use.
	DataMaskingPolicy BigqueryDatapolicyDataPolicyDataMaskingPolicyPtrOutput `pulumi:"dataMaskingPolicy"`
	// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in
	// part of the resource name.
	DataPolicyId pulumi.StringOutput `pulumi:"dataPolicyId"`
	// The enrollment level of the service. Possible values: ["COLUMN_LEVEL_SECURITY_POLICY", "DATA_MASKING_POLICY"]
	DataPolicyType pulumi.StringOutput `pulumi:"dataPolicyType"`
	// The name of the location of the data policy.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name of this data policy, in the format of
	// projects/{project_number}/locations/{locationId}/dataPolicies/{dataPolicyId}.
	Name pulumi.StringOutput `pulumi:"name"`
	// Policy tag resource name, in the format of
	// projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
	PolicyTag pulumi.StringOutput                           `pulumi:"policyTag"`
	Project   pulumi.StringOutput                           `pulumi:"project"`
	Timeouts  BigqueryDatapolicyDataPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewBigqueryDatapolicyDataPolicy registers a new resource with the given unique name, arguments, and options.
func NewBigqueryDatapolicyDataPolicy(ctx *pulumi.Context,
	name string, args *BigqueryDatapolicyDataPolicyArgs, opts ...pulumi.ResourceOption) (*BigqueryDatapolicyDataPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'DataPolicyId'")
	}
	if args.DataPolicyType == nil {
		return nil, errors.New("invalid value for required argument 'DataPolicyType'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.PolicyTag == nil {
		return nil, errors.New("invalid value for required argument 'PolicyTag'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryDatapolicyDataPolicy
	err = ctx.RegisterPackageResource("google:index/bigqueryDatapolicyDataPolicy:BigqueryDatapolicyDataPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryDatapolicyDataPolicy gets an existing BigqueryDatapolicyDataPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryDatapolicyDataPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryDatapolicyDataPolicyState, opts ...pulumi.ResourceOption) (*BigqueryDatapolicyDataPolicy, error) {
	var resource BigqueryDatapolicyDataPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigqueryDatapolicyDataPolicy:BigqueryDatapolicyDataPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryDatapolicyDataPolicy resources.
type bigqueryDatapolicyDataPolicyState struct {
	BigqueryDatapolicyDataPolicyId *string `pulumi:"bigqueryDatapolicyDataPolicyId"`
	// The data masking policy that specifies the data masking rule to use.
	DataMaskingPolicy *BigqueryDatapolicyDataPolicyDataMaskingPolicy `pulumi:"dataMaskingPolicy"`
	// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in
	// part of the resource name.
	DataPolicyId *string `pulumi:"dataPolicyId"`
	// The enrollment level of the service. Possible values: ["COLUMN_LEVEL_SECURITY_POLICY", "DATA_MASKING_POLICY"]
	DataPolicyType *string `pulumi:"dataPolicyType"`
	// The name of the location of the data policy.
	Location *string `pulumi:"location"`
	// Resource name of this data policy, in the format of
	// projects/{project_number}/locations/{locationId}/dataPolicies/{dataPolicyId}.
	Name *string `pulumi:"name"`
	// Policy tag resource name, in the format of
	// projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
	PolicyTag *string                               `pulumi:"policyTag"`
	Project   *string                               `pulumi:"project"`
	Timeouts  *BigqueryDatapolicyDataPolicyTimeouts `pulumi:"timeouts"`
}

type BigqueryDatapolicyDataPolicyState struct {
	BigqueryDatapolicyDataPolicyId pulumi.StringPtrInput
	// The data masking policy that specifies the data masking rule to use.
	DataMaskingPolicy BigqueryDatapolicyDataPolicyDataMaskingPolicyPtrInput
	// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in
	// part of the resource name.
	DataPolicyId pulumi.StringPtrInput
	// The enrollment level of the service. Possible values: ["COLUMN_LEVEL_SECURITY_POLICY", "DATA_MASKING_POLICY"]
	DataPolicyType pulumi.StringPtrInput
	// The name of the location of the data policy.
	Location pulumi.StringPtrInput
	// Resource name of this data policy, in the format of
	// projects/{project_number}/locations/{locationId}/dataPolicies/{dataPolicyId}.
	Name pulumi.StringPtrInput
	// Policy tag resource name, in the format of
	// projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
	PolicyTag pulumi.StringPtrInput
	Project   pulumi.StringPtrInput
	Timeouts  BigqueryDatapolicyDataPolicyTimeoutsPtrInput
}

func (BigqueryDatapolicyDataPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryDatapolicyDataPolicyState)(nil)).Elem()
}

type bigqueryDatapolicyDataPolicyArgs struct {
	BigqueryDatapolicyDataPolicyId *string `pulumi:"bigqueryDatapolicyDataPolicyId"`
	// The data masking policy that specifies the data masking rule to use.
	DataMaskingPolicy *BigqueryDatapolicyDataPolicyDataMaskingPolicy `pulumi:"dataMaskingPolicy"`
	// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in
	// part of the resource name.
	DataPolicyId string `pulumi:"dataPolicyId"`
	// The enrollment level of the service. Possible values: ["COLUMN_LEVEL_SECURITY_POLICY", "DATA_MASKING_POLICY"]
	DataPolicyType string `pulumi:"dataPolicyType"`
	// The name of the location of the data policy.
	Location string `pulumi:"location"`
	// Policy tag resource name, in the format of
	// projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
	PolicyTag string                                `pulumi:"policyTag"`
	Project   *string                               `pulumi:"project"`
	Timeouts  *BigqueryDatapolicyDataPolicyTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BigqueryDatapolicyDataPolicy resource.
type BigqueryDatapolicyDataPolicyArgs struct {
	BigqueryDatapolicyDataPolicyId pulumi.StringPtrInput
	// The data masking policy that specifies the data masking rule to use.
	DataMaskingPolicy BigqueryDatapolicyDataPolicyDataMaskingPolicyPtrInput
	// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in
	// part of the resource name.
	DataPolicyId pulumi.StringInput
	// The enrollment level of the service. Possible values: ["COLUMN_LEVEL_SECURITY_POLICY", "DATA_MASKING_POLICY"]
	DataPolicyType pulumi.StringInput
	// The name of the location of the data policy.
	Location pulumi.StringInput
	// Policy tag resource name, in the format of
	// projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
	PolicyTag pulumi.StringInput
	Project   pulumi.StringPtrInput
	Timeouts  BigqueryDatapolicyDataPolicyTimeoutsPtrInput
}

func (BigqueryDatapolicyDataPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryDatapolicyDataPolicyArgs)(nil)).Elem()
}

type BigqueryDatapolicyDataPolicyInput interface {
	pulumi.Input

	ToBigqueryDatapolicyDataPolicyOutput() BigqueryDatapolicyDataPolicyOutput
	ToBigqueryDatapolicyDataPolicyOutputWithContext(ctx context.Context) BigqueryDatapolicyDataPolicyOutput
}

func (*BigqueryDatapolicyDataPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryDatapolicyDataPolicy)(nil)).Elem()
}

func (i *BigqueryDatapolicyDataPolicy) ToBigqueryDatapolicyDataPolicyOutput() BigqueryDatapolicyDataPolicyOutput {
	return i.ToBigqueryDatapolicyDataPolicyOutputWithContext(context.Background())
}

func (i *BigqueryDatapolicyDataPolicy) ToBigqueryDatapolicyDataPolicyOutputWithContext(ctx context.Context) BigqueryDatapolicyDataPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryDatapolicyDataPolicyOutput)
}

type BigqueryDatapolicyDataPolicyOutput struct{ *pulumi.OutputState }

func (BigqueryDatapolicyDataPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryDatapolicyDataPolicy)(nil)).Elem()
}

func (o BigqueryDatapolicyDataPolicyOutput) ToBigqueryDatapolicyDataPolicyOutput() BigqueryDatapolicyDataPolicyOutput {
	return o
}

func (o BigqueryDatapolicyDataPolicyOutput) ToBigqueryDatapolicyDataPolicyOutputWithContext(ctx context.Context) BigqueryDatapolicyDataPolicyOutput {
	return o
}

func (o BigqueryDatapolicyDataPolicyOutput) BigqueryDatapolicyDataPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicy) pulumi.StringOutput { return v.BigqueryDatapolicyDataPolicyId }).(pulumi.StringOutput)
}

// The data masking policy that specifies the data masking rule to use.
func (o BigqueryDatapolicyDataPolicyOutput) DataMaskingPolicy() BigqueryDatapolicyDataPolicyDataMaskingPolicyPtrOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicy) BigqueryDatapolicyDataPolicyDataMaskingPolicyPtrOutput {
		return v.DataMaskingPolicy
	}).(BigqueryDatapolicyDataPolicyDataMaskingPolicyPtrOutput)
}

// User-assigned (human readable) ID of the data policy that needs to be unique within a project. Used as {dataPolicyId} in
// part of the resource name.
func (o BigqueryDatapolicyDataPolicyOutput) DataPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicy) pulumi.StringOutput { return v.DataPolicyId }).(pulumi.StringOutput)
}

// The enrollment level of the service. Possible values: ["COLUMN_LEVEL_SECURITY_POLICY", "DATA_MASKING_POLICY"]
func (o BigqueryDatapolicyDataPolicyOutput) DataPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicy) pulumi.StringOutput { return v.DataPolicyType }).(pulumi.StringOutput)
}

// The name of the location of the data policy.
func (o BigqueryDatapolicyDataPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource name of this data policy, in the format of
// projects/{project_number}/locations/{locationId}/dataPolicies/{dataPolicyId}.
func (o BigqueryDatapolicyDataPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Policy tag resource name, in the format of
// projects/{project_number}/locations/{locationId}/taxonomies/{taxonomyId}/policyTags/{policyTag_id}.
func (o BigqueryDatapolicyDataPolicyOutput) PolicyTag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicy) pulumi.StringOutput { return v.PolicyTag }).(pulumi.StringOutput)
}

func (o BigqueryDatapolicyDataPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigqueryDatapolicyDataPolicyOutput) Timeouts() BigqueryDatapolicyDataPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *BigqueryDatapolicyDataPolicy) BigqueryDatapolicyDataPolicyTimeoutsPtrOutput { return v.Timeouts }).(BigqueryDatapolicyDataPolicyTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryDatapolicyDataPolicyInput)(nil)).Elem(), &BigqueryDatapolicyDataPolicy{})
	pulumi.RegisterOutputType(BigqueryDatapolicyDataPolicyOutput{})
}
