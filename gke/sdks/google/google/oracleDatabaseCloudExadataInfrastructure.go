// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OracleDatabaseCloudExadataInfrastructure struct {
	pulumi.CustomResourceState

	// The ID of the Exadata Infrastructure to create. This value is restricted to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with a letter or a number.
	CloudExadataInfrastructureId pulumi.StringOutput `pulumi:"cloudExadataInfrastructureId"`
	// The date and time that the Exadata Infrastructure was created.
	CreateTime         pulumi.StringOutput  `pulumi:"createTime"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// User friendly name for this resource.
	DisplayName     pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Entitlement ID of the private offer against which this infrastructure resource is provisioned.
	EntitlementId pulumi.StringOutput `pulumi:"entitlementId"`
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone pulumi.StringOutput `pulumi:"gcpOracleZone"`
	// Labels or tags associated with the resource. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbServer'.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The name of the Exadata Infrastructure resource with the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
	Name                                       pulumi.StringOutput `pulumi:"name"`
	OracleDatabaseCloudExadataInfrastructureId pulumi.StringOutput `pulumi:"oracleDatabaseCloudExadataInfrastructureId"`
	Project                                    pulumi.StringOutput `pulumi:"project"`
	// Various properties of Exadata Infrastructure.
	Properties OracleDatabaseCloudExadataInfrastructurePropertiesPtrOutput `pulumi:"properties"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                                    `pulumi:"terraformLabels"`
	Timeouts        OracleDatabaseCloudExadataInfrastructureTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewOracleDatabaseCloudExadataInfrastructure registers a new resource with the given unique name, arguments, and options.
func NewOracleDatabaseCloudExadataInfrastructure(ctx *pulumi.Context,
	name string, args *OracleDatabaseCloudExadataInfrastructureArgs, opts ...pulumi.ResourceOption) (*OracleDatabaseCloudExadataInfrastructure, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudExadataInfrastructureId == nil {
		return nil, errors.New("invalid value for required argument 'CloudExadataInfrastructureId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource OracleDatabaseCloudExadataInfrastructure
	err = ctx.RegisterPackageResource("google:index/oracleDatabaseCloudExadataInfrastructure:OracleDatabaseCloudExadataInfrastructure", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOracleDatabaseCloudExadataInfrastructure gets an existing OracleDatabaseCloudExadataInfrastructure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOracleDatabaseCloudExadataInfrastructure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OracleDatabaseCloudExadataInfrastructureState, opts ...pulumi.ResourceOption) (*OracleDatabaseCloudExadataInfrastructure, error) {
	var resource OracleDatabaseCloudExadataInfrastructure
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/oracleDatabaseCloudExadataInfrastructure:OracleDatabaseCloudExadataInfrastructure", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OracleDatabaseCloudExadataInfrastructure resources.
type oracleDatabaseCloudExadataInfrastructureState struct {
	// The ID of the Exadata Infrastructure to create. This value is restricted to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with a letter or a number.
	CloudExadataInfrastructureId *string `pulumi:"cloudExadataInfrastructureId"`
	// The date and time that the Exadata Infrastructure was created.
	CreateTime         *string `pulumi:"createTime"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// User friendly name for this resource.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Entitlement ID of the private offer against which this infrastructure resource is provisioned.
	EntitlementId *string `pulumi:"entitlementId"`
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone *string `pulumi:"gcpOracleZone"`
	// Labels or tags associated with the resource. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbServer'.
	Location *string `pulumi:"location"`
	// Identifier. The name of the Exadata Infrastructure resource with the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
	Name                                       *string `pulumi:"name"`
	OracleDatabaseCloudExadataInfrastructureId *string `pulumi:"oracleDatabaseCloudExadataInfrastructureId"`
	Project                                    *string `pulumi:"project"`
	// Various properties of Exadata Infrastructure.
	Properties *OracleDatabaseCloudExadataInfrastructureProperties `pulumi:"properties"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                                 `pulumi:"terraformLabels"`
	Timeouts        *OracleDatabaseCloudExadataInfrastructureTimeouts `pulumi:"timeouts"`
}

type OracleDatabaseCloudExadataInfrastructureState struct {
	// The ID of the Exadata Infrastructure to create. This value is restricted to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with a letter or a number.
	CloudExadataInfrastructureId pulumi.StringPtrInput
	// The date and time that the Exadata Infrastructure was created.
	CreateTime         pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// User friendly name for this resource.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Entitlement ID of the private offer against which this infrastructure resource is provisioned.
	EntitlementId pulumi.StringPtrInput
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone pulumi.StringPtrInput
	// Labels or tags associated with the resource. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbServer'.
	Location pulumi.StringPtrInput
	// Identifier. The name of the Exadata Infrastructure resource with the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
	Name                                       pulumi.StringPtrInput
	OracleDatabaseCloudExadataInfrastructureId pulumi.StringPtrInput
	Project                                    pulumi.StringPtrInput
	// Various properties of Exadata Infrastructure.
	Properties OracleDatabaseCloudExadataInfrastructurePropertiesPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        OracleDatabaseCloudExadataInfrastructureTimeoutsPtrInput
}

func (OracleDatabaseCloudExadataInfrastructureState) ElementType() reflect.Type {
	return reflect.TypeOf((*oracleDatabaseCloudExadataInfrastructureState)(nil)).Elem()
}

type oracleDatabaseCloudExadataInfrastructureArgs struct {
	// The ID of the Exadata Infrastructure to create. This value is restricted to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with a letter or a number.
	CloudExadataInfrastructureId string `pulumi:"cloudExadataInfrastructureId"`
	DeletionProtection           *bool  `pulumi:"deletionProtection"`
	// User friendly name for this resource.
	DisplayName *string `pulumi:"displayName"`
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone *string `pulumi:"gcpOracleZone"`
	// Labels or tags associated with the resource. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbServer'.
	Location                                   string  `pulumi:"location"`
	OracleDatabaseCloudExadataInfrastructureId *string `pulumi:"oracleDatabaseCloudExadataInfrastructureId"`
	Project                                    *string `pulumi:"project"`
	// Various properties of Exadata Infrastructure.
	Properties *OracleDatabaseCloudExadataInfrastructureProperties `pulumi:"properties"`
	Timeouts   *OracleDatabaseCloudExadataInfrastructureTimeouts   `pulumi:"timeouts"`
}

// The set of arguments for constructing a OracleDatabaseCloudExadataInfrastructure resource.
type OracleDatabaseCloudExadataInfrastructureArgs struct {
	// The ID of the Exadata Infrastructure to create. This value is restricted to (^a-z?$) and must be a maximum of 63
	// characters in length. The value must start with a letter and end with a letter or a number.
	CloudExadataInfrastructureId pulumi.StringInput
	DeletionProtection           pulumi.BoolPtrInput
	// User friendly name for this resource.
	DisplayName pulumi.StringPtrInput
	// GCP location where Oracle Exadata is hosted.
	GcpOracleZone pulumi.StringPtrInput
	// Labels or tags associated with the resource. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbServer'.
	Location                                   pulumi.StringInput
	OracleDatabaseCloudExadataInfrastructureId pulumi.StringPtrInput
	Project                                    pulumi.StringPtrInput
	// Various properties of Exadata Infrastructure.
	Properties OracleDatabaseCloudExadataInfrastructurePropertiesPtrInput
	Timeouts   OracleDatabaseCloudExadataInfrastructureTimeoutsPtrInput
}

func (OracleDatabaseCloudExadataInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oracleDatabaseCloudExadataInfrastructureArgs)(nil)).Elem()
}

type OracleDatabaseCloudExadataInfrastructureInput interface {
	pulumi.Input

	ToOracleDatabaseCloudExadataInfrastructureOutput() OracleDatabaseCloudExadataInfrastructureOutput
	ToOracleDatabaseCloudExadataInfrastructureOutputWithContext(ctx context.Context) OracleDatabaseCloudExadataInfrastructureOutput
}

func (*OracleDatabaseCloudExadataInfrastructure) ElementType() reflect.Type {
	return reflect.TypeOf((**OracleDatabaseCloudExadataInfrastructure)(nil)).Elem()
}

func (i *OracleDatabaseCloudExadataInfrastructure) ToOracleDatabaseCloudExadataInfrastructureOutput() OracleDatabaseCloudExadataInfrastructureOutput {
	return i.ToOracleDatabaseCloudExadataInfrastructureOutputWithContext(context.Background())
}

func (i *OracleDatabaseCloudExadataInfrastructure) ToOracleDatabaseCloudExadataInfrastructureOutputWithContext(ctx context.Context) OracleDatabaseCloudExadataInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleDatabaseCloudExadataInfrastructureOutput)
}

type OracleDatabaseCloudExadataInfrastructureOutput struct{ *pulumi.OutputState }

func (OracleDatabaseCloudExadataInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OracleDatabaseCloudExadataInfrastructure)(nil)).Elem()
}

func (o OracleDatabaseCloudExadataInfrastructureOutput) ToOracleDatabaseCloudExadataInfrastructureOutput() OracleDatabaseCloudExadataInfrastructureOutput {
	return o
}

func (o OracleDatabaseCloudExadataInfrastructureOutput) ToOracleDatabaseCloudExadataInfrastructureOutputWithContext(ctx context.Context) OracleDatabaseCloudExadataInfrastructureOutput {
	return o
}

// The ID of the Exadata Infrastructure to create. This value is restricted to (^a-z?$) and must be a maximum of 63
// characters in length. The value must start with a letter and end with a letter or a number.
func (o OracleDatabaseCloudExadataInfrastructureOutput) CloudExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringOutput {
		return v.CloudExadataInfrastructureId
	}).(pulumi.StringOutput)
}

// The date and time that the Exadata Infrastructure was created.
func (o OracleDatabaseCloudExadataInfrastructureOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o OracleDatabaseCloudExadataInfrastructureOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// User friendly name for this resource.
func (o OracleDatabaseCloudExadataInfrastructureOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o OracleDatabaseCloudExadataInfrastructureOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Entitlement ID of the private offer against which this infrastructure resource is provisioned.
func (o OracleDatabaseCloudExadataInfrastructureOutput) EntitlementId() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringOutput { return v.EntitlementId }).(pulumi.StringOutput)
}

// GCP location where Oracle Exadata is hosted.
func (o OracleDatabaseCloudExadataInfrastructureOutput) GcpOracleZone() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringOutput { return v.GcpOracleZone }).(pulumi.StringOutput)
}

// Labels or tags associated with the resource. **Note**: This field is non-authoritative, and will only manage the labels
// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o OracleDatabaseCloudExadataInfrastructureOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource 'name'. See documentation for resource type
// 'oracledatabase.googleapis.com/DbServer'.
func (o OracleDatabaseCloudExadataInfrastructureOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The name of the Exadata Infrastructure resource with the following format:
// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
func (o OracleDatabaseCloudExadataInfrastructureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o OracleDatabaseCloudExadataInfrastructureOutput) OracleDatabaseCloudExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringOutput {
		return v.OracleDatabaseCloudExadataInfrastructureId
	}).(pulumi.StringOutput)
}

func (o OracleDatabaseCloudExadataInfrastructureOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Various properties of Exadata Infrastructure.
func (o OracleDatabaseCloudExadataInfrastructureOutput) Properties() OracleDatabaseCloudExadataInfrastructurePropertiesPtrOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) OracleDatabaseCloudExadataInfrastructurePropertiesPtrOutput {
		return v.Properties
	}).(OracleDatabaseCloudExadataInfrastructurePropertiesPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o OracleDatabaseCloudExadataInfrastructureOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o OracleDatabaseCloudExadataInfrastructureOutput) Timeouts() OracleDatabaseCloudExadataInfrastructureTimeoutsPtrOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudExadataInfrastructure) OracleDatabaseCloudExadataInfrastructureTimeoutsPtrOutput {
		return v.Timeouts
	}).(OracleDatabaseCloudExadataInfrastructureTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OracleDatabaseCloudExadataInfrastructureInput)(nil)).Elem(), &OracleDatabaseCloudExadataInfrastructure{})
	pulumi.RegisterOutputType(OracleDatabaseCloudExadataInfrastructureOutput{})
}
