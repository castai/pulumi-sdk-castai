// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryAnalyticsHubListingIamBinding struct {
	pulumi.CustomResourceState

	BigqueryAnalyticsHubListingIamBindingId pulumi.StringOutput                                     `pulumi:"bigqueryAnalyticsHubListingIamBindingId"`
	Condition                               BigqueryAnalyticsHubListingIamBindingConditionPtrOutput `pulumi:"condition"`
	DataExchangeId                          pulumi.StringOutput                                     `pulumi:"dataExchangeId"`
	Etag                                    pulumi.StringOutput                                     `pulumi:"etag"`
	ListingId                               pulumi.StringOutput                                     `pulumi:"listingId"`
	Location                                pulumi.StringOutput                                     `pulumi:"location"`
	Members                                 pulumi.StringArrayOutput                                `pulumi:"members"`
	Project                                 pulumi.StringOutput                                     `pulumi:"project"`
	Role                                    pulumi.StringOutput                                     `pulumi:"role"`
}

// NewBigqueryAnalyticsHubListingIamBinding registers a new resource with the given unique name, arguments, and options.
func NewBigqueryAnalyticsHubListingIamBinding(ctx *pulumi.Context,
	name string, args *BigqueryAnalyticsHubListingIamBindingArgs, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubListingIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataExchangeId == nil {
		return nil, errors.New("invalid value for required argument 'DataExchangeId'")
	}
	if args.ListingId == nil {
		return nil, errors.New("invalid value for required argument 'ListingId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryAnalyticsHubListingIamBinding
	err = ctx.RegisterPackageResource("google:index/bigqueryAnalyticsHubListingIamBinding:BigqueryAnalyticsHubListingIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryAnalyticsHubListingIamBinding gets an existing BigqueryAnalyticsHubListingIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryAnalyticsHubListingIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryAnalyticsHubListingIamBindingState, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubListingIamBinding, error) {
	var resource BigqueryAnalyticsHubListingIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigqueryAnalyticsHubListingIamBinding:BigqueryAnalyticsHubListingIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryAnalyticsHubListingIamBinding resources.
type bigqueryAnalyticsHubListingIamBindingState struct {
	BigqueryAnalyticsHubListingIamBindingId *string                                         `pulumi:"bigqueryAnalyticsHubListingIamBindingId"`
	Condition                               *BigqueryAnalyticsHubListingIamBindingCondition `pulumi:"condition"`
	DataExchangeId                          *string                                         `pulumi:"dataExchangeId"`
	Etag                                    *string                                         `pulumi:"etag"`
	ListingId                               *string                                         `pulumi:"listingId"`
	Location                                *string                                         `pulumi:"location"`
	Members                                 []string                                        `pulumi:"members"`
	Project                                 *string                                         `pulumi:"project"`
	Role                                    *string                                         `pulumi:"role"`
}

type BigqueryAnalyticsHubListingIamBindingState struct {
	BigqueryAnalyticsHubListingIamBindingId pulumi.StringPtrInput
	Condition                               BigqueryAnalyticsHubListingIamBindingConditionPtrInput
	DataExchangeId                          pulumi.StringPtrInput
	Etag                                    pulumi.StringPtrInput
	ListingId                               pulumi.StringPtrInput
	Location                                pulumi.StringPtrInput
	Members                                 pulumi.StringArrayInput
	Project                                 pulumi.StringPtrInput
	Role                                    pulumi.StringPtrInput
}

func (BigqueryAnalyticsHubListingIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubListingIamBindingState)(nil)).Elem()
}

type bigqueryAnalyticsHubListingIamBindingArgs struct {
	BigqueryAnalyticsHubListingIamBindingId *string                                         `pulumi:"bigqueryAnalyticsHubListingIamBindingId"`
	Condition                               *BigqueryAnalyticsHubListingIamBindingCondition `pulumi:"condition"`
	DataExchangeId                          string                                          `pulumi:"dataExchangeId"`
	ListingId                               string                                          `pulumi:"listingId"`
	Location                                *string                                         `pulumi:"location"`
	Members                                 []string                                        `pulumi:"members"`
	Project                                 *string                                         `pulumi:"project"`
	Role                                    string                                          `pulumi:"role"`
}

// The set of arguments for constructing a BigqueryAnalyticsHubListingIamBinding resource.
type BigqueryAnalyticsHubListingIamBindingArgs struct {
	BigqueryAnalyticsHubListingIamBindingId pulumi.StringPtrInput
	Condition                               BigqueryAnalyticsHubListingIamBindingConditionPtrInput
	DataExchangeId                          pulumi.StringInput
	ListingId                               pulumi.StringInput
	Location                                pulumi.StringPtrInput
	Members                                 pulumi.StringArrayInput
	Project                                 pulumi.StringPtrInput
	Role                                    pulumi.StringInput
}

func (BigqueryAnalyticsHubListingIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubListingIamBindingArgs)(nil)).Elem()
}

type BigqueryAnalyticsHubListingIamBindingInput interface {
	pulumi.Input

	ToBigqueryAnalyticsHubListingIamBindingOutput() BigqueryAnalyticsHubListingIamBindingOutput
	ToBigqueryAnalyticsHubListingIamBindingOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingIamBindingOutput
}

func (*BigqueryAnalyticsHubListingIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubListingIamBinding)(nil)).Elem()
}

func (i *BigqueryAnalyticsHubListingIamBinding) ToBigqueryAnalyticsHubListingIamBindingOutput() BigqueryAnalyticsHubListingIamBindingOutput {
	return i.ToBigqueryAnalyticsHubListingIamBindingOutputWithContext(context.Background())
}

func (i *BigqueryAnalyticsHubListingIamBinding) ToBigqueryAnalyticsHubListingIamBindingOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryAnalyticsHubListingIamBindingOutput)
}

type BigqueryAnalyticsHubListingIamBindingOutput struct{ *pulumi.OutputState }

func (BigqueryAnalyticsHubListingIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubListingIamBinding)(nil)).Elem()
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) ToBigqueryAnalyticsHubListingIamBindingOutput() BigqueryAnalyticsHubListingIamBindingOutput {
	return o
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) ToBigqueryAnalyticsHubListingIamBindingOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingIamBindingOutput {
	return o
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) BigqueryAnalyticsHubListingIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamBinding) pulumi.StringOutput {
		return v.BigqueryAnalyticsHubListingIamBindingId
	}).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) Condition() BigqueryAnalyticsHubListingIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamBinding) BigqueryAnalyticsHubListingIamBindingConditionPtrOutput {
		return v.Condition
	}).(BigqueryAnalyticsHubListingIamBindingConditionPtrOutput)
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) DataExchangeId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamBinding) pulumi.StringOutput { return v.DataExchangeId }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) ListingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamBinding) pulumi.StringOutput { return v.ListingId }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryAnalyticsHubListingIamBindingInput)(nil)).Elem(), &BigqueryAnalyticsHubListingIamBinding{})
	pulumi.RegisterOutputType(BigqueryAnalyticsHubListingIamBindingOutput{})
}
