// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ColabRuntimeTemplateIamMember struct {
	pulumi.CustomResourceState

	ColabRuntimeTemplateIamMemberId pulumi.StringOutput                             `pulumi:"colabRuntimeTemplateIamMemberId"`
	Condition                       ColabRuntimeTemplateIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                            pulumi.StringOutput                             `pulumi:"etag"`
	Location                        pulumi.StringOutput                             `pulumi:"location"`
	Member                          pulumi.StringOutput                             `pulumi:"member"`
	Project                         pulumi.StringOutput                             `pulumi:"project"`
	Role                            pulumi.StringOutput                             `pulumi:"role"`
	RuntimeTemplate                 pulumi.StringOutput                             `pulumi:"runtimeTemplate"`
}

// NewColabRuntimeTemplateIamMember registers a new resource with the given unique name, arguments, and options.
func NewColabRuntimeTemplateIamMember(ctx *pulumi.Context,
	name string, args *ColabRuntimeTemplateIamMemberArgs, opts ...pulumi.ResourceOption) (*ColabRuntimeTemplateIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.RuntimeTemplate == nil {
		return nil, errors.New("invalid value for required argument 'RuntimeTemplate'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ColabRuntimeTemplateIamMember
	err = ctx.RegisterPackageResource("google:index/colabRuntimeTemplateIamMember:ColabRuntimeTemplateIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetColabRuntimeTemplateIamMember gets an existing ColabRuntimeTemplateIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetColabRuntimeTemplateIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ColabRuntimeTemplateIamMemberState, opts ...pulumi.ResourceOption) (*ColabRuntimeTemplateIamMember, error) {
	var resource ColabRuntimeTemplateIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/colabRuntimeTemplateIamMember:ColabRuntimeTemplateIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ColabRuntimeTemplateIamMember resources.
type colabRuntimeTemplateIamMemberState struct {
	ColabRuntimeTemplateIamMemberId *string                                 `pulumi:"colabRuntimeTemplateIamMemberId"`
	Condition                       *ColabRuntimeTemplateIamMemberCondition `pulumi:"condition"`
	Etag                            *string                                 `pulumi:"etag"`
	Location                        *string                                 `pulumi:"location"`
	Member                          *string                                 `pulumi:"member"`
	Project                         *string                                 `pulumi:"project"`
	Role                            *string                                 `pulumi:"role"`
	RuntimeTemplate                 *string                                 `pulumi:"runtimeTemplate"`
}

type ColabRuntimeTemplateIamMemberState struct {
	ColabRuntimeTemplateIamMemberId pulumi.StringPtrInput
	Condition                       ColabRuntimeTemplateIamMemberConditionPtrInput
	Etag                            pulumi.StringPtrInput
	Location                        pulumi.StringPtrInput
	Member                          pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringPtrInput
	RuntimeTemplate                 pulumi.StringPtrInput
}

func (ColabRuntimeTemplateIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*colabRuntimeTemplateIamMemberState)(nil)).Elem()
}

type colabRuntimeTemplateIamMemberArgs struct {
	ColabRuntimeTemplateIamMemberId *string                                 `pulumi:"colabRuntimeTemplateIamMemberId"`
	Condition                       *ColabRuntimeTemplateIamMemberCondition `pulumi:"condition"`
	Location                        *string                                 `pulumi:"location"`
	Member                          string                                  `pulumi:"member"`
	Project                         *string                                 `pulumi:"project"`
	Role                            string                                  `pulumi:"role"`
	RuntimeTemplate                 string                                  `pulumi:"runtimeTemplate"`
}

// The set of arguments for constructing a ColabRuntimeTemplateIamMember resource.
type ColabRuntimeTemplateIamMemberArgs struct {
	ColabRuntimeTemplateIamMemberId pulumi.StringPtrInput
	Condition                       ColabRuntimeTemplateIamMemberConditionPtrInput
	Location                        pulumi.StringPtrInput
	Member                          pulumi.StringInput
	Project                         pulumi.StringPtrInput
	Role                            pulumi.StringInput
	RuntimeTemplate                 pulumi.StringInput
}

func (ColabRuntimeTemplateIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*colabRuntimeTemplateIamMemberArgs)(nil)).Elem()
}

type ColabRuntimeTemplateIamMemberInput interface {
	pulumi.Input

	ToColabRuntimeTemplateIamMemberOutput() ColabRuntimeTemplateIamMemberOutput
	ToColabRuntimeTemplateIamMemberOutputWithContext(ctx context.Context) ColabRuntimeTemplateIamMemberOutput
}

func (*ColabRuntimeTemplateIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ColabRuntimeTemplateIamMember)(nil)).Elem()
}

func (i *ColabRuntimeTemplateIamMember) ToColabRuntimeTemplateIamMemberOutput() ColabRuntimeTemplateIamMemberOutput {
	return i.ToColabRuntimeTemplateIamMemberOutputWithContext(context.Background())
}

func (i *ColabRuntimeTemplateIamMember) ToColabRuntimeTemplateIamMemberOutputWithContext(ctx context.Context) ColabRuntimeTemplateIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ColabRuntimeTemplateIamMemberOutput)
}

type ColabRuntimeTemplateIamMemberOutput struct{ *pulumi.OutputState }

func (ColabRuntimeTemplateIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ColabRuntimeTemplateIamMember)(nil)).Elem()
}

func (o ColabRuntimeTemplateIamMemberOutput) ToColabRuntimeTemplateIamMemberOutput() ColabRuntimeTemplateIamMemberOutput {
	return o
}

func (o ColabRuntimeTemplateIamMemberOutput) ToColabRuntimeTemplateIamMemberOutputWithContext(ctx context.Context) ColabRuntimeTemplateIamMemberOutput {
	return o
}

func (o ColabRuntimeTemplateIamMemberOutput) ColabRuntimeTemplateIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *ColabRuntimeTemplateIamMember) pulumi.StringOutput { return v.ColabRuntimeTemplateIamMemberId }).(pulumi.StringOutput)
}

func (o ColabRuntimeTemplateIamMemberOutput) Condition() ColabRuntimeTemplateIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *ColabRuntimeTemplateIamMember) ColabRuntimeTemplateIamMemberConditionPtrOutput {
		return v.Condition
	}).(ColabRuntimeTemplateIamMemberConditionPtrOutput)
}

func (o ColabRuntimeTemplateIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ColabRuntimeTemplateIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ColabRuntimeTemplateIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ColabRuntimeTemplateIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o ColabRuntimeTemplateIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ColabRuntimeTemplateIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ColabRuntimeTemplateIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ColabRuntimeTemplateIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ColabRuntimeTemplateIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ColabRuntimeTemplateIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o ColabRuntimeTemplateIamMemberOutput) RuntimeTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v *ColabRuntimeTemplateIamMember) pulumi.StringOutput { return v.RuntimeTemplate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ColabRuntimeTemplateIamMemberInput)(nil)).Elem(), &ColabRuntimeTemplateIamMember{})
	pulumi.RegisterOutputType(ColabRuntimeTemplateIamMemberOutput{})
}
