// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KmsCryptoKeyIamPolicy struct {
	pulumi.CustomResourceState

	CryptoKeyId             pulumi.StringOutput `pulumi:"cryptoKeyId"`
	Etag                    pulumi.StringOutput `pulumi:"etag"`
	KmsCryptoKeyIamPolicyId pulumi.StringOutput `pulumi:"kmsCryptoKeyIamPolicyId"`
	PolicyData              pulumi.StringOutput `pulumi:"policyData"`
}

// NewKmsCryptoKeyIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewKmsCryptoKeyIamPolicy(ctx *pulumi.Context,
	name string, args *KmsCryptoKeyIamPolicyArgs, opts ...pulumi.ResourceOption) (*KmsCryptoKeyIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CryptoKeyId == nil {
		return nil, errors.New("invalid value for required argument 'CryptoKeyId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource KmsCryptoKeyIamPolicy
	err = ctx.RegisterPackageResource("google:index/kmsCryptoKeyIamPolicy:KmsCryptoKeyIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsCryptoKeyIamPolicy gets an existing KmsCryptoKeyIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsCryptoKeyIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsCryptoKeyIamPolicyState, opts ...pulumi.ResourceOption) (*KmsCryptoKeyIamPolicy, error) {
	var resource KmsCryptoKeyIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/kmsCryptoKeyIamPolicy:KmsCryptoKeyIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsCryptoKeyIamPolicy resources.
type kmsCryptoKeyIamPolicyState struct {
	CryptoKeyId             *string `pulumi:"cryptoKeyId"`
	Etag                    *string `pulumi:"etag"`
	KmsCryptoKeyIamPolicyId *string `pulumi:"kmsCryptoKeyIamPolicyId"`
	PolicyData              *string `pulumi:"policyData"`
}

type KmsCryptoKeyIamPolicyState struct {
	CryptoKeyId             pulumi.StringPtrInput
	Etag                    pulumi.StringPtrInput
	KmsCryptoKeyIamPolicyId pulumi.StringPtrInput
	PolicyData              pulumi.StringPtrInput
}

func (KmsCryptoKeyIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsCryptoKeyIamPolicyState)(nil)).Elem()
}

type kmsCryptoKeyIamPolicyArgs struct {
	CryptoKeyId             string  `pulumi:"cryptoKeyId"`
	KmsCryptoKeyIamPolicyId *string `pulumi:"kmsCryptoKeyIamPolicyId"`
	PolicyData              string  `pulumi:"policyData"`
}

// The set of arguments for constructing a KmsCryptoKeyIamPolicy resource.
type KmsCryptoKeyIamPolicyArgs struct {
	CryptoKeyId             pulumi.StringInput
	KmsCryptoKeyIamPolicyId pulumi.StringPtrInput
	PolicyData              pulumi.StringInput
}

func (KmsCryptoKeyIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsCryptoKeyIamPolicyArgs)(nil)).Elem()
}

type KmsCryptoKeyIamPolicyInput interface {
	pulumi.Input

	ToKmsCryptoKeyIamPolicyOutput() KmsCryptoKeyIamPolicyOutput
	ToKmsCryptoKeyIamPolicyOutputWithContext(ctx context.Context) KmsCryptoKeyIamPolicyOutput
}

func (*KmsCryptoKeyIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsCryptoKeyIamPolicy)(nil)).Elem()
}

func (i *KmsCryptoKeyIamPolicy) ToKmsCryptoKeyIamPolicyOutput() KmsCryptoKeyIamPolicyOutput {
	return i.ToKmsCryptoKeyIamPolicyOutputWithContext(context.Background())
}

func (i *KmsCryptoKeyIamPolicy) ToKmsCryptoKeyIamPolicyOutputWithContext(ctx context.Context) KmsCryptoKeyIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsCryptoKeyIamPolicyOutput)
}

type KmsCryptoKeyIamPolicyOutput struct{ *pulumi.OutputState }

func (KmsCryptoKeyIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsCryptoKeyIamPolicy)(nil)).Elem()
}

func (o KmsCryptoKeyIamPolicyOutput) ToKmsCryptoKeyIamPolicyOutput() KmsCryptoKeyIamPolicyOutput {
	return o
}

func (o KmsCryptoKeyIamPolicyOutput) ToKmsCryptoKeyIamPolicyOutputWithContext(ctx context.Context) KmsCryptoKeyIamPolicyOutput {
	return o
}

func (o KmsCryptoKeyIamPolicyOutput) CryptoKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamPolicy) pulumi.StringOutput { return v.CryptoKeyId }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamPolicyOutput) KmsCryptoKeyIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamPolicy) pulumi.StringOutput { return v.KmsCryptoKeyIamPolicyId }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsCryptoKeyIamPolicyInput)(nil)).Elem(), &KmsCryptoKeyIamPolicy{})
	pulumi.RegisterOutputType(KmsCryptoKeyIamPolicyOutput{})
}
