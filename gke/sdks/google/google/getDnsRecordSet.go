// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDnsRecordSet(ctx *pulumi.Context, args *LookupDnsRecordSetArgs, opts ...pulumi.InvokeOption) (*LookupDnsRecordSetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupDnsRecordSetResult
	err = ctx.InvokePackage("google:index/getDnsRecordSet:getDnsRecordSet", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDnsRecordSet.
type LookupDnsRecordSetArgs struct {
	Id          *string `pulumi:"id"`
	ManagedZone string  `pulumi:"managedZone"`
	Name        string  `pulumi:"name"`
	Project     *string `pulumi:"project"`
	Type        string  `pulumi:"type"`
}

// A collection of values returned by getDnsRecordSet.
type LookupDnsRecordSetResult struct {
	Id          string   `pulumi:"id"`
	ManagedZone string   `pulumi:"managedZone"`
	Name        string   `pulumi:"name"`
	Project     *string  `pulumi:"project"`
	Rrdatas     []string `pulumi:"rrdatas"`
	Ttl         float64  `pulumi:"ttl"`
	Type        string   `pulumi:"type"`
}

func LookupDnsRecordSetOutput(ctx *pulumi.Context, args LookupDnsRecordSetOutputArgs, opts ...pulumi.InvokeOption) LookupDnsRecordSetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDnsRecordSetResultOutput, error) {
			args := v.(LookupDnsRecordSetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupDnsRecordSetResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getDnsRecordSet:getDnsRecordSet", args, LookupDnsRecordSetResultOutput{}, options).(LookupDnsRecordSetResultOutput), nil
		}).(LookupDnsRecordSetResultOutput)
}

// A collection of arguments for invoking getDnsRecordSet.
type LookupDnsRecordSetOutputArgs struct {
	Id          pulumi.StringPtrInput `pulumi:"id"`
	ManagedZone pulumi.StringInput    `pulumi:"managedZone"`
	Name        pulumi.StringInput    `pulumi:"name"`
	Project     pulumi.StringPtrInput `pulumi:"project"`
	Type        pulumi.StringInput    `pulumi:"type"`
}

func (LookupDnsRecordSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsRecordSetArgs)(nil)).Elem()
}

// A collection of values returned by getDnsRecordSet.
type LookupDnsRecordSetResultOutput struct{ *pulumi.OutputState }

func (LookupDnsRecordSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDnsRecordSetResult)(nil)).Elem()
}

func (o LookupDnsRecordSetResultOutput) ToLookupDnsRecordSetResultOutput() LookupDnsRecordSetResultOutput {
	return o
}

func (o LookupDnsRecordSetResultOutput) ToLookupDnsRecordSetResultOutputWithContext(ctx context.Context) LookupDnsRecordSetResultOutput {
	return o
}

func (o LookupDnsRecordSetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordSetResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDnsRecordSetResultOutput) ManagedZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordSetResult) string { return v.ManagedZone }).(pulumi.StringOutput)
}

func (o LookupDnsRecordSetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordSetResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDnsRecordSetResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDnsRecordSetResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupDnsRecordSetResultOutput) Rrdatas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDnsRecordSetResult) []string { return v.Rrdatas }).(pulumi.StringArrayOutput)
}

func (o LookupDnsRecordSetResultOutput) Ttl() pulumi.Float64Output {
	return o.ApplyT(func(v LookupDnsRecordSetResult) float64 { return v.Ttl }).(pulumi.Float64Output)
}

func (o LookupDnsRecordSetResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDnsRecordSetResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDnsRecordSetResultOutput{})
}
