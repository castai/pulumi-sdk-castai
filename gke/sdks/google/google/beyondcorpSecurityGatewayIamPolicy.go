// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BeyondcorpSecurityGatewayIamPolicy struct {
	pulumi.CustomResourceState

	BeyondcorpSecurityGatewayIamPolicyId pulumi.StringOutput `pulumi:"beyondcorpSecurityGatewayIamPolicyId"`
	Etag                                 pulumi.StringOutput `pulumi:"etag"`
	Location                             pulumi.StringOutput `pulumi:"location"`
	PolicyData                           pulumi.StringOutput `pulumi:"policyData"`
	Project                              pulumi.StringOutput `pulumi:"project"`
	SecurityGatewayId                    pulumi.StringOutput `pulumi:"securityGatewayId"`
}

// NewBeyondcorpSecurityGatewayIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewBeyondcorpSecurityGatewayIamPolicy(ctx *pulumi.Context,
	name string, args *BeyondcorpSecurityGatewayIamPolicyArgs, opts ...pulumi.ResourceOption) (*BeyondcorpSecurityGatewayIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.SecurityGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGatewayId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BeyondcorpSecurityGatewayIamPolicy
	err = ctx.RegisterPackageResource("google:index/beyondcorpSecurityGatewayIamPolicy:BeyondcorpSecurityGatewayIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBeyondcorpSecurityGatewayIamPolicy gets an existing BeyondcorpSecurityGatewayIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBeyondcorpSecurityGatewayIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BeyondcorpSecurityGatewayIamPolicyState, opts ...pulumi.ResourceOption) (*BeyondcorpSecurityGatewayIamPolicy, error) {
	var resource BeyondcorpSecurityGatewayIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/beyondcorpSecurityGatewayIamPolicy:BeyondcorpSecurityGatewayIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BeyondcorpSecurityGatewayIamPolicy resources.
type beyondcorpSecurityGatewayIamPolicyState struct {
	BeyondcorpSecurityGatewayIamPolicyId *string `pulumi:"beyondcorpSecurityGatewayIamPolicyId"`
	Etag                                 *string `pulumi:"etag"`
	Location                             *string `pulumi:"location"`
	PolicyData                           *string `pulumi:"policyData"`
	Project                              *string `pulumi:"project"`
	SecurityGatewayId                    *string `pulumi:"securityGatewayId"`
}

type BeyondcorpSecurityGatewayIamPolicyState struct {
	BeyondcorpSecurityGatewayIamPolicyId pulumi.StringPtrInput
	Etag                                 pulumi.StringPtrInput
	Location                             pulumi.StringPtrInput
	PolicyData                           pulumi.StringPtrInput
	Project                              pulumi.StringPtrInput
	SecurityGatewayId                    pulumi.StringPtrInput
}

func (BeyondcorpSecurityGatewayIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpSecurityGatewayIamPolicyState)(nil)).Elem()
}

type beyondcorpSecurityGatewayIamPolicyArgs struct {
	BeyondcorpSecurityGatewayIamPolicyId *string `pulumi:"beyondcorpSecurityGatewayIamPolicyId"`
	Location                             *string `pulumi:"location"`
	PolicyData                           string  `pulumi:"policyData"`
	Project                              *string `pulumi:"project"`
	SecurityGatewayId                    string  `pulumi:"securityGatewayId"`
}

// The set of arguments for constructing a BeyondcorpSecurityGatewayIamPolicy resource.
type BeyondcorpSecurityGatewayIamPolicyArgs struct {
	BeyondcorpSecurityGatewayIamPolicyId pulumi.StringPtrInput
	Location                             pulumi.StringPtrInput
	PolicyData                           pulumi.StringInput
	Project                              pulumi.StringPtrInput
	SecurityGatewayId                    pulumi.StringInput
}

func (BeyondcorpSecurityGatewayIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpSecurityGatewayIamPolicyArgs)(nil)).Elem()
}

type BeyondcorpSecurityGatewayIamPolicyInput interface {
	pulumi.Input

	ToBeyondcorpSecurityGatewayIamPolicyOutput() BeyondcorpSecurityGatewayIamPolicyOutput
	ToBeyondcorpSecurityGatewayIamPolicyOutputWithContext(ctx context.Context) BeyondcorpSecurityGatewayIamPolicyOutput
}

func (*BeyondcorpSecurityGatewayIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpSecurityGatewayIamPolicy)(nil)).Elem()
}

func (i *BeyondcorpSecurityGatewayIamPolicy) ToBeyondcorpSecurityGatewayIamPolicyOutput() BeyondcorpSecurityGatewayIamPolicyOutput {
	return i.ToBeyondcorpSecurityGatewayIamPolicyOutputWithContext(context.Background())
}

func (i *BeyondcorpSecurityGatewayIamPolicy) ToBeyondcorpSecurityGatewayIamPolicyOutputWithContext(ctx context.Context) BeyondcorpSecurityGatewayIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BeyondcorpSecurityGatewayIamPolicyOutput)
}

type BeyondcorpSecurityGatewayIamPolicyOutput struct{ *pulumi.OutputState }

func (BeyondcorpSecurityGatewayIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpSecurityGatewayIamPolicy)(nil)).Elem()
}

func (o BeyondcorpSecurityGatewayIamPolicyOutput) ToBeyondcorpSecurityGatewayIamPolicyOutput() BeyondcorpSecurityGatewayIamPolicyOutput {
	return o
}

func (o BeyondcorpSecurityGatewayIamPolicyOutput) ToBeyondcorpSecurityGatewayIamPolicyOutputWithContext(ctx context.Context) BeyondcorpSecurityGatewayIamPolicyOutput {
	return o
}

func (o BeyondcorpSecurityGatewayIamPolicyOutput) BeyondcorpSecurityGatewayIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpSecurityGatewayIamPolicy) pulumi.StringOutput {
		return v.BeyondcorpSecurityGatewayIamPolicyId
	}).(pulumi.StringOutput)
}

func (o BeyondcorpSecurityGatewayIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpSecurityGatewayIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BeyondcorpSecurityGatewayIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpSecurityGatewayIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o BeyondcorpSecurityGatewayIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpSecurityGatewayIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o BeyondcorpSecurityGatewayIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpSecurityGatewayIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BeyondcorpSecurityGatewayIamPolicyOutput) SecurityGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpSecurityGatewayIamPolicy) pulumi.StringOutput { return v.SecurityGatewayId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BeyondcorpSecurityGatewayIamPolicyInput)(nil)).Elem(), &BeyondcorpSecurityGatewayIamPolicy{})
	pulumi.RegisterOutputType(BeyondcorpSecurityGatewayIamPolicyOutput{})
}
