// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessContextManagerServicePerimeterEgressPolicy struct {
	pulumi.CustomResourceState

	AccessContextManagerServicePerimeterEgressPolicyId pulumi.StringOutput `pulumi:"accessContextManagerServicePerimeterEgressPolicyId"`
	// The name of the Access Policy this resource belongs to.
	AccessPolicyId pulumi.StringOutput `pulumi:"accessPolicyId"`
	// Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
	EgressFrom AccessContextManagerServicePerimeterEgressPolicyEgressFromPtrOutput `pulumi:"egressFrom"`
	// Defines the conditions on the 'ApiOperation' and destination resources that cause this 'EgressPolicy' to apply.
	EgressTo AccessContextManagerServicePerimeterEgressPolicyEgressToPtrOutput `pulumi:"egressTo"`
	// The name of the Service Perimeter to add this resource to.
	Perimeter pulumi.StringOutput                                               `pulumi:"perimeter"`
	Timeouts  AccessContextManagerServicePerimeterEgressPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewAccessContextManagerServicePerimeterEgressPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccessContextManagerServicePerimeterEgressPolicy(ctx *pulumi.Context,
	name string, args *AccessContextManagerServicePerimeterEgressPolicyArgs, opts ...pulumi.ResourceOption) (*AccessContextManagerServicePerimeterEgressPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Perimeter == nil {
		return nil, errors.New("invalid value for required argument 'Perimeter'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource AccessContextManagerServicePerimeterEgressPolicy
	err = ctx.RegisterPackageResource("google:index/accessContextManagerServicePerimeterEgressPolicy:AccessContextManagerServicePerimeterEgressPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessContextManagerServicePerimeterEgressPolicy gets an existing AccessContextManagerServicePerimeterEgressPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessContextManagerServicePerimeterEgressPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessContextManagerServicePerimeterEgressPolicyState, opts ...pulumi.ResourceOption) (*AccessContextManagerServicePerimeterEgressPolicy, error) {
	var resource AccessContextManagerServicePerimeterEgressPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/accessContextManagerServicePerimeterEgressPolicy:AccessContextManagerServicePerimeterEgressPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessContextManagerServicePerimeterEgressPolicy resources.
type accessContextManagerServicePerimeterEgressPolicyState struct {
	AccessContextManagerServicePerimeterEgressPolicyId *string `pulumi:"accessContextManagerServicePerimeterEgressPolicyId"`
	// The name of the Access Policy this resource belongs to.
	AccessPolicyId *string `pulumi:"accessPolicyId"`
	// Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
	EgressFrom *AccessContextManagerServicePerimeterEgressPolicyEgressFrom `pulumi:"egressFrom"`
	// Defines the conditions on the 'ApiOperation' and destination resources that cause this 'EgressPolicy' to apply.
	EgressTo *AccessContextManagerServicePerimeterEgressPolicyEgressTo `pulumi:"egressTo"`
	// The name of the Service Perimeter to add this resource to.
	Perimeter *string                                                   `pulumi:"perimeter"`
	Timeouts  *AccessContextManagerServicePerimeterEgressPolicyTimeouts `pulumi:"timeouts"`
}

type AccessContextManagerServicePerimeterEgressPolicyState struct {
	AccessContextManagerServicePerimeterEgressPolicyId pulumi.StringPtrInput
	// The name of the Access Policy this resource belongs to.
	AccessPolicyId pulumi.StringPtrInput
	// Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
	EgressFrom AccessContextManagerServicePerimeterEgressPolicyEgressFromPtrInput
	// Defines the conditions on the 'ApiOperation' and destination resources that cause this 'EgressPolicy' to apply.
	EgressTo AccessContextManagerServicePerimeterEgressPolicyEgressToPtrInput
	// The name of the Service Perimeter to add this resource to.
	Perimeter pulumi.StringPtrInput
	Timeouts  AccessContextManagerServicePerimeterEgressPolicyTimeoutsPtrInput
}

func (AccessContextManagerServicePerimeterEgressPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessContextManagerServicePerimeterEgressPolicyState)(nil)).Elem()
}

type accessContextManagerServicePerimeterEgressPolicyArgs struct {
	AccessContextManagerServicePerimeterEgressPolicyId *string `pulumi:"accessContextManagerServicePerimeterEgressPolicyId"`
	// Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
	EgressFrom *AccessContextManagerServicePerimeterEgressPolicyEgressFrom `pulumi:"egressFrom"`
	// Defines the conditions on the 'ApiOperation' and destination resources that cause this 'EgressPolicy' to apply.
	EgressTo *AccessContextManagerServicePerimeterEgressPolicyEgressTo `pulumi:"egressTo"`
	// The name of the Service Perimeter to add this resource to.
	Perimeter string                                                    `pulumi:"perimeter"`
	Timeouts  *AccessContextManagerServicePerimeterEgressPolicyTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a AccessContextManagerServicePerimeterEgressPolicy resource.
type AccessContextManagerServicePerimeterEgressPolicyArgs struct {
	AccessContextManagerServicePerimeterEgressPolicyId pulumi.StringPtrInput
	// Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
	EgressFrom AccessContextManagerServicePerimeterEgressPolicyEgressFromPtrInput
	// Defines the conditions on the 'ApiOperation' and destination resources that cause this 'EgressPolicy' to apply.
	EgressTo AccessContextManagerServicePerimeterEgressPolicyEgressToPtrInput
	// The name of the Service Perimeter to add this resource to.
	Perimeter pulumi.StringInput
	Timeouts  AccessContextManagerServicePerimeterEgressPolicyTimeoutsPtrInput
}

func (AccessContextManagerServicePerimeterEgressPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessContextManagerServicePerimeterEgressPolicyArgs)(nil)).Elem()
}

type AccessContextManagerServicePerimeterEgressPolicyInput interface {
	pulumi.Input

	ToAccessContextManagerServicePerimeterEgressPolicyOutput() AccessContextManagerServicePerimeterEgressPolicyOutput
	ToAccessContextManagerServicePerimeterEgressPolicyOutputWithContext(ctx context.Context) AccessContextManagerServicePerimeterEgressPolicyOutput
}

func (*AccessContextManagerServicePerimeterEgressPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessContextManagerServicePerimeterEgressPolicy)(nil)).Elem()
}

func (i *AccessContextManagerServicePerimeterEgressPolicy) ToAccessContextManagerServicePerimeterEgressPolicyOutput() AccessContextManagerServicePerimeterEgressPolicyOutput {
	return i.ToAccessContextManagerServicePerimeterEgressPolicyOutputWithContext(context.Background())
}

func (i *AccessContextManagerServicePerimeterEgressPolicy) ToAccessContextManagerServicePerimeterEgressPolicyOutputWithContext(ctx context.Context) AccessContextManagerServicePerimeterEgressPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessContextManagerServicePerimeterEgressPolicyOutput)
}

type AccessContextManagerServicePerimeterEgressPolicyOutput struct{ *pulumi.OutputState }

func (AccessContextManagerServicePerimeterEgressPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessContextManagerServicePerimeterEgressPolicy)(nil)).Elem()
}

func (o AccessContextManagerServicePerimeterEgressPolicyOutput) ToAccessContextManagerServicePerimeterEgressPolicyOutput() AccessContextManagerServicePerimeterEgressPolicyOutput {
	return o
}

func (o AccessContextManagerServicePerimeterEgressPolicyOutput) ToAccessContextManagerServicePerimeterEgressPolicyOutputWithContext(ctx context.Context) AccessContextManagerServicePerimeterEgressPolicyOutput {
	return o
}

func (o AccessContextManagerServicePerimeterEgressPolicyOutput) AccessContextManagerServicePerimeterEgressPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterEgressPolicy) pulumi.StringOutput {
		return v.AccessContextManagerServicePerimeterEgressPolicyId
	}).(pulumi.StringOutput)
}

// The name of the Access Policy this resource belongs to.
func (o AccessContextManagerServicePerimeterEgressPolicyOutput) AccessPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterEgressPolicy) pulumi.StringOutput { return v.AccessPolicyId }).(pulumi.StringOutput)
}

// Defines conditions on the source of a request causing this 'EgressPolicy' to apply.
func (o AccessContextManagerServicePerimeterEgressPolicyOutput) EgressFrom() AccessContextManagerServicePerimeterEgressPolicyEgressFromPtrOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterEgressPolicy) AccessContextManagerServicePerimeterEgressPolicyEgressFromPtrOutput {
		return v.EgressFrom
	}).(AccessContextManagerServicePerimeterEgressPolicyEgressFromPtrOutput)
}

// Defines the conditions on the 'ApiOperation' and destination resources that cause this 'EgressPolicy' to apply.
func (o AccessContextManagerServicePerimeterEgressPolicyOutput) EgressTo() AccessContextManagerServicePerimeterEgressPolicyEgressToPtrOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterEgressPolicy) AccessContextManagerServicePerimeterEgressPolicyEgressToPtrOutput {
		return v.EgressTo
	}).(AccessContextManagerServicePerimeterEgressPolicyEgressToPtrOutput)
}

// The name of the Service Perimeter to add this resource to.
func (o AccessContextManagerServicePerimeterEgressPolicyOutput) Perimeter() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterEgressPolicy) pulumi.StringOutput { return v.Perimeter }).(pulumi.StringOutput)
}

func (o AccessContextManagerServicePerimeterEgressPolicyOutput) Timeouts() AccessContextManagerServicePerimeterEgressPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterEgressPolicy) AccessContextManagerServicePerimeterEgressPolicyTimeoutsPtrOutput {
		return v.Timeouts
	}).(AccessContextManagerServicePerimeterEgressPolicyTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessContextManagerServicePerimeterEgressPolicyInput)(nil)).Elem(), &AccessContextManagerServicePerimeterEgressPolicy{})
	pulumi.RegisterOutputType(AccessContextManagerServicePerimeterEgressPolicyOutput{})
}
