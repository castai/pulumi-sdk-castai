// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionPerInstanceConfig struct {
	pulumi.CustomResourceState

	ComputeRegionPerInstanceConfigId pulumi.StringOutput `pulumi:"computeRegionPerInstanceConfigId"`
	// The minimal action to perform on the instance during an update. Default is 'NONE'. Possible values are: * REPLACE *
	// RESTART * REFRESH * NONE
	MinimalAction pulumi.StringPtrOutput `pulumi:"minimalAction"`
	// The most disruptive action to perform on the instance during an update. Default is 'REPLACE'. Possible values are: *
	// REPLACE * RESTART * REFRESH * NONE
	MostDisruptiveAllowedAction pulumi.StringPtrOutput `pulumi:"mostDisruptiveAllowedAction"`
	// The name for this per-instance config and its corresponding instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// The preserved state for this instance.
	PreservedState ComputeRegionPerInstanceConfigPreservedStatePtrOutput `pulumi:"preservedState"`
	Project        pulumi.StringOutput                                   `pulumi:"project"`
	// Region where the containing instance group manager is located
	Region pulumi.StringOutput `pulumi:"region"`
	// The region instance group manager this instance config is part of.
	RegionInstanceGroupManager pulumi.StringOutput `pulumi:"regionInstanceGroupManager"`
	// When true, deleting this config will immediately remove the underlying instance. When false, deleting this config will
	// use the behavior as determined by remove_instance_on_destroy.
	RemoveInstanceOnDestroy pulumi.BoolPtrOutput `pulumi:"removeInstanceOnDestroy"`
	// When true, deleting this config will immediately remove any specified state from the underlying instance. When false,
	// deleting this config will *not* immediately remove any state from the underlying instance. State will be removed on the
	// next instance recreation or update.
	RemoveInstanceStateOnDestroy pulumi.BoolPtrOutput                            `pulumi:"removeInstanceStateOnDestroy"`
	Timeouts                     ComputeRegionPerInstanceConfigTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeRegionPerInstanceConfig registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionPerInstanceConfig(ctx *pulumi.Context,
	name string, args *ComputeRegionPerInstanceConfigArgs, opts ...pulumi.ResourceOption) (*ComputeRegionPerInstanceConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RegionInstanceGroupManager == nil {
		return nil, errors.New("invalid value for required argument 'RegionInstanceGroupManager'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionPerInstanceConfig
	err = ctx.RegisterPackageResource("google:index/computeRegionPerInstanceConfig:ComputeRegionPerInstanceConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionPerInstanceConfig gets an existing ComputeRegionPerInstanceConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionPerInstanceConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionPerInstanceConfigState, opts ...pulumi.ResourceOption) (*ComputeRegionPerInstanceConfig, error) {
	var resource ComputeRegionPerInstanceConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeRegionPerInstanceConfig:ComputeRegionPerInstanceConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionPerInstanceConfig resources.
type computeRegionPerInstanceConfigState struct {
	ComputeRegionPerInstanceConfigId *string `pulumi:"computeRegionPerInstanceConfigId"`
	// The minimal action to perform on the instance during an update. Default is 'NONE'. Possible values are: * REPLACE *
	// RESTART * REFRESH * NONE
	MinimalAction *string `pulumi:"minimalAction"`
	// The most disruptive action to perform on the instance during an update. Default is 'REPLACE'. Possible values are: *
	// REPLACE * RESTART * REFRESH * NONE
	MostDisruptiveAllowedAction *string `pulumi:"mostDisruptiveAllowedAction"`
	// The name for this per-instance config and its corresponding instance.
	Name *string `pulumi:"name"`
	// The preserved state for this instance.
	PreservedState *ComputeRegionPerInstanceConfigPreservedState `pulumi:"preservedState"`
	Project        *string                                       `pulumi:"project"`
	// Region where the containing instance group manager is located
	Region *string `pulumi:"region"`
	// The region instance group manager this instance config is part of.
	RegionInstanceGroupManager *string `pulumi:"regionInstanceGroupManager"`
	// When true, deleting this config will immediately remove the underlying instance. When false, deleting this config will
	// use the behavior as determined by remove_instance_on_destroy.
	RemoveInstanceOnDestroy *bool `pulumi:"removeInstanceOnDestroy"`
	// When true, deleting this config will immediately remove any specified state from the underlying instance. When false,
	// deleting this config will *not* immediately remove any state from the underlying instance. State will be removed on the
	// next instance recreation or update.
	RemoveInstanceStateOnDestroy *bool                                   `pulumi:"removeInstanceStateOnDestroy"`
	Timeouts                     *ComputeRegionPerInstanceConfigTimeouts `pulumi:"timeouts"`
}

type ComputeRegionPerInstanceConfigState struct {
	ComputeRegionPerInstanceConfigId pulumi.StringPtrInput
	// The minimal action to perform on the instance during an update. Default is 'NONE'. Possible values are: * REPLACE *
	// RESTART * REFRESH * NONE
	MinimalAction pulumi.StringPtrInput
	// The most disruptive action to perform on the instance during an update. Default is 'REPLACE'. Possible values are: *
	// REPLACE * RESTART * REFRESH * NONE
	MostDisruptiveAllowedAction pulumi.StringPtrInput
	// The name for this per-instance config and its corresponding instance.
	Name pulumi.StringPtrInput
	// The preserved state for this instance.
	PreservedState ComputeRegionPerInstanceConfigPreservedStatePtrInput
	Project        pulumi.StringPtrInput
	// Region where the containing instance group manager is located
	Region pulumi.StringPtrInput
	// The region instance group manager this instance config is part of.
	RegionInstanceGroupManager pulumi.StringPtrInput
	// When true, deleting this config will immediately remove the underlying instance. When false, deleting this config will
	// use the behavior as determined by remove_instance_on_destroy.
	RemoveInstanceOnDestroy pulumi.BoolPtrInput
	// When true, deleting this config will immediately remove any specified state from the underlying instance. When false,
	// deleting this config will *not* immediately remove any state from the underlying instance. State will be removed on the
	// next instance recreation or update.
	RemoveInstanceStateOnDestroy pulumi.BoolPtrInput
	Timeouts                     ComputeRegionPerInstanceConfigTimeoutsPtrInput
}

func (ComputeRegionPerInstanceConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionPerInstanceConfigState)(nil)).Elem()
}

type computeRegionPerInstanceConfigArgs struct {
	ComputeRegionPerInstanceConfigId *string `pulumi:"computeRegionPerInstanceConfigId"`
	// The minimal action to perform on the instance during an update. Default is 'NONE'. Possible values are: * REPLACE *
	// RESTART * REFRESH * NONE
	MinimalAction *string `pulumi:"minimalAction"`
	// The most disruptive action to perform on the instance during an update. Default is 'REPLACE'. Possible values are: *
	// REPLACE * RESTART * REFRESH * NONE
	MostDisruptiveAllowedAction *string `pulumi:"mostDisruptiveAllowedAction"`
	// The name for this per-instance config and its corresponding instance.
	Name *string `pulumi:"name"`
	// The preserved state for this instance.
	PreservedState *ComputeRegionPerInstanceConfigPreservedState `pulumi:"preservedState"`
	Project        *string                                       `pulumi:"project"`
	// Region where the containing instance group manager is located
	Region *string `pulumi:"region"`
	// The region instance group manager this instance config is part of.
	RegionInstanceGroupManager string `pulumi:"regionInstanceGroupManager"`
	// When true, deleting this config will immediately remove the underlying instance. When false, deleting this config will
	// use the behavior as determined by remove_instance_on_destroy.
	RemoveInstanceOnDestroy *bool `pulumi:"removeInstanceOnDestroy"`
	// When true, deleting this config will immediately remove any specified state from the underlying instance. When false,
	// deleting this config will *not* immediately remove any state from the underlying instance. State will be removed on the
	// next instance recreation or update.
	RemoveInstanceStateOnDestroy *bool                                   `pulumi:"removeInstanceStateOnDestroy"`
	Timeouts                     *ComputeRegionPerInstanceConfigTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeRegionPerInstanceConfig resource.
type ComputeRegionPerInstanceConfigArgs struct {
	ComputeRegionPerInstanceConfigId pulumi.StringPtrInput
	// The minimal action to perform on the instance during an update. Default is 'NONE'. Possible values are: * REPLACE *
	// RESTART * REFRESH * NONE
	MinimalAction pulumi.StringPtrInput
	// The most disruptive action to perform on the instance during an update. Default is 'REPLACE'. Possible values are: *
	// REPLACE * RESTART * REFRESH * NONE
	MostDisruptiveAllowedAction pulumi.StringPtrInput
	// The name for this per-instance config and its corresponding instance.
	Name pulumi.StringPtrInput
	// The preserved state for this instance.
	PreservedState ComputeRegionPerInstanceConfigPreservedStatePtrInput
	Project        pulumi.StringPtrInput
	// Region where the containing instance group manager is located
	Region pulumi.StringPtrInput
	// The region instance group manager this instance config is part of.
	RegionInstanceGroupManager pulumi.StringInput
	// When true, deleting this config will immediately remove the underlying instance. When false, deleting this config will
	// use the behavior as determined by remove_instance_on_destroy.
	RemoveInstanceOnDestroy pulumi.BoolPtrInput
	// When true, deleting this config will immediately remove any specified state from the underlying instance. When false,
	// deleting this config will *not* immediately remove any state from the underlying instance. State will be removed on the
	// next instance recreation or update.
	RemoveInstanceStateOnDestroy pulumi.BoolPtrInput
	Timeouts                     ComputeRegionPerInstanceConfigTimeoutsPtrInput
}

func (ComputeRegionPerInstanceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionPerInstanceConfigArgs)(nil)).Elem()
}

type ComputeRegionPerInstanceConfigInput interface {
	pulumi.Input

	ToComputeRegionPerInstanceConfigOutput() ComputeRegionPerInstanceConfigOutput
	ToComputeRegionPerInstanceConfigOutputWithContext(ctx context.Context) ComputeRegionPerInstanceConfigOutput
}

func (*ComputeRegionPerInstanceConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionPerInstanceConfig)(nil)).Elem()
}

func (i *ComputeRegionPerInstanceConfig) ToComputeRegionPerInstanceConfigOutput() ComputeRegionPerInstanceConfigOutput {
	return i.ToComputeRegionPerInstanceConfigOutputWithContext(context.Background())
}

func (i *ComputeRegionPerInstanceConfig) ToComputeRegionPerInstanceConfigOutputWithContext(ctx context.Context) ComputeRegionPerInstanceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionPerInstanceConfigOutput)
}

type ComputeRegionPerInstanceConfigOutput struct{ *pulumi.OutputState }

func (ComputeRegionPerInstanceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionPerInstanceConfig)(nil)).Elem()
}

func (o ComputeRegionPerInstanceConfigOutput) ToComputeRegionPerInstanceConfigOutput() ComputeRegionPerInstanceConfigOutput {
	return o
}

func (o ComputeRegionPerInstanceConfigOutput) ToComputeRegionPerInstanceConfigOutputWithContext(ctx context.Context) ComputeRegionPerInstanceConfigOutput {
	return o
}

func (o ComputeRegionPerInstanceConfigOutput) ComputeRegionPerInstanceConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) pulumi.StringOutput { return v.ComputeRegionPerInstanceConfigId }).(pulumi.StringOutput)
}

// The minimal action to perform on the instance during an update. Default is 'NONE'. Possible values are: * REPLACE *
// RESTART * REFRESH * NONE
func (o ComputeRegionPerInstanceConfigOutput) MinimalAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) pulumi.StringPtrOutput { return v.MinimalAction }).(pulumi.StringPtrOutput)
}

// The most disruptive action to perform on the instance during an update. Default is 'REPLACE'. Possible values are: *
// REPLACE * RESTART * REFRESH * NONE
func (o ComputeRegionPerInstanceConfigOutput) MostDisruptiveAllowedAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) pulumi.StringPtrOutput { return v.MostDisruptiveAllowedAction }).(pulumi.StringPtrOutput)
}

// The name for this per-instance config and its corresponding instance.
func (o ComputeRegionPerInstanceConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The preserved state for this instance.
func (o ComputeRegionPerInstanceConfigOutput) PreservedState() ComputeRegionPerInstanceConfigPreservedStatePtrOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) ComputeRegionPerInstanceConfigPreservedStatePtrOutput {
		return v.PreservedState
	}).(ComputeRegionPerInstanceConfigPreservedStatePtrOutput)
}

func (o ComputeRegionPerInstanceConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Region where the containing instance group manager is located
func (o ComputeRegionPerInstanceConfigOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The region instance group manager this instance config is part of.
func (o ComputeRegionPerInstanceConfigOutput) RegionInstanceGroupManager() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) pulumi.StringOutput { return v.RegionInstanceGroupManager }).(pulumi.StringOutput)
}

// When true, deleting this config will immediately remove the underlying instance. When false, deleting this config will
// use the behavior as determined by remove_instance_on_destroy.
func (o ComputeRegionPerInstanceConfigOutput) RemoveInstanceOnDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) pulumi.BoolPtrOutput { return v.RemoveInstanceOnDestroy }).(pulumi.BoolPtrOutput)
}

// When true, deleting this config will immediately remove any specified state from the underlying instance. When false,
// deleting this config will *not* immediately remove any state from the underlying instance. State will be removed on the
// next instance recreation or update.
func (o ComputeRegionPerInstanceConfigOutput) RemoveInstanceStateOnDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) pulumi.BoolPtrOutput { return v.RemoveInstanceStateOnDestroy }).(pulumi.BoolPtrOutput)
}

func (o ComputeRegionPerInstanceConfigOutput) Timeouts() ComputeRegionPerInstanceConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeRegionPerInstanceConfig) ComputeRegionPerInstanceConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputeRegionPerInstanceConfigTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionPerInstanceConfigInput)(nil)).Elem(), &ComputeRegionPerInstanceConfig{})
	pulumi.RegisterOutputType(ComputeRegionPerInstanceConfigOutput{})
}
