// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryAnalyticsHubListingIamPolicy struct {
	pulumi.CustomResourceState

	BigqueryAnalyticsHubListingIamPolicyId pulumi.StringOutput `pulumi:"bigqueryAnalyticsHubListingIamPolicyId"`
	DataExchangeId                         pulumi.StringOutput `pulumi:"dataExchangeId"`
	Etag                                   pulumi.StringOutput `pulumi:"etag"`
	ListingId                              pulumi.StringOutput `pulumi:"listingId"`
	Location                               pulumi.StringOutput `pulumi:"location"`
	PolicyData                             pulumi.StringOutput `pulumi:"policyData"`
	Project                                pulumi.StringOutput `pulumi:"project"`
}

// NewBigqueryAnalyticsHubListingIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewBigqueryAnalyticsHubListingIamPolicy(ctx *pulumi.Context,
	name string, args *BigqueryAnalyticsHubListingIamPolicyArgs, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubListingIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataExchangeId == nil {
		return nil, errors.New("invalid value for required argument 'DataExchangeId'")
	}
	if args.ListingId == nil {
		return nil, errors.New("invalid value for required argument 'ListingId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryAnalyticsHubListingIamPolicy
	err = ctx.RegisterPackageResource("google:index/bigqueryAnalyticsHubListingIamPolicy:BigqueryAnalyticsHubListingIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryAnalyticsHubListingIamPolicy gets an existing BigqueryAnalyticsHubListingIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryAnalyticsHubListingIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryAnalyticsHubListingIamPolicyState, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubListingIamPolicy, error) {
	var resource BigqueryAnalyticsHubListingIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigqueryAnalyticsHubListingIamPolicy:BigqueryAnalyticsHubListingIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryAnalyticsHubListingIamPolicy resources.
type bigqueryAnalyticsHubListingIamPolicyState struct {
	BigqueryAnalyticsHubListingIamPolicyId *string `pulumi:"bigqueryAnalyticsHubListingIamPolicyId"`
	DataExchangeId                         *string `pulumi:"dataExchangeId"`
	Etag                                   *string `pulumi:"etag"`
	ListingId                              *string `pulumi:"listingId"`
	Location                               *string `pulumi:"location"`
	PolicyData                             *string `pulumi:"policyData"`
	Project                                *string `pulumi:"project"`
}

type BigqueryAnalyticsHubListingIamPolicyState struct {
	BigqueryAnalyticsHubListingIamPolicyId pulumi.StringPtrInput
	DataExchangeId                         pulumi.StringPtrInput
	Etag                                   pulumi.StringPtrInput
	ListingId                              pulumi.StringPtrInput
	Location                               pulumi.StringPtrInput
	PolicyData                             pulumi.StringPtrInput
	Project                                pulumi.StringPtrInput
}

func (BigqueryAnalyticsHubListingIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubListingIamPolicyState)(nil)).Elem()
}

type bigqueryAnalyticsHubListingIamPolicyArgs struct {
	BigqueryAnalyticsHubListingIamPolicyId *string `pulumi:"bigqueryAnalyticsHubListingIamPolicyId"`
	DataExchangeId                         string  `pulumi:"dataExchangeId"`
	ListingId                              string  `pulumi:"listingId"`
	Location                               *string `pulumi:"location"`
	PolicyData                             string  `pulumi:"policyData"`
	Project                                *string `pulumi:"project"`
}

// The set of arguments for constructing a BigqueryAnalyticsHubListingIamPolicy resource.
type BigqueryAnalyticsHubListingIamPolicyArgs struct {
	BigqueryAnalyticsHubListingIamPolicyId pulumi.StringPtrInput
	DataExchangeId                         pulumi.StringInput
	ListingId                              pulumi.StringInput
	Location                               pulumi.StringPtrInput
	PolicyData                             pulumi.StringInput
	Project                                pulumi.StringPtrInput
}

func (BigqueryAnalyticsHubListingIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubListingIamPolicyArgs)(nil)).Elem()
}

type BigqueryAnalyticsHubListingIamPolicyInput interface {
	pulumi.Input

	ToBigqueryAnalyticsHubListingIamPolicyOutput() BigqueryAnalyticsHubListingIamPolicyOutput
	ToBigqueryAnalyticsHubListingIamPolicyOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingIamPolicyOutput
}

func (*BigqueryAnalyticsHubListingIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubListingIamPolicy)(nil)).Elem()
}

func (i *BigqueryAnalyticsHubListingIamPolicy) ToBigqueryAnalyticsHubListingIamPolicyOutput() BigqueryAnalyticsHubListingIamPolicyOutput {
	return i.ToBigqueryAnalyticsHubListingIamPolicyOutputWithContext(context.Background())
}

func (i *BigqueryAnalyticsHubListingIamPolicy) ToBigqueryAnalyticsHubListingIamPolicyOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryAnalyticsHubListingIamPolicyOutput)
}

type BigqueryAnalyticsHubListingIamPolicyOutput struct{ *pulumi.OutputState }

func (BigqueryAnalyticsHubListingIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubListingIamPolicy)(nil)).Elem()
}

func (o BigqueryAnalyticsHubListingIamPolicyOutput) ToBigqueryAnalyticsHubListingIamPolicyOutput() BigqueryAnalyticsHubListingIamPolicyOutput {
	return o
}

func (o BigqueryAnalyticsHubListingIamPolicyOutput) ToBigqueryAnalyticsHubListingIamPolicyOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingIamPolicyOutput {
	return o
}

func (o BigqueryAnalyticsHubListingIamPolicyOutput) BigqueryAnalyticsHubListingIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamPolicy) pulumi.StringOutput {
		return v.BigqueryAnalyticsHubListingIamPolicyId
	}).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamPolicyOutput) DataExchangeId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamPolicy) pulumi.StringOutput { return v.DataExchangeId }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamPolicyOutput) ListingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamPolicy) pulumi.StringOutput { return v.ListingId }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryAnalyticsHubListingIamPolicyInput)(nil)).Elem(), &BigqueryAnalyticsHubListingIamPolicy{})
	pulumi.RegisterOutputType(BigqueryAnalyticsHubListingIamPolicyOutput{})
}
