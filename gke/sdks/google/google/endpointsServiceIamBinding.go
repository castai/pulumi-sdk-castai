// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EndpointsServiceIamBinding struct {
	pulumi.CustomResourceState

	Condition                    EndpointsServiceIamBindingConditionPtrOutput `pulumi:"condition"`
	EndpointsServiceIamBindingId pulumi.StringOutput                          `pulumi:"endpointsServiceIamBindingId"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	Members                      pulumi.StringArrayOutput                     `pulumi:"members"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
	ServiceName                  pulumi.StringOutput                          `pulumi:"serviceName"`
}

// NewEndpointsServiceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewEndpointsServiceIamBinding(ctx *pulumi.Context,
	name string, args *EndpointsServiceIamBindingArgs, opts ...pulumi.ResourceOption) (*EndpointsServiceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource EndpointsServiceIamBinding
	err = ctx.RegisterPackageResource("google:index/endpointsServiceIamBinding:EndpointsServiceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointsServiceIamBinding gets an existing EndpointsServiceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointsServiceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointsServiceIamBindingState, opts ...pulumi.ResourceOption) (*EndpointsServiceIamBinding, error) {
	var resource EndpointsServiceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/endpointsServiceIamBinding:EndpointsServiceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointsServiceIamBinding resources.
type endpointsServiceIamBindingState struct {
	Condition                    *EndpointsServiceIamBindingCondition `pulumi:"condition"`
	EndpointsServiceIamBindingId *string                              `pulumi:"endpointsServiceIamBindingId"`
	Etag                         *string                              `pulumi:"etag"`
	Members                      []string                             `pulumi:"members"`
	Role                         *string                              `pulumi:"role"`
	ServiceName                  *string                              `pulumi:"serviceName"`
}

type EndpointsServiceIamBindingState struct {
	Condition                    EndpointsServiceIamBindingConditionPtrInput
	EndpointsServiceIamBindingId pulumi.StringPtrInput
	Etag                         pulumi.StringPtrInput
	Members                      pulumi.StringArrayInput
	Role                         pulumi.StringPtrInput
	ServiceName                  pulumi.StringPtrInput
}

func (EndpointsServiceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointsServiceIamBindingState)(nil)).Elem()
}

type endpointsServiceIamBindingArgs struct {
	Condition                    *EndpointsServiceIamBindingCondition `pulumi:"condition"`
	EndpointsServiceIamBindingId *string                              `pulumi:"endpointsServiceIamBindingId"`
	Members                      []string                             `pulumi:"members"`
	Role                         string                               `pulumi:"role"`
	ServiceName                  string                               `pulumi:"serviceName"`
}

// The set of arguments for constructing a EndpointsServiceIamBinding resource.
type EndpointsServiceIamBindingArgs struct {
	Condition                    EndpointsServiceIamBindingConditionPtrInput
	EndpointsServiceIamBindingId pulumi.StringPtrInput
	Members                      pulumi.StringArrayInput
	Role                         pulumi.StringInput
	ServiceName                  pulumi.StringInput
}

func (EndpointsServiceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointsServiceIamBindingArgs)(nil)).Elem()
}

type EndpointsServiceIamBindingInput interface {
	pulumi.Input

	ToEndpointsServiceIamBindingOutput() EndpointsServiceIamBindingOutput
	ToEndpointsServiceIamBindingOutputWithContext(ctx context.Context) EndpointsServiceIamBindingOutput
}

func (*EndpointsServiceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsServiceIamBinding)(nil)).Elem()
}

func (i *EndpointsServiceIamBinding) ToEndpointsServiceIamBindingOutput() EndpointsServiceIamBindingOutput {
	return i.ToEndpointsServiceIamBindingOutputWithContext(context.Background())
}

func (i *EndpointsServiceIamBinding) ToEndpointsServiceIamBindingOutputWithContext(ctx context.Context) EndpointsServiceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointsServiceIamBindingOutput)
}

type EndpointsServiceIamBindingOutput struct{ *pulumi.OutputState }

func (EndpointsServiceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointsServiceIamBinding)(nil)).Elem()
}

func (o EndpointsServiceIamBindingOutput) ToEndpointsServiceIamBindingOutput() EndpointsServiceIamBindingOutput {
	return o
}

func (o EndpointsServiceIamBindingOutput) ToEndpointsServiceIamBindingOutputWithContext(ctx context.Context) EndpointsServiceIamBindingOutput {
	return o
}

func (o EndpointsServiceIamBindingOutput) Condition() EndpointsServiceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *EndpointsServiceIamBinding) EndpointsServiceIamBindingConditionPtrOutput { return v.Condition }).(EndpointsServiceIamBindingConditionPtrOutput)
}

func (o EndpointsServiceIamBindingOutput) EndpointsServiceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceIamBinding) pulumi.StringOutput { return v.EndpointsServiceIamBindingId }).(pulumi.StringOutput)
}

func (o EndpointsServiceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o EndpointsServiceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointsServiceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o EndpointsServiceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o EndpointsServiceIamBindingOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointsServiceIamBinding) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointsServiceIamBindingInput)(nil)).Elem(), &EndpointsServiceIamBinding{})
	pulumi.RegisterOutputType(EndpointsServiceIamBindingOutput{})
}
