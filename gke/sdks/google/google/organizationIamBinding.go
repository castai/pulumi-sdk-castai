// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationIamBinding struct {
	pulumi.CustomResourceState

	Condition OrganizationIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag      pulumi.StringOutput                      `pulumi:"etag"`
	Members   pulumi.StringArrayOutput                 `pulumi:"members"`
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                    pulumi.StringOutput `pulumi:"orgId"`
	OrganizationIamBindingId pulumi.StringOutput `pulumi:"organizationIamBindingId"`
	Role                     pulumi.StringOutput `pulumi:"role"`
}

// NewOrganizationIamBinding registers a new resource with the given unique name, arguments, and options.
func NewOrganizationIamBinding(ctx *pulumi.Context,
	name string, args *OrganizationIamBindingArgs, opts ...pulumi.ResourceOption) (*OrganizationIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource OrganizationIamBinding
	err = ctx.RegisterPackageResource("google:index/organizationIamBinding:OrganizationIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationIamBinding gets an existing OrganizationIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationIamBindingState, opts ...pulumi.ResourceOption) (*OrganizationIamBinding, error) {
	var resource OrganizationIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/organizationIamBinding:OrganizationIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationIamBinding resources.
type organizationIamBindingState struct {
	Condition *OrganizationIamBindingCondition `pulumi:"condition"`
	Etag      *string                          `pulumi:"etag"`
	Members   []string                         `pulumi:"members"`
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                    *string `pulumi:"orgId"`
	OrganizationIamBindingId *string `pulumi:"organizationIamBindingId"`
	Role                     *string `pulumi:"role"`
}

type OrganizationIamBindingState struct {
	Condition OrganizationIamBindingConditionPtrInput
	Etag      pulumi.StringPtrInput
	Members   pulumi.StringArrayInput
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                    pulumi.StringPtrInput
	OrganizationIamBindingId pulumi.StringPtrInput
	Role                     pulumi.StringPtrInput
}

func (OrganizationIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationIamBindingState)(nil)).Elem()
}

type organizationIamBindingArgs struct {
	Condition *OrganizationIamBindingCondition `pulumi:"condition"`
	Members   []string                         `pulumi:"members"`
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                    string  `pulumi:"orgId"`
	OrganizationIamBindingId *string `pulumi:"organizationIamBindingId"`
	Role                     string  `pulumi:"role"`
}

// The set of arguments for constructing a OrganizationIamBinding resource.
type OrganizationIamBindingArgs struct {
	Condition OrganizationIamBindingConditionPtrInput
	Members   pulumi.StringArrayInput
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                    pulumi.StringInput
	OrganizationIamBindingId pulumi.StringPtrInput
	Role                     pulumi.StringInput
}

func (OrganizationIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationIamBindingArgs)(nil)).Elem()
}

type OrganizationIamBindingInput interface {
	pulumi.Input

	ToOrganizationIamBindingOutput() OrganizationIamBindingOutput
	ToOrganizationIamBindingOutputWithContext(ctx context.Context) OrganizationIamBindingOutput
}

func (*OrganizationIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationIamBinding)(nil)).Elem()
}

func (i *OrganizationIamBinding) ToOrganizationIamBindingOutput() OrganizationIamBindingOutput {
	return i.ToOrganizationIamBindingOutputWithContext(context.Background())
}

func (i *OrganizationIamBinding) ToOrganizationIamBindingOutputWithContext(ctx context.Context) OrganizationIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationIamBindingOutput)
}

type OrganizationIamBindingOutput struct{ *pulumi.OutputState }

func (OrganizationIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationIamBinding)(nil)).Elem()
}

func (o OrganizationIamBindingOutput) ToOrganizationIamBindingOutput() OrganizationIamBindingOutput {
	return o
}

func (o OrganizationIamBindingOutput) ToOrganizationIamBindingOutputWithContext(ctx context.Context) OrganizationIamBindingOutput {
	return o
}

func (o OrganizationIamBindingOutput) Condition() OrganizationIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *OrganizationIamBinding) OrganizationIamBindingConditionPtrOutput { return v.Condition }).(OrganizationIamBindingConditionPtrOutput)
}

func (o OrganizationIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o OrganizationIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The numeric ID of the organization in which you want to manage the audit logging config.
func (o OrganizationIamBindingOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationIamBinding) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

func (o OrganizationIamBindingOutput) OrganizationIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationIamBinding) pulumi.StringOutput { return v.OrganizationIamBindingId }).(pulumi.StringOutput)
}

func (o OrganizationIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationIamBindingInput)(nil)).Elem(), &OrganizationIamBinding{})
	pulumi.RegisterOutputType(OrganizationIamBindingOutput{})
}
