// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataprocMetastoreServiceIamPolicy struct {
	pulumi.CustomResourceState

	DataprocMetastoreServiceIamPolicyId pulumi.StringOutput `pulumi:"dataprocMetastoreServiceIamPolicyId"`
	Etag                                pulumi.StringOutput `pulumi:"etag"`
	Location                            pulumi.StringOutput `pulumi:"location"`
	PolicyData                          pulumi.StringOutput `pulumi:"policyData"`
	Project                             pulumi.StringOutput `pulumi:"project"`
	ServiceId                           pulumi.StringOutput `pulumi:"serviceId"`
}

// NewDataprocMetastoreServiceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDataprocMetastoreServiceIamPolicy(ctx *pulumi.Context,
	name string, args *DataprocMetastoreServiceIamPolicyArgs, opts ...pulumi.ResourceOption) (*DataprocMetastoreServiceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataprocMetastoreServiceIamPolicy
	err = ctx.RegisterPackageResource("google:index/dataprocMetastoreServiceIamPolicy:DataprocMetastoreServiceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocMetastoreServiceIamPolicy gets an existing DataprocMetastoreServiceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocMetastoreServiceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocMetastoreServiceIamPolicyState, opts ...pulumi.ResourceOption) (*DataprocMetastoreServiceIamPolicy, error) {
	var resource DataprocMetastoreServiceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataprocMetastoreServiceIamPolicy:DataprocMetastoreServiceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocMetastoreServiceIamPolicy resources.
type dataprocMetastoreServiceIamPolicyState struct {
	DataprocMetastoreServiceIamPolicyId *string `pulumi:"dataprocMetastoreServiceIamPolicyId"`
	Etag                                *string `pulumi:"etag"`
	Location                            *string `pulumi:"location"`
	PolicyData                          *string `pulumi:"policyData"`
	Project                             *string `pulumi:"project"`
	ServiceId                           *string `pulumi:"serviceId"`
}

type DataprocMetastoreServiceIamPolicyState struct {
	DataprocMetastoreServiceIamPolicyId pulumi.StringPtrInput
	Etag                                pulumi.StringPtrInput
	Location                            pulumi.StringPtrInput
	PolicyData                          pulumi.StringPtrInput
	Project                             pulumi.StringPtrInput
	ServiceId                           pulumi.StringPtrInput
}

func (DataprocMetastoreServiceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreServiceIamPolicyState)(nil)).Elem()
}

type dataprocMetastoreServiceIamPolicyArgs struct {
	DataprocMetastoreServiceIamPolicyId *string `pulumi:"dataprocMetastoreServiceIamPolicyId"`
	Location                            *string `pulumi:"location"`
	PolicyData                          string  `pulumi:"policyData"`
	Project                             *string `pulumi:"project"`
	ServiceId                           string  `pulumi:"serviceId"`
}

// The set of arguments for constructing a DataprocMetastoreServiceIamPolicy resource.
type DataprocMetastoreServiceIamPolicyArgs struct {
	DataprocMetastoreServiceIamPolicyId pulumi.StringPtrInput
	Location                            pulumi.StringPtrInput
	PolicyData                          pulumi.StringInput
	Project                             pulumi.StringPtrInput
	ServiceId                           pulumi.StringInput
}

func (DataprocMetastoreServiceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreServiceIamPolicyArgs)(nil)).Elem()
}

type DataprocMetastoreServiceIamPolicyInput interface {
	pulumi.Input

	ToDataprocMetastoreServiceIamPolicyOutput() DataprocMetastoreServiceIamPolicyOutput
	ToDataprocMetastoreServiceIamPolicyOutputWithContext(ctx context.Context) DataprocMetastoreServiceIamPolicyOutput
}

func (*DataprocMetastoreServiceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreServiceIamPolicy)(nil)).Elem()
}

func (i *DataprocMetastoreServiceIamPolicy) ToDataprocMetastoreServiceIamPolicyOutput() DataprocMetastoreServiceIamPolicyOutput {
	return i.ToDataprocMetastoreServiceIamPolicyOutputWithContext(context.Background())
}

func (i *DataprocMetastoreServiceIamPolicy) ToDataprocMetastoreServiceIamPolicyOutputWithContext(ctx context.Context) DataprocMetastoreServiceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocMetastoreServiceIamPolicyOutput)
}

type DataprocMetastoreServiceIamPolicyOutput struct{ *pulumi.OutputState }

func (DataprocMetastoreServiceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreServiceIamPolicy)(nil)).Elem()
}

func (o DataprocMetastoreServiceIamPolicyOutput) ToDataprocMetastoreServiceIamPolicyOutput() DataprocMetastoreServiceIamPolicyOutput {
	return o
}

func (o DataprocMetastoreServiceIamPolicyOutput) ToDataprocMetastoreServiceIamPolicyOutputWithContext(ctx context.Context) DataprocMetastoreServiceIamPolicyOutput {
	return o
}

func (o DataprocMetastoreServiceIamPolicyOutput) DataprocMetastoreServiceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamPolicy) pulumi.StringOutput {
		return v.DataprocMetastoreServiceIamPolicyId
	}).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamPolicyOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamPolicy) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocMetastoreServiceIamPolicyInput)(nil)).Elem(), &DataprocMetastoreServiceIamPolicy{})
	pulumi.RegisterOutputType(DataprocMetastoreServiceIamPolicyOutput{})
}
