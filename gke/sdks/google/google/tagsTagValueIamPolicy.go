// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TagsTagValueIamPolicy struct {
	pulumi.CustomResourceState

	Etag                    pulumi.StringOutput `pulumi:"etag"`
	PolicyData              pulumi.StringOutput `pulumi:"policyData"`
	TagValue                pulumi.StringOutput `pulumi:"tagValue"`
	TagsTagValueIamPolicyId pulumi.StringOutput `pulumi:"tagsTagValueIamPolicyId"`
}

// NewTagsTagValueIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewTagsTagValueIamPolicy(ctx *pulumi.Context,
	name string, args *TagsTagValueIamPolicyArgs, opts ...pulumi.ResourceOption) (*TagsTagValueIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.TagValue == nil {
		return nil, errors.New("invalid value for required argument 'TagValue'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource TagsTagValueIamPolicy
	err = ctx.RegisterPackageResource("google:index/tagsTagValueIamPolicy:TagsTagValueIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagsTagValueIamPolicy gets an existing TagsTagValueIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagsTagValueIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagsTagValueIamPolicyState, opts ...pulumi.ResourceOption) (*TagsTagValueIamPolicy, error) {
	var resource TagsTagValueIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/tagsTagValueIamPolicy:TagsTagValueIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagsTagValueIamPolicy resources.
type tagsTagValueIamPolicyState struct {
	Etag                    *string `pulumi:"etag"`
	PolicyData              *string `pulumi:"policyData"`
	TagValue                *string `pulumi:"tagValue"`
	TagsTagValueIamPolicyId *string `pulumi:"tagsTagValueIamPolicyId"`
}

type TagsTagValueIamPolicyState struct {
	Etag                    pulumi.StringPtrInput
	PolicyData              pulumi.StringPtrInput
	TagValue                pulumi.StringPtrInput
	TagsTagValueIamPolicyId pulumi.StringPtrInput
}

func (TagsTagValueIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagsTagValueIamPolicyState)(nil)).Elem()
}

type tagsTagValueIamPolicyArgs struct {
	PolicyData              string  `pulumi:"policyData"`
	TagValue                string  `pulumi:"tagValue"`
	TagsTagValueIamPolicyId *string `pulumi:"tagsTagValueIamPolicyId"`
}

// The set of arguments for constructing a TagsTagValueIamPolicy resource.
type TagsTagValueIamPolicyArgs struct {
	PolicyData              pulumi.StringInput
	TagValue                pulumi.StringInput
	TagsTagValueIamPolicyId pulumi.StringPtrInput
}

func (TagsTagValueIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagsTagValueIamPolicyArgs)(nil)).Elem()
}

type TagsTagValueIamPolicyInput interface {
	pulumi.Input

	ToTagsTagValueIamPolicyOutput() TagsTagValueIamPolicyOutput
	ToTagsTagValueIamPolicyOutputWithContext(ctx context.Context) TagsTagValueIamPolicyOutput
}

func (*TagsTagValueIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**TagsTagValueIamPolicy)(nil)).Elem()
}

func (i *TagsTagValueIamPolicy) ToTagsTagValueIamPolicyOutput() TagsTagValueIamPolicyOutput {
	return i.ToTagsTagValueIamPolicyOutputWithContext(context.Background())
}

func (i *TagsTagValueIamPolicy) ToTagsTagValueIamPolicyOutputWithContext(ctx context.Context) TagsTagValueIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagsTagValueIamPolicyOutput)
}

type TagsTagValueIamPolicyOutput struct{ *pulumi.OutputState }

func (TagsTagValueIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagsTagValueIamPolicy)(nil)).Elem()
}

func (o TagsTagValueIamPolicyOutput) ToTagsTagValueIamPolicyOutput() TagsTagValueIamPolicyOutput {
	return o
}

func (o TagsTagValueIamPolicyOutput) ToTagsTagValueIamPolicyOutputWithContext(ctx context.Context) TagsTagValueIamPolicyOutput {
	return o
}

func (o TagsTagValueIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagValueIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o TagsTagValueIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagValueIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o TagsTagValueIamPolicyOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagValueIamPolicy) pulumi.StringOutput { return v.TagValue }).(pulumi.StringOutput)
}

func (o TagsTagValueIamPolicyOutput) TagsTagValueIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *TagsTagValueIamPolicy) pulumi.StringOutput { return v.TagsTagValueIamPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagsTagValueIamPolicyInput)(nil)).Elem(), &TagsTagValueIamPolicy{})
	pulumi.RegisterOutputType(TagsTagValueIamPolicyOutput{})
}
