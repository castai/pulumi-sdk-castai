// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppEngineFirewallRule struct {
	pulumi.CustomResourceState

	// The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
	Action                  pulumi.StringOutput `pulumi:"action"`
	AppEngineFirewallRuleId pulumi.StringOutput `pulumi:"appEngineFirewallRuleId"`
	// An optional string description of this rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A positive integer that defines the order of rule evaluation. Rules with the lowest priority are evaluated first. A
	// default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action
	// of this rule can be modified by the user.
	Priority pulumi.Float64PtrOutput `pulumi:"priority"`
	Project  pulumi.StringOutput     `pulumi:"project"`
	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	SourceRange pulumi.StringOutput                    `pulumi:"sourceRange"`
	Timeouts    AppEngineFirewallRuleTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewAppEngineFirewallRule registers a new resource with the given unique name, arguments, and options.
func NewAppEngineFirewallRule(ctx *pulumi.Context,
	name string, args *AppEngineFirewallRuleArgs, opts ...pulumi.ResourceOption) (*AppEngineFirewallRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Action == nil {
		return nil, errors.New("invalid value for required argument 'Action'")
	}
	if args.SourceRange == nil {
		return nil, errors.New("invalid value for required argument 'SourceRange'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource AppEngineFirewallRule
	err = ctx.RegisterPackageResource("google:index/appEngineFirewallRule:AppEngineFirewallRule", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppEngineFirewallRule gets an existing AppEngineFirewallRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppEngineFirewallRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppEngineFirewallRuleState, opts ...pulumi.ResourceOption) (*AppEngineFirewallRule, error) {
	var resource AppEngineFirewallRule
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/appEngineFirewallRule:AppEngineFirewallRule", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppEngineFirewallRule resources.
type appEngineFirewallRuleState struct {
	// The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
	Action                  *string `pulumi:"action"`
	AppEngineFirewallRuleId *string `pulumi:"appEngineFirewallRuleId"`
	// An optional string description of this rule.
	Description *string `pulumi:"description"`
	// A positive integer that defines the order of rule evaluation. Rules with the lowest priority are evaluated first. A
	// default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action
	// of this rule can be modified by the user.
	Priority *float64 `pulumi:"priority"`
	Project  *string  `pulumi:"project"`
	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	SourceRange *string                        `pulumi:"sourceRange"`
	Timeouts    *AppEngineFirewallRuleTimeouts `pulumi:"timeouts"`
}

type AppEngineFirewallRuleState struct {
	// The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
	Action                  pulumi.StringPtrInput
	AppEngineFirewallRuleId pulumi.StringPtrInput
	// An optional string description of this rule.
	Description pulumi.StringPtrInput
	// A positive integer that defines the order of rule evaluation. Rules with the lowest priority are evaluated first. A
	// default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action
	// of this rule can be modified by the user.
	Priority pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	SourceRange pulumi.StringPtrInput
	Timeouts    AppEngineFirewallRuleTimeoutsPtrInput
}

func (AppEngineFirewallRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*appEngineFirewallRuleState)(nil)).Elem()
}

type appEngineFirewallRuleArgs struct {
	// The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
	Action                  string  `pulumi:"action"`
	AppEngineFirewallRuleId *string `pulumi:"appEngineFirewallRuleId"`
	// An optional string description of this rule.
	Description *string `pulumi:"description"`
	// A positive integer that defines the order of rule evaluation. Rules with the lowest priority are evaluated first. A
	// default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action
	// of this rule can be modified by the user.
	Priority *float64 `pulumi:"priority"`
	Project  *string  `pulumi:"project"`
	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	SourceRange string                         `pulumi:"sourceRange"`
	Timeouts    *AppEngineFirewallRuleTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a AppEngineFirewallRule resource.
type AppEngineFirewallRuleArgs struct {
	// The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
	Action                  pulumi.StringInput
	AppEngineFirewallRuleId pulumi.StringPtrInput
	// An optional string description of this rule.
	Description pulumi.StringPtrInput
	// A positive integer that defines the order of rule evaluation. Rules with the lowest priority are evaluated first. A
	// default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action
	// of this rule can be modified by the user.
	Priority pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	// IP address or range, defined using CIDR notation, of requests that this rule applies to.
	SourceRange pulumi.StringInput
	Timeouts    AppEngineFirewallRuleTimeoutsPtrInput
}

func (AppEngineFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appEngineFirewallRuleArgs)(nil)).Elem()
}

type AppEngineFirewallRuleInput interface {
	pulumi.Input

	ToAppEngineFirewallRuleOutput() AppEngineFirewallRuleOutput
	ToAppEngineFirewallRuleOutputWithContext(ctx context.Context) AppEngineFirewallRuleOutput
}

func (*AppEngineFirewallRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineFirewallRule)(nil)).Elem()
}

func (i *AppEngineFirewallRule) ToAppEngineFirewallRuleOutput() AppEngineFirewallRuleOutput {
	return i.ToAppEngineFirewallRuleOutputWithContext(context.Background())
}

func (i *AppEngineFirewallRule) ToAppEngineFirewallRuleOutputWithContext(ctx context.Context) AppEngineFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppEngineFirewallRuleOutput)
}

type AppEngineFirewallRuleOutput struct{ *pulumi.OutputState }

func (AppEngineFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppEngineFirewallRule)(nil)).Elem()
}

func (o AppEngineFirewallRuleOutput) ToAppEngineFirewallRuleOutput() AppEngineFirewallRuleOutput {
	return o
}

func (o AppEngineFirewallRuleOutput) ToAppEngineFirewallRuleOutputWithContext(ctx context.Context) AppEngineFirewallRuleOutput {
	return o
}

// The action to take if this rule matches. Possible values: ["UNSPECIFIED_ACTION", "ALLOW", "DENY"]
func (o AppEngineFirewallRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v *AppEngineFirewallRule) pulumi.StringOutput { return v.Action }).(pulumi.StringOutput)
}

func (o AppEngineFirewallRuleOutput) AppEngineFirewallRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *AppEngineFirewallRule) pulumi.StringOutput { return v.AppEngineFirewallRuleId }).(pulumi.StringOutput)
}

// An optional string description of this rule.
func (o AppEngineFirewallRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppEngineFirewallRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A positive integer that defines the order of rule evaluation. Rules with the lowest priority are evaluated first. A
// default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action
// of this rule can be modified by the user.
func (o AppEngineFirewallRuleOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AppEngineFirewallRule) pulumi.Float64PtrOutput { return v.Priority }).(pulumi.Float64PtrOutput)
}

func (o AppEngineFirewallRuleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AppEngineFirewallRule) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// IP address or range, defined using CIDR notation, of requests that this rule applies to.
func (o AppEngineFirewallRuleOutput) SourceRange() pulumi.StringOutput {
	return o.ApplyT(func(v *AppEngineFirewallRule) pulumi.StringOutput { return v.SourceRange }).(pulumi.StringOutput)
}

func (o AppEngineFirewallRuleOutput) Timeouts() AppEngineFirewallRuleTimeoutsPtrOutput {
	return o.ApplyT(func(v *AppEngineFirewallRule) AppEngineFirewallRuleTimeoutsPtrOutput { return v.Timeouts }).(AppEngineFirewallRuleTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppEngineFirewallRuleInput)(nil)).Elem(), &AppEngineFirewallRule{})
	pulumi.RegisterOutputType(AppEngineFirewallRuleOutput{})
}
