// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSecretManagerRegionalSecretVersion(ctx *pulumi.Context, args *LookupSecretManagerRegionalSecretVersionArgs, opts ...pulumi.InvokeOption) (*LookupSecretManagerRegionalSecretVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupSecretManagerRegionalSecretVersionResult
	err = ctx.InvokePackage("google:index/getSecretManagerRegionalSecretVersion:getSecretManagerRegionalSecretVersion", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecretManagerRegionalSecretVersion.
type LookupSecretManagerRegionalSecretVersionArgs struct {
	Id                 *string `pulumi:"id"`
	IsSecretDataBase64 *bool   `pulumi:"isSecretDataBase64"`
	Location           *string `pulumi:"location"`
	Project            *string `pulumi:"project"`
	Secret             string  `pulumi:"secret"`
	Version            *string `pulumi:"version"`
}

// A collection of values returned by getSecretManagerRegionalSecretVersion.
type LookupSecretManagerRegionalSecretVersionResult struct {
	CreateTime                 string                                                           `pulumi:"createTime"`
	CustomerManagedEncryptions []GetSecretManagerRegionalSecretVersionCustomerManagedEncryption `pulumi:"customerManagedEncryptions"`
	DestroyTime                string                                                           `pulumi:"destroyTime"`
	Enabled                    bool                                                             `pulumi:"enabled"`
	Id                         string                                                           `pulumi:"id"`
	IsSecretDataBase64         *bool                                                            `pulumi:"isSecretDataBase64"`
	Location                   string                                                           `pulumi:"location"`
	Name                       string                                                           `pulumi:"name"`
	Project                    string                                                           `pulumi:"project"`
	Secret                     string                                                           `pulumi:"secret"`
	SecretData                 string                                                           `pulumi:"secretData"`
	Version                    string                                                           `pulumi:"version"`
}

func LookupSecretManagerRegionalSecretVersionOutput(ctx *pulumi.Context, args LookupSecretManagerRegionalSecretVersionOutputArgs, opts ...pulumi.InvokeOption) LookupSecretManagerRegionalSecretVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecretManagerRegionalSecretVersionResultOutput, error) {
			args := v.(LookupSecretManagerRegionalSecretVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupSecretManagerRegionalSecretVersionResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getSecretManagerRegionalSecretVersion:getSecretManagerRegionalSecretVersion", args, LookupSecretManagerRegionalSecretVersionResultOutput{}, options).(LookupSecretManagerRegionalSecretVersionResultOutput), nil
		}).(LookupSecretManagerRegionalSecretVersionResultOutput)
}

// A collection of arguments for invoking getSecretManagerRegionalSecretVersion.
type LookupSecretManagerRegionalSecretVersionOutputArgs struct {
	Id                 pulumi.StringPtrInput `pulumi:"id"`
	IsSecretDataBase64 pulumi.BoolPtrInput   `pulumi:"isSecretDataBase64"`
	Location           pulumi.StringPtrInput `pulumi:"location"`
	Project            pulumi.StringPtrInput `pulumi:"project"`
	Secret             pulumi.StringInput    `pulumi:"secret"`
	Version            pulumi.StringPtrInput `pulumi:"version"`
}

func (LookupSecretManagerRegionalSecretVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretManagerRegionalSecretVersionArgs)(nil)).Elem()
}

// A collection of values returned by getSecretManagerRegionalSecretVersion.
type LookupSecretManagerRegionalSecretVersionResultOutput struct{ *pulumi.OutputState }

func (LookupSecretManagerRegionalSecretVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecretManagerRegionalSecretVersionResult)(nil)).Elem()
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) ToLookupSecretManagerRegionalSecretVersionResultOutput() LookupSecretManagerRegionalSecretVersionResultOutput {
	return o
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) ToLookupSecretManagerRegionalSecretVersionResultOutputWithContext(ctx context.Context) LookupSecretManagerRegionalSecretVersionResultOutput {
	return o
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) CustomerManagedEncryptions() GetSecretManagerRegionalSecretVersionCustomerManagedEncryptionArrayOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) []GetSecretManagerRegionalSecretVersionCustomerManagedEncryption {
		return v.CustomerManagedEncryptions
	}).(GetSecretManagerRegionalSecretVersionCustomerManagedEncryptionArrayOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) DestroyTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) string { return v.DestroyTime }).(pulumi.StringOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) IsSecretDataBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) *bool { return v.IsSecretDataBase64 }).(pulumi.BoolPtrOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) string { return v.Secret }).(pulumi.StringOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) SecretData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) string { return v.SecretData }).(pulumi.StringOutput)
}

func (o LookupSecretManagerRegionalSecretVersionResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecretManagerRegionalSecretVersionResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecretManagerRegionalSecretVersionResultOutput{})
}
