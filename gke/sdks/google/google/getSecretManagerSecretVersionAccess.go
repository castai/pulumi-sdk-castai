// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSecretManagerSecretVersionAccess(ctx *pulumi.Context, args *GetSecretManagerSecretVersionAccessArgs, opts ...pulumi.InvokeOption) (*GetSecretManagerSecretVersionAccessResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetSecretManagerSecretVersionAccessResult
	err = ctx.InvokePackage("google:index/getSecretManagerSecretVersionAccess:getSecretManagerSecretVersionAccess", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecretManagerSecretVersionAccess.
type GetSecretManagerSecretVersionAccessArgs struct {
	Id                 *string `pulumi:"id"`
	IsSecretDataBase64 *bool   `pulumi:"isSecretDataBase64"`
	Project            *string `pulumi:"project"`
	Secret             string  `pulumi:"secret"`
	Version            *string `pulumi:"version"`
}

// A collection of values returned by getSecretManagerSecretVersionAccess.
type GetSecretManagerSecretVersionAccessResult struct {
	Id                 string `pulumi:"id"`
	IsSecretDataBase64 *bool  `pulumi:"isSecretDataBase64"`
	Name               string `pulumi:"name"`
	Project            string `pulumi:"project"`
	Secret             string `pulumi:"secret"`
	SecretData         string `pulumi:"secretData"`
	Version            string `pulumi:"version"`
}

func GetSecretManagerSecretVersionAccessOutput(ctx *pulumi.Context, args GetSecretManagerSecretVersionAccessOutputArgs, opts ...pulumi.InvokeOption) GetSecretManagerSecretVersionAccessResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSecretManagerSecretVersionAccessResultOutput, error) {
			args := v.(GetSecretManagerSecretVersionAccessArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetSecretManagerSecretVersionAccessResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getSecretManagerSecretVersionAccess:getSecretManagerSecretVersionAccess", args, GetSecretManagerSecretVersionAccessResultOutput{}, options).(GetSecretManagerSecretVersionAccessResultOutput), nil
		}).(GetSecretManagerSecretVersionAccessResultOutput)
}

// A collection of arguments for invoking getSecretManagerSecretVersionAccess.
type GetSecretManagerSecretVersionAccessOutputArgs struct {
	Id                 pulumi.StringPtrInput `pulumi:"id"`
	IsSecretDataBase64 pulumi.BoolPtrInput   `pulumi:"isSecretDataBase64"`
	Project            pulumi.StringPtrInput `pulumi:"project"`
	Secret             pulumi.StringInput    `pulumi:"secret"`
	Version            pulumi.StringPtrInput `pulumi:"version"`
}

func (GetSecretManagerSecretVersionAccessOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretManagerSecretVersionAccessArgs)(nil)).Elem()
}

// A collection of values returned by getSecretManagerSecretVersionAccess.
type GetSecretManagerSecretVersionAccessResultOutput struct{ *pulumi.OutputState }

func (GetSecretManagerSecretVersionAccessResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretManagerSecretVersionAccessResult)(nil)).Elem()
}

func (o GetSecretManagerSecretVersionAccessResultOutput) ToGetSecretManagerSecretVersionAccessResultOutput() GetSecretManagerSecretVersionAccessResultOutput {
	return o
}

func (o GetSecretManagerSecretVersionAccessResultOutput) ToGetSecretManagerSecretVersionAccessResultOutputWithContext(ctx context.Context) GetSecretManagerSecretVersionAccessResultOutput {
	return o
}

func (o GetSecretManagerSecretVersionAccessResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretManagerSecretVersionAccessResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSecretManagerSecretVersionAccessResultOutput) IsSecretDataBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecretManagerSecretVersionAccessResult) *bool { return v.IsSecretDataBase64 }).(pulumi.BoolPtrOutput)
}

func (o GetSecretManagerSecretVersionAccessResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretManagerSecretVersionAccessResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecretManagerSecretVersionAccessResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretManagerSecretVersionAccessResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetSecretManagerSecretVersionAccessResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretManagerSecretVersionAccessResult) string { return v.Secret }).(pulumi.StringOutput)
}

func (o GetSecretManagerSecretVersionAccessResultOutput) SecretData() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretManagerSecretVersionAccessResult) string { return v.SecretData }).(pulumi.StringOutput)
}

func (o GetSecretManagerSecretVersionAccessResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretManagerSecretVersionAccessResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecretManagerSecretVersionAccessResultOutput{})
}
