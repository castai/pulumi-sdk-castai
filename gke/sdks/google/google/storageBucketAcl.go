// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StorageBucketAcl struct {
	pulumi.CustomResourceState

	// The name of the bucket it applies to.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// Configure this ACL to be the default ACL.
	DefaultAcl pulumi.StringPtrOutput `pulumi:"defaultAcl"`
	// The canned GCS ACL to apply. Must be set if role_entity is not.
	PredefinedAcl pulumi.StringPtrOutput `pulumi:"predefinedAcl"`
	// List of role/entity pairs in the form ROLE:entity. See GCS Bucket ACL documentation for more details. Must be set if
	// predefined_acl is not.
	RoleEntities       pulumi.StringArrayOutput `pulumi:"roleEntities"`
	StorageBucketAclId pulumi.StringOutput      `pulumi:"storageBucketAclId"`
}

// NewStorageBucketAcl registers a new resource with the given unique name, arguments, and options.
func NewStorageBucketAcl(ctx *pulumi.Context,
	name string, args *StorageBucketAclArgs, opts ...pulumi.ResourceOption) (*StorageBucketAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource StorageBucketAcl
	err = ctx.RegisterPackageResource("google:index/storageBucketAcl:StorageBucketAcl", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageBucketAcl gets an existing StorageBucketAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageBucketAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageBucketAclState, opts ...pulumi.ResourceOption) (*StorageBucketAcl, error) {
	var resource StorageBucketAcl
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/storageBucketAcl:StorageBucketAcl", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageBucketAcl resources.
type storageBucketAclState struct {
	// The name of the bucket it applies to.
	Bucket *string `pulumi:"bucket"`
	// Configure this ACL to be the default ACL.
	DefaultAcl *string `pulumi:"defaultAcl"`
	// The canned GCS ACL to apply. Must be set if role_entity is not.
	PredefinedAcl *string `pulumi:"predefinedAcl"`
	// List of role/entity pairs in the form ROLE:entity. See GCS Bucket ACL documentation for more details. Must be set if
	// predefined_acl is not.
	RoleEntities       []string `pulumi:"roleEntities"`
	StorageBucketAclId *string  `pulumi:"storageBucketAclId"`
}

type StorageBucketAclState struct {
	// The name of the bucket it applies to.
	Bucket pulumi.StringPtrInput
	// Configure this ACL to be the default ACL.
	DefaultAcl pulumi.StringPtrInput
	// The canned GCS ACL to apply. Must be set if role_entity is not.
	PredefinedAcl pulumi.StringPtrInput
	// List of role/entity pairs in the form ROLE:entity. See GCS Bucket ACL documentation for more details. Must be set if
	// predefined_acl is not.
	RoleEntities       pulumi.StringArrayInput
	StorageBucketAclId pulumi.StringPtrInput
}

func (StorageBucketAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageBucketAclState)(nil)).Elem()
}

type storageBucketAclArgs struct {
	// The name of the bucket it applies to.
	Bucket string `pulumi:"bucket"`
	// Configure this ACL to be the default ACL.
	DefaultAcl *string `pulumi:"defaultAcl"`
	// The canned GCS ACL to apply. Must be set if role_entity is not.
	PredefinedAcl *string `pulumi:"predefinedAcl"`
	// List of role/entity pairs in the form ROLE:entity. See GCS Bucket ACL documentation for more details. Must be set if
	// predefined_acl is not.
	RoleEntities       []string `pulumi:"roleEntities"`
	StorageBucketAclId *string  `pulumi:"storageBucketAclId"`
}

// The set of arguments for constructing a StorageBucketAcl resource.
type StorageBucketAclArgs struct {
	// The name of the bucket it applies to.
	Bucket pulumi.StringInput
	// Configure this ACL to be the default ACL.
	DefaultAcl pulumi.StringPtrInput
	// The canned GCS ACL to apply. Must be set if role_entity is not.
	PredefinedAcl pulumi.StringPtrInput
	// List of role/entity pairs in the form ROLE:entity. See GCS Bucket ACL documentation for more details. Must be set if
	// predefined_acl is not.
	RoleEntities       pulumi.StringArrayInput
	StorageBucketAclId pulumi.StringPtrInput
}

func (StorageBucketAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageBucketAclArgs)(nil)).Elem()
}

type StorageBucketAclInput interface {
	pulumi.Input

	ToStorageBucketAclOutput() StorageBucketAclOutput
	ToStorageBucketAclOutputWithContext(ctx context.Context) StorageBucketAclOutput
}

func (*StorageBucketAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketAcl)(nil)).Elem()
}

func (i *StorageBucketAcl) ToStorageBucketAclOutput() StorageBucketAclOutput {
	return i.ToStorageBucketAclOutputWithContext(context.Background())
}

func (i *StorageBucketAcl) ToStorageBucketAclOutputWithContext(ctx context.Context) StorageBucketAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageBucketAclOutput)
}

type StorageBucketAclOutput struct{ *pulumi.OutputState }

func (StorageBucketAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageBucketAcl)(nil)).Elem()
}

func (o StorageBucketAclOutput) ToStorageBucketAclOutput() StorageBucketAclOutput {
	return o
}

func (o StorageBucketAclOutput) ToStorageBucketAclOutputWithContext(ctx context.Context) StorageBucketAclOutput {
	return o
}

// The name of the bucket it applies to.
func (o StorageBucketAclOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageBucketAcl) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// Configure this ACL to be the default ACL.
func (o StorageBucketAclOutput) DefaultAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBucketAcl) pulumi.StringPtrOutput { return v.DefaultAcl }).(pulumi.StringPtrOutput)
}

// The canned GCS ACL to apply. Must be set if role_entity is not.
func (o StorageBucketAclOutput) PredefinedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageBucketAcl) pulumi.StringPtrOutput { return v.PredefinedAcl }).(pulumi.StringPtrOutput)
}

// List of role/entity pairs in the form ROLE:entity. See GCS Bucket ACL documentation for more details. Must be set if
// predefined_acl is not.
func (o StorageBucketAclOutput) RoleEntities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StorageBucketAcl) pulumi.StringArrayOutput { return v.RoleEntities }).(pulumi.StringArrayOutput)
}

func (o StorageBucketAclOutput) StorageBucketAclId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageBucketAcl) pulumi.StringOutput { return v.StorageBucketAclId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageBucketAclInput)(nil)).Elem(), &StorageBucketAcl{})
	pulumi.RegisterOutputType(StorageBucketAclOutput{})
}
