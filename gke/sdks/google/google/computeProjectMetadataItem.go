// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeProjectMetadataItem struct {
	pulumi.CustomResourceState

	ComputeProjectMetadataItemId pulumi.StringOutput `pulumi:"computeProjectMetadataItemId"`
	// The metadata key to set.
	Key pulumi.StringOutput `pulumi:"key"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project  pulumi.StringOutput                         `pulumi:"project"`
	Timeouts ComputeProjectMetadataItemTimeoutsPtrOutput `pulumi:"timeouts"`
	// The value to set for the given metadata key.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewComputeProjectMetadataItem registers a new resource with the given unique name, arguments, and options.
func NewComputeProjectMetadataItem(ctx *pulumi.Context,
	name string, args *ComputeProjectMetadataItemArgs, opts ...pulumi.ResourceOption) (*ComputeProjectMetadataItem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeProjectMetadataItem
	err = ctx.RegisterPackageResource("google:index/computeProjectMetadataItem:ComputeProjectMetadataItem", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeProjectMetadataItem gets an existing ComputeProjectMetadataItem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeProjectMetadataItem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeProjectMetadataItemState, opts ...pulumi.ResourceOption) (*ComputeProjectMetadataItem, error) {
	var resource ComputeProjectMetadataItem
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeProjectMetadataItem:ComputeProjectMetadataItem", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeProjectMetadataItem resources.
type computeProjectMetadataItemState struct {
	ComputeProjectMetadataItemId *string `pulumi:"computeProjectMetadataItemId"`
	// The metadata key to set.
	Key *string `pulumi:"key"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project  *string                             `pulumi:"project"`
	Timeouts *ComputeProjectMetadataItemTimeouts `pulumi:"timeouts"`
	// The value to set for the given metadata key.
	Value *string `pulumi:"value"`
}

type ComputeProjectMetadataItemState struct {
	ComputeProjectMetadataItemId pulumi.StringPtrInput
	// The metadata key to set.
	Key pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project  pulumi.StringPtrInput
	Timeouts ComputeProjectMetadataItemTimeoutsPtrInput
	// The value to set for the given metadata key.
	Value pulumi.StringPtrInput
}

func (ComputeProjectMetadataItemState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeProjectMetadataItemState)(nil)).Elem()
}

type computeProjectMetadataItemArgs struct {
	ComputeProjectMetadataItemId *string `pulumi:"computeProjectMetadataItemId"`
	// The metadata key to set.
	Key string `pulumi:"key"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project  *string                             `pulumi:"project"`
	Timeouts *ComputeProjectMetadataItemTimeouts `pulumi:"timeouts"`
	// The value to set for the given metadata key.
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a ComputeProjectMetadataItem resource.
type ComputeProjectMetadataItemArgs struct {
	ComputeProjectMetadataItemId pulumi.StringPtrInput
	// The metadata key to set.
	Key pulumi.StringInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project  pulumi.StringPtrInput
	Timeouts ComputeProjectMetadataItemTimeoutsPtrInput
	// The value to set for the given metadata key.
	Value pulumi.StringInput
}

func (ComputeProjectMetadataItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeProjectMetadataItemArgs)(nil)).Elem()
}

type ComputeProjectMetadataItemInput interface {
	pulumi.Input

	ToComputeProjectMetadataItemOutput() ComputeProjectMetadataItemOutput
	ToComputeProjectMetadataItemOutputWithContext(ctx context.Context) ComputeProjectMetadataItemOutput
}

func (*ComputeProjectMetadataItem) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeProjectMetadataItem)(nil)).Elem()
}

func (i *ComputeProjectMetadataItem) ToComputeProjectMetadataItemOutput() ComputeProjectMetadataItemOutput {
	return i.ToComputeProjectMetadataItemOutputWithContext(context.Background())
}

func (i *ComputeProjectMetadataItem) ToComputeProjectMetadataItemOutputWithContext(ctx context.Context) ComputeProjectMetadataItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeProjectMetadataItemOutput)
}

type ComputeProjectMetadataItemOutput struct{ *pulumi.OutputState }

func (ComputeProjectMetadataItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeProjectMetadataItem)(nil)).Elem()
}

func (o ComputeProjectMetadataItemOutput) ToComputeProjectMetadataItemOutput() ComputeProjectMetadataItemOutput {
	return o
}

func (o ComputeProjectMetadataItemOutput) ToComputeProjectMetadataItemOutputWithContext(ctx context.Context) ComputeProjectMetadataItemOutput {
	return o
}

func (o ComputeProjectMetadataItemOutput) ComputeProjectMetadataItemId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeProjectMetadataItem) pulumi.StringOutput { return v.ComputeProjectMetadataItemId }).(pulumi.StringOutput)
}

// The metadata key to set.
func (o ComputeProjectMetadataItemOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeProjectMetadataItem) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
func (o ComputeProjectMetadataItemOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeProjectMetadataItem) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeProjectMetadataItemOutput) Timeouts() ComputeProjectMetadataItemTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeProjectMetadataItem) ComputeProjectMetadataItemTimeoutsPtrOutput { return v.Timeouts }).(ComputeProjectMetadataItemTimeoutsPtrOutput)
}

// The value to set for the given metadata key.
func (o ComputeProjectMetadataItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeProjectMetadataItem) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeProjectMetadataItemInput)(nil)).Elem(), &ComputeProjectMetadataItem{})
	pulumi.RegisterOutputType(ComputeProjectMetadataItemOutput{})
}
