// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetappStoragePool struct {
	pulumi.CustomResourceState

	// Specifies the Active Directory policy to be used. Format:
	// 'projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}'. The policy needs to be in the same location as
	// the storage pool.
	ActiveDirectory pulumi.StringPtrOutput `pulumi:"activeDirectory"`
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false. Auto-tiering can be enabled
	// after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering pulumi.BoolPtrOutput `pulumi:"allowAutoTiering"`
	// Capacity of the storage pool (in GiB).
	CapacityGib pulumi.StringOutput `pulumi:"capacityGib"`
	// An optional description of this resource.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
	EncryptionType pulumi.StringOutput `pulumi:"encryptionType"`
	// Specifies the CMEK policy to be used for volume encryption. Format:
	// 'projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}'. The policy needs to be in the same location as the
	// storage pool.
	KmsConfig pulumi.StringPtrOutput `pulumi:"kmsConfig"`
	// Labels as key value pairs. Example: '{ "owner": "Bob", "department": "finance", "purpose": "testing" }'. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended
	// group support for NFSv3, using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled pulumi.BoolPtrOutput `pulumi:"ldapEnabled"`
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name                pulumi.StringOutput `pulumi:"name"`
	NetappStoragePoolId pulumi.StringOutput `pulumi:"netappStoragePoolId"`
	// VPC network name with format: 'projects/{{project}}/global/networks/{{network}}'
	Network pulumi.StringOutput `pulumi:"network"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Specifies the replica zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone pulumi.StringPtrOutput `pulumi:"replicaZone"`
	// Service level of the storage pool. Possible values: ["PREMIUM", "EXTREME", "STANDARD", "FLEX"]
	ServiceLevel pulumi.StringOutput `pulumi:"serviceLevel"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput             `pulumi:"terraformLabels"`
	Timeouts        NetappStoragePoolTimeoutsPtrOutput `pulumi:"timeouts"`
	// Size allocated to volumes in the storage pool (in GiB).
	VolumeCapacityGib pulumi.StringOutput `pulumi:"volumeCapacityGib"`
	// Number of volume in the storage pool.
	VolumeCount pulumi.Float64Output `pulumi:"volumeCount"`
	// Specifies the active zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for 'location' and omit 'zone'.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewNetappStoragePool registers a new resource with the given unique name, arguments, and options.
func NewNetappStoragePool(ctx *pulumi.Context,
	name string, args *NetappStoragePoolArgs, opts ...pulumi.ResourceOption) (*NetappStoragePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CapacityGib == nil {
		return nil, errors.New("invalid value for required argument 'CapacityGib'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.ServiceLevel == nil {
		return nil, errors.New("invalid value for required argument 'ServiceLevel'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetappStoragePool
	err = ctx.RegisterPackageResource("google:index/netappStoragePool:NetappStoragePool", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetappStoragePool gets an existing NetappStoragePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetappStoragePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetappStoragePoolState, opts ...pulumi.ResourceOption) (*NetappStoragePool, error) {
	var resource NetappStoragePool
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/netappStoragePool:NetappStoragePool", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetappStoragePool resources.
type netappStoragePoolState struct {
	// Specifies the Active Directory policy to be used. Format:
	// 'projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}'. The policy needs to be in the same location as
	// the storage pool.
	ActiveDirectory *string `pulumi:"activeDirectory"`
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false. Auto-tiering can be enabled
	// after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering *bool `pulumi:"allowAutoTiering"`
	// Capacity of the storage pool (in GiB).
	CapacityGib *string `pulumi:"capacityGib"`
	// An optional description of this resource.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
	EncryptionType *string `pulumi:"encryptionType"`
	// Specifies the CMEK policy to be used for volume encryption. Format:
	// 'projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}'. The policy needs to be in the same location as the
	// storage pool.
	KmsConfig *string `pulumi:"kmsConfig"`
	// Labels as key value pairs. Example: '{ "owner": "Bob", "department": "finance", "purpose": "testing" }'. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended
	// group support for NFSv3, using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled *bool `pulumi:"ldapEnabled"`
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location *string `pulumi:"location"`
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name                *string `pulumi:"name"`
	NetappStoragePoolId *string `pulumi:"netappStoragePoolId"`
	// VPC network name with format: 'projects/{{project}}/global/networks/{{network}}'
	Network *string `pulumi:"network"`
	Project *string `pulumi:"project"`
	// Specifies the replica zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone *string `pulumi:"replicaZone"`
	// Service level of the storage pool. Possible values: ["PREMIUM", "EXTREME", "STANDARD", "FLEX"]
	ServiceLevel *string `pulumi:"serviceLevel"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string          `pulumi:"terraformLabels"`
	Timeouts        *NetappStoragePoolTimeouts `pulumi:"timeouts"`
	// Size allocated to volumes in the storage pool (in GiB).
	VolumeCapacityGib *string `pulumi:"volumeCapacityGib"`
	// Number of volume in the storage pool.
	VolumeCount *float64 `pulumi:"volumeCount"`
	// Specifies the active zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for 'location' and omit 'zone'.
	Zone *string `pulumi:"zone"`
}

type NetappStoragePoolState struct {
	// Specifies the Active Directory policy to be used. Format:
	// 'projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}'. The policy needs to be in the same location as
	// the storage pool.
	ActiveDirectory pulumi.StringPtrInput
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false. Auto-tiering can be enabled
	// after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering pulumi.BoolPtrInput
	// Capacity of the storage pool (in GiB).
	CapacityGib pulumi.StringPtrInput
	// An optional description of this resource.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
	EncryptionType pulumi.StringPtrInput
	// Specifies the CMEK policy to be used for volume encryption. Format:
	// 'projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}'. The policy needs to be in the same location as the
	// storage pool.
	KmsConfig pulumi.StringPtrInput
	// Labels as key value pairs. Example: '{ "owner": "Bob", "department": "finance", "purpose": "testing" }'. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended
	// group support for NFSv3, using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled pulumi.BoolPtrInput
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location pulumi.StringPtrInput
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name                pulumi.StringPtrInput
	NetappStoragePoolId pulumi.StringPtrInput
	// VPC network name with format: 'projects/{{project}}/global/networks/{{network}}'
	Network pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Specifies the replica zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone pulumi.StringPtrInput
	// Service level of the storage pool. Possible values: ["PREMIUM", "EXTREME", "STANDARD", "FLEX"]
	ServiceLevel pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetappStoragePoolTimeoutsPtrInput
	// Size allocated to volumes in the storage pool (in GiB).
	VolumeCapacityGib pulumi.StringPtrInput
	// Number of volume in the storage pool.
	VolumeCount pulumi.Float64PtrInput
	// Specifies the active zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for 'location' and omit 'zone'.
	Zone pulumi.StringPtrInput
}

func (NetappStoragePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*netappStoragePoolState)(nil)).Elem()
}

type netappStoragePoolArgs struct {
	// Specifies the Active Directory policy to be used. Format:
	// 'projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}'. The policy needs to be in the same location as
	// the storage pool.
	ActiveDirectory *string `pulumi:"activeDirectory"`
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false. Auto-tiering can be enabled
	// after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering *bool `pulumi:"allowAutoTiering"`
	// Capacity of the storage pool (in GiB).
	CapacityGib string `pulumi:"capacityGib"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Specifies the CMEK policy to be used for volume encryption. Format:
	// 'projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}'. The policy needs to be in the same location as the
	// storage pool.
	KmsConfig *string `pulumi:"kmsConfig"`
	// Labels as key value pairs. Example: '{ "owner": "Bob", "department": "finance", "purpose": "testing" }'. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended
	// group support for NFSv3, using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled *bool `pulumi:"ldapEnabled"`
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location string `pulumi:"location"`
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name                *string `pulumi:"name"`
	NetappStoragePoolId *string `pulumi:"netappStoragePoolId"`
	// VPC network name with format: 'projects/{{project}}/global/networks/{{network}}'
	Network string  `pulumi:"network"`
	Project *string `pulumi:"project"`
	// Specifies the replica zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone *string `pulumi:"replicaZone"`
	// Service level of the storage pool. Possible values: ["PREMIUM", "EXTREME", "STANDARD", "FLEX"]
	ServiceLevel string                     `pulumi:"serviceLevel"`
	Timeouts     *NetappStoragePoolTimeouts `pulumi:"timeouts"`
	// Specifies the active zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for 'location' and omit 'zone'.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a NetappStoragePool resource.
type NetappStoragePoolArgs struct {
	// Specifies the Active Directory policy to be used. Format:
	// 'projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}'. The policy needs to be in the same location as
	// the storage pool.
	ActiveDirectory pulumi.StringPtrInput
	// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false. Auto-tiering can be enabled
	// after storage pool creation but it can't be disabled once enabled.
	AllowAutoTiering pulumi.BoolPtrInput
	// Capacity of the storage pool (in GiB).
	CapacityGib pulumi.StringInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Specifies the CMEK policy to be used for volume encryption. Format:
	// 'projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}'. The policy needs to be in the same location as the
	// storage pool.
	KmsConfig pulumi.StringPtrInput
	// Labels as key value pairs. Example: '{ "owner": "Bob", "department": "finance", "purpose": "testing" }'. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended
	// group support for NFSv3, using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
	LdapEnabled pulumi.BoolPtrInput
	// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
	Location pulumi.StringInput
	// The resource name of the storage pool. Needs to be unique per location/region.
	Name                pulumi.StringPtrInput
	NetappStoragePoolId pulumi.StringPtrInput
	// VPC network name with format: 'projects/{{project}}/global/networks/{{network}}'
	Network pulumi.StringInput
	Project pulumi.StringPtrInput
	// Specifies the replica zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	ReplicaZone pulumi.StringPtrInput
	// Service level of the storage pool. Possible values: ["PREMIUM", "EXTREME", "STANDARD", "FLEX"]
	ServiceLevel pulumi.StringInput
	Timeouts     NetappStoragePoolTimeoutsPtrInput
	// Specifies the active zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
	// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
	// If you want to create a zonal Flex pool, specify a zone name for 'location' and omit 'zone'.
	Zone pulumi.StringPtrInput
}

func (NetappStoragePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*netappStoragePoolArgs)(nil)).Elem()
}

type NetappStoragePoolInput interface {
	pulumi.Input

	ToNetappStoragePoolOutput() NetappStoragePoolOutput
	ToNetappStoragePoolOutputWithContext(ctx context.Context) NetappStoragePoolOutput
}

func (*NetappStoragePool) ElementType() reflect.Type {
	return reflect.TypeOf((**NetappStoragePool)(nil)).Elem()
}

func (i *NetappStoragePool) ToNetappStoragePoolOutput() NetappStoragePoolOutput {
	return i.ToNetappStoragePoolOutputWithContext(context.Background())
}

func (i *NetappStoragePool) ToNetappStoragePoolOutputWithContext(ctx context.Context) NetappStoragePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetappStoragePoolOutput)
}

type NetappStoragePoolOutput struct{ *pulumi.OutputState }

func (NetappStoragePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetappStoragePool)(nil)).Elem()
}

func (o NetappStoragePoolOutput) ToNetappStoragePoolOutput() NetappStoragePoolOutput {
	return o
}

func (o NetappStoragePoolOutput) ToNetappStoragePoolOutputWithContext(ctx context.Context) NetappStoragePoolOutput {
	return o
}

// Specifies the Active Directory policy to be used. Format:
// 'projects/{{project}}/locations/{{location}}/activeDirectories/{{name}}'. The policy needs to be in the same location as
// the storage pool.
func (o NetappStoragePoolOutput) ActiveDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringPtrOutput { return v.ActiveDirectory }).(pulumi.StringPtrOutput)
}

// Optional. True if the storage pool supports Auto Tiering enabled volumes. Default is false. Auto-tiering can be enabled
// after storage pool creation but it can't be disabled once enabled.
func (o NetappStoragePoolOutput) AllowAutoTiering() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.BoolPtrOutput { return v.AllowAutoTiering }).(pulumi.BoolPtrOutput)
}

// Capacity of the storage pool (in GiB).
func (o NetappStoragePoolOutput) CapacityGib() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.CapacityGib }).(pulumi.StringOutput)
}

// An optional description of this resource.
func (o NetappStoragePoolOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetappStoragePoolOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Reports if volumes in the pool are encrypted using a Google-managed encryption key or CMEK.
func (o NetappStoragePoolOutput) EncryptionType() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.EncryptionType }).(pulumi.StringOutput)
}

// Specifies the CMEK policy to be used for volume encryption. Format:
// 'projects/{{project}}/locations/{{location}}/kmsConfigs/{{name}}'. The policy needs to be in the same location as the
// storage pool.
func (o NetappStoragePoolOutput) KmsConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringPtrOutput { return v.KmsConfig }).(pulumi.StringPtrOutput)
}

// Labels as key value pairs. Example: '{ "owner": "Bob", "department": "finance", "purpose": "testing" }'. **Note**: This
// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o NetappStoragePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// When enabled, the volumes uses Active Directory as LDAP name service for UID/GID lookups. Required to enable extended
// group support for NFSv3, using security identifiers for NFSv4.1 or principal names for kerberized NFSv4.1.
func (o NetappStoragePoolOutput) LdapEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.BoolPtrOutput { return v.LdapEnabled }).(pulumi.BoolPtrOutput)
}

// Name of the location. For zonal Flex pools specify a zone name, in all other cases a region name.
func (o NetappStoragePoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the storage pool. Needs to be unique per location/region.
func (o NetappStoragePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetappStoragePoolOutput) NetappStoragePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.NetappStoragePoolId }).(pulumi.StringOutput)
}

// VPC network name with format: 'projects/{{project}}/global/networks/{{network}}'
func (o NetappStoragePoolOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o NetappStoragePoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Specifies the replica zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
func (o NetappStoragePoolOutput) ReplicaZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringPtrOutput { return v.ReplicaZone }).(pulumi.StringPtrOutput)
}

// Service level of the storage pool. Possible values: ["PREMIUM", "EXTREME", "STANDARD", "FLEX"]
func (o NetappStoragePoolOutput) ServiceLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.ServiceLevel }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetappStoragePoolOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetappStoragePoolOutput) Timeouts() NetappStoragePoolTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetappStoragePool) NetappStoragePoolTimeoutsPtrOutput { return v.Timeouts }).(NetappStoragePoolTimeoutsPtrOutput)
}

// Size allocated to volumes in the storage pool (in GiB).
func (o NetappStoragePoolOutput) VolumeCapacityGib() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.VolumeCapacityGib }).(pulumi.StringOutput)
}

// Number of volume in the storage pool.
func (o NetappStoragePoolOutput) VolumeCount() pulumi.Float64Output {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.Float64Output { return v.VolumeCount }).(pulumi.Float64Output)
}

// Specifies the active zone for regional Flex pools. 'zone' and 'replica_zone' values can be swapped to initiate a [zone
// switch](https://cloud.google.com/netapp/volumes/docs/configure-and-use/storage-pools/edit-or-delete-storage-pool#switch_active_and_replica_zones).
// If you want to create a zonal Flex pool, specify a zone name for 'location' and omit 'zone'.
func (o NetappStoragePoolOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *NetappStoragePool) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetappStoragePoolInput)(nil)).Elem(), &NetappStoragePool{})
	pulumi.RegisterOutputType(NetappStoragePoolOutput{})
}
