// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SccV2ProjectSccBigQueryExport struct {
	pulumi.CustomResourceState

	// This must be unique within the organization.
	BigQueryExportId pulumi.StringOutput `pulumi:"bigQueryExportId"`
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on
	// export on creation. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
	// digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The dataset to write findings' updates to. Its format is "projects/[projectId]/datasets/[bigquery_dataset_id]". BigQuery
	// Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrOutput `pulumi:"dataset"`
	// The description of the notification config (max of 1024 characters).
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or
	// more restrictions combined via logical operators AND and OR. Parentheses are supported, and OR has higher precedence
	// than AND. Restrictions have the form <field> <operator> <value> and may have a - character in front of them to indicate
	// negation. The fields map to those defined in the corresponding resource. The supported operators are: * = for all value
	// types. * >, <, >=, <= for integer values. * :, meaning substring matching, for strings. The supported value types are: *
	// string literals in quotes. * integer literals without quotes. * boolean literals true and false without quotes. See
	// [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications) for
	// information on how to write a filter.
	Filter pulumi.StringPtrOutput `pulumi:"filter"`
	// location Id is provided by organization. If not provided, Use global as default.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Email address of the user who last edited the BigQuery export. This field is set by the server and will be ignored if
	// provided on export creation or update.
	MostRecentEditor pulumi.StringOutput `pulumi:"mostRecentEditor"`
	// The resource name of this export, in the format
	// 'projects/{{project}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}'. This field is provided in
	// responses, and is ignored when provided in create requests.
	Name pulumi.StringOutput `pulumi:"name"`
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal                       pulumi.StringOutput                            `pulumi:"principal"`
	Project                         pulumi.StringOutput                            `pulumi:"project"`
	SccV2ProjectSccBigQueryExportId pulumi.StringOutput                            `pulumi:"sccV2ProjectSccBigQueryExportId"`
	Timeouts                        SccV2ProjectSccBigQueryExportTimeoutsPtrOutput `pulumi:"timeouts"`
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if
	// provided on export creation or update. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewSccV2ProjectSccBigQueryExport registers a new resource with the given unique name, arguments, and options.
func NewSccV2ProjectSccBigQueryExport(ctx *pulumi.Context,
	name string, args *SccV2ProjectSccBigQueryExportArgs, opts ...pulumi.ResourceOption) (*SccV2ProjectSccBigQueryExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BigQueryExportId == nil {
		return nil, errors.New("invalid value for required argument 'BigQueryExportId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SccV2ProjectSccBigQueryExport
	err = ctx.RegisterPackageResource("google:index/sccV2ProjectSccBigQueryExport:SccV2ProjectSccBigQueryExport", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSccV2ProjectSccBigQueryExport gets an existing SccV2ProjectSccBigQueryExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSccV2ProjectSccBigQueryExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SccV2ProjectSccBigQueryExportState, opts ...pulumi.ResourceOption) (*SccV2ProjectSccBigQueryExport, error) {
	var resource SccV2ProjectSccBigQueryExport
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/sccV2ProjectSccBigQueryExport:SccV2ProjectSccBigQueryExport", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SccV2ProjectSccBigQueryExport resources.
type sccV2ProjectSccBigQueryExportState struct {
	// This must be unique within the organization.
	BigQueryExportId *string `pulumi:"bigQueryExportId"`
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on
	// export on creation. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
	// digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// The dataset to write findings' updates to. Its format is "projects/[projectId]/datasets/[bigquery_dataset_id]". BigQuery
	// Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset *string `pulumi:"dataset"`
	// The description of the notification config (max of 1024 characters).
	Description *string `pulumi:"description"`
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or
	// more restrictions combined via logical operators AND and OR. Parentheses are supported, and OR has higher precedence
	// than AND. Restrictions have the form <field> <operator> <value> and may have a - character in front of them to indicate
	// negation. The fields map to those defined in the corresponding resource. The supported operators are: * = for all value
	// types. * >, <, >=, <= for integer values. * :, meaning substring matching, for strings. The supported value types are: *
	// string literals in quotes. * integer literals without quotes. * boolean literals true and false without quotes. See
	// [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications) for
	// information on how to write a filter.
	Filter *string `pulumi:"filter"`
	// location Id is provided by organization. If not provided, Use global as default.
	Location *string `pulumi:"location"`
	// Email address of the user who last edited the BigQuery export. This field is set by the server and will be ignored if
	// provided on export creation or update.
	MostRecentEditor *string `pulumi:"mostRecentEditor"`
	// The resource name of this export, in the format
	// 'projects/{{project}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}'. This field is provided in
	// responses, and is ignored when provided in create requests.
	Name *string `pulumi:"name"`
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal                       *string                                `pulumi:"principal"`
	Project                         *string                                `pulumi:"project"`
	SccV2ProjectSccBigQueryExportId *string                                `pulumi:"sccV2ProjectSccBigQueryExportId"`
	Timeouts                        *SccV2ProjectSccBigQueryExportTimeouts `pulumi:"timeouts"`
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if
	// provided on export creation or update. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
}

type SccV2ProjectSccBigQueryExportState struct {
	// This must be unique within the organization.
	BigQueryExportId pulumi.StringPtrInput
	// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on
	// export on creation. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
	// digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// The dataset to write findings' updates to. Its format is "projects/[projectId]/datasets/[bigquery_dataset_id]". BigQuery
	// Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrInput
	// The description of the notification config (max of 1024 characters).
	Description pulumi.StringPtrInput
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or
	// more restrictions combined via logical operators AND and OR. Parentheses are supported, and OR has higher precedence
	// than AND. Restrictions have the form <field> <operator> <value> and may have a - character in front of them to indicate
	// negation. The fields map to those defined in the corresponding resource. The supported operators are: * = for all value
	// types. * >, <, >=, <= for integer values. * :, meaning substring matching, for strings. The supported value types are: *
	// string literals in quotes. * integer literals without quotes. * boolean literals true and false without quotes. See
	// [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications) for
	// information on how to write a filter.
	Filter pulumi.StringPtrInput
	// location Id is provided by organization. If not provided, Use global as default.
	Location pulumi.StringPtrInput
	// Email address of the user who last edited the BigQuery export. This field is set by the server and will be ignored if
	// provided on export creation or update.
	MostRecentEditor pulumi.StringPtrInput
	// The resource name of this export, in the format
	// 'projects/{{project}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}'. This field is provided in
	// responses, and is ignored when provided in create requests.
	Name pulumi.StringPtrInput
	// The service account that needs permission to create table and upload data to the BigQuery dataset.
	Principal                       pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	SccV2ProjectSccBigQueryExportId pulumi.StringPtrInput
	Timeouts                        SccV2ProjectSccBigQueryExportTimeoutsPtrInput
	// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if
	// provided on export creation or update. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
}

func (SccV2ProjectSccBigQueryExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*sccV2ProjectSccBigQueryExportState)(nil)).Elem()
}

type sccV2ProjectSccBigQueryExportArgs struct {
	// This must be unique within the organization.
	BigQueryExportId string `pulumi:"bigQueryExportId"`
	// The dataset to write findings' updates to. Its format is "projects/[projectId]/datasets/[bigquery_dataset_id]". BigQuery
	// Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset *string `pulumi:"dataset"`
	// The description of the notification config (max of 1024 characters).
	Description *string `pulumi:"description"`
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or
	// more restrictions combined via logical operators AND and OR. Parentheses are supported, and OR has higher precedence
	// than AND. Restrictions have the form <field> <operator> <value> and may have a - character in front of them to indicate
	// negation. The fields map to those defined in the corresponding resource. The supported operators are: * = for all value
	// types. * >, <, >=, <= for integer values. * :, meaning substring matching, for strings. The supported value types are: *
	// string literals in quotes. * integer literals without quotes. * boolean literals true and false without quotes. See
	// [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications) for
	// information on how to write a filter.
	Filter *string `pulumi:"filter"`
	// location Id is provided by organization. If not provided, Use global as default.
	Location                        *string                                `pulumi:"location"`
	Project                         *string                                `pulumi:"project"`
	SccV2ProjectSccBigQueryExportId *string                                `pulumi:"sccV2ProjectSccBigQueryExportId"`
	Timeouts                        *SccV2ProjectSccBigQueryExportTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SccV2ProjectSccBigQueryExport resource.
type SccV2ProjectSccBigQueryExportArgs struct {
	// This must be unique within the organization.
	BigQueryExportId pulumi.StringInput
	// The dataset to write findings' updates to. Its format is "projects/[projectId]/datasets/[bigquery_dataset_id]". BigQuery
	// Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
	Dataset pulumi.StringPtrInput
	// The description of the notification config (max of 1024 characters).
	Description pulumi.StringPtrInput
	// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or
	// more restrictions combined via logical operators AND and OR. Parentheses are supported, and OR has higher precedence
	// than AND. Restrictions have the form <field> <operator> <value> and may have a - character in front of them to indicate
	// negation. The fields map to those defined in the corresponding resource. The supported operators are: * = for all value
	// types. * >, <, >=, <= for integer values. * :, meaning substring matching, for strings. The supported value types are: *
	// string literals in quotes. * integer literals without quotes. * boolean literals true and false without quotes. See
	// [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications) for
	// information on how to write a filter.
	Filter pulumi.StringPtrInput
	// location Id is provided by organization. If not provided, Use global as default.
	Location                        pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	SccV2ProjectSccBigQueryExportId pulumi.StringPtrInput
	Timeouts                        SccV2ProjectSccBigQueryExportTimeoutsPtrInput
}

func (SccV2ProjectSccBigQueryExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sccV2ProjectSccBigQueryExportArgs)(nil)).Elem()
}

type SccV2ProjectSccBigQueryExportInput interface {
	pulumi.Input

	ToSccV2ProjectSccBigQueryExportOutput() SccV2ProjectSccBigQueryExportOutput
	ToSccV2ProjectSccBigQueryExportOutputWithContext(ctx context.Context) SccV2ProjectSccBigQueryExportOutput
}

func (*SccV2ProjectSccBigQueryExport) ElementType() reflect.Type {
	return reflect.TypeOf((**SccV2ProjectSccBigQueryExport)(nil)).Elem()
}

func (i *SccV2ProjectSccBigQueryExport) ToSccV2ProjectSccBigQueryExportOutput() SccV2ProjectSccBigQueryExportOutput {
	return i.ToSccV2ProjectSccBigQueryExportOutputWithContext(context.Background())
}

func (i *SccV2ProjectSccBigQueryExport) ToSccV2ProjectSccBigQueryExportOutputWithContext(ctx context.Context) SccV2ProjectSccBigQueryExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SccV2ProjectSccBigQueryExportOutput)
}

type SccV2ProjectSccBigQueryExportOutput struct{ *pulumi.OutputState }

func (SccV2ProjectSccBigQueryExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SccV2ProjectSccBigQueryExport)(nil)).Elem()
}

func (o SccV2ProjectSccBigQueryExportOutput) ToSccV2ProjectSccBigQueryExportOutput() SccV2ProjectSccBigQueryExportOutput {
	return o
}

func (o SccV2ProjectSccBigQueryExportOutput) ToSccV2ProjectSccBigQueryExportOutputWithContext(ctx context.Context) SccV2ProjectSccBigQueryExportOutput {
	return o
}

// This must be unique within the organization.
func (o SccV2ProjectSccBigQueryExportOutput) BigQueryExportId() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringOutput { return v.BigQueryExportId }).(pulumi.StringOutput)
}

// The time at which the BigQuery export was created. This field is set by the server and will be ignored if provided on
// export on creation. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
// digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o SccV2ProjectSccBigQueryExportOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The dataset to write findings' updates to. Its format is "projects/[projectId]/datasets/[bigquery_dataset_id]". BigQuery
// Dataset unique ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_).
func (o SccV2ProjectSccBigQueryExportOutput) Dataset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringPtrOutput { return v.Dataset }).(pulumi.StringPtrOutput)
}

// The description of the notification config (max of 1024 characters).
func (o SccV2ProjectSccBigQueryExportOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Expression that defines the filter to apply across create/update events of findings. The expression is a list of zero or
// more restrictions combined via logical operators AND and OR. Parentheses are supported, and OR has higher precedence
// than AND. Restrictions have the form <field> <operator> <value> and may have a - character in front of them to indicate
// negation. The fields map to those defined in the corresponding resource. The supported operators are: * = for all value
// types. * >, <, >=, <= for integer values. * :, meaning substring matching, for strings. The supported value types are: *
// string literals in quotes. * integer literals without quotes. * boolean literals true and false without quotes. See
// [Filtering notifications](https://cloud.google.com/security-command-center/docs/how-to-api-filter-notifications) for
// information on how to write a filter.
func (o SccV2ProjectSccBigQueryExportOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringPtrOutput { return v.Filter }).(pulumi.StringPtrOutput)
}

// location Id is provided by organization. If not provided, Use global as default.
func (o SccV2ProjectSccBigQueryExportOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Email address of the user who last edited the BigQuery export. This field is set by the server and will be ignored if
// provided on export creation or update.
func (o SccV2ProjectSccBigQueryExportOutput) MostRecentEditor() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringOutput { return v.MostRecentEditor }).(pulumi.StringOutput)
}

// The resource name of this export, in the format
// 'projects/{{project}}/locations/{{location}}/bigQueryExports/{{big_query_export_id}}'. This field is provided in
// responses, and is ignored when provided in create requests.
func (o SccV2ProjectSccBigQueryExportOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The service account that needs permission to create table and upload data to the BigQuery dataset.
func (o SccV2ProjectSccBigQueryExportOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringOutput { return v.Principal }).(pulumi.StringOutput)
}

func (o SccV2ProjectSccBigQueryExportOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o SccV2ProjectSccBigQueryExportOutput) SccV2ProjectSccBigQueryExportId() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringOutput { return v.SccV2ProjectSccBigQueryExportId }).(pulumi.StringOutput)
}

func (o SccV2ProjectSccBigQueryExportOutput) Timeouts() SccV2ProjectSccBigQueryExportTimeoutsPtrOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) SccV2ProjectSccBigQueryExportTimeoutsPtrOutput {
		return v.Timeouts
	}).(SccV2ProjectSccBigQueryExportTimeoutsPtrOutput)
}

// The most recent time at which the BigQuery export was updated. This field is set by the server and will be ignored if
// provided on export creation or update. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
// nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o SccV2ProjectSccBigQueryExportOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2ProjectSccBigQueryExport) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SccV2ProjectSccBigQueryExportInput)(nil)).Elem(), &SccV2ProjectSccBigQueryExport{})
	pulumi.RegisterOutputType(SccV2ProjectSccBigQueryExportOutput{})
}
