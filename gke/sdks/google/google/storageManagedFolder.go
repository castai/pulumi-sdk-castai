// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StorageManagedFolder struct {
	pulumi.CustomResourceState

	// The name of the bucket that contains the managed folder.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// The timestamp at which this managed folder was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Allows the deletion of a managed folder even if contains objects. If a non-empty managed folder is deleted, any objects
	// within the folder will remain in a simulated folder with the same name.
	ForceDestroy pulumi.BoolPtrOutput `pulumi:"forceDestroy"`
	// The metadata generation of the managed folder.
	Metageneration pulumi.StringOutput `pulumi:"metageneration"`
	// The name of the managed folder expressed as a path. Must include trailing '/'. For example, 'example_dir/example_dir2/'.
	Name                   pulumi.StringOutput                   `pulumi:"name"`
	SelfLink               pulumi.StringOutput                   `pulumi:"selfLink"`
	StorageManagedFolderId pulumi.StringOutput                   `pulumi:"storageManagedFolderId"`
	Timeouts               StorageManagedFolderTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp at which this managed folder was most recently updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewStorageManagedFolder registers a new resource with the given unique name, arguments, and options.
func NewStorageManagedFolder(ctx *pulumi.Context,
	name string, args *StorageManagedFolderArgs, opts ...pulumi.ResourceOption) (*StorageManagedFolder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource StorageManagedFolder
	err = ctx.RegisterPackageResource("google:index/storageManagedFolder:StorageManagedFolder", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageManagedFolder gets an existing StorageManagedFolder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageManagedFolder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageManagedFolderState, opts ...pulumi.ResourceOption) (*StorageManagedFolder, error) {
	var resource StorageManagedFolder
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/storageManagedFolder:StorageManagedFolder", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageManagedFolder resources.
type storageManagedFolderState struct {
	// The name of the bucket that contains the managed folder.
	Bucket *string `pulumi:"bucket"`
	// The timestamp at which this managed folder was created.
	CreateTime *string `pulumi:"createTime"`
	// Allows the deletion of a managed folder even if contains objects. If a non-empty managed folder is deleted, any objects
	// within the folder will remain in a simulated folder with the same name.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// The metadata generation of the managed folder.
	Metageneration *string `pulumi:"metageneration"`
	// The name of the managed folder expressed as a path. Must include trailing '/'. For example, 'example_dir/example_dir2/'.
	Name                   *string                       `pulumi:"name"`
	SelfLink               *string                       `pulumi:"selfLink"`
	StorageManagedFolderId *string                       `pulumi:"storageManagedFolderId"`
	Timeouts               *StorageManagedFolderTimeouts `pulumi:"timeouts"`
	// The timestamp at which this managed folder was most recently updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type StorageManagedFolderState struct {
	// The name of the bucket that contains the managed folder.
	Bucket pulumi.StringPtrInput
	// The timestamp at which this managed folder was created.
	CreateTime pulumi.StringPtrInput
	// Allows the deletion of a managed folder even if contains objects. If a non-empty managed folder is deleted, any objects
	// within the folder will remain in a simulated folder with the same name.
	ForceDestroy pulumi.BoolPtrInput
	// The metadata generation of the managed folder.
	Metageneration pulumi.StringPtrInput
	// The name of the managed folder expressed as a path. Must include trailing '/'. For example, 'example_dir/example_dir2/'.
	Name                   pulumi.StringPtrInput
	SelfLink               pulumi.StringPtrInput
	StorageManagedFolderId pulumi.StringPtrInput
	Timeouts               StorageManagedFolderTimeoutsPtrInput
	// The timestamp at which this managed folder was most recently updated.
	UpdateTime pulumi.StringPtrInput
}

func (StorageManagedFolderState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageManagedFolderState)(nil)).Elem()
}

type storageManagedFolderArgs struct {
	// The name of the bucket that contains the managed folder.
	Bucket string `pulumi:"bucket"`
	// Allows the deletion of a managed folder even if contains objects. If a non-empty managed folder is deleted, any objects
	// within the folder will remain in a simulated folder with the same name.
	ForceDestroy *bool `pulumi:"forceDestroy"`
	// The name of the managed folder expressed as a path. Must include trailing '/'. For example, 'example_dir/example_dir2/'.
	Name                   *string                       `pulumi:"name"`
	StorageManagedFolderId *string                       `pulumi:"storageManagedFolderId"`
	Timeouts               *StorageManagedFolderTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a StorageManagedFolder resource.
type StorageManagedFolderArgs struct {
	// The name of the bucket that contains the managed folder.
	Bucket pulumi.StringInput
	// Allows the deletion of a managed folder even if contains objects. If a non-empty managed folder is deleted, any objects
	// within the folder will remain in a simulated folder with the same name.
	ForceDestroy pulumi.BoolPtrInput
	// The name of the managed folder expressed as a path. Must include trailing '/'. For example, 'example_dir/example_dir2/'.
	Name                   pulumi.StringPtrInput
	StorageManagedFolderId pulumi.StringPtrInput
	Timeouts               StorageManagedFolderTimeoutsPtrInput
}

func (StorageManagedFolderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageManagedFolderArgs)(nil)).Elem()
}

type StorageManagedFolderInput interface {
	pulumi.Input

	ToStorageManagedFolderOutput() StorageManagedFolderOutput
	ToStorageManagedFolderOutputWithContext(ctx context.Context) StorageManagedFolderOutput
}

func (*StorageManagedFolder) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageManagedFolder)(nil)).Elem()
}

func (i *StorageManagedFolder) ToStorageManagedFolderOutput() StorageManagedFolderOutput {
	return i.ToStorageManagedFolderOutputWithContext(context.Background())
}

func (i *StorageManagedFolder) ToStorageManagedFolderOutputWithContext(ctx context.Context) StorageManagedFolderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageManagedFolderOutput)
}

type StorageManagedFolderOutput struct{ *pulumi.OutputState }

func (StorageManagedFolderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageManagedFolder)(nil)).Elem()
}

func (o StorageManagedFolderOutput) ToStorageManagedFolderOutput() StorageManagedFolderOutput {
	return o
}

func (o StorageManagedFolderOutput) ToStorageManagedFolderOutputWithContext(ctx context.Context) StorageManagedFolderOutput {
	return o
}

// The name of the bucket that contains the managed folder.
func (o StorageManagedFolderOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageManagedFolder) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// The timestamp at which this managed folder was created.
func (o StorageManagedFolderOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageManagedFolder) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Allows the deletion of a managed folder even if contains objects. If a non-empty managed folder is deleted, any objects
// within the folder will remain in a simulated folder with the same name.
func (o StorageManagedFolderOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StorageManagedFolder) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

// The metadata generation of the managed folder.
func (o StorageManagedFolderOutput) Metageneration() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageManagedFolder) pulumi.StringOutput { return v.Metageneration }).(pulumi.StringOutput)
}

// The name of the managed folder expressed as a path. Must include trailing '/'. For example, 'example_dir/example_dir2/'.
func (o StorageManagedFolderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageManagedFolder) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o StorageManagedFolderOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageManagedFolder) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

func (o StorageManagedFolderOutput) StorageManagedFolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageManagedFolder) pulumi.StringOutput { return v.StorageManagedFolderId }).(pulumi.StringOutput)
}

func (o StorageManagedFolderOutput) Timeouts() StorageManagedFolderTimeoutsPtrOutput {
	return o.ApplyT(func(v *StorageManagedFolder) StorageManagedFolderTimeoutsPtrOutput { return v.Timeouts }).(StorageManagedFolderTimeoutsPtrOutput)
}

// The timestamp at which this managed folder was most recently updated.
func (o StorageManagedFolderOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageManagedFolder) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageManagedFolderInput)(nil)).Elem(), &StorageManagedFolder{})
	pulumi.RegisterOutputType(StorageManagedFolderOutput{})
}
