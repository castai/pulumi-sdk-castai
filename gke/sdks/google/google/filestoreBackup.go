// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FilestoreBackup struct {
	pulumi.CustomResourceState

	// The amount of bytes needed to allocate a full copy of the snapshot content.
	CapacityGb pulumi.StringOutput `pulumi:"capacityGb"`
	// The time when the snapshot was created in RFC3339 text format.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Amount of bytes that will be downloaded if the backup is restored.
	DownloadBytes     pulumi.StringOutput    `pulumi:"downloadBytes"`
	EffectiveLabels   pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	FilestoreBackupId pulumi.StringOutput    `pulumi:"filestoreBackupId"`
	// KMS key name used for data encryption.
	KmsKeyName pulumi.StringOutput `pulumi:"kmsKeyName"`
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the backup. The name must be unique within the specified instance. The name must be 1-63 characters
	// long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Name of the file share in the source Cloud Filestore instance that the backup is created from.
	SourceFileShare pulumi.StringOutput `pulumi:"sourceFileShare"`
	// The resource name of the source Cloud Filestore instance, in the format
	// projects/{projectId}/locations/{locationId}/instances/{instanceId}, used to create this backup.
	SourceInstance pulumi.StringOutput `pulumi:"sourceInstance"`
	// The service tier of the source Cloud Filestore instance that this backup is created from.
	SourceInstanceTier pulumi.StringOutput `pulumi:"sourceInstanceTier"`
	// The backup state.
	State pulumi.StringOutput `pulumi:"state"`
	// The size of the storage used by the backup. As backups share storage, this number is expected to change with backup
	// creation/deletion.
	StorageBytes pulumi.StringOutput `pulumi:"storageBytes"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/{tag_value_id}. The field is
	// ignored (both PUT & PATCH) when empty.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput           `pulumi:"terraformLabels"`
	Timeouts        FilestoreBackupTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewFilestoreBackup registers a new resource with the given unique name, arguments, and options.
func NewFilestoreBackup(ctx *pulumi.Context,
	name string, args *FilestoreBackupArgs, opts ...pulumi.ResourceOption) (*FilestoreBackup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.SourceFileShare == nil {
		return nil, errors.New("invalid value for required argument 'SourceFileShare'")
	}
	if args.SourceInstance == nil {
		return nil, errors.New("invalid value for required argument 'SourceInstance'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource FilestoreBackup
	err = ctx.RegisterPackageResource("google:index/filestoreBackup:FilestoreBackup", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFilestoreBackup gets an existing FilestoreBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFilestoreBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FilestoreBackupState, opts ...pulumi.ResourceOption) (*FilestoreBackup, error) {
	var resource FilestoreBackup
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/filestoreBackup:FilestoreBackup", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FilestoreBackup resources.
type filestoreBackupState struct {
	// The amount of bytes needed to allocate a full copy of the snapshot content.
	CapacityGb *string `pulumi:"capacityGb"`
	// The time when the snapshot was created in RFC3339 text format.
	CreateTime *string `pulumi:"createTime"`
	// A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description *string `pulumi:"description"`
	// Amount of bytes that will be downloaded if the backup is restored.
	DownloadBytes     *string           `pulumi:"downloadBytes"`
	EffectiveLabels   map[string]string `pulumi:"effectiveLabels"`
	FilestoreBackupId *string           `pulumi:"filestoreBackupId"`
	// KMS key name used for data encryption.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location *string `pulumi:"location"`
	// The resource name of the backup. The name must be unique within the specified instance. The name must be 1-63 characters
	// long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Name of the file share in the source Cloud Filestore instance that the backup is created from.
	SourceFileShare *string `pulumi:"sourceFileShare"`
	// The resource name of the source Cloud Filestore instance, in the format
	// projects/{projectId}/locations/{locationId}/instances/{instanceId}, used to create this backup.
	SourceInstance *string `pulumi:"sourceInstance"`
	// The service tier of the source Cloud Filestore instance that this backup is created from.
	SourceInstanceTier *string `pulumi:"sourceInstanceTier"`
	// The backup state.
	State *string `pulumi:"state"`
	// The size of the storage used by the backup. As backups share storage, this number is expected to change with backup
	// creation/deletion.
	StorageBytes *string `pulumi:"storageBytes"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/{tag_value_id}. The field is
	// ignored (both PUT & PATCH) when empty.
	Tags map[string]string `pulumi:"tags"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string        `pulumi:"terraformLabels"`
	Timeouts        *FilestoreBackupTimeouts `pulumi:"timeouts"`
}

type FilestoreBackupState struct {
	// The amount of bytes needed to allocate a full copy of the snapshot content.
	CapacityGb pulumi.StringPtrInput
	// The time when the snapshot was created in RFC3339 text format.
	CreateTime pulumi.StringPtrInput
	// A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description pulumi.StringPtrInput
	// Amount of bytes that will be downloaded if the backup is restored.
	DownloadBytes     pulumi.StringPtrInput
	EffectiveLabels   pulumi.StringMapInput
	FilestoreBackupId pulumi.StringPtrInput
	// KMS key name used for data encryption.
	KmsKeyName pulumi.StringPtrInput
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location pulumi.StringPtrInput
	// The resource name of the backup. The name must be unique within the specified instance. The name must be 1-63 characters
	// long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Name of the file share in the source Cloud Filestore instance that the backup is created from.
	SourceFileShare pulumi.StringPtrInput
	// The resource name of the source Cloud Filestore instance, in the format
	// projects/{projectId}/locations/{locationId}/instances/{instanceId}, used to create this backup.
	SourceInstance pulumi.StringPtrInput
	// The service tier of the source Cloud Filestore instance that this backup is created from.
	SourceInstanceTier pulumi.StringPtrInput
	// The backup state.
	State pulumi.StringPtrInput
	// The size of the storage used by the backup. As backups share storage, this number is expected to change with backup
	// creation/deletion.
	StorageBytes pulumi.StringPtrInput
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/{tag_value_id}. The field is
	// ignored (both PUT & PATCH) when empty.
	Tags pulumi.StringMapInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        FilestoreBackupTimeoutsPtrInput
}

func (FilestoreBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*filestoreBackupState)(nil)).Elem()
}

type filestoreBackupArgs struct {
	// A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description       *string `pulumi:"description"`
	FilestoreBackupId *string `pulumi:"filestoreBackupId"`
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location string `pulumi:"location"`
	// The resource name of the backup. The name must be unique within the specified instance. The name must be 1-63 characters
	// long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Name of the file share in the source Cloud Filestore instance that the backup is created from.
	SourceFileShare string `pulumi:"sourceFileShare"`
	// The resource name of the source Cloud Filestore instance, in the format
	// projects/{projectId}/locations/{locationId}/instances/{instanceId}, used to create this backup.
	SourceInstance string `pulumi:"sourceInstance"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/{tag_value_id}. The field is
	// ignored (both PUT & PATCH) when empty.
	Tags     map[string]string        `pulumi:"tags"`
	Timeouts *FilestoreBackupTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a FilestoreBackup resource.
type FilestoreBackupArgs struct {
	// A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description       pulumi.StringPtrInput
	FilestoreBackupId pulumi.StringPtrInput
	// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
	Location pulumi.StringInput
	// The resource name of the backup. The name must be unique within the specified instance. The name must be 1-63 characters
	// long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
	// 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a dash,
	// lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Name of the file share in the source Cloud Filestore instance that the backup is created from.
	SourceFileShare pulumi.StringInput
	// The resource name of the source Cloud Filestore instance, in the format
	// projects/{projectId}/locations/{locationId}/instances/{instanceId}, used to create this backup.
	SourceInstance pulumi.StringInput
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/{tag_value_id}. The field is
	// ignored (both PUT & PATCH) when empty.
	Tags     pulumi.StringMapInput
	Timeouts FilestoreBackupTimeoutsPtrInput
}

func (FilestoreBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*filestoreBackupArgs)(nil)).Elem()
}

type FilestoreBackupInput interface {
	pulumi.Input

	ToFilestoreBackupOutput() FilestoreBackupOutput
	ToFilestoreBackupOutputWithContext(ctx context.Context) FilestoreBackupOutput
}

func (*FilestoreBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**FilestoreBackup)(nil)).Elem()
}

func (i *FilestoreBackup) ToFilestoreBackupOutput() FilestoreBackupOutput {
	return i.ToFilestoreBackupOutputWithContext(context.Background())
}

func (i *FilestoreBackup) ToFilestoreBackupOutputWithContext(ctx context.Context) FilestoreBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilestoreBackupOutput)
}

type FilestoreBackupOutput struct{ *pulumi.OutputState }

func (FilestoreBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilestoreBackup)(nil)).Elem()
}

func (o FilestoreBackupOutput) ToFilestoreBackupOutput() FilestoreBackupOutput {
	return o
}

func (o FilestoreBackupOutput) ToFilestoreBackupOutputWithContext(ctx context.Context) FilestoreBackupOutput {
	return o
}

// The amount of bytes needed to allocate a full copy of the snapshot content.
func (o FilestoreBackupOutput) CapacityGb() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.CapacityGb }).(pulumi.StringOutput)
}

// The time when the snapshot was created in RFC3339 text format.
func (o FilestoreBackupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
func (o FilestoreBackupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Amount of bytes that will be downloaded if the backup is restored.
func (o FilestoreBackupOutput) DownloadBytes() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.DownloadBytes }).(pulumi.StringOutput)
}

func (o FilestoreBackupOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o FilestoreBackupOutput) FilestoreBackupId() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.FilestoreBackupId }).(pulumi.StringOutput)
}

// KMS key name used for data encryption.
func (o FilestoreBackupOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.KmsKeyName }).(pulumi.StringOutput)
}

// Resource labels to represent user-provided metadata. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o FilestoreBackupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
func (o FilestoreBackupOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the backup. The name must be unique within the specified instance. The name must be 1-63 characters
// long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression
// 'a-z?' which means the first character must be a lowercase letter, and all following characters must be a dash,
// lowercase letter, or digit, except the last character, which cannot be a dash.
func (o FilestoreBackupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FilestoreBackupOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Name of the file share in the source Cloud Filestore instance that the backup is created from.
func (o FilestoreBackupOutput) SourceFileShare() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.SourceFileShare }).(pulumi.StringOutput)
}

// The resource name of the source Cloud Filestore instance, in the format
// projects/{projectId}/locations/{locationId}/instances/{instanceId}, used to create this backup.
func (o FilestoreBackupOutput) SourceInstance() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.SourceInstance }).(pulumi.StringOutput)
}

// The service tier of the source Cloud Filestore instance that this backup is created from.
func (o FilestoreBackupOutput) SourceInstanceTier() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.SourceInstanceTier }).(pulumi.StringOutput)
}

// The backup state.
func (o FilestoreBackupOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The size of the storage used by the backup. As backups share storage, this number is expected to change with backup
// creation/deletion.
func (o FilestoreBackupOutput) StorageBytes() pulumi.StringOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringOutput { return v.StorageBytes }).(pulumi.StringOutput)
}

// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/{tag_value_id}. The field is
// ignored (both PUT & PATCH) when empty.
func (o FilestoreBackupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o FilestoreBackupOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FilestoreBackup) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o FilestoreBackupOutput) Timeouts() FilestoreBackupTimeoutsPtrOutput {
	return o.ApplyT(func(v *FilestoreBackup) FilestoreBackupTimeoutsPtrOutput { return v.Timeouts }).(FilestoreBackupTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FilestoreBackupInput)(nil)).Elem(), &FilestoreBackup{})
	pulumi.RegisterOutputType(FilestoreBackupOutput{})
}
