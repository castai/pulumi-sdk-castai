// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryAnalyticsHubListingIamMember struct {
	pulumi.CustomResourceState

	BigqueryAnalyticsHubListingIamMemberId pulumi.StringOutput                                    `pulumi:"bigqueryAnalyticsHubListingIamMemberId"`
	Condition                              BigqueryAnalyticsHubListingIamMemberConditionPtrOutput `pulumi:"condition"`
	DataExchangeId                         pulumi.StringOutput                                    `pulumi:"dataExchangeId"`
	Etag                                   pulumi.StringOutput                                    `pulumi:"etag"`
	ListingId                              pulumi.StringOutput                                    `pulumi:"listingId"`
	Location                               pulumi.StringOutput                                    `pulumi:"location"`
	Member                                 pulumi.StringOutput                                    `pulumi:"member"`
	Project                                pulumi.StringOutput                                    `pulumi:"project"`
	Role                                   pulumi.StringOutput                                    `pulumi:"role"`
}

// NewBigqueryAnalyticsHubListingIamMember registers a new resource with the given unique name, arguments, and options.
func NewBigqueryAnalyticsHubListingIamMember(ctx *pulumi.Context,
	name string, args *BigqueryAnalyticsHubListingIamMemberArgs, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubListingIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataExchangeId == nil {
		return nil, errors.New("invalid value for required argument 'DataExchangeId'")
	}
	if args.ListingId == nil {
		return nil, errors.New("invalid value for required argument 'ListingId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryAnalyticsHubListingIamMember
	err = ctx.RegisterPackageResource("google:index/bigqueryAnalyticsHubListingIamMember:BigqueryAnalyticsHubListingIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryAnalyticsHubListingIamMember gets an existing BigqueryAnalyticsHubListingIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryAnalyticsHubListingIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryAnalyticsHubListingIamMemberState, opts ...pulumi.ResourceOption) (*BigqueryAnalyticsHubListingIamMember, error) {
	var resource BigqueryAnalyticsHubListingIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigqueryAnalyticsHubListingIamMember:BigqueryAnalyticsHubListingIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryAnalyticsHubListingIamMember resources.
type bigqueryAnalyticsHubListingIamMemberState struct {
	BigqueryAnalyticsHubListingIamMemberId *string                                        `pulumi:"bigqueryAnalyticsHubListingIamMemberId"`
	Condition                              *BigqueryAnalyticsHubListingIamMemberCondition `pulumi:"condition"`
	DataExchangeId                         *string                                        `pulumi:"dataExchangeId"`
	Etag                                   *string                                        `pulumi:"etag"`
	ListingId                              *string                                        `pulumi:"listingId"`
	Location                               *string                                        `pulumi:"location"`
	Member                                 *string                                        `pulumi:"member"`
	Project                                *string                                        `pulumi:"project"`
	Role                                   *string                                        `pulumi:"role"`
}

type BigqueryAnalyticsHubListingIamMemberState struct {
	BigqueryAnalyticsHubListingIamMemberId pulumi.StringPtrInput
	Condition                              BigqueryAnalyticsHubListingIamMemberConditionPtrInput
	DataExchangeId                         pulumi.StringPtrInput
	Etag                                   pulumi.StringPtrInput
	ListingId                              pulumi.StringPtrInput
	Location                               pulumi.StringPtrInput
	Member                                 pulumi.StringPtrInput
	Project                                pulumi.StringPtrInput
	Role                                   pulumi.StringPtrInput
}

func (BigqueryAnalyticsHubListingIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubListingIamMemberState)(nil)).Elem()
}

type bigqueryAnalyticsHubListingIamMemberArgs struct {
	BigqueryAnalyticsHubListingIamMemberId *string                                        `pulumi:"bigqueryAnalyticsHubListingIamMemberId"`
	Condition                              *BigqueryAnalyticsHubListingIamMemberCondition `pulumi:"condition"`
	DataExchangeId                         string                                         `pulumi:"dataExchangeId"`
	ListingId                              string                                         `pulumi:"listingId"`
	Location                               *string                                        `pulumi:"location"`
	Member                                 string                                         `pulumi:"member"`
	Project                                *string                                        `pulumi:"project"`
	Role                                   string                                         `pulumi:"role"`
}

// The set of arguments for constructing a BigqueryAnalyticsHubListingIamMember resource.
type BigqueryAnalyticsHubListingIamMemberArgs struct {
	BigqueryAnalyticsHubListingIamMemberId pulumi.StringPtrInput
	Condition                              BigqueryAnalyticsHubListingIamMemberConditionPtrInput
	DataExchangeId                         pulumi.StringInput
	ListingId                              pulumi.StringInput
	Location                               pulumi.StringPtrInput
	Member                                 pulumi.StringInput
	Project                                pulumi.StringPtrInput
	Role                                   pulumi.StringInput
}

func (BigqueryAnalyticsHubListingIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryAnalyticsHubListingIamMemberArgs)(nil)).Elem()
}

type BigqueryAnalyticsHubListingIamMemberInput interface {
	pulumi.Input

	ToBigqueryAnalyticsHubListingIamMemberOutput() BigqueryAnalyticsHubListingIamMemberOutput
	ToBigqueryAnalyticsHubListingIamMemberOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingIamMemberOutput
}

func (*BigqueryAnalyticsHubListingIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubListingIamMember)(nil)).Elem()
}

func (i *BigqueryAnalyticsHubListingIamMember) ToBigqueryAnalyticsHubListingIamMemberOutput() BigqueryAnalyticsHubListingIamMemberOutput {
	return i.ToBigqueryAnalyticsHubListingIamMemberOutputWithContext(context.Background())
}

func (i *BigqueryAnalyticsHubListingIamMember) ToBigqueryAnalyticsHubListingIamMemberOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryAnalyticsHubListingIamMemberOutput)
}

type BigqueryAnalyticsHubListingIamMemberOutput struct{ *pulumi.OutputState }

func (BigqueryAnalyticsHubListingIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryAnalyticsHubListingIamMember)(nil)).Elem()
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) ToBigqueryAnalyticsHubListingIamMemberOutput() BigqueryAnalyticsHubListingIamMemberOutput {
	return o
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) ToBigqueryAnalyticsHubListingIamMemberOutputWithContext(ctx context.Context) BigqueryAnalyticsHubListingIamMemberOutput {
	return o
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) BigqueryAnalyticsHubListingIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamMember) pulumi.StringOutput {
		return v.BigqueryAnalyticsHubListingIamMemberId
	}).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) Condition() BigqueryAnalyticsHubListingIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamMember) BigqueryAnalyticsHubListingIamMemberConditionPtrOutput {
		return v.Condition
	}).(BigqueryAnalyticsHubListingIamMemberConditionPtrOutput)
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) DataExchangeId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamMember) pulumi.StringOutput { return v.DataExchangeId }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) ListingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamMember) pulumi.StringOutput { return v.ListingId }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigqueryAnalyticsHubListingIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryAnalyticsHubListingIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryAnalyticsHubListingIamMemberInput)(nil)).Elem(), &BigqueryAnalyticsHubListingIamMember{})
	pulumi.RegisterOutputType(BigqueryAnalyticsHubListingIamMemberOutput{})
}
