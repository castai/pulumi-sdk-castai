// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeHubMembership struct {
	pulumi.CustomResourceState

	// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for
	// more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
	Authority       GkeHubMembershipAuthorityPtrOutput `pulumi:"authority"`
	EffectiveLabels pulumi.StringMapOutput             `pulumi:"effectiveLabels"`
	// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
	Endpoint           GkeHubMembershipEndpointPtrOutput `pulumi:"endpoint"`
	GkeHubMembershipId pulumi.StringOutput               `pulumi:"gkeHubMembershipId"`
	// Labels to apply to this membership. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Location of the membership. The default value is 'global'.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The client-provided identifier of the membership.
	MembershipId pulumi.StringOutput `pulumi:"membershipId"`
	// The unique identifier of the membership.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput            `pulumi:"terraformLabels"`
	Timeouts        GkeHubMembershipTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewGkeHubMembership registers a new resource with the given unique name, arguments, and options.
func NewGkeHubMembership(ctx *pulumi.Context,
	name string, args *GkeHubMembershipArgs, opts ...pulumi.ResourceOption) (*GkeHubMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MembershipId == nil {
		return nil, errors.New("invalid value for required argument 'MembershipId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeHubMembership
	err = ctx.RegisterPackageResource("google:index/gkeHubMembership:GkeHubMembership", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeHubMembership gets an existing GkeHubMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeHubMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeHubMembershipState, opts ...pulumi.ResourceOption) (*GkeHubMembership, error) {
	var resource GkeHubMembership
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/gkeHubMembership:GkeHubMembership", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeHubMembership resources.
type gkeHubMembershipState struct {
	// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for
	// more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
	Authority       *GkeHubMembershipAuthority `pulumi:"authority"`
	EffectiveLabels map[string]string          `pulumi:"effectiveLabels"`
	// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
	Endpoint           *GkeHubMembershipEndpoint `pulumi:"endpoint"`
	GkeHubMembershipId *string                   `pulumi:"gkeHubMembershipId"`
	// Labels to apply to this membership. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Location of the membership. The default value is 'global'.
	Location *string `pulumi:"location"`
	// The client-provided identifier of the membership.
	MembershipId *string `pulumi:"membershipId"`
	// The unique identifier of the membership.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string         `pulumi:"terraformLabels"`
	Timeouts        *GkeHubMembershipTimeouts `pulumi:"timeouts"`
}

type GkeHubMembershipState struct {
	// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for
	// more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
	Authority       GkeHubMembershipAuthorityPtrInput
	EffectiveLabels pulumi.StringMapInput
	// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
	Endpoint           GkeHubMembershipEndpointPtrInput
	GkeHubMembershipId pulumi.StringPtrInput
	// Labels to apply to this membership. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Location of the membership. The default value is 'global'.
	Location pulumi.StringPtrInput
	// The client-provided identifier of the membership.
	MembershipId pulumi.StringPtrInput
	// The unique identifier of the membership.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        GkeHubMembershipTimeoutsPtrInput
}

func (GkeHubMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubMembershipState)(nil)).Elem()
}

type gkeHubMembershipArgs struct {
	// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for
	// more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
	Authority *GkeHubMembershipAuthority `pulumi:"authority"`
	// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
	Endpoint           *GkeHubMembershipEndpoint `pulumi:"endpoint"`
	GkeHubMembershipId *string                   `pulumi:"gkeHubMembershipId"`
	// Labels to apply to this membership. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Location of the membership. The default value is 'global'.
	Location *string `pulumi:"location"`
	// The client-provided identifier of the membership.
	MembershipId string                    `pulumi:"membershipId"`
	Project      *string                   `pulumi:"project"`
	Timeouts     *GkeHubMembershipTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a GkeHubMembership resource.
type GkeHubMembershipArgs struct {
	// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for
	// more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
	Authority GkeHubMembershipAuthorityPtrInput
	// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
	Endpoint           GkeHubMembershipEndpointPtrInput
	GkeHubMembershipId pulumi.StringPtrInput
	// Labels to apply to this membership. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Location of the membership. The default value is 'global'.
	Location pulumi.StringPtrInput
	// The client-provided identifier of the membership.
	MembershipId pulumi.StringInput
	Project      pulumi.StringPtrInput
	Timeouts     GkeHubMembershipTimeoutsPtrInput
}

func (GkeHubMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubMembershipArgs)(nil)).Elem()
}

type GkeHubMembershipInput interface {
	pulumi.Input

	ToGkeHubMembershipOutput() GkeHubMembershipOutput
	ToGkeHubMembershipOutputWithContext(ctx context.Context) GkeHubMembershipOutput
}

func (*GkeHubMembership) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubMembership)(nil)).Elem()
}

func (i *GkeHubMembership) ToGkeHubMembershipOutput() GkeHubMembershipOutput {
	return i.ToGkeHubMembershipOutputWithContext(context.Background())
}

func (i *GkeHubMembership) ToGkeHubMembershipOutputWithContext(ctx context.Context) GkeHubMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeHubMembershipOutput)
}

type GkeHubMembershipOutput struct{ *pulumi.OutputState }

func (GkeHubMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubMembership)(nil)).Elem()
}

func (o GkeHubMembershipOutput) ToGkeHubMembershipOutput() GkeHubMembershipOutput {
	return o
}

func (o GkeHubMembershipOutput) ToGkeHubMembershipOutputWithContext(ctx context.Context) GkeHubMembershipOutput {
	return o
}

// Authority encodes how Google will recognize identities from this Membership. See the workload identity documentation for
// more details: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
func (o GkeHubMembershipOutput) Authority() GkeHubMembershipAuthorityPtrOutput {
	return o.ApplyT(func(v *GkeHubMembership) GkeHubMembershipAuthorityPtrOutput { return v.Authority }).(GkeHubMembershipAuthorityPtrOutput)
}

func (o GkeHubMembershipOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeHubMembership) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
func (o GkeHubMembershipOutput) Endpoint() GkeHubMembershipEndpointPtrOutput {
	return o.ApplyT(func(v *GkeHubMembership) GkeHubMembershipEndpointPtrOutput { return v.Endpoint }).(GkeHubMembershipEndpointPtrOutput)
}

func (o GkeHubMembershipOutput) GkeHubMembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembership) pulumi.StringOutput { return v.GkeHubMembershipId }).(pulumi.StringOutput)
}

// Labels to apply to this membership. **Note**: This field is non-authoritative, and will only manage the labels present
// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o GkeHubMembershipOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeHubMembership) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Location of the membership. The default value is 'global'.
func (o GkeHubMembershipOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeHubMembership) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The client-provided identifier of the membership.
func (o GkeHubMembershipOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembership) pulumi.StringOutput { return v.MembershipId }).(pulumi.StringOutput)
}

// The unique identifier of the membership.
func (o GkeHubMembershipOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembership) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GkeHubMembershipOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembership) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o GkeHubMembershipOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeHubMembership) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o GkeHubMembershipOutput) Timeouts() GkeHubMembershipTimeoutsPtrOutput {
	return o.ApplyT(func(v *GkeHubMembership) GkeHubMembershipTimeoutsPtrOutput { return v.Timeouts }).(GkeHubMembershipTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeHubMembershipInput)(nil)).Elem(), &GkeHubMembership{})
	pulumi.RegisterOutputType(GkeHubMembershipOutput{})
}
