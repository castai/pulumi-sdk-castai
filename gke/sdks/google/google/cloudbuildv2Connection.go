// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Cloudbuildv2Connection struct {
	pulumi.CustomResourceState

	// Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will only manage
	// the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Configuration for connections to Bitbucket Cloud.
	BitbucketCloudConfig Cloudbuildv2ConnectionBitbucketCloudConfigPtrOutput `pulumi:"bitbucketCloudConfig"`
	// Configuration for connections to Bitbucket Data Center.
	BitbucketDataCenterConfig Cloudbuildv2ConnectionBitbucketDataCenterConfigPtrOutput `pulumi:"bitbucketDataCenterConfig"`
	Cloudbuildv2ConnectionId  pulumi.StringOutput                                      `pulumi:"cloudbuildv2ConnectionId"`
	// Output only. Server assigned timestamp for when the connection was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// If disabled is set to true, functionality is disabled for this connection. Repository based API methods and webhooks
	// processing for repositories in this connection will be disabled.
	Disabled             pulumi.BoolPtrOutput   `pulumi:"disabled"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete
	// requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Configuration for connections to github.com.
	GithubConfig Cloudbuildv2ConnectionGithubConfigPtrOutput `pulumi:"githubConfig"`
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig Cloudbuildv2ConnectionGithubEnterpriseConfigPtrOutput `pulumi:"githubEnterpriseConfig"`
	// Configuration for connections to gitlab.com or an instance of GitLab Enterprise.
	GitlabConfig Cloudbuildv2ConnectionGitlabConfigPtrOutput `pulumi:"gitlabConfig"`
	// Output only. Installation state of the Connection.
	InstallationStates Cloudbuildv2ConnectionInstallationStateArrayOutput `pulumi:"installationStates"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// Immutable. The resource name of the connection.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Output only. Set to true when the connection is being set up or updated in the background.
	Reconciling pulumi.BoolOutput                       `pulumi:"reconciling"`
	Timeouts    Cloudbuildv2ConnectionTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. Server assigned timestamp for when the connection was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCloudbuildv2Connection registers a new resource with the given unique name, arguments, and options.
func NewCloudbuildv2Connection(ctx *pulumi.Context,
	name string, args *Cloudbuildv2ConnectionArgs, opts ...pulumi.ResourceOption) (*Cloudbuildv2Connection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource Cloudbuildv2Connection
	err = ctx.RegisterPackageResource("google:index/cloudbuildv2Connection:Cloudbuildv2Connection", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudbuildv2Connection gets an existing Cloudbuildv2Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudbuildv2Connection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Cloudbuildv2ConnectionState, opts ...pulumi.ResourceOption) (*Cloudbuildv2Connection, error) {
	var resource Cloudbuildv2Connection
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudbuildv2Connection:Cloudbuildv2Connection", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cloudbuildv2Connection resources.
type cloudbuildv2ConnectionState struct {
	// Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will only manage
	// the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Configuration for connections to Bitbucket Cloud.
	BitbucketCloudConfig *Cloudbuildv2ConnectionBitbucketCloudConfig `pulumi:"bitbucketCloudConfig"`
	// Configuration for connections to Bitbucket Data Center.
	BitbucketDataCenterConfig *Cloudbuildv2ConnectionBitbucketDataCenterConfig `pulumi:"bitbucketDataCenterConfig"`
	Cloudbuildv2ConnectionId  *string                                          `pulumi:"cloudbuildv2ConnectionId"`
	// Output only. Server assigned timestamp for when the connection was created.
	CreateTime *string `pulumi:"createTime"`
	// If disabled is set to true, functionality is disabled for this connection. Repository based API methods and webhooks
	// processing for repositories in this connection will be disabled.
	Disabled             *bool             `pulumi:"disabled"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete
	// requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// Configuration for connections to github.com.
	GithubConfig *Cloudbuildv2ConnectionGithubConfig `pulumi:"githubConfig"`
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig *Cloudbuildv2ConnectionGithubEnterpriseConfig `pulumi:"githubEnterpriseConfig"`
	// Configuration for connections to gitlab.com or an instance of GitLab Enterprise.
	GitlabConfig *Cloudbuildv2ConnectionGitlabConfig `pulumi:"gitlabConfig"`
	// Output only. Installation state of the Connection.
	InstallationStates []Cloudbuildv2ConnectionInstallationState `pulumi:"installationStates"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// Immutable. The resource name of the connection.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Output only. Set to true when the connection is being set up or updated in the background.
	Reconciling *bool                           `pulumi:"reconciling"`
	Timeouts    *Cloudbuildv2ConnectionTimeouts `pulumi:"timeouts"`
	// Output only. Server assigned timestamp for when the connection was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type Cloudbuildv2ConnectionState struct {
	// Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will only manage
	// the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Configuration for connections to Bitbucket Cloud.
	BitbucketCloudConfig Cloudbuildv2ConnectionBitbucketCloudConfigPtrInput
	// Configuration for connections to Bitbucket Data Center.
	BitbucketDataCenterConfig Cloudbuildv2ConnectionBitbucketDataCenterConfigPtrInput
	Cloudbuildv2ConnectionId  pulumi.StringPtrInput
	// Output only. Server assigned timestamp for when the connection was created.
	CreateTime pulumi.StringPtrInput
	// If disabled is set to true, functionality is disabled for this connection. Repository based API methods and webhooks
	// processing for repositories in this connection will be disabled.
	Disabled             pulumi.BoolPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete
	// requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// Configuration for connections to github.com.
	GithubConfig Cloudbuildv2ConnectionGithubConfigPtrInput
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig Cloudbuildv2ConnectionGithubEnterpriseConfigPtrInput
	// Configuration for connections to gitlab.com or an instance of GitLab Enterprise.
	GitlabConfig Cloudbuildv2ConnectionGitlabConfigPtrInput
	// Output only. Installation state of the Connection.
	InstallationStates Cloudbuildv2ConnectionInstallationStateArrayInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// Immutable. The resource name of the connection.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Output only. Set to true when the connection is being set up or updated in the background.
	Reconciling pulumi.BoolPtrInput
	Timeouts    Cloudbuildv2ConnectionTimeoutsPtrInput
	// Output only. Server assigned timestamp for when the connection was updated.
	UpdateTime pulumi.StringPtrInput
}

func (Cloudbuildv2ConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudbuildv2ConnectionState)(nil)).Elem()
}

type cloudbuildv2ConnectionArgs struct {
	// Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will only manage
	// the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Configuration for connections to Bitbucket Cloud.
	BitbucketCloudConfig *Cloudbuildv2ConnectionBitbucketCloudConfig `pulumi:"bitbucketCloudConfig"`
	// Configuration for connections to Bitbucket Data Center.
	BitbucketDataCenterConfig *Cloudbuildv2ConnectionBitbucketDataCenterConfig `pulumi:"bitbucketDataCenterConfig"`
	Cloudbuildv2ConnectionId  *string                                          `pulumi:"cloudbuildv2ConnectionId"`
	// If disabled is set to true, functionality is disabled for this connection. Repository based API methods and webhooks
	// processing for repositories in this connection will be disabled.
	Disabled *bool `pulumi:"disabled"`
	// Configuration for connections to github.com.
	GithubConfig *Cloudbuildv2ConnectionGithubConfig `pulumi:"githubConfig"`
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig *Cloudbuildv2ConnectionGithubEnterpriseConfig `pulumi:"githubEnterpriseConfig"`
	// Configuration for connections to gitlab.com or an instance of GitLab Enterprise.
	GitlabConfig *Cloudbuildv2ConnectionGitlabConfig `pulumi:"gitlabConfig"`
	// The location for the resource
	Location string `pulumi:"location"`
	// Immutable. The resource name of the connection.
	Name     *string                         `pulumi:"name"`
	Project  *string                         `pulumi:"project"`
	Timeouts *Cloudbuildv2ConnectionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a Cloudbuildv2Connection resource.
type Cloudbuildv2ConnectionArgs struct {
	// Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will only manage
	// the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
	// annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Configuration for connections to Bitbucket Cloud.
	BitbucketCloudConfig Cloudbuildv2ConnectionBitbucketCloudConfigPtrInput
	// Configuration for connections to Bitbucket Data Center.
	BitbucketDataCenterConfig Cloudbuildv2ConnectionBitbucketDataCenterConfigPtrInput
	Cloudbuildv2ConnectionId  pulumi.StringPtrInput
	// If disabled is set to true, functionality is disabled for this connection. Repository based API methods and webhooks
	// processing for repositories in this connection will be disabled.
	Disabled pulumi.BoolPtrInput
	// Configuration for connections to github.com.
	GithubConfig Cloudbuildv2ConnectionGithubConfigPtrInput
	// Configuration for connections to an instance of GitHub Enterprise.
	GithubEnterpriseConfig Cloudbuildv2ConnectionGithubEnterpriseConfigPtrInput
	// Configuration for connections to gitlab.com or an instance of GitLab Enterprise.
	GitlabConfig Cloudbuildv2ConnectionGitlabConfigPtrInput
	// The location for the resource
	Location pulumi.StringInput
	// Immutable. The resource name of the connection.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts Cloudbuildv2ConnectionTimeoutsPtrInput
}

func (Cloudbuildv2ConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudbuildv2ConnectionArgs)(nil)).Elem()
}

type Cloudbuildv2ConnectionInput interface {
	pulumi.Input

	ToCloudbuildv2ConnectionOutput() Cloudbuildv2ConnectionOutput
	ToCloudbuildv2ConnectionOutputWithContext(ctx context.Context) Cloudbuildv2ConnectionOutput
}

func (*Cloudbuildv2Connection) ElementType() reflect.Type {
	return reflect.TypeOf((**Cloudbuildv2Connection)(nil)).Elem()
}

func (i *Cloudbuildv2Connection) ToCloudbuildv2ConnectionOutput() Cloudbuildv2ConnectionOutput {
	return i.ToCloudbuildv2ConnectionOutputWithContext(context.Background())
}

func (i *Cloudbuildv2Connection) ToCloudbuildv2ConnectionOutputWithContext(ctx context.Context) Cloudbuildv2ConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Cloudbuildv2ConnectionOutput)
}

type Cloudbuildv2ConnectionOutput struct{ *pulumi.OutputState }

func (Cloudbuildv2ConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cloudbuildv2Connection)(nil)).Elem()
}

func (o Cloudbuildv2ConnectionOutput) ToCloudbuildv2ConnectionOutput() Cloudbuildv2ConnectionOutput {
	return o
}

func (o Cloudbuildv2ConnectionOutput) ToCloudbuildv2ConnectionOutputWithContext(ctx context.Context) Cloudbuildv2ConnectionOutput {
	return o
}

// Allows clients to store small amounts of arbitrary data. **Note**: This field is non-authoritative, and will only manage
// the annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the
// annotations present on the resource.
func (o Cloudbuildv2ConnectionOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Configuration for connections to Bitbucket Cloud.
func (o Cloudbuildv2ConnectionOutput) BitbucketCloudConfig() Cloudbuildv2ConnectionBitbucketCloudConfigPtrOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) Cloudbuildv2ConnectionBitbucketCloudConfigPtrOutput {
		return v.BitbucketCloudConfig
	}).(Cloudbuildv2ConnectionBitbucketCloudConfigPtrOutput)
}

// Configuration for connections to Bitbucket Data Center.
func (o Cloudbuildv2ConnectionOutput) BitbucketDataCenterConfig() Cloudbuildv2ConnectionBitbucketDataCenterConfigPtrOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) Cloudbuildv2ConnectionBitbucketDataCenterConfigPtrOutput {
		return v.BitbucketDataCenterConfig
	}).(Cloudbuildv2ConnectionBitbucketDataCenterConfigPtrOutput)
}

func (o Cloudbuildv2ConnectionOutput) Cloudbuildv2ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.StringOutput { return v.Cloudbuildv2ConnectionId }).(pulumi.StringOutput)
}

// Output only. Server assigned timestamp for when the connection was created.
func (o Cloudbuildv2ConnectionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// If disabled is set to true, functionality is disabled for this connection. Repository based API methods and webhooks
// processing for repositories in this connection will be disabled.
func (o Cloudbuildv2ConnectionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o Cloudbuildv2ConnectionOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete
// requests to ensure the client has an up-to-date value before proceeding.
func (o Cloudbuildv2ConnectionOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Configuration for connections to github.com.
func (o Cloudbuildv2ConnectionOutput) GithubConfig() Cloudbuildv2ConnectionGithubConfigPtrOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) Cloudbuildv2ConnectionGithubConfigPtrOutput { return v.GithubConfig }).(Cloudbuildv2ConnectionGithubConfigPtrOutput)
}

// Configuration for connections to an instance of GitHub Enterprise.
func (o Cloudbuildv2ConnectionOutput) GithubEnterpriseConfig() Cloudbuildv2ConnectionGithubEnterpriseConfigPtrOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) Cloudbuildv2ConnectionGithubEnterpriseConfigPtrOutput {
		return v.GithubEnterpriseConfig
	}).(Cloudbuildv2ConnectionGithubEnterpriseConfigPtrOutput)
}

// Configuration for connections to gitlab.com or an instance of GitLab Enterprise.
func (o Cloudbuildv2ConnectionOutput) GitlabConfig() Cloudbuildv2ConnectionGitlabConfigPtrOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) Cloudbuildv2ConnectionGitlabConfigPtrOutput { return v.GitlabConfig }).(Cloudbuildv2ConnectionGitlabConfigPtrOutput)
}

// Output only. Installation state of the Connection.
func (o Cloudbuildv2ConnectionOutput) InstallationStates() Cloudbuildv2ConnectionInstallationStateArrayOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) Cloudbuildv2ConnectionInstallationStateArrayOutput {
		return v.InstallationStates
	}).(Cloudbuildv2ConnectionInstallationStateArrayOutput)
}

// The location for the resource
func (o Cloudbuildv2ConnectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Immutable. The resource name of the connection.
func (o Cloudbuildv2ConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o Cloudbuildv2ConnectionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. Set to true when the connection is being set up or updated in the background.
func (o Cloudbuildv2ConnectionOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

func (o Cloudbuildv2ConnectionOutput) Timeouts() Cloudbuildv2ConnectionTimeoutsPtrOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) Cloudbuildv2ConnectionTimeoutsPtrOutput { return v.Timeouts }).(Cloudbuildv2ConnectionTimeoutsPtrOutput)
}

// Output only. Server assigned timestamp for when the connection was updated.
func (o Cloudbuildv2ConnectionOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudbuildv2Connection) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Cloudbuildv2ConnectionInput)(nil)).Elem(), &Cloudbuildv2Connection{})
	pulumi.RegisterOutputType(Cloudbuildv2ConnectionOutput{})
}
