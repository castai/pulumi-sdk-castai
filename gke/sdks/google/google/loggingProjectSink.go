// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoggingProjectSink struct {
	pulumi.CustomResourceState

	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions LoggingProjectSinkBigqueryOptionsPtrOutput `pulumi:"bigqueryOptions"`
	// A service account provided by the caller that will be used to write the log entries. The format must be
	// serviceAccount:some@email. This field can only be specified if you are routing logs to a destination outside this sink's
	// project. If not specified, a Logging service account will automatically be generated.
	CustomWriterIdentity pulumi.StringPtrOutput `pulumi:"customWriterIdentity"`
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination pulumi.StringOutput `pulumi:"destination"`
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions LoggingProjectSinkExclusionArrayOutput `pulumi:"exclusions"`
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter               pulumi.StringPtrOutput `pulumi:"filter"`
	LoggingProjectSinkId pulumi.StringOutput    `pulumi:"loggingProjectSinkId"`
	// The name of the logging sink.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the project to create the sink in. If omitted, the project associated with the provider is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Whether or not to create a unique identity associated with this sink. If false (the legacy behavior), then the
	// writer_identity used is serviceAccount:cloud-logs@system.gserviceaccount.com. If true (default), then a unique service
	// account is created and used for this sink. If you wish to publish logs across projects, you must set
	// unique_writer_identity to true.
	UniqueWriterIdentity pulumi.BoolPtrOutput `pulumi:"uniqueWriterIdentity"`
	// The identity associated with this sink. This identity must be granted write access to the configured destination.
	WriterIdentity pulumi.StringOutput `pulumi:"writerIdentity"`
}

// NewLoggingProjectSink registers a new resource with the given unique name, arguments, and options.
func NewLoggingProjectSink(ctx *pulumi.Context,
	name string, args *LoggingProjectSinkArgs, opts ...pulumi.ResourceOption) (*LoggingProjectSink, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource LoggingProjectSink
	err = ctx.RegisterPackageResource("google:index/loggingProjectSink:LoggingProjectSink", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingProjectSink gets an existing LoggingProjectSink resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingProjectSink(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingProjectSinkState, opts ...pulumi.ResourceOption) (*LoggingProjectSink, error) {
	var resource LoggingProjectSink
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/loggingProjectSink:LoggingProjectSink", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingProjectSink resources.
type loggingProjectSinkState struct {
	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions *LoggingProjectSinkBigqueryOptions `pulumi:"bigqueryOptions"`
	// A service account provided by the caller that will be used to write the log entries. The format must be
	// serviceAccount:some@email. This field can only be specified if you are routing logs to a destination outside this sink's
	// project. If not specified, a Logging service account will automatically be generated.
	CustomWriterIdentity *string `pulumi:"customWriterIdentity"`
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description *string `pulumi:"description"`
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination *string `pulumi:"destination"`
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled *bool `pulumi:"disabled"`
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions []LoggingProjectSinkExclusion `pulumi:"exclusions"`
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter               *string `pulumi:"filter"`
	LoggingProjectSinkId *string `pulumi:"loggingProjectSinkId"`
	// The name of the logging sink.
	Name *string `pulumi:"name"`
	// The ID of the project to create the sink in. If omitted, the project associated with the provider is used.
	Project *string `pulumi:"project"`
	// Whether or not to create a unique identity associated with this sink. If false (the legacy behavior), then the
	// writer_identity used is serviceAccount:cloud-logs@system.gserviceaccount.com. If true (default), then a unique service
	// account is created and used for this sink. If you wish to publish logs across projects, you must set
	// unique_writer_identity to true.
	UniqueWriterIdentity *bool `pulumi:"uniqueWriterIdentity"`
	// The identity associated with this sink. This identity must be granted write access to the configured destination.
	WriterIdentity *string `pulumi:"writerIdentity"`
}

type LoggingProjectSinkState struct {
	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions LoggingProjectSinkBigqueryOptionsPtrInput
	// A service account provided by the caller that will be used to write the log entries. The format must be
	// serviceAccount:some@email. This field can only be specified if you are routing logs to a destination outside this sink's
	// project. If not specified, a Logging service account will automatically be generated.
	CustomWriterIdentity pulumi.StringPtrInput
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description pulumi.StringPtrInput
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination pulumi.StringPtrInput
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled pulumi.BoolPtrInput
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions LoggingProjectSinkExclusionArrayInput
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter               pulumi.StringPtrInput
	LoggingProjectSinkId pulumi.StringPtrInput
	// The name of the logging sink.
	Name pulumi.StringPtrInput
	// The ID of the project to create the sink in. If omitted, the project associated with the provider is used.
	Project pulumi.StringPtrInput
	// Whether or not to create a unique identity associated with this sink. If false (the legacy behavior), then the
	// writer_identity used is serviceAccount:cloud-logs@system.gserviceaccount.com. If true (default), then a unique service
	// account is created and used for this sink. If you wish to publish logs across projects, you must set
	// unique_writer_identity to true.
	UniqueWriterIdentity pulumi.BoolPtrInput
	// The identity associated with this sink. This identity must be granted write access to the configured destination.
	WriterIdentity pulumi.StringPtrInput
}

func (LoggingProjectSinkState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingProjectSinkState)(nil)).Elem()
}

type loggingProjectSinkArgs struct {
	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions *LoggingProjectSinkBigqueryOptions `pulumi:"bigqueryOptions"`
	// A service account provided by the caller that will be used to write the log entries. The format must be
	// serviceAccount:some@email. This field can only be specified if you are routing logs to a destination outside this sink's
	// project. If not specified, a Logging service account will automatically be generated.
	CustomWriterIdentity *string `pulumi:"customWriterIdentity"`
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description *string `pulumi:"description"`
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination string `pulumi:"destination"`
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled *bool `pulumi:"disabled"`
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions []LoggingProjectSinkExclusion `pulumi:"exclusions"`
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter               *string `pulumi:"filter"`
	LoggingProjectSinkId *string `pulumi:"loggingProjectSinkId"`
	// The name of the logging sink.
	Name *string `pulumi:"name"`
	// The ID of the project to create the sink in. If omitted, the project associated with the provider is used.
	Project *string `pulumi:"project"`
	// Whether or not to create a unique identity associated with this sink. If false (the legacy behavior), then the
	// writer_identity used is serviceAccount:cloud-logs@system.gserviceaccount.com. If true (default), then a unique service
	// account is created and used for this sink. If you wish to publish logs across projects, you must set
	// unique_writer_identity to true.
	UniqueWriterIdentity *bool `pulumi:"uniqueWriterIdentity"`
}

// The set of arguments for constructing a LoggingProjectSink resource.
type LoggingProjectSinkArgs struct {
	// Options that affect sinks exporting data to BigQuery.
	BigqueryOptions LoggingProjectSinkBigqueryOptionsPtrInput
	// A service account provided by the caller that will be used to write the log entries. The format must be
	// serviceAccount:some@email. This field can only be specified if you are routing logs to a destination outside this sink's
	// project. If not specified, a Logging service account will automatically be generated.
	CustomWriterIdentity pulumi.StringPtrInput
	// A description of this sink. The maximum length of the description is 8000 characters.
	Description pulumi.StringPtrInput
	// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
	// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
	// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
	// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
	// write to the above resource.
	Destination pulumi.StringInput
	// If set to True, then this sink is disabled and it does not export any log entries.
	Disabled pulumi.BoolPtrInput
	// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
	// one of exclusion's filters, it will not be exported.
	Exclusions LoggingProjectSinkExclusionArrayInput
	// The filter to apply when exporting logs. Only log entries that match the filter are exported.
	Filter               pulumi.StringPtrInput
	LoggingProjectSinkId pulumi.StringPtrInput
	// The name of the logging sink.
	Name pulumi.StringPtrInput
	// The ID of the project to create the sink in. If omitted, the project associated with the provider is used.
	Project pulumi.StringPtrInput
	// Whether or not to create a unique identity associated with this sink. If false (the legacy behavior), then the
	// writer_identity used is serviceAccount:cloud-logs@system.gserviceaccount.com. If true (default), then a unique service
	// account is created and used for this sink. If you wish to publish logs across projects, you must set
	// unique_writer_identity to true.
	UniqueWriterIdentity pulumi.BoolPtrInput
}

func (LoggingProjectSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingProjectSinkArgs)(nil)).Elem()
}

type LoggingProjectSinkInput interface {
	pulumi.Input

	ToLoggingProjectSinkOutput() LoggingProjectSinkOutput
	ToLoggingProjectSinkOutputWithContext(ctx context.Context) LoggingProjectSinkOutput
}

func (*LoggingProjectSink) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingProjectSink)(nil)).Elem()
}

func (i *LoggingProjectSink) ToLoggingProjectSinkOutput() LoggingProjectSinkOutput {
	return i.ToLoggingProjectSinkOutputWithContext(context.Background())
}

func (i *LoggingProjectSink) ToLoggingProjectSinkOutputWithContext(ctx context.Context) LoggingProjectSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingProjectSinkOutput)
}

type LoggingProjectSinkOutput struct{ *pulumi.OutputState }

func (LoggingProjectSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingProjectSink)(nil)).Elem()
}

func (o LoggingProjectSinkOutput) ToLoggingProjectSinkOutput() LoggingProjectSinkOutput {
	return o
}

func (o LoggingProjectSinkOutput) ToLoggingProjectSinkOutputWithContext(ctx context.Context) LoggingProjectSinkOutput {
	return o
}

// Options that affect sinks exporting data to BigQuery.
func (o LoggingProjectSinkOutput) BigqueryOptions() LoggingProjectSinkBigqueryOptionsPtrOutput {
	return o.ApplyT(func(v *LoggingProjectSink) LoggingProjectSinkBigqueryOptionsPtrOutput { return v.BigqueryOptions }).(LoggingProjectSinkBigqueryOptionsPtrOutput)
}

// A service account provided by the caller that will be used to write the log entries. The format must be
// serviceAccount:some@email. This field can only be specified if you are routing logs to a destination outside this sink's
// project. If not specified, a Logging service account will automatically be generated.
func (o LoggingProjectSinkOutput) CustomWriterIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.StringPtrOutput { return v.CustomWriterIdentity }).(pulumi.StringPtrOutput)
}

// A description of this sink. The maximum length of the description is 8000 characters.
func (o LoggingProjectSinkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination of the sink (or, in other words, where logs are written to). Can be a Cloud Storage bucket, a PubSub
// topic, or a BigQuery dataset. Examples: "storage.googleapis.com/[GCS_BUCKET]"
// "bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]"
// "pubsub.googleapis.com/projects/[PROJECT_ID]/topics/[TOPIC_ID]" The writer associated with the sink must have access to
// write to the above resource.
func (o LoggingProjectSinkOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.StringOutput { return v.Destination }).(pulumi.StringOutput)
}

// If set to True, then this sink is disabled and it does not export any log entries.
func (o LoggingProjectSinkOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Log entries that match any of the exclusion filters will not be exported. If a log entry is matched by both filter and
// one of exclusion's filters, it will not be exported.
func (o LoggingProjectSinkOutput) Exclusions() LoggingProjectSinkExclusionArrayOutput {
	return o.ApplyT(func(v *LoggingProjectSink) LoggingProjectSinkExclusionArrayOutput { return v.Exclusions }).(LoggingProjectSinkExclusionArrayOutput)
}

// The filter to apply when exporting logs. Only log entries that match the filter are exported.
func (o LoggingProjectSinkOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.StringPtrOutput { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o LoggingProjectSinkOutput) LoggingProjectSinkId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.StringOutput { return v.LoggingProjectSinkId }).(pulumi.StringOutput)
}

// The name of the logging sink.
func (o LoggingProjectSinkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project to create the sink in. If omitted, the project associated with the provider is used.
func (o LoggingProjectSinkOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Whether or not to create a unique identity associated with this sink. If false (the legacy behavior), then the
// writer_identity used is serviceAccount:cloud-logs@system.gserviceaccount.com. If true (default), then a unique service
// account is created and used for this sink. If you wish to publish logs across projects, you must set
// unique_writer_identity to true.
func (o LoggingProjectSinkOutput) UniqueWriterIdentity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.BoolPtrOutput { return v.UniqueWriterIdentity }).(pulumi.BoolPtrOutput)
}

// The identity associated with this sink. This identity must be granted write access to the configured destination.
func (o LoggingProjectSinkOutput) WriterIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectSink) pulumi.StringOutput { return v.WriterIdentity }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingProjectSinkInput)(nil)).Elem(), &LoggingProjectSink{})
	pulumi.RegisterOutputType(LoggingProjectSinkOutput{})
}
