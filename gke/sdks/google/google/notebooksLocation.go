// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NotebooksLocation struct {
	pulumi.CustomResourceState

	// Name of the Location resource.
	Name                pulumi.StringOutput                `pulumi:"name"`
	NotebooksLocationId pulumi.StringOutput                `pulumi:"notebooksLocationId"`
	Project             pulumi.StringOutput                `pulumi:"project"`
	SelfLink            pulumi.StringOutput                `pulumi:"selfLink"`
	Timeouts            NotebooksLocationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewNotebooksLocation registers a new resource with the given unique name, arguments, and options.
func NewNotebooksLocation(ctx *pulumi.Context,
	name string, args *NotebooksLocationArgs, opts ...pulumi.ResourceOption) (*NotebooksLocation, error) {
	if args == nil {
		args = &NotebooksLocationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NotebooksLocation
	err = ctx.RegisterPackageResource("google:index/notebooksLocation:NotebooksLocation", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotebooksLocation gets an existing NotebooksLocation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebooksLocation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotebooksLocationState, opts ...pulumi.ResourceOption) (*NotebooksLocation, error) {
	var resource NotebooksLocation
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/notebooksLocation:NotebooksLocation", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotebooksLocation resources.
type notebooksLocationState struct {
	// Name of the Location resource.
	Name                *string                    `pulumi:"name"`
	NotebooksLocationId *string                    `pulumi:"notebooksLocationId"`
	Project             *string                    `pulumi:"project"`
	SelfLink            *string                    `pulumi:"selfLink"`
	Timeouts            *NotebooksLocationTimeouts `pulumi:"timeouts"`
}

type NotebooksLocationState struct {
	// Name of the Location resource.
	Name                pulumi.StringPtrInput
	NotebooksLocationId pulumi.StringPtrInput
	Project             pulumi.StringPtrInput
	SelfLink            pulumi.StringPtrInput
	Timeouts            NotebooksLocationTimeoutsPtrInput
}

func (NotebooksLocationState) ElementType() reflect.Type {
	return reflect.TypeOf((*notebooksLocationState)(nil)).Elem()
}

type notebooksLocationArgs struct {
	// Name of the Location resource.
	Name                *string                    `pulumi:"name"`
	NotebooksLocationId *string                    `pulumi:"notebooksLocationId"`
	Project             *string                    `pulumi:"project"`
	Timeouts            *NotebooksLocationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NotebooksLocation resource.
type NotebooksLocationArgs struct {
	// Name of the Location resource.
	Name                pulumi.StringPtrInput
	NotebooksLocationId pulumi.StringPtrInput
	Project             pulumi.StringPtrInput
	Timeouts            NotebooksLocationTimeoutsPtrInput
}

func (NotebooksLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notebooksLocationArgs)(nil)).Elem()
}

type NotebooksLocationInput interface {
	pulumi.Input

	ToNotebooksLocationOutput() NotebooksLocationOutput
	ToNotebooksLocationOutputWithContext(ctx context.Context) NotebooksLocationOutput
}

func (*NotebooksLocation) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebooksLocation)(nil)).Elem()
}

func (i *NotebooksLocation) ToNotebooksLocationOutput() NotebooksLocationOutput {
	return i.ToNotebooksLocationOutputWithContext(context.Background())
}

func (i *NotebooksLocation) ToNotebooksLocationOutputWithContext(ctx context.Context) NotebooksLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebooksLocationOutput)
}

type NotebooksLocationOutput struct{ *pulumi.OutputState }

func (NotebooksLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebooksLocation)(nil)).Elem()
}

func (o NotebooksLocationOutput) ToNotebooksLocationOutput() NotebooksLocationOutput {
	return o
}

func (o NotebooksLocationOutput) ToNotebooksLocationOutputWithContext(ctx context.Context) NotebooksLocationOutput {
	return o
}

// Name of the Location resource.
func (o NotebooksLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksLocation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NotebooksLocationOutput) NotebooksLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksLocation) pulumi.StringOutput { return v.NotebooksLocationId }).(pulumi.StringOutput)
}

func (o NotebooksLocationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksLocation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o NotebooksLocationOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksLocation) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

func (o NotebooksLocationOutput) Timeouts() NotebooksLocationTimeoutsPtrOutput {
	return o.ApplyT(func(v *NotebooksLocation) NotebooksLocationTimeoutsPtrOutput { return v.Timeouts }).(NotebooksLocationTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NotebooksLocationInput)(nil)).Elem(), &NotebooksLocation{})
	pulumi.RegisterOutputType(NotebooksLocationOutput{})
}
