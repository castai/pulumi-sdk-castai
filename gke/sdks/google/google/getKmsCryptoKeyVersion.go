// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupKmsCryptoKeyVersion(ctx *pulumi.Context, args *LookupKmsCryptoKeyVersionArgs, opts ...pulumi.InvokeOption) (*LookupKmsCryptoKeyVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupKmsCryptoKeyVersionResult
	err = ctx.InvokePackage("google:index/getKmsCryptoKeyVersion:getKmsCryptoKeyVersion", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKmsCryptoKeyVersion.
type LookupKmsCryptoKeyVersionArgs struct {
	CryptoKey string   `pulumi:"cryptoKey"`
	Id        *string  `pulumi:"id"`
	Version   *float64 `pulumi:"version"`
}

// A collection of values returned by getKmsCryptoKeyVersion.
type LookupKmsCryptoKeyVersionResult struct {
	Algorithm       string                            `pulumi:"algorithm"`
	CryptoKey       string                            `pulumi:"cryptoKey"`
	Id              string                            `pulumi:"id"`
	Name            string                            `pulumi:"name"`
	ProtectionLevel string                            `pulumi:"protectionLevel"`
	PublicKeys      []GetKmsCryptoKeyVersionPublicKey `pulumi:"publicKeys"`
	State           string                            `pulumi:"state"`
	Version         *float64                          `pulumi:"version"`
}

func LookupKmsCryptoKeyVersionOutput(ctx *pulumi.Context, args LookupKmsCryptoKeyVersionOutputArgs, opts ...pulumi.InvokeOption) LookupKmsCryptoKeyVersionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKmsCryptoKeyVersionResultOutput, error) {
			args := v.(LookupKmsCryptoKeyVersionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupKmsCryptoKeyVersionResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getKmsCryptoKeyVersion:getKmsCryptoKeyVersion", args, LookupKmsCryptoKeyVersionResultOutput{}, options).(LookupKmsCryptoKeyVersionResultOutput), nil
		}).(LookupKmsCryptoKeyVersionResultOutput)
}

// A collection of arguments for invoking getKmsCryptoKeyVersion.
type LookupKmsCryptoKeyVersionOutputArgs struct {
	CryptoKey pulumi.StringInput     `pulumi:"cryptoKey"`
	Id        pulumi.StringPtrInput  `pulumi:"id"`
	Version   pulumi.Float64PtrInput `pulumi:"version"`
}

func (LookupKmsCryptoKeyVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKmsCryptoKeyVersionArgs)(nil)).Elem()
}

// A collection of values returned by getKmsCryptoKeyVersion.
type LookupKmsCryptoKeyVersionResultOutput struct{ *pulumi.OutputState }

func (LookupKmsCryptoKeyVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKmsCryptoKeyVersionResult)(nil)).Elem()
}

func (o LookupKmsCryptoKeyVersionResultOutput) ToLookupKmsCryptoKeyVersionResultOutput() LookupKmsCryptoKeyVersionResultOutput {
	return o
}

func (o LookupKmsCryptoKeyVersionResultOutput) ToLookupKmsCryptoKeyVersionResultOutputWithContext(ctx context.Context) LookupKmsCryptoKeyVersionResultOutput {
	return o
}

func (o LookupKmsCryptoKeyVersionResultOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyVersionResult) string { return v.Algorithm }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyVersionResultOutput) CryptoKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyVersionResult) string { return v.CryptoKey }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyVersionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyVersionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyVersionResultOutput) ProtectionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyVersionResult) string { return v.ProtectionLevel }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyVersionResultOutput) PublicKeys() GetKmsCryptoKeyVersionPublicKeyArrayOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyVersionResult) []GetKmsCryptoKeyVersionPublicKey { return v.PublicKeys }).(GetKmsCryptoKeyVersionPublicKeyArrayOutput)
}

func (o LookupKmsCryptoKeyVersionResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyVersionResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyVersionResultOutput) Version() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyVersionResult) *float64 { return v.Version }).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKmsCryptoKeyVersionResultOutput{})
}
