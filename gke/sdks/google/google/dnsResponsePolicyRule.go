// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DnsResponsePolicyRule struct {
	pulumi.CustomResourceState

	// The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
	DnsName                 pulumi.StringOutput `pulumi:"dnsName"`
	DnsResponsePolicyRuleId pulumi.StringOutput `pulumi:"dnsResponsePolicyRuleId"`
	// Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
	// in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
	LocalData DnsResponsePolicyRuleLocalDataPtrOutput `pulumi:"localData"`
	Project   pulumi.StringOutput                     `pulumi:"project"`
	// Identifies the response policy addressed by this request.
	ResponsePolicy pulumi.StringOutput `pulumi:"responsePolicy"`
	// An identifier for this rule. Must be unique with the ResponsePolicy.
	RuleName pulumi.StringOutput                    `pulumi:"ruleName"`
	Timeouts DnsResponsePolicyRuleTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDnsResponsePolicyRule registers a new resource with the given unique name, arguments, and options.
func NewDnsResponsePolicyRule(ctx *pulumi.Context,
	name string, args *DnsResponsePolicyRuleArgs, opts ...pulumi.ResourceOption) (*DnsResponsePolicyRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DnsName == nil {
		return nil, errors.New("invalid value for required argument 'DnsName'")
	}
	if args.ResponsePolicy == nil {
		return nil, errors.New("invalid value for required argument 'ResponsePolicy'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DnsResponsePolicyRule
	err = ctx.RegisterPackageResource("google:index/dnsResponsePolicyRule:DnsResponsePolicyRule", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsResponsePolicyRule gets an existing DnsResponsePolicyRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsResponsePolicyRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsResponsePolicyRuleState, opts ...pulumi.ResourceOption) (*DnsResponsePolicyRule, error) {
	var resource DnsResponsePolicyRule
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dnsResponsePolicyRule:DnsResponsePolicyRule", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsResponsePolicyRule resources.
type dnsResponsePolicyRuleState struct {
	// The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
	DnsName                 *string `pulumi:"dnsName"`
	DnsResponsePolicyRuleId *string `pulumi:"dnsResponsePolicyRuleId"`
	// Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
	// in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
	LocalData *DnsResponsePolicyRuleLocalData `pulumi:"localData"`
	Project   *string                         `pulumi:"project"`
	// Identifies the response policy addressed by this request.
	ResponsePolicy *string `pulumi:"responsePolicy"`
	// An identifier for this rule. Must be unique with the ResponsePolicy.
	RuleName *string                        `pulumi:"ruleName"`
	Timeouts *DnsResponsePolicyRuleTimeouts `pulumi:"timeouts"`
}

type DnsResponsePolicyRuleState struct {
	// The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
	DnsName                 pulumi.StringPtrInput
	DnsResponsePolicyRuleId pulumi.StringPtrInput
	// Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
	// in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
	LocalData DnsResponsePolicyRuleLocalDataPtrInput
	Project   pulumi.StringPtrInput
	// Identifies the response policy addressed by this request.
	ResponsePolicy pulumi.StringPtrInput
	// An identifier for this rule. Must be unique with the ResponsePolicy.
	RuleName pulumi.StringPtrInput
	Timeouts DnsResponsePolicyRuleTimeoutsPtrInput
}

func (DnsResponsePolicyRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsResponsePolicyRuleState)(nil)).Elem()
}

type dnsResponsePolicyRuleArgs struct {
	// The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
	DnsName                 string  `pulumi:"dnsName"`
	DnsResponsePolicyRuleId *string `pulumi:"dnsResponsePolicyRuleId"`
	// Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
	// in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
	LocalData *DnsResponsePolicyRuleLocalData `pulumi:"localData"`
	Project   *string                         `pulumi:"project"`
	// Identifies the response policy addressed by this request.
	ResponsePolicy string `pulumi:"responsePolicy"`
	// An identifier for this rule. Must be unique with the ResponsePolicy.
	RuleName string                         `pulumi:"ruleName"`
	Timeouts *DnsResponsePolicyRuleTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DnsResponsePolicyRule resource.
type DnsResponsePolicyRuleArgs struct {
	// The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
	DnsName                 pulumi.StringInput
	DnsResponsePolicyRuleId pulumi.StringPtrInput
	// Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
	// in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
	LocalData DnsResponsePolicyRuleLocalDataPtrInput
	Project   pulumi.StringPtrInput
	// Identifies the response policy addressed by this request.
	ResponsePolicy pulumi.StringInput
	// An identifier for this rule. Must be unique with the ResponsePolicy.
	RuleName pulumi.StringInput
	Timeouts DnsResponsePolicyRuleTimeoutsPtrInput
}

func (DnsResponsePolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsResponsePolicyRuleArgs)(nil)).Elem()
}

type DnsResponsePolicyRuleInput interface {
	pulumi.Input

	ToDnsResponsePolicyRuleOutput() DnsResponsePolicyRuleOutput
	ToDnsResponsePolicyRuleOutputWithContext(ctx context.Context) DnsResponsePolicyRuleOutput
}

func (*DnsResponsePolicyRule) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsResponsePolicyRule)(nil)).Elem()
}

func (i *DnsResponsePolicyRule) ToDnsResponsePolicyRuleOutput() DnsResponsePolicyRuleOutput {
	return i.ToDnsResponsePolicyRuleOutputWithContext(context.Background())
}

func (i *DnsResponsePolicyRule) ToDnsResponsePolicyRuleOutputWithContext(ctx context.Context) DnsResponsePolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsResponsePolicyRuleOutput)
}

type DnsResponsePolicyRuleOutput struct{ *pulumi.OutputState }

func (DnsResponsePolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsResponsePolicyRule)(nil)).Elem()
}

func (o DnsResponsePolicyRuleOutput) ToDnsResponsePolicyRuleOutput() DnsResponsePolicyRuleOutput {
	return o
}

func (o DnsResponsePolicyRuleOutput) ToDnsResponsePolicyRuleOutputWithContext(ctx context.Context) DnsResponsePolicyRuleOutput {
	return o
}

// The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
func (o DnsResponsePolicyRuleOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResponsePolicyRule) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

func (o DnsResponsePolicyRuleOutput) DnsResponsePolicyRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResponsePolicyRule) pulumi.StringOutput { return v.DnsResponsePolicyRuleId }).(pulumi.StringOutput)
}

// Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
// in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
func (o DnsResponsePolicyRuleOutput) LocalData() DnsResponsePolicyRuleLocalDataPtrOutput {
	return o.ApplyT(func(v *DnsResponsePolicyRule) DnsResponsePolicyRuleLocalDataPtrOutput { return v.LocalData }).(DnsResponsePolicyRuleLocalDataPtrOutput)
}

func (o DnsResponsePolicyRuleOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResponsePolicyRule) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Identifies the response policy addressed by this request.
func (o DnsResponsePolicyRuleOutput) ResponsePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResponsePolicyRule) pulumi.StringOutput { return v.ResponsePolicy }).(pulumi.StringOutput)
}

// An identifier for this rule. Must be unique with the ResponsePolicy.
func (o DnsResponsePolicyRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *DnsResponsePolicyRule) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

func (o DnsResponsePolicyRuleOutput) Timeouts() DnsResponsePolicyRuleTimeoutsPtrOutput {
	return o.ApplyT(func(v *DnsResponsePolicyRule) DnsResponsePolicyRuleTimeoutsPtrOutput { return v.Timeouts }).(DnsResponsePolicyRuleTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DnsResponsePolicyRuleInput)(nil)).Elem(), &DnsResponsePolicyRule{})
	pulumi.RegisterOutputType(DnsResponsePolicyRuleOutput{})
}
