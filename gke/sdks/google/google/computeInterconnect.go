// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeInterconnect struct {
	pulumi.CustomResourceState

	// Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry
	// traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By
	// default, the status is set to true.
	AdminEnabled pulumi.BoolPtrOutput `pulumi:"adminEnabled"`
	// interconnects.list of features available for this Interconnect connection. Can take the value: MACSEC. If present then
	// the Interconnect connection is provisioned on MACsec capable hardware ports. If not present then the Interconnect
	// connection is provisioned on non-MACsec capable ports and MACsec isn't supported and enabling MACsec fails).
	AvailableFeatures pulumi.StringArrayOutput `pulumi:"availableFeatures"`
	// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
	CircuitInfos          ComputeInterconnectCircuitInfoArrayOutput `pulumi:"circuitInfos"`
	ComputeInterconnectId pulumi.StringOutput                       `pulumi:"computeInterconnectId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect. This field is
	// required for Dedicated and Partner Interconnect, should not be specified for cross-cloud interconnect.
	CustomerName pulumi.StringPtrOutput `pulumi:"customerName"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A list of outages expected for this Interconnect.
	ExpectedOutages ComputeInterconnectExpectedOutageArrayOutput `pulumi:"expectedOutages"`
	// IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
	GoogleIpAddress pulumi.StringOutput `pulumi:"googleIpAddress"`
	// Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity
	// issues.
	GoogleReferenceId pulumi.StringOutput `pulumi:"googleReferenceId"`
	// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
	InterconnectAttachments pulumi.StringArrayOutput `pulumi:"interconnectAttachments"`
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED. Can take one of the
	// following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A
	// dedicated physical interconnection with the customer. Possible values: ["DEDICATED", "PARTNER", "IT_PRIVATE"]
	InterconnectType pulumi.StringOutput `pulumi:"interconnectType"`
	// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash of the labels set used for
	// optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify
	// or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise
	// the request will fail with error 412 conditionNotMet.
	LabelFingerprint pulumi.StringOutput `pulumi:"labelFingerprint"`
	// Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must
	// comply with RFC1035. Label values may be empty. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Type of link requested. Note that this field indicates the speed of each of the links in the bundle, not the speed of
	// the entire bundle. Can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics. -
	// LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Possible values: ["LINK_TYPE_ETHERNET_10G_LR",
	// "LINK_TYPE_ETHERNET_100G_LR"]
	LinkType pulumi.StringOutput `pulumi:"linkType"`
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned. Specifies the
	// location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google
	// and your on-premises router.
	Macsec ComputeInterconnectMacsecPtrOutput `pulumi:"macsec"`
	// Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled pulumi.BoolPtrOutput `pulumi:"macsecEnabled"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If
	// specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs
	// alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce
	// identity federation.
	NocContactEmail pulumi.StringPtrOutput `pulumi:"nocContactEmail"`
	// The current status of this Interconnect's functionality, which can take one of the following: - OS_ACTIVE: A valid
	// Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. -
	// OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect.
	// - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or
	//   updated on this Interconnect.
	OperationalStatus pulumi.StringOutput `pulumi:"operationalStatus"`
	// IP address configured on the customer side of the Interconnect link. The customer should configure this IP address
	// during turnup when prompted by Google NOC. This can be used only for ping tests.
	PeerIpAddress pulumi.StringOutput `pulumi:"peerIpAddress"`
	Project       pulumi.StringOutput `pulumi:"project"`
	// Number of links actually provisioned in this interconnect.
	ProvisionedLinkCount pulumi.Float64Output `pulumi:"provisionedLinkCount"`
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that
	// the interconnect is connected to.
	RemoteLocation pulumi.StringPtrOutput `pulumi:"remoteLocation"`
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC ( If specified then the
	// connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates
	// non-MACsec capable ports first if available). Note that MACSEC is still technically allowed for compatibility reasons,
	// but it does not work with the API, and will be removed in an upcoming major version. Possible values: ["MACSEC",
	// "IF_MACSEC"]
	RequestedFeatures pulumi.StringArrayOutput `pulumi:"requestedFeatures"`
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount pulumi.Float64Output `pulumi:"requestedLinkCount"`
	// Reserved for future use.
	SatisfiesPzs pulumi.BoolOutput `pulumi:"satisfiesPzs"`
	// The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect
	// is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The
	// Interconnect has not completed turnup. No attachments may b provisioned on this Interconnect. - UNDER_MAINTENANCE: The
	// Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput               `pulumi:"terraformLabels"`
	Timeouts        ComputeInterconnectTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeInterconnect registers a new resource with the given unique name, arguments, and options.
func NewComputeInterconnect(ctx *pulumi.Context,
	name string, args *ComputeInterconnectArgs, opts ...pulumi.ResourceOption) (*ComputeInterconnect, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InterconnectType == nil {
		return nil, errors.New("invalid value for required argument 'InterconnectType'")
	}
	if args.LinkType == nil {
		return nil, errors.New("invalid value for required argument 'LinkType'")
	}
	if args.RequestedLinkCount == nil {
		return nil, errors.New("invalid value for required argument 'RequestedLinkCount'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeInterconnect
	err = ctx.RegisterPackageResource("google:index/computeInterconnect:ComputeInterconnect", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInterconnect gets an existing ComputeInterconnect resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInterconnect(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInterconnectState, opts ...pulumi.ResourceOption) (*ComputeInterconnect, error) {
	var resource ComputeInterconnect
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeInterconnect:ComputeInterconnect", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInterconnect resources.
type computeInterconnectState struct {
	// Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry
	// traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By
	// default, the status is set to true.
	AdminEnabled *bool `pulumi:"adminEnabled"`
	// interconnects.list of features available for this Interconnect connection. Can take the value: MACSEC. If present then
	// the Interconnect connection is provisioned on MACsec capable hardware ports. If not present then the Interconnect
	// connection is provisioned on non-MACsec capable ports and MACsec isn't supported and enabling MACsec fails).
	AvailableFeatures []string `pulumi:"availableFeatures"`
	// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
	CircuitInfos          []ComputeInterconnectCircuitInfo `pulumi:"circuitInfos"`
	ComputeInterconnectId *string                          `pulumi:"computeInterconnectId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect. This field is
	// required for Dedicated and Partner Interconnect, should not be specified for cross-cloud interconnect.
	CustomerName *string `pulumi:"customerName"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// A list of outages expected for this Interconnect.
	ExpectedOutages []ComputeInterconnectExpectedOutage `pulumi:"expectedOutages"`
	// IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
	GoogleIpAddress *string `pulumi:"googleIpAddress"`
	// Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity
	// issues.
	GoogleReferenceId *string `pulumi:"googleReferenceId"`
	// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
	InterconnectAttachments []string `pulumi:"interconnectAttachments"`
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED. Can take one of the
	// following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A
	// dedicated physical interconnection with the customer. Possible values: ["DEDICATED", "PARTNER", "IT_PRIVATE"]
	InterconnectType *string `pulumi:"interconnectType"`
	// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash of the labels set used for
	// optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify
	// or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise
	// the request will fail with error 412 conditionNotMet.
	LabelFingerprint *string `pulumi:"labelFingerprint"`
	// Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must
	// comply with RFC1035. Label values may be empty. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// Type of link requested. Note that this field indicates the speed of each of the links in the bundle, not the speed of
	// the entire bundle. Can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics. -
	// LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Possible values: ["LINK_TYPE_ETHERNET_10G_LR",
	// "LINK_TYPE_ETHERNET_100G_LR"]
	LinkType *string `pulumi:"linkType"`
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned. Specifies the
	// location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location *string `pulumi:"location"`
	// Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google
	// and your on-premises router.
	Macsec *ComputeInterconnectMacsec `pulumi:"macsec"`
	// Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled *bool `pulumi:"macsecEnabled"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If
	// specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs
	// alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce
	// identity federation.
	NocContactEmail *string `pulumi:"nocContactEmail"`
	// The current status of this Interconnect's functionality, which can take one of the following: - OS_ACTIVE: A valid
	// Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. -
	// OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect.
	// - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or
	//   updated on this Interconnect.
	OperationalStatus *string `pulumi:"operationalStatus"`
	// IP address configured on the customer side of the Interconnect link. The customer should configure this IP address
	// during turnup when prompted by Google NOC. This can be used only for ping tests.
	PeerIpAddress *string `pulumi:"peerIpAddress"`
	Project       *string `pulumi:"project"`
	// Number of links actually provisioned in this interconnect.
	ProvisionedLinkCount *float64 `pulumi:"provisionedLinkCount"`
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that
	// the interconnect is connected to.
	RemoteLocation *string `pulumi:"remoteLocation"`
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC ( If specified then the
	// connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates
	// non-MACsec capable ports first if available). Note that MACSEC is still technically allowed for compatibility reasons,
	// but it does not work with the API, and will be removed in an upcoming major version. Possible values: ["MACSEC",
	// "IF_MACSEC"]
	RequestedFeatures []string `pulumi:"requestedFeatures"`
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount *float64 `pulumi:"requestedLinkCount"`
	// Reserved for future use.
	SatisfiesPzs *bool `pulumi:"satisfiesPzs"`
	// The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect
	// is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The
	// Interconnect has not completed turnup. No attachments may b provisioned on this Interconnect. - UNDER_MAINTENANCE: The
	// Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string            `pulumi:"terraformLabels"`
	Timeouts        *ComputeInterconnectTimeouts `pulumi:"timeouts"`
}

type ComputeInterconnectState struct {
	// Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry
	// traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By
	// default, the status is set to true.
	AdminEnabled pulumi.BoolPtrInput
	// interconnects.list of features available for this Interconnect connection. Can take the value: MACSEC. If present then
	// the Interconnect connection is provisioned on MACsec capable hardware ports. If not present then the Interconnect
	// connection is provisioned on non-MACsec capable ports and MACsec isn't supported and enabling MACsec fails).
	AvailableFeatures pulumi.StringArrayInput
	// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
	CircuitInfos          ComputeInterconnectCircuitInfoArrayInput
	ComputeInterconnectId pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect. This field is
	// required for Dedicated and Partner Interconnect, should not be specified for cross-cloud interconnect.
	CustomerName pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// A list of outages expected for this Interconnect.
	ExpectedOutages ComputeInterconnectExpectedOutageArrayInput
	// IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
	GoogleIpAddress pulumi.StringPtrInput
	// Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity
	// issues.
	GoogleReferenceId pulumi.StringPtrInput
	// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
	InterconnectAttachments pulumi.StringArrayInput
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED. Can take one of the
	// following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A
	// dedicated physical interconnection with the customer. Possible values: ["DEDICATED", "PARTNER", "IT_PRIVATE"]
	InterconnectType pulumi.StringPtrInput
	// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash of the labels set used for
	// optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify
	// or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise
	// the request will fail with error 412 conditionNotMet.
	LabelFingerprint pulumi.StringPtrInput
	// Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must
	// comply with RFC1035. Label values may be empty. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// Type of link requested. Note that this field indicates the speed of each of the links in the bundle, not the speed of
	// the entire bundle. Can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics. -
	// LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Possible values: ["LINK_TYPE_ETHERNET_10G_LR",
	// "LINK_TYPE_ETHERNET_100G_LR"]
	LinkType pulumi.StringPtrInput
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned. Specifies the
	// location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location pulumi.StringPtrInput
	// Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google
	// and your on-premises router.
	Macsec ComputeInterconnectMacsecPtrInput
	// Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If
	// specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs
	// alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce
	// identity federation.
	NocContactEmail pulumi.StringPtrInput
	// The current status of this Interconnect's functionality, which can take one of the following: - OS_ACTIVE: A valid
	// Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. -
	// OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect.
	// - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or
	//   updated on this Interconnect.
	OperationalStatus pulumi.StringPtrInput
	// IP address configured on the customer side of the Interconnect link. The customer should configure this IP address
	// during turnup when prompted by Google NOC. This can be used only for ping tests.
	PeerIpAddress pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	// Number of links actually provisioned in this interconnect.
	ProvisionedLinkCount pulumi.Float64PtrInput
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that
	// the interconnect is connected to.
	RemoteLocation pulumi.StringPtrInput
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC ( If specified then the
	// connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates
	// non-MACsec capable ports first if available). Note that MACSEC is still technically allowed for compatibility reasons,
	// but it does not work with the API, and will be removed in an upcoming major version. Possible values: ["MACSEC",
	// "IF_MACSEC"]
	RequestedFeatures pulumi.StringArrayInput
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount pulumi.Float64PtrInput
	// Reserved for future use.
	SatisfiesPzs pulumi.BoolPtrInput
	// The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect
	// is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The
	// Interconnect has not completed turnup. No attachments may b provisioned on this Interconnect. - UNDER_MAINTENANCE: The
	// Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ComputeInterconnectTimeoutsPtrInput
}

func (ComputeInterconnectState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInterconnectState)(nil)).Elem()
}

type computeInterconnectArgs struct {
	// Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry
	// traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By
	// default, the status is set to true.
	AdminEnabled          *bool   `pulumi:"adminEnabled"`
	ComputeInterconnectId *string `pulumi:"computeInterconnectId"`
	// Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect. This field is
	// required for Dedicated and Partner Interconnect, should not be specified for cross-cloud interconnect.
	CustomerName *string `pulumi:"customerName"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED. Can take one of the
	// following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A
	// dedicated physical interconnection with the customer. Possible values: ["DEDICATED", "PARTNER", "IT_PRIVATE"]
	InterconnectType string `pulumi:"interconnectType"`
	// Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must
	// comply with RFC1035. Label values may be empty. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// Type of link requested. Note that this field indicates the speed of each of the links in the bundle, not the speed of
	// the entire bundle. Can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics. -
	// LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Possible values: ["LINK_TYPE_ETHERNET_10G_LR",
	// "LINK_TYPE_ETHERNET_100G_LR"]
	LinkType string `pulumi:"linkType"`
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned. Specifies the
	// location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location *string `pulumi:"location"`
	// Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google
	// and your on-premises router.
	Macsec *ComputeInterconnectMacsec `pulumi:"macsec"`
	// Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled *bool `pulumi:"macsecEnabled"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If
	// specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs
	// alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce
	// identity federation.
	NocContactEmail *string `pulumi:"nocContactEmail"`
	Project         *string `pulumi:"project"`
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that
	// the interconnect is connected to.
	RemoteLocation *string `pulumi:"remoteLocation"`
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC ( If specified then the
	// connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates
	// non-MACsec capable ports first if available). Note that MACSEC is still technically allowed for compatibility reasons,
	// but it does not work with the API, and will be removed in an upcoming major version. Possible values: ["MACSEC",
	// "IF_MACSEC"]
	RequestedFeatures []string `pulumi:"requestedFeatures"`
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount float64                      `pulumi:"requestedLinkCount"`
	Timeouts           *ComputeInterconnectTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeInterconnect resource.
type ComputeInterconnectArgs struct {
	// Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry
	// traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By
	// default, the status is set to true.
	AdminEnabled          pulumi.BoolPtrInput
	ComputeInterconnectId pulumi.StringPtrInput
	// Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect. This field is
	// required for Dedicated and Partner Interconnect, should not be specified for cross-cloud interconnect.
	CustomerName pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED. Can take one of the
	// following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A
	// dedicated physical interconnection with the customer. Possible values: ["DEDICATED", "PARTNER", "IT_PRIVATE"]
	InterconnectType pulumi.StringInput
	// Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must
	// comply with RFC1035. Label values may be empty. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// Type of link requested. Note that this field indicates the speed of each of the links in the bundle, not the speed of
	// the entire bundle. Can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics. -
	// LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Possible values: ["LINK_TYPE_ETHERNET_10G_LR",
	// "LINK_TYPE_ETHERNET_100G_LR"]
	LinkType pulumi.StringInput
	// URL of the InterconnectLocation object that represents where this connection is to be provisioned. Specifies the
	// location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
	Location pulumi.StringPtrInput
	// Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google
	// and your on-premises router.
	Macsec ComputeInterconnectMacsecPtrInput
	// Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
	MacsecEnabled pulumi.BoolPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If
	// specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs
	// alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce
	// identity federation.
	NocContactEmail pulumi.StringPtrInput
	Project         pulumi.StringPtrInput
	// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that
	// the interconnect is connected to.
	RemoteLocation pulumi.StringPtrInput
	// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC ( If specified then the
	// connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates
	// non-MACsec capable ports first if available). Note that MACSEC is still technically allowed for compatibility reasons,
	// but it does not work with the API, and will be removed in an upcoming major version. Possible values: ["MACSEC",
	// "IF_MACSEC"]
	RequestedFeatures pulumi.StringArrayInput
	// Target number of physical links in the link bundle, as requested by the customer.
	RequestedLinkCount pulumi.Float64Input
	Timeouts           ComputeInterconnectTimeoutsPtrInput
}

func (ComputeInterconnectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInterconnectArgs)(nil)).Elem()
}

type ComputeInterconnectInput interface {
	pulumi.Input

	ToComputeInterconnectOutput() ComputeInterconnectOutput
	ToComputeInterconnectOutputWithContext(ctx context.Context) ComputeInterconnectOutput
}

func (*ComputeInterconnect) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInterconnect)(nil)).Elem()
}

func (i *ComputeInterconnect) ToComputeInterconnectOutput() ComputeInterconnectOutput {
	return i.ToComputeInterconnectOutputWithContext(context.Background())
}

func (i *ComputeInterconnect) ToComputeInterconnectOutputWithContext(ctx context.Context) ComputeInterconnectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInterconnectOutput)
}

type ComputeInterconnectOutput struct{ *pulumi.OutputState }

func (ComputeInterconnectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInterconnect)(nil)).Elem()
}

func (o ComputeInterconnectOutput) ToComputeInterconnectOutput() ComputeInterconnectOutput {
	return o
}

func (o ComputeInterconnectOutput) ToComputeInterconnectOutputWithContext(ctx context.Context) ComputeInterconnectOutput {
	return o
}

// Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry
// traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By
// default, the status is set to true.
func (o ComputeInterconnectOutput) AdminEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.BoolPtrOutput { return v.AdminEnabled }).(pulumi.BoolPtrOutput)
}

// interconnects.list of features available for this Interconnect connection. Can take the value: MACSEC. If present then
// the Interconnect connection is provisioned on MACsec capable hardware ports. If not present then the Interconnect
// connection is provisioned on non-MACsec capable ports and MACsec isn't supported and enabling MACsec fails).
func (o ComputeInterconnectOutput) AvailableFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringArrayOutput { return v.AvailableFeatures }).(pulumi.StringArrayOutput)
}

// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
func (o ComputeInterconnectOutput) CircuitInfos() ComputeInterconnectCircuitInfoArrayOutput {
	return o.ApplyT(func(v *ComputeInterconnect) ComputeInterconnectCircuitInfoArrayOutput { return v.CircuitInfos }).(ComputeInterconnectCircuitInfoArrayOutput)
}

func (o ComputeInterconnectOutput) ComputeInterconnectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.ComputeInterconnectId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeInterconnectOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect. This field is
// required for Dedicated and Partner Interconnect, should not be specified for cross-cloud interconnect.
func (o ComputeInterconnectOutput) CustomerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringPtrOutput { return v.CustomerName }).(pulumi.StringPtrOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o ComputeInterconnectOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ComputeInterconnectOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A list of outages expected for this Interconnect.
func (o ComputeInterconnectOutput) ExpectedOutages() ComputeInterconnectExpectedOutageArrayOutput {
	return o.ApplyT(func(v *ComputeInterconnect) ComputeInterconnectExpectedOutageArrayOutput { return v.ExpectedOutages }).(ComputeInterconnectExpectedOutageArrayOutput)
}

// IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
func (o ComputeInterconnectOutput) GoogleIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.GoogleIpAddress }).(pulumi.StringOutput)
}

// Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity
// issues.
func (o ComputeInterconnectOutput) GoogleReferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.GoogleReferenceId }).(pulumi.StringOutput)
}

// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
func (o ComputeInterconnectOutput) InterconnectAttachments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringArrayOutput { return v.InterconnectAttachments }).(pulumi.StringArrayOutput)
}

// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED. Can take one of the
// following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A
// dedicated physical interconnection with the customer. Possible values: ["DEDICATED", "PARTNER", "IT_PRIVATE"]
func (o ComputeInterconnectOutput) InterconnectType() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.InterconnectType }).(pulumi.StringOutput)
}

// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash of the labels set used for
// optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify
// or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise
// the request will fail with error 412 conditionNotMet.
func (o ComputeInterconnectOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.LabelFingerprint }).(pulumi.StringOutput)
}

// Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must
// comply with RFC1035. Label values may be empty. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o ComputeInterconnectOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Type of link requested. Note that this field indicates the speed of each of the links in the bundle, not the speed of
// the entire bundle. Can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics. -
// LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Possible values: ["LINK_TYPE_ETHERNET_10G_LR",
// "LINK_TYPE_ETHERNET_100G_LR"]
func (o ComputeInterconnectOutput) LinkType() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.LinkType }).(pulumi.StringOutput)
}

// URL of the InterconnectLocation object that represents where this connection is to be provisioned. Specifies the
// location inside Google's Networks, should not be passed in case of cross-cloud interconnect.
func (o ComputeInterconnectOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// Configuration that enables Media Access Control security (MACsec) on the Cloud Interconnect connection between Google
// and your on-premises router.
func (o ComputeInterconnectOutput) Macsec() ComputeInterconnectMacsecPtrOutput {
	return o.ApplyT(func(v *ComputeInterconnect) ComputeInterconnectMacsecPtrOutput { return v.Macsec }).(ComputeInterconnectMacsecPtrOutput)
}

// Enable or disable MACsec on this Interconnect connection. MACsec enablement fails if the MACsec object is not specified.
func (o ComputeInterconnectOutput) MacsecEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.BoolPtrOutput { return v.MacsecEnabled }).(pulumi.BoolPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeInterconnectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If
// specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs
// alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce
// identity federation.
func (o ComputeInterconnectOutput) NocContactEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringPtrOutput { return v.NocContactEmail }).(pulumi.StringPtrOutput)
}

// The current status of this Interconnect's functionality, which can take one of the following: - OS_ACTIVE: A valid
// Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. -
// OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect.
//   - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or
//     updated on this Interconnect.
func (o ComputeInterconnectOutput) OperationalStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.OperationalStatus }).(pulumi.StringOutput)
}

// IP address configured on the customer side of the Interconnect link. The customer should configure this IP address
// during turnup when prompted by Google NOC. This can be used only for ping tests.
func (o ComputeInterconnectOutput) PeerIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.PeerIpAddress }).(pulumi.StringOutput)
}

func (o ComputeInterconnectOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Number of links actually provisioned in this interconnect.
func (o ComputeInterconnectOutput) ProvisionedLinkCount() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.Float64Output { return v.ProvisionedLinkCount }).(pulumi.Float64Output)
}

// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that
// the interconnect is connected to.
func (o ComputeInterconnectOutput) RemoteLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringPtrOutput { return v.RemoteLocation }).(pulumi.StringPtrOutput)
}

// interconnects.list of features requested for this Interconnect connection. Options: IF_MACSEC ( If specified then the
// connection is created on MACsec capable hardware ports. If not specified, the default value is false, which allocates
// non-MACsec capable ports first if available). Note that MACSEC is still technically allowed for compatibility reasons,
// but it does not work with the API, and will be removed in an upcoming major version. Possible values: ["MACSEC",
// "IF_MACSEC"]
func (o ComputeInterconnectOutput) RequestedFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringArrayOutput { return v.RequestedFeatures }).(pulumi.StringArrayOutput)
}

// Target number of physical links in the link bundle, as requested by the customer.
func (o ComputeInterconnectOutput) RequestedLinkCount() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.Float64Output { return v.RequestedLinkCount }).(pulumi.Float64Output)
}

// Reserved for future use.
func (o ComputeInterconnectOutput) SatisfiesPzs() pulumi.BoolOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.BoolOutput { return v.SatisfiesPzs }).(pulumi.BoolOutput)
}

// The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect
// is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The
// Interconnect has not completed turnup. No attachments may b provisioned on this Interconnect. - UNDER_MAINTENANCE: The
// Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
func (o ComputeInterconnectOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ComputeInterconnectOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ComputeInterconnect) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ComputeInterconnectOutput) Timeouts() ComputeInterconnectTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeInterconnect) ComputeInterconnectTimeoutsPtrOutput { return v.Timeouts }).(ComputeInterconnectTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInterconnectInput)(nil)).Elem(), &ComputeInterconnect{})
	pulumi.RegisterOutputType(ComputeInterconnectOutput{})
}
