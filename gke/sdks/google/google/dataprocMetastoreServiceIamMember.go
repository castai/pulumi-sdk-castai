// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataprocMetastoreServiceIamMember struct {
	pulumi.CustomResourceState

	Condition                           DataprocMetastoreServiceIamMemberConditionPtrOutput `pulumi:"condition"`
	DataprocMetastoreServiceIamMemberId pulumi.StringOutput                                 `pulumi:"dataprocMetastoreServiceIamMemberId"`
	Etag                                pulumi.StringOutput                                 `pulumi:"etag"`
	Location                            pulumi.StringOutput                                 `pulumi:"location"`
	Member                              pulumi.StringOutput                                 `pulumi:"member"`
	Project                             pulumi.StringOutput                                 `pulumi:"project"`
	Role                                pulumi.StringOutput                                 `pulumi:"role"`
	ServiceId                           pulumi.StringOutput                                 `pulumi:"serviceId"`
}

// NewDataprocMetastoreServiceIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataprocMetastoreServiceIamMember(ctx *pulumi.Context,
	name string, args *DataprocMetastoreServiceIamMemberArgs, opts ...pulumi.ResourceOption) (*DataprocMetastoreServiceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataprocMetastoreServiceIamMember
	err = ctx.RegisterPackageResource("google:index/dataprocMetastoreServiceIamMember:DataprocMetastoreServiceIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocMetastoreServiceIamMember gets an existing DataprocMetastoreServiceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocMetastoreServiceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocMetastoreServiceIamMemberState, opts ...pulumi.ResourceOption) (*DataprocMetastoreServiceIamMember, error) {
	var resource DataprocMetastoreServiceIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataprocMetastoreServiceIamMember:DataprocMetastoreServiceIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocMetastoreServiceIamMember resources.
type dataprocMetastoreServiceIamMemberState struct {
	Condition                           *DataprocMetastoreServiceIamMemberCondition `pulumi:"condition"`
	DataprocMetastoreServiceIamMemberId *string                                     `pulumi:"dataprocMetastoreServiceIamMemberId"`
	Etag                                *string                                     `pulumi:"etag"`
	Location                            *string                                     `pulumi:"location"`
	Member                              *string                                     `pulumi:"member"`
	Project                             *string                                     `pulumi:"project"`
	Role                                *string                                     `pulumi:"role"`
	ServiceId                           *string                                     `pulumi:"serviceId"`
}

type DataprocMetastoreServiceIamMemberState struct {
	Condition                           DataprocMetastoreServiceIamMemberConditionPtrInput
	DataprocMetastoreServiceIamMemberId pulumi.StringPtrInput
	Etag                                pulumi.StringPtrInput
	Location                            pulumi.StringPtrInput
	Member                              pulumi.StringPtrInput
	Project                             pulumi.StringPtrInput
	Role                                pulumi.StringPtrInput
	ServiceId                           pulumi.StringPtrInput
}

func (DataprocMetastoreServiceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreServiceIamMemberState)(nil)).Elem()
}

type dataprocMetastoreServiceIamMemberArgs struct {
	Condition                           *DataprocMetastoreServiceIamMemberCondition `pulumi:"condition"`
	DataprocMetastoreServiceIamMemberId *string                                     `pulumi:"dataprocMetastoreServiceIamMemberId"`
	Location                            *string                                     `pulumi:"location"`
	Member                              string                                      `pulumi:"member"`
	Project                             *string                                     `pulumi:"project"`
	Role                                string                                      `pulumi:"role"`
	ServiceId                           string                                      `pulumi:"serviceId"`
}

// The set of arguments for constructing a DataprocMetastoreServiceIamMember resource.
type DataprocMetastoreServiceIamMemberArgs struct {
	Condition                           DataprocMetastoreServiceIamMemberConditionPtrInput
	DataprocMetastoreServiceIamMemberId pulumi.StringPtrInput
	Location                            pulumi.StringPtrInput
	Member                              pulumi.StringInput
	Project                             pulumi.StringPtrInput
	Role                                pulumi.StringInput
	ServiceId                           pulumi.StringInput
}

func (DataprocMetastoreServiceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreServiceIamMemberArgs)(nil)).Elem()
}

type DataprocMetastoreServiceIamMemberInput interface {
	pulumi.Input

	ToDataprocMetastoreServiceIamMemberOutput() DataprocMetastoreServiceIamMemberOutput
	ToDataprocMetastoreServiceIamMemberOutputWithContext(ctx context.Context) DataprocMetastoreServiceIamMemberOutput
}

func (*DataprocMetastoreServiceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreServiceIamMember)(nil)).Elem()
}

func (i *DataprocMetastoreServiceIamMember) ToDataprocMetastoreServiceIamMemberOutput() DataprocMetastoreServiceIamMemberOutput {
	return i.ToDataprocMetastoreServiceIamMemberOutputWithContext(context.Background())
}

func (i *DataprocMetastoreServiceIamMember) ToDataprocMetastoreServiceIamMemberOutputWithContext(ctx context.Context) DataprocMetastoreServiceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocMetastoreServiceIamMemberOutput)
}

type DataprocMetastoreServiceIamMemberOutput struct{ *pulumi.OutputState }

func (DataprocMetastoreServiceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreServiceIamMember)(nil)).Elem()
}

func (o DataprocMetastoreServiceIamMemberOutput) ToDataprocMetastoreServiceIamMemberOutput() DataprocMetastoreServiceIamMemberOutput {
	return o
}

func (o DataprocMetastoreServiceIamMemberOutput) ToDataprocMetastoreServiceIamMemberOutputWithContext(ctx context.Context) DataprocMetastoreServiceIamMemberOutput {
	return o
}

func (o DataprocMetastoreServiceIamMemberOutput) Condition() DataprocMetastoreServiceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamMember) DataprocMetastoreServiceIamMemberConditionPtrOutput {
		return v.Condition
	}).(DataprocMetastoreServiceIamMemberConditionPtrOutput)
}

func (o DataprocMetastoreServiceIamMemberOutput) DataprocMetastoreServiceIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamMember) pulumi.StringOutput {
		return v.DataprocMetastoreServiceIamMemberId
	}).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamMemberOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamMember) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocMetastoreServiceIamMemberInput)(nil)).Elem(), &DataprocMetastoreServiceIamMember{})
	pulumi.RegisterOutputType(DataprocMetastoreServiceIamMemberOutput{})
}
