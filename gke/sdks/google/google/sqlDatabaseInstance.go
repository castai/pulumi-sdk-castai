// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SqlDatabaseInstance struct {
	pulumi.CustomResourceState

	// Available Maintenance versions.
	AvailableMaintenanceVersions pulumi.StringArrayOutput `pulumi:"availableMaintenanceVersions"`
	// Configuration for creating a new instance as a clone of another instance.
	Clone SqlDatabaseInstanceClonePtrOutput `pulumi:"clone"`
	// The connection name of the instance to be used in connection strings. For example, when connecting with Cloud SQL Proxy.
	ConnectionName pulumi.StringOutput `pulumi:"connectionName"`
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17, SQLSERVER_2017_STANDARD, SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB. Database
	// Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion    pulumi.StringOutput  `pulumi:"databaseVersion"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// The dns name of the instance.
	DnsName           pulumi.StringOutput `pulumi:"dnsName"`
	EncryptionKeyName pulumi.StringOutput `pulumi:"encryptionKeyName"`
	FirstIpAddress    pulumi.StringOutput `pulumi:"firstIpAddress"`
	// The type of the instance. The valid values are:- 'SQL_INSTANCE_TYPE_UNSPECIFIED', 'CLOUD_SQL_INSTANCE',
	// 'ON_PREMISES_INSTANCE' and 'READ_REPLICA_INSTANCE'.
	InstanceType pulumi.StringOutput                     `pulumi:"instanceType"`
	IpAddresses  SqlDatabaseInstanceIpAddressArrayOutput `pulumi:"ipAddresses"`
	// Maintenance version.
	MaintenanceVersion pulumi.StringOutput `pulumi:"maintenanceVersion"`
	// The name of the instance that will act as the master in the replication setup. Note, this requires the master to have
	// binary_log_enabled set, as well as existing backups.
	MasterInstanceName pulumi.StringOutput `pulumi:"masterInstanceName"`
	Name               pulumi.StringOutput `pulumi:"name"`
	PrivateIpAddress   pulumi.StringOutput `pulumi:"privateIpAddress"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// The link to service attachment of PSC instance.
	PscServiceAttachmentLink pulumi.StringOutput `pulumi:"pscServiceAttachmentLink"`
	PublicIpAddress          pulumi.StringOutput `pulumi:"publicIpAddress"`
	// The region the instance will sit in. Note, Cloud SQL is not available in all regions. A valid region must be provided to
	// use this resource. If a region is not provided in the resource definition, the provider region will be used instead, but
	// this will be an apply-time error for instances if the provider region is not supported with Cloud SQL. If you choose not
	// to provide the region argument for this resource, make sure you understand this.
	Region pulumi.StringOutput `pulumi:"region"`
	// The configuration for replication.
	ReplicaConfiguration SqlDatabaseInstanceReplicaConfigurationPtrOutput `pulumi:"replicaConfiguration"`
	// The replicas of the instance.
	ReplicaNames pulumi.StringArrayOutput `pulumi:"replicaNames"`
	// A primary instance and disaster recovery replica pair. Applicable to MySQL and PostgreSQL. This field can be set only
	// after both the primary and replica are created.
	ReplicationCluster   SqlDatabaseInstanceReplicationClusterPtrOutput   `pulumi:"replicationCluster"`
	RestoreBackupContext SqlDatabaseInstanceRestoreBackupContextPtrOutput `pulumi:"restoreBackupContext"`
	// Initial root password. Required for MS SQL Server.
	RootPassword pulumi.StringPtrOutput `pulumi:"rootPassword"`
	// The URI of the created resource.
	SelfLink      pulumi.StringOutput                        `pulumi:"selfLink"`
	ServerCaCerts SqlDatabaseInstanceServerCaCertArrayOutput `pulumi:"serverCaCerts"`
	// The service account email address assigned to the instance.
	ServiceAccountEmailAddress pulumi.StringOutput `pulumi:"serviceAccountEmailAddress"`
	// The settings to use for the database. The configuration is detailed below.
	Settings              SqlDatabaseInstanceSettingsPtrOutput `pulumi:"settings"`
	SqlDatabaseInstanceId pulumi.StringOutput                  `pulumi:"sqlDatabaseInstanceId"`
	Timeouts              SqlDatabaseInstanceTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewSqlDatabaseInstance registers a new resource with the given unique name, arguments, and options.
func NewSqlDatabaseInstance(ctx *pulumi.Context,
	name string, args *SqlDatabaseInstanceArgs, opts ...pulumi.ResourceOption) (*SqlDatabaseInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseVersion == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseVersion'")
	}
	if args.RootPassword != nil {
		args.RootPassword = pulumi.ToSecret(args.RootPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"rootPassword",
		"serverCaCerts",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SqlDatabaseInstance
	err = ctx.RegisterPackageResource("google:index/sqlDatabaseInstance:SqlDatabaseInstance", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlDatabaseInstance gets an existing SqlDatabaseInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlDatabaseInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlDatabaseInstanceState, opts ...pulumi.ResourceOption) (*SqlDatabaseInstance, error) {
	var resource SqlDatabaseInstance
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/sqlDatabaseInstance:SqlDatabaseInstance", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlDatabaseInstance resources.
type sqlDatabaseInstanceState struct {
	// Available Maintenance versions.
	AvailableMaintenanceVersions []string `pulumi:"availableMaintenanceVersions"`
	// Configuration for creating a new instance as a clone of another instance.
	Clone *SqlDatabaseInstanceClone `pulumi:"clone"`
	// The connection name of the instance to be used in connection strings. For example, when connecting with Cloud SQL Proxy.
	ConnectionName *string `pulumi:"connectionName"`
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17, SQLSERVER_2017_STANDARD, SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB. Database
	// Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion    *string `pulumi:"databaseVersion"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// The dns name of the instance.
	DnsName           *string `pulumi:"dnsName"`
	EncryptionKeyName *string `pulumi:"encryptionKeyName"`
	FirstIpAddress    *string `pulumi:"firstIpAddress"`
	// The type of the instance. The valid values are:- 'SQL_INSTANCE_TYPE_UNSPECIFIED', 'CLOUD_SQL_INSTANCE',
	// 'ON_PREMISES_INSTANCE' and 'READ_REPLICA_INSTANCE'.
	InstanceType *string                        `pulumi:"instanceType"`
	IpAddresses  []SqlDatabaseInstanceIpAddress `pulumi:"ipAddresses"`
	// Maintenance version.
	MaintenanceVersion *string `pulumi:"maintenanceVersion"`
	// The name of the instance that will act as the master in the replication setup. Note, this requires the master to have
	// binary_log_enabled set, as well as existing backups.
	MasterInstanceName *string `pulumi:"masterInstanceName"`
	Name               *string `pulumi:"name"`
	PrivateIpAddress   *string `pulumi:"privateIpAddress"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The link to service attachment of PSC instance.
	PscServiceAttachmentLink *string `pulumi:"pscServiceAttachmentLink"`
	PublicIpAddress          *string `pulumi:"publicIpAddress"`
	// The region the instance will sit in. Note, Cloud SQL is not available in all regions. A valid region must be provided to
	// use this resource. If a region is not provided in the resource definition, the provider region will be used instead, but
	// this will be an apply-time error for instances if the provider region is not supported with Cloud SQL. If you choose not
	// to provide the region argument for this resource, make sure you understand this.
	Region *string `pulumi:"region"`
	// The configuration for replication.
	ReplicaConfiguration *SqlDatabaseInstanceReplicaConfiguration `pulumi:"replicaConfiguration"`
	// The replicas of the instance.
	ReplicaNames []string `pulumi:"replicaNames"`
	// A primary instance and disaster recovery replica pair. Applicable to MySQL and PostgreSQL. This field can be set only
	// after both the primary and replica are created.
	ReplicationCluster   *SqlDatabaseInstanceReplicationCluster   `pulumi:"replicationCluster"`
	RestoreBackupContext *SqlDatabaseInstanceRestoreBackupContext `pulumi:"restoreBackupContext"`
	// Initial root password. Required for MS SQL Server.
	RootPassword *string `pulumi:"rootPassword"`
	// The URI of the created resource.
	SelfLink      *string                           `pulumi:"selfLink"`
	ServerCaCerts []SqlDatabaseInstanceServerCaCert `pulumi:"serverCaCerts"`
	// The service account email address assigned to the instance.
	ServiceAccountEmailAddress *string `pulumi:"serviceAccountEmailAddress"`
	// The settings to use for the database. The configuration is detailed below.
	Settings              *SqlDatabaseInstanceSettings `pulumi:"settings"`
	SqlDatabaseInstanceId *string                      `pulumi:"sqlDatabaseInstanceId"`
	Timeouts              *SqlDatabaseInstanceTimeouts `pulumi:"timeouts"`
}

type SqlDatabaseInstanceState struct {
	// Available Maintenance versions.
	AvailableMaintenanceVersions pulumi.StringArrayInput
	// Configuration for creating a new instance as a clone of another instance.
	Clone SqlDatabaseInstanceClonePtrInput
	// The connection name of the instance to be used in connection strings. For example, when connecting with Cloud SQL Proxy.
	ConnectionName pulumi.StringPtrInput
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17, SQLSERVER_2017_STANDARD, SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB. Database
	// Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion    pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// The dns name of the instance.
	DnsName           pulumi.StringPtrInput
	EncryptionKeyName pulumi.StringPtrInput
	FirstIpAddress    pulumi.StringPtrInput
	// The type of the instance. The valid values are:- 'SQL_INSTANCE_TYPE_UNSPECIFIED', 'CLOUD_SQL_INSTANCE',
	// 'ON_PREMISES_INSTANCE' and 'READ_REPLICA_INSTANCE'.
	InstanceType pulumi.StringPtrInput
	IpAddresses  SqlDatabaseInstanceIpAddressArrayInput
	// Maintenance version.
	MaintenanceVersion pulumi.StringPtrInput
	// The name of the instance that will act as the master in the replication setup. Note, this requires the master to have
	// binary_log_enabled set, as well as existing backups.
	MasterInstanceName pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
	PrivateIpAddress   pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The link to service attachment of PSC instance.
	PscServiceAttachmentLink pulumi.StringPtrInput
	PublicIpAddress          pulumi.StringPtrInput
	// The region the instance will sit in. Note, Cloud SQL is not available in all regions. A valid region must be provided to
	// use this resource. If a region is not provided in the resource definition, the provider region will be used instead, but
	// this will be an apply-time error for instances if the provider region is not supported with Cloud SQL. If you choose not
	// to provide the region argument for this resource, make sure you understand this.
	Region pulumi.StringPtrInput
	// The configuration for replication.
	ReplicaConfiguration SqlDatabaseInstanceReplicaConfigurationPtrInput
	// The replicas of the instance.
	ReplicaNames pulumi.StringArrayInput
	// A primary instance and disaster recovery replica pair. Applicable to MySQL and PostgreSQL. This field can be set only
	// after both the primary and replica are created.
	ReplicationCluster   SqlDatabaseInstanceReplicationClusterPtrInput
	RestoreBackupContext SqlDatabaseInstanceRestoreBackupContextPtrInput
	// Initial root password. Required for MS SQL Server.
	RootPassword pulumi.StringPtrInput
	// The URI of the created resource.
	SelfLink      pulumi.StringPtrInput
	ServerCaCerts SqlDatabaseInstanceServerCaCertArrayInput
	// The service account email address assigned to the instance.
	ServiceAccountEmailAddress pulumi.StringPtrInput
	// The settings to use for the database. The configuration is detailed below.
	Settings              SqlDatabaseInstanceSettingsPtrInput
	SqlDatabaseInstanceId pulumi.StringPtrInput
	Timeouts              SqlDatabaseInstanceTimeoutsPtrInput
}

func (SqlDatabaseInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlDatabaseInstanceState)(nil)).Elem()
}

type sqlDatabaseInstanceArgs struct {
	// Configuration for creating a new instance as a clone of another instance.
	Clone *SqlDatabaseInstanceClone `pulumi:"clone"`
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17, SQLSERVER_2017_STANDARD, SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB. Database
	// Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion    string  `pulumi:"databaseVersion"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	EncryptionKeyName  *string `pulumi:"encryptionKeyName"`
	// The type of the instance. The valid values are:- 'SQL_INSTANCE_TYPE_UNSPECIFIED', 'CLOUD_SQL_INSTANCE',
	// 'ON_PREMISES_INSTANCE' and 'READ_REPLICA_INSTANCE'.
	InstanceType *string `pulumi:"instanceType"`
	// Maintenance version.
	MaintenanceVersion *string `pulumi:"maintenanceVersion"`
	// The name of the instance that will act as the master in the replication setup. Note, this requires the master to have
	// binary_log_enabled set, as well as existing backups.
	MasterInstanceName *string `pulumi:"masterInstanceName"`
	Name               *string `pulumi:"name"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// The region the instance will sit in. Note, Cloud SQL is not available in all regions. A valid region must be provided to
	// use this resource. If a region is not provided in the resource definition, the provider region will be used instead, but
	// this will be an apply-time error for instances if the provider region is not supported with Cloud SQL. If you choose not
	// to provide the region argument for this resource, make sure you understand this.
	Region *string `pulumi:"region"`
	// The configuration for replication.
	ReplicaConfiguration *SqlDatabaseInstanceReplicaConfiguration `pulumi:"replicaConfiguration"`
	// The replicas of the instance.
	ReplicaNames []string `pulumi:"replicaNames"`
	// A primary instance and disaster recovery replica pair. Applicable to MySQL and PostgreSQL. This field can be set only
	// after both the primary and replica are created.
	ReplicationCluster   *SqlDatabaseInstanceReplicationCluster   `pulumi:"replicationCluster"`
	RestoreBackupContext *SqlDatabaseInstanceRestoreBackupContext `pulumi:"restoreBackupContext"`
	// Initial root password. Required for MS SQL Server.
	RootPassword *string `pulumi:"rootPassword"`
	// The settings to use for the database. The configuration is detailed below.
	Settings              *SqlDatabaseInstanceSettings `pulumi:"settings"`
	SqlDatabaseInstanceId *string                      `pulumi:"sqlDatabaseInstanceId"`
	Timeouts              *SqlDatabaseInstanceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SqlDatabaseInstance resource.
type SqlDatabaseInstanceArgs struct {
	// Configuration for creating a new instance as a clone of another instance.
	Clone SqlDatabaseInstanceClonePtrInput
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17, SQLSERVER_2017_STANDARD, SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB. Database
	// Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion    pulumi.StringInput
	DeletionProtection pulumi.BoolPtrInput
	EncryptionKeyName  pulumi.StringPtrInput
	// The type of the instance. The valid values are:- 'SQL_INSTANCE_TYPE_UNSPECIFIED', 'CLOUD_SQL_INSTANCE',
	// 'ON_PREMISES_INSTANCE' and 'READ_REPLICA_INSTANCE'.
	InstanceType pulumi.StringPtrInput
	// Maintenance version.
	MaintenanceVersion pulumi.StringPtrInput
	// The name of the instance that will act as the master in the replication setup. Note, this requires the master to have
	// binary_log_enabled set, as well as existing backups.
	MasterInstanceName pulumi.StringPtrInput
	Name               pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// The region the instance will sit in. Note, Cloud SQL is not available in all regions. A valid region must be provided to
	// use this resource. If a region is not provided in the resource definition, the provider region will be used instead, but
	// this will be an apply-time error for instances if the provider region is not supported with Cloud SQL. If you choose not
	// to provide the region argument for this resource, make sure you understand this.
	Region pulumi.StringPtrInput
	// The configuration for replication.
	ReplicaConfiguration SqlDatabaseInstanceReplicaConfigurationPtrInput
	// The replicas of the instance.
	ReplicaNames pulumi.StringArrayInput
	// A primary instance and disaster recovery replica pair. Applicable to MySQL and PostgreSQL. This field can be set only
	// after both the primary and replica are created.
	ReplicationCluster   SqlDatabaseInstanceReplicationClusterPtrInput
	RestoreBackupContext SqlDatabaseInstanceRestoreBackupContextPtrInput
	// Initial root password. Required for MS SQL Server.
	RootPassword pulumi.StringPtrInput
	// The settings to use for the database. The configuration is detailed below.
	Settings              SqlDatabaseInstanceSettingsPtrInput
	SqlDatabaseInstanceId pulumi.StringPtrInput
	Timeouts              SqlDatabaseInstanceTimeoutsPtrInput
}

func (SqlDatabaseInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlDatabaseInstanceArgs)(nil)).Elem()
}

type SqlDatabaseInstanceInput interface {
	pulumi.Input

	ToSqlDatabaseInstanceOutput() SqlDatabaseInstanceOutput
	ToSqlDatabaseInstanceOutputWithContext(ctx context.Context) SqlDatabaseInstanceOutput
}

func (*SqlDatabaseInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseInstance)(nil)).Elem()
}

func (i *SqlDatabaseInstance) ToSqlDatabaseInstanceOutput() SqlDatabaseInstanceOutput {
	return i.ToSqlDatabaseInstanceOutputWithContext(context.Background())
}

func (i *SqlDatabaseInstance) ToSqlDatabaseInstanceOutputWithContext(ctx context.Context) SqlDatabaseInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseInstanceOutput)
}

type SqlDatabaseInstanceOutput struct{ *pulumi.OutputState }

func (SqlDatabaseInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabaseInstance)(nil)).Elem()
}

func (o SqlDatabaseInstanceOutput) ToSqlDatabaseInstanceOutput() SqlDatabaseInstanceOutput {
	return o
}

func (o SqlDatabaseInstanceOutput) ToSqlDatabaseInstanceOutputWithContext(ctx context.Context) SqlDatabaseInstanceOutput {
	return o
}

// Available Maintenance versions.
func (o SqlDatabaseInstanceOutput) AvailableMaintenanceVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringArrayOutput { return v.AvailableMaintenanceVersions }).(pulumi.StringArrayOutput)
}

// Configuration for creating a new instance as a clone of another instance.
func (o SqlDatabaseInstanceOutput) Clone() SqlDatabaseInstanceClonePtrOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) SqlDatabaseInstanceClonePtrOutput { return v.Clone }).(SqlDatabaseInstanceClonePtrOutput)
}

// The connection name of the instance to be used in connection strings. For example, when connecting with Cloud SQL Proxy.
func (o SqlDatabaseInstanceOutput) ConnectionName() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.ConnectionName }).(pulumi.StringOutput)
}

// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
// POSTGRES_17, SQLSERVER_2017_STANDARD, SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB. Database
// Version Policies includes an up-to-date reference of supported versions.
func (o SqlDatabaseInstanceOutput) DatabaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.DatabaseVersion }).(pulumi.StringOutput)
}

func (o SqlDatabaseInstanceOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// The dns name of the instance.
func (o SqlDatabaseInstanceOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

func (o SqlDatabaseInstanceOutput) EncryptionKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.EncryptionKeyName }).(pulumi.StringOutput)
}

func (o SqlDatabaseInstanceOutput) FirstIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.FirstIpAddress }).(pulumi.StringOutput)
}

// The type of the instance. The valid values are:- 'SQL_INSTANCE_TYPE_UNSPECIFIED', 'CLOUD_SQL_INSTANCE',
// 'ON_PREMISES_INSTANCE' and 'READ_REPLICA_INSTANCE'.
func (o SqlDatabaseInstanceOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

func (o SqlDatabaseInstanceOutput) IpAddresses() SqlDatabaseInstanceIpAddressArrayOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) SqlDatabaseInstanceIpAddressArrayOutput { return v.IpAddresses }).(SqlDatabaseInstanceIpAddressArrayOutput)
}

// Maintenance version.
func (o SqlDatabaseInstanceOutput) MaintenanceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.MaintenanceVersion }).(pulumi.StringOutput)
}

// The name of the instance that will act as the master in the replication setup. Note, this requires the master to have
// binary_log_enabled set, as well as existing backups.
func (o SqlDatabaseInstanceOutput) MasterInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.MasterInstanceName }).(pulumi.StringOutput)
}

func (o SqlDatabaseInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SqlDatabaseInstanceOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
func (o SqlDatabaseInstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The link to service attachment of PSC instance.
func (o SqlDatabaseInstanceOutput) PscServiceAttachmentLink() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.PscServiceAttachmentLink }).(pulumi.StringOutput)
}

func (o SqlDatabaseInstanceOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The region the instance will sit in. Note, Cloud SQL is not available in all regions. A valid region must be provided to
// use this resource. If a region is not provided in the resource definition, the provider region will be used instead, but
// this will be an apply-time error for instances if the provider region is not supported with Cloud SQL. If you choose not
// to provide the region argument for this resource, make sure you understand this.
func (o SqlDatabaseInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The configuration for replication.
func (o SqlDatabaseInstanceOutput) ReplicaConfiguration() SqlDatabaseInstanceReplicaConfigurationPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) SqlDatabaseInstanceReplicaConfigurationPtrOutput {
		return v.ReplicaConfiguration
	}).(SqlDatabaseInstanceReplicaConfigurationPtrOutput)
}

// The replicas of the instance.
func (o SqlDatabaseInstanceOutput) ReplicaNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringArrayOutput { return v.ReplicaNames }).(pulumi.StringArrayOutput)
}

// A primary instance and disaster recovery replica pair. Applicable to MySQL and PostgreSQL. This field can be set only
// after both the primary and replica are created.
func (o SqlDatabaseInstanceOutput) ReplicationCluster() SqlDatabaseInstanceReplicationClusterPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) SqlDatabaseInstanceReplicationClusterPtrOutput {
		return v.ReplicationCluster
	}).(SqlDatabaseInstanceReplicationClusterPtrOutput)
}

func (o SqlDatabaseInstanceOutput) RestoreBackupContext() SqlDatabaseInstanceRestoreBackupContextPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) SqlDatabaseInstanceRestoreBackupContextPtrOutput {
		return v.RestoreBackupContext
	}).(SqlDatabaseInstanceRestoreBackupContextPtrOutput)
}

// Initial root password. Required for MS SQL Server.
func (o SqlDatabaseInstanceOutput) RootPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringPtrOutput { return v.RootPassword }).(pulumi.StringPtrOutput)
}

// The URI of the created resource.
func (o SqlDatabaseInstanceOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

func (o SqlDatabaseInstanceOutput) ServerCaCerts() SqlDatabaseInstanceServerCaCertArrayOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) SqlDatabaseInstanceServerCaCertArrayOutput { return v.ServerCaCerts }).(SqlDatabaseInstanceServerCaCertArrayOutput)
}

// The service account email address assigned to the instance.
func (o SqlDatabaseInstanceOutput) ServiceAccountEmailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.ServiceAccountEmailAddress }).(pulumi.StringOutput)
}

// The settings to use for the database. The configuration is detailed below.
func (o SqlDatabaseInstanceOutput) Settings() SqlDatabaseInstanceSettingsPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) SqlDatabaseInstanceSettingsPtrOutput { return v.Settings }).(SqlDatabaseInstanceSettingsPtrOutput)
}

func (o SqlDatabaseInstanceOutput) SqlDatabaseInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) pulumi.StringOutput { return v.SqlDatabaseInstanceId }).(pulumi.StringOutput)
}

func (o SqlDatabaseInstanceOutput) Timeouts() SqlDatabaseInstanceTimeoutsPtrOutput {
	return o.ApplyT(func(v *SqlDatabaseInstance) SqlDatabaseInstanceTimeoutsPtrOutput { return v.Timeouts }).(SqlDatabaseInstanceTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SqlDatabaseInstanceInput)(nil)).Elem(), &SqlDatabaseInstance{})
	pulumi.RegisterOutputType(SqlDatabaseInstanceOutput{})
}
