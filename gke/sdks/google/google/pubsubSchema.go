// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PubsubSchema struct {
	pulumi.CustomResourceState

	// The definition of the schema. This should contain a string representing the full definition of the schema that is a
	// valid schema definition of the type specified in type. Changes to the definition commit new [schema
	// revisions](https://cloud.google.com/pubsub/docs/commit-schema-revision). A schema can only have up to 20 revisions, so
	// updates that fail with an error indicating that the limit has been reached require manually [deleting old
	// revisions](https://cloud.google.com/pubsub/docs/delete-schema-revision).
	Definition pulumi.StringPtrOutput `pulumi:"definition"`
	// The ID to use for the schema, which will become the final component of the schema's resource name.
	Name           pulumi.StringOutput           `pulumi:"name"`
	Project        pulumi.StringOutput           `pulumi:"project"`
	PubsubSchemaId pulumi.StringOutput           `pulumi:"pubsubSchemaId"`
	Timeouts       PubsubSchemaTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type of the schema definition Default value: "TYPE_UNSPECIFIED" Possible values: ["TYPE_UNSPECIFIED",
	// "PROTOCOL_BUFFER", "AVRO"]
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewPubsubSchema registers a new resource with the given unique name, arguments, and options.
func NewPubsubSchema(ctx *pulumi.Context,
	name string, args *PubsubSchemaArgs, opts ...pulumi.ResourceOption) (*PubsubSchema, error) {
	if args == nil {
		args = &PubsubSchemaArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource PubsubSchema
	err = ctx.RegisterPackageResource("google:index/pubsubSchema:PubsubSchema", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPubsubSchema gets an existing PubsubSchema resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPubsubSchema(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PubsubSchemaState, opts ...pulumi.ResourceOption) (*PubsubSchema, error) {
	var resource PubsubSchema
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/pubsubSchema:PubsubSchema", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PubsubSchema resources.
type pubsubSchemaState struct {
	// The definition of the schema. This should contain a string representing the full definition of the schema that is a
	// valid schema definition of the type specified in type. Changes to the definition commit new [schema
	// revisions](https://cloud.google.com/pubsub/docs/commit-schema-revision). A schema can only have up to 20 revisions, so
	// updates that fail with an error indicating that the limit has been reached require manually [deleting old
	// revisions](https://cloud.google.com/pubsub/docs/delete-schema-revision).
	Definition *string `pulumi:"definition"`
	// The ID to use for the schema, which will become the final component of the schema's resource name.
	Name           *string               `pulumi:"name"`
	Project        *string               `pulumi:"project"`
	PubsubSchemaId *string               `pulumi:"pubsubSchemaId"`
	Timeouts       *PubsubSchemaTimeouts `pulumi:"timeouts"`
	// The type of the schema definition Default value: "TYPE_UNSPECIFIED" Possible values: ["TYPE_UNSPECIFIED",
	// "PROTOCOL_BUFFER", "AVRO"]
	Type *string `pulumi:"type"`
}

type PubsubSchemaState struct {
	// The definition of the schema. This should contain a string representing the full definition of the schema that is a
	// valid schema definition of the type specified in type. Changes to the definition commit new [schema
	// revisions](https://cloud.google.com/pubsub/docs/commit-schema-revision). A schema can only have up to 20 revisions, so
	// updates that fail with an error indicating that the limit has been reached require manually [deleting old
	// revisions](https://cloud.google.com/pubsub/docs/delete-schema-revision).
	Definition pulumi.StringPtrInput
	// The ID to use for the schema, which will become the final component of the schema's resource name.
	Name           pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	PubsubSchemaId pulumi.StringPtrInput
	Timeouts       PubsubSchemaTimeoutsPtrInput
	// The type of the schema definition Default value: "TYPE_UNSPECIFIED" Possible values: ["TYPE_UNSPECIFIED",
	// "PROTOCOL_BUFFER", "AVRO"]
	Type pulumi.StringPtrInput
}

func (PubsubSchemaState) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubSchemaState)(nil)).Elem()
}

type pubsubSchemaArgs struct {
	// The definition of the schema. This should contain a string representing the full definition of the schema that is a
	// valid schema definition of the type specified in type. Changes to the definition commit new [schema
	// revisions](https://cloud.google.com/pubsub/docs/commit-schema-revision). A schema can only have up to 20 revisions, so
	// updates that fail with an error indicating that the limit has been reached require manually [deleting old
	// revisions](https://cloud.google.com/pubsub/docs/delete-schema-revision).
	Definition *string `pulumi:"definition"`
	// The ID to use for the schema, which will become the final component of the schema's resource name.
	Name           *string               `pulumi:"name"`
	Project        *string               `pulumi:"project"`
	PubsubSchemaId *string               `pulumi:"pubsubSchemaId"`
	Timeouts       *PubsubSchemaTimeouts `pulumi:"timeouts"`
	// The type of the schema definition Default value: "TYPE_UNSPECIFIED" Possible values: ["TYPE_UNSPECIFIED",
	// "PROTOCOL_BUFFER", "AVRO"]
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a PubsubSchema resource.
type PubsubSchemaArgs struct {
	// The definition of the schema. This should contain a string representing the full definition of the schema that is a
	// valid schema definition of the type specified in type. Changes to the definition commit new [schema
	// revisions](https://cloud.google.com/pubsub/docs/commit-schema-revision). A schema can only have up to 20 revisions, so
	// updates that fail with an error indicating that the limit has been reached require manually [deleting old
	// revisions](https://cloud.google.com/pubsub/docs/delete-schema-revision).
	Definition pulumi.StringPtrInput
	// The ID to use for the schema, which will become the final component of the schema's resource name.
	Name           pulumi.StringPtrInput
	Project        pulumi.StringPtrInput
	PubsubSchemaId pulumi.StringPtrInput
	Timeouts       PubsubSchemaTimeoutsPtrInput
	// The type of the schema definition Default value: "TYPE_UNSPECIFIED" Possible values: ["TYPE_UNSPECIFIED",
	// "PROTOCOL_BUFFER", "AVRO"]
	Type pulumi.StringPtrInput
}

func (PubsubSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubSchemaArgs)(nil)).Elem()
}

type PubsubSchemaInput interface {
	pulumi.Input

	ToPubsubSchemaOutput() PubsubSchemaOutput
	ToPubsubSchemaOutputWithContext(ctx context.Context) PubsubSchemaOutput
}

func (*PubsubSchema) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubSchema)(nil)).Elem()
}

func (i *PubsubSchema) ToPubsubSchemaOutput() PubsubSchemaOutput {
	return i.ToPubsubSchemaOutputWithContext(context.Background())
}

func (i *PubsubSchema) ToPubsubSchemaOutputWithContext(ctx context.Context) PubsubSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PubsubSchemaOutput)
}

type PubsubSchemaOutput struct{ *pulumi.OutputState }

func (PubsubSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubSchema)(nil)).Elem()
}

func (o PubsubSchemaOutput) ToPubsubSchemaOutput() PubsubSchemaOutput {
	return o
}

func (o PubsubSchemaOutput) ToPubsubSchemaOutputWithContext(ctx context.Context) PubsubSchemaOutput {
	return o
}

// The definition of the schema. This should contain a string representing the full definition of the schema that is a
// valid schema definition of the type specified in type. Changes to the definition commit new [schema
// revisions](https://cloud.google.com/pubsub/docs/commit-schema-revision). A schema can only have up to 20 revisions, so
// updates that fail with an error indicating that the limit has been reached require manually [deleting old
// revisions](https://cloud.google.com/pubsub/docs/delete-schema-revision).
func (o PubsubSchemaOutput) Definition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PubsubSchema) pulumi.StringPtrOutput { return v.Definition }).(pulumi.StringPtrOutput)
}

// The ID to use for the schema, which will become the final component of the schema's resource name.
func (o PubsubSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubSchema) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PubsubSchemaOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubSchema) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o PubsubSchemaOutput) PubsubSchemaId() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubSchema) pulumi.StringOutput { return v.PubsubSchemaId }).(pulumi.StringOutput)
}

func (o PubsubSchemaOutput) Timeouts() PubsubSchemaTimeoutsPtrOutput {
	return o.ApplyT(func(v *PubsubSchema) PubsubSchemaTimeoutsPtrOutput { return v.Timeouts }).(PubsubSchemaTimeoutsPtrOutput)
}

// The type of the schema definition Default value: "TYPE_UNSPECIFIED" Possible values: ["TYPE_UNSPECIFIED",
// "PROTOCOL_BUFFER", "AVRO"]
func (o PubsubSchemaOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PubsubSchema) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PubsubSchemaInput)(nil)).Elem(), &PubsubSchema{})
	pulumi.RegisterOutputType(PubsubSchemaOutput{})
}
