// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationPolicy struct {
	pulumi.CustomResourceState

	// A boolean policy is a constraint that is either enforced or not.
	BooleanPolicy OrganizationPolicyBooleanPolicyPtrOutput `pulumi:"booleanPolicy"`
	// The name of the Constraint the Policy is configuring, for example, serviceuser.services.
	Constraint pulumi.StringOutput `pulumi:"constraint"`
	// The etag of the organization policy. etag is used for optimistic concurrency control as a way to help prevent
	// simultaneous updates of a policy from overwriting each other.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// A policy that can define specific values that are allowed or denied for the given constraint. It can also be used to
	// allow or deny all values.
	ListPolicy           OrganizationPolicyListPolicyPtrOutput `pulumi:"listPolicy"`
	OrgId                pulumi.StringOutput                   `pulumi:"orgId"`
	OrganizationPolicyId pulumi.StringOutput                   `pulumi:"organizationPolicyId"`
	// A restore policy is a constraint to restore the default policy.
	RestorePolicy OrganizationPolicyRestorePolicyPtrOutput `pulumi:"restorePolicy"`
	Timeouts      OrganizationPolicyTimeoutsPtrOutput      `pulumi:"timeouts"`
	// The timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds, representing when the variable was last updated.
	// Example: "2016-10-09T12:33:37.578138407Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Version of the Policy. Default version is 0.
	Version pulumi.Float64Output `pulumi:"version"`
}

// NewOrganizationPolicy registers a new resource with the given unique name, arguments, and options.
func NewOrganizationPolicy(ctx *pulumi.Context,
	name string, args *OrganizationPolicyArgs, opts ...pulumi.ResourceOption) (*OrganizationPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Constraint == nil {
		return nil, errors.New("invalid value for required argument 'Constraint'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource OrganizationPolicy
	err = ctx.RegisterPackageResource("google:index/organizationPolicy:OrganizationPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationPolicy gets an existing OrganizationPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationPolicyState, opts ...pulumi.ResourceOption) (*OrganizationPolicy, error) {
	var resource OrganizationPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/organizationPolicy:OrganizationPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationPolicy resources.
type organizationPolicyState struct {
	// A boolean policy is a constraint that is either enforced or not.
	BooleanPolicy *OrganizationPolicyBooleanPolicy `pulumi:"booleanPolicy"`
	// The name of the Constraint the Policy is configuring, for example, serviceuser.services.
	Constraint *string `pulumi:"constraint"`
	// The etag of the organization policy. etag is used for optimistic concurrency control as a way to help prevent
	// simultaneous updates of a policy from overwriting each other.
	Etag *string `pulumi:"etag"`
	// A policy that can define specific values that are allowed or denied for the given constraint. It can also be used to
	// allow or deny all values.
	ListPolicy           *OrganizationPolicyListPolicy `pulumi:"listPolicy"`
	OrgId                *string                       `pulumi:"orgId"`
	OrganizationPolicyId *string                       `pulumi:"organizationPolicyId"`
	// A restore policy is a constraint to restore the default policy.
	RestorePolicy *OrganizationPolicyRestorePolicy `pulumi:"restorePolicy"`
	Timeouts      *OrganizationPolicyTimeouts      `pulumi:"timeouts"`
	// The timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds, representing when the variable was last updated.
	// Example: "2016-10-09T12:33:37.578138407Z".
	UpdateTime *string `pulumi:"updateTime"`
	// Version of the Policy. Default version is 0.
	Version *float64 `pulumi:"version"`
}

type OrganizationPolicyState struct {
	// A boolean policy is a constraint that is either enforced or not.
	BooleanPolicy OrganizationPolicyBooleanPolicyPtrInput
	// The name of the Constraint the Policy is configuring, for example, serviceuser.services.
	Constraint pulumi.StringPtrInput
	// The etag of the organization policy. etag is used for optimistic concurrency control as a way to help prevent
	// simultaneous updates of a policy from overwriting each other.
	Etag pulumi.StringPtrInput
	// A policy that can define specific values that are allowed or denied for the given constraint. It can also be used to
	// allow or deny all values.
	ListPolicy           OrganizationPolicyListPolicyPtrInput
	OrgId                pulumi.StringPtrInput
	OrganizationPolicyId pulumi.StringPtrInput
	// A restore policy is a constraint to restore the default policy.
	RestorePolicy OrganizationPolicyRestorePolicyPtrInput
	Timeouts      OrganizationPolicyTimeoutsPtrInput
	// The timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds, representing when the variable was last updated.
	// Example: "2016-10-09T12:33:37.578138407Z".
	UpdateTime pulumi.StringPtrInput
	// Version of the Policy. Default version is 0.
	Version pulumi.Float64PtrInput
}

func (OrganizationPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationPolicyState)(nil)).Elem()
}

type organizationPolicyArgs struct {
	// A boolean policy is a constraint that is either enforced or not.
	BooleanPolicy *OrganizationPolicyBooleanPolicy `pulumi:"booleanPolicy"`
	// The name of the Constraint the Policy is configuring, for example, serviceuser.services.
	Constraint string `pulumi:"constraint"`
	// A policy that can define specific values that are allowed or denied for the given constraint. It can also be used to
	// allow or deny all values.
	ListPolicy           *OrganizationPolicyListPolicy `pulumi:"listPolicy"`
	OrgId                string                        `pulumi:"orgId"`
	OrganizationPolicyId *string                       `pulumi:"organizationPolicyId"`
	// A restore policy is a constraint to restore the default policy.
	RestorePolicy *OrganizationPolicyRestorePolicy `pulumi:"restorePolicy"`
	Timeouts      *OrganizationPolicyTimeouts      `pulumi:"timeouts"`
	// Version of the Policy. Default version is 0.
	Version *float64 `pulumi:"version"`
}

// The set of arguments for constructing a OrganizationPolicy resource.
type OrganizationPolicyArgs struct {
	// A boolean policy is a constraint that is either enforced or not.
	BooleanPolicy OrganizationPolicyBooleanPolicyPtrInput
	// The name of the Constraint the Policy is configuring, for example, serviceuser.services.
	Constraint pulumi.StringInput
	// A policy that can define specific values that are allowed or denied for the given constraint. It can also be used to
	// allow or deny all values.
	ListPolicy           OrganizationPolicyListPolicyPtrInput
	OrgId                pulumi.StringInput
	OrganizationPolicyId pulumi.StringPtrInput
	// A restore policy is a constraint to restore the default policy.
	RestorePolicy OrganizationPolicyRestorePolicyPtrInput
	Timeouts      OrganizationPolicyTimeoutsPtrInput
	// Version of the Policy. Default version is 0.
	Version pulumi.Float64PtrInput
}

func (OrganizationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationPolicyArgs)(nil)).Elem()
}

type OrganizationPolicyInput interface {
	pulumi.Input

	ToOrganizationPolicyOutput() OrganizationPolicyOutput
	ToOrganizationPolicyOutputWithContext(ctx context.Context) OrganizationPolicyOutput
}

func (*OrganizationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicy)(nil)).Elem()
}

func (i *OrganizationPolicy) ToOrganizationPolicyOutput() OrganizationPolicyOutput {
	return i.ToOrganizationPolicyOutputWithContext(context.Background())
}

func (i *OrganizationPolicy) ToOrganizationPolicyOutputWithContext(ctx context.Context) OrganizationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationPolicyOutput)
}

type OrganizationPolicyOutput struct{ *pulumi.OutputState }

func (OrganizationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationPolicy)(nil)).Elem()
}

func (o OrganizationPolicyOutput) ToOrganizationPolicyOutput() OrganizationPolicyOutput {
	return o
}

func (o OrganizationPolicyOutput) ToOrganizationPolicyOutputWithContext(ctx context.Context) OrganizationPolicyOutput {
	return o
}

// A boolean policy is a constraint that is either enforced or not.
func (o OrganizationPolicyOutput) BooleanPolicy() OrganizationPolicyBooleanPolicyPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicy) OrganizationPolicyBooleanPolicyPtrOutput { return v.BooleanPolicy }).(OrganizationPolicyBooleanPolicyPtrOutput)
}

// The name of the Constraint the Policy is configuring, for example, serviceuser.services.
func (o OrganizationPolicyOutput) Constraint() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationPolicy) pulumi.StringOutput { return v.Constraint }).(pulumi.StringOutput)
}

// The etag of the organization policy. etag is used for optimistic concurrency control as a way to help prevent
// simultaneous updates of a policy from overwriting each other.
func (o OrganizationPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// A policy that can define specific values that are allowed or denied for the given constraint. It can also be used to
// allow or deny all values.
func (o OrganizationPolicyOutput) ListPolicy() OrganizationPolicyListPolicyPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicy) OrganizationPolicyListPolicyPtrOutput { return v.ListPolicy }).(OrganizationPolicyListPolicyPtrOutput)
}

func (o OrganizationPolicyOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationPolicy) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

func (o OrganizationPolicyOutput) OrganizationPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationPolicy) pulumi.StringOutput { return v.OrganizationPolicyId }).(pulumi.StringOutput)
}

// A restore policy is a constraint to restore the default policy.
func (o OrganizationPolicyOutput) RestorePolicy() OrganizationPolicyRestorePolicyPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicy) OrganizationPolicyRestorePolicyPtrOutput { return v.RestorePolicy }).(OrganizationPolicyRestorePolicyPtrOutput)
}

func (o OrganizationPolicyOutput) Timeouts() OrganizationPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *OrganizationPolicy) OrganizationPolicyTimeoutsPtrOutput { return v.Timeouts }).(OrganizationPolicyTimeoutsPtrOutput)
}

// The timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds, representing when the variable was last updated.
// Example: "2016-10-09T12:33:37.578138407Z".
func (o OrganizationPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Version of the Policy. Default version is 0.
func (o OrganizationPolicyOutput) Version() pulumi.Float64Output {
	return o.ApplyT(func(v *OrganizationPolicy) pulumi.Float64Output { return v.Version }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationPolicyInput)(nil)).Elem(), &OrganizationPolicy{})
	pulumi.RegisterOutputType(OrganizationPolicyOutput{})
}
