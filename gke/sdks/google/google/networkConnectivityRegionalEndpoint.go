// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkConnectivityRegionalEndpoint struct {
	pulumi.CustomResourceState

	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable
	// global access. Possible values: ["GLOBAL", "REGIONAL"]
	AccessType pulumi.StringOutput `pulumi:"accessType"`
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of
	// the following formats: * IPv4 address as in '10.0.0.1' * Address resource URI as in
	// 'projects/{project}/regions/{region}/addresses/{address_name}' > **Note:** This field accepts both a reference to a
	// Compute Address resource, which is the resource name of which format is given in the description, and IP literal value.
	// If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4
	// version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an
	// IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address pulumi.StringOutput `pulumi:"address"`
	// Time when the RegionalEndpoint was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A description of this resource.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location of the RegionalEndpoint.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the RegionalEndpoint.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the VPC network for this private regional endpoint. Format: 'projects/{project}/global/networks/{network}'
	Network                               pulumi.StringOutput `pulumi:"network"`
	NetworkConnectivityRegionalEndpointId pulumi.StringOutput `pulumi:"networkConnectivityRegionalEndpointId"`
	Project                               pulumi.StringOutput `pulumi:"project"`
	// The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format:
	// '//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}'
	PscForwardingRule pulumi.StringOutput `pulumi:"pscForwardingRule"`
	// The name of the subnetwork from which the IP address will be allocated. Format:
	// 'projects/{project}/regions/{region}/subnetworks/{subnetwork}'
	Subnetwork pulumi.StringOutput `pulumi:"subnetwork"`
	// The service endpoint this private regional endpoint connects to. Format: '{apiname}.{region}.p.rep.googleapis.com'
	// Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi pulumi.StringOutput `pulumi:"targetGoogleApi"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                               `pulumi:"terraformLabels"`
	Timeouts        NetworkConnectivityRegionalEndpointTimeoutsPtrOutput `pulumi:"timeouts"`
	// Time when the RegionalEndpoint was updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewNetworkConnectivityRegionalEndpoint registers a new resource with the given unique name, arguments, and options.
func NewNetworkConnectivityRegionalEndpoint(ctx *pulumi.Context,
	name string, args *NetworkConnectivityRegionalEndpointArgs, opts ...pulumi.ResourceOption) (*NetworkConnectivityRegionalEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessType == nil {
		return nil, errors.New("invalid value for required argument 'AccessType'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.TargetGoogleApi == nil {
		return nil, errors.New("invalid value for required argument 'TargetGoogleApi'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkConnectivityRegionalEndpoint
	err = ctx.RegisterPackageResource("google:index/networkConnectivityRegionalEndpoint:NetworkConnectivityRegionalEndpoint", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkConnectivityRegionalEndpoint gets an existing NetworkConnectivityRegionalEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkConnectivityRegionalEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkConnectivityRegionalEndpointState, opts ...pulumi.ResourceOption) (*NetworkConnectivityRegionalEndpoint, error) {
	var resource NetworkConnectivityRegionalEndpoint
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/networkConnectivityRegionalEndpoint:NetworkConnectivityRegionalEndpoint", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkConnectivityRegionalEndpoint resources.
type networkConnectivityRegionalEndpointState struct {
	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable
	// global access. Possible values: ["GLOBAL", "REGIONAL"]
	AccessType *string `pulumi:"accessType"`
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of
	// the following formats: * IPv4 address as in '10.0.0.1' * Address resource URI as in
	// 'projects/{project}/regions/{region}/addresses/{address_name}' > **Note:** This field accepts both a reference to a
	// Compute Address resource, which is the resource name of which format is given in the description, and IP literal value.
	// If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4
	// version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an
	// IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address *string `pulumi:"address"`
	// Time when the RegionalEndpoint was created.
	CreateTime *string `pulumi:"createTime"`
	// A description of this resource.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the RegionalEndpoint.
	Location *string `pulumi:"location"`
	// The name of the RegionalEndpoint.
	Name *string `pulumi:"name"`
	// The name of the VPC network for this private regional endpoint. Format: 'projects/{project}/global/networks/{network}'
	Network                               *string `pulumi:"network"`
	NetworkConnectivityRegionalEndpointId *string `pulumi:"networkConnectivityRegionalEndpointId"`
	Project                               *string `pulumi:"project"`
	// The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format:
	// '//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}'
	PscForwardingRule *string `pulumi:"pscForwardingRule"`
	// The name of the subnetwork from which the IP address will be allocated. Format:
	// 'projects/{project}/regions/{region}/subnetworks/{subnetwork}'
	Subnetwork *string `pulumi:"subnetwork"`
	// The service endpoint this private regional endpoint connects to. Format: '{apiname}.{region}.p.rep.googleapis.com'
	// Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi *string `pulumi:"targetGoogleApi"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                            `pulumi:"terraformLabels"`
	Timeouts        *NetworkConnectivityRegionalEndpointTimeouts `pulumi:"timeouts"`
	// Time when the RegionalEndpoint was updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type NetworkConnectivityRegionalEndpointState struct {
	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable
	// global access. Possible values: ["GLOBAL", "REGIONAL"]
	AccessType pulumi.StringPtrInput
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of
	// the following formats: * IPv4 address as in '10.0.0.1' * Address resource URI as in
	// 'projects/{project}/regions/{region}/addresses/{address_name}' > **Note:** This field accepts both a reference to a
	// Compute Address resource, which is the resource name of which format is given in the description, and IP literal value.
	// If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4
	// version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an
	// IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address pulumi.StringPtrInput
	// Time when the RegionalEndpoint was created.
	CreateTime pulumi.StringPtrInput
	// A description of this resource.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the RegionalEndpoint.
	Location pulumi.StringPtrInput
	// The name of the RegionalEndpoint.
	Name pulumi.StringPtrInput
	// The name of the VPC network for this private regional endpoint. Format: 'projects/{project}/global/networks/{network}'
	Network                               pulumi.StringPtrInput
	NetworkConnectivityRegionalEndpointId pulumi.StringPtrInput
	Project                               pulumi.StringPtrInput
	// The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format:
	// '//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}'
	PscForwardingRule pulumi.StringPtrInput
	// The name of the subnetwork from which the IP address will be allocated. Format:
	// 'projects/{project}/regions/{region}/subnetworks/{subnetwork}'
	Subnetwork pulumi.StringPtrInput
	// The service endpoint this private regional endpoint connects to. Format: '{apiname}.{region}.p.rep.googleapis.com'
	// Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkConnectivityRegionalEndpointTimeoutsPtrInput
	// Time when the RegionalEndpoint was updated.
	UpdateTime pulumi.StringPtrInput
}

func (NetworkConnectivityRegionalEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectivityRegionalEndpointState)(nil)).Elem()
}

type networkConnectivityRegionalEndpointArgs struct {
	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable
	// global access. Possible values: ["GLOBAL", "REGIONAL"]
	AccessType string `pulumi:"accessType"`
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of
	// the following formats: * IPv4 address as in '10.0.0.1' * Address resource URI as in
	// 'projects/{project}/regions/{region}/addresses/{address_name}' > **Note:** This field accepts both a reference to a
	// Compute Address resource, which is the resource name of which format is given in the description, and IP literal value.
	// If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4
	// version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an
	// IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address *string `pulumi:"address"`
	// A description of this resource.
	Description *string `pulumi:"description"`
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The location of the RegionalEndpoint.
	Location string `pulumi:"location"`
	// The name of the RegionalEndpoint.
	Name *string `pulumi:"name"`
	// The name of the VPC network for this private regional endpoint. Format: 'projects/{project}/global/networks/{network}'
	Network                               *string `pulumi:"network"`
	NetworkConnectivityRegionalEndpointId *string `pulumi:"networkConnectivityRegionalEndpointId"`
	Project                               *string `pulumi:"project"`
	// The name of the subnetwork from which the IP address will be allocated. Format:
	// 'projects/{project}/regions/{region}/subnetworks/{subnetwork}'
	Subnetwork *string `pulumi:"subnetwork"`
	// The service endpoint this private regional endpoint connects to. Format: '{apiname}.{region}.p.rep.googleapis.com'
	// Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi string                                       `pulumi:"targetGoogleApi"`
	Timeouts        *NetworkConnectivityRegionalEndpointTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a NetworkConnectivityRegionalEndpoint resource.
type NetworkConnectivityRegionalEndpointArgs struct {
	// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable
	// global access. Possible values: ["GLOBAL", "REGIONAL"]
	AccessType pulumi.StringInput
	// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of
	// the following formats: * IPv4 address as in '10.0.0.1' * Address resource URI as in
	// 'projects/{project}/regions/{region}/addresses/{address_name}' > **Note:** This field accepts both a reference to a
	// Compute Address resource, which is the resource name of which format is given in the description, and IP literal value.
	// If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4
	// version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an
	// IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
	Address pulumi.StringPtrInput
	// A description of this resource.
	Description pulumi.StringPtrInput
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The location of the RegionalEndpoint.
	Location pulumi.StringInput
	// The name of the RegionalEndpoint.
	Name pulumi.StringPtrInput
	// The name of the VPC network for this private regional endpoint. Format: 'projects/{project}/global/networks/{network}'
	Network                               pulumi.StringPtrInput
	NetworkConnectivityRegionalEndpointId pulumi.StringPtrInput
	Project                               pulumi.StringPtrInput
	// The name of the subnetwork from which the IP address will be allocated. Format:
	// 'projects/{project}/regions/{region}/subnetworks/{subnetwork}'
	Subnetwork pulumi.StringPtrInput
	// The service endpoint this private regional endpoint connects to. Format: '{apiname}.{region}.p.rep.googleapis.com'
	// Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
	TargetGoogleApi pulumi.StringInput
	Timeouts        NetworkConnectivityRegionalEndpointTimeoutsPtrInput
}

func (NetworkConnectivityRegionalEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectivityRegionalEndpointArgs)(nil)).Elem()
}

type NetworkConnectivityRegionalEndpointInput interface {
	pulumi.Input

	ToNetworkConnectivityRegionalEndpointOutput() NetworkConnectivityRegionalEndpointOutput
	ToNetworkConnectivityRegionalEndpointOutputWithContext(ctx context.Context) NetworkConnectivityRegionalEndpointOutput
}

func (*NetworkConnectivityRegionalEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectivityRegionalEndpoint)(nil)).Elem()
}

func (i *NetworkConnectivityRegionalEndpoint) ToNetworkConnectivityRegionalEndpointOutput() NetworkConnectivityRegionalEndpointOutput {
	return i.ToNetworkConnectivityRegionalEndpointOutputWithContext(context.Background())
}

func (i *NetworkConnectivityRegionalEndpoint) ToNetworkConnectivityRegionalEndpointOutputWithContext(ctx context.Context) NetworkConnectivityRegionalEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectivityRegionalEndpointOutput)
}

type NetworkConnectivityRegionalEndpointOutput struct{ *pulumi.OutputState }

func (NetworkConnectivityRegionalEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectivityRegionalEndpoint)(nil)).Elem()
}

func (o NetworkConnectivityRegionalEndpointOutput) ToNetworkConnectivityRegionalEndpointOutput() NetworkConnectivityRegionalEndpointOutput {
	return o
}

func (o NetworkConnectivityRegionalEndpointOutput) ToNetworkConnectivityRegionalEndpointOutputWithContext(ctx context.Context) NetworkConnectivityRegionalEndpointOutput {
	return o
}

// The access type of this regional endpoint. This field is reflected in the PSC Forwarding Rule configuration to enable
// global access. Possible values: ["GLOBAL", "REGIONAL"]
func (o NetworkConnectivityRegionalEndpointOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.AccessType }).(pulumi.StringOutput)
}

// The IP Address of the Regional Endpoint. When no address is provided, an IP from the subnetwork is allocated. Use one of
// the following formats: * IPv4 address as in '10.0.0.1' * Address resource URI as in
// 'projects/{project}/regions/{region}/addresses/{address_name}' > **Note:** This field accepts both a reference to a
// Compute Address resource, which is the resource name of which format is given in the description, and IP literal value.
// If the user chooses to input a reserved address value; they need to make sure that the reserved address is in IPv4
// version, its purpose is GCE_ENDPOINT, its type is INTERNAL and its status is RESERVED. If the user chooses to input an
// IP literal, they need to make sure that it's a valid IPv4 address (x.x.x.x) within the subnetwork.
func (o NetworkConnectivityRegionalEndpointOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.Address }).(pulumi.StringOutput)
}

// Time when the RegionalEndpoint was created.
func (o NetworkConnectivityRegionalEndpointOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A description of this resource.
func (o NetworkConnectivityRegionalEndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkConnectivityRegionalEndpointOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o NetworkConnectivityRegionalEndpointOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location of the RegionalEndpoint.
func (o NetworkConnectivityRegionalEndpointOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the RegionalEndpoint.
func (o NetworkConnectivityRegionalEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the VPC network for this private regional endpoint. Format: 'projects/{project}/global/networks/{network}'
func (o NetworkConnectivityRegionalEndpointOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o NetworkConnectivityRegionalEndpointOutput) NetworkConnectivityRegionalEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput {
		return v.NetworkConnectivityRegionalEndpointId
	}).(pulumi.StringOutput)
}

func (o NetworkConnectivityRegionalEndpointOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The resource reference of the PSC Forwarding Rule created on behalf of the customer. Format:
// '//compute.googleapis.com/projects/{project}/regions/{region}/forwardingRules/{forwarding_rule_name}'
func (o NetworkConnectivityRegionalEndpointOutput) PscForwardingRule() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.PscForwardingRule }).(pulumi.StringOutput)
}

// The name of the subnetwork from which the IP address will be allocated. Format:
// 'projects/{project}/regions/{region}/subnetworks/{subnetwork}'
func (o NetworkConnectivityRegionalEndpointOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.Subnetwork }).(pulumi.StringOutput)
}

// The service endpoint this private regional endpoint connects to. Format: '{apiname}.{region}.p.rep.googleapis.com'
// Example: \"cloudkms.us-central1.p.rep.googleapis.com\".
func (o NetworkConnectivityRegionalEndpointOutput) TargetGoogleApi() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.TargetGoogleApi }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkConnectivityRegionalEndpointOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkConnectivityRegionalEndpointOutput) Timeouts() NetworkConnectivityRegionalEndpointTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) NetworkConnectivityRegionalEndpointTimeoutsPtrOutput {
		return v.Timeouts
	}).(NetworkConnectivityRegionalEndpointTimeoutsPtrOutput)
}

// Time when the RegionalEndpoint was updated.
func (o NetworkConnectivityRegionalEndpointOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityRegionalEndpoint) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectivityRegionalEndpointInput)(nil)).Elem(), &NetworkConnectivityRegionalEndpoint{})
	pulumi.RegisterOutputType(NetworkConnectivityRegionalEndpointOutput{})
}
