// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VertexAiFeatureOnlineStoreFeatureview struct {
	pulumi.CustomResourceState

	// Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
	BigQuerySource VertexAiFeatureOnlineStoreFeatureviewBigQuerySourcePtrOutput `pulumi:"bigQuerySource"`
	// The timestamp of when the featureOnlinestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	CreateTime      pulumi.StringOutput    `pulumi:"createTime"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The name of the FeatureOnlineStore to use for the featureview.
	FeatureOnlineStore pulumi.StringOutput `pulumi:"featureOnlineStore"`
	// Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
	FeatureRegistrySource VertexAiFeatureOnlineStoreFeatureviewFeatureRegistrySourcePtrOutput `pulumi:"featureRegistrySource"`
	// A set of key/value label pairs to assign to this FeatureView. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the FeatureView. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character
	// cannot be a number.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The region for the resource. It should be the same as the featureonlinestore region.
	Region pulumi.StringOutput `pulumi:"region"`
	// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for
	// each entityId of this FeatureView are made ready for online serving.
	SyncConfig VertexAiFeatureOnlineStoreFeatureviewSyncConfigPtrOutput `pulumi:"syncConfig"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                                 `pulumi:"terraformLabels"`
	Timeouts        VertexAiFeatureOnlineStoreFeatureviewTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp of when the featureOnlinestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	UpdateTime                              pulumi.StringOutput `pulumi:"updateTime"`
	VertexAiFeatureOnlineStoreFeatureviewId pulumi.StringOutput `pulumi:"vertexAiFeatureOnlineStoreFeatureviewId"`
}

// NewVertexAiFeatureOnlineStoreFeatureview registers a new resource with the given unique name, arguments, and options.
func NewVertexAiFeatureOnlineStoreFeatureview(ctx *pulumi.Context,
	name string, args *VertexAiFeatureOnlineStoreFeatureviewArgs, opts ...pulumi.ResourceOption) (*VertexAiFeatureOnlineStoreFeatureview, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FeatureOnlineStore == nil {
		return nil, errors.New("invalid value for required argument 'FeatureOnlineStore'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource VertexAiFeatureOnlineStoreFeatureview
	err = ctx.RegisterPackageResource("google:index/vertexAiFeatureOnlineStoreFeatureview:VertexAiFeatureOnlineStoreFeatureview", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVertexAiFeatureOnlineStoreFeatureview gets an existing VertexAiFeatureOnlineStoreFeatureview resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVertexAiFeatureOnlineStoreFeatureview(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VertexAiFeatureOnlineStoreFeatureviewState, opts ...pulumi.ResourceOption) (*VertexAiFeatureOnlineStoreFeatureview, error) {
	var resource VertexAiFeatureOnlineStoreFeatureview
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/vertexAiFeatureOnlineStoreFeatureview:VertexAiFeatureOnlineStoreFeatureview", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VertexAiFeatureOnlineStoreFeatureview resources.
type vertexAiFeatureOnlineStoreFeatureviewState struct {
	// Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
	BigQuerySource *VertexAiFeatureOnlineStoreFeatureviewBigQuerySource `pulumi:"bigQuerySource"`
	// The timestamp of when the featureOnlinestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	CreateTime      *string           `pulumi:"createTime"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The name of the FeatureOnlineStore to use for the featureview.
	FeatureOnlineStore *string `pulumi:"featureOnlineStore"`
	// Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
	FeatureRegistrySource *VertexAiFeatureOnlineStoreFeatureviewFeatureRegistrySource `pulumi:"featureRegistrySource"`
	// A set of key/value label pairs to assign to this FeatureView. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the FeatureView. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character
	// cannot be a number.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The region for the resource. It should be the same as the featureonlinestore region.
	Region *string `pulumi:"region"`
	// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for
	// each entityId of this FeatureView are made ready for online serving.
	SyncConfig *VertexAiFeatureOnlineStoreFeatureviewSyncConfig `pulumi:"syncConfig"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                              `pulumi:"terraformLabels"`
	Timeouts        *VertexAiFeatureOnlineStoreFeatureviewTimeouts `pulumi:"timeouts"`
	// The timestamp of when the featureOnlinestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	UpdateTime                              *string `pulumi:"updateTime"`
	VertexAiFeatureOnlineStoreFeatureviewId *string `pulumi:"vertexAiFeatureOnlineStoreFeatureviewId"`
}

type VertexAiFeatureOnlineStoreFeatureviewState struct {
	// Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
	BigQuerySource VertexAiFeatureOnlineStoreFeatureviewBigQuerySourcePtrInput
	// The timestamp of when the featureOnlinestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits.
	CreateTime      pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The name of the FeatureOnlineStore to use for the featureview.
	FeatureOnlineStore pulumi.StringPtrInput
	// Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
	FeatureRegistrySource VertexAiFeatureOnlineStoreFeatureviewFeatureRegistrySourcePtrInput
	// A set of key/value label pairs to assign to this FeatureView. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// Name of the FeatureView. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character
	// cannot be a number.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The region for the resource. It should be the same as the featureonlinestore region.
	Region pulumi.StringPtrInput
	// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for
	// each entityId of this FeatureView are made ready for online serving.
	SyncConfig VertexAiFeatureOnlineStoreFeatureviewSyncConfigPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        VertexAiFeatureOnlineStoreFeatureviewTimeoutsPtrInput
	// The timestamp of when the featureOnlinestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
	// and up to nine fractional digits.
	UpdateTime                              pulumi.StringPtrInput
	VertexAiFeatureOnlineStoreFeatureviewId pulumi.StringPtrInput
}

func (VertexAiFeatureOnlineStoreFeatureviewState) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiFeatureOnlineStoreFeatureviewState)(nil)).Elem()
}

type vertexAiFeatureOnlineStoreFeatureviewArgs struct {
	// Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
	BigQuerySource *VertexAiFeatureOnlineStoreFeatureviewBigQuerySource `pulumi:"bigQuerySource"`
	// The name of the FeatureOnlineStore to use for the featureview.
	FeatureOnlineStore string `pulumi:"featureOnlineStore"`
	// Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
	FeatureRegistrySource *VertexAiFeatureOnlineStoreFeatureviewFeatureRegistrySource `pulumi:"featureRegistrySource"`
	// A set of key/value label pairs to assign to this FeatureView. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the FeatureView. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character
	// cannot be a number.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The region for the resource. It should be the same as the featureonlinestore region.
	Region string `pulumi:"region"`
	// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for
	// each entityId of this FeatureView are made ready for online serving.
	SyncConfig                              *VertexAiFeatureOnlineStoreFeatureviewSyncConfig `pulumi:"syncConfig"`
	Timeouts                                *VertexAiFeatureOnlineStoreFeatureviewTimeouts   `pulumi:"timeouts"`
	VertexAiFeatureOnlineStoreFeatureviewId *string                                          `pulumi:"vertexAiFeatureOnlineStoreFeatureviewId"`
}

// The set of arguments for constructing a VertexAiFeatureOnlineStoreFeatureview resource.
type VertexAiFeatureOnlineStoreFeatureviewArgs struct {
	// Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
	BigQuerySource VertexAiFeatureOnlineStoreFeatureviewBigQuerySourcePtrInput
	// The name of the FeatureOnlineStore to use for the featureview.
	FeatureOnlineStore pulumi.StringInput
	// Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
	FeatureRegistrySource VertexAiFeatureOnlineStoreFeatureviewFeatureRegistrySourcePtrInput
	// A set of key/value label pairs to assign to this FeatureView. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// Name of the FeatureView. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character
	// cannot be a number.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The region for the resource. It should be the same as the featureonlinestore region.
	Region pulumi.StringInput
	// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for
	// each entityId of this FeatureView are made ready for online serving.
	SyncConfig                              VertexAiFeatureOnlineStoreFeatureviewSyncConfigPtrInput
	Timeouts                                VertexAiFeatureOnlineStoreFeatureviewTimeoutsPtrInput
	VertexAiFeatureOnlineStoreFeatureviewId pulumi.StringPtrInput
}

func (VertexAiFeatureOnlineStoreFeatureviewArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vertexAiFeatureOnlineStoreFeatureviewArgs)(nil)).Elem()
}

type VertexAiFeatureOnlineStoreFeatureviewInput interface {
	pulumi.Input

	ToVertexAiFeatureOnlineStoreFeatureviewOutput() VertexAiFeatureOnlineStoreFeatureviewOutput
	ToVertexAiFeatureOnlineStoreFeatureviewOutputWithContext(ctx context.Context) VertexAiFeatureOnlineStoreFeatureviewOutput
}

func (*VertexAiFeatureOnlineStoreFeatureview) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiFeatureOnlineStoreFeatureview)(nil)).Elem()
}

func (i *VertexAiFeatureOnlineStoreFeatureview) ToVertexAiFeatureOnlineStoreFeatureviewOutput() VertexAiFeatureOnlineStoreFeatureviewOutput {
	return i.ToVertexAiFeatureOnlineStoreFeatureviewOutputWithContext(context.Background())
}

func (i *VertexAiFeatureOnlineStoreFeatureview) ToVertexAiFeatureOnlineStoreFeatureviewOutputWithContext(ctx context.Context) VertexAiFeatureOnlineStoreFeatureviewOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VertexAiFeatureOnlineStoreFeatureviewOutput)
}

type VertexAiFeatureOnlineStoreFeatureviewOutput struct{ *pulumi.OutputState }

func (VertexAiFeatureOnlineStoreFeatureviewOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VertexAiFeatureOnlineStoreFeatureview)(nil)).Elem()
}

func (o VertexAiFeatureOnlineStoreFeatureviewOutput) ToVertexAiFeatureOnlineStoreFeatureviewOutput() VertexAiFeatureOnlineStoreFeatureviewOutput {
	return o
}

func (o VertexAiFeatureOnlineStoreFeatureviewOutput) ToVertexAiFeatureOnlineStoreFeatureviewOutputWithContext(ctx context.Context) VertexAiFeatureOnlineStoreFeatureviewOutput {
	return o
}

// Configures how data is supposed to be extracted from a BigQuery source to be loaded onto the FeatureOnlineStore.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) BigQuerySource() VertexAiFeatureOnlineStoreFeatureviewBigQuerySourcePtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) VertexAiFeatureOnlineStoreFeatureviewBigQuerySourcePtrOutput {
		return v.BigQuerySource
	}).(VertexAiFeatureOnlineStoreFeatureviewBigQuerySourcePtrOutput)
}

// The timestamp of when the featureOnlinestore was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o VertexAiFeatureOnlineStoreFeatureviewOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The name of the FeatureOnlineStore to use for the featureview.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) FeatureOnlineStore() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringOutput { return v.FeatureOnlineStore }).(pulumi.StringOutput)
}

// Configures the features from a Feature Registry source that need to be loaded onto the FeatureOnlineStore.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) FeatureRegistrySource() VertexAiFeatureOnlineStoreFeatureviewFeatureRegistrySourcePtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) VertexAiFeatureOnlineStoreFeatureviewFeatureRegistrySourcePtrOutput {
		return v.FeatureRegistrySource
	}).(VertexAiFeatureOnlineStoreFeatureviewFeatureRegistrySourcePtrOutput)
}

// A set of key/value label pairs to assign to this FeatureView. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the FeatureView. This value may be up to 60 characters, and valid characters are [a-z0-9_]. The first character
// cannot be a number.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VertexAiFeatureOnlineStoreFeatureviewOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region for the resource. It should be the same as the featureonlinestore region.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Configures when data is to be synced/updated for this FeatureView. At the end of the sync the latest featureValues for
// each entityId of this FeatureView are made ready for online serving.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) SyncConfig() VertexAiFeatureOnlineStoreFeatureviewSyncConfigPtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) VertexAiFeatureOnlineStoreFeatureviewSyncConfigPtrOutput {
		return v.SyncConfig
	}).(VertexAiFeatureOnlineStoreFeatureviewSyncConfigPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o VertexAiFeatureOnlineStoreFeatureviewOutput) Timeouts() VertexAiFeatureOnlineStoreFeatureviewTimeoutsPtrOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) VertexAiFeatureOnlineStoreFeatureviewTimeoutsPtrOutput {
		return v.Timeouts
	}).(VertexAiFeatureOnlineStoreFeatureviewTimeoutsPtrOutput)
}

// The timestamp of when the featureOnlinestore was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution
// and up to nine fractional digits.
func (o VertexAiFeatureOnlineStoreFeatureviewOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o VertexAiFeatureOnlineStoreFeatureviewOutput) VertexAiFeatureOnlineStoreFeatureviewId() pulumi.StringOutput {
	return o.ApplyT(func(v *VertexAiFeatureOnlineStoreFeatureview) pulumi.StringOutput {
		return v.VertexAiFeatureOnlineStoreFeatureviewId
	}).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VertexAiFeatureOnlineStoreFeatureviewInput)(nil)).Elem(), &VertexAiFeatureOnlineStoreFeatureview{})
	pulumi.RegisterOutputType(VertexAiFeatureOnlineStoreFeatureviewOutput{})
}
