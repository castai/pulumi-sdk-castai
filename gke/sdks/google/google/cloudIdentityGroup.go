// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudIdentityGroup struct {
	pulumi.CustomResourceState

	// Additional group keys associated with the Group
	AdditionalGroupKeys  CloudIdentityGroupAdditionalGroupKeyArrayOutput `pulumi:"additionalGroupKeys"`
	CloudIdentityGroupId pulumi.StringOutput                             `pulumi:"cloudIdentityGroupId"`
	// The time when the Group was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// An extended description to help users determine the purpose of a Group. Must not be longer than 4,096 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the Group.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// EntityKey of the Group.
	GroupKey CloudIdentityGroupGroupKeyOutput `pulumi:"groupKey"`
	// The initial configuration options for creating a Group. See the [API
	// reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig) for possible
	// values. Default value: "EMPTY" Possible values: ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"]
	InitialGroupConfig pulumi.StringPtrOutput `pulumi:"initialGroupConfig"`
	// One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google
	// Groups are the default type of group and have a label with a key of cloudidentity.googleapis.com/groups.discussion_forum
	// and an empty value. Existing Google Groups can have an additional label with a key of
	// cloudidentity.googleapis.com/groups.security and an empty value added to them. This is an immutable change and the
	// security label cannot be removed once added. Dynamic groups have a label with a key of
	// cloudidentity.googleapis.com/groups.dynamic. Identity-mapped groups for Cloud Search have a label with a key of
	// system/groups/external and an empty value.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource name of the Group in the format: groups/{group_id}, where group_id is the unique ID assigned to the Group.
	Name pulumi.StringOutput `pulumi:"name"`
	// The resource name of the entity under which this Group resides in the Cloud Identity resource hierarchy. Must be of the
	// form identitysources/{identity_source_id} for external-identity-mapped groups or customers/{customer_id} for Google
	// Groups.
	Parent   pulumi.StringOutput                 `pulumi:"parent"`
	Timeouts CloudIdentityGroupTimeoutsPtrOutput `pulumi:"timeouts"`
	// The time when the Group was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCloudIdentityGroup registers a new resource with the given unique name, arguments, and options.
func NewCloudIdentityGroup(ctx *pulumi.Context,
	name string, args *CloudIdentityGroupArgs, opts ...pulumi.ResourceOption) (*CloudIdentityGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupKey == nil {
		return nil, errors.New("invalid value for required argument 'GroupKey'")
	}
	if args.Labels == nil {
		return nil, errors.New("invalid value for required argument 'Labels'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudIdentityGroup
	err = ctx.RegisterPackageResource("google:index/cloudIdentityGroup:CloudIdentityGroup", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIdentityGroup gets an existing CloudIdentityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIdentityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIdentityGroupState, opts ...pulumi.ResourceOption) (*CloudIdentityGroup, error) {
	var resource CloudIdentityGroup
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudIdentityGroup:CloudIdentityGroup", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIdentityGroup resources.
type cloudIdentityGroupState struct {
	// Additional group keys associated with the Group
	AdditionalGroupKeys  []CloudIdentityGroupAdditionalGroupKey `pulumi:"additionalGroupKeys"`
	CloudIdentityGroupId *string                                `pulumi:"cloudIdentityGroupId"`
	// The time when the Group was created.
	CreateTime *string `pulumi:"createTime"`
	// An extended description to help users determine the purpose of a Group. Must not be longer than 4,096 characters.
	Description *string `pulumi:"description"`
	// The display name of the Group.
	DisplayName *string `pulumi:"displayName"`
	// EntityKey of the Group.
	GroupKey *CloudIdentityGroupGroupKey `pulumi:"groupKey"`
	// The initial configuration options for creating a Group. See the [API
	// reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig) for possible
	// values. Default value: "EMPTY" Possible values: ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"]
	InitialGroupConfig *string `pulumi:"initialGroupConfig"`
	// One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google
	// Groups are the default type of group and have a label with a key of cloudidentity.googleapis.com/groups.discussion_forum
	// and an empty value. Existing Google Groups can have an additional label with a key of
	// cloudidentity.googleapis.com/groups.security and an empty value added to them. This is an immutable change and the
	// security label cannot be removed once added. Dynamic groups have a label with a key of
	// cloudidentity.googleapis.com/groups.dynamic. Identity-mapped groups for Cloud Search have a label with a key of
	// system/groups/external and an empty value.
	Labels map[string]string `pulumi:"labels"`
	// Resource name of the Group in the format: groups/{group_id}, where group_id is the unique ID assigned to the Group.
	Name *string `pulumi:"name"`
	// The resource name of the entity under which this Group resides in the Cloud Identity resource hierarchy. Must be of the
	// form identitysources/{identity_source_id} for external-identity-mapped groups or customers/{customer_id} for Google
	// Groups.
	Parent   *string                     `pulumi:"parent"`
	Timeouts *CloudIdentityGroupTimeouts `pulumi:"timeouts"`
	// The time when the Group was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type CloudIdentityGroupState struct {
	// Additional group keys associated with the Group
	AdditionalGroupKeys  CloudIdentityGroupAdditionalGroupKeyArrayInput
	CloudIdentityGroupId pulumi.StringPtrInput
	// The time when the Group was created.
	CreateTime pulumi.StringPtrInput
	// An extended description to help users determine the purpose of a Group. Must not be longer than 4,096 characters.
	Description pulumi.StringPtrInput
	// The display name of the Group.
	DisplayName pulumi.StringPtrInput
	// EntityKey of the Group.
	GroupKey CloudIdentityGroupGroupKeyPtrInput
	// The initial configuration options for creating a Group. See the [API
	// reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig) for possible
	// values. Default value: "EMPTY" Possible values: ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"]
	InitialGroupConfig pulumi.StringPtrInput
	// One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google
	// Groups are the default type of group and have a label with a key of cloudidentity.googleapis.com/groups.discussion_forum
	// and an empty value. Existing Google Groups can have an additional label with a key of
	// cloudidentity.googleapis.com/groups.security and an empty value added to them. This is an immutable change and the
	// security label cannot be removed once added. Dynamic groups have a label with a key of
	// cloudidentity.googleapis.com/groups.dynamic. Identity-mapped groups for Cloud Search have a label with a key of
	// system/groups/external and an empty value.
	Labels pulumi.StringMapInput
	// Resource name of the Group in the format: groups/{group_id}, where group_id is the unique ID assigned to the Group.
	Name pulumi.StringPtrInput
	// The resource name of the entity under which this Group resides in the Cloud Identity resource hierarchy. Must be of the
	// form identitysources/{identity_source_id} for external-identity-mapped groups or customers/{customer_id} for Google
	// Groups.
	Parent   pulumi.StringPtrInput
	Timeouts CloudIdentityGroupTimeoutsPtrInput
	// The time when the Group was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (CloudIdentityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIdentityGroupState)(nil)).Elem()
}

type cloudIdentityGroupArgs struct {
	CloudIdentityGroupId *string `pulumi:"cloudIdentityGroupId"`
	// An extended description to help users determine the purpose of a Group. Must not be longer than 4,096 characters.
	Description *string `pulumi:"description"`
	// The display name of the Group.
	DisplayName *string `pulumi:"displayName"`
	// EntityKey of the Group.
	GroupKey CloudIdentityGroupGroupKey `pulumi:"groupKey"`
	// The initial configuration options for creating a Group. See the [API
	// reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig) for possible
	// values. Default value: "EMPTY" Possible values: ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"]
	InitialGroupConfig *string `pulumi:"initialGroupConfig"`
	// One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google
	// Groups are the default type of group and have a label with a key of cloudidentity.googleapis.com/groups.discussion_forum
	// and an empty value. Existing Google Groups can have an additional label with a key of
	// cloudidentity.googleapis.com/groups.security and an empty value added to them. This is an immutable change and the
	// security label cannot be removed once added. Dynamic groups have a label with a key of
	// cloudidentity.googleapis.com/groups.dynamic. Identity-mapped groups for Cloud Search have a label with a key of
	// system/groups/external and an empty value.
	Labels map[string]string `pulumi:"labels"`
	// The resource name of the entity under which this Group resides in the Cloud Identity resource hierarchy. Must be of the
	// form identitysources/{identity_source_id} for external-identity-mapped groups or customers/{customer_id} for Google
	// Groups.
	Parent   string                      `pulumi:"parent"`
	Timeouts *CloudIdentityGroupTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudIdentityGroup resource.
type CloudIdentityGroupArgs struct {
	CloudIdentityGroupId pulumi.StringPtrInput
	// An extended description to help users determine the purpose of a Group. Must not be longer than 4,096 characters.
	Description pulumi.StringPtrInput
	// The display name of the Group.
	DisplayName pulumi.StringPtrInput
	// EntityKey of the Group.
	GroupKey CloudIdentityGroupGroupKeyInput
	// The initial configuration options for creating a Group. See the [API
	// reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig) for possible
	// values. Default value: "EMPTY" Possible values: ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"]
	InitialGroupConfig pulumi.StringPtrInput
	// One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google
	// Groups are the default type of group and have a label with a key of cloudidentity.googleapis.com/groups.discussion_forum
	// and an empty value. Existing Google Groups can have an additional label with a key of
	// cloudidentity.googleapis.com/groups.security and an empty value added to them. This is an immutable change and the
	// security label cannot be removed once added. Dynamic groups have a label with a key of
	// cloudidentity.googleapis.com/groups.dynamic. Identity-mapped groups for Cloud Search have a label with a key of
	// system/groups/external and an empty value.
	Labels pulumi.StringMapInput
	// The resource name of the entity under which this Group resides in the Cloud Identity resource hierarchy. Must be of the
	// form identitysources/{identity_source_id} for external-identity-mapped groups or customers/{customer_id} for Google
	// Groups.
	Parent   pulumi.StringInput
	Timeouts CloudIdentityGroupTimeoutsPtrInput
}

func (CloudIdentityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIdentityGroupArgs)(nil)).Elem()
}

type CloudIdentityGroupInput interface {
	pulumi.Input

	ToCloudIdentityGroupOutput() CloudIdentityGroupOutput
	ToCloudIdentityGroupOutputWithContext(ctx context.Context) CloudIdentityGroupOutput
}

func (*CloudIdentityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudIdentityGroup)(nil)).Elem()
}

func (i *CloudIdentityGroup) ToCloudIdentityGroupOutput() CloudIdentityGroupOutput {
	return i.ToCloudIdentityGroupOutputWithContext(context.Background())
}

func (i *CloudIdentityGroup) ToCloudIdentityGroupOutputWithContext(ctx context.Context) CloudIdentityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIdentityGroupOutput)
}

type CloudIdentityGroupOutput struct{ *pulumi.OutputState }

func (CloudIdentityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudIdentityGroup)(nil)).Elem()
}

func (o CloudIdentityGroupOutput) ToCloudIdentityGroupOutput() CloudIdentityGroupOutput {
	return o
}

func (o CloudIdentityGroupOutput) ToCloudIdentityGroupOutputWithContext(ctx context.Context) CloudIdentityGroupOutput {
	return o
}

// Additional group keys associated with the Group
func (o CloudIdentityGroupOutput) AdditionalGroupKeys() CloudIdentityGroupAdditionalGroupKeyArrayOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) CloudIdentityGroupAdditionalGroupKeyArrayOutput {
		return v.AdditionalGroupKeys
	}).(CloudIdentityGroupAdditionalGroupKeyArrayOutput)
}

func (o CloudIdentityGroupOutput) CloudIdentityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) pulumi.StringOutput { return v.CloudIdentityGroupId }).(pulumi.StringOutput)
}

// The time when the Group was created.
func (o CloudIdentityGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// An extended description to help users determine the purpose of a Group. Must not be longer than 4,096 characters.
func (o CloudIdentityGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the Group.
func (o CloudIdentityGroupOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// EntityKey of the Group.
func (o CloudIdentityGroupOutput) GroupKey() CloudIdentityGroupGroupKeyOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) CloudIdentityGroupGroupKeyOutput { return v.GroupKey }).(CloudIdentityGroupGroupKeyOutput)
}

// The initial configuration options for creating a Group. See the [API
// reference](https://cloud.google.com/identity/docs/reference/rest/v1beta1/groups/create#initialgroupconfig) for possible
// values. Default value: "EMPTY" Possible values: ["INITIAL_GROUP_CONFIG_UNSPECIFIED", "WITH_INITIAL_OWNER", "EMPTY"]
func (o CloudIdentityGroupOutput) InitialGroupConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) pulumi.StringPtrOutput { return v.InitialGroupConfig }).(pulumi.StringPtrOutput)
}

// One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value. Google
// Groups are the default type of group and have a label with a key of cloudidentity.googleapis.com/groups.discussion_forum
// and an empty value. Existing Google Groups can have an additional label with a key of
// cloudidentity.googleapis.com/groups.security and an empty value added to them. This is an immutable change and the
// security label cannot be removed once added. Dynamic groups have a label with a key of
// cloudidentity.googleapis.com/groups.dynamic. Identity-mapped groups for Cloud Search have a label with a key of
// system/groups/external and an empty value.
func (o CloudIdentityGroupOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource name of the Group in the format: groups/{group_id}, where group_id is the unique ID assigned to the Group.
func (o CloudIdentityGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The resource name of the entity under which this Group resides in the Cloud Identity resource hierarchy. Must be of the
// form identitysources/{identity_source_id} for external-identity-mapped groups or customers/{customer_id} for Google
// Groups.
func (o CloudIdentityGroupOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

func (o CloudIdentityGroupOutput) Timeouts() CloudIdentityGroupTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) CloudIdentityGroupTimeoutsPtrOutput { return v.Timeouts }).(CloudIdentityGroupTimeoutsPtrOutput)
}

// The time when the Group was last updated.
func (o CloudIdentityGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdentityGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudIdentityGroupInput)(nil)).Elem(), &CloudIdentityGroup{})
	pulumi.RegisterOutputType(CloudIdentityGroupOutput{})
}
