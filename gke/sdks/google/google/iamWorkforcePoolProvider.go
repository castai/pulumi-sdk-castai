// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamWorkforcePoolProvider struct {
	pulumi.CustomResourceState

	// A [Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. 'google.profile_photo' and 'google.display_name' are not
	// supported. * 'attribute': The custom attributes mapped from the assertion in the 'attribute_mappings'. The maximum
	// length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credentials
	// will be accepted. The following example shows how to only allow credentials with a mapped 'google.groups' value of
	// 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition pulumi.StringPtrOutput `pulumi:"attributeCondition"`
	// Maps attributes from the authentication credentials issued by an external identity provider to Google Cloud attributes,
	// such as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The
	// following keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in
	// IAM bindings. This is also the subject that appears in Cloud Logging logs. This is a required field and the mapped
	// subject cannot exceed 127 bytes. * 'google.groups': Groups the authenticating user belongs to. You can grant groups
	// access to resources using an IAM 'principalSet' binding; access applies to all members of the group. *
	// 'google.display_name': The name of the authenticated user. This is an optional field and the mapped display name cannot
	// exceed 100 bytes. If not set, 'google.subject' will be displayed instead. This attribute cannot be referenced in IAM
	// bindings. * 'google.profile_photo': The URL that specifies the authenticated user's thumbnail photo. This is an optional
	// field. When set, the image will be visible as the user's profile picture. If not set, a generic user icon will be
	// displayed instead. This attribute cannot be referenced in IAM bindings. You can also provide custom attributes by
	// specifying 'attribute.{custom_attribute}', where {custom_attribute} is the name of the custom attribute to be mapped.
	// You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and
	// the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define
	// fine-grained access for a workforce pool to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}' * 'google.groups':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}' Each
	// value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For OIDC providers, you must supply a custom mapping that includes the 'google.subject'
	// attribute. For example, the following maps the sub claim of the incoming credential to the 'subject' attribute on a
	// Google token: ''' {"google.subject": "assertion.sub"} ''' An object containing a list of '"key": value' pairs. Example:
	// '{ "name": "wrench", "mass": "1.3kg", "count": "3" }'.
	AttributeMapping pulumi.StringMapOutput `pulumi:"attributeMapping"`
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// A user-specified display name for the provider. Cannot exceed 32 characters.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The configuration for OAuth 2.0 client used to get the additional user attributes. This should be used when users can't
	// get the desired claims in authentication credentials. Currently this configuration is only supported with OIDC protocol.
	ExtraAttributesOauth2Client IamWorkforcePoolProviderExtraAttributesOauth2ClientPtrOutput `pulumi:"extraAttributesOauth2Client"`
	IamWorkforcePoolProviderId  pulumi.StringOutput                                          `pulumi:"iamWorkforcePoolProviderId"`
	// The location for the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// Output only. The resource name of the provider. Format:
	// 'locations/{location}/workforcePools/{workforcePoolId}/providers/{providerId}'
	Name pulumi.StringOutput `pulumi:"name"`
	// Represents an OpenId Connect 1.0 identity provider.
	Oidc IamWorkforcePoolProviderOidcPtrOutput `pulumi:"oidc"`
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	ProviderId pulumi.StringOutput `pulumi:"providerId"`
	// Represents a SAML identity provider.
	Saml IamWorkforcePoolProviderSamlPtrOutput `pulumi:"saml"`
	// The current state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active and may be
	// used to validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are
	// permanently deleted after approximately 30 days. You can restore a soft-deleted provider using
	// [providers.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers/undelete#google.iam.admin.v1.WorkforcePools.UndeleteWorkforcePoolProvider).
	State    pulumi.StringOutput                       `pulumi:"state"`
	Timeouts IamWorkforcePoolProviderTimeoutsPtrOutput `pulumi:"timeouts"`
	// The ID to use for the pool, which becomes the final component of the resource name. The IDs must be a globally unique
	// string of 6 to 63 lowercase letters, digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen.
	// The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkforcePoolId pulumi.StringOutput `pulumi:"workforcePoolId"`
}

// NewIamWorkforcePoolProvider registers a new resource with the given unique name, arguments, and options.
func NewIamWorkforcePoolProvider(ctx *pulumi.Context,
	name string, args *IamWorkforcePoolProviderArgs, opts ...pulumi.ResourceOption) (*IamWorkforcePoolProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.ProviderId == nil {
		return nil, errors.New("invalid value for required argument 'ProviderId'")
	}
	if args.WorkforcePoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkforcePoolId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IamWorkforcePoolProvider
	err = ctx.RegisterPackageResource("google:index/iamWorkforcePoolProvider:IamWorkforcePoolProvider", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamWorkforcePoolProvider gets an existing IamWorkforcePoolProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamWorkforcePoolProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamWorkforcePoolProviderState, opts ...pulumi.ResourceOption) (*IamWorkforcePoolProvider, error) {
	var resource IamWorkforcePoolProvider
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/iamWorkforcePoolProvider:IamWorkforcePoolProvider", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamWorkforcePoolProvider resources.
type iamWorkforcePoolProviderState struct {
	// A [Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. 'google.profile_photo' and 'google.display_name' are not
	// supported. * 'attribute': The custom attributes mapped from the assertion in the 'attribute_mappings'. The maximum
	// length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credentials
	// will be accepted. The following example shows how to only allow credentials with a mapped 'google.groups' value of
	// 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition *string `pulumi:"attributeCondition"`
	// Maps attributes from the authentication credentials issued by an external identity provider to Google Cloud attributes,
	// such as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The
	// following keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in
	// IAM bindings. This is also the subject that appears in Cloud Logging logs. This is a required field and the mapped
	// subject cannot exceed 127 bytes. * 'google.groups': Groups the authenticating user belongs to. You can grant groups
	// access to resources using an IAM 'principalSet' binding; access applies to all members of the group. *
	// 'google.display_name': The name of the authenticated user. This is an optional field and the mapped display name cannot
	// exceed 100 bytes. If not set, 'google.subject' will be displayed instead. This attribute cannot be referenced in IAM
	// bindings. * 'google.profile_photo': The URL that specifies the authenticated user's thumbnail photo. This is an optional
	// field. When set, the image will be visible as the user's profile picture. If not set, a generic user icon will be
	// displayed instead. This attribute cannot be referenced in IAM bindings. You can also provide custom attributes by
	// specifying 'attribute.{custom_attribute}', where {custom_attribute} is the name of the custom attribute to be mapped.
	// You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and
	// the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define
	// fine-grained access for a workforce pool to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}' * 'google.groups':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}' Each
	// value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For OIDC providers, you must supply a custom mapping that includes the 'google.subject'
	// attribute. For example, the following maps the sub claim of the incoming credential to the 'subject' attribute on a
	// Google token: ''' {"google.subject": "assertion.sub"} ''' An object containing a list of '"key": value' pairs. Example:
	// '{ "name": "wrench", "mass": "1.3kg", "count": "3" }'.
	AttributeMapping map[string]string `pulumi:"attributeMapping"`
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description *string `pulumi:"description"`
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled *bool `pulumi:"disabled"`
	// A user-specified display name for the provider. Cannot exceed 32 characters.
	DisplayName *string `pulumi:"displayName"`
	// The configuration for OAuth 2.0 client used to get the additional user attributes. This should be used when users can't
	// get the desired claims in authentication credentials. Currently this configuration is only supported with OIDC protocol.
	ExtraAttributesOauth2Client *IamWorkforcePoolProviderExtraAttributesOauth2Client `pulumi:"extraAttributesOauth2Client"`
	IamWorkforcePoolProviderId  *string                                              `pulumi:"iamWorkforcePoolProviderId"`
	// The location for the resource.
	Location *string `pulumi:"location"`
	// Output only. The resource name of the provider. Format:
	// 'locations/{location}/workforcePools/{workforcePoolId}/providers/{providerId}'
	Name *string `pulumi:"name"`
	// Represents an OpenId Connect 1.0 identity provider.
	Oidc *IamWorkforcePoolProviderOidc `pulumi:"oidc"`
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	ProviderId *string `pulumi:"providerId"`
	// Represents a SAML identity provider.
	Saml *IamWorkforcePoolProviderSaml `pulumi:"saml"`
	// The current state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active and may be
	// used to validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are
	// permanently deleted after approximately 30 days. You can restore a soft-deleted provider using
	// [providers.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers/undelete#google.iam.admin.v1.WorkforcePools.UndeleteWorkforcePoolProvider).
	State    *string                           `pulumi:"state"`
	Timeouts *IamWorkforcePoolProviderTimeouts `pulumi:"timeouts"`
	// The ID to use for the pool, which becomes the final component of the resource name. The IDs must be a globally unique
	// string of 6 to 63 lowercase letters, digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen.
	// The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkforcePoolId *string `pulumi:"workforcePoolId"`
}

type IamWorkforcePoolProviderState struct {
	// A [Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. 'google.profile_photo' and 'google.display_name' are not
	// supported. * 'attribute': The custom attributes mapped from the assertion in the 'attribute_mappings'. The maximum
	// length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credentials
	// will be accepted. The following example shows how to only allow credentials with a mapped 'google.groups' value of
	// 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition pulumi.StringPtrInput
	// Maps attributes from the authentication credentials issued by an external identity provider to Google Cloud attributes,
	// such as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The
	// following keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in
	// IAM bindings. This is also the subject that appears in Cloud Logging logs. This is a required field and the mapped
	// subject cannot exceed 127 bytes. * 'google.groups': Groups the authenticating user belongs to. You can grant groups
	// access to resources using an IAM 'principalSet' binding; access applies to all members of the group. *
	// 'google.display_name': The name of the authenticated user. This is an optional field and the mapped display name cannot
	// exceed 100 bytes. If not set, 'google.subject' will be displayed instead. This attribute cannot be referenced in IAM
	// bindings. * 'google.profile_photo': The URL that specifies the authenticated user's thumbnail photo. This is an optional
	// field. When set, the image will be visible as the user's profile picture. If not set, a generic user icon will be
	// displayed instead. This attribute cannot be referenced in IAM bindings. You can also provide custom attributes by
	// specifying 'attribute.{custom_attribute}', where {custom_attribute} is the name of the custom attribute to be mapped.
	// You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and
	// the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define
	// fine-grained access for a workforce pool to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}' * 'google.groups':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}' Each
	// value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For OIDC providers, you must supply a custom mapping that includes the 'google.subject'
	// attribute. For example, the following maps the sub claim of the incoming credential to the 'subject' attribute on a
	// Google token: ''' {"google.subject": "assertion.sub"} ''' An object containing a list of '"key": value' pairs. Example:
	// '{ "name": "wrench", "mass": "1.3kg", "count": "3" }'.
	AttributeMapping pulumi.StringMapInput
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description pulumi.StringPtrInput
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled pulumi.BoolPtrInput
	// A user-specified display name for the provider. Cannot exceed 32 characters.
	DisplayName pulumi.StringPtrInput
	// The configuration for OAuth 2.0 client used to get the additional user attributes. This should be used when users can't
	// get the desired claims in authentication credentials. Currently this configuration is only supported with OIDC protocol.
	ExtraAttributesOauth2Client IamWorkforcePoolProviderExtraAttributesOauth2ClientPtrInput
	IamWorkforcePoolProviderId  pulumi.StringPtrInput
	// The location for the resource.
	Location pulumi.StringPtrInput
	// Output only. The resource name of the provider. Format:
	// 'locations/{location}/workforcePools/{workforcePoolId}/providers/{providerId}'
	Name pulumi.StringPtrInput
	// Represents an OpenId Connect 1.0 identity provider.
	Oidc IamWorkforcePoolProviderOidcPtrInput
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	ProviderId pulumi.StringPtrInput
	// Represents a SAML identity provider.
	Saml IamWorkforcePoolProviderSamlPtrInput
	// The current state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active and may be
	// used to validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are
	// permanently deleted after approximately 30 days. You can restore a soft-deleted provider using
	// [providers.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers/undelete#google.iam.admin.v1.WorkforcePools.UndeleteWorkforcePoolProvider).
	State    pulumi.StringPtrInput
	Timeouts IamWorkforcePoolProviderTimeoutsPtrInput
	// The ID to use for the pool, which becomes the final component of the resource name. The IDs must be a globally unique
	// string of 6 to 63 lowercase letters, digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen.
	// The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkforcePoolId pulumi.StringPtrInput
}

func (IamWorkforcePoolProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamWorkforcePoolProviderState)(nil)).Elem()
}

type iamWorkforcePoolProviderArgs struct {
	// A [Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. 'google.profile_photo' and 'google.display_name' are not
	// supported. * 'attribute': The custom attributes mapped from the assertion in the 'attribute_mappings'. The maximum
	// length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credentials
	// will be accepted. The following example shows how to only allow credentials with a mapped 'google.groups' value of
	// 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition *string `pulumi:"attributeCondition"`
	// Maps attributes from the authentication credentials issued by an external identity provider to Google Cloud attributes,
	// such as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The
	// following keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in
	// IAM bindings. This is also the subject that appears in Cloud Logging logs. This is a required field and the mapped
	// subject cannot exceed 127 bytes. * 'google.groups': Groups the authenticating user belongs to. You can grant groups
	// access to resources using an IAM 'principalSet' binding; access applies to all members of the group. *
	// 'google.display_name': The name of the authenticated user. This is an optional field and the mapped display name cannot
	// exceed 100 bytes. If not set, 'google.subject' will be displayed instead. This attribute cannot be referenced in IAM
	// bindings. * 'google.profile_photo': The URL that specifies the authenticated user's thumbnail photo. This is an optional
	// field. When set, the image will be visible as the user's profile picture. If not set, a generic user icon will be
	// displayed instead. This attribute cannot be referenced in IAM bindings. You can also provide custom attributes by
	// specifying 'attribute.{custom_attribute}', where {custom_attribute} is the name of the custom attribute to be mapped.
	// You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and
	// the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define
	// fine-grained access for a workforce pool to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}' * 'google.groups':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}' Each
	// value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For OIDC providers, you must supply a custom mapping that includes the 'google.subject'
	// attribute. For example, the following maps the sub claim of the incoming credential to the 'subject' attribute on a
	// Google token: ''' {"google.subject": "assertion.sub"} ''' An object containing a list of '"key": value' pairs. Example:
	// '{ "name": "wrench", "mass": "1.3kg", "count": "3" }'.
	AttributeMapping map[string]string `pulumi:"attributeMapping"`
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description *string `pulumi:"description"`
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled *bool `pulumi:"disabled"`
	// A user-specified display name for the provider. Cannot exceed 32 characters.
	DisplayName *string `pulumi:"displayName"`
	// The configuration for OAuth 2.0 client used to get the additional user attributes. This should be used when users can't
	// get the desired claims in authentication credentials. Currently this configuration is only supported with OIDC protocol.
	ExtraAttributesOauth2Client *IamWorkforcePoolProviderExtraAttributesOauth2Client `pulumi:"extraAttributesOauth2Client"`
	IamWorkforcePoolProviderId  *string                                              `pulumi:"iamWorkforcePoolProviderId"`
	// The location for the resource.
	Location string `pulumi:"location"`
	// Represents an OpenId Connect 1.0 identity provider.
	Oidc *IamWorkforcePoolProviderOidc `pulumi:"oidc"`
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	ProviderId string `pulumi:"providerId"`
	// Represents a SAML identity provider.
	Saml     *IamWorkforcePoolProviderSaml     `pulumi:"saml"`
	Timeouts *IamWorkforcePoolProviderTimeouts `pulumi:"timeouts"`
	// The ID to use for the pool, which becomes the final component of the resource name. The IDs must be a globally unique
	// string of 6 to 63 lowercase letters, digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen.
	// The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkforcePoolId string `pulumi:"workforcePoolId"`
}

// The set of arguments for constructing a IamWorkforcePoolProvider resource.
type IamWorkforcePoolProviderArgs struct {
	// A [Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. 'google.profile_photo' and 'google.display_name' are not
	// supported. * 'attribute': The custom attributes mapped from the assertion in the 'attribute_mappings'. The maximum
	// length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credentials
	// will be accepted. The following example shows how to only allow credentials with a mapped 'google.groups' value of
	// 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition pulumi.StringPtrInput
	// Maps attributes from the authentication credentials issued by an external identity provider to Google Cloud attributes,
	// such as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The
	// following keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in
	// IAM bindings. This is also the subject that appears in Cloud Logging logs. This is a required field and the mapped
	// subject cannot exceed 127 bytes. * 'google.groups': Groups the authenticating user belongs to. You can grant groups
	// access to resources using an IAM 'principalSet' binding; access applies to all members of the group. *
	// 'google.display_name': The name of the authenticated user. This is an optional field and the mapped display name cannot
	// exceed 100 bytes. If not set, 'google.subject' will be displayed instead. This attribute cannot be referenced in IAM
	// bindings. * 'google.profile_photo': The URL that specifies the authenticated user's thumbnail photo. This is an optional
	// field. When set, the image will be visible as the user's profile picture. If not set, a generic user icon will be
	// displayed instead. This attribute cannot be referenced in IAM bindings. You can also provide custom attributes by
	// specifying 'attribute.{custom_attribute}', where {custom_attribute} is the name of the custom attribute to be mapped.
	// You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and
	// the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define
	// fine-grained access for a workforce pool to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}' * 'google.groups':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}' Each
	// value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For OIDC providers, you must supply a custom mapping that includes the 'google.subject'
	// attribute. For example, the following maps the sub claim of the incoming credential to the 'subject' attribute on a
	// Google token: ''' {"google.subject": "assertion.sub"} ''' An object containing a list of '"key": value' pairs. Example:
	// '{ "name": "wrench", "mass": "1.3kg", "count": "3" }'.
	AttributeMapping pulumi.StringMapInput
	// A user-specified description of the provider. Cannot exceed 256 characters.
	Description pulumi.StringPtrInput
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled pulumi.BoolPtrInput
	// A user-specified display name for the provider. Cannot exceed 32 characters.
	DisplayName pulumi.StringPtrInput
	// The configuration for OAuth 2.0 client used to get the additional user attributes. This should be used when users can't
	// get the desired claims in authentication credentials. Currently this configuration is only supported with OIDC protocol.
	ExtraAttributesOauth2Client IamWorkforcePoolProviderExtraAttributesOauth2ClientPtrInput
	IamWorkforcePoolProviderId  pulumi.StringPtrInput
	// The location for the resource.
	Location pulumi.StringInput
	// Represents an OpenId Connect 1.0 identity provider.
	Oidc IamWorkforcePoolProviderOidcPtrInput
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	ProviderId pulumi.StringInput
	// Represents a SAML identity provider.
	Saml     IamWorkforcePoolProviderSamlPtrInput
	Timeouts IamWorkforcePoolProviderTimeoutsPtrInput
	// The ID to use for the pool, which becomes the final component of the resource name. The IDs must be a globally unique
	// string of 6 to 63 lowercase letters, digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen.
	// The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkforcePoolId pulumi.StringInput
}

func (IamWorkforcePoolProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamWorkforcePoolProviderArgs)(nil)).Elem()
}

type IamWorkforcePoolProviderInput interface {
	pulumi.Input

	ToIamWorkforcePoolProviderOutput() IamWorkforcePoolProviderOutput
	ToIamWorkforcePoolProviderOutputWithContext(ctx context.Context) IamWorkforcePoolProviderOutput
}

func (*IamWorkforcePoolProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**IamWorkforcePoolProvider)(nil)).Elem()
}

func (i *IamWorkforcePoolProvider) ToIamWorkforcePoolProviderOutput() IamWorkforcePoolProviderOutput {
	return i.ToIamWorkforcePoolProviderOutputWithContext(context.Background())
}

func (i *IamWorkforcePoolProvider) ToIamWorkforcePoolProviderOutputWithContext(ctx context.Context) IamWorkforcePoolProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamWorkforcePoolProviderOutput)
}

type IamWorkforcePoolProviderOutput struct{ *pulumi.OutputState }

func (IamWorkforcePoolProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamWorkforcePoolProvider)(nil)).Elem()
}

func (o IamWorkforcePoolProviderOutput) ToIamWorkforcePoolProviderOutput() IamWorkforcePoolProviderOutput {
	return o
}

func (o IamWorkforcePoolProviderOutput) ToIamWorkforcePoolProviderOutputWithContext(ctx context.Context) IamWorkforcePoolProviderOutput {
	return o
}

// A [Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
// mapped from the assertion in the 'attribute_mappings'. 'google.profile_photo' and 'google.display_name' are not
// supported. * 'attribute': The custom attributes mapped from the assertion in the 'attribute_mappings'. The maximum
// length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credentials
// will be accepted. The following example shows how to only allow credentials with a mapped 'google.groups' value of
// 'admins': ”' "'admins' in google.groups" ”'
func (o IamWorkforcePoolProviderOutput) AttributeCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringPtrOutput { return v.AttributeCondition }).(pulumi.StringPtrOutput)
}

// Maps attributes from the authentication credentials issued by an external identity provider to Google Cloud attributes,
// such as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The
// following keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in
// IAM bindings. This is also the subject that appears in Cloud Logging logs. This is a required field and the mapped
// subject cannot exceed 127 bytes. * 'google.groups': Groups the authenticating user belongs to. You can grant groups
// access to resources using an IAM 'principalSet' binding; access applies to all members of the group. *
// 'google.display_name': The name of the authenticated user. This is an optional field and the mapped display name cannot
// exceed 100 bytes. If not set, 'google.subject' will be displayed instead. This attribute cannot be referenced in IAM
// bindings. * 'google.profile_photo': The URL that specifies the authenticated user's thumbnail photo. This is an optional
// field. When set, the image will be visible as the user's profile picture. If not set, a generic user icon will be
// displayed instead. This attribute cannot be referenced in IAM bindings. You can also provide custom attributes by
// specifying 'attribute.{custom_attribute}', where {custom_attribute} is the name of the custom attribute to be mapped.
// You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and
// the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define
// fine-grained access for a workforce pool to Google Cloud resources. For example: * 'google.subject':
// 'principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}' * 'google.groups':
// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}' *
// 'attribute.{custom_attribute}':
// 'principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}' Each
// value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
// attributes must not exceed 8KB. For OIDC providers, you must supply a custom mapping that includes the 'google.subject'
// attribute. For example, the following maps the sub claim of the incoming credential to the 'subject' attribute on a
// Google token: ”' {"google.subject": "assertion.sub"} ”' An object containing a list of '"key": value' pairs. Example:
// '{ "name": "wrench", "mass": "1.3kg", "count": "3" }'.
func (o IamWorkforcePoolProviderOutput) AttributeMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringMapOutput { return v.AttributeMapping }).(pulumi.StringMapOutput)
}

// A user-specified description of the provider. Cannot exceed 256 characters.
func (o IamWorkforcePoolProviderOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
// grant access.
func (o IamWorkforcePoolProviderOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// A user-specified display name for the provider. Cannot exceed 32 characters.
func (o IamWorkforcePoolProviderOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The configuration for OAuth 2.0 client used to get the additional user attributes. This should be used when users can't
// get the desired claims in authentication credentials. Currently this configuration is only supported with OIDC protocol.
func (o IamWorkforcePoolProviderOutput) ExtraAttributesOauth2Client() IamWorkforcePoolProviderExtraAttributesOauth2ClientPtrOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) IamWorkforcePoolProviderExtraAttributesOauth2ClientPtrOutput {
		return v.ExtraAttributesOauth2Client
	}).(IamWorkforcePoolProviderExtraAttributesOauth2ClientPtrOutput)
}

func (o IamWorkforcePoolProviderOutput) IamWorkforcePoolProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringOutput { return v.IamWorkforcePoolProviderId }).(pulumi.StringOutput)
}

// The location for the resource.
func (o IamWorkforcePoolProviderOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Output only. The resource name of the provider. Format:
// 'locations/{location}/workforcePools/{workforcePoolId}/providers/{providerId}'
func (o IamWorkforcePoolProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Represents an OpenId Connect 1.0 identity provider.
func (o IamWorkforcePoolProviderOutput) Oidc() IamWorkforcePoolProviderOidcPtrOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) IamWorkforcePoolProviderOidcPtrOutput { return v.Oidc }).(IamWorkforcePoolProviderOidcPtrOutput)
}

// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
func (o IamWorkforcePoolProviderOutput) ProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringOutput { return v.ProviderId }).(pulumi.StringOutput)
}

// Represents a SAML identity provider.
func (o IamWorkforcePoolProviderOutput) Saml() IamWorkforcePoolProviderSamlPtrOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) IamWorkforcePoolProviderSamlPtrOutput { return v.Saml }).(IamWorkforcePoolProviderSamlPtrOutput)
}

// The current state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active and may be
// used to validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are
// permanently deleted after approximately 30 days. You can restore a soft-deleted provider using
// [providers.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers/undelete#google.iam.admin.v1.WorkforcePools.UndeleteWorkforcePoolProvider).
func (o IamWorkforcePoolProviderOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o IamWorkforcePoolProviderOutput) Timeouts() IamWorkforcePoolProviderTimeoutsPtrOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) IamWorkforcePoolProviderTimeoutsPtrOutput { return v.Timeouts }).(IamWorkforcePoolProviderTimeoutsPtrOutput)
}

// The ID to use for the pool, which becomes the final component of the resource name. The IDs must be a globally unique
// string of 6 to 63 lowercase letters, digits, or hyphens. It must start with a letter, and cannot have a trailing hyphen.
// The prefix 'gcp-' is reserved for use by Google, and may not be specified.
func (o IamWorkforcePoolProviderOutput) WorkforcePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkforcePoolProvider) pulumi.StringOutput { return v.WorkforcePoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamWorkforcePoolProviderInput)(nil)).Elem(), &IamWorkforcePoolProvider{})
	pulumi.RegisterOutputType(IamWorkforcePoolProviderOutput{})
}
