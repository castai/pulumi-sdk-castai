// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudfunctionsFunction struct {
	pulumi.CustomResourceState

	// Memory (in MB), available to the function. Default value is 256. Possible values include 128, 256, 512, 1024, etc.
	AvailableMemoryMb pulumi.Float64PtrOutput `pulumi:"availableMemoryMb"`
	// A set of key/value environment variable pairs available during build time.
	BuildEnvironmentVariables pulumi.StringMapOutput `pulumi:"buildEnvironmentVariables"`
	// The fully-qualified name of the service account to be used for the build step of deploying this function
	BuildServiceAccount pulumi.StringOutput `pulumi:"buildServiceAccount"`
	// Name of the Cloud Build Custom Worker Pool that should be used to build the function.
	BuildWorkerPool          pulumi.StringPtrOutput `pulumi:"buildWorkerPool"`
	CloudfunctionsFunctionId pulumi.StringOutput    `pulumi:"cloudfunctionsFunctionId"`
	// Description of the function.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Docker Registry to use for storing the function's Docker images. Allowed values are ARTIFACT_REGISTRY (default) and
	// CONTAINER_REGISTRY.
	DockerRegistry pulumi.StringOutput `pulumi:"dockerRegistry"`
	// User managed repository created in Artifact Registry optionally with a customer managed encryption key. If specified,
	// deployments will use Artifact Registry for storing images built with Cloud Build.
	DockerRepository pulumi.StringPtrOutput `pulumi:"dockerRepository"`
	EffectiveLabels  pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Name of the function that will be executed when the Google Cloud Function is triggered.
	EntryPoint pulumi.StringPtrOutput `pulumi:"entryPoint"`
	// A set of key/value environment variable pairs to assign to the function.
	EnvironmentVariables pulumi.StringMapOutput `pulumi:"environmentVariables"`
	// A source that fires events in response to a condition in another service. Cannot be used with trigger_http.
	EventTrigger CloudfunctionsFunctionEventTriggerPtrOutput `pulumi:"eventTrigger"`
	// The security level for the function. Defaults to SECURE_OPTIONAL. Valid only if trigger_http is used.
	HttpsTriggerSecurityLevel pulumi.StringOutput `pulumi:"httpsTriggerSecurityLevel"`
	// URL which triggers function execution. Returned only if trigger_http is used.
	HttpsTriggerUrl pulumi.StringOutput `pulumi:"httpsTriggerUrl"`
	// String value that controls what traffic can reach the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
	// Changes to this field will recreate the cloud function.
	IngressSettings pulumi.StringPtrOutput `pulumi:"ingressSettings"`
	// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
	KmsKeyName pulumi.StringPtrOutput `pulumi:"kmsKeyName"`
	// A set of key/value label pairs to assign to the function. Label keys must follow the requirements at
	// https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The limit on the maximum number of function instances that may coexist at a given time.
	MaxInstances pulumi.Float64Output `pulumi:"maxInstances"`
	// The limit on the minimum number of function instances that may coexist at a given time.
	MinInstances pulumi.Float64PtrOutput `pulumi:"minInstances"`
	// A user-defined name of the function. Function names must be unique globally.
	Name pulumi.StringOutput `pulumi:"name"`
	// Project of the function. If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Region of function. If it is not provided, the provider region is used.
	Region pulumi.StringOutput `pulumi:"region"`
	// The runtime in which the function is going to run. Eg. "nodejs12", "nodejs14", "python37", "go111".
	Runtime pulumi.StringOutput `pulumi:"runtime"`
	// Secret environment variables configuration
	SecretEnvironmentVariables CloudfunctionsFunctionSecretEnvironmentVariableArrayOutput `pulumi:"secretEnvironmentVariables"`
	// Secret volumes configuration.
	SecretVolumes CloudfunctionsFunctionSecretVolumeArrayOutput `pulumi:"secretVolumes"`
	// If provided, the self-provided service account to run the function with.
	ServiceAccountEmail pulumi.StringOutput `pulumi:"serviceAccountEmail"`
	// The GCS bucket containing the zip archive which contains the function.
	SourceArchiveBucket pulumi.StringPtrOutput `pulumi:"sourceArchiveBucket"`
	// The source archive object (file) in archive bucket.
	SourceArchiveObject pulumi.StringPtrOutput `pulumi:"sourceArchiveObject"`
	// Represents parameters related to source repository where a function is hosted. Cannot be set alongside
	// source_archive_bucket or source_archive_object.
	SourceRepository CloudfunctionsFunctionSourceRepositoryPtrOutput `pulumi:"sourceRepository"`
	// Describes the current stage of a deployment.
	Status pulumi.StringOutput `pulumi:"status"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput `pulumi:"terraformLabels"`
	// Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
	Timeout  pulumi.Float64PtrOutput                 `pulumi:"timeout"`
	Timeouts CloudfunctionsFunctionTimeoutsPtrOutput `pulumi:"timeouts"`
	// Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP
	// request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as https_trigger_url. Cannot be used with
	// trigger_bucket and trigger_topic.
	TriggerHttp pulumi.BoolPtrOutput `pulumi:"triggerHttp"`
	// The version identifier of the Cloud Function. Each deployment attempt results in a new version of a function being
	// created.
	VersionId pulumi.StringOutput `pulumi:"versionId"`
	// The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the
	// short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.
	VpcConnector pulumi.StringPtrOutput `pulumi:"vpcConnector"`
	// The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are ALL_TRAFFIC
	// and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If unset, this field preserves the previously set value.
	VpcConnectorEgressSettings pulumi.StringOutput `pulumi:"vpcConnectorEgressSettings"`
}

// NewCloudfunctionsFunction registers a new resource with the given unique name, arguments, and options.
func NewCloudfunctionsFunction(ctx *pulumi.Context,
	name string, args *CloudfunctionsFunctionArgs, opts ...pulumi.ResourceOption) (*CloudfunctionsFunction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Runtime == nil {
		return nil, errors.New("invalid value for required argument 'Runtime'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudfunctionsFunction
	err = ctx.RegisterPackageResource("google:index/cloudfunctionsFunction:CloudfunctionsFunction", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudfunctionsFunction gets an existing CloudfunctionsFunction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudfunctionsFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudfunctionsFunctionState, opts ...pulumi.ResourceOption) (*CloudfunctionsFunction, error) {
	var resource CloudfunctionsFunction
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudfunctionsFunction:CloudfunctionsFunction", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudfunctionsFunction resources.
type cloudfunctionsFunctionState struct {
	// Memory (in MB), available to the function. Default value is 256. Possible values include 128, 256, 512, 1024, etc.
	AvailableMemoryMb *float64 `pulumi:"availableMemoryMb"`
	// A set of key/value environment variable pairs available during build time.
	BuildEnvironmentVariables map[string]string `pulumi:"buildEnvironmentVariables"`
	// The fully-qualified name of the service account to be used for the build step of deploying this function
	BuildServiceAccount *string `pulumi:"buildServiceAccount"`
	// Name of the Cloud Build Custom Worker Pool that should be used to build the function.
	BuildWorkerPool          *string `pulumi:"buildWorkerPool"`
	CloudfunctionsFunctionId *string `pulumi:"cloudfunctionsFunctionId"`
	// Description of the function.
	Description *string `pulumi:"description"`
	// Docker Registry to use for storing the function's Docker images. Allowed values are ARTIFACT_REGISTRY (default) and
	// CONTAINER_REGISTRY.
	DockerRegistry *string `pulumi:"dockerRegistry"`
	// User managed repository created in Artifact Registry optionally with a customer managed encryption key. If specified,
	// deployments will use Artifact Registry for storing images built with Cloud Build.
	DockerRepository *string           `pulumi:"dockerRepository"`
	EffectiveLabels  map[string]string `pulumi:"effectiveLabels"`
	// Name of the function that will be executed when the Google Cloud Function is triggered.
	EntryPoint *string `pulumi:"entryPoint"`
	// A set of key/value environment variable pairs to assign to the function.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// A source that fires events in response to a condition in another service. Cannot be used with trigger_http.
	EventTrigger *CloudfunctionsFunctionEventTrigger `pulumi:"eventTrigger"`
	// The security level for the function. Defaults to SECURE_OPTIONAL. Valid only if trigger_http is used.
	HttpsTriggerSecurityLevel *string `pulumi:"httpsTriggerSecurityLevel"`
	// URL which triggers function execution. Returned only if trigger_http is used.
	HttpsTriggerUrl *string `pulumi:"httpsTriggerUrl"`
	// String value that controls what traffic can reach the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
	// Changes to this field will recreate the cloud function.
	IngressSettings *string `pulumi:"ingressSettings"`
	// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// A set of key/value label pairs to assign to the function. Label keys must follow the requirements at
	// https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The limit on the maximum number of function instances that may coexist at a given time.
	MaxInstances *float64 `pulumi:"maxInstances"`
	// The limit on the minimum number of function instances that may coexist at a given time.
	MinInstances *float64 `pulumi:"minInstances"`
	// A user-defined name of the function. Function names must be unique globally.
	Name *string `pulumi:"name"`
	// Project of the function. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Region of function. If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The runtime in which the function is going to run. Eg. "nodejs12", "nodejs14", "python37", "go111".
	Runtime *string `pulumi:"runtime"`
	// Secret environment variables configuration
	SecretEnvironmentVariables []CloudfunctionsFunctionSecretEnvironmentVariable `pulumi:"secretEnvironmentVariables"`
	// Secret volumes configuration.
	SecretVolumes []CloudfunctionsFunctionSecretVolume `pulumi:"secretVolumes"`
	// If provided, the self-provided service account to run the function with.
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
	// The GCS bucket containing the zip archive which contains the function.
	SourceArchiveBucket *string `pulumi:"sourceArchiveBucket"`
	// The source archive object (file) in archive bucket.
	SourceArchiveObject *string `pulumi:"sourceArchiveObject"`
	// Represents parameters related to source repository where a function is hosted. Cannot be set alongside
	// source_archive_bucket or source_archive_object.
	SourceRepository *CloudfunctionsFunctionSourceRepository `pulumi:"sourceRepository"`
	// Describes the current stage of a deployment.
	Status *string `pulumi:"status"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string `pulumi:"terraformLabels"`
	// Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
	Timeout  *float64                        `pulumi:"timeout"`
	Timeouts *CloudfunctionsFunctionTimeouts `pulumi:"timeouts"`
	// Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP
	// request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as https_trigger_url. Cannot be used with
	// trigger_bucket and trigger_topic.
	TriggerHttp *bool `pulumi:"triggerHttp"`
	// The version identifier of the Cloud Function. Each deployment attempt results in a new version of a function being
	// created.
	VersionId *string `pulumi:"versionId"`
	// The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the
	// short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.
	VpcConnector *string `pulumi:"vpcConnector"`
	// The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are ALL_TRAFFIC
	// and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If unset, this field preserves the previously set value.
	VpcConnectorEgressSettings *string `pulumi:"vpcConnectorEgressSettings"`
}

type CloudfunctionsFunctionState struct {
	// Memory (in MB), available to the function. Default value is 256. Possible values include 128, 256, 512, 1024, etc.
	AvailableMemoryMb pulumi.Float64PtrInput
	// A set of key/value environment variable pairs available during build time.
	BuildEnvironmentVariables pulumi.StringMapInput
	// The fully-qualified name of the service account to be used for the build step of deploying this function
	BuildServiceAccount pulumi.StringPtrInput
	// Name of the Cloud Build Custom Worker Pool that should be used to build the function.
	BuildWorkerPool          pulumi.StringPtrInput
	CloudfunctionsFunctionId pulumi.StringPtrInput
	// Description of the function.
	Description pulumi.StringPtrInput
	// Docker Registry to use for storing the function's Docker images. Allowed values are ARTIFACT_REGISTRY (default) and
	// CONTAINER_REGISTRY.
	DockerRegistry pulumi.StringPtrInput
	// User managed repository created in Artifact Registry optionally with a customer managed encryption key. If specified,
	// deployments will use Artifact Registry for storing images built with Cloud Build.
	DockerRepository pulumi.StringPtrInput
	EffectiveLabels  pulumi.StringMapInput
	// Name of the function that will be executed when the Google Cloud Function is triggered.
	EntryPoint pulumi.StringPtrInput
	// A set of key/value environment variable pairs to assign to the function.
	EnvironmentVariables pulumi.StringMapInput
	// A source that fires events in response to a condition in another service. Cannot be used with trigger_http.
	EventTrigger CloudfunctionsFunctionEventTriggerPtrInput
	// The security level for the function. Defaults to SECURE_OPTIONAL. Valid only if trigger_http is used.
	HttpsTriggerSecurityLevel pulumi.StringPtrInput
	// URL which triggers function execution. Returned only if trigger_http is used.
	HttpsTriggerUrl pulumi.StringPtrInput
	// String value that controls what traffic can reach the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
	// Changes to this field will recreate the cloud function.
	IngressSettings pulumi.StringPtrInput
	// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
	KmsKeyName pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the function. Label keys must follow the requirements at
	// https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The limit on the maximum number of function instances that may coexist at a given time.
	MaxInstances pulumi.Float64PtrInput
	// The limit on the minimum number of function instances that may coexist at a given time.
	MinInstances pulumi.Float64PtrInput
	// A user-defined name of the function. Function names must be unique globally.
	Name pulumi.StringPtrInput
	// Project of the function. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Region of function. If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The runtime in which the function is going to run. Eg. "nodejs12", "nodejs14", "python37", "go111".
	Runtime pulumi.StringPtrInput
	// Secret environment variables configuration
	SecretEnvironmentVariables CloudfunctionsFunctionSecretEnvironmentVariableArrayInput
	// Secret volumes configuration.
	SecretVolumes CloudfunctionsFunctionSecretVolumeArrayInput
	// If provided, the self-provided service account to run the function with.
	ServiceAccountEmail pulumi.StringPtrInput
	// The GCS bucket containing the zip archive which contains the function.
	SourceArchiveBucket pulumi.StringPtrInput
	// The source archive object (file) in archive bucket.
	SourceArchiveObject pulumi.StringPtrInput
	// Represents parameters related to source repository where a function is hosted. Cannot be set alongside
	// source_archive_bucket or source_archive_object.
	SourceRepository CloudfunctionsFunctionSourceRepositoryPtrInput
	// Describes the current stage of a deployment.
	Status pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	// Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
	Timeout  pulumi.Float64PtrInput
	Timeouts CloudfunctionsFunctionTimeoutsPtrInput
	// Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP
	// request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as https_trigger_url. Cannot be used with
	// trigger_bucket and trigger_topic.
	TriggerHttp pulumi.BoolPtrInput
	// The version identifier of the Cloud Function. Each deployment attempt results in a new version of a function being
	// created.
	VersionId pulumi.StringPtrInput
	// The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the
	// short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.
	VpcConnector pulumi.StringPtrInput
	// The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are ALL_TRAFFIC
	// and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If unset, this field preserves the previously set value.
	VpcConnectorEgressSettings pulumi.StringPtrInput
}

func (CloudfunctionsFunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfunctionsFunctionState)(nil)).Elem()
}

type cloudfunctionsFunctionArgs struct {
	// Memory (in MB), available to the function. Default value is 256. Possible values include 128, 256, 512, 1024, etc.
	AvailableMemoryMb *float64 `pulumi:"availableMemoryMb"`
	// A set of key/value environment variable pairs available during build time.
	BuildEnvironmentVariables map[string]string `pulumi:"buildEnvironmentVariables"`
	// The fully-qualified name of the service account to be used for the build step of deploying this function
	BuildServiceAccount *string `pulumi:"buildServiceAccount"`
	// Name of the Cloud Build Custom Worker Pool that should be used to build the function.
	BuildWorkerPool          *string `pulumi:"buildWorkerPool"`
	CloudfunctionsFunctionId *string `pulumi:"cloudfunctionsFunctionId"`
	// Description of the function.
	Description *string `pulumi:"description"`
	// Docker Registry to use for storing the function's Docker images. Allowed values are ARTIFACT_REGISTRY (default) and
	// CONTAINER_REGISTRY.
	DockerRegistry *string `pulumi:"dockerRegistry"`
	// User managed repository created in Artifact Registry optionally with a customer managed encryption key. If specified,
	// deployments will use Artifact Registry for storing images built with Cloud Build.
	DockerRepository *string `pulumi:"dockerRepository"`
	// Name of the function that will be executed when the Google Cloud Function is triggered.
	EntryPoint *string `pulumi:"entryPoint"`
	// A set of key/value environment variable pairs to assign to the function.
	EnvironmentVariables map[string]string `pulumi:"environmentVariables"`
	// A source that fires events in response to a condition in another service. Cannot be used with trigger_http.
	EventTrigger *CloudfunctionsFunctionEventTrigger `pulumi:"eventTrigger"`
	// The security level for the function. Defaults to SECURE_OPTIONAL. Valid only if trigger_http is used.
	HttpsTriggerSecurityLevel *string `pulumi:"httpsTriggerSecurityLevel"`
	// URL which triggers function execution. Returned only if trigger_http is used.
	HttpsTriggerUrl *string `pulumi:"httpsTriggerUrl"`
	// String value that controls what traffic can reach the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
	// Changes to this field will recreate the cloud function.
	IngressSettings *string `pulumi:"ingressSettings"`
	// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
	KmsKeyName *string `pulumi:"kmsKeyName"`
	// A set of key/value label pairs to assign to the function. Label keys must follow the requirements at
	// https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The limit on the maximum number of function instances that may coexist at a given time.
	MaxInstances *float64 `pulumi:"maxInstances"`
	// The limit on the minimum number of function instances that may coexist at a given time.
	MinInstances *float64 `pulumi:"minInstances"`
	// A user-defined name of the function. Function names must be unique globally.
	Name *string `pulumi:"name"`
	// Project of the function. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Region of function. If it is not provided, the provider region is used.
	Region *string `pulumi:"region"`
	// The runtime in which the function is going to run. Eg. "nodejs12", "nodejs14", "python37", "go111".
	Runtime string `pulumi:"runtime"`
	// Secret environment variables configuration
	SecretEnvironmentVariables []CloudfunctionsFunctionSecretEnvironmentVariable `pulumi:"secretEnvironmentVariables"`
	// Secret volumes configuration.
	SecretVolumes []CloudfunctionsFunctionSecretVolume `pulumi:"secretVolumes"`
	// If provided, the self-provided service account to run the function with.
	ServiceAccountEmail *string `pulumi:"serviceAccountEmail"`
	// The GCS bucket containing the zip archive which contains the function.
	SourceArchiveBucket *string `pulumi:"sourceArchiveBucket"`
	// The source archive object (file) in archive bucket.
	SourceArchiveObject *string `pulumi:"sourceArchiveObject"`
	// Represents parameters related to source repository where a function is hosted. Cannot be set alongside
	// source_archive_bucket or source_archive_object.
	SourceRepository *CloudfunctionsFunctionSourceRepository `pulumi:"sourceRepository"`
	// Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
	Timeout  *float64                        `pulumi:"timeout"`
	Timeouts *CloudfunctionsFunctionTimeouts `pulumi:"timeouts"`
	// Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP
	// request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as https_trigger_url. Cannot be used with
	// trigger_bucket and trigger_topic.
	TriggerHttp *bool `pulumi:"triggerHttp"`
	// The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the
	// short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.
	VpcConnector *string `pulumi:"vpcConnector"`
	// The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are ALL_TRAFFIC
	// and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If unset, this field preserves the previously set value.
	VpcConnectorEgressSettings *string `pulumi:"vpcConnectorEgressSettings"`
}

// The set of arguments for constructing a CloudfunctionsFunction resource.
type CloudfunctionsFunctionArgs struct {
	// Memory (in MB), available to the function. Default value is 256. Possible values include 128, 256, 512, 1024, etc.
	AvailableMemoryMb pulumi.Float64PtrInput
	// A set of key/value environment variable pairs available during build time.
	BuildEnvironmentVariables pulumi.StringMapInput
	// The fully-qualified name of the service account to be used for the build step of deploying this function
	BuildServiceAccount pulumi.StringPtrInput
	// Name of the Cloud Build Custom Worker Pool that should be used to build the function.
	BuildWorkerPool          pulumi.StringPtrInput
	CloudfunctionsFunctionId pulumi.StringPtrInput
	// Description of the function.
	Description pulumi.StringPtrInput
	// Docker Registry to use for storing the function's Docker images. Allowed values are ARTIFACT_REGISTRY (default) and
	// CONTAINER_REGISTRY.
	DockerRegistry pulumi.StringPtrInput
	// User managed repository created in Artifact Registry optionally with a customer managed encryption key. If specified,
	// deployments will use Artifact Registry for storing images built with Cloud Build.
	DockerRepository pulumi.StringPtrInput
	// Name of the function that will be executed when the Google Cloud Function is triggered.
	EntryPoint pulumi.StringPtrInput
	// A set of key/value environment variable pairs to assign to the function.
	EnvironmentVariables pulumi.StringMapInput
	// A source that fires events in response to a condition in another service. Cannot be used with trigger_http.
	EventTrigger CloudfunctionsFunctionEventTriggerPtrInput
	// The security level for the function. Defaults to SECURE_OPTIONAL. Valid only if trigger_http is used.
	HttpsTriggerSecurityLevel pulumi.StringPtrInput
	// URL which triggers function execution. Returned only if trigger_http is used.
	HttpsTriggerUrl pulumi.StringPtrInput
	// String value that controls what traffic can reach the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
	// Changes to this field will recreate the cloud function.
	IngressSettings pulumi.StringPtrInput
	// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
	KmsKeyName pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the function. Label keys must follow the requirements at
	// https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The limit on the maximum number of function instances that may coexist at a given time.
	MaxInstances pulumi.Float64PtrInput
	// The limit on the minimum number of function instances that may coexist at a given time.
	MinInstances pulumi.Float64PtrInput
	// A user-defined name of the function. Function names must be unique globally.
	Name pulumi.StringPtrInput
	// Project of the function. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Region of function. If it is not provided, the provider region is used.
	Region pulumi.StringPtrInput
	// The runtime in which the function is going to run. Eg. "nodejs12", "nodejs14", "python37", "go111".
	Runtime pulumi.StringInput
	// Secret environment variables configuration
	SecretEnvironmentVariables CloudfunctionsFunctionSecretEnvironmentVariableArrayInput
	// Secret volumes configuration.
	SecretVolumes CloudfunctionsFunctionSecretVolumeArrayInput
	// If provided, the self-provided service account to run the function with.
	ServiceAccountEmail pulumi.StringPtrInput
	// The GCS bucket containing the zip archive which contains the function.
	SourceArchiveBucket pulumi.StringPtrInput
	// The source archive object (file) in archive bucket.
	SourceArchiveObject pulumi.StringPtrInput
	// Represents parameters related to source repository where a function is hosted. Cannot be set alongside
	// source_archive_bucket or source_archive_object.
	SourceRepository CloudfunctionsFunctionSourceRepositoryPtrInput
	// Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
	Timeout  pulumi.Float64PtrInput
	Timeouts CloudfunctionsFunctionTimeoutsPtrInput
	// Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP
	// request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as https_trigger_url. Cannot be used with
	// trigger_bucket and trigger_topic.
	TriggerHttp pulumi.BoolPtrInput
	// The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the
	// short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.
	VpcConnector pulumi.StringPtrInput
	// The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are ALL_TRAFFIC
	// and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If unset, this field preserves the previously set value.
	VpcConnectorEgressSettings pulumi.StringPtrInput
}

func (CloudfunctionsFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfunctionsFunctionArgs)(nil)).Elem()
}

type CloudfunctionsFunctionInput interface {
	pulumi.Input

	ToCloudfunctionsFunctionOutput() CloudfunctionsFunctionOutput
	ToCloudfunctionsFunctionOutputWithContext(ctx context.Context) CloudfunctionsFunctionOutput
}

func (*CloudfunctionsFunction) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfunctionsFunction)(nil)).Elem()
}

func (i *CloudfunctionsFunction) ToCloudfunctionsFunctionOutput() CloudfunctionsFunctionOutput {
	return i.ToCloudfunctionsFunctionOutputWithContext(context.Background())
}

func (i *CloudfunctionsFunction) ToCloudfunctionsFunctionOutputWithContext(ctx context.Context) CloudfunctionsFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfunctionsFunctionOutput)
}

type CloudfunctionsFunctionOutput struct{ *pulumi.OutputState }

func (CloudfunctionsFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfunctionsFunction)(nil)).Elem()
}

func (o CloudfunctionsFunctionOutput) ToCloudfunctionsFunctionOutput() CloudfunctionsFunctionOutput {
	return o
}

func (o CloudfunctionsFunctionOutput) ToCloudfunctionsFunctionOutputWithContext(ctx context.Context) CloudfunctionsFunctionOutput {
	return o
}

// Memory (in MB), available to the function. Default value is 256. Possible values include 128, 256, 512, 1024, etc.
func (o CloudfunctionsFunctionOutput) AvailableMemoryMb() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.Float64PtrOutput { return v.AvailableMemoryMb }).(pulumi.Float64PtrOutput)
}

// A set of key/value environment variable pairs available during build time.
func (o CloudfunctionsFunctionOutput) BuildEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringMapOutput { return v.BuildEnvironmentVariables }).(pulumi.StringMapOutput)
}

// The fully-qualified name of the service account to be used for the build step of deploying this function
func (o CloudfunctionsFunctionOutput) BuildServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.BuildServiceAccount }).(pulumi.StringOutput)
}

// Name of the Cloud Build Custom Worker Pool that should be used to build the function.
func (o CloudfunctionsFunctionOutput) BuildWorkerPool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringPtrOutput { return v.BuildWorkerPool }).(pulumi.StringPtrOutput)
}

func (o CloudfunctionsFunctionOutput) CloudfunctionsFunctionId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.CloudfunctionsFunctionId }).(pulumi.StringOutput)
}

// Description of the function.
func (o CloudfunctionsFunctionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Docker Registry to use for storing the function's Docker images. Allowed values are ARTIFACT_REGISTRY (default) and
// CONTAINER_REGISTRY.
func (o CloudfunctionsFunctionOutput) DockerRegistry() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.DockerRegistry }).(pulumi.StringOutput)
}

// User managed repository created in Artifact Registry optionally with a customer managed encryption key. If specified,
// deployments will use Artifact Registry for storing images built with Cloud Build.
func (o CloudfunctionsFunctionOutput) DockerRepository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringPtrOutput { return v.DockerRepository }).(pulumi.StringPtrOutput)
}

func (o CloudfunctionsFunctionOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Name of the function that will be executed when the Google Cloud Function is triggered.
func (o CloudfunctionsFunctionOutput) EntryPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringPtrOutput { return v.EntryPoint }).(pulumi.StringPtrOutput)
}

// A set of key/value environment variable pairs to assign to the function.
func (o CloudfunctionsFunctionOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringMapOutput { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

// A source that fires events in response to a condition in another service. Cannot be used with trigger_http.
func (o CloudfunctionsFunctionOutput) EventTrigger() CloudfunctionsFunctionEventTriggerPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) CloudfunctionsFunctionEventTriggerPtrOutput { return v.EventTrigger }).(CloudfunctionsFunctionEventTriggerPtrOutput)
}

// The security level for the function. Defaults to SECURE_OPTIONAL. Valid only if trigger_http is used.
func (o CloudfunctionsFunctionOutput) HttpsTriggerSecurityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.HttpsTriggerSecurityLevel }).(pulumi.StringOutput)
}

// URL which triggers function execution. Returned only if trigger_http is used.
func (o CloudfunctionsFunctionOutput) HttpsTriggerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.HttpsTriggerUrl }).(pulumi.StringOutput)
}

// String value that controls what traffic can reach the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
// Changes to this field will recreate the cloud function.
func (o CloudfunctionsFunctionOutput) IngressSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringPtrOutput { return v.IngressSettings }).(pulumi.StringPtrOutput)
}

// Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
func (o CloudfunctionsFunctionOutput) KmsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringPtrOutput { return v.KmsKeyName }).(pulumi.StringPtrOutput)
}

// A set of key/value label pairs to assign to the function. Label keys must follow the requirements at
// https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements. **Note**: This field is
// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o CloudfunctionsFunctionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The limit on the maximum number of function instances that may coexist at a given time.
func (o CloudfunctionsFunctionOutput) MaxInstances() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.Float64Output { return v.MaxInstances }).(pulumi.Float64Output)
}

// The limit on the minimum number of function instances that may coexist at a given time.
func (o CloudfunctionsFunctionOutput) MinInstances() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.Float64PtrOutput { return v.MinInstances }).(pulumi.Float64PtrOutput)
}

// A user-defined name of the function. Function names must be unique globally.
func (o CloudfunctionsFunctionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Project of the function. If it is not provided, the provider project is used.
func (o CloudfunctionsFunctionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Region of function. If it is not provided, the provider region is used.
func (o CloudfunctionsFunctionOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The runtime in which the function is going to run. Eg. "nodejs12", "nodejs14", "python37", "go111".
func (o CloudfunctionsFunctionOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.Runtime }).(pulumi.StringOutput)
}

// Secret environment variables configuration
func (o CloudfunctionsFunctionOutput) SecretEnvironmentVariables() CloudfunctionsFunctionSecretEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) CloudfunctionsFunctionSecretEnvironmentVariableArrayOutput {
		return v.SecretEnvironmentVariables
	}).(CloudfunctionsFunctionSecretEnvironmentVariableArrayOutput)
}

// Secret volumes configuration.
func (o CloudfunctionsFunctionOutput) SecretVolumes() CloudfunctionsFunctionSecretVolumeArrayOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) CloudfunctionsFunctionSecretVolumeArrayOutput { return v.SecretVolumes }).(CloudfunctionsFunctionSecretVolumeArrayOutput)
}

// If provided, the self-provided service account to run the function with.
func (o CloudfunctionsFunctionOutput) ServiceAccountEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.ServiceAccountEmail }).(pulumi.StringOutput)
}

// The GCS bucket containing the zip archive which contains the function.
func (o CloudfunctionsFunctionOutput) SourceArchiveBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringPtrOutput { return v.SourceArchiveBucket }).(pulumi.StringPtrOutput)
}

// The source archive object (file) in archive bucket.
func (o CloudfunctionsFunctionOutput) SourceArchiveObject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringPtrOutput { return v.SourceArchiveObject }).(pulumi.StringPtrOutput)
}

// Represents parameters related to source repository where a function is hosted. Cannot be set alongside
// source_archive_bucket or source_archive_object.
func (o CloudfunctionsFunctionOutput) SourceRepository() CloudfunctionsFunctionSourceRepositoryPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) CloudfunctionsFunctionSourceRepositoryPtrOutput {
		return v.SourceRepository
	}).(CloudfunctionsFunctionSourceRepositoryPtrOutput)
}

// Describes the current stage of a deployment.
func (o CloudfunctionsFunctionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o CloudfunctionsFunctionOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

// Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds.
func (o CloudfunctionsFunctionOutput) Timeout() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.Float64PtrOutput { return v.Timeout }).(pulumi.Float64PtrOutput)
}

func (o CloudfunctionsFunctionOutput) Timeouts() CloudfunctionsFunctionTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) CloudfunctionsFunctionTimeoutsPtrOutput { return v.Timeouts }).(CloudfunctionsFunctionTimeoutsPtrOutput)
}

// Boolean variable. Any HTTP request (of a supported type) to the endpoint will trigger function execution. Supported HTTP
// request types are: POST, PUT, GET, DELETE, and OPTIONS. Endpoint is returned as https_trigger_url. Cannot be used with
// trigger_bucket and trigger_topic.
func (o CloudfunctionsFunctionOutput) TriggerHttp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.BoolPtrOutput { return v.TriggerHttp }).(pulumi.BoolPtrOutput)
}

// The version identifier of the Cloud Function. Each deployment attempt results in a new version of a function being
// created.
func (o CloudfunctionsFunctionOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.VersionId }).(pulumi.StringOutput)
}

// The VPC Network Connector that this cloud function can connect to. It can be either the fully-qualified URI, or the
// short name of the network connector resource. The format of this field is projects/*/locations/*/connectors/*.
func (o CloudfunctionsFunctionOutput) VpcConnector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringPtrOutput { return v.VpcConnector }).(pulumi.StringPtrOutput)
}

// The egress settings for the connector, controlling what traffic is diverted through it. Allowed values are ALL_TRAFFIC
// and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If unset, this field preserves the previously set value.
func (o CloudfunctionsFunctionOutput) VpcConnectorEgressSettings() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunction) pulumi.StringOutput { return v.VpcConnectorEgressSettings }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfunctionsFunctionInput)(nil)).Elem(), &CloudfunctionsFunction{})
	pulumi.RegisterOutputType(CloudfunctionsFunctionOutput{})
}
