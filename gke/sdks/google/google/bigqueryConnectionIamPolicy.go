// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryConnectionIamPolicy struct {
	pulumi.CustomResourceState

	BigqueryConnectionIamPolicyId pulumi.StringOutput `pulumi:"bigqueryConnectionIamPolicyId"`
	ConnectionId                  pulumi.StringOutput `pulumi:"connectionId"`
	Etag                          pulumi.StringOutput `pulumi:"etag"`
	Location                      pulumi.StringOutput `pulumi:"location"`
	PolicyData                    pulumi.StringOutput `pulumi:"policyData"`
	Project                       pulumi.StringOutput `pulumi:"project"`
}

// NewBigqueryConnectionIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewBigqueryConnectionIamPolicy(ctx *pulumi.Context,
	name string, args *BigqueryConnectionIamPolicyArgs, opts ...pulumi.ResourceOption) (*BigqueryConnectionIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryConnectionIamPolicy
	err = ctx.RegisterPackageResource("google:index/bigqueryConnectionIamPolicy:BigqueryConnectionIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryConnectionIamPolicy gets an existing BigqueryConnectionIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryConnectionIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryConnectionIamPolicyState, opts ...pulumi.ResourceOption) (*BigqueryConnectionIamPolicy, error) {
	var resource BigqueryConnectionIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigqueryConnectionIamPolicy:BigqueryConnectionIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryConnectionIamPolicy resources.
type bigqueryConnectionIamPolicyState struct {
	BigqueryConnectionIamPolicyId *string `pulumi:"bigqueryConnectionIamPolicyId"`
	ConnectionId                  *string `pulumi:"connectionId"`
	Etag                          *string `pulumi:"etag"`
	Location                      *string `pulumi:"location"`
	PolicyData                    *string `pulumi:"policyData"`
	Project                       *string `pulumi:"project"`
}

type BigqueryConnectionIamPolicyState struct {
	BigqueryConnectionIamPolicyId pulumi.StringPtrInput
	ConnectionId                  pulumi.StringPtrInput
	Etag                          pulumi.StringPtrInput
	Location                      pulumi.StringPtrInput
	PolicyData                    pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
}

func (BigqueryConnectionIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryConnectionIamPolicyState)(nil)).Elem()
}

type bigqueryConnectionIamPolicyArgs struct {
	BigqueryConnectionIamPolicyId *string `pulumi:"bigqueryConnectionIamPolicyId"`
	ConnectionId                  string  `pulumi:"connectionId"`
	Location                      *string `pulumi:"location"`
	PolicyData                    string  `pulumi:"policyData"`
	Project                       *string `pulumi:"project"`
}

// The set of arguments for constructing a BigqueryConnectionIamPolicy resource.
type BigqueryConnectionIamPolicyArgs struct {
	BigqueryConnectionIamPolicyId pulumi.StringPtrInput
	ConnectionId                  pulumi.StringInput
	Location                      pulumi.StringPtrInput
	PolicyData                    pulumi.StringInput
	Project                       pulumi.StringPtrInput
}

func (BigqueryConnectionIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryConnectionIamPolicyArgs)(nil)).Elem()
}

type BigqueryConnectionIamPolicyInput interface {
	pulumi.Input

	ToBigqueryConnectionIamPolicyOutput() BigqueryConnectionIamPolicyOutput
	ToBigqueryConnectionIamPolicyOutputWithContext(ctx context.Context) BigqueryConnectionIamPolicyOutput
}

func (*BigqueryConnectionIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryConnectionIamPolicy)(nil)).Elem()
}

func (i *BigqueryConnectionIamPolicy) ToBigqueryConnectionIamPolicyOutput() BigqueryConnectionIamPolicyOutput {
	return i.ToBigqueryConnectionIamPolicyOutputWithContext(context.Background())
}

func (i *BigqueryConnectionIamPolicy) ToBigqueryConnectionIamPolicyOutputWithContext(ctx context.Context) BigqueryConnectionIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryConnectionIamPolicyOutput)
}

type BigqueryConnectionIamPolicyOutput struct{ *pulumi.OutputState }

func (BigqueryConnectionIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryConnectionIamPolicy)(nil)).Elem()
}

func (o BigqueryConnectionIamPolicyOutput) ToBigqueryConnectionIamPolicyOutput() BigqueryConnectionIamPolicyOutput {
	return o
}

func (o BigqueryConnectionIamPolicyOutput) ToBigqueryConnectionIamPolicyOutputWithContext(ctx context.Context) BigqueryConnectionIamPolicyOutput {
	return o
}

func (o BigqueryConnectionIamPolicyOutput) BigqueryConnectionIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamPolicy) pulumi.StringOutput { return v.BigqueryConnectionIamPolicyId }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamPolicyOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamPolicy) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryConnectionIamPolicyInput)(nil)).Elem(), &BigqueryConnectionIamPolicy{})
	pulumi.RegisterOutputType(BigqueryConnectionIamPolicyOutput{})
}
