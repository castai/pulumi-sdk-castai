// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetComputeRegions(ctx *pulumi.Context, args *GetComputeRegionsArgs, opts ...pulumi.InvokeOption) (*GetComputeRegionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetComputeRegionsResult
	err = ctx.InvokePackage("google:index/getComputeRegions:getComputeRegions", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeRegions.
type GetComputeRegionsArgs struct {
	Id      *string `pulumi:"id"`
	Project *string `pulumi:"project"`
	Status  *string `pulumi:"status"`
}

// A collection of values returned by getComputeRegions.
type GetComputeRegionsResult struct {
	Id      string   `pulumi:"id"`
	Names   []string `pulumi:"names"`
	Project string   `pulumi:"project"`
	Status  *string  `pulumi:"status"`
}

func GetComputeRegionsOutput(ctx *pulumi.Context, args GetComputeRegionsOutputArgs, opts ...pulumi.InvokeOption) GetComputeRegionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetComputeRegionsResultOutput, error) {
			args := v.(GetComputeRegionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetComputeRegionsResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getComputeRegions:getComputeRegions", args, GetComputeRegionsResultOutput{}, options).(GetComputeRegionsResultOutput), nil
		}).(GetComputeRegionsResultOutput)
}

// A collection of arguments for invoking getComputeRegions.
type GetComputeRegionsOutputArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Project pulumi.StringPtrInput `pulumi:"project"`
	Status  pulumi.StringPtrInput `pulumi:"status"`
}

func (GetComputeRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getComputeRegions.
type GetComputeRegionsResultOutput struct{ *pulumi.OutputState }

func (GetComputeRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeRegionsResult)(nil)).Elem()
}

func (o GetComputeRegionsResultOutput) ToGetComputeRegionsResultOutput() GetComputeRegionsResultOutput {
	return o
}

func (o GetComputeRegionsResultOutput) ToGetComputeRegionsResultOutputWithContext(ctx context.Context) GetComputeRegionsResultOutput {
	return o
}

func (o GetComputeRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComputeRegionsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeRegionsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetComputeRegionsResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeRegionsResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetComputeRegionsResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeRegionsResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetComputeRegionsResultOutput{})
}
