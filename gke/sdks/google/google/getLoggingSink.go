// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetLoggingSink(ctx *pulumi.Context, args *GetLoggingSinkArgs, opts ...pulumi.InvokeOption) (*GetLoggingSinkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetLoggingSinkResult
	err = ctx.InvokePackage("google:index/getLoggingSink:getLoggingSink", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoggingSink.
type GetLoggingSinkArgs struct {
	Id string `pulumi:"id"`
}

// A collection of values returned by getLoggingSink.
type GetLoggingSinkResult struct {
	BigqueryOptions []GetLoggingSinkBigqueryOption `pulumi:"bigqueryOptions"`
	Description     string                         `pulumi:"description"`
	Destination     string                         `pulumi:"destination"`
	Disabled        bool                           `pulumi:"disabled"`
	Exclusions      []GetLoggingSinkExclusion      `pulumi:"exclusions"`
	Filter          string                         `pulumi:"filter"`
	Id              string                         `pulumi:"id"`
	Name            string                         `pulumi:"name"`
	WriterIdentity  string                         `pulumi:"writerIdentity"`
}

func GetLoggingSinkOutput(ctx *pulumi.Context, args GetLoggingSinkOutputArgs, opts ...pulumi.InvokeOption) GetLoggingSinkResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLoggingSinkResultOutput, error) {
			args := v.(GetLoggingSinkArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetLoggingSinkResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getLoggingSink:getLoggingSink", args, GetLoggingSinkResultOutput{}, options).(GetLoggingSinkResultOutput), nil
		}).(GetLoggingSinkResultOutput)
}

// A collection of arguments for invoking getLoggingSink.
type GetLoggingSinkOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetLoggingSinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoggingSinkArgs)(nil)).Elem()
}

// A collection of values returned by getLoggingSink.
type GetLoggingSinkResultOutput struct{ *pulumi.OutputState }

func (GetLoggingSinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoggingSinkResult)(nil)).Elem()
}

func (o GetLoggingSinkResultOutput) ToGetLoggingSinkResultOutput() GetLoggingSinkResultOutput {
	return o
}

func (o GetLoggingSinkResultOutput) ToGetLoggingSinkResultOutputWithContext(ctx context.Context) GetLoggingSinkResultOutput {
	return o
}

func (o GetLoggingSinkResultOutput) BigqueryOptions() GetLoggingSinkBigqueryOptionArrayOutput {
	return o.ApplyT(func(v GetLoggingSinkResult) []GetLoggingSinkBigqueryOption { return v.BigqueryOptions }).(GetLoggingSinkBigqueryOptionArrayOutput)
}

func (o GetLoggingSinkResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingSinkResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLoggingSinkResultOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingSinkResult) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetLoggingSinkResultOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoggingSinkResult) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetLoggingSinkResultOutput) Exclusions() GetLoggingSinkExclusionArrayOutput {
	return o.ApplyT(func(v GetLoggingSinkResult) []GetLoggingSinkExclusion { return v.Exclusions }).(GetLoggingSinkExclusionArrayOutput)
}

func (o GetLoggingSinkResultOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingSinkResult) string { return v.Filter }).(pulumi.StringOutput)
}

func (o GetLoggingSinkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingSinkResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLoggingSinkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingSinkResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLoggingSinkResultOutput) WriterIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoggingSinkResult) string { return v.WriterIdentity }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLoggingSinkResultOutput{})
}
