// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeResourcePolicy struct {
	pulumi.CustomResourceState

	ComputeResourcePolicyId pulumi.StringOutput `pulumi:"computeResourcePolicyId"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Replication consistency group for asynchronous disk replication.
	DiskConsistencyGroupPolicy ComputeResourcePolicyDiskConsistencyGroupPolicyPtrOutput `pulumi:"diskConsistencyGroupPolicy"`
	// Resource policy for instances used for placement configuration.
	GroupPlacementPolicy ComputeResourcePolicyGroupPlacementPolicyPtrOutput `pulumi:"groupPlacementPolicy"`
	// Resource policy for scheduling instance operations.
	InstanceSchedulePolicy ComputeResourcePolicyInstanceSchedulePolicyPtrOutput `pulumi:"instanceSchedulePolicy"`
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z'? which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Region where resource policy resides.
	Region   pulumi.StringOutput `pulumi:"region"`
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Policy for creating snapshots of persistent disks.
	SnapshotSchedulePolicy ComputeResourcePolicySnapshotSchedulePolicyPtrOutput `pulumi:"snapshotSchedulePolicy"`
	Timeouts               ComputeResourcePolicyTimeoutsPtrOutput               `pulumi:"timeouts"`
}

// NewComputeResourcePolicy registers a new resource with the given unique name, arguments, and options.
func NewComputeResourcePolicy(ctx *pulumi.Context,
	name string, args *ComputeResourcePolicyArgs, opts ...pulumi.ResourceOption) (*ComputeResourcePolicy, error) {
	if args == nil {
		args = &ComputeResourcePolicyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeResourcePolicy
	err = ctx.RegisterPackageResource("google:index/computeResourcePolicy:ComputeResourcePolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeResourcePolicy gets an existing ComputeResourcePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeResourcePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeResourcePolicyState, opts ...pulumi.ResourceOption) (*ComputeResourcePolicy, error) {
	var resource ComputeResourcePolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeResourcePolicy:ComputeResourcePolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeResourcePolicy resources.
type computeResourcePolicyState struct {
	ComputeResourcePolicyId *string `pulumi:"computeResourcePolicyId"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Replication consistency group for asynchronous disk replication.
	DiskConsistencyGroupPolicy *ComputeResourcePolicyDiskConsistencyGroupPolicy `pulumi:"diskConsistencyGroupPolicy"`
	// Resource policy for instances used for placement configuration.
	GroupPlacementPolicy *ComputeResourcePolicyGroupPlacementPolicy `pulumi:"groupPlacementPolicy"`
	// Resource policy for scheduling instance operations.
	InstanceSchedulePolicy *ComputeResourcePolicyInstanceSchedulePolicy `pulumi:"instanceSchedulePolicy"`
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z'? which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Region where resource policy resides.
	Region   *string `pulumi:"region"`
	SelfLink *string `pulumi:"selfLink"`
	// Policy for creating snapshots of persistent disks.
	SnapshotSchedulePolicy *ComputeResourcePolicySnapshotSchedulePolicy `pulumi:"snapshotSchedulePolicy"`
	Timeouts               *ComputeResourcePolicyTimeouts               `pulumi:"timeouts"`
}

type ComputeResourcePolicyState struct {
	ComputeResourcePolicyId pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Replication consistency group for asynchronous disk replication.
	DiskConsistencyGroupPolicy ComputeResourcePolicyDiskConsistencyGroupPolicyPtrInput
	// Resource policy for instances used for placement configuration.
	GroupPlacementPolicy ComputeResourcePolicyGroupPlacementPolicyPtrInput
	// Resource policy for scheduling instance operations.
	InstanceSchedulePolicy ComputeResourcePolicyInstanceSchedulePolicyPtrInput
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z'? which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Region where resource policy resides.
	Region   pulumi.StringPtrInput
	SelfLink pulumi.StringPtrInput
	// Policy for creating snapshots of persistent disks.
	SnapshotSchedulePolicy ComputeResourcePolicySnapshotSchedulePolicyPtrInput
	Timeouts               ComputeResourcePolicyTimeoutsPtrInput
}

func (ComputeResourcePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeResourcePolicyState)(nil)).Elem()
}

type computeResourcePolicyArgs struct {
	ComputeResourcePolicyId *string `pulumi:"computeResourcePolicyId"`
	// An optional description of this resource. Provide this property when you create the resource.
	Description *string `pulumi:"description"`
	// Replication consistency group for asynchronous disk replication.
	DiskConsistencyGroupPolicy *ComputeResourcePolicyDiskConsistencyGroupPolicy `pulumi:"diskConsistencyGroupPolicy"`
	// Resource policy for instances used for placement configuration.
	GroupPlacementPolicy *ComputeResourcePolicyGroupPlacementPolicy `pulumi:"groupPlacementPolicy"`
	// Resource policy for scheduling instance operations.
	InstanceSchedulePolicy *ComputeResourcePolicyInstanceSchedulePolicy `pulumi:"instanceSchedulePolicy"`
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z'? which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Region where resource policy resides.
	Region *string `pulumi:"region"`
	// Policy for creating snapshots of persistent disks.
	SnapshotSchedulePolicy *ComputeResourcePolicySnapshotSchedulePolicy `pulumi:"snapshotSchedulePolicy"`
	Timeouts               *ComputeResourcePolicyTimeouts               `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeResourcePolicy resource.
type ComputeResourcePolicyArgs struct {
	ComputeResourcePolicyId pulumi.StringPtrInput
	// An optional description of this resource. Provide this property when you create the resource.
	Description pulumi.StringPtrInput
	// Replication consistency group for asynchronous disk replication.
	DiskConsistencyGroupPolicy ComputeResourcePolicyDiskConsistencyGroupPolicyPtrInput
	// Resource policy for instances used for placement configuration.
	GroupPlacementPolicy ComputeResourcePolicyGroupPlacementPolicyPtrInput
	// Resource policy for scheduling instance operations.
	InstanceSchedulePolicy ComputeResourcePolicyInstanceSchedulePolicyPtrInput
	// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63
	// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
	// expression 'a-z'? which means the first character must be a lowercase letter, and all following characters must be a
	// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Region where resource policy resides.
	Region pulumi.StringPtrInput
	// Policy for creating snapshots of persistent disks.
	SnapshotSchedulePolicy ComputeResourcePolicySnapshotSchedulePolicyPtrInput
	Timeouts               ComputeResourcePolicyTimeoutsPtrInput
}

func (ComputeResourcePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeResourcePolicyArgs)(nil)).Elem()
}

type ComputeResourcePolicyInput interface {
	pulumi.Input

	ToComputeResourcePolicyOutput() ComputeResourcePolicyOutput
	ToComputeResourcePolicyOutputWithContext(ctx context.Context) ComputeResourcePolicyOutput
}

func (*ComputeResourcePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeResourcePolicy)(nil)).Elem()
}

func (i *ComputeResourcePolicy) ToComputeResourcePolicyOutput() ComputeResourcePolicyOutput {
	return i.ToComputeResourcePolicyOutputWithContext(context.Background())
}

func (i *ComputeResourcePolicy) ToComputeResourcePolicyOutputWithContext(ctx context.Context) ComputeResourcePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeResourcePolicyOutput)
}

type ComputeResourcePolicyOutput struct{ *pulumi.OutputState }

func (ComputeResourcePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeResourcePolicy)(nil)).Elem()
}

func (o ComputeResourcePolicyOutput) ToComputeResourcePolicyOutput() ComputeResourcePolicyOutput {
	return o
}

func (o ComputeResourcePolicyOutput) ToComputeResourcePolicyOutputWithContext(ctx context.Context) ComputeResourcePolicyOutput {
	return o
}

func (o ComputeResourcePolicyOutput) ComputeResourcePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) pulumi.StringOutput { return v.ComputeResourcePolicyId }).(pulumi.StringOutput)
}

// An optional description of this resource. Provide this property when you create the resource.
func (o ComputeResourcePolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Replication consistency group for asynchronous disk replication.
func (o ComputeResourcePolicyOutput) DiskConsistencyGroupPolicy() ComputeResourcePolicyDiskConsistencyGroupPolicyPtrOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) ComputeResourcePolicyDiskConsistencyGroupPolicyPtrOutput {
		return v.DiskConsistencyGroupPolicy
	}).(ComputeResourcePolicyDiskConsistencyGroupPolicyPtrOutput)
}

// Resource policy for instances used for placement configuration.
func (o ComputeResourcePolicyOutput) GroupPlacementPolicy() ComputeResourcePolicyGroupPlacementPolicyPtrOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) ComputeResourcePolicyGroupPlacementPolicyPtrOutput {
		return v.GroupPlacementPolicy
	}).(ComputeResourcePolicyGroupPlacementPolicyPtrOutput)
}

// Resource policy for scheduling instance operations.
func (o ComputeResourcePolicyOutput) InstanceSchedulePolicy() ComputeResourcePolicyInstanceSchedulePolicyPtrOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) ComputeResourcePolicyInstanceSchedulePolicyPtrOutput {
		return v.InstanceSchedulePolicy
	}).(ComputeResourcePolicyInstanceSchedulePolicyPtrOutput)
}

// The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63
// characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
// expression 'a-z'? which means the first character must be a lowercase letter, and all following characters must be a
// dash, lowercase letter, or digit, except the last character, which cannot be a dash.
func (o ComputeResourcePolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeResourcePolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Region where resource policy resides.
func (o ComputeResourcePolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComputeResourcePolicyOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Policy for creating snapshots of persistent disks.
func (o ComputeResourcePolicyOutput) SnapshotSchedulePolicy() ComputeResourcePolicySnapshotSchedulePolicyPtrOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) ComputeResourcePolicySnapshotSchedulePolicyPtrOutput {
		return v.SnapshotSchedulePolicy
	}).(ComputeResourcePolicySnapshotSchedulePolicyPtrOutput)
}

func (o ComputeResourcePolicyOutput) Timeouts() ComputeResourcePolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeResourcePolicy) ComputeResourcePolicyTimeoutsPtrOutput { return v.Timeouts }).(ComputeResourcePolicyTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeResourcePolicyInput)(nil)).Elem(), &ComputeResourcePolicy{})
	pulumi.RegisterOutputType(ComputeResourcePolicyOutput{})
}
