// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudRunV2Service struct {
	pulumi.CustomResourceState

	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected in new
	// resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Settings for the Binary Authorization feature.
	BinaryAuthorization CloudRunV2ServiceBinaryAuthorizationPtrOutput `pulumi:"binaryAuthorization"`
	// Configuration for building a Cloud Run function.
	BuildConfig CloudRunV2ServiceBuildConfigPtrOutput `pulumi:"buildConfig"`
	// Arbitrary identifier for the API client.
	Client pulumi.StringPtrOutput `pulumi:"client"`
	// Arbitrary version identifier for the API client.
	ClientVersion       pulumi.StringPtrOutput `pulumi:"clientVersion"`
	CloudRunV2ServiceId pulumi.StringOutput    `pulumi:"cloudRunV2ServiceId"`
	// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the
	// Service does not reach its Serving state. See comments in reconciling for additional information on reconciliation
	// process in Cloud Run.
	Conditions CloudRunV2ServiceConditionArrayOutput `pulumi:"conditions"`
	// The creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Email address of the authenticated creator.
	Creator pulumi.StringOutput `pulumi:"creator"`
	// One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a
	// string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see
	// https://cloud.google.com/run/docs/configuring/custom-audiences.
	CustomAudiences pulumi.StringArrayOutput `pulumi:"customAudiences"`
	// The deletion time.
	DeleteTime         pulumi.StringOutput  `pulumi:"deleteTime"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// User-provided description of the Service. This field currently has a 512-character limit.
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during
	// updates.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// For a deleted resource, the time after which it will be permanently deleted.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this
	// is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
	Generation pulumi.StringOutput `pulumi:"generation"`
	// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or
	// INGRESS_TRAFFIC_UNSPECIFIED if no revision is active. Possible values: ["INGRESS_TRAFFIC_ALL",
	// "INGRESS_TRAFFIC_INTERNAL_ONLY", "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"]
	Ingress pulumi.StringOutput `pulumi:"ingress"`
	// Disables IAM permission check for run.routes.invoke for callers of this service. This feature is available by invitation
	// only. For more information, visit https://cloud.google.com/run/docs/securing/managing-access#invoker_check.
	InvokerIamDisabled pulumi.BoolPtrOutput `pulumi:"invokerIamDisabled"`
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Service. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Email address of the last authenticated modifier.
	LastModifier pulumi.StringOutput `pulumi:"lastModifier"`
	// Name of the last created revision. See comments in reconciling for additional information on reconciliation process in
	// Cloud Run.
	LatestCreatedRevision pulumi.StringOutput `pulumi:"latestCreatedRevision"`
	// Name of the latest revision that is serving traffic. See comments in reconciling for additional information on
	// reconciliation process in Cloud Run.
	LatestReadyRevision pulumi.StringOutput `pulumi:"latestReadyRevision"`
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage pulumi.StringOutput `pulumi:"launchStage"`
	// The location of the cloud run service
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the Service.
	Name pulumi.StringOutput `pulumi:"name"`
	// The generation of this Service currently serving traffic. See comments in reconciling for additional information on
	// reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its
	// JSON representation will be a string instead of an integer.
	ObservedGeneration pulumi.StringOutput `pulumi:"observedGeneration"`
	Project            pulumi.StringOutput `pulumi:"project"`
	// Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new
	// Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring
	// the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process,
	// observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the
	// intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation
	// succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be
	// found in terminalCondition.state. If reconciliation succeeded, the following fields will match: traffic and
	// trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision. If reconciliation
	// failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision,
	// or empty for newly created Services. Additional information on the failure can be found in terminalCondition and
	// conditions.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Scaling settings that apply to the whole service
	Scaling CloudRunV2ServiceScalingPtrOutput `pulumi:"scaling"`
	// The template used to create revisions for this Service.
	Template CloudRunV2ServiceTemplateOutput `pulumi:"template"`
	// The Condition of this Service, containing its readiness status, and detailed error information in case it did not reach
	// a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
	TerminalConditions CloudRunV2ServiceTerminalConditionArrayOutput `pulumi:"terminalConditions"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput             `pulumi:"terraformLabels"`
	Timeouts        CloudRunV2ServiceTimeoutsPtrOutput `pulumi:"timeouts"`
	// Detailed status information for corresponding traffic targets. See comments in reconciling for additional information on
	// reconciliation process in Cloud Run.
	TrafficStatuses CloudRunV2ServiceTrafficStatusArrayOutput `pulumi:"trafficStatuses"`
	// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not
	// provided, defaults to 100% traffic to the latest Ready Revision.
	Traffics CloudRunV2ServiceTrafficArrayOutput `pulumi:"traffics"`
	// Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until
	// the resource is deleted.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The last-modified time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The main URI in which this Service is serving traffic.
	Uri pulumi.StringOutput `pulumi:"uri"`
	// All URLs serving traffic for this Service.
	Urls pulumi.StringArrayOutput `pulumi:"urls"`
}

// NewCloudRunV2Service registers a new resource with the given unique name, arguments, and options.
func NewCloudRunV2Service(ctx *pulumi.Context,
	name string, args *CloudRunV2ServiceArgs, opts ...pulumi.ResourceOption) (*CloudRunV2Service, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Template == nil {
		return nil, errors.New("invalid value for required argument 'Template'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudRunV2Service
	err = ctx.RegisterPackageResource("google:index/cloudRunV2Service:CloudRunV2Service", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudRunV2Service gets an existing CloudRunV2Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudRunV2Service(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudRunV2ServiceState, opts ...pulumi.ResourceOption) (*CloudRunV2Service, error) {
	var resource CloudRunV2Service
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudRunV2Service:CloudRunV2Service", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudRunV2Service resources.
type cloudRunV2ServiceState struct {
	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected in new
	// resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Settings for the Binary Authorization feature.
	BinaryAuthorization *CloudRunV2ServiceBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Configuration for building a Cloud Run function.
	BuildConfig *CloudRunV2ServiceBuildConfig `pulumi:"buildConfig"`
	// Arbitrary identifier for the API client.
	Client *string `pulumi:"client"`
	// Arbitrary version identifier for the API client.
	ClientVersion       *string `pulumi:"clientVersion"`
	CloudRunV2ServiceId *string `pulumi:"cloudRunV2ServiceId"`
	// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the
	// Service does not reach its Serving state. See comments in reconciling for additional information on reconciliation
	// process in Cloud Run.
	Conditions []CloudRunV2ServiceCondition `pulumi:"conditions"`
	// The creation time.
	CreateTime *string `pulumi:"createTime"`
	// Email address of the authenticated creator.
	Creator *string `pulumi:"creator"`
	// One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a
	// string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see
	// https://cloud.google.com/run/docs/configuring/custom-audiences.
	CustomAudiences []string `pulumi:"customAudiences"`
	// The deletion time.
	DeleteTime         *string `pulumi:"deleteTime"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// User-provided description of the Service. This field currently has a 512-character limit.
	Description          *string           `pulumi:"description"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during
	// updates.
	Etag *string `pulumi:"etag"`
	// For a deleted resource, the time after which it will be permanently deleted.
	ExpireTime *string `pulumi:"expireTime"`
	// A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this
	// is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
	Generation *string `pulumi:"generation"`
	// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or
	// INGRESS_TRAFFIC_UNSPECIFIED if no revision is active. Possible values: ["INGRESS_TRAFFIC_ALL",
	// "INGRESS_TRAFFIC_INTERNAL_ONLY", "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"]
	Ingress *string `pulumi:"ingress"`
	// Disables IAM permission check for run.routes.invoke for callers of this service. This feature is available by invitation
	// only. For more information, visit https://cloud.google.com/run/docs/securing/managing-access#invoker_check.
	InvokerIamDisabled *bool `pulumi:"invokerIamDisabled"`
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Service. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Email address of the last authenticated modifier.
	LastModifier *string `pulumi:"lastModifier"`
	// Name of the last created revision. See comments in reconciling for additional information on reconciliation process in
	// Cloud Run.
	LatestCreatedRevision *string `pulumi:"latestCreatedRevision"`
	// Name of the latest revision that is serving traffic. See comments in reconciling for additional information on
	// reconciliation process in Cloud Run.
	LatestReadyRevision *string `pulumi:"latestReadyRevision"`
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage *string `pulumi:"launchStage"`
	// The location of the cloud run service
	Location *string `pulumi:"location"`
	// Name of the Service.
	Name *string `pulumi:"name"`
	// The generation of this Service currently serving traffic. See comments in reconciling for additional information on
	// reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its
	// JSON representation will be a string instead of an integer.
	ObservedGeneration *string `pulumi:"observedGeneration"`
	Project            *string `pulumi:"project"`
	// Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new
	// Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring
	// the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process,
	// observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the
	// intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation
	// succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be
	// found in terminalCondition.state. If reconciliation succeeded, the following fields will match: traffic and
	// trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision. If reconciliation
	// failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision,
	// or empty for newly created Services. Additional information on the failure can be found in terminalCondition and
	// conditions.
	Reconciling *bool `pulumi:"reconciling"`
	// Scaling settings that apply to the whole service
	Scaling *CloudRunV2ServiceScaling `pulumi:"scaling"`
	// The template used to create revisions for this Service.
	Template *CloudRunV2ServiceTemplate `pulumi:"template"`
	// The Condition of this Service, containing its readiness status, and detailed error information in case it did not reach
	// a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
	TerminalConditions []CloudRunV2ServiceTerminalCondition `pulumi:"terminalConditions"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string          `pulumi:"terraformLabels"`
	Timeouts        *CloudRunV2ServiceTimeouts `pulumi:"timeouts"`
	// Detailed status information for corresponding traffic targets. See comments in reconciling for additional information on
	// reconciliation process in Cloud Run.
	TrafficStatuses []CloudRunV2ServiceTrafficStatus `pulumi:"trafficStatuses"`
	// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not
	// provided, defaults to 100% traffic to the latest Ready Revision.
	Traffics []CloudRunV2ServiceTraffic `pulumi:"traffics"`
	// Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until
	// the resource is deleted.
	Uid *string `pulumi:"uid"`
	// The last-modified time.
	UpdateTime *string `pulumi:"updateTime"`
	// The main URI in which this Service is serving traffic.
	Uri *string `pulumi:"uri"`
	// All URLs serving traffic for this Service.
	Urls []string `pulumi:"urls"`
}

type CloudRunV2ServiceState struct {
	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected in new
	// resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations pulumi.StringMapInput
	// Settings for the Binary Authorization feature.
	BinaryAuthorization CloudRunV2ServiceBinaryAuthorizationPtrInput
	// Configuration for building a Cloud Run function.
	BuildConfig CloudRunV2ServiceBuildConfigPtrInput
	// Arbitrary identifier for the API client.
	Client pulumi.StringPtrInput
	// Arbitrary version identifier for the API client.
	ClientVersion       pulumi.StringPtrInput
	CloudRunV2ServiceId pulumi.StringPtrInput
	// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the
	// Service does not reach its Serving state. See comments in reconciling for additional information on reconciliation
	// process in Cloud Run.
	Conditions CloudRunV2ServiceConditionArrayInput
	// The creation time.
	CreateTime pulumi.StringPtrInput
	// Email address of the authenticated creator.
	Creator pulumi.StringPtrInput
	// One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a
	// string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see
	// https://cloud.google.com/run/docs/configuring/custom-audiences.
	CustomAudiences pulumi.StringArrayInput
	// The deletion time.
	DeleteTime         pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// User-provided description of the Service. This field currently has a 512-character limit.
	Description          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during
	// updates.
	Etag pulumi.StringPtrInput
	// For a deleted resource, the time after which it will be permanently deleted.
	ExpireTime pulumi.StringPtrInput
	// A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this
	// is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
	Generation pulumi.StringPtrInput
	// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or
	// INGRESS_TRAFFIC_UNSPECIFIED if no revision is active. Possible values: ["INGRESS_TRAFFIC_ALL",
	// "INGRESS_TRAFFIC_INTERNAL_ONLY", "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"]
	Ingress pulumi.StringPtrInput
	// Disables IAM permission check for run.routes.invoke for callers of this service. This feature is available by invitation
	// only. For more information, visit https://cloud.google.com/run/docs/securing/managing-access#invoker_check.
	InvokerIamDisabled pulumi.BoolPtrInput
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Service. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Email address of the last authenticated modifier.
	LastModifier pulumi.StringPtrInput
	// Name of the last created revision. See comments in reconciling for additional information on reconciliation process in
	// Cloud Run.
	LatestCreatedRevision pulumi.StringPtrInput
	// Name of the latest revision that is serving traffic. See comments in reconciling for additional information on
	// reconciliation process in Cloud Run.
	LatestReadyRevision pulumi.StringPtrInput
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage pulumi.StringPtrInput
	// The location of the cloud run service
	Location pulumi.StringPtrInput
	// Name of the Service.
	Name pulumi.StringPtrInput
	// The generation of this Service currently serving traffic. See comments in reconciling for additional information on
	// reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its
	// JSON representation will be a string instead of an integer.
	ObservedGeneration pulumi.StringPtrInput
	Project            pulumi.StringPtrInput
	// Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new
	// Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring
	// the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process,
	// observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the
	// intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation
	// succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be
	// found in terminalCondition.state. If reconciliation succeeded, the following fields will match: traffic and
	// trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision. If reconciliation
	// failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision,
	// or empty for newly created Services. Additional information on the failure can be found in terminalCondition and
	// conditions.
	Reconciling pulumi.BoolPtrInput
	// Scaling settings that apply to the whole service
	Scaling CloudRunV2ServiceScalingPtrInput
	// The template used to create revisions for this Service.
	Template CloudRunV2ServiceTemplatePtrInput
	// The Condition of this Service, containing its readiness status, and detailed error information in case it did not reach
	// a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
	TerminalConditions CloudRunV2ServiceTerminalConditionArrayInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        CloudRunV2ServiceTimeoutsPtrInput
	// Detailed status information for corresponding traffic targets. See comments in reconciling for additional information on
	// reconciliation process in Cloud Run.
	TrafficStatuses CloudRunV2ServiceTrafficStatusArrayInput
	// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not
	// provided, defaults to 100% traffic to the latest Ready Revision.
	Traffics CloudRunV2ServiceTrafficArrayInput
	// Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until
	// the resource is deleted.
	Uid pulumi.StringPtrInput
	// The last-modified time.
	UpdateTime pulumi.StringPtrInput
	// The main URI in which this Service is serving traffic.
	Uri pulumi.StringPtrInput
	// All URLs serving traffic for this Service.
	Urls pulumi.StringArrayInput
}

func (CloudRunV2ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunV2ServiceState)(nil)).Elem()
}

type cloudRunV2ServiceArgs struct {
	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected in new
	// resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Settings for the Binary Authorization feature.
	BinaryAuthorization *CloudRunV2ServiceBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Configuration for building a Cloud Run function.
	BuildConfig *CloudRunV2ServiceBuildConfig `pulumi:"buildConfig"`
	// Arbitrary identifier for the API client.
	Client *string `pulumi:"client"`
	// Arbitrary version identifier for the API client.
	ClientVersion       *string `pulumi:"clientVersion"`
	CloudRunV2ServiceId *string `pulumi:"cloudRunV2ServiceId"`
	// One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a
	// string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see
	// https://cloud.google.com/run/docs/configuring/custom-audiences.
	CustomAudiences    []string `pulumi:"customAudiences"`
	DeletionProtection *bool    `pulumi:"deletionProtection"`
	// User-provided description of the Service. This field currently has a 512-character limit.
	Description *string `pulumi:"description"`
	// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or
	// INGRESS_TRAFFIC_UNSPECIFIED if no revision is active. Possible values: ["INGRESS_TRAFFIC_ALL",
	// "INGRESS_TRAFFIC_INTERNAL_ONLY", "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"]
	Ingress *string `pulumi:"ingress"`
	// Disables IAM permission check for run.routes.invoke for callers of this service. This feature is available by invitation
	// only. For more information, visit https://cloud.google.com/run/docs/securing/managing-access#invoker_check.
	InvokerIamDisabled *bool `pulumi:"invokerIamDisabled"`
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Service. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage *string `pulumi:"launchStage"`
	// The location of the cloud run service
	Location string `pulumi:"location"`
	// Name of the Service.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Scaling settings that apply to the whole service
	Scaling *CloudRunV2ServiceScaling `pulumi:"scaling"`
	// The template used to create revisions for this Service.
	Template CloudRunV2ServiceTemplate  `pulumi:"template"`
	Timeouts *CloudRunV2ServiceTimeouts `pulumi:"timeouts"`
	// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not
	// provided, defaults to 100% traffic to the latest Ready Revision.
	Traffics []CloudRunV2ServiceTraffic `pulumi:"traffics"`
}

// The set of arguments for constructing a CloudRunV2Service resource.
type CloudRunV2ServiceArgs struct {
	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected in new
	// resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations pulumi.StringMapInput
	// Settings for the Binary Authorization feature.
	BinaryAuthorization CloudRunV2ServiceBinaryAuthorizationPtrInput
	// Configuration for building a Cloud Run function.
	BuildConfig CloudRunV2ServiceBuildConfigPtrInput
	// Arbitrary identifier for the API client.
	Client pulumi.StringPtrInput
	// Arbitrary version identifier for the API client.
	ClientVersion       pulumi.StringPtrInput
	CloudRunV2ServiceId pulumi.StringPtrInput
	// One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a
	// string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see
	// https://cloud.google.com/run/docs/configuring/custom-audiences.
	CustomAudiences    pulumi.StringArrayInput
	DeletionProtection pulumi.BoolPtrInput
	// User-provided description of the Service. This field currently has a 512-character limit.
	Description pulumi.StringPtrInput
	// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or
	// INGRESS_TRAFFIC_UNSPECIFIED if no revision is active. Possible values: ["INGRESS_TRAFFIC_ALL",
	// "INGRESS_TRAFFIC_INTERNAL_ONLY", "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"]
	Ingress pulumi.StringPtrInput
	// Disables IAM permission check for run.routes.invoke for callers of this service. This feature is available by invitation
	// only. For more information, visit https://cloud.google.com/run/docs/securing/managing-access#invoker_check.
	InvokerIamDisabled pulumi.BoolPtrInput
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Service. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage pulumi.StringPtrInput
	// The location of the cloud run service
	Location pulumi.StringInput
	// Name of the Service.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Scaling settings that apply to the whole service
	Scaling CloudRunV2ServiceScalingPtrInput
	// The template used to create revisions for this Service.
	Template CloudRunV2ServiceTemplateInput
	Timeouts CloudRunV2ServiceTimeoutsPtrInput
	// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not
	// provided, defaults to 100% traffic to the latest Ready Revision.
	Traffics CloudRunV2ServiceTrafficArrayInput
}

func (CloudRunV2ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunV2ServiceArgs)(nil)).Elem()
}

type CloudRunV2ServiceInput interface {
	pulumi.Input

	ToCloudRunV2ServiceOutput() CloudRunV2ServiceOutput
	ToCloudRunV2ServiceOutputWithContext(ctx context.Context) CloudRunV2ServiceOutput
}

func (*CloudRunV2Service) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunV2Service)(nil)).Elem()
}

func (i *CloudRunV2Service) ToCloudRunV2ServiceOutput() CloudRunV2ServiceOutput {
	return i.ToCloudRunV2ServiceOutputWithContext(context.Background())
}

func (i *CloudRunV2Service) ToCloudRunV2ServiceOutputWithContext(ctx context.Context) CloudRunV2ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudRunV2ServiceOutput)
}

type CloudRunV2ServiceOutput struct{ *pulumi.OutputState }

func (CloudRunV2ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunV2Service)(nil)).Elem()
}

func (o CloudRunV2ServiceOutput) ToCloudRunV2ServiceOutput() CloudRunV2ServiceOutput {
	return o
}

func (o CloudRunV2ServiceOutput) ToCloudRunV2ServiceOutputWithContext(ctx context.Context) CloudRunV2ServiceOutput {
	return o
}

// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected in new
// resources. All system annotations in v1 now have a corresponding field in v2 Service. This field follows Kubernetes
// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
// present on the resource.
func (o CloudRunV2ServiceOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Settings for the Binary Authorization feature.
func (o CloudRunV2ServiceOutput) BinaryAuthorization() CloudRunV2ServiceBinaryAuthorizationPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Service) CloudRunV2ServiceBinaryAuthorizationPtrOutput { return v.BinaryAuthorization }).(CloudRunV2ServiceBinaryAuthorizationPtrOutput)
}

// Configuration for building a Cloud Run function.
func (o CloudRunV2ServiceOutput) BuildConfig() CloudRunV2ServiceBuildConfigPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Service) CloudRunV2ServiceBuildConfigPtrOutput { return v.BuildConfig }).(CloudRunV2ServiceBuildConfigPtrOutput)
}

// Arbitrary identifier for the API client.
func (o CloudRunV2ServiceOutput) Client() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringPtrOutput { return v.Client }).(pulumi.StringPtrOutput)
}

// Arbitrary version identifier for the API client.
func (o CloudRunV2ServiceOutput) ClientVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringPtrOutput { return v.ClientVersion }).(pulumi.StringPtrOutput)
}

func (o CloudRunV2ServiceOutput) CloudRunV2ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.CloudRunV2ServiceId }).(pulumi.StringOutput)
}

// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the
// Service does not reach its Serving state. See comments in reconciling for additional information on reconciliation
// process in Cloud Run.
func (o CloudRunV2ServiceOutput) Conditions() CloudRunV2ServiceConditionArrayOutput {
	return o.ApplyT(func(v *CloudRunV2Service) CloudRunV2ServiceConditionArrayOutput { return v.Conditions }).(CloudRunV2ServiceConditionArrayOutput)
}

// The creation time.
func (o CloudRunV2ServiceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Email address of the authenticated creator.
func (o CloudRunV2ServiceOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.Creator }).(pulumi.StringOutput)
}

// One or more custom audiences that you want this service to support. Specify each custom audience as the full URL in a
// string. The custom audiences are encoded in the token and used to authenticate requests. For more information, see
// https://cloud.google.com/run/docs/configuring/custom-audiences.
func (o CloudRunV2ServiceOutput) CustomAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringArrayOutput { return v.CustomAudiences }).(pulumi.StringArrayOutput)
}

// The deletion time.
func (o CloudRunV2ServiceOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

func (o CloudRunV2ServiceOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// User-provided description of the Service. This field currently has a 512-character limit.
func (o CloudRunV2ServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CloudRunV2ServiceOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o CloudRunV2ServiceOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during
// updates.
func (o CloudRunV2ServiceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// For a deleted resource, the time after which it will be permanently deleted.
func (o CloudRunV2ServiceOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// A number that monotonically increases every time the user modifies the desired state. Please note that unlike v1, this
// is an int64 value. As with most Google APIs, its JSON representation will be a string instead of an integer.
func (o CloudRunV2ServiceOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.Generation }).(pulumi.StringOutput)
}

// Provides the ingress settings for this Service. On output, returns the currently observed ingress settings, or
// INGRESS_TRAFFIC_UNSPECIFIED if no revision is active. Possible values: ["INGRESS_TRAFFIC_ALL",
// "INGRESS_TRAFFIC_INTERNAL_ONLY", "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"]
func (o CloudRunV2ServiceOutput) Ingress() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.Ingress }).(pulumi.StringOutput)
}

// Disables IAM permission check for run.routes.invoke for callers of this service. This feature is available by invitation
// only. For more information, visit https://cloud.google.com/run/docs/securing/managing-access#invoker_check.
func (o CloudRunV2ServiceOutput) InvokerIamDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.BoolPtrOutput { return v.InvokerIamDisabled }).(pulumi.BoolPtrOutput)
}

// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
// will be rejected. All system labels in v1 now have a corresponding field in v2 Service. **Note**: This field is
// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o CloudRunV2ServiceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Email address of the last authenticated modifier.
func (o CloudRunV2ServiceOutput) LastModifier() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.LastModifier }).(pulumi.StringOutput)
}

// Name of the last created revision. See comments in reconciling for additional information on reconciliation process in
// Cloud Run.
func (o CloudRunV2ServiceOutput) LatestCreatedRevision() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.LatestCreatedRevision }).(pulumi.StringOutput)
}

// Name of the latest revision that is serving traffic. See comments in reconciling for additional information on
// reconciliation process in Cloud Run.
func (o CloudRunV2ServiceOutput) LatestReadyRevision() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.LatestReadyRevision }).(pulumi.StringOutput)
}

// The launch stage as defined by [Google Cloud Platform Launch
// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
func (o CloudRunV2ServiceOutput) LaunchStage() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.LaunchStage }).(pulumi.StringOutput)
}

// The location of the cloud run service
func (o CloudRunV2ServiceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the Service.
func (o CloudRunV2ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The generation of this Service currently serving traffic. See comments in reconciling for additional information on
// reconciliation process in Cloud Run. Please note that unlike v1, this is an int64 value. As with most Google APIs, its
// JSON representation will be a string instead of an integer.
func (o CloudRunV2ServiceOutput) ObservedGeneration() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.ObservedGeneration }).(pulumi.StringOutput)
}

func (o CloudRunV2ServiceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Returns true if the Service is currently being acted upon by the system to bring it into the desired state. When a new
// Service is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring
// the Service to the desired serving state. This process is called reconciliation. While reconciliation is in process,
// observedGeneration, latest_ready_revison, trafficStatuses, and uri will have transient values that might mismatch the
// intended state: Once reconciliation is over (and this field is false), there are two possible outcomes: reconciliation
// succeeded and the serving state matches the Service, or there was an error, and reconciliation failed. This state can be
// found in terminalCondition.state. If reconciliation succeeded, the following fields will match: traffic and
// trafficStatuses, observedGeneration and generation, latestReadyRevision and latestCreatedRevision. If reconciliation
// failed, trafficStatuses, observedGeneration, and latestReadyRevision will have the state of the last serving revision,
// or empty for newly created Services. Additional information on the failure can be found in terminalCondition and
// conditions.
func (o CloudRunV2ServiceOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Scaling settings that apply to the whole service
func (o CloudRunV2ServiceOutput) Scaling() CloudRunV2ServiceScalingPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Service) CloudRunV2ServiceScalingPtrOutput { return v.Scaling }).(CloudRunV2ServiceScalingPtrOutput)
}

// The template used to create revisions for this Service.
func (o CloudRunV2ServiceOutput) Template() CloudRunV2ServiceTemplateOutput {
	return o.ApplyT(func(v *CloudRunV2Service) CloudRunV2ServiceTemplateOutput { return v.Template }).(CloudRunV2ServiceTemplateOutput)
}

// The Condition of this Service, containing its readiness status, and detailed error information in case it did not reach
// a serving state. See comments in reconciling for additional information on reconciliation process in Cloud Run.
func (o CloudRunV2ServiceOutput) TerminalConditions() CloudRunV2ServiceTerminalConditionArrayOutput {
	return o.ApplyT(func(v *CloudRunV2Service) CloudRunV2ServiceTerminalConditionArrayOutput { return v.TerminalConditions }).(CloudRunV2ServiceTerminalConditionArrayOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o CloudRunV2ServiceOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o CloudRunV2ServiceOutput) Timeouts() CloudRunV2ServiceTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Service) CloudRunV2ServiceTimeoutsPtrOutput { return v.Timeouts }).(CloudRunV2ServiceTimeoutsPtrOutput)
}

// Detailed status information for corresponding traffic targets. See comments in reconciling for additional information on
// reconciliation process in Cloud Run.
func (o CloudRunV2ServiceOutput) TrafficStatuses() CloudRunV2ServiceTrafficStatusArrayOutput {
	return o.ApplyT(func(v *CloudRunV2Service) CloudRunV2ServiceTrafficStatusArrayOutput { return v.TrafficStatuses }).(CloudRunV2ServiceTrafficStatusArrayOutput)
}

// Specifies how to distribute traffic over a collection of Revisions belonging to the Service. If traffic is empty or not
// provided, defaults to 100% traffic to the latest Ready Revision.
func (o CloudRunV2ServiceOutput) Traffics() CloudRunV2ServiceTrafficArrayOutput {
	return o.ApplyT(func(v *CloudRunV2Service) CloudRunV2ServiceTrafficArrayOutput { return v.Traffics }).(CloudRunV2ServiceTrafficArrayOutput)
}

// Server assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until
// the resource is deleted.
func (o CloudRunV2ServiceOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The last-modified time.
func (o CloudRunV2ServiceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The main URI in which this Service is serving traffic.
func (o CloudRunV2ServiceOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

// All URLs serving traffic for this Service.
func (o CloudRunV2ServiceOutput) Urls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudRunV2Service) pulumi.StringArrayOutput { return v.Urls }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudRunV2ServiceInput)(nil)).Elem(), &CloudRunV2Service{})
	pulumi.RegisterOutputType(CloudRunV2ServiceOutput{})
}
