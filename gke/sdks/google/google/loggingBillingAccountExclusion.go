// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoggingBillingAccountExclusion struct {
	pulumi.CustomResourceState

	BillingAccount pulumi.StringOutput `pulumi:"billingAccount"`
	// A human-readable description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                           pulumi.StringOutput `pulumi:"filter"`
	LoggingBillingAccountExclusionId pulumi.StringOutput `pulumi:"loggingBillingAccountExclusionId"`
	// The name of the logging exclusion.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewLoggingBillingAccountExclusion registers a new resource with the given unique name, arguments, and options.
func NewLoggingBillingAccountExclusion(ctx *pulumi.Context,
	name string, args *LoggingBillingAccountExclusionArgs, opts ...pulumi.ResourceOption) (*LoggingBillingAccountExclusion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingAccount == nil {
		return nil, errors.New("invalid value for required argument 'BillingAccount'")
	}
	if args.Filter == nil {
		return nil, errors.New("invalid value for required argument 'Filter'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource LoggingBillingAccountExclusion
	err = ctx.RegisterPackageResource("google:index/loggingBillingAccountExclusion:LoggingBillingAccountExclusion", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingBillingAccountExclusion gets an existing LoggingBillingAccountExclusion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingBillingAccountExclusion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingBillingAccountExclusionState, opts ...pulumi.ResourceOption) (*LoggingBillingAccountExclusion, error) {
	var resource LoggingBillingAccountExclusion
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/loggingBillingAccountExclusion:LoggingBillingAccountExclusion", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingBillingAccountExclusion resources.
type loggingBillingAccountExclusionState struct {
	BillingAccount *string `pulumi:"billingAccount"`
	// A human-readable description.
	Description *string `pulumi:"description"`
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled *bool `pulumi:"disabled"`
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                           *string `pulumi:"filter"`
	LoggingBillingAccountExclusionId *string `pulumi:"loggingBillingAccountExclusionId"`
	// The name of the logging exclusion.
	Name *string `pulumi:"name"`
}

type LoggingBillingAccountExclusionState struct {
	BillingAccount pulumi.StringPtrInput
	// A human-readable description.
	Description pulumi.StringPtrInput
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled pulumi.BoolPtrInput
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                           pulumi.StringPtrInput
	LoggingBillingAccountExclusionId pulumi.StringPtrInput
	// The name of the logging exclusion.
	Name pulumi.StringPtrInput
}

func (LoggingBillingAccountExclusionState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingBillingAccountExclusionState)(nil)).Elem()
}

type loggingBillingAccountExclusionArgs struct {
	BillingAccount string `pulumi:"billingAccount"`
	// A human-readable description.
	Description *string `pulumi:"description"`
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled *bool `pulumi:"disabled"`
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                           string  `pulumi:"filter"`
	LoggingBillingAccountExclusionId *string `pulumi:"loggingBillingAccountExclusionId"`
	// The name of the logging exclusion.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a LoggingBillingAccountExclusion resource.
type LoggingBillingAccountExclusionArgs struct {
	BillingAccount pulumi.StringInput
	// A human-readable description.
	Description pulumi.StringPtrInput
	// Whether this exclusion rule should be disabled or not. This defaults to false.
	Disabled pulumi.BoolPtrInput
	// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
	Filter                           pulumi.StringInput
	LoggingBillingAccountExclusionId pulumi.StringPtrInput
	// The name of the logging exclusion.
	Name pulumi.StringPtrInput
}

func (LoggingBillingAccountExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingBillingAccountExclusionArgs)(nil)).Elem()
}

type LoggingBillingAccountExclusionInput interface {
	pulumi.Input

	ToLoggingBillingAccountExclusionOutput() LoggingBillingAccountExclusionOutput
	ToLoggingBillingAccountExclusionOutputWithContext(ctx context.Context) LoggingBillingAccountExclusionOutput
}

func (*LoggingBillingAccountExclusion) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingBillingAccountExclusion)(nil)).Elem()
}

func (i *LoggingBillingAccountExclusion) ToLoggingBillingAccountExclusionOutput() LoggingBillingAccountExclusionOutput {
	return i.ToLoggingBillingAccountExclusionOutputWithContext(context.Background())
}

func (i *LoggingBillingAccountExclusion) ToLoggingBillingAccountExclusionOutputWithContext(ctx context.Context) LoggingBillingAccountExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingBillingAccountExclusionOutput)
}

type LoggingBillingAccountExclusionOutput struct{ *pulumi.OutputState }

func (LoggingBillingAccountExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingBillingAccountExclusion)(nil)).Elem()
}

func (o LoggingBillingAccountExclusionOutput) ToLoggingBillingAccountExclusionOutput() LoggingBillingAccountExclusionOutput {
	return o
}

func (o LoggingBillingAccountExclusionOutput) ToLoggingBillingAccountExclusionOutputWithContext(ctx context.Context) LoggingBillingAccountExclusionOutput {
	return o
}

func (o LoggingBillingAccountExclusionOutput) BillingAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingBillingAccountExclusion) pulumi.StringOutput { return v.BillingAccount }).(pulumi.StringOutput)
}

// A human-readable description.
func (o LoggingBillingAccountExclusionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoggingBillingAccountExclusion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether this exclusion rule should be disabled or not. This defaults to false.
func (o LoggingBillingAccountExclusionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingBillingAccountExclusion) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The filter to apply when excluding logs. Only log entries that match the filter are excluded.
func (o LoggingBillingAccountExclusionOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingBillingAccountExclusion) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

func (o LoggingBillingAccountExclusionOutput) LoggingBillingAccountExclusionId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingBillingAccountExclusion) pulumi.StringOutput { return v.LoggingBillingAccountExclusionId }).(pulumi.StringOutput)
}

// The name of the logging exclusion.
func (o LoggingBillingAccountExclusionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingBillingAccountExclusion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingBillingAccountExclusionInput)(nil)).Elem(), &LoggingBillingAccountExclusion{})
	pulumi.RegisterOutputType(LoggingBillingAccountExclusionOutput{})
}
