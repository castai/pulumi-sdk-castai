// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeInstanceGroupNamedPort struct {
	pulumi.CustomResourceState

	ComputeInstanceGroupNamedPortId pulumi.StringOutput `pulumi:"computeInstanceGroupNamedPortId"`
	// The name of the instance group.
	Group pulumi.StringOutput `pulumi:"group"`
	// The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringOutput `pulumi:"name"`
	// The port number, which can be a value between 1 and 65535.
	Port     pulumi.Float64Output                           `pulumi:"port"`
	Project  pulumi.StringOutput                            `pulumi:"project"`
	Timeouts ComputeInstanceGroupNamedPortTimeoutsPtrOutput `pulumi:"timeouts"`
	// The zone of the instance group.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewComputeInstanceGroupNamedPort registers a new resource with the given unique name, arguments, and options.
func NewComputeInstanceGroupNamedPort(ctx *pulumi.Context,
	name string, args *ComputeInstanceGroupNamedPortArgs, opts ...pulumi.ResourceOption) (*ComputeInstanceGroupNamedPort, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Group == nil {
		return nil, errors.New("invalid value for required argument 'Group'")
	}
	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeInstanceGroupNamedPort
	err = ctx.RegisterPackageResource("google:index/computeInstanceGroupNamedPort:ComputeInstanceGroupNamedPort", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeInstanceGroupNamedPort gets an existing ComputeInstanceGroupNamedPort resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeInstanceGroupNamedPort(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeInstanceGroupNamedPortState, opts ...pulumi.ResourceOption) (*ComputeInstanceGroupNamedPort, error) {
	var resource ComputeInstanceGroupNamedPort
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeInstanceGroupNamedPort:ComputeInstanceGroupNamedPort", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeInstanceGroupNamedPort resources.
type computeInstanceGroupNamedPortState struct {
	ComputeInstanceGroupNamedPortId *string `pulumi:"computeInstanceGroupNamedPortId"`
	// The name of the instance group.
	Group *string `pulumi:"group"`
	// The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
	Name *string `pulumi:"name"`
	// The port number, which can be a value between 1 and 65535.
	Port     *float64                               `pulumi:"port"`
	Project  *string                                `pulumi:"project"`
	Timeouts *ComputeInstanceGroupNamedPortTimeouts `pulumi:"timeouts"`
	// The zone of the instance group.
	Zone *string `pulumi:"zone"`
}

type ComputeInstanceGroupNamedPortState struct {
	ComputeInstanceGroupNamedPortId pulumi.StringPtrInput
	// The name of the instance group.
	Group pulumi.StringPtrInput
	// The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringPtrInput
	// The port number, which can be a value between 1 and 65535.
	Port     pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	Timeouts ComputeInstanceGroupNamedPortTimeoutsPtrInput
	// The zone of the instance group.
	Zone pulumi.StringPtrInput
}

func (ComputeInstanceGroupNamedPortState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceGroupNamedPortState)(nil)).Elem()
}

type computeInstanceGroupNamedPortArgs struct {
	ComputeInstanceGroupNamedPortId *string `pulumi:"computeInstanceGroupNamedPortId"`
	// The name of the instance group.
	Group string `pulumi:"group"`
	// The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
	Name *string `pulumi:"name"`
	// The port number, which can be a value between 1 and 65535.
	Port     float64                                `pulumi:"port"`
	Project  *string                                `pulumi:"project"`
	Timeouts *ComputeInstanceGroupNamedPortTimeouts `pulumi:"timeouts"`
	// The zone of the instance group.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeInstanceGroupNamedPort resource.
type ComputeInstanceGroupNamedPortArgs struct {
	ComputeInstanceGroupNamedPortId pulumi.StringPtrInput
	// The name of the instance group.
	Group pulumi.StringInput
	// The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
	Name pulumi.StringPtrInput
	// The port number, which can be a value between 1 and 65535.
	Port     pulumi.Float64Input
	Project  pulumi.StringPtrInput
	Timeouts ComputeInstanceGroupNamedPortTimeoutsPtrInput
	// The zone of the instance group.
	Zone pulumi.StringPtrInput
}

func (ComputeInstanceGroupNamedPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeInstanceGroupNamedPortArgs)(nil)).Elem()
}

type ComputeInstanceGroupNamedPortInput interface {
	pulumi.Input

	ToComputeInstanceGroupNamedPortOutput() ComputeInstanceGroupNamedPortOutput
	ToComputeInstanceGroupNamedPortOutputWithContext(ctx context.Context) ComputeInstanceGroupNamedPortOutput
}

func (*ComputeInstanceGroupNamedPort) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupNamedPort)(nil)).Elem()
}

func (i *ComputeInstanceGroupNamedPort) ToComputeInstanceGroupNamedPortOutput() ComputeInstanceGroupNamedPortOutput {
	return i.ToComputeInstanceGroupNamedPortOutputWithContext(context.Background())
}

func (i *ComputeInstanceGroupNamedPort) ToComputeInstanceGroupNamedPortOutputWithContext(ctx context.Context) ComputeInstanceGroupNamedPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeInstanceGroupNamedPortOutput)
}

type ComputeInstanceGroupNamedPortOutput struct{ *pulumi.OutputState }

func (ComputeInstanceGroupNamedPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeInstanceGroupNamedPort)(nil)).Elem()
}

func (o ComputeInstanceGroupNamedPortOutput) ToComputeInstanceGroupNamedPortOutput() ComputeInstanceGroupNamedPortOutput {
	return o
}

func (o ComputeInstanceGroupNamedPortOutput) ToComputeInstanceGroupNamedPortOutputWithContext(ctx context.Context) ComputeInstanceGroupNamedPortOutput {
	return o
}

func (o ComputeInstanceGroupNamedPortOutput) ComputeInstanceGroupNamedPortId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupNamedPort) pulumi.StringOutput { return v.ComputeInstanceGroupNamedPortId }).(pulumi.StringOutput)
}

// The name of the instance group.
func (o ComputeInstanceGroupNamedPortOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupNamedPort) pulumi.StringOutput { return v.Group }).(pulumi.StringOutput)
}

// The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
func (o ComputeInstanceGroupNamedPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupNamedPort) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The port number, which can be a value between 1 and 65535.
func (o ComputeInstanceGroupNamedPortOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeInstanceGroupNamedPort) pulumi.Float64Output { return v.Port }).(pulumi.Float64Output)
}

func (o ComputeInstanceGroupNamedPortOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupNamedPort) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeInstanceGroupNamedPortOutput) Timeouts() ComputeInstanceGroupNamedPortTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupNamedPort) ComputeInstanceGroupNamedPortTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputeInstanceGroupNamedPortTimeoutsPtrOutput)
}

// The zone of the instance group.
func (o ComputeInstanceGroupNamedPortOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeInstanceGroupNamedPort) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeInstanceGroupNamedPortInput)(nil)).Elem(), &ComputeInstanceGroupNamedPort{})
	pulumi.RegisterOutputType(ComputeInstanceGroupNamedPortOutput{})
}
