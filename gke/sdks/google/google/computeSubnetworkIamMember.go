// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeSubnetworkIamMember struct {
	pulumi.CustomResourceState

	ComputeSubnetworkIamMemberId pulumi.StringOutput                          `pulumi:"computeSubnetworkIamMemberId"`
	Condition                    ComputeSubnetworkIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	Member                       pulumi.StringOutput                          `pulumi:"member"`
	Project                      pulumi.StringOutput                          `pulumi:"project"`
	Region                       pulumi.StringOutput                          `pulumi:"region"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
	Subnetwork                   pulumi.StringOutput                          `pulumi:"subnetwork"`
}

// NewComputeSubnetworkIamMember registers a new resource with the given unique name, arguments, and options.
func NewComputeSubnetworkIamMember(ctx *pulumi.Context,
	name string, args *ComputeSubnetworkIamMemberArgs, opts ...pulumi.ResourceOption) (*ComputeSubnetworkIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Subnetwork == nil {
		return nil, errors.New("invalid value for required argument 'Subnetwork'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeSubnetworkIamMember
	err = ctx.RegisterPackageResource("google:index/computeSubnetworkIamMember:ComputeSubnetworkIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeSubnetworkIamMember gets an existing ComputeSubnetworkIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeSubnetworkIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeSubnetworkIamMemberState, opts ...pulumi.ResourceOption) (*ComputeSubnetworkIamMember, error) {
	var resource ComputeSubnetworkIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeSubnetworkIamMember:ComputeSubnetworkIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeSubnetworkIamMember resources.
type computeSubnetworkIamMemberState struct {
	ComputeSubnetworkIamMemberId *string                              `pulumi:"computeSubnetworkIamMemberId"`
	Condition                    *ComputeSubnetworkIamMemberCondition `pulumi:"condition"`
	Etag                         *string                              `pulumi:"etag"`
	Member                       *string                              `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Region                       *string                              `pulumi:"region"`
	Role                         *string                              `pulumi:"role"`
	Subnetwork                   *string                              `pulumi:"subnetwork"`
}

type ComputeSubnetworkIamMemberState struct {
	ComputeSubnetworkIamMemberId pulumi.StringPtrInput
	Condition                    ComputeSubnetworkIamMemberConditionPtrInput
	Etag                         pulumi.StringPtrInput
	Member                       pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
	Role                         pulumi.StringPtrInput
	Subnetwork                   pulumi.StringPtrInput
}

func (ComputeSubnetworkIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSubnetworkIamMemberState)(nil)).Elem()
}

type computeSubnetworkIamMemberArgs struct {
	ComputeSubnetworkIamMemberId *string                              `pulumi:"computeSubnetworkIamMemberId"`
	Condition                    *ComputeSubnetworkIamMemberCondition `pulumi:"condition"`
	Member                       string                               `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Region                       *string                              `pulumi:"region"`
	Role                         string                               `pulumi:"role"`
	Subnetwork                   string                               `pulumi:"subnetwork"`
}

// The set of arguments for constructing a ComputeSubnetworkIamMember resource.
type ComputeSubnetworkIamMemberArgs struct {
	ComputeSubnetworkIamMemberId pulumi.StringPtrInput
	Condition                    ComputeSubnetworkIamMemberConditionPtrInput
	Member                       pulumi.StringInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
	Role                         pulumi.StringInput
	Subnetwork                   pulumi.StringInput
}

func (ComputeSubnetworkIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSubnetworkIamMemberArgs)(nil)).Elem()
}

type ComputeSubnetworkIamMemberInput interface {
	pulumi.Input

	ToComputeSubnetworkIamMemberOutput() ComputeSubnetworkIamMemberOutput
	ToComputeSubnetworkIamMemberOutputWithContext(ctx context.Context) ComputeSubnetworkIamMemberOutput
}

func (*ComputeSubnetworkIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSubnetworkIamMember)(nil)).Elem()
}

func (i *ComputeSubnetworkIamMember) ToComputeSubnetworkIamMemberOutput() ComputeSubnetworkIamMemberOutput {
	return i.ToComputeSubnetworkIamMemberOutputWithContext(context.Background())
}

func (i *ComputeSubnetworkIamMember) ToComputeSubnetworkIamMemberOutputWithContext(ctx context.Context) ComputeSubnetworkIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeSubnetworkIamMemberOutput)
}

type ComputeSubnetworkIamMemberOutput struct{ *pulumi.OutputState }

func (ComputeSubnetworkIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSubnetworkIamMember)(nil)).Elem()
}

func (o ComputeSubnetworkIamMemberOutput) ToComputeSubnetworkIamMemberOutput() ComputeSubnetworkIamMemberOutput {
	return o
}

func (o ComputeSubnetworkIamMemberOutput) ToComputeSubnetworkIamMemberOutputWithContext(ctx context.Context) ComputeSubnetworkIamMemberOutput {
	return o
}

func (o ComputeSubnetworkIamMemberOutput) ComputeSubnetworkIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamMember) pulumi.StringOutput { return v.ComputeSubnetworkIamMemberId }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamMemberOutput) Condition() ComputeSubnetworkIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamMember) ComputeSubnetworkIamMemberConditionPtrOutput { return v.Condition }).(ComputeSubnetworkIamMemberConditionPtrOutput)
}

func (o ComputeSubnetworkIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamMemberOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamMember) pulumi.StringOutput { return v.Subnetwork }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeSubnetworkIamMemberInput)(nil)).Elem(), &ComputeSubnetworkIamMember{})
	pulumi.RegisterOutputType(ComputeSubnetworkIamMemberOutput{})
}
