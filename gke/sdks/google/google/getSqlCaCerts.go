// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSqlCaCerts(ctx *pulumi.Context, args *GetSqlCaCertsArgs, opts ...pulumi.InvokeOption) (*GetSqlCaCertsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetSqlCaCertsResult
	err = ctx.InvokePackage("google:index/getSqlCaCerts:getSqlCaCerts", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSqlCaCerts.
type GetSqlCaCertsArgs struct {
	Id       *string `pulumi:"id"`
	Instance string  `pulumi:"instance"`
	Project  *string `pulumi:"project"`
}

// A collection of values returned by getSqlCaCerts.
type GetSqlCaCertsResult struct {
	ActiveVersion string              `pulumi:"activeVersion"`
	Certs         []GetSqlCaCertsCert `pulumi:"certs"`
	Id            string              `pulumi:"id"`
	Instance      string              `pulumi:"instance"`
	Project       string              `pulumi:"project"`
}

func GetSqlCaCertsOutput(ctx *pulumi.Context, args GetSqlCaCertsOutputArgs, opts ...pulumi.InvokeOption) GetSqlCaCertsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSqlCaCertsResultOutput, error) {
			args := v.(GetSqlCaCertsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetSqlCaCertsResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getSqlCaCerts:getSqlCaCerts", args, GetSqlCaCertsResultOutput{}, options).(GetSqlCaCertsResultOutput), nil
		}).(GetSqlCaCertsResultOutput)
}

// A collection of arguments for invoking getSqlCaCerts.
type GetSqlCaCertsOutputArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Instance pulumi.StringInput    `pulumi:"instance"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (GetSqlCaCertsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlCaCertsArgs)(nil)).Elem()
}

// A collection of values returned by getSqlCaCerts.
type GetSqlCaCertsResultOutput struct{ *pulumi.OutputState }

func (GetSqlCaCertsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSqlCaCertsResult)(nil)).Elem()
}

func (o GetSqlCaCertsResultOutput) ToGetSqlCaCertsResultOutput() GetSqlCaCertsResultOutput {
	return o
}

func (o GetSqlCaCertsResultOutput) ToGetSqlCaCertsResultOutputWithContext(ctx context.Context) GetSqlCaCertsResultOutput {
	return o
}

func (o GetSqlCaCertsResultOutput) ActiveVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCaCertsResult) string { return v.ActiveVersion }).(pulumi.StringOutput)
}

func (o GetSqlCaCertsResultOutput) Certs() GetSqlCaCertsCertArrayOutput {
	return o.ApplyT(func(v GetSqlCaCertsResult) []GetSqlCaCertsCert { return v.Certs }).(GetSqlCaCertsCertArrayOutput)
}

func (o GetSqlCaCertsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCaCertsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSqlCaCertsResultOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCaCertsResult) string { return v.Instance }).(pulumi.StringOutput)
}

func (o GetSqlCaCertsResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetSqlCaCertsResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSqlCaCertsResultOutput{})
}
