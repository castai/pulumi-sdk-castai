// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BeyondcorpApplication struct {
	pulumi.CustomResourceState

	// Optional. User-settable Application resource ID. * Must start with a letter. * Must contain between 4-63 characters from
	// '/a-z-/'. * Must end with a number or letter.
	ApplicationId           pulumi.StringOutput `pulumi:"applicationId"`
	BeyondcorpApplicationId pulumi.StringOutput `pulumi:"beyondcorpApplicationId"`
	// Output only. Timestamp when the resource was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Required. Endpoint matchers associated with an application. A combination of hostname and ports as endpoint matcher is
	// used to match the application. Match conditions for OR logic. An array of match conditions to allow for multiple
	// matching criteria. The rule is considered a match if one the conditions are met. The conditions can be one of the
	// following combination (Hostname), (Hostname & Ports) EXAMPLES: Hostname - ("*.abc.com"), ("xyz.abc.com") Hostname and
	// Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	EndpointMatchers BeyondcorpApplicationEndpointMatcherArrayOutput `pulumi:"endpointMatchers"`
	// Identifier. Name of the resource.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Part of 'parent'. See documentation of 'projectsId'.
	SecurityGatewaysId pulumi.StringOutput                    `pulumi:"securityGatewaysId"`
	Timeouts           BeyondcorpApplicationTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. Timestamp when the resource was last modified.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewBeyondcorpApplication registers a new resource with the given unique name, arguments, and options.
func NewBeyondcorpApplication(ctx *pulumi.Context,
	name string, args *BeyondcorpApplicationArgs, opts ...pulumi.ResourceOption) (*BeyondcorpApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.EndpointMatchers == nil {
		return nil, errors.New("invalid value for required argument 'EndpointMatchers'")
	}
	if args.SecurityGatewaysId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGatewaysId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BeyondcorpApplication
	err = ctx.RegisterPackageResource("google:index/beyondcorpApplication:BeyondcorpApplication", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBeyondcorpApplication gets an existing BeyondcorpApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBeyondcorpApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BeyondcorpApplicationState, opts ...pulumi.ResourceOption) (*BeyondcorpApplication, error) {
	var resource BeyondcorpApplication
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/beyondcorpApplication:BeyondcorpApplication", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BeyondcorpApplication resources.
type beyondcorpApplicationState struct {
	// Optional. User-settable Application resource ID. * Must start with a letter. * Must contain between 4-63 characters from
	// '/a-z-/'. * Must end with a number or letter.
	ApplicationId           *string `pulumi:"applicationId"`
	BeyondcorpApplicationId *string `pulumi:"beyondcorpApplicationId"`
	// Output only. Timestamp when the resource was created.
	CreateTime *string `pulumi:"createTime"`
	// Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// Required. Endpoint matchers associated with an application. A combination of hostname and ports as endpoint matcher is
	// used to match the application. Match conditions for OR logic. An array of match conditions to allow for multiple
	// matching criteria. The rule is considered a match if one the conditions are met. The conditions can be one of the
	// following combination (Hostname), (Hostname & Ports) EXAMPLES: Hostname - ("*.abc.com"), ("xyz.abc.com") Hostname and
	// Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	EndpointMatchers []BeyondcorpApplicationEndpointMatcher `pulumi:"endpointMatchers"`
	// Identifier. Name of the resource.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Part of 'parent'. See documentation of 'projectsId'.
	SecurityGatewaysId *string                        `pulumi:"securityGatewaysId"`
	Timeouts           *BeyondcorpApplicationTimeouts `pulumi:"timeouts"`
	// Output only. Timestamp when the resource was last modified.
	UpdateTime *string `pulumi:"updateTime"`
}

type BeyondcorpApplicationState struct {
	// Optional. User-settable Application resource ID. * Must start with a letter. * Must contain between 4-63 characters from
	// '/a-z-/'. * Must end with a number or letter.
	ApplicationId           pulumi.StringPtrInput
	BeyondcorpApplicationId pulumi.StringPtrInput
	// Output only. Timestamp when the resource was created.
	CreateTime pulumi.StringPtrInput
	// Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrInput
	// Required. Endpoint matchers associated with an application. A combination of hostname and ports as endpoint matcher is
	// used to match the application. Match conditions for OR logic. An array of match conditions to allow for multiple
	// matching criteria. The rule is considered a match if one the conditions are met. The conditions can be one of the
	// following combination (Hostname), (Hostname & Ports) EXAMPLES: Hostname - ("*.abc.com"), ("xyz.abc.com") Hostname and
	// Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	EndpointMatchers BeyondcorpApplicationEndpointMatcherArrayInput
	// Identifier. Name of the resource.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Part of 'parent'. See documentation of 'projectsId'.
	SecurityGatewaysId pulumi.StringPtrInput
	Timeouts           BeyondcorpApplicationTimeoutsPtrInput
	// Output only. Timestamp when the resource was last modified.
	UpdateTime pulumi.StringPtrInput
}

func (BeyondcorpApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpApplicationState)(nil)).Elem()
}

type beyondcorpApplicationArgs struct {
	// Optional. User-settable Application resource ID. * Must start with a letter. * Must contain between 4-63 characters from
	// '/a-z-/'. * Must end with a number or letter.
	ApplicationId           string  `pulumi:"applicationId"`
	BeyondcorpApplicationId *string `pulumi:"beyondcorpApplicationId"`
	// Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
	DisplayName *string `pulumi:"displayName"`
	// Required. Endpoint matchers associated with an application. A combination of hostname and ports as endpoint matcher is
	// used to match the application. Match conditions for OR logic. An array of match conditions to allow for multiple
	// matching criteria. The rule is considered a match if one the conditions are met. The conditions can be one of the
	// following combination (Hostname), (Hostname & Ports) EXAMPLES: Hostname - ("*.abc.com"), ("xyz.abc.com") Hostname and
	// Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	EndpointMatchers []BeyondcorpApplicationEndpointMatcher `pulumi:"endpointMatchers"`
	Project          *string                                `pulumi:"project"`
	// Part of 'parent'. See documentation of 'projectsId'.
	SecurityGatewaysId string                         `pulumi:"securityGatewaysId"`
	Timeouts           *BeyondcorpApplicationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BeyondcorpApplication resource.
type BeyondcorpApplicationArgs struct {
	// Optional. User-settable Application resource ID. * Must start with a letter. * Must contain between 4-63 characters from
	// '/a-z-/'. * Must end with a number or letter.
	ApplicationId           pulumi.StringInput
	BeyondcorpApplicationId pulumi.StringPtrInput
	// Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
	DisplayName pulumi.StringPtrInput
	// Required. Endpoint matchers associated with an application. A combination of hostname and ports as endpoint matcher is
	// used to match the application. Match conditions for OR logic. An array of match conditions to allow for multiple
	// matching criteria. The rule is considered a match if one the conditions are met. The conditions can be one of the
	// following combination (Hostname), (Hostname & Ports) EXAMPLES: Hostname - ("*.abc.com"), ("xyz.abc.com") Hostname and
	// Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
	EndpointMatchers BeyondcorpApplicationEndpointMatcherArrayInput
	Project          pulumi.StringPtrInput
	// Part of 'parent'. See documentation of 'projectsId'.
	SecurityGatewaysId pulumi.StringInput
	Timeouts           BeyondcorpApplicationTimeoutsPtrInput
}

func (BeyondcorpApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpApplicationArgs)(nil)).Elem()
}

type BeyondcorpApplicationInput interface {
	pulumi.Input

	ToBeyondcorpApplicationOutput() BeyondcorpApplicationOutput
	ToBeyondcorpApplicationOutputWithContext(ctx context.Context) BeyondcorpApplicationOutput
}

func (*BeyondcorpApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpApplication)(nil)).Elem()
}

func (i *BeyondcorpApplication) ToBeyondcorpApplicationOutput() BeyondcorpApplicationOutput {
	return i.ToBeyondcorpApplicationOutputWithContext(context.Background())
}

func (i *BeyondcorpApplication) ToBeyondcorpApplicationOutputWithContext(ctx context.Context) BeyondcorpApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BeyondcorpApplicationOutput)
}

type BeyondcorpApplicationOutput struct{ *pulumi.OutputState }

func (BeyondcorpApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpApplication)(nil)).Elem()
}

func (o BeyondcorpApplicationOutput) ToBeyondcorpApplicationOutput() BeyondcorpApplicationOutput {
	return o
}

func (o BeyondcorpApplicationOutput) ToBeyondcorpApplicationOutputWithContext(ctx context.Context) BeyondcorpApplicationOutput {
	return o
}

// Optional. User-settable Application resource ID. * Must start with a letter. * Must contain between 4-63 characters from
// '/a-z-/'. * Must end with a number or letter.
func (o BeyondcorpApplicationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationOutput) BeyondcorpApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) pulumi.StringOutput { return v.BeyondcorpApplicationId }).(pulumi.StringOutput)
}

// Output only. Timestamp when the resource was created.
func (o BeyondcorpApplicationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
func (o BeyondcorpApplicationOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Required. Endpoint matchers associated with an application. A combination of hostname and ports as endpoint matcher is
// used to match the application. Match conditions for OR logic. An array of match conditions to allow for multiple
// matching criteria. The rule is considered a match if one the conditions are met. The conditions can be one of the
// following combination (Hostname), (Hostname & Ports) EXAMPLES: Hostname - ("*.abc.com"), ("xyz.abc.com") Hostname and
// Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
func (o BeyondcorpApplicationOutput) EndpointMatchers() BeyondcorpApplicationEndpointMatcherArrayOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) BeyondcorpApplicationEndpointMatcherArrayOutput {
		return v.EndpointMatchers
	}).(BeyondcorpApplicationEndpointMatcherArrayOutput)
}

// Identifier. Name of the resource.
func (o BeyondcorpApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Part of 'parent'. See documentation of 'projectsId'.
func (o BeyondcorpApplicationOutput) SecurityGatewaysId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) pulumi.StringOutput { return v.SecurityGatewaysId }).(pulumi.StringOutput)
}

func (o BeyondcorpApplicationOutput) Timeouts() BeyondcorpApplicationTimeoutsPtrOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) BeyondcorpApplicationTimeoutsPtrOutput { return v.Timeouts }).(BeyondcorpApplicationTimeoutsPtrOutput)
}

// Output only. Timestamp when the resource was last modified.
func (o BeyondcorpApplicationOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpApplication) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BeyondcorpApplicationInput)(nil)).Elem(), &BeyondcorpApplication{})
	pulumi.RegisterOutputType(BeyondcorpApplicationOutput{})
}
