// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FolderIamPolicy struct {
	pulumi.CustomResourceState

	Etag              pulumi.StringOutput `pulumi:"etag"`
	Folder            pulumi.StringOutput `pulumi:"folder"`
	FolderIamPolicyId pulumi.StringOutput `pulumi:"folderIamPolicyId"`
	PolicyData        pulumi.StringOutput `pulumi:"policyData"`
}

// NewFolderIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewFolderIamPolicy(ctx *pulumi.Context,
	name string, args *FolderIamPolicyArgs, opts ...pulumi.ResourceOption) (*FolderIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Folder == nil {
		return nil, errors.New("invalid value for required argument 'Folder'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource FolderIamPolicy
	err = ctx.RegisterPackageResource("google:index/folderIamPolicy:FolderIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFolderIamPolicy gets an existing FolderIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFolderIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FolderIamPolicyState, opts ...pulumi.ResourceOption) (*FolderIamPolicy, error) {
	var resource FolderIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/folderIamPolicy:FolderIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FolderIamPolicy resources.
type folderIamPolicyState struct {
	Etag              *string `pulumi:"etag"`
	Folder            *string `pulumi:"folder"`
	FolderIamPolicyId *string `pulumi:"folderIamPolicyId"`
	PolicyData        *string `pulumi:"policyData"`
}

type FolderIamPolicyState struct {
	Etag              pulumi.StringPtrInput
	Folder            pulumi.StringPtrInput
	FolderIamPolicyId pulumi.StringPtrInput
	PolicyData        pulumi.StringPtrInput
}

func (FolderIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*folderIamPolicyState)(nil)).Elem()
}

type folderIamPolicyArgs struct {
	Folder            string  `pulumi:"folder"`
	FolderIamPolicyId *string `pulumi:"folderIamPolicyId"`
	PolicyData        string  `pulumi:"policyData"`
}

// The set of arguments for constructing a FolderIamPolicy resource.
type FolderIamPolicyArgs struct {
	Folder            pulumi.StringInput
	FolderIamPolicyId pulumi.StringPtrInput
	PolicyData        pulumi.StringInput
}

func (FolderIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*folderIamPolicyArgs)(nil)).Elem()
}

type FolderIamPolicyInput interface {
	pulumi.Input

	ToFolderIamPolicyOutput() FolderIamPolicyOutput
	ToFolderIamPolicyOutputWithContext(ctx context.Context) FolderIamPolicyOutput
}

func (*FolderIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderIamPolicy)(nil)).Elem()
}

func (i *FolderIamPolicy) ToFolderIamPolicyOutput() FolderIamPolicyOutput {
	return i.ToFolderIamPolicyOutputWithContext(context.Background())
}

func (i *FolderIamPolicy) ToFolderIamPolicyOutputWithContext(ctx context.Context) FolderIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FolderIamPolicyOutput)
}

type FolderIamPolicyOutput struct{ *pulumi.OutputState }

func (FolderIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FolderIamPolicy)(nil)).Elem()
}

func (o FolderIamPolicyOutput) ToFolderIamPolicyOutput() FolderIamPolicyOutput {
	return o
}

func (o FolderIamPolicyOutput) ToFolderIamPolicyOutputWithContext(ctx context.Context) FolderIamPolicyOutput {
	return o
}

func (o FolderIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o FolderIamPolicyOutput) Folder() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderIamPolicy) pulumi.StringOutput { return v.Folder }).(pulumi.StringOutput)
}

func (o FolderIamPolicyOutput) FolderIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderIamPolicy) pulumi.StringOutput { return v.FolderIamPolicyId }).(pulumi.StringOutput)
}

func (o FolderIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *FolderIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FolderIamPolicyInput)(nil)).Elem(), &FolderIamPolicy{})
	pulumi.RegisterOutputType(FolderIamPolicyOutput{})
}
