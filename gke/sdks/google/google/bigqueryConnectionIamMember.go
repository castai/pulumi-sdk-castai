// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryConnectionIamMember struct {
	pulumi.CustomResourceState

	BigqueryConnectionIamMemberId pulumi.StringOutput                           `pulumi:"bigqueryConnectionIamMemberId"`
	Condition                     BigqueryConnectionIamMemberConditionPtrOutput `pulumi:"condition"`
	ConnectionId                  pulumi.StringOutput                           `pulumi:"connectionId"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	Location                      pulumi.StringOutput                           `pulumi:"location"`
	Member                        pulumi.StringOutput                           `pulumi:"member"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
}

// NewBigqueryConnectionIamMember registers a new resource with the given unique name, arguments, and options.
func NewBigqueryConnectionIamMember(ctx *pulumi.Context,
	name string, args *BigqueryConnectionIamMemberArgs, opts ...pulumi.ResourceOption) (*BigqueryConnectionIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryConnectionIamMember
	err = ctx.RegisterPackageResource("google:index/bigqueryConnectionIamMember:BigqueryConnectionIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryConnectionIamMember gets an existing BigqueryConnectionIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryConnectionIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryConnectionIamMemberState, opts ...pulumi.ResourceOption) (*BigqueryConnectionIamMember, error) {
	var resource BigqueryConnectionIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigqueryConnectionIamMember:BigqueryConnectionIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryConnectionIamMember resources.
type bigqueryConnectionIamMemberState struct {
	BigqueryConnectionIamMemberId *string                               `pulumi:"bigqueryConnectionIamMemberId"`
	Condition                     *BigqueryConnectionIamMemberCondition `pulumi:"condition"`
	ConnectionId                  *string                               `pulumi:"connectionId"`
	Etag                          *string                               `pulumi:"etag"`
	Location                      *string                               `pulumi:"location"`
	Member                        *string                               `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	Role                          *string                               `pulumi:"role"`
}

type BigqueryConnectionIamMemberState struct {
	BigqueryConnectionIamMemberId pulumi.StringPtrInput
	Condition                     BigqueryConnectionIamMemberConditionPtrInput
	ConnectionId                  pulumi.StringPtrInput
	Etag                          pulumi.StringPtrInput
	Location                      pulumi.StringPtrInput
	Member                        pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
}

func (BigqueryConnectionIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryConnectionIamMemberState)(nil)).Elem()
}

type bigqueryConnectionIamMemberArgs struct {
	BigqueryConnectionIamMemberId *string                               `pulumi:"bigqueryConnectionIamMemberId"`
	Condition                     *BigqueryConnectionIamMemberCondition `pulumi:"condition"`
	ConnectionId                  string                                `pulumi:"connectionId"`
	Location                      *string                               `pulumi:"location"`
	Member                        string                                `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	Role                          string                                `pulumi:"role"`
}

// The set of arguments for constructing a BigqueryConnectionIamMember resource.
type BigqueryConnectionIamMemberArgs struct {
	BigqueryConnectionIamMemberId pulumi.StringPtrInput
	Condition                     BigqueryConnectionIamMemberConditionPtrInput
	ConnectionId                  pulumi.StringInput
	Location                      pulumi.StringPtrInput
	Member                        pulumi.StringInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringInput
}

func (BigqueryConnectionIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryConnectionIamMemberArgs)(nil)).Elem()
}

type BigqueryConnectionIamMemberInput interface {
	pulumi.Input

	ToBigqueryConnectionIamMemberOutput() BigqueryConnectionIamMemberOutput
	ToBigqueryConnectionIamMemberOutputWithContext(ctx context.Context) BigqueryConnectionIamMemberOutput
}

func (*BigqueryConnectionIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryConnectionIamMember)(nil)).Elem()
}

func (i *BigqueryConnectionIamMember) ToBigqueryConnectionIamMemberOutput() BigqueryConnectionIamMemberOutput {
	return i.ToBigqueryConnectionIamMemberOutputWithContext(context.Background())
}

func (i *BigqueryConnectionIamMember) ToBigqueryConnectionIamMemberOutputWithContext(ctx context.Context) BigqueryConnectionIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryConnectionIamMemberOutput)
}

type BigqueryConnectionIamMemberOutput struct{ *pulumi.OutputState }

func (BigqueryConnectionIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryConnectionIamMember)(nil)).Elem()
}

func (o BigqueryConnectionIamMemberOutput) ToBigqueryConnectionIamMemberOutput() BigqueryConnectionIamMemberOutput {
	return o
}

func (o BigqueryConnectionIamMemberOutput) ToBigqueryConnectionIamMemberOutputWithContext(ctx context.Context) BigqueryConnectionIamMemberOutput {
	return o
}

func (o BigqueryConnectionIamMemberOutput) BigqueryConnectionIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamMember) pulumi.StringOutput { return v.BigqueryConnectionIamMemberId }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamMemberOutput) Condition() BigqueryConnectionIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamMember) BigqueryConnectionIamMemberConditionPtrOutput { return v.Condition }).(BigqueryConnectionIamMemberConditionPtrOutput)
}

func (o BigqueryConnectionIamMemberOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamMember) pulumi.StringOutput { return v.ConnectionId }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigqueryConnectionIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryConnectionIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryConnectionIamMemberInput)(nil)).Elem(), &BigqueryConnectionIamMember{})
	pulumi.RegisterOutputType(BigqueryConnectionIamMemberOutput{})
}
