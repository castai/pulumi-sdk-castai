// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeHubMembershipBinding struct {
	pulumi.CustomResourceState

	// Time the MembershipBinding was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Time the MembershipBinding was deleted in UTC.
	DeleteTime                pulumi.StringOutput    `pulumi:"deleteTime"`
	EffectiveLabels           pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	GkeHubMembershipBindingId pulumi.StringOutput    `pulumi:"gkeHubMembershipBindingId"`
	// Labels for this Membership binding. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Location of the membership
	Location pulumi.StringOutput `pulumi:"location"`
	// The client-provided identifier of the membership binding.
	MembershipBindingId pulumi.StringOutput `pulumi:"membershipBindingId"`
	// Id of the membership
	MembershipId pulumi.StringOutput `pulumi:"membershipId"`
	// The resource name for the membershipbinding itself
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// A Workspace resource name in the format 'projects/*/locations/*/scopes/*'.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// State of the membership binding resource.
	States GkeHubMembershipBindingStateTypeArrayOutput `pulumi:"states"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                   `pulumi:"terraformLabels"`
	Timeouts        GkeHubMembershipBindingTimeoutsPtrOutput `pulumi:"timeouts"`
	// Google-generated UUID for this resource.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Time the MembershipBinding was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewGkeHubMembershipBinding registers a new resource with the given unique name, arguments, and options.
func NewGkeHubMembershipBinding(ctx *pulumi.Context,
	name string, args *GkeHubMembershipBindingArgs, opts ...pulumi.ResourceOption) (*GkeHubMembershipBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.MembershipBindingId == nil {
		return nil, errors.New("invalid value for required argument 'MembershipBindingId'")
	}
	if args.MembershipId == nil {
		return nil, errors.New("invalid value for required argument 'MembershipId'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeHubMembershipBinding
	err = ctx.RegisterPackageResource("google:index/gkeHubMembershipBinding:GkeHubMembershipBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeHubMembershipBinding gets an existing GkeHubMembershipBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeHubMembershipBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeHubMembershipBindingState, opts ...pulumi.ResourceOption) (*GkeHubMembershipBinding, error) {
	var resource GkeHubMembershipBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/gkeHubMembershipBinding:GkeHubMembershipBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeHubMembershipBinding resources.
type gkeHubMembershipBindingState struct {
	// Time the MembershipBinding was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// Time the MembershipBinding was deleted in UTC.
	DeleteTime                *string           `pulumi:"deleteTime"`
	EffectiveLabels           map[string]string `pulumi:"effectiveLabels"`
	GkeHubMembershipBindingId *string           `pulumi:"gkeHubMembershipBindingId"`
	// Labels for this Membership binding. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Location of the membership
	Location *string `pulumi:"location"`
	// The client-provided identifier of the membership binding.
	MembershipBindingId *string `pulumi:"membershipBindingId"`
	// Id of the membership
	MembershipId *string `pulumi:"membershipId"`
	// The resource name for the membershipbinding itself
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// A Workspace resource name in the format 'projects/*/locations/*/scopes/*'.
	Scope *string `pulumi:"scope"`
	// State of the membership binding resource.
	States []GkeHubMembershipBindingStateType `pulumi:"states"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                `pulumi:"terraformLabels"`
	Timeouts        *GkeHubMembershipBindingTimeouts `pulumi:"timeouts"`
	// Google-generated UUID for this resource.
	Uid *string `pulumi:"uid"`
	// Time the MembershipBinding was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type GkeHubMembershipBindingState struct {
	// Time the MembershipBinding was created in UTC.
	CreateTime pulumi.StringPtrInput
	// Time the MembershipBinding was deleted in UTC.
	DeleteTime                pulumi.StringPtrInput
	EffectiveLabels           pulumi.StringMapInput
	GkeHubMembershipBindingId pulumi.StringPtrInput
	// Labels for this Membership binding. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Location of the membership
	Location pulumi.StringPtrInput
	// The client-provided identifier of the membership binding.
	MembershipBindingId pulumi.StringPtrInput
	// Id of the membership
	MembershipId pulumi.StringPtrInput
	// The resource name for the membershipbinding itself
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// A Workspace resource name in the format 'projects/*/locations/*/scopes/*'.
	Scope pulumi.StringPtrInput
	// State of the membership binding resource.
	States GkeHubMembershipBindingStateTypeArrayInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        GkeHubMembershipBindingTimeoutsPtrInput
	// Google-generated UUID for this resource.
	Uid pulumi.StringPtrInput
	// Time the MembershipBinding was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (GkeHubMembershipBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubMembershipBindingState)(nil)).Elem()
}

type gkeHubMembershipBindingArgs struct {
	GkeHubMembershipBindingId *string `pulumi:"gkeHubMembershipBindingId"`
	// Labels for this Membership binding. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Location of the membership
	Location string `pulumi:"location"`
	// The client-provided identifier of the membership binding.
	MembershipBindingId string `pulumi:"membershipBindingId"`
	// Id of the membership
	MembershipId string  `pulumi:"membershipId"`
	Project      *string `pulumi:"project"`
	// A Workspace resource name in the format 'projects/*/locations/*/scopes/*'.
	Scope    string                           `pulumi:"scope"`
	Timeouts *GkeHubMembershipBindingTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a GkeHubMembershipBinding resource.
type GkeHubMembershipBindingArgs struct {
	GkeHubMembershipBindingId pulumi.StringPtrInput
	// Labels for this Membership binding. **Note**: This field is non-authoritative, and will only manage the labels present
	// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Location of the membership
	Location pulumi.StringInput
	// The client-provided identifier of the membership binding.
	MembershipBindingId pulumi.StringInput
	// Id of the membership
	MembershipId pulumi.StringInput
	Project      pulumi.StringPtrInput
	// A Workspace resource name in the format 'projects/*/locations/*/scopes/*'.
	Scope    pulumi.StringInput
	Timeouts GkeHubMembershipBindingTimeoutsPtrInput
}

func (GkeHubMembershipBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubMembershipBindingArgs)(nil)).Elem()
}

type GkeHubMembershipBindingInput interface {
	pulumi.Input

	ToGkeHubMembershipBindingOutput() GkeHubMembershipBindingOutput
	ToGkeHubMembershipBindingOutputWithContext(ctx context.Context) GkeHubMembershipBindingOutput
}

func (*GkeHubMembershipBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubMembershipBinding)(nil)).Elem()
}

func (i *GkeHubMembershipBinding) ToGkeHubMembershipBindingOutput() GkeHubMembershipBindingOutput {
	return i.ToGkeHubMembershipBindingOutputWithContext(context.Background())
}

func (i *GkeHubMembershipBinding) ToGkeHubMembershipBindingOutputWithContext(ctx context.Context) GkeHubMembershipBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeHubMembershipBindingOutput)
}

type GkeHubMembershipBindingOutput struct{ *pulumi.OutputState }

func (GkeHubMembershipBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubMembershipBinding)(nil)).Elem()
}

func (o GkeHubMembershipBindingOutput) ToGkeHubMembershipBindingOutput() GkeHubMembershipBindingOutput {
	return o
}

func (o GkeHubMembershipBindingOutput) ToGkeHubMembershipBindingOutputWithContext(ctx context.Context) GkeHubMembershipBindingOutput {
	return o
}

// Time the MembershipBinding was created in UTC.
func (o GkeHubMembershipBindingOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Time the MembershipBinding was deleted in UTC.
func (o GkeHubMembershipBindingOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

func (o GkeHubMembershipBindingOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o GkeHubMembershipBindingOutput) GkeHubMembershipBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.GkeHubMembershipBindingId }).(pulumi.StringOutput)
}

// Labels for this Membership binding. **Note**: This field is non-authoritative, and will only manage the labels present
// in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o GkeHubMembershipBindingOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Location of the membership
func (o GkeHubMembershipBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The client-provided identifier of the membership binding.
func (o GkeHubMembershipBindingOutput) MembershipBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.MembershipBindingId }).(pulumi.StringOutput)
}

// Id of the membership
func (o GkeHubMembershipBindingOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.MembershipId }).(pulumi.StringOutput)
}

// The resource name for the membershipbinding itself
func (o GkeHubMembershipBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GkeHubMembershipBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// A Workspace resource name in the format 'projects/*/locations/*/scopes/*'.
func (o GkeHubMembershipBindingOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// State of the membership binding resource.
func (o GkeHubMembershipBindingOutput) States() GkeHubMembershipBindingStateTypeArrayOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) GkeHubMembershipBindingStateTypeArrayOutput { return v.States }).(GkeHubMembershipBindingStateTypeArrayOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o GkeHubMembershipBindingOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o GkeHubMembershipBindingOutput) Timeouts() GkeHubMembershipBindingTimeoutsPtrOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) GkeHubMembershipBindingTimeoutsPtrOutput { return v.Timeouts }).(GkeHubMembershipBindingTimeoutsPtrOutput)
}

// Google-generated UUID for this resource.
func (o GkeHubMembershipBindingOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Time the MembershipBinding was updated in UTC.
func (o GkeHubMembershipBindingOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipBinding) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeHubMembershipBindingInput)(nil)).Elem(), &GkeHubMembershipBinding{})
	pulumi.RegisterOutputType(GkeHubMembershipBindingOutput{})
}
