// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessContextManagerServicePerimeterDryRunResource struct {
	pulumi.CustomResourceState

	AccessContextManagerServicePerimeterDryRunResourceId pulumi.StringOutput `pulumi:"accessContextManagerServicePerimeterDryRunResourceId"`
	// The name of the Access Policy this resource belongs to.
	AccessPolicyId pulumi.StringOutput `pulumi:"accessPolicyId"`
	// The perimeter etag is internally used to prevent overwriting the list of perimeter resources on PATCH calls. It is
	// retrieved from the same GET perimeter API call that's used to get the current list of resources. The resource to add or
	// remove is merged into that list and then this etag is sent with the PATCH call along with the updated resource list.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The name of the Service Perimeter to add this resource to.
	PerimeterName pulumi.StringOutput `pulumi:"perimeterName"`
	// A GCP resource that is inside of the service perimeter. Currently only projects are allowed. Format:
	// projects/{project_number}
	Resource pulumi.StringOutput                                                 `pulumi:"resource"`
	Timeouts AccessContextManagerServicePerimeterDryRunResourceTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewAccessContextManagerServicePerimeterDryRunResource registers a new resource with the given unique name, arguments, and options.
func NewAccessContextManagerServicePerimeterDryRunResource(ctx *pulumi.Context,
	name string, args *AccessContextManagerServicePerimeterDryRunResourceArgs, opts ...pulumi.ResourceOption) (*AccessContextManagerServicePerimeterDryRunResource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PerimeterName == nil {
		return nil, errors.New("invalid value for required argument 'PerimeterName'")
	}
	if args.Resource == nil {
		return nil, errors.New("invalid value for required argument 'Resource'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource AccessContextManagerServicePerimeterDryRunResource
	err = ctx.RegisterPackageResource("google:index/accessContextManagerServicePerimeterDryRunResource:AccessContextManagerServicePerimeterDryRunResource", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessContextManagerServicePerimeterDryRunResource gets an existing AccessContextManagerServicePerimeterDryRunResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessContextManagerServicePerimeterDryRunResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessContextManagerServicePerimeterDryRunResourceState, opts ...pulumi.ResourceOption) (*AccessContextManagerServicePerimeterDryRunResource, error) {
	var resource AccessContextManagerServicePerimeterDryRunResource
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/accessContextManagerServicePerimeterDryRunResource:AccessContextManagerServicePerimeterDryRunResource", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessContextManagerServicePerimeterDryRunResource resources.
type accessContextManagerServicePerimeterDryRunResourceState struct {
	AccessContextManagerServicePerimeterDryRunResourceId *string `pulumi:"accessContextManagerServicePerimeterDryRunResourceId"`
	// The name of the Access Policy this resource belongs to.
	AccessPolicyId *string `pulumi:"accessPolicyId"`
	// The perimeter etag is internally used to prevent overwriting the list of perimeter resources on PATCH calls. It is
	// retrieved from the same GET perimeter API call that's used to get the current list of resources. The resource to add or
	// remove is merged into that list and then this etag is sent with the PATCH call along with the updated resource list.
	Etag *string `pulumi:"etag"`
	// The name of the Service Perimeter to add this resource to.
	PerimeterName *string `pulumi:"perimeterName"`
	// A GCP resource that is inside of the service perimeter. Currently only projects are allowed. Format:
	// projects/{project_number}
	Resource *string                                                     `pulumi:"resource"`
	Timeouts *AccessContextManagerServicePerimeterDryRunResourceTimeouts `pulumi:"timeouts"`
}

type AccessContextManagerServicePerimeterDryRunResourceState struct {
	AccessContextManagerServicePerimeterDryRunResourceId pulumi.StringPtrInput
	// The name of the Access Policy this resource belongs to.
	AccessPolicyId pulumi.StringPtrInput
	// The perimeter etag is internally used to prevent overwriting the list of perimeter resources on PATCH calls. It is
	// retrieved from the same GET perimeter API call that's used to get the current list of resources. The resource to add or
	// remove is merged into that list and then this etag is sent with the PATCH call along with the updated resource list.
	Etag pulumi.StringPtrInput
	// The name of the Service Perimeter to add this resource to.
	PerimeterName pulumi.StringPtrInput
	// A GCP resource that is inside of the service perimeter. Currently only projects are allowed. Format:
	// projects/{project_number}
	Resource pulumi.StringPtrInput
	Timeouts AccessContextManagerServicePerimeterDryRunResourceTimeoutsPtrInput
}

func (AccessContextManagerServicePerimeterDryRunResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessContextManagerServicePerimeterDryRunResourceState)(nil)).Elem()
}

type accessContextManagerServicePerimeterDryRunResourceArgs struct {
	AccessContextManagerServicePerimeterDryRunResourceId *string `pulumi:"accessContextManagerServicePerimeterDryRunResourceId"`
	// The name of the Service Perimeter to add this resource to.
	PerimeterName string `pulumi:"perimeterName"`
	// A GCP resource that is inside of the service perimeter. Currently only projects are allowed. Format:
	// projects/{project_number}
	Resource string                                                      `pulumi:"resource"`
	Timeouts *AccessContextManagerServicePerimeterDryRunResourceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a AccessContextManagerServicePerimeterDryRunResource resource.
type AccessContextManagerServicePerimeterDryRunResourceArgs struct {
	AccessContextManagerServicePerimeterDryRunResourceId pulumi.StringPtrInput
	// The name of the Service Perimeter to add this resource to.
	PerimeterName pulumi.StringInput
	// A GCP resource that is inside of the service perimeter. Currently only projects are allowed. Format:
	// projects/{project_number}
	Resource pulumi.StringInput
	Timeouts AccessContextManagerServicePerimeterDryRunResourceTimeoutsPtrInput
}

func (AccessContextManagerServicePerimeterDryRunResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessContextManagerServicePerimeterDryRunResourceArgs)(nil)).Elem()
}

type AccessContextManagerServicePerimeterDryRunResourceInput interface {
	pulumi.Input

	ToAccessContextManagerServicePerimeterDryRunResourceOutput() AccessContextManagerServicePerimeterDryRunResourceOutput
	ToAccessContextManagerServicePerimeterDryRunResourceOutputWithContext(ctx context.Context) AccessContextManagerServicePerimeterDryRunResourceOutput
}

func (*AccessContextManagerServicePerimeterDryRunResource) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessContextManagerServicePerimeterDryRunResource)(nil)).Elem()
}

func (i *AccessContextManagerServicePerimeterDryRunResource) ToAccessContextManagerServicePerimeterDryRunResourceOutput() AccessContextManagerServicePerimeterDryRunResourceOutput {
	return i.ToAccessContextManagerServicePerimeterDryRunResourceOutputWithContext(context.Background())
}

func (i *AccessContextManagerServicePerimeterDryRunResource) ToAccessContextManagerServicePerimeterDryRunResourceOutputWithContext(ctx context.Context) AccessContextManagerServicePerimeterDryRunResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessContextManagerServicePerimeterDryRunResourceOutput)
}

type AccessContextManagerServicePerimeterDryRunResourceOutput struct{ *pulumi.OutputState }

func (AccessContextManagerServicePerimeterDryRunResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessContextManagerServicePerimeterDryRunResource)(nil)).Elem()
}

func (o AccessContextManagerServicePerimeterDryRunResourceOutput) ToAccessContextManagerServicePerimeterDryRunResourceOutput() AccessContextManagerServicePerimeterDryRunResourceOutput {
	return o
}

func (o AccessContextManagerServicePerimeterDryRunResourceOutput) ToAccessContextManagerServicePerimeterDryRunResourceOutputWithContext(ctx context.Context) AccessContextManagerServicePerimeterDryRunResourceOutput {
	return o
}

func (o AccessContextManagerServicePerimeterDryRunResourceOutput) AccessContextManagerServicePerimeterDryRunResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterDryRunResource) pulumi.StringOutput {
		return v.AccessContextManagerServicePerimeterDryRunResourceId
	}).(pulumi.StringOutput)
}

// The name of the Access Policy this resource belongs to.
func (o AccessContextManagerServicePerimeterDryRunResourceOutput) AccessPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterDryRunResource) pulumi.StringOutput {
		return v.AccessPolicyId
	}).(pulumi.StringOutput)
}

// The perimeter etag is internally used to prevent overwriting the list of perimeter resources on PATCH calls. It is
// retrieved from the same GET perimeter API call that's used to get the current list of resources. The resource to add or
// remove is merged into that list and then this etag is sent with the PATCH call along with the updated resource list.
func (o AccessContextManagerServicePerimeterDryRunResourceOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterDryRunResource) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The name of the Service Perimeter to add this resource to.
func (o AccessContextManagerServicePerimeterDryRunResourceOutput) PerimeterName() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterDryRunResource) pulumi.StringOutput {
		return v.PerimeterName
	}).(pulumi.StringOutput)
}

// A GCP resource that is inside of the service perimeter. Currently only projects are allowed. Format:
// projects/{project_number}
func (o AccessContextManagerServicePerimeterDryRunResourceOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterDryRunResource) pulumi.StringOutput { return v.Resource }).(pulumi.StringOutput)
}

func (o AccessContextManagerServicePerimeterDryRunResourceOutput) Timeouts() AccessContextManagerServicePerimeterDryRunResourceTimeoutsPtrOutput {
	return o.ApplyT(func(v *AccessContextManagerServicePerimeterDryRunResource) AccessContextManagerServicePerimeterDryRunResourceTimeoutsPtrOutput {
		return v.Timeouts
	}).(AccessContextManagerServicePerimeterDryRunResourceTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessContextManagerServicePerimeterDryRunResourceInput)(nil)).Elem(), &AccessContextManagerServicePerimeterDryRunResource{})
	pulumi.RegisterOutputType(AccessContextManagerServicePerimeterDryRunResourceOutput{})
}
