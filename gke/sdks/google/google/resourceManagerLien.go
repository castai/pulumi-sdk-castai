// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ResourceManagerLien struct {
	pulumi.CustomResourceState

	// Time of creation
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// A system-generated unique identifier for this Lien.
	Name pulumi.StringOutput `pulumi:"name"`
	// A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically.
	// Maximum length of 200 characters.
	Origin pulumi.StringOutput `pulumi:"origin"`
	// A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens
	// are supported. Since a variety of objects can have Liens against them, you must provide the type prefix (e.g.
	// "projects/my-project-name").
	Parent pulumi.StringOutput `pulumi:"parent"`
	// Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200
	// characters.
	Reason                pulumi.StringOutput `pulumi:"reason"`
	ResourceManagerLienId pulumi.StringOutput `pulumi:"resourceManagerLienId"`
	// The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM
	// permission. The server will validate the permissions against those for which Liens are supported. An empty list is
	// meaningless and will be rejected. e.g. ['resourcemanager.projects.delete']
	Restrictions pulumi.StringArrayOutput             `pulumi:"restrictions"`
	Timeouts     ResourceManagerLienTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewResourceManagerLien registers a new resource with the given unique name, arguments, and options.
func NewResourceManagerLien(ctx *pulumi.Context,
	name string, args *ResourceManagerLienArgs, opts ...pulumi.ResourceOption) (*ResourceManagerLien, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Origin == nil {
		return nil, errors.New("invalid value for required argument 'Origin'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.Reason == nil {
		return nil, errors.New("invalid value for required argument 'Reason'")
	}
	if args.Restrictions == nil {
		return nil, errors.New("invalid value for required argument 'Restrictions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ResourceManagerLien
	err = ctx.RegisterPackageResource("google:index/resourceManagerLien:ResourceManagerLien", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceManagerLien gets an existing ResourceManagerLien resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceManagerLien(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceManagerLienState, opts ...pulumi.ResourceOption) (*ResourceManagerLien, error) {
	var resource ResourceManagerLien
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/resourceManagerLien:ResourceManagerLien", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceManagerLien resources.
type resourceManagerLienState struct {
	// Time of creation
	CreateTime *string `pulumi:"createTime"`
	// A system-generated unique identifier for this Lien.
	Name *string `pulumi:"name"`
	// A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically.
	// Maximum length of 200 characters.
	Origin *string `pulumi:"origin"`
	// A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens
	// are supported. Since a variety of objects can have Liens against them, you must provide the type prefix (e.g.
	// "projects/my-project-name").
	Parent *string `pulumi:"parent"`
	// Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200
	// characters.
	Reason                *string `pulumi:"reason"`
	ResourceManagerLienId *string `pulumi:"resourceManagerLienId"`
	// The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM
	// permission. The server will validate the permissions against those for which Liens are supported. An empty list is
	// meaningless and will be rejected. e.g. ['resourcemanager.projects.delete']
	Restrictions []string                     `pulumi:"restrictions"`
	Timeouts     *ResourceManagerLienTimeouts `pulumi:"timeouts"`
}

type ResourceManagerLienState struct {
	// Time of creation
	CreateTime pulumi.StringPtrInput
	// A system-generated unique identifier for this Lien.
	Name pulumi.StringPtrInput
	// A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically.
	// Maximum length of 200 characters.
	Origin pulumi.StringPtrInput
	// A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens
	// are supported. Since a variety of objects can have Liens against them, you must provide the type prefix (e.g.
	// "projects/my-project-name").
	Parent pulumi.StringPtrInput
	// Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200
	// characters.
	Reason                pulumi.StringPtrInput
	ResourceManagerLienId pulumi.StringPtrInput
	// The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM
	// permission. The server will validate the permissions against those for which Liens are supported. An empty list is
	// meaningless and will be rejected. e.g. ['resourcemanager.projects.delete']
	Restrictions pulumi.StringArrayInput
	Timeouts     ResourceManagerLienTimeoutsPtrInput
}

func (ResourceManagerLienState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceManagerLienState)(nil)).Elem()
}

type resourceManagerLienArgs struct {
	// A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically.
	// Maximum length of 200 characters.
	Origin string `pulumi:"origin"`
	// A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens
	// are supported. Since a variety of objects can have Liens against them, you must provide the type prefix (e.g.
	// "projects/my-project-name").
	Parent string `pulumi:"parent"`
	// Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200
	// characters.
	Reason                string  `pulumi:"reason"`
	ResourceManagerLienId *string `pulumi:"resourceManagerLienId"`
	// The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM
	// permission. The server will validate the permissions against those for which Liens are supported. An empty list is
	// meaningless and will be rejected. e.g. ['resourcemanager.projects.delete']
	Restrictions []string                     `pulumi:"restrictions"`
	Timeouts     *ResourceManagerLienTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ResourceManagerLien resource.
type ResourceManagerLienArgs struct {
	// A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically.
	// Maximum length of 200 characters.
	Origin pulumi.StringInput
	// A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens
	// are supported. Since a variety of objects can have Liens against them, you must provide the type prefix (e.g.
	// "projects/my-project-name").
	Parent pulumi.StringInput
	// Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200
	// characters.
	Reason                pulumi.StringInput
	ResourceManagerLienId pulumi.StringPtrInput
	// The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM
	// permission. The server will validate the permissions against those for which Liens are supported. An empty list is
	// meaningless and will be rejected. e.g. ['resourcemanager.projects.delete']
	Restrictions pulumi.StringArrayInput
	Timeouts     ResourceManagerLienTimeoutsPtrInput
}

func (ResourceManagerLienArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceManagerLienArgs)(nil)).Elem()
}

type ResourceManagerLienInput interface {
	pulumi.Input

	ToResourceManagerLienOutput() ResourceManagerLienOutput
	ToResourceManagerLienOutputWithContext(ctx context.Context) ResourceManagerLienOutput
}

func (*ResourceManagerLien) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceManagerLien)(nil)).Elem()
}

func (i *ResourceManagerLien) ToResourceManagerLienOutput() ResourceManagerLienOutput {
	return i.ToResourceManagerLienOutputWithContext(context.Background())
}

func (i *ResourceManagerLien) ToResourceManagerLienOutputWithContext(ctx context.Context) ResourceManagerLienOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceManagerLienOutput)
}

type ResourceManagerLienOutput struct{ *pulumi.OutputState }

func (ResourceManagerLienOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceManagerLien)(nil)).Elem()
}

func (o ResourceManagerLienOutput) ToResourceManagerLienOutput() ResourceManagerLienOutput {
	return o
}

func (o ResourceManagerLienOutput) ToResourceManagerLienOutputWithContext(ctx context.Context) ResourceManagerLienOutput {
	return o
}

// Time of creation
func (o ResourceManagerLienOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceManagerLien) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// A system-generated unique identifier for this Lien.
func (o ResourceManagerLienOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceManagerLien) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A stable, user-visible/meaningful string identifying the origin of the Lien, intended to be inspected programmatically.
// Maximum length of 200 characters.
func (o ResourceManagerLienOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceManagerLien) pulumi.StringOutput { return v.Origin }).(pulumi.StringOutput)
}

// A reference to the resource this Lien is attached to. The server will validate the parent against those for which Liens
// are supported. Since a variety of objects can have Liens against them, you must provide the type prefix (e.g.
// "projects/my-project-name").
func (o ResourceManagerLienOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceManagerLien) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// Concise user-visible strings indicating why an action cannot be performed on a resource. Maximum length of 200
// characters.
func (o ResourceManagerLienOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceManagerLien) pulumi.StringOutput { return v.Reason }).(pulumi.StringOutput)
}

func (o ResourceManagerLienOutput) ResourceManagerLienId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceManagerLien) pulumi.StringOutput { return v.ResourceManagerLienId }).(pulumi.StringOutput)
}

// The types of operations which should be blocked as a result of this Lien. Each value should correspond to an IAM
// permission. The server will validate the permissions against those for which Liens are supported. An empty list is
// meaningless and will be rejected. e.g. ['resourcemanager.projects.delete']
func (o ResourceManagerLienOutput) Restrictions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceManagerLien) pulumi.StringArrayOutput { return v.Restrictions }).(pulumi.StringArrayOutput)
}

func (o ResourceManagerLienOutput) Timeouts() ResourceManagerLienTimeoutsPtrOutput {
	return o.ApplyT(func(v *ResourceManagerLien) ResourceManagerLienTimeoutsPtrOutput { return v.Timeouts }).(ResourceManagerLienTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceManagerLienInput)(nil)).Elem(), &ResourceManagerLien{})
	pulumi.RegisterOutputType(ResourceManagerLienOutput{})
}
