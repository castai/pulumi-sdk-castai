// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataprocMetastoreServiceIamBinding struct {
	pulumi.CustomResourceState

	Condition                            DataprocMetastoreServiceIamBindingConditionPtrOutput `pulumi:"condition"`
	DataprocMetastoreServiceIamBindingId pulumi.StringOutput                                  `pulumi:"dataprocMetastoreServiceIamBindingId"`
	Etag                                 pulumi.StringOutput                                  `pulumi:"etag"`
	Location                             pulumi.StringOutput                                  `pulumi:"location"`
	Members                              pulumi.StringArrayOutput                             `pulumi:"members"`
	Project                              pulumi.StringOutput                                  `pulumi:"project"`
	Role                                 pulumi.StringOutput                                  `pulumi:"role"`
	ServiceId                            pulumi.StringOutput                                  `pulumi:"serviceId"`
}

// NewDataprocMetastoreServiceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDataprocMetastoreServiceIamBinding(ctx *pulumi.Context,
	name string, args *DataprocMetastoreServiceIamBindingArgs, opts ...pulumi.ResourceOption) (*DataprocMetastoreServiceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataprocMetastoreServiceIamBinding
	err = ctx.RegisterPackageResource("google:index/dataprocMetastoreServiceIamBinding:DataprocMetastoreServiceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocMetastoreServiceIamBinding gets an existing DataprocMetastoreServiceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocMetastoreServiceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocMetastoreServiceIamBindingState, opts ...pulumi.ResourceOption) (*DataprocMetastoreServiceIamBinding, error) {
	var resource DataprocMetastoreServiceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataprocMetastoreServiceIamBinding:DataprocMetastoreServiceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocMetastoreServiceIamBinding resources.
type dataprocMetastoreServiceIamBindingState struct {
	Condition                            *DataprocMetastoreServiceIamBindingCondition `pulumi:"condition"`
	DataprocMetastoreServiceIamBindingId *string                                      `pulumi:"dataprocMetastoreServiceIamBindingId"`
	Etag                                 *string                                      `pulumi:"etag"`
	Location                             *string                                      `pulumi:"location"`
	Members                              []string                                     `pulumi:"members"`
	Project                              *string                                      `pulumi:"project"`
	Role                                 *string                                      `pulumi:"role"`
	ServiceId                            *string                                      `pulumi:"serviceId"`
}

type DataprocMetastoreServiceIamBindingState struct {
	Condition                            DataprocMetastoreServiceIamBindingConditionPtrInput
	DataprocMetastoreServiceIamBindingId pulumi.StringPtrInput
	Etag                                 pulumi.StringPtrInput
	Location                             pulumi.StringPtrInput
	Members                              pulumi.StringArrayInput
	Project                              pulumi.StringPtrInput
	Role                                 pulumi.StringPtrInput
	ServiceId                            pulumi.StringPtrInput
}

func (DataprocMetastoreServiceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreServiceIamBindingState)(nil)).Elem()
}

type dataprocMetastoreServiceIamBindingArgs struct {
	Condition                            *DataprocMetastoreServiceIamBindingCondition `pulumi:"condition"`
	DataprocMetastoreServiceIamBindingId *string                                      `pulumi:"dataprocMetastoreServiceIamBindingId"`
	Location                             *string                                      `pulumi:"location"`
	Members                              []string                                     `pulumi:"members"`
	Project                              *string                                      `pulumi:"project"`
	Role                                 string                                       `pulumi:"role"`
	ServiceId                            string                                       `pulumi:"serviceId"`
}

// The set of arguments for constructing a DataprocMetastoreServiceIamBinding resource.
type DataprocMetastoreServiceIamBindingArgs struct {
	Condition                            DataprocMetastoreServiceIamBindingConditionPtrInput
	DataprocMetastoreServiceIamBindingId pulumi.StringPtrInput
	Location                             pulumi.StringPtrInput
	Members                              pulumi.StringArrayInput
	Project                              pulumi.StringPtrInput
	Role                                 pulumi.StringInput
	ServiceId                            pulumi.StringInput
}

func (DataprocMetastoreServiceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreServiceIamBindingArgs)(nil)).Elem()
}

type DataprocMetastoreServiceIamBindingInput interface {
	pulumi.Input

	ToDataprocMetastoreServiceIamBindingOutput() DataprocMetastoreServiceIamBindingOutput
	ToDataprocMetastoreServiceIamBindingOutputWithContext(ctx context.Context) DataprocMetastoreServiceIamBindingOutput
}

func (*DataprocMetastoreServiceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreServiceIamBinding)(nil)).Elem()
}

func (i *DataprocMetastoreServiceIamBinding) ToDataprocMetastoreServiceIamBindingOutput() DataprocMetastoreServiceIamBindingOutput {
	return i.ToDataprocMetastoreServiceIamBindingOutputWithContext(context.Background())
}

func (i *DataprocMetastoreServiceIamBinding) ToDataprocMetastoreServiceIamBindingOutputWithContext(ctx context.Context) DataprocMetastoreServiceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocMetastoreServiceIamBindingOutput)
}

type DataprocMetastoreServiceIamBindingOutput struct{ *pulumi.OutputState }

func (DataprocMetastoreServiceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreServiceIamBinding)(nil)).Elem()
}

func (o DataprocMetastoreServiceIamBindingOutput) ToDataprocMetastoreServiceIamBindingOutput() DataprocMetastoreServiceIamBindingOutput {
	return o
}

func (o DataprocMetastoreServiceIamBindingOutput) ToDataprocMetastoreServiceIamBindingOutputWithContext(ctx context.Context) DataprocMetastoreServiceIamBindingOutput {
	return o
}

func (o DataprocMetastoreServiceIamBindingOutput) Condition() DataprocMetastoreServiceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamBinding) DataprocMetastoreServiceIamBindingConditionPtrOutput {
		return v.Condition
	}).(DataprocMetastoreServiceIamBindingConditionPtrOutput)
}

func (o DataprocMetastoreServiceIamBindingOutput) DataprocMetastoreServiceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamBinding) pulumi.StringOutput {
		return v.DataprocMetastoreServiceIamBindingId
	}).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DataprocMetastoreServiceIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o DataprocMetastoreServiceIamBindingOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreServiceIamBinding) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocMetastoreServiceIamBindingInput)(nil)).Elem(), &DataprocMetastoreServiceIamBinding{})
	pulumi.RegisterOutputType(DataprocMetastoreServiceIamBindingOutput{})
}
