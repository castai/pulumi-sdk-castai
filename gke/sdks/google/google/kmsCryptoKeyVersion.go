// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KmsCryptoKeyVersion struct {
	pulumi.CustomResourceState

	// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
	Algorithm pulumi.StringOutput `pulumi:"algorithm"`
	// Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the
	// key as stored on the HSM, independently of Google. Only provided for key versions with protectionLevel HSM.
	Attestations KmsCryptoKeyVersionAttestationArrayOutput `pulumi:"attestations"`
	// The name of the cryptoKey associated with the CryptoKeyVersions. Format:
	// ''projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}''
	CryptoKey pulumi.StringOutput `pulumi:"cryptoKey"`
	// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific
	// to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
	ExternalProtectionLevelOptions KmsCryptoKeyVersionExternalProtectionLevelOptionsPtrOutput `pulumi:"externalProtectionLevelOptions"`
	// The time this CryptoKeyVersion key material was generated
	GenerateTime          pulumi.StringOutput `pulumi:"generateTime"`
	KmsCryptoKeyVersionId pulumi.StringOutput `pulumi:"kmsCryptoKeyVersionId"`
	// The resource name for this CryptoKeyVersion.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
	ProtectionLevel pulumi.StringOutput `pulumi:"protectionLevel"`
	// The current state of the CryptoKeyVersion. Possible values: ["PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED",
	// "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED"]
	State    pulumi.StringOutput                  `pulumi:"state"`
	Timeouts KmsCryptoKeyVersionTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewKmsCryptoKeyVersion registers a new resource with the given unique name, arguments, and options.
func NewKmsCryptoKeyVersion(ctx *pulumi.Context,
	name string, args *KmsCryptoKeyVersionArgs, opts ...pulumi.ResourceOption) (*KmsCryptoKeyVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CryptoKey == nil {
		return nil, errors.New("invalid value for required argument 'CryptoKey'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource KmsCryptoKeyVersion
	err = ctx.RegisterPackageResource("google:index/kmsCryptoKeyVersion:KmsCryptoKeyVersion", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsCryptoKeyVersion gets an existing KmsCryptoKeyVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsCryptoKeyVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsCryptoKeyVersionState, opts ...pulumi.ResourceOption) (*KmsCryptoKeyVersion, error) {
	var resource KmsCryptoKeyVersion
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/kmsCryptoKeyVersion:KmsCryptoKeyVersion", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsCryptoKeyVersion resources.
type kmsCryptoKeyVersionState struct {
	// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
	Algorithm *string `pulumi:"algorithm"`
	// Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the
	// key as stored on the HSM, independently of Google. Only provided for key versions with protectionLevel HSM.
	Attestations []KmsCryptoKeyVersionAttestation `pulumi:"attestations"`
	// The name of the cryptoKey associated with the CryptoKeyVersions. Format:
	// ''projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}''
	CryptoKey *string `pulumi:"cryptoKey"`
	// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific
	// to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
	ExternalProtectionLevelOptions *KmsCryptoKeyVersionExternalProtectionLevelOptions `pulumi:"externalProtectionLevelOptions"`
	// The time this CryptoKeyVersion key material was generated
	GenerateTime          *string `pulumi:"generateTime"`
	KmsCryptoKeyVersionId *string `pulumi:"kmsCryptoKeyVersionId"`
	// The resource name for this CryptoKeyVersion.
	Name *string `pulumi:"name"`
	// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
	ProtectionLevel *string `pulumi:"protectionLevel"`
	// The current state of the CryptoKeyVersion. Possible values: ["PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED",
	// "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED"]
	State    *string                      `pulumi:"state"`
	Timeouts *KmsCryptoKeyVersionTimeouts `pulumi:"timeouts"`
}

type KmsCryptoKeyVersionState struct {
	// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
	Algorithm pulumi.StringPtrInput
	// Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the
	// key as stored on the HSM, independently of Google. Only provided for key versions with protectionLevel HSM.
	Attestations KmsCryptoKeyVersionAttestationArrayInput
	// The name of the cryptoKey associated with the CryptoKeyVersions. Format:
	// ''projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}''
	CryptoKey pulumi.StringPtrInput
	// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific
	// to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
	ExternalProtectionLevelOptions KmsCryptoKeyVersionExternalProtectionLevelOptionsPtrInput
	// The time this CryptoKeyVersion key material was generated
	GenerateTime          pulumi.StringPtrInput
	KmsCryptoKeyVersionId pulumi.StringPtrInput
	// The resource name for this CryptoKeyVersion.
	Name pulumi.StringPtrInput
	// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
	ProtectionLevel pulumi.StringPtrInput
	// The current state of the CryptoKeyVersion. Possible values: ["PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED",
	// "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED"]
	State    pulumi.StringPtrInput
	Timeouts KmsCryptoKeyVersionTimeoutsPtrInput
}

func (KmsCryptoKeyVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsCryptoKeyVersionState)(nil)).Elem()
}

type kmsCryptoKeyVersionArgs struct {
	// The name of the cryptoKey associated with the CryptoKeyVersions. Format:
	// ''projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}''
	CryptoKey string `pulumi:"cryptoKey"`
	// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific
	// to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
	ExternalProtectionLevelOptions *KmsCryptoKeyVersionExternalProtectionLevelOptions `pulumi:"externalProtectionLevelOptions"`
	KmsCryptoKeyVersionId          *string                                            `pulumi:"kmsCryptoKeyVersionId"`
	// The current state of the CryptoKeyVersion. Possible values: ["PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED",
	// "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED"]
	State    *string                      `pulumi:"state"`
	Timeouts *KmsCryptoKeyVersionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a KmsCryptoKeyVersion resource.
type KmsCryptoKeyVersionArgs struct {
	// The name of the cryptoKey associated with the CryptoKeyVersions. Format:
	// ''projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}''
	CryptoKey pulumi.StringInput
	// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific
	// to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
	ExternalProtectionLevelOptions KmsCryptoKeyVersionExternalProtectionLevelOptionsPtrInput
	KmsCryptoKeyVersionId          pulumi.StringPtrInput
	// The current state of the CryptoKeyVersion. Possible values: ["PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED",
	// "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED"]
	State    pulumi.StringPtrInput
	Timeouts KmsCryptoKeyVersionTimeoutsPtrInput
}

func (KmsCryptoKeyVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsCryptoKeyVersionArgs)(nil)).Elem()
}

type KmsCryptoKeyVersionInput interface {
	pulumi.Input

	ToKmsCryptoKeyVersionOutput() KmsCryptoKeyVersionOutput
	ToKmsCryptoKeyVersionOutputWithContext(ctx context.Context) KmsCryptoKeyVersionOutput
}

func (*KmsCryptoKeyVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsCryptoKeyVersion)(nil)).Elem()
}

func (i *KmsCryptoKeyVersion) ToKmsCryptoKeyVersionOutput() KmsCryptoKeyVersionOutput {
	return i.ToKmsCryptoKeyVersionOutputWithContext(context.Background())
}

func (i *KmsCryptoKeyVersion) ToKmsCryptoKeyVersionOutputWithContext(ctx context.Context) KmsCryptoKeyVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsCryptoKeyVersionOutput)
}

type KmsCryptoKeyVersionOutput struct{ *pulumi.OutputState }

func (KmsCryptoKeyVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsCryptoKeyVersion)(nil)).Elem()
}

func (o KmsCryptoKeyVersionOutput) ToKmsCryptoKeyVersionOutput() KmsCryptoKeyVersionOutput {
	return o
}

func (o KmsCryptoKeyVersionOutput) ToKmsCryptoKeyVersionOutputWithContext(ctx context.Context) KmsCryptoKeyVersionOutput {
	return o
}

// The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
func (o KmsCryptoKeyVersionOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) pulumi.StringOutput { return v.Algorithm }).(pulumi.StringOutput)
}

// Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the
// key as stored on the HSM, independently of Google. Only provided for key versions with protectionLevel HSM.
func (o KmsCryptoKeyVersionOutput) Attestations() KmsCryptoKeyVersionAttestationArrayOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) KmsCryptoKeyVersionAttestationArrayOutput { return v.Attestations }).(KmsCryptoKeyVersionAttestationArrayOutput)
}

// The name of the cryptoKey associated with the CryptoKeyVersions. Format:
// ”projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}”
func (o KmsCryptoKeyVersionOutput) CryptoKey() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) pulumi.StringOutput { return v.CryptoKey }).(pulumi.StringOutput)
}

// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific
// to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
func (o KmsCryptoKeyVersionOutput) ExternalProtectionLevelOptions() KmsCryptoKeyVersionExternalProtectionLevelOptionsPtrOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) KmsCryptoKeyVersionExternalProtectionLevelOptionsPtrOutput {
		return v.ExternalProtectionLevelOptions
	}).(KmsCryptoKeyVersionExternalProtectionLevelOptionsPtrOutput)
}

// The time this CryptoKeyVersion key material was generated
func (o KmsCryptoKeyVersionOutput) GenerateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) pulumi.StringOutput { return v.GenerateTime }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyVersionOutput) KmsCryptoKeyVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) pulumi.StringOutput { return v.KmsCryptoKeyVersionId }).(pulumi.StringOutput)
}

// The resource name for this CryptoKeyVersion.
func (o KmsCryptoKeyVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
func (o KmsCryptoKeyVersionOutput) ProtectionLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) pulumi.StringOutput { return v.ProtectionLevel }).(pulumi.StringOutput)
}

// The current state of the CryptoKeyVersion. Possible values: ["PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED",
// "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED"]
func (o KmsCryptoKeyVersionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyVersionOutput) Timeouts() KmsCryptoKeyVersionTimeoutsPtrOutput {
	return o.ApplyT(func(v *KmsCryptoKeyVersion) KmsCryptoKeyVersionTimeoutsPtrOutput { return v.Timeouts }).(KmsCryptoKeyVersionTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsCryptoKeyVersionInput)(nil)).Elem(), &KmsCryptoKeyVersion{})
	pulumi.RegisterOutputType(KmsCryptoKeyVersionOutput{})
}
