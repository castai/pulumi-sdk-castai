// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ActiveDirectoryDomain struct {
	pulumi.CustomResourceState

	ActiveDirectoryDomainId pulumi.StringOutput `pulumi:"activeDirectoryDomainId"`
	// The name of delegated administrator account used to perform Active Directory operations. If not specified, setupadmin
	// will be used.
	Admin pulumi.StringPtrOutput `pulumi:"admin"`
	// The full names of the Google Compute Engine networks the domain instance is connected to. The domain is only available
	// on networks listed in authorizedNetworks. If CIDR subnets overlap between networks, domain creation will fail.
	AuthorizedNetworks pulumi.StringArrayOutput `pulumi:"authorizedNetworks"`
	DeletionProtection pulumi.BoolPtrOutput     `pulumi:"deletionProtection"`
	// The fully qualified domain name. e.g. mydomain.myorganization.com, with the restrictions of
	// https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.
	DomainName      pulumi.StringOutput    `pulumi:"domainName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would
	// be chosen for an Active Directory set up on an internal network.
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// Resource labels that can contain user-provided metadata **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Locations where domain needs to be provisioned. [regions][compute/docs/regions-zones/] e.g. us-west1 or us-east4 Service
	// supports up to 4 locations at once. Each location will use a /26 block.
	Locations pulumi.StringArrayOutput `pulumi:"locations"`
	// The unique name of the domain using the format: 'projects/{project}/locations/global/domains/{domainName}'.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges
	// must be unique and non-overlapping with existing subnets in authorizedNetworks
	ReservedIpRange pulumi.StringOutput `pulumi:"reservedIpRange"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                 `pulumi:"terraformLabels"`
	Timeouts        ActiveDirectoryDomainTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewActiveDirectoryDomain registers a new resource with the given unique name, arguments, and options.
func NewActiveDirectoryDomain(ctx *pulumi.Context,
	name string, args *ActiveDirectoryDomainArgs, opts ...pulumi.ResourceOption) (*ActiveDirectoryDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.Locations == nil {
		return nil, errors.New("invalid value for required argument 'Locations'")
	}
	if args.ReservedIpRange == nil {
		return nil, errors.New("invalid value for required argument 'ReservedIpRange'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ActiveDirectoryDomain
	err = ctx.RegisterPackageResource("google:index/activeDirectoryDomain:ActiveDirectoryDomain", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetActiveDirectoryDomain gets an existing ActiveDirectoryDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetActiveDirectoryDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ActiveDirectoryDomainState, opts ...pulumi.ResourceOption) (*ActiveDirectoryDomain, error) {
	var resource ActiveDirectoryDomain
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/activeDirectoryDomain:ActiveDirectoryDomain", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ActiveDirectoryDomain resources.
type activeDirectoryDomainState struct {
	ActiveDirectoryDomainId *string `pulumi:"activeDirectoryDomainId"`
	// The name of delegated administrator account used to perform Active Directory operations. If not specified, setupadmin
	// will be used.
	Admin *string `pulumi:"admin"`
	// The full names of the Google Compute Engine networks the domain instance is connected to. The domain is only available
	// on networks listed in authorizedNetworks. If CIDR subnets overlap between networks, domain creation will fail.
	AuthorizedNetworks []string `pulumi:"authorizedNetworks"`
	DeletionProtection *bool    `pulumi:"deletionProtection"`
	// The fully qualified domain name. e.g. mydomain.myorganization.com, with the restrictions of
	// https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.
	DomainName      *string           `pulumi:"domainName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would
	// be chosen for an Active Directory set up on an internal network.
	Fqdn *string `pulumi:"fqdn"`
	// Resource labels that can contain user-provided metadata **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// Locations where domain needs to be provisioned. [regions][compute/docs/regions-zones/] e.g. us-west1 or us-east4 Service
	// supports up to 4 locations at once. Each location will use a /26 block.
	Locations []string `pulumi:"locations"`
	// The unique name of the domain using the format: 'projects/{project}/locations/global/domains/{domainName}'.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges
	// must be unique and non-overlapping with existing subnets in authorizedNetworks
	ReservedIpRange *string `pulumi:"reservedIpRange"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string              `pulumi:"terraformLabels"`
	Timeouts        *ActiveDirectoryDomainTimeouts `pulumi:"timeouts"`
}

type ActiveDirectoryDomainState struct {
	ActiveDirectoryDomainId pulumi.StringPtrInput
	// The name of delegated administrator account used to perform Active Directory operations. If not specified, setupadmin
	// will be used.
	Admin pulumi.StringPtrInput
	// The full names of the Google Compute Engine networks the domain instance is connected to. The domain is only available
	// on networks listed in authorizedNetworks. If CIDR subnets overlap between networks, domain creation will fail.
	AuthorizedNetworks pulumi.StringArrayInput
	DeletionProtection pulumi.BoolPtrInput
	// The fully qualified domain name. e.g. mydomain.myorganization.com, with the restrictions of
	// https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.
	DomainName      pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would
	// be chosen for an Active Directory set up on an internal network.
	Fqdn pulumi.StringPtrInput
	// Resource labels that can contain user-provided metadata **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// Locations where domain needs to be provisioned. [regions][compute/docs/regions-zones/] e.g. us-west1 or us-east4 Service
	// supports up to 4 locations at once. Each location will use a /26 block.
	Locations pulumi.StringArrayInput
	// The unique name of the domain using the format: 'projects/{project}/locations/global/domains/{domainName}'.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges
	// must be unique and non-overlapping with existing subnets in authorizedNetworks
	ReservedIpRange pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ActiveDirectoryDomainTimeoutsPtrInput
}

func (ActiveDirectoryDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*activeDirectoryDomainState)(nil)).Elem()
}

type activeDirectoryDomainArgs struct {
	ActiveDirectoryDomainId *string `pulumi:"activeDirectoryDomainId"`
	// The name of delegated administrator account used to perform Active Directory operations. If not specified, setupadmin
	// will be used.
	Admin *string `pulumi:"admin"`
	// The full names of the Google Compute Engine networks the domain instance is connected to. The domain is only available
	// on networks listed in authorizedNetworks. If CIDR subnets overlap between networks, domain creation will fail.
	AuthorizedNetworks []string `pulumi:"authorizedNetworks"`
	DeletionProtection *bool    `pulumi:"deletionProtection"`
	// The fully qualified domain name. e.g. mydomain.myorganization.com, with the restrictions of
	// https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.
	DomainName string `pulumi:"domainName"`
	// Resource labels that can contain user-provided metadata **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels map[string]string `pulumi:"labels"`
	// Locations where domain needs to be provisioned. [regions][compute/docs/regions-zones/] e.g. us-west1 or us-east4 Service
	// supports up to 4 locations at once. Each location will use a /26 block.
	Locations []string `pulumi:"locations"`
	Project   *string  `pulumi:"project"`
	// The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges
	// must be unique and non-overlapping with existing subnets in authorizedNetworks
	ReservedIpRange string                         `pulumi:"reservedIpRange"`
	Timeouts        *ActiveDirectoryDomainTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ActiveDirectoryDomain resource.
type ActiveDirectoryDomainArgs struct {
	ActiveDirectoryDomainId pulumi.StringPtrInput
	// The name of delegated administrator account used to perform Active Directory operations. If not specified, setupadmin
	// will be used.
	Admin pulumi.StringPtrInput
	// The full names of the Google Compute Engine networks the domain instance is connected to. The domain is only available
	// on networks listed in authorizedNetworks. If CIDR subnets overlap between networks, domain creation will fail.
	AuthorizedNetworks pulumi.StringArrayInput
	DeletionProtection pulumi.BoolPtrInput
	// The fully qualified domain name. e.g. mydomain.myorganization.com, with the restrictions of
	// https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.
	DomainName pulumi.StringInput
	// Resource labels that can contain user-provided metadata **Note**: This field is non-authoritative, and will only manage
	// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
	// the resource.
	Labels pulumi.StringMapInput
	// Locations where domain needs to be provisioned. [regions][compute/docs/regions-zones/] e.g. us-west1 or us-east4 Service
	// supports up to 4 locations at once. Each location will use a /26 block.
	Locations pulumi.StringArrayInput
	Project   pulumi.StringPtrInput
	// The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges
	// must be unique and non-overlapping with existing subnets in authorizedNetworks
	ReservedIpRange pulumi.StringInput
	Timeouts        ActiveDirectoryDomainTimeoutsPtrInput
}

func (ActiveDirectoryDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*activeDirectoryDomainArgs)(nil)).Elem()
}

type ActiveDirectoryDomainInput interface {
	pulumi.Input

	ToActiveDirectoryDomainOutput() ActiveDirectoryDomainOutput
	ToActiveDirectoryDomainOutputWithContext(ctx context.Context) ActiveDirectoryDomainOutput
}

func (*ActiveDirectoryDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryDomain)(nil)).Elem()
}

func (i *ActiveDirectoryDomain) ToActiveDirectoryDomainOutput() ActiveDirectoryDomainOutput {
	return i.ToActiveDirectoryDomainOutputWithContext(context.Background())
}

func (i *ActiveDirectoryDomain) ToActiveDirectoryDomainOutputWithContext(ctx context.Context) ActiveDirectoryDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActiveDirectoryDomainOutput)
}

type ActiveDirectoryDomainOutput struct{ *pulumi.OutputState }

func (ActiveDirectoryDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActiveDirectoryDomain)(nil)).Elem()
}

func (o ActiveDirectoryDomainOutput) ToActiveDirectoryDomainOutput() ActiveDirectoryDomainOutput {
	return o
}

func (o ActiveDirectoryDomainOutput) ToActiveDirectoryDomainOutputWithContext(ctx context.Context) ActiveDirectoryDomainOutput {
	return o
}

func (o ActiveDirectoryDomainOutput) ActiveDirectoryDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringOutput { return v.ActiveDirectoryDomainId }).(pulumi.StringOutput)
}

// The name of delegated administrator account used to perform Active Directory operations. If not specified, setupadmin
// will be used.
func (o ActiveDirectoryDomainOutput) Admin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringPtrOutput { return v.Admin }).(pulumi.StringPtrOutput)
}

// The full names of the Google Compute Engine networks the domain instance is connected to. The domain is only available
// on networks listed in authorizedNetworks. If CIDR subnets overlap between networks, domain creation will fail.
func (o ActiveDirectoryDomainOutput) AuthorizedNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringArrayOutput { return v.AuthorizedNetworks }).(pulumi.StringArrayOutput)
}

func (o ActiveDirectoryDomainOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// The fully qualified domain name. e.g. mydomain.myorganization.com, with the restrictions of
// https://cloud.google.com/managed-microsoft-ad/reference/rest/v1/projects.locations.global.domains.
func (o ActiveDirectoryDomainOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

func (o ActiveDirectoryDomainOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The fully-qualified domain name of the exposed domain used by clients to connect to the service. Similar to what would
// be chosen for an Active Directory set up on an internal network.
func (o ActiveDirectoryDomainOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringOutput { return v.Fqdn }).(pulumi.StringOutput)
}

// Resource labels that can contain user-provided metadata **Note**: This field is non-authoritative, and will only manage
// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
// the resource.
func (o ActiveDirectoryDomainOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Locations where domain needs to be provisioned. [regions][compute/docs/regions-zones/] e.g. us-west1 or us-east4 Service
// supports up to 4 locations at once. Each location will use a /26 block.
func (o ActiveDirectoryDomainOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringArrayOutput { return v.Locations }).(pulumi.StringArrayOutput)
}

// The unique name of the domain using the format: 'projects/{project}/locations/global/domains/{domainName}'.
func (o ActiveDirectoryDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ActiveDirectoryDomainOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The CIDR range of internal addresses that are reserved for this domain. Reserved networks must be /24 or larger. Ranges
// must be unique and non-overlapping with existing subnets in authorizedNetworks
func (o ActiveDirectoryDomainOutput) ReservedIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringOutput { return v.ReservedIpRange }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ActiveDirectoryDomainOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ActiveDirectoryDomainOutput) Timeouts() ActiveDirectoryDomainTimeoutsPtrOutput {
	return o.ApplyT(func(v *ActiveDirectoryDomain) ActiveDirectoryDomainTimeoutsPtrOutput { return v.Timeouts }).(ActiveDirectoryDomainTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActiveDirectoryDomainInput)(nil)).Elem(), &ActiveDirectoryDomain{})
	pulumi.RegisterOutputType(ActiveDirectoryDomainOutput{})
}
