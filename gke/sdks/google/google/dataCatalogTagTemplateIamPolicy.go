// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataCatalogTagTemplateIamPolicy struct {
	pulumi.CustomResourceState

	DataCatalogTagTemplateIamPolicyId pulumi.StringOutput `pulumi:"dataCatalogTagTemplateIamPolicyId"`
	Etag                              pulumi.StringOutput `pulumi:"etag"`
	PolicyData                        pulumi.StringOutput `pulumi:"policyData"`
	Project                           pulumi.StringOutput `pulumi:"project"`
	Region                            pulumi.StringOutput `pulumi:"region"`
	TagTemplate                       pulumi.StringOutput `pulumi:"tagTemplate"`
}

// NewDataCatalogTagTemplateIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDataCatalogTagTemplateIamPolicy(ctx *pulumi.Context,
	name string, args *DataCatalogTagTemplateIamPolicyArgs, opts ...pulumi.ResourceOption) (*DataCatalogTagTemplateIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.TagTemplate == nil {
		return nil, errors.New("invalid value for required argument 'TagTemplate'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataCatalogTagTemplateIamPolicy
	err = ctx.RegisterPackageResource("google:index/dataCatalogTagTemplateIamPolicy:DataCatalogTagTemplateIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataCatalogTagTemplateIamPolicy gets an existing DataCatalogTagTemplateIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataCatalogTagTemplateIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataCatalogTagTemplateIamPolicyState, opts ...pulumi.ResourceOption) (*DataCatalogTagTemplateIamPolicy, error) {
	var resource DataCatalogTagTemplateIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataCatalogTagTemplateIamPolicy:DataCatalogTagTemplateIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataCatalogTagTemplateIamPolicy resources.
type dataCatalogTagTemplateIamPolicyState struct {
	DataCatalogTagTemplateIamPolicyId *string `pulumi:"dataCatalogTagTemplateIamPolicyId"`
	Etag                              *string `pulumi:"etag"`
	PolicyData                        *string `pulumi:"policyData"`
	Project                           *string `pulumi:"project"`
	Region                            *string `pulumi:"region"`
	TagTemplate                       *string `pulumi:"tagTemplate"`
}

type DataCatalogTagTemplateIamPolicyState struct {
	DataCatalogTagTemplateIamPolicyId pulumi.StringPtrInput
	Etag                              pulumi.StringPtrInput
	PolicyData                        pulumi.StringPtrInput
	Project                           pulumi.StringPtrInput
	Region                            pulumi.StringPtrInput
	TagTemplate                       pulumi.StringPtrInput
}

func (DataCatalogTagTemplateIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogTagTemplateIamPolicyState)(nil)).Elem()
}

type dataCatalogTagTemplateIamPolicyArgs struct {
	DataCatalogTagTemplateIamPolicyId *string `pulumi:"dataCatalogTagTemplateIamPolicyId"`
	PolicyData                        string  `pulumi:"policyData"`
	Project                           *string `pulumi:"project"`
	Region                            *string `pulumi:"region"`
	TagTemplate                       string  `pulumi:"tagTemplate"`
}

// The set of arguments for constructing a DataCatalogTagTemplateIamPolicy resource.
type DataCatalogTagTemplateIamPolicyArgs struct {
	DataCatalogTagTemplateIamPolicyId pulumi.StringPtrInput
	PolicyData                        pulumi.StringInput
	Project                           pulumi.StringPtrInput
	Region                            pulumi.StringPtrInput
	TagTemplate                       pulumi.StringInput
}

func (DataCatalogTagTemplateIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogTagTemplateIamPolicyArgs)(nil)).Elem()
}

type DataCatalogTagTemplateIamPolicyInput interface {
	pulumi.Input

	ToDataCatalogTagTemplateIamPolicyOutput() DataCatalogTagTemplateIamPolicyOutput
	ToDataCatalogTagTemplateIamPolicyOutputWithContext(ctx context.Context) DataCatalogTagTemplateIamPolicyOutput
}

func (*DataCatalogTagTemplateIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogTagTemplateIamPolicy)(nil)).Elem()
}

func (i *DataCatalogTagTemplateIamPolicy) ToDataCatalogTagTemplateIamPolicyOutput() DataCatalogTagTemplateIamPolicyOutput {
	return i.ToDataCatalogTagTemplateIamPolicyOutputWithContext(context.Background())
}

func (i *DataCatalogTagTemplateIamPolicy) ToDataCatalogTagTemplateIamPolicyOutputWithContext(ctx context.Context) DataCatalogTagTemplateIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogTagTemplateIamPolicyOutput)
}

type DataCatalogTagTemplateIamPolicyOutput struct{ *pulumi.OutputState }

func (DataCatalogTagTemplateIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogTagTemplateIamPolicy)(nil)).Elem()
}

func (o DataCatalogTagTemplateIamPolicyOutput) ToDataCatalogTagTemplateIamPolicyOutput() DataCatalogTagTemplateIamPolicyOutput {
	return o
}

func (o DataCatalogTagTemplateIamPolicyOutput) ToDataCatalogTagTemplateIamPolicyOutputWithContext(ctx context.Context) DataCatalogTagTemplateIamPolicyOutput {
	return o
}

func (o DataCatalogTagTemplateIamPolicyOutput) DataCatalogTagTemplateIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamPolicy) pulumi.StringOutput {
		return v.DataCatalogTagTemplateIamPolicyId
	}).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamPolicyOutput) TagTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamPolicy) pulumi.StringOutput { return v.TagTemplate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataCatalogTagTemplateIamPolicyInput)(nil)).Elem(), &DataCatalogTagTemplateIamPolicy{})
	pulumi.RegisterOutputType(DataCatalogTagTemplateIamPolicyOutput{})
}
