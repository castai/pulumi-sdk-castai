// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeBackendService struct {
	pulumi.CustomResourceState

	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec pulumi.Float64PtrOutput `pulumi:"affinityCookieTtlSec"`
	// The set of backends that serve this BackendService.
	Backends ComputeBackendServiceBackendArrayOutput `pulumi:"backends"`
	// Cloud CDN configuration for this BackendService.
	CdnPolicy ComputeBackendServiceCdnPolicyPtrOutput `pulumi:"cdnPolicy"`
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
	CircuitBreakers ComputeBackendServiceCircuitBreakersPtrOutput `pulumi:"circuitBreakers"`
	// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header. Possible values:
	// ["AUTOMATIC", "DISABLED"]
	CompressionMode         pulumi.StringPtrOutput `pulumi:"compressionMode"`
	ComputeBackendServiceId pulumi.StringOutput    `pulumi:"computeBackendServiceId"`
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec pulumi.Float64PtrOutput `pulumi:"connectionDrainingTimeoutSec"`
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies if the load_balancing_scheme is set to
	// INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is set to MAGLEV or RING_HASH.
	ConsistentHash ComputeBackendServiceConsistentHashPtrOutput `pulumi:"consistentHash"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// Headers that the HTTP/S load balancer should add to proxied requests.
	CustomRequestHeaders pulumi.StringArrayOutput `pulumi:"customRequestHeaders"`
	// Headers that the HTTP/S load balancer should add to proxied responses.
	CustomResponseHeaders pulumi.StringArrayOutput `pulumi:"customResponseHeaders"`
	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The resource URL for the edge security policy associated with this backend service.
	EdgeSecurityPolicy pulumi.StringPtrOutput `pulumi:"edgeSecurityPolicy"`
	// If true, enable Cloud CDN for this BackendService.
	EnableCdn pulumi.BoolPtrOutput `pulumi:"enableCdn"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// The unique identifier for the resource. This identifier is defined by the server.
	GeneratedId pulumi.Float64Output `pulumi:"generatedId"`
	// The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently
	// at most one health check can be specified. A health check must be specified unless the backend service uses an internet
	// or serverless NEG as a backend. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
	HealthChecks pulumi.StringArrayOutput `pulumi:"healthChecks"`
	// Settings for enabling Cloud Identity Aware Proxy
	Iap ComputeBackendServiceIapPtrOutput `pulumi:"iap"`
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy pulumi.StringPtrOutput `pulumi:"ipAddressSelectionPolicy"`
	// Indicates whether the backend service will be used with internal or external load balancing. A backend service created
	// for one type of load balancing cannot be used with the other. For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "EXTERNAL" Possible values:
	// ["EXTERNAL", "INTERNAL_SELF_MANAGED", "INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrOutput `pulumi:"loadBalancingScheme"`
	// A list of locality load balancing policies to be used in order of preference. Either the policy or the customPolicy
	// field should be set. Overrides any value set in the localityLbPolicy field. localityLbPolicies is only supported when
	// the BackendService is referenced by a URL Map that is referenced by a target gRPC proxy that has the
	// validateForProxyless field set to true.
	LocalityLbPolicies ComputeBackendServiceLocalityLbPolicyArrayOutput `pulumi:"localityLbPolicies"`
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy pulumi.StringPtrOutput `pulumi:"localityLbPolicy"`
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig ComputeBackendServiceLogConfigPtrOutput `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringOutput `pulumi:"name"`
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. Applicable backend service types can be a
	// global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED or EXTERNAL_MANAGED.
	OutlierDetection ComputeBackendServiceOutlierDetectionPtrOutput `pulumi:"outlierDetection"`
	// Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the
	// load balancing scheme is EXTERNAL.
	PortName pulumi.StringOutput `pulumi:"portName"`
	Project  pulumi.StringOutput `pulumi:"project"`
	// The protocol this BackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only valid
	// for beta HTTP/2 load balancer types and may result in errors if used with the GA API. **NOTE**: With protocol
	// “UNSPECIFIED”, the backend service can be used by Layer 4 Internal Load Balancing or Network Load Balancing with
	// TCP/UDP/L3_DEFAULT Forwarding Rule protocol. Possible values: ["HTTP", "HTTPS", "HTTP2", "TCP", "SSL", "GRPC",
	// "UNSPECIFIED"]
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// The security policy associated with this backend service.
	SecurityPolicy pulumi.StringPtrOutput `pulumi:"securityPolicy"`
	// The security settings that apply to this backend service. This field is applicable to either a regional backend service
	// with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED; or a global
	// backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
	SecuritySettings ComputeBackendServiceSecuritySettingsPtrOutput `pulumi:"securitySettings"`
	SelfLink         pulumi.StringOutput                            `pulumi:"selfLink"`
	// URL to networkservices.ServiceLbPolicy resource. Can only be set if load balancing scheme is EXTERNAL, EXTERNAL_MANAGED,
	// INTERNAL_MANAGED or INTERNAL_SELF_MANAGED and the scope is global.
	ServiceLbPolicy pulumi.StringPtrOutput `pulumi:"serviceLbPolicy"`
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity pulumi.StringOutput `pulumi:"sessionAffinity"`
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie ComputeBackendServiceStrongSessionAffinityCookiePtrOutput `pulumi:"strongSessionAffinityCookie"`
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec pulumi.Float64Output                   `pulumi:"timeoutSec"`
	Timeouts   ComputeBackendServiceTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeBackendService registers a new resource with the given unique name, arguments, and options.
func NewComputeBackendService(ctx *pulumi.Context,
	name string, args *ComputeBackendServiceArgs, opts ...pulumi.ResourceOption) (*ComputeBackendService, error) {
	if args == nil {
		args = &ComputeBackendServiceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeBackendService
	err = ctx.RegisterPackageResource("google:index/computeBackendService:ComputeBackendService", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeBackendService gets an existing ComputeBackendService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeBackendService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeBackendServiceState, opts ...pulumi.ResourceOption) (*ComputeBackendService, error) {
	var resource ComputeBackendService
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeBackendService:ComputeBackendService", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeBackendService resources.
type computeBackendServiceState struct {
	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec *float64 `pulumi:"affinityCookieTtlSec"`
	// The set of backends that serve this BackendService.
	Backends []ComputeBackendServiceBackend `pulumi:"backends"`
	// Cloud CDN configuration for this BackendService.
	CdnPolicy *ComputeBackendServiceCdnPolicy `pulumi:"cdnPolicy"`
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
	CircuitBreakers *ComputeBackendServiceCircuitBreakers `pulumi:"circuitBreakers"`
	// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header. Possible values:
	// ["AUTOMATIC", "DISABLED"]
	CompressionMode         *string `pulumi:"compressionMode"`
	ComputeBackendServiceId *string `pulumi:"computeBackendServiceId"`
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec *float64 `pulumi:"connectionDrainingTimeoutSec"`
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies if the load_balancing_scheme is set to
	// INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is set to MAGLEV or RING_HASH.
	ConsistentHash *ComputeBackendServiceConsistentHash `pulumi:"consistentHash"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// Headers that the HTTP/S load balancer should add to proxied requests.
	CustomRequestHeaders []string `pulumi:"customRequestHeaders"`
	// Headers that the HTTP/S load balancer should add to proxied responses.
	CustomResponseHeaders []string `pulumi:"customResponseHeaders"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// The resource URL for the edge security policy associated with this backend service.
	EdgeSecurityPolicy *string `pulumi:"edgeSecurityPolicy"`
	// If true, enable Cloud CDN for this BackendService.
	EnableCdn *bool `pulumi:"enableCdn"`
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint *string `pulumi:"fingerprint"`
	// The unique identifier for the resource. This identifier is defined by the server.
	GeneratedId *float64 `pulumi:"generatedId"`
	// The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently
	// at most one health check can be specified. A health check must be specified unless the backend service uses an internet
	// or serverless NEG as a backend. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
	HealthChecks []string `pulumi:"healthChecks"`
	// Settings for enabling Cloud Identity Aware Proxy
	Iap *ComputeBackendServiceIap `pulumi:"iap"`
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy *string `pulumi:"ipAddressSelectionPolicy"`
	// Indicates whether the backend service will be used with internal or external load balancing. A backend service created
	// for one type of load balancing cannot be used with the other. For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "EXTERNAL" Possible values:
	// ["EXTERNAL", "INTERNAL_SELF_MANAGED", "INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme *string `pulumi:"loadBalancingScheme"`
	// A list of locality load balancing policies to be used in order of preference. Either the policy or the customPolicy
	// field should be set. Overrides any value set in the localityLbPolicy field. localityLbPolicies is only supported when
	// the BackendService is referenced by a URL Map that is referenced by a target gRPC proxy that has the
	// validateForProxyless field set to true.
	LocalityLbPolicies []ComputeBackendServiceLocalityLbPolicy `pulumi:"localityLbPolicies"`
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy *string `pulumi:"localityLbPolicy"`
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig *ComputeBackendServiceLogConfig `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. Applicable backend service types can be a
	// global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED or EXTERNAL_MANAGED.
	OutlierDetection *ComputeBackendServiceOutlierDetection `pulumi:"outlierDetection"`
	// Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the
	// load balancing scheme is EXTERNAL.
	PortName *string `pulumi:"portName"`
	Project  *string `pulumi:"project"`
	// The protocol this BackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only valid
	// for beta HTTP/2 load balancer types and may result in errors if used with the GA API. **NOTE**: With protocol
	// “UNSPECIFIED”, the backend service can be used by Layer 4 Internal Load Balancing or Network Load Balancing with
	// TCP/UDP/L3_DEFAULT Forwarding Rule protocol. Possible values: ["HTTP", "HTTPS", "HTTP2", "TCP", "SSL", "GRPC",
	// "UNSPECIFIED"]
	Protocol *string `pulumi:"protocol"`
	// The security policy associated with this backend service.
	SecurityPolicy *string `pulumi:"securityPolicy"`
	// The security settings that apply to this backend service. This field is applicable to either a regional backend service
	// with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED; or a global
	// backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
	SecuritySettings *ComputeBackendServiceSecuritySettings `pulumi:"securitySettings"`
	SelfLink         *string                                `pulumi:"selfLink"`
	// URL to networkservices.ServiceLbPolicy resource. Can only be set if load balancing scheme is EXTERNAL, EXTERNAL_MANAGED,
	// INTERNAL_MANAGED or INTERNAL_SELF_MANAGED and the scope is global.
	ServiceLbPolicy *string `pulumi:"serviceLbPolicy"`
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie *ComputeBackendServiceStrongSessionAffinityCookie `pulumi:"strongSessionAffinityCookie"`
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec *float64                       `pulumi:"timeoutSec"`
	Timeouts   *ComputeBackendServiceTimeouts `pulumi:"timeouts"`
}

type ComputeBackendServiceState struct {
	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec pulumi.Float64PtrInput
	// The set of backends that serve this BackendService.
	Backends ComputeBackendServiceBackendArrayInput
	// Cloud CDN configuration for this BackendService.
	CdnPolicy ComputeBackendServiceCdnPolicyPtrInput
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
	CircuitBreakers ComputeBackendServiceCircuitBreakersPtrInput
	// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header. Possible values:
	// ["AUTOMATIC", "DISABLED"]
	CompressionMode         pulumi.StringPtrInput
	ComputeBackendServiceId pulumi.StringPtrInput
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec pulumi.Float64PtrInput
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies if the load_balancing_scheme is set to
	// INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is set to MAGLEV or RING_HASH.
	ConsistentHash ComputeBackendServiceConsistentHashPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// Headers that the HTTP/S load balancer should add to proxied requests.
	CustomRequestHeaders pulumi.StringArrayInput
	// Headers that the HTTP/S load balancer should add to proxied responses.
	CustomResponseHeaders pulumi.StringArrayInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// The resource URL for the edge security policy associated with this backend service.
	EdgeSecurityPolicy pulumi.StringPtrInput
	// If true, enable Cloud CDN for this BackendService.
	EnableCdn pulumi.BoolPtrInput
	// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
	Fingerprint pulumi.StringPtrInput
	// The unique identifier for the resource. This identifier is defined by the server.
	GeneratedId pulumi.Float64PtrInput
	// The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently
	// at most one health check can be specified. A health check must be specified unless the backend service uses an internet
	// or serverless NEG as a backend. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
	HealthChecks pulumi.StringArrayInput
	// Settings for enabling Cloud Identity Aware Proxy
	Iap ComputeBackendServiceIapPtrInput
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy pulumi.StringPtrInput
	// Indicates whether the backend service will be used with internal or external load balancing. A backend service created
	// for one type of load balancing cannot be used with the other. For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "EXTERNAL" Possible values:
	// ["EXTERNAL", "INTERNAL_SELF_MANAGED", "INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrInput
	// A list of locality load balancing policies to be used in order of preference. Either the policy or the customPolicy
	// field should be set. Overrides any value set in the localityLbPolicy field. localityLbPolicies is only supported when
	// the BackendService is referenced by a URL Map that is referenced by a target gRPC proxy that has the
	// validateForProxyless field set to true.
	LocalityLbPolicies ComputeBackendServiceLocalityLbPolicyArrayInput
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy pulumi.StringPtrInput
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig ComputeBackendServiceLogConfigPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. Applicable backend service types can be a
	// global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED or EXTERNAL_MANAGED.
	OutlierDetection ComputeBackendServiceOutlierDetectionPtrInput
	// Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the
	// load balancing scheme is EXTERNAL.
	PortName pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// The protocol this BackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only valid
	// for beta HTTP/2 load balancer types and may result in errors if used with the GA API. **NOTE**: With protocol
	// “UNSPECIFIED”, the backend service can be used by Layer 4 Internal Load Balancing or Network Load Balancing with
	// TCP/UDP/L3_DEFAULT Forwarding Rule protocol. Possible values: ["HTTP", "HTTPS", "HTTP2", "TCP", "SSL", "GRPC",
	// "UNSPECIFIED"]
	Protocol pulumi.StringPtrInput
	// The security policy associated with this backend service.
	SecurityPolicy pulumi.StringPtrInput
	// The security settings that apply to this backend service. This field is applicable to either a regional backend service
	// with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED; or a global
	// backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
	SecuritySettings ComputeBackendServiceSecuritySettingsPtrInput
	SelfLink         pulumi.StringPtrInput
	// URL to networkservices.ServiceLbPolicy resource. Can only be set if load balancing scheme is EXTERNAL, EXTERNAL_MANAGED,
	// INTERNAL_MANAGED or INTERNAL_SELF_MANAGED and the scope is global.
	ServiceLbPolicy pulumi.StringPtrInput
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity pulumi.StringPtrInput
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie ComputeBackendServiceStrongSessionAffinityCookiePtrInput
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec pulumi.Float64PtrInput
	Timeouts   ComputeBackendServiceTimeoutsPtrInput
}

func (ComputeBackendServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendServiceState)(nil)).Elem()
}

type computeBackendServiceArgs struct {
	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec *float64 `pulumi:"affinityCookieTtlSec"`
	// The set of backends that serve this BackendService.
	Backends []ComputeBackendServiceBackend `pulumi:"backends"`
	// Cloud CDN configuration for this BackendService.
	CdnPolicy *ComputeBackendServiceCdnPolicy `pulumi:"cdnPolicy"`
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
	CircuitBreakers *ComputeBackendServiceCircuitBreakers `pulumi:"circuitBreakers"`
	// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header. Possible values:
	// ["AUTOMATIC", "DISABLED"]
	CompressionMode         *string `pulumi:"compressionMode"`
	ComputeBackendServiceId *string `pulumi:"computeBackendServiceId"`
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec *float64 `pulumi:"connectionDrainingTimeoutSec"`
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies if the load_balancing_scheme is set to
	// INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is set to MAGLEV or RING_HASH.
	ConsistentHash *ComputeBackendServiceConsistentHash `pulumi:"consistentHash"`
	// Headers that the HTTP/S load balancer should add to proxied requests.
	CustomRequestHeaders []string `pulumi:"customRequestHeaders"`
	// Headers that the HTTP/S load balancer should add to proxied responses.
	CustomResponseHeaders []string `pulumi:"customResponseHeaders"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// The resource URL for the edge security policy associated with this backend service.
	EdgeSecurityPolicy *string `pulumi:"edgeSecurityPolicy"`
	// If true, enable Cloud CDN for this BackendService.
	EnableCdn *bool `pulumi:"enableCdn"`
	// The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently
	// at most one health check can be specified. A health check must be specified unless the backend service uses an internet
	// or serverless NEG as a backend. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
	HealthChecks []string `pulumi:"healthChecks"`
	// Settings for enabling Cloud Identity Aware Proxy
	Iap *ComputeBackendServiceIap `pulumi:"iap"`
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy *string `pulumi:"ipAddressSelectionPolicy"`
	// Indicates whether the backend service will be used with internal or external load balancing. A backend service created
	// for one type of load balancing cannot be used with the other. For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "EXTERNAL" Possible values:
	// ["EXTERNAL", "INTERNAL_SELF_MANAGED", "INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme *string `pulumi:"loadBalancingScheme"`
	// A list of locality load balancing policies to be used in order of preference. Either the policy or the customPolicy
	// field should be set. Overrides any value set in the localityLbPolicy field. localityLbPolicies is only supported when
	// the BackendService is referenced by a URL Map that is referenced by a target gRPC proxy that has the
	// validateForProxyless field set to true.
	LocalityLbPolicies []ComputeBackendServiceLocalityLbPolicy `pulumi:"localityLbPolicies"`
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy *string `pulumi:"localityLbPolicy"`
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig *ComputeBackendServiceLogConfig `pulumi:"logConfig"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name *string `pulumi:"name"`
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. Applicable backend service types can be a
	// global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED or EXTERNAL_MANAGED.
	OutlierDetection *ComputeBackendServiceOutlierDetection `pulumi:"outlierDetection"`
	// Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the
	// load balancing scheme is EXTERNAL.
	PortName *string `pulumi:"portName"`
	Project  *string `pulumi:"project"`
	// The protocol this BackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only valid
	// for beta HTTP/2 load balancer types and may result in errors if used with the GA API. **NOTE**: With protocol
	// “UNSPECIFIED”, the backend service can be used by Layer 4 Internal Load Balancing or Network Load Balancing with
	// TCP/UDP/L3_DEFAULT Forwarding Rule protocol. Possible values: ["HTTP", "HTTPS", "HTTP2", "TCP", "SSL", "GRPC",
	// "UNSPECIFIED"]
	Protocol *string `pulumi:"protocol"`
	// The security policy associated with this backend service.
	SecurityPolicy *string `pulumi:"securityPolicy"`
	// The security settings that apply to this backend service. This field is applicable to either a regional backend service
	// with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED; or a global
	// backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
	SecuritySettings *ComputeBackendServiceSecuritySettings `pulumi:"securitySettings"`
	// URL to networkservices.ServiceLbPolicy resource. Can only be set if load balancing scheme is EXTERNAL, EXTERNAL_MANAGED,
	// INTERNAL_MANAGED or INTERNAL_SELF_MANAGED and the scope is global.
	ServiceLbPolicy *string `pulumi:"serviceLbPolicy"`
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity *string `pulumi:"sessionAffinity"`
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie *ComputeBackendServiceStrongSessionAffinityCookie `pulumi:"strongSessionAffinityCookie"`
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec *float64                       `pulumi:"timeoutSec"`
	Timeouts   *ComputeBackendServiceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeBackendService resource.
type ComputeBackendServiceArgs struct {
	// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
	// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
	// load balancing scheme is INTERNAL, this field is not used.
	AffinityCookieTtlSec pulumi.Float64PtrInput
	// The set of backends that serve this BackendService.
	Backends ComputeBackendServiceBackendArrayInput
	// Cloud CDN configuration for this BackendService.
	CdnPolicy ComputeBackendServiceCdnPolicyPtrInput
	// Settings controlling the volume of connections to a backend service. This field is applicable only when the
	// load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
	CircuitBreakers ComputeBackendServiceCircuitBreakersPtrInput
	// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header. Possible values:
	// ["AUTOMATIC", "DISABLED"]
	CompressionMode         pulumi.StringPtrInput
	ComputeBackendServiceId pulumi.StringPtrInput
	// Time for which instance will be drained (not accept new connections, but still work to finish started).
	ConnectionDrainingTimeoutSec pulumi.Float64PtrInput
	// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
	// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
	// destination host will be lost when one or more hosts are added/removed from the destination service. This field
	// specifies parameters that control consistent hashing. This field only applies if the load_balancing_scheme is set to
	// INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is set to MAGLEV or RING_HASH.
	ConsistentHash ComputeBackendServiceConsistentHashPtrInput
	// Headers that the HTTP/S load balancer should add to proxied requests.
	CustomRequestHeaders pulumi.StringArrayInput
	// Headers that the HTTP/S load balancer should add to proxied responses.
	CustomResponseHeaders pulumi.StringArrayInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// The resource URL for the edge security policy associated with this backend service.
	EdgeSecurityPolicy pulumi.StringPtrInput
	// If true, enable Cloud CDN for this BackendService.
	EnableCdn pulumi.BoolPtrInput
	// The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently
	// at most one health check can be specified. A health check must be specified unless the backend service uses an internet
	// or serverless NEG as a backend. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
	HealthChecks pulumi.StringArrayInput
	// Settings for enabling Cloud Identity Aware Proxy
	Iap ComputeBackendServiceIapPtrInput
	// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
	// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
	IpAddressSelectionPolicy pulumi.StringPtrInput
	// Indicates whether the backend service will be used with internal or external load balancing. A backend service created
	// for one type of load balancing cannot be used with the other. For more information, refer to [Choosing a load
	// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "EXTERNAL" Possible values:
	// ["EXTERNAL", "INTERNAL_SELF_MANAGED", "INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
	LoadBalancingScheme pulumi.StringPtrInput
	// A list of locality load balancing policies to be used in order of preference. Either the policy or the customPolicy
	// field should be set. Overrides any value set in the localityLbPolicy field. localityLbPolicies is only supported when
	// the BackendService is referenced by a URL Map that is referenced by a target gRPC proxy that has the
	// validateForProxyless field set to true.
	LocalityLbPolicies ComputeBackendServiceLocalityLbPolicyArrayInput
	// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
	// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
	// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
	// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
	// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
	// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
	// opened to the same address as the destination address of the incoming connection before the connection was redirected to
	// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
	// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
	// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
	// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
	// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
	// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
	// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
	// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
	// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
	// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
	// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
	// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
	// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
	// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
	// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
	// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
	LocalityLbPolicy pulumi.StringPtrInput
	// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
	// enabled, logs will be exported to Stackdriver.
	LogConfig ComputeBackendServiceLogConfigPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name pulumi.StringPtrInput
	// Settings controlling eviction of unhealthy hosts from the load balancing pool. Applicable backend service types can be a
	// global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED or EXTERNAL_MANAGED.
	OutlierDetection ComputeBackendServiceOutlierDetectionPtrInput
	// Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the
	// load balancing scheme is EXTERNAL.
	PortName pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// The protocol this BackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only valid
	// for beta HTTP/2 load balancer types and may result in errors if used with the GA API. **NOTE**: With protocol
	// “UNSPECIFIED”, the backend service can be used by Layer 4 Internal Load Balancing or Network Load Balancing with
	// TCP/UDP/L3_DEFAULT Forwarding Rule protocol. Possible values: ["HTTP", "HTTPS", "HTTP2", "TCP", "SSL", "GRPC",
	// "UNSPECIFIED"]
	Protocol pulumi.StringPtrInput
	// The security policy associated with this backend service.
	SecurityPolicy pulumi.StringPtrInput
	// The security settings that apply to this backend service. This field is applicable to either a regional backend service
	// with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED; or a global
	// backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
	SecuritySettings ComputeBackendServiceSecuritySettingsPtrInput
	// URL to networkservices.ServiceLbPolicy resource. Can only be set if load balancing scheme is EXTERNAL, EXTERNAL_MANAGED,
	// INTERNAL_MANAGED or INTERNAL_SELF_MANAGED and the scope is global.
	ServiceLbPolicy pulumi.StringPtrInput
	// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
	// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
	// "HTTP_COOKIE", "STRONG_COOKIE_AFFINITY"]
	SessionAffinity pulumi.StringPtrInput
	// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
	// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
	StrongSessionAffinityCookie ComputeBackendServiceStrongSessionAffinityCookiePtrInput
	// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
	// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
	// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
	TimeoutSec pulumi.Float64PtrInput
	Timeouts   ComputeBackendServiceTimeoutsPtrInput
}

func (ComputeBackendServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendServiceArgs)(nil)).Elem()
}

type ComputeBackendServiceInput interface {
	pulumi.Input

	ToComputeBackendServiceOutput() ComputeBackendServiceOutput
	ToComputeBackendServiceOutputWithContext(ctx context.Context) ComputeBackendServiceOutput
}

func (*ComputeBackendService) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendService)(nil)).Elem()
}

func (i *ComputeBackendService) ToComputeBackendServiceOutput() ComputeBackendServiceOutput {
	return i.ToComputeBackendServiceOutputWithContext(context.Background())
}

func (i *ComputeBackendService) ToComputeBackendServiceOutputWithContext(ctx context.Context) ComputeBackendServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBackendServiceOutput)
}

type ComputeBackendServiceOutput struct{ *pulumi.OutputState }

func (ComputeBackendServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendService)(nil)).Elem()
}

func (o ComputeBackendServiceOutput) ToComputeBackendServiceOutput() ComputeBackendServiceOutput {
	return o
}

func (o ComputeBackendServiceOutput) ToComputeBackendServiceOutputWithContext(ctx context.Context) ComputeBackendServiceOutput {
	return o
}

// Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and
// lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the
// load balancing scheme is INTERNAL, this field is not used.
func (o ComputeBackendServiceOutput) AffinityCookieTtlSec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.Float64PtrOutput { return v.AffinityCookieTtlSec }).(pulumi.Float64PtrOutput)
}

// The set of backends that serve this BackendService.
func (o ComputeBackendServiceOutput) Backends() ComputeBackendServiceBackendArrayOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceBackendArrayOutput { return v.Backends }).(ComputeBackendServiceBackendArrayOutput)
}

// Cloud CDN configuration for this BackendService.
func (o ComputeBackendServiceOutput) CdnPolicy() ComputeBackendServiceCdnPolicyPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceCdnPolicyPtrOutput { return v.CdnPolicy }).(ComputeBackendServiceCdnPolicyPtrOutput)
}

// Settings controlling the volume of connections to a backend service. This field is applicable only when the
// load_balancing_scheme is set to INTERNAL_SELF_MANAGED.
func (o ComputeBackendServiceOutput) CircuitBreakers() ComputeBackendServiceCircuitBreakersPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceCircuitBreakersPtrOutput { return v.CircuitBreakers }).(ComputeBackendServiceCircuitBreakersPtrOutput)
}

// Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header. Possible values:
// ["AUTOMATIC", "DISABLED"]
func (o ComputeBackendServiceOutput) CompressionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringPtrOutput { return v.CompressionMode }).(pulumi.StringPtrOutput)
}

func (o ComputeBackendServiceOutput) ComputeBackendServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringOutput { return v.ComputeBackendServiceId }).(pulumi.StringOutput)
}

// Time for which instance will be drained (not accept new connections, but still work to finish started).
func (o ComputeBackendServiceOutput) ConnectionDrainingTimeoutSec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.Float64PtrOutput { return v.ConnectionDrainingTimeoutSec }).(pulumi.Float64PtrOutput)
}

// Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or
// other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular
// destination host will be lost when one or more hosts are added/removed from the destination service. This field
// specifies parameters that control consistent hashing. This field only applies if the load_balancing_scheme is set to
// INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is set to MAGLEV or RING_HASH.
func (o ComputeBackendServiceOutput) ConsistentHash() ComputeBackendServiceConsistentHashPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceConsistentHashPtrOutput { return v.ConsistentHash }).(ComputeBackendServiceConsistentHashPtrOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeBackendServiceOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// Headers that the HTTP/S load balancer should add to proxied requests.
func (o ComputeBackendServiceOutput) CustomRequestHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringArrayOutput { return v.CustomRequestHeaders }).(pulumi.StringArrayOutput)
}

// Headers that the HTTP/S load balancer should add to proxied responses.
func (o ComputeBackendServiceOutput) CustomResponseHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringArrayOutput { return v.CustomResponseHeaders }).(pulumi.StringArrayOutput)
}

// An optional description of this resource.
func (o ComputeBackendServiceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The resource URL for the edge security policy associated with this backend service.
func (o ComputeBackendServiceOutput) EdgeSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringPtrOutput { return v.EdgeSecurityPolicy }).(pulumi.StringPtrOutput)
}

// If true, enable Cloud CDN for this BackendService.
func (o ComputeBackendServiceOutput) EnableCdn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.BoolPtrOutput { return v.EnableCdn }).(pulumi.BoolPtrOutput)
}

// Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking.
func (o ComputeBackendServiceOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// The unique identifier for the resource. This identifier is defined by the server.
func (o ComputeBackendServiceOutput) GeneratedId() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.Float64Output { return v.GeneratedId }).(pulumi.Float64Output)
}

// The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently
// at most one health check can be specified. A health check must be specified unless the backend service uses an internet
// or serverless NEG as a backend. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
func (o ComputeBackendServiceOutput) HealthChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringArrayOutput { return v.HealthChecks }).(pulumi.StringArrayOutput)
}

// Settings for enabling Cloud Identity Aware Proxy
func (o ComputeBackendServiceOutput) Iap() ComputeBackendServiceIapPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceIapPtrOutput { return v.Iap }).(ComputeBackendServiceIapPtrOutput)
}

// Specifies preference of traffic to the backend (from the proxy and from the client for proxyless gRPC). Possible values:
// ["IPV4_ONLY", "PREFER_IPV6", "IPV6_ONLY"]
func (o ComputeBackendServiceOutput) IpAddressSelectionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringPtrOutput { return v.IpAddressSelectionPolicy }).(pulumi.StringPtrOutput)
}

// Indicates whether the backend service will be used with internal or external load balancing. A backend service created
// for one type of load balancing cannot be used with the other. For more information, refer to [Choosing a load
// balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "EXTERNAL" Possible values:
// ["EXTERNAL", "INTERNAL_SELF_MANAGED", "INTERNAL_MANAGED", "EXTERNAL_MANAGED"]
func (o ComputeBackendServiceOutput) LoadBalancingScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringPtrOutput { return v.LoadBalancingScheme }).(pulumi.StringPtrOutput)
}

// A list of locality load balancing policies to be used in order of preference. Either the policy or the customPolicy
// field should be set. Overrides any value set in the localityLbPolicy field. localityLbPolicies is only supported when
// the BackendService is referenced by a URL Map that is referenced by a target gRPC proxy that has the
// validateForProxyless field set to true.
func (o ComputeBackendServiceOutput) LocalityLbPolicies() ComputeBackendServiceLocalityLbPolicyArrayOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceLocalityLbPolicyArrayOutput {
		return v.LocalityLbPolicies
	}).(ComputeBackendServiceLocalityLbPolicyArrayOutput)
}

// The load balancing algorithm used within the scope of the locality. The possible values are: * 'ROUND_ROBIN': This is a
// simple policy in which each healthy backend is selected in round robin order. * 'LEAST_REQUEST': An O(1) algorithm which
// selects two random healthy hosts and picks the host which has fewer active requests. * 'RING_HASH': The ring/modulo hash
// load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a
// host from a set of N hosts only affects 1/N of the requests. * 'RANDOM': The load balancer selects a random healthy
// host. * 'ORIGINAL_DESTINATION': Backend host is selected based on the client connection metadata, i.e., connections are
// opened to the same address as the destination address of the incoming connection before the connection was redirected to
// the load balancer. * 'MAGLEV': used as a drop in replacement for the ring hash load balancer. Maglev is not as stable as
// ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to
// https://ai.google/research/pubs/pub44824 * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
// reported weights. Only applicable to loadBalancingScheme EXTERNAL. If set, the Backend Service must configure a non
// legacy HTTP-based Health Check, and health check replies are expected to contain non-standard HTTP response header field
// X-Load-Balancing-Endpoint-Weight to specify the per-instance weights. If set, Load Balancing is weight based on the
// per-instance weights reported in the last processed health check replies, as long as every instance either reported a
// valid weight or had UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains equal-weight. locality_lb_policy is applicable
// to either: * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and loadBalancingScheme
// set to INTERNAL_MANAGED. * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. * A
// regional backend service with loadBalancingScheme set to EXTERNAL (External Network Load Balancing). Only MAGLEV and
// WEIGHTED_MAGLEV values are possible for External Network Load Balancing. The default is MAGLEV. If session_affinity is
// not NONE, and locality_lb_policy is not set to MAGLEV, WEIGHTED_MAGLEV, or RING_HASH, session affinity settings will not
// take effect. Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced by a URL map that is
// bound to target gRPC proxy that has validate_for_proxyless field set to true. Possible values: ["ROUND_ROBIN",
// "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"]
func (o ComputeBackendServiceOutput) LocalityLbPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringPtrOutput { return v.LocalityLbPolicy }).(pulumi.StringPtrOutput)
}

// This field denotes the logging options for the load balancer traffic served by this backend service. If logging is
// enabled, logs will be exported to Stackdriver.
func (o ComputeBackendServiceOutput) LogConfig() ComputeBackendServiceLogConfigPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceLogConfigPtrOutput { return v.LogConfig }).(ComputeBackendServiceLogConfigPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeBackendServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Settings controlling eviction of unhealthy hosts from the load balancing pool. Applicable backend service types can be a
// global backend service with the loadBalancingScheme set to INTERNAL_SELF_MANAGED or EXTERNAL_MANAGED.
func (o ComputeBackendServiceOutput) OutlierDetection() ComputeBackendServiceOutlierDetectionPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceOutlierDetectionPtrOutput {
		return v.OutlierDetection
	}).(ComputeBackendServiceOutlierDetectionPtrOutput)
}

// Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the
// load balancing scheme is EXTERNAL.
func (o ComputeBackendServiceOutput) PortName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringOutput { return v.PortName }).(pulumi.StringOutput)
}

func (o ComputeBackendServiceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The protocol this BackendService uses to communicate with backends. The default is HTTP. **NOTE**: HTTP2 is only valid
// for beta HTTP/2 load balancer types and may result in errors if used with the GA API. **NOTE**: With protocol
// “UNSPECIFIED”, the backend service can be used by Layer 4 Internal Load Balancing or Network Load Balancing with
// TCP/UDP/L3_DEFAULT Forwarding Rule protocol. Possible values: ["HTTP", "HTTPS", "HTTP2", "TCP", "SSL", "GRPC",
// "UNSPECIFIED"]
func (o ComputeBackendServiceOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// The security policy associated with this backend service.
func (o ComputeBackendServiceOutput) SecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringPtrOutput { return v.SecurityPolicy }).(pulumi.StringPtrOutput)
}

// The security settings that apply to this backend service. This field is applicable to either a regional backend service
// with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED; or a global
// backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
func (o ComputeBackendServiceOutput) SecuritySettings() ComputeBackendServiceSecuritySettingsPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceSecuritySettingsPtrOutput {
		return v.SecuritySettings
	}).(ComputeBackendServiceSecuritySettingsPtrOutput)
}

func (o ComputeBackendServiceOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// URL to networkservices.ServiceLbPolicy resource. Can only be set if load balancing scheme is EXTERNAL, EXTERNAL_MANAGED,
// INTERNAL_MANAGED or INTERNAL_SELF_MANAGED and the scope is global.
func (o ComputeBackendServiceOutput) ServiceLbPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringPtrOutput { return v.ServiceLbPolicy }).(pulumi.StringPtrOutput)
}

// Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.
// Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD",
// "HTTP_COOKIE", "STRONG_COOKIE_AFFINITY"]
func (o ComputeBackendServiceOutput) SessionAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.StringOutput { return v.SessionAffinity }).(pulumi.StringOutput)
}

// Describes the HTTP cookie used for stateful session affinity. This field is applicable and required if the
// sessionAffinity is set to STRONG_COOKIE_AFFINITY.
func (o ComputeBackendServiceOutput) StrongSessionAffinityCookie() ComputeBackendServiceStrongSessionAffinityCookiePtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceStrongSessionAffinityCookiePtrOutput {
		return v.StrongSessionAffinityCookie
	}).(ComputeBackendServiceStrongSessionAffinityCookiePtrOutput)
}

// The backend service timeout has a different meaning depending on the type of load balancer. For more information see,
// [Backend service settings](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices). The default is 30
// seconds. The full range of timeout values allowed goes from 1 through 2,147,483,647 seconds.
func (o ComputeBackendServiceOutput) TimeoutSec() pulumi.Float64Output {
	return o.ApplyT(func(v *ComputeBackendService) pulumi.Float64Output { return v.TimeoutSec }).(pulumi.Float64Output)
}

func (o ComputeBackendServiceOutput) Timeouts() ComputeBackendServiceTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeBackendService) ComputeBackendServiceTimeoutsPtrOutput { return v.Timeouts }).(ComputeBackendServiceTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeBackendServiceInput)(nil)).Elem(), &ComputeBackendService{})
	pulumi.RegisterOutputType(ComputeBackendServiceOutput{})
}
