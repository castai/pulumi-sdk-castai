// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeHubMembershipIamPolicy struct {
	pulumi.CustomResourceState

	Etag                        pulumi.StringOutput `pulumi:"etag"`
	GkeHubMembershipIamPolicyId pulumi.StringOutput `pulumi:"gkeHubMembershipIamPolicyId"`
	Location                    pulumi.StringOutput `pulumi:"location"`
	MembershipId                pulumi.StringOutput `pulumi:"membershipId"`
	PolicyData                  pulumi.StringOutput `pulumi:"policyData"`
	Project                     pulumi.StringOutput `pulumi:"project"`
}

// NewGkeHubMembershipIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewGkeHubMembershipIamPolicy(ctx *pulumi.Context,
	name string, args *GkeHubMembershipIamPolicyArgs, opts ...pulumi.ResourceOption) (*GkeHubMembershipIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MembershipId == nil {
		return nil, errors.New("invalid value for required argument 'MembershipId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeHubMembershipIamPolicy
	err = ctx.RegisterPackageResource("google:index/gkeHubMembershipIamPolicy:GkeHubMembershipIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeHubMembershipIamPolicy gets an existing GkeHubMembershipIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeHubMembershipIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeHubMembershipIamPolicyState, opts ...pulumi.ResourceOption) (*GkeHubMembershipIamPolicy, error) {
	var resource GkeHubMembershipIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/gkeHubMembershipIamPolicy:GkeHubMembershipIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeHubMembershipIamPolicy resources.
type gkeHubMembershipIamPolicyState struct {
	Etag                        *string `pulumi:"etag"`
	GkeHubMembershipIamPolicyId *string `pulumi:"gkeHubMembershipIamPolicyId"`
	Location                    *string `pulumi:"location"`
	MembershipId                *string `pulumi:"membershipId"`
	PolicyData                  *string `pulumi:"policyData"`
	Project                     *string `pulumi:"project"`
}

type GkeHubMembershipIamPolicyState struct {
	Etag                        pulumi.StringPtrInput
	GkeHubMembershipIamPolicyId pulumi.StringPtrInput
	Location                    pulumi.StringPtrInput
	MembershipId                pulumi.StringPtrInput
	PolicyData                  pulumi.StringPtrInput
	Project                     pulumi.StringPtrInput
}

func (GkeHubMembershipIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubMembershipIamPolicyState)(nil)).Elem()
}

type gkeHubMembershipIamPolicyArgs struct {
	GkeHubMembershipIamPolicyId *string `pulumi:"gkeHubMembershipIamPolicyId"`
	Location                    *string `pulumi:"location"`
	MembershipId                string  `pulumi:"membershipId"`
	PolicyData                  string  `pulumi:"policyData"`
	Project                     *string `pulumi:"project"`
}

// The set of arguments for constructing a GkeHubMembershipIamPolicy resource.
type GkeHubMembershipIamPolicyArgs struct {
	GkeHubMembershipIamPolicyId pulumi.StringPtrInput
	Location                    pulumi.StringPtrInput
	MembershipId                pulumi.StringInput
	PolicyData                  pulumi.StringInput
	Project                     pulumi.StringPtrInput
}

func (GkeHubMembershipIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubMembershipIamPolicyArgs)(nil)).Elem()
}

type GkeHubMembershipIamPolicyInput interface {
	pulumi.Input

	ToGkeHubMembershipIamPolicyOutput() GkeHubMembershipIamPolicyOutput
	ToGkeHubMembershipIamPolicyOutputWithContext(ctx context.Context) GkeHubMembershipIamPolicyOutput
}

func (*GkeHubMembershipIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubMembershipIamPolicy)(nil)).Elem()
}

func (i *GkeHubMembershipIamPolicy) ToGkeHubMembershipIamPolicyOutput() GkeHubMembershipIamPolicyOutput {
	return i.ToGkeHubMembershipIamPolicyOutputWithContext(context.Background())
}

func (i *GkeHubMembershipIamPolicy) ToGkeHubMembershipIamPolicyOutputWithContext(ctx context.Context) GkeHubMembershipIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeHubMembershipIamPolicyOutput)
}

type GkeHubMembershipIamPolicyOutput struct{ *pulumi.OutputState }

func (GkeHubMembershipIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubMembershipIamPolicy)(nil)).Elem()
}

func (o GkeHubMembershipIamPolicyOutput) ToGkeHubMembershipIamPolicyOutput() GkeHubMembershipIamPolicyOutput {
	return o
}

func (o GkeHubMembershipIamPolicyOutput) ToGkeHubMembershipIamPolicyOutputWithContext(ctx context.Context) GkeHubMembershipIamPolicyOutput {
	return o
}

func (o GkeHubMembershipIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamPolicyOutput) GkeHubMembershipIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamPolicy) pulumi.StringOutput { return v.GkeHubMembershipIamPolicyId }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamPolicyOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamPolicy) pulumi.StringOutput { return v.MembershipId }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o GkeHubMembershipIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubMembershipIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeHubMembershipIamPolicyInput)(nil)).Elem(), &GkeHubMembershipIamPolicy{})
	pulumi.RegisterOutputType(GkeHubMembershipIamPolicyOutput{})
}
