// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionNetworkFirewallPolicyAssociation struct {
	pulumi.CustomResourceState

	// The target that the firewall policy is attached to.
	AttachmentTarget                                pulumi.StringOutput `pulumi:"attachmentTarget"`
	ComputeRegionNetworkFirewallPolicyAssociationId pulumi.StringOutput `pulumi:"computeRegionNetworkFirewallPolicyAssociationId"`
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringOutput `pulumi:"firewallPolicy"`
	// The name for an association.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The location of this resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The short name of the firewall policy of the association.
	ShortName pulumi.StringOutput                                            `pulumi:"shortName"`
	Timeouts  ComputeRegionNetworkFirewallPolicyAssociationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeRegionNetworkFirewallPolicyAssociation registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionNetworkFirewallPolicyAssociation(ctx *pulumi.Context,
	name string, args *ComputeRegionNetworkFirewallPolicyAssociationArgs, opts ...pulumi.ResourceOption) (*ComputeRegionNetworkFirewallPolicyAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AttachmentTarget == nil {
		return nil, errors.New("invalid value for required argument 'AttachmentTarget'")
	}
	if args.FirewallPolicy == nil {
		return nil, errors.New("invalid value for required argument 'FirewallPolicy'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionNetworkFirewallPolicyAssociation
	err = ctx.RegisterPackageResource("google:index/computeRegionNetworkFirewallPolicyAssociation:ComputeRegionNetworkFirewallPolicyAssociation", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionNetworkFirewallPolicyAssociation gets an existing ComputeRegionNetworkFirewallPolicyAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionNetworkFirewallPolicyAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionNetworkFirewallPolicyAssociationState, opts ...pulumi.ResourceOption) (*ComputeRegionNetworkFirewallPolicyAssociation, error) {
	var resource ComputeRegionNetworkFirewallPolicyAssociation
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeRegionNetworkFirewallPolicyAssociation:ComputeRegionNetworkFirewallPolicyAssociation", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionNetworkFirewallPolicyAssociation resources.
type computeRegionNetworkFirewallPolicyAssociationState struct {
	// The target that the firewall policy is attached to.
	AttachmentTarget                                *string `pulumi:"attachmentTarget"`
	ComputeRegionNetworkFirewallPolicyAssociationId *string `pulumi:"computeRegionNetworkFirewallPolicyAssociationId"`
	// The firewall policy of the resource.
	FirewallPolicy *string `pulumi:"firewallPolicy"`
	// The name for an association.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The location of this resource.
	Region *string `pulumi:"region"`
	// The short name of the firewall policy of the association.
	ShortName *string                                                `pulumi:"shortName"`
	Timeouts  *ComputeRegionNetworkFirewallPolicyAssociationTimeouts `pulumi:"timeouts"`
}

type ComputeRegionNetworkFirewallPolicyAssociationState struct {
	// The target that the firewall policy is attached to.
	AttachmentTarget                                pulumi.StringPtrInput
	ComputeRegionNetworkFirewallPolicyAssociationId pulumi.StringPtrInput
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringPtrInput
	// The name for an association.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The location of this resource.
	Region pulumi.StringPtrInput
	// The short name of the firewall policy of the association.
	ShortName pulumi.StringPtrInput
	Timeouts  ComputeRegionNetworkFirewallPolicyAssociationTimeoutsPtrInput
}

func (ComputeRegionNetworkFirewallPolicyAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionNetworkFirewallPolicyAssociationState)(nil)).Elem()
}

type computeRegionNetworkFirewallPolicyAssociationArgs struct {
	// The target that the firewall policy is attached to.
	AttachmentTarget                                string  `pulumi:"attachmentTarget"`
	ComputeRegionNetworkFirewallPolicyAssociationId *string `pulumi:"computeRegionNetworkFirewallPolicyAssociationId"`
	// The firewall policy of the resource.
	FirewallPolicy string `pulumi:"firewallPolicy"`
	// The name for an association.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The location of this resource.
	Region   *string                                                `pulumi:"region"`
	Timeouts *ComputeRegionNetworkFirewallPolicyAssociationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeRegionNetworkFirewallPolicyAssociation resource.
type ComputeRegionNetworkFirewallPolicyAssociationArgs struct {
	// The target that the firewall policy is attached to.
	AttachmentTarget                                pulumi.StringInput
	ComputeRegionNetworkFirewallPolicyAssociationId pulumi.StringPtrInput
	// The firewall policy of the resource.
	FirewallPolicy pulumi.StringInput
	// The name for an association.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The location of this resource.
	Region   pulumi.StringPtrInput
	Timeouts ComputeRegionNetworkFirewallPolicyAssociationTimeoutsPtrInput
}

func (ComputeRegionNetworkFirewallPolicyAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionNetworkFirewallPolicyAssociationArgs)(nil)).Elem()
}

type ComputeRegionNetworkFirewallPolicyAssociationInput interface {
	pulumi.Input

	ToComputeRegionNetworkFirewallPolicyAssociationOutput() ComputeRegionNetworkFirewallPolicyAssociationOutput
	ToComputeRegionNetworkFirewallPolicyAssociationOutputWithContext(ctx context.Context) ComputeRegionNetworkFirewallPolicyAssociationOutput
}

func (*ComputeRegionNetworkFirewallPolicyAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionNetworkFirewallPolicyAssociation)(nil)).Elem()
}

func (i *ComputeRegionNetworkFirewallPolicyAssociation) ToComputeRegionNetworkFirewallPolicyAssociationOutput() ComputeRegionNetworkFirewallPolicyAssociationOutput {
	return i.ToComputeRegionNetworkFirewallPolicyAssociationOutputWithContext(context.Background())
}

func (i *ComputeRegionNetworkFirewallPolicyAssociation) ToComputeRegionNetworkFirewallPolicyAssociationOutputWithContext(ctx context.Context) ComputeRegionNetworkFirewallPolicyAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionNetworkFirewallPolicyAssociationOutput)
}

type ComputeRegionNetworkFirewallPolicyAssociationOutput struct{ *pulumi.OutputState }

func (ComputeRegionNetworkFirewallPolicyAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionNetworkFirewallPolicyAssociation)(nil)).Elem()
}

func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) ToComputeRegionNetworkFirewallPolicyAssociationOutput() ComputeRegionNetworkFirewallPolicyAssociationOutput {
	return o
}

func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) ToComputeRegionNetworkFirewallPolicyAssociationOutputWithContext(ctx context.Context) ComputeRegionNetworkFirewallPolicyAssociationOutput {
	return o
}

// The target that the firewall policy is attached to.
func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) AttachmentTarget() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkFirewallPolicyAssociation) pulumi.StringOutput { return v.AttachmentTarget }).(pulumi.StringOutput)
}

func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) ComputeRegionNetworkFirewallPolicyAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkFirewallPolicyAssociation) pulumi.StringOutput {
		return v.ComputeRegionNetworkFirewallPolicyAssociationId
	}).(pulumi.StringOutput)
}

// The firewall policy of the resource.
func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) FirewallPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkFirewallPolicyAssociation) pulumi.StringOutput { return v.FirewallPolicy }).(pulumi.StringOutput)
}

// The name for an association.
func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkFirewallPolicyAssociation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkFirewallPolicyAssociation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The location of this resource.
func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkFirewallPolicyAssociation) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The short name of the firewall policy of the association.
func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) ShortName() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkFirewallPolicyAssociation) pulumi.StringOutput { return v.ShortName }).(pulumi.StringOutput)
}

func (o ComputeRegionNetworkFirewallPolicyAssociationOutput) Timeouts() ComputeRegionNetworkFirewallPolicyAssociationTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeRegionNetworkFirewallPolicyAssociation) ComputeRegionNetworkFirewallPolicyAssociationTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputeRegionNetworkFirewallPolicyAssociationTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionNetworkFirewallPolicyAssociationInput)(nil)).Elem(), &ComputeRegionNetworkFirewallPolicyAssociation{})
	pulumi.RegisterOutputType(ComputeRegionNetworkFirewallPolicyAssociationOutput{})
}
