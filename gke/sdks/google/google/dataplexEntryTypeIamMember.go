// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexEntryTypeIamMember struct {
	pulumi.CustomResourceState

	Condition                    DataplexEntryTypeIamMemberConditionPtrOutput `pulumi:"condition"`
	DataplexEntryTypeIamMemberId pulumi.StringOutput                          `pulumi:"dataplexEntryTypeIamMemberId"`
	EntryTypeId                  pulumi.StringOutput                          `pulumi:"entryTypeId"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	Location                     pulumi.StringOutput                          `pulumi:"location"`
	Member                       pulumi.StringOutput                          `pulumi:"member"`
	Project                      pulumi.StringOutput                          `pulumi:"project"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
}

// NewDataplexEntryTypeIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataplexEntryTypeIamMember(ctx *pulumi.Context,
	name string, args *DataplexEntryTypeIamMemberArgs, opts ...pulumi.ResourceOption) (*DataplexEntryTypeIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntryTypeId == nil {
		return nil, errors.New("invalid value for required argument 'EntryTypeId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexEntryTypeIamMember
	err = ctx.RegisterPackageResource("google:index/dataplexEntryTypeIamMember:DataplexEntryTypeIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexEntryTypeIamMember gets an existing DataplexEntryTypeIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexEntryTypeIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexEntryTypeIamMemberState, opts ...pulumi.ResourceOption) (*DataplexEntryTypeIamMember, error) {
	var resource DataplexEntryTypeIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataplexEntryTypeIamMember:DataplexEntryTypeIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexEntryTypeIamMember resources.
type dataplexEntryTypeIamMemberState struct {
	Condition                    *DataplexEntryTypeIamMemberCondition `pulumi:"condition"`
	DataplexEntryTypeIamMemberId *string                              `pulumi:"dataplexEntryTypeIamMemberId"`
	EntryTypeId                  *string                              `pulumi:"entryTypeId"`
	Etag                         *string                              `pulumi:"etag"`
	Location                     *string                              `pulumi:"location"`
	Member                       *string                              `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Role                         *string                              `pulumi:"role"`
}

type DataplexEntryTypeIamMemberState struct {
	Condition                    DataplexEntryTypeIamMemberConditionPtrInput
	DataplexEntryTypeIamMemberId pulumi.StringPtrInput
	EntryTypeId                  pulumi.StringPtrInput
	Etag                         pulumi.StringPtrInput
	Location                     pulumi.StringPtrInput
	Member                       pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringPtrInput
}

func (DataplexEntryTypeIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexEntryTypeIamMemberState)(nil)).Elem()
}

type dataplexEntryTypeIamMemberArgs struct {
	Condition                    *DataplexEntryTypeIamMemberCondition `pulumi:"condition"`
	DataplexEntryTypeIamMemberId *string                              `pulumi:"dataplexEntryTypeIamMemberId"`
	EntryTypeId                  string                               `pulumi:"entryTypeId"`
	Location                     *string                              `pulumi:"location"`
	Member                       string                               `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Role                         string                               `pulumi:"role"`
}

// The set of arguments for constructing a DataplexEntryTypeIamMember resource.
type DataplexEntryTypeIamMemberArgs struct {
	Condition                    DataplexEntryTypeIamMemberConditionPtrInput
	DataplexEntryTypeIamMemberId pulumi.StringPtrInput
	EntryTypeId                  pulumi.StringInput
	Location                     pulumi.StringPtrInput
	Member                       pulumi.StringInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringInput
}

func (DataplexEntryTypeIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexEntryTypeIamMemberArgs)(nil)).Elem()
}

type DataplexEntryTypeIamMemberInput interface {
	pulumi.Input

	ToDataplexEntryTypeIamMemberOutput() DataplexEntryTypeIamMemberOutput
	ToDataplexEntryTypeIamMemberOutputWithContext(ctx context.Context) DataplexEntryTypeIamMemberOutput
}

func (*DataplexEntryTypeIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexEntryTypeIamMember)(nil)).Elem()
}

func (i *DataplexEntryTypeIamMember) ToDataplexEntryTypeIamMemberOutput() DataplexEntryTypeIamMemberOutput {
	return i.ToDataplexEntryTypeIamMemberOutputWithContext(context.Background())
}

func (i *DataplexEntryTypeIamMember) ToDataplexEntryTypeIamMemberOutputWithContext(ctx context.Context) DataplexEntryTypeIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexEntryTypeIamMemberOutput)
}

type DataplexEntryTypeIamMemberOutput struct{ *pulumi.OutputState }

func (DataplexEntryTypeIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexEntryTypeIamMember)(nil)).Elem()
}

func (o DataplexEntryTypeIamMemberOutput) ToDataplexEntryTypeIamMemberOutput() DataplexEntryTypeIamMemberOutput {
	return o
}

func (o DataplexEntryTypeIamMemberOutput) ToDataplexEntryTypeIamMemberOutputWithContext(ctx context.Context) DataplexEntryTypeIamMemberOutput {
	return o
}

func (o DataplexEntryTypeIamMemberOutput) Condition() DataplexEntryTypeIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataplexEntryTypeIamMember) DataplexEntryTypeIamMemberConditionPtrOutput { return v.Condition }).(DataplexEntryTypeIamMemberConditionPtrOutput)
}

func (o DataplexEntryTypeIamMemberOutput) DataplexEntryTypeIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryTypeIamMember) pulumi.StringOutput { return v.DataplexEntryTypeIamMemberId }).(pulumi.StringOutput)
}

func (o DataplexEntryTypeIamMemberOutput) EntryTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryTypeIamMember) pulumi.StringOutput { return v.EntryTypeId }).(pulumi.StringOutput)
}

func (o DataplexEntryTypeIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryTypeIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexEntryTypeIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryTypeIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexEntryTypeIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryTypeIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataplexEntryTypeIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryTypeIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataplexEntryTypeIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryTypeIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexEntryTypeIamMemberInput)(nil)).Elem(), &DataplexEntryTypeIamMember{})
	pulumi.RegisterOutputType(DataplexEntryTypeIamMemberOutput{})
}
