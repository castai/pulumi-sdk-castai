// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IntegrationsClient struct {
	pulumi.CustomResourceState

	// Cloud KMS config for AuthModule to encrypt/decrypt credentials.
	CloudKmsConfig IntegrationsClientCloudKmsConfigPtrOutput `pulumi:"cloudKmsConfig"`
	// Indicates if sample integrations should be created along with provisioning.
	CreateSampleIntegrations pulumi.BoolPtrOutput `pulumi:"createSampleIntegrations"`
	IntegrationsClientId     pulumi.StringOutput  `pulumi:"integrationsClientId"`
	// Location in which client needs to be provisioned.
	Location pulumi.StringOutput `pulumi:"location"`
	Project  pulumi.StringOutput `pulumi:"project"`
	// User input run-as service account, if empty, will bring up a new default service account.
	RunAsServiceAccount pulumi.StringPtrOutput              `pulumi:"runAsServiceAccount"`
	Timeouts            IntegrationsClientTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewIntegrationsClient registers a new resource with the given unique name, arguments, and options.
func NewIntegrationsClient(ctx *pulumi.Context,
	name string, args *IntegrationsClientArgs, opts ...pulumi.ResourceOption) (*IntegrationsClient, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IntegrationsClient
	err = ctx.RegisterPackageResource("google:index/integrationsClient:IntegrationsClient", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationsClient gets an existing IntegrationsClient resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationsClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationsClientState, opts ...pulumi.ResourceOption) (*IntegrationsClient, error) {
	var resource IntegrationsClient
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/integrationsClient:IntegrationsClient", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationsClient resources.
type integrationsClientState struct {
	// Cloud KMS config for AuthModule to encrypt/decrypt credentials.
	CloudKmsConfig *IntegrationsClientCloudKmsConfig `pulumi:"cloudKmsConfig"`
	// Indicates if sample integrations should be created along with provisioning.
	CreateSampleIntegrations *bool   `pulumi:"createSampleIntegrations"`
	IntegrationsClientId     *string `pulumi:"integrationsClientId"`
	// Location in which client needs to be provisioned.
	Location *string `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// User input run-as service account, if empty, will bring up a new default service account.
	RunAsServiceAccount *string                     `pulumi:"runAsServiceAccount"`
	Timeouts            *IntegrationsClientTimeouts `pulumi:"timeouts"`
}

type IntegrationsClientState struct {
	// Cloud KMS config for AuthModule to encrypt/decrypt credentials.
	CloudKmsConfig IntegrationsClientCloudKmsConfigPtrInput
	// Indicates if sample integrations should be created along with provisioning.
	CreateSampleIntegrations pulumi.BoolPtrInput
	IntegrationsClientId     pulumi.StringPtrInput
	// Location in which client needs to be provisioned.
	Location pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// User input run-as service account, if empty, will bring up a new default service account.
	RunAsServiceAccount pulumi.StringPtrInput
	Timeouts            IntegrationsClientTimeoutsPtrInput
}

func (IntegrationsClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationsClientState)(nil)).Elem()
}

type integrationsClientArgs struct {
	// Cloud KMS config for AuthModule to encrypt/decrypt credentials.
	CloudKmsConfig *IntegrationsClientCloudKmsConfig `pulumi:"cloudKmsConfig"`
	// Indicates if sample integrations should be created along with provisioning.
	CreateSampleIntegrations *bool   `pulumi:"createSampleIntegrations"`
	IntegrationsClientId     *string `pulumi:"integrationsClientId"`
	// Location in which client needs to be provisioned.
	Location string  `pulumi:"location"`
	Project  *string `pulumi:"project"`
	// User input run-as service account, if empty, will bring up a new default service account.
	RunAsServiceAccount *string                     `pulumi:"runAsServiceAccount"`
	Timeouts            *IntegrationsClientTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a IntegrationsClient resource.
type IntegrationsClientArgs struct {
	// Cloud KMS config for AuthModule to encrypt/decrypt credentials.
	CloudKmsConfig IntegrationsClientCloudKmsConfigPtrInput
	// Indicates if sample integrations should be created along with provisioning.
	CreateSampleIntegrations pulumi.BoolPtrInput
	IntegrationsClientId     pulumi.StringPtrInput
	// Location in which client needs to be provisioned.
	Location pulumi.StringInput
	Project  pulumi.StringPtrInput
	// User input run-as service account, if empty, will bring up a new default service account.
	RunAsServiceAccount pulumi.StringPtrInput
	Timeouts            IntegrationsClientTimeoutsPtrInput
}

func (IntegrationsClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationsClientArgs)(nil)).Elem()
}

type IntegrationsClientInput interface {
	pulumi.Input

	ToIntegrationsClientOutput() IntegrationsClientOutput
	ToIntegrationsClientOutputWithContext(ctx context.Context) IntegrationsClientOutput
}

func (*IntegrationsClient) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationsClient)(nil)).Elem()
}

func (i *IntegrationsClient) ToIntegrationsClientOutput() IntegrationsClientOutput {
	return i.ToIntegrationsClientOutputWithContext(context.Background())
}

func (i *IntegrationsClient) ToIntegrationsClientOutputWithContext(ctx context.Context) IntegrationsClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationsClientOutput)
}

type IntegrationsClientOutput struct{ *pulumi.OutputState }

func (IntegrationsClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationsClient)(nil)).Elem()
}

func (o IntegrationsClientOutput) ToIntegrationsClientOutput() IntegrationsClientOutput {
	return o
}

func (o IntegrationsClientOutput) ToIntegrationsClientOutputWithContext(ctx context.Context) IntegrationsClientOutput {
	return o
}

// Cloud KMS config for AuthModule to encrypt/decrypt credentials.
func (o IntegrationsClientOutput) CloudKmsConfig() IntegrationsClientCloudKmsConfigPtrOutput {
	return o.ApplyT(func(v *IntegrationsClient) IntegrationsClientCloudKmsConfigPtrOutput { return v.CloudKmsConfig }).(IntegrationsClientCloudKmsConfigPtrOutput)
}

// Indicates if sample integrations should be created along with provisioning.
func (o IntegrationsClientOutput) CreateSampleIntegrations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IntegrationsClient) pulumi.BoolPtrOutput { return v.CreateSampleIntegrations }).(pulumi.BoolPtrOutput)
}

func (o IntegrationsClientOutput) IntegrationsClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsClient) pulumi.StringOutput { return v.IntegrationsClientId }).(pulumi.StringOutput)
}

// Location in which client needs to be provisioned.
func (o IntegrationsClientOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsClient) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o IntegrationsClientOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsClient) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// User input run-as service account, if empty, will bring up a new default service account.
func (o IntegrationsClientOutput) RunAsServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationsClient) pulumi.StringPtrOutput { return v.RunAsServiceAccount }).(pulumi.StringPtrOutput)
}

func (o IntegrationsClientOutput) Timeouts() IntegrationsClientTimeoutsPtrOutput {
	return o.ApplyT(func(v *IntegrationsClient) IntegrationsClientTimeoutsPtrOutput { return v.Timeouts }).(IntegrationsClientTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationsClientInput)(nil)).Elem(), &IntegrationsClient{})
	pulumi.RegisterOutputType(IntegrationsClientOutput{})
}
