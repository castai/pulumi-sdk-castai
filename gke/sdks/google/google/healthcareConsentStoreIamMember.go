// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HealthcareConsentStoreIamMember struct {
	pulumi.CustomResourceState

	Condition                         HealthcareConsentStoreIamMemberConditionPtrOutput `pulumi:"condition"`
	ConsentStoreId                    pulumi.StringOutput                               `pulumi:"consentStoreId"`
	Dataset                           pulumi.StringOutput                               `pulumi:"dataset"`
	Etag                              pulumi.StringOutput                               `pulumi:"etag"`
	HealthcareConsentStoreIamMemberId pulumi.StringOutput                               `pulumi:"healthcareConsentStoreIamMemberId"`
	Member                            pulumi.StringOutput                               `pulumi:"member"`
	Role                              pulumi.StringOutput                               `pulumi:"role"`
}

// NewHealthcareConsentStoreIamMember registers a new resource with the given unique name, arguments, and options.
func NewHealthcareConsentStoreIamMember(ctx *pulumi.Context,
	name string, args *HealthcareConsentStoreIamMemberArgs, opts ...pulumi.ResourceOption) (*HealthcareConsentStoreIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConsentStoreId == nil {
		return nil, errors.New("invalid value for required argument 'ConsentStoreId'")
	}
	if args.Dataset == nil {
		return nil, errors.New("invalid value for required argument 'Dataset'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HealthcareConsentStoreIamMember
	err = ctx.RegisterPackageResource("google:index/healthcareConsentStoreIamMember:HealthcareConsentStoreIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthcareConsentStoreIamMember gets an existing HealthcareConsentStoreIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthcareConsentStoreIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthcareConsentStoreIamMemberState, opts ...pulumi.ResourceOption) (*HealthcareConsentStoreIamMember, error) {
	var resource HealthcareConsentStoreIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/healthcareConsentStoreIamMember:HealthcareConsentStoreIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthcareConsentStoreIamMember resources.
type healthcareConsentStoreIamMemberState struct {
	Condition                         *HealthcareConsentStoreIamMemberCondition `pulumi:"condition"`
	ConsentStoreId                    *string                                   `pulumi:"consentStoreId"`
	Dataset                           *string                                   `pulumi:"dataset"`
	Etag                              *string                                   `pulumi:"etag"`
	HealthcareConsentStoreIamMemberId *string                                   `pulumi:"healthcareConsentStoreIamMemberId"`
	Member                            *string                                   `pulumi:"member"`
	Role                              *string                                   `pulumi:"role"`
}

type HealthcareConsentStoreIamMemberState struct {
	Condition                         HealthcareConsentStoreIamMemberConditionPtrInput
	ConsentStoreId                    pulumi.StringPtrInput
	Dataset                           pulumi.StringPtrInput
	Etag                              pulumi.StringPtrInput
	HealthcareConsentStoreIamMemberId pulumi.StringPtrInput
	Member                            pulumi.StringPtrInput
	Role                              pulumi.StringPtrInput
}

func (HealthcareConsentStoreIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareConsentStoreIamMemberState)(nil)).Elem()
}

type healthcareConsentStoreIamMemberArgs struct {
	Condition                         *HealthcareConsentStoreIamMemberCondition `pulumi:"condition"`
	ConsentStoreId                    string                                    `pulumi:"consentStoreId"`
	Dataset                           string                                    `pulumi:"dataset"`
	HealthcareConsentStoreIamMemberId *string                                   `pulumi:"healthcareConsentStoreIamMemberId"`
	Member                            string                                    `pulumi:"member"`
	Role                              string                                    `pulumi:"role"`
}

// The set of arguments for constructing a HealthcareConsentStoreIamMember resource.
type HealthcareConsentStoreIamMemberArgs struct {
	Condition                         HealthcareConsentStoreIamMemberConditionPtrInput
	ConsentStoreId                    pulumi.StringInput
	Dataset                           pulumi.StringInput
	HealthcareConsentStoreIamMemberId pulumi.StringPtrInput
	Member                            pulumi.StringInput
	Role                              pulumi.StringInput
}

func (HealthcareConsentStoreIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareConsentStoreIamMemberArgs)(nil)).Elem()
}

type HealthcareConsentStoreIamMemberInput interface {
	pulumi.Input

	ToHealthcareConsentStoreIamMemberOutput() HealthcareConsentStoreIamMemberOutput
	ToHealthcareConsentStoreIamMemberOutputWithContext(ctx context.Context) HealthcareConsentStoreIamMemberOutput
}

func (*HealthcareConsentStoreIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareConsentStoreIamMember)(nil)).Elem()
}

func (i *HealthcareConsentStoreIamMember) ToHealthcareConsentStoreIamMemberOutput() HealthcareConsentStoreIamMemberOutput {
	return i.ToHealthcareConsentStoreIamMemberOutputWithContext(context.Background())
}

func (i *HealthcareConsentStoreIamMember) ToHealthcareConsentStoreIamMemberOutputWithContext(ctx context.Context) HealthcareConsentStoreIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcareConsentStoreIamMemberOutput)
}

type HealthcareConsentStoreIamMemberOutput struct{ *pulumi.OutputState }

func (HealthcareConsentStoreIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareConsentStoreIamMember)(nil)).Elem()
}

func (o HealthcareConsentStoreIamMemberOutput) ToHealthcareConsentStoreIamMemberOutput() HealthcareConsentStoreIamMemberOutput {
	return o
}

func (o HealthcareConsentStoreIamMemberOutput) ToHealthcareConsentStoreIamMemberOutputWithContext(ctx context.Context) HealthcareConsentStoreIamMemberOutput {
	return o
}

func (o HealthcareConsentStoreIamMemberOutput) Condition() HealthcareConsentStoreIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *HealthcareConsentStoreIamMember) HealthcareConsentStoreIamMemberConditionPtrOutput {
		return v.Condition
	}).(HealthcareConsentStoreIamMemberConditionPtrOutput)
}

func (o HealthcareConsentStoreIamMemberOutput) ConsentStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareConsentStoreIamMember) pulumi.StringOutput { return v.ConsentStoreId }).(pulumi.StringOutput)
}

func (o HealthcareConsentStoreIamMemberOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareConsentStoreIamMember) pulumi.StringOutput { return v.Dataset }).(pulumi.StringOutput)
}

func (o HealthcareConsentStoreIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareConsentStoreIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o HealthcareConsentStoreIamMemberOutput) HealthcareConsentStoreIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareConsentStoreIamMember) pulumi.StringOutput {
		return v.HealthcareConsentStoreIamMemberId
	}).(pulumi.StringOutput)
}

func (o HealthcareConsentStoreIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareConsentStoreIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o HealthcareConsentStoreIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareConsentStoreIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcareConsentStoreIamMemberInput)(nil)).Elem(), &HealthcareConsentStoreIamMember{})
	pulumi.RegisterOutputType(HealthcareConsentStoreIamMemberOutput{})
}
