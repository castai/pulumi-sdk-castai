// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IdentityPlatformTenantDefaultSupportedIdpConfig struct {
	pulumi.CustomResourceState

	// OAuth client ID
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// OAuth client secret
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// If this IDP allows the user to sign in
	Enabled                                           pulumi.BoolPtrOutput `pulumi:"enabled"`
	IdentityPlatformTenantDefaultSupportedIdpConfigId pulumi.StringOutput  `pulumi:"identityPlatformTenantDefaultSupportedIdpConfigId"`
	// ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
	// 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
	IdpId pulumi.StringOutput `pulumi:"idpId"`
	// The name of the default supported IDP config resource
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the tenant where this DefaultSupportedIdpConfig resource exists
	Tenant   pulumi.StringOutput                                              `pulumi:"tenant"`
	Timeouts IdentityPlatformTenantDefaultSupportedIdpConfigTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewIdentityPlatformTenantDefaultSupportedIdpConfig registers a new resource with the given unique name, arguments, and options.
func NewIdentityPlatformTenantDefaultSupportedIdpConfig(ctx *pulumi.Context,
	name string, args *IdentityPlatformTenantDefaultSupportedIdpConfigArgs, opts ...pulumi.ResourceOption) (*IdentityPlatformTenantDefaultSupportedIdpConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.ClientSecret == nil {
		return nil, errors.New("invalid value for required argument 'ClientSecret'")
	}
	if args.IdpId == nil {
		return nil, errors.New("invalid value for required argument 'IdpId'")
	}
	if args.Tenant == nil {
		return nil, errors.New("invalid value for required argument 'Tenant'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IdentityPlatformTenantDefaultSupportedIdpConfig
	err = ctx.RegisterPackageResource("google:index/identityPlatformTenantDefaultSupportedIdpConfig:IdentityPlatformTenantDefaultSupportedIdpConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPlatformTenantDefaultSupportedIdpConfig gets an existing IdentityPlatformTenantDefaultSupportedIdpConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPlatformTenantDefaultSupportedIdpConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPlatformTenantDefaultSupportedIdpConfigState, opts ...pulumi.ResourceOption) (*IdentityPlatformTenantDefaultSupportedIdpConfig, error) {
	var resource IdentityPlatformTenantDefaultSupportedIdpConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/identityPlatformTenantDefaultSupportedIdpConfig:IdentityPlatformTenantDefaultSupportedIdpConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPlatformTenantDefaultSupportedIdpConfig resources.
type identityPlatformTenantDefaultSupportedIdpConfigState struct {
	// OAuth client ID
	ClientId *string `pulumi:"clientId"`
	// OAuth client secret
	ClientSecret *string `pulumi:"clientSecret"`
	// If this IDP allows the user to sign in
	Enabled                                           *bool   `pulumi:"enabled"`
	IdentityPlatformTenantDefaultSupportedIdpConfigId *string `pulumi:"identityPlatformTenantDefaultSupportedIdpConfigId"`
	// ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
	// 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
	IdpId *string `pulumi:"idpId"`
	// The name of the default supported IDP config resource
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The name of the tenant where this DefaultSupportedIdpConfig resource exists
	Tenant   *string                                                  `pulumi:"tenant"`
	Timeouts *IdentityPlatformTenantDefaultSupportedIdpConfigTimeouts `pulumi:"timeouts"`
}

type IdentityPlatformTenantDefaultSupportedIdpConfigState struct {
	// OAuth client ID
	ClientId pulumi.StringPtrInput
	// OAuth client secret
	ClientSecret pulumi.StringPtrInput
	// If this IDP allows the user to sign in
	Enabled                                           pulumi.BoolPtrInput
	IdentityPlatformTenantDefaultSupportedIdpConfigId pulumi.StringPtrInput
	// ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
	// 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
	IdpId pulumi.StringPtrInput
	// The name of the default supported IDP config resource
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The name of the tenant where this DefaultSupportedIdpConfig resource exists
	Tenant   pulumi.StringPtrInput
	Timeouts IdentityPlatformTenantDefaultSupportedIdpConfigTimeoutsPtrInput
}

func (IdentityPlatformTenantDefaultSupportedIdpConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPlatformTenantDefaultSupportedIdpConfigState)(nil)).Elem()
}

type identityPlatformTenantDefaultSupportedIdpConfigArgs struct {
	// OAuth client ID
	ClientId string `pulumi:"clientId"`
	// OAuth client secret
	ClientSecret string `pulumi:"clientSecret"`
	// If this IDP allows the user to sign in
	Enabled                                           *bool   `pulumi:"enabled"`
	IdentityPlatformTenantDefaultSupportedIdpConfigId *string `pulumi:"identityPlatformTenantDefaultSupportedIdpConfigId"`
	// ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
	// 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
	IdpId   string  `pulumi:"idpId"`
	Project *string `pulumi:"project"`
	// The name of the tenant where this DefaultSupportedIdpConfig resource exists
	Tenant   string                                                   `pulumi:"tenant"`
	Timeouts *IdentityPlatformTenantDefaultSupportedIdpConfigTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a IdentityPlatformTenantDefaultSupportedIdpConfig resource.
type IdentityPlatformTenantDefaultSupportedIdpConfigArgs struct {
	// OAuth client ID
	ClientId pulumi.StringInput
	// OAuth client secret
	ClientSecret pulumi.StringInput
	// If this IDP allows the user to sign in
	Enabled                                           pulumi.BoolPtrInput
	IdentityPlatformTenantDefaultSupportedIdpConfigId pulumi.StringPtrInput
	// ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
	// 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
	IdpId   pulumi.StringInput
	Project pulumi.StringPtrInput
	// The name of the tenant where this DefaultSupportedIdpConfig resource exists
	Tenant   pulumi.StringInput
	Timeouts IdentityPlatformTenantDefaultSupportedIdpConfigTimeoutsPtrInput
}

func (IdentityPlatformTenantDefaultSupportedIdpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPlatformTenantDefaultSupportedIdpConfigArgs)(nil)).Elem()
}

type IdentityPlatformTenantDefaultSupportedIdpConfigInput interface {
	pulumi.Input

	ToIdentityPlatformTenantDefaultSupportedIdpConfigOutput() IdentityPlatformTenantDefaultSupportedIdpConfigOutput
	ToIdentityPlatformTenantDefaultSupportedIdpConfigOutputWithContext(ctx context.Context) IdentityPlatformTenantDefaultSupportedIdpConfigOutput
}

func (*IdentityPlatformTenantDefaultSupportedIdpConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPlatformTenantDefaultSupportedIdpConfig)(nil)).Elem()
}

func (i *IdentityPlatformTenantDefaultSupportedIdpConfig) ToIdentityPlatformTenantDefaultSupportedIdpConfigOutput() IdentityPlatformTenantDefaultSupportedIdpConfigOutput {
	return i.ToIdentityPlatformTenantDefaultSupportedIdpConfigOutputWithContext(context.Background())
}

func (i *IdentityPlatformTenantDefaultSupportedIdpConfig) ToIdentityPlatformTenantDefaultSupportedIdpConfigOutputWithContext(ctx context.Context) IdentityPlatformTenantDefaultSupportedIdpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPlatformTenantDefaultSupportedIdpConfigOutput)
}

type IdentityPlatformTenantDefaultSupportedIdpConfigOutput struct{ *pulumi.OutputState }

func (IdentityPlatformTenantDefaultSupportedIdpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPlatformTenantDefaultSupportedIdpConfig)(nil)).Elem()
}

func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) ToIdentityPlatformTenantDefaultSupportedIdpConfigOutput() IdentityPlatformTenantDefaultSupportedIdpConfigOutput {
	return o
}

func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) ToIdentityPlatformTenantDefaultSupportedIdpConfigOutputWithContext(ctx context.Context) IdentityPlatformTenantDefaultSupportedIdpConfigOutput {
	return o
}

// OAuth client ID
func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantDefaultSupportedIdpConfig) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// OAuth client secret
func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantDefaultSupportedIdpConfig) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// If this IDP allows the user to sign in
func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantDefaultSupportedIdpConfig) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) IdentityPlatformTenantDefaultSupportedIdpConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantDefaultSupportedIdpConfig) pulumi.StringOutput {
		return v.IdentityPlatformTenantDefaultSupportedIdpConfigId
	}).(pulumi.StringOutput)
}

// ID of the IDP. Possible values include: * 'apple.com' * 'facebook.com' * 'gc.apple.com' * 'github.com' * 'google.com' *
// 'linkedin.com' * 'microsoft.com' * 'playgames.google.com' * 'twitter.com' * 'yahoo.com'
func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) IdpId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantDefaultSupportedIdpConfig) pulumi.StringOutput { return v.IdpId }).(pulumi.StringOutput)
}

// The name of the default supported IDP config resource
func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantDefaultSupportedIdpConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantDefaultSupportedIdpConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The name of the tenant where this DefaultSupportedIdpConfig resource exists
func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantDefaultSupportedIdpConfig) pulumi.StringOutput { return v.Tenant }).(pulumi.StringOutput)
}

func (o IdentityPlatformTenantDefaultSupportedIdpConfigOutput) Timeouts() IdentityPlatformTenantDefaultSupportedIdpConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformTenantDefaultSupportedIdpConfig) IdentityPlatformTenantDefaultSupportedIdpConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(IdentityPlatformTenantDefaultSupportedIdpConfigTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPlatformTenantDefaultSupportedIdpConfigInput)(nil)).Elem(), &IdentityPlatformTenantDefaultSupportedIdpConfig{})
	pulumi.RegisterOutputType(IdentityPlatformTenantDefaultSupportedIdpConfigOutput{})
}
