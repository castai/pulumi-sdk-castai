// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSpannerInstanceIamPolicy(ctx *pulumi.Context, args *LookupSpannerInstanceIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupSpannerInstanceIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupSpannerInstanceIamPolicyResult
	err = ctx.InvokePackage("google:index/getSpannerInstanceIamPolicy:getSpannerInstanceIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSpannerInstanceIamPolicy.
type LookupSpannerInstanceIamPolicyArgs struct {
	Id       *string `pulumi:"id"`
	Instance string  `pulumi:"instance"`
	Project  *string `pulumi:"project"`
}

// A collection of values returned by getSpannerInstanceIamPolicy.
type LookupSpannerInstanceIamPolicyResult struct {
	Etag       string `pulumi:"etag"`
	Id         string `pulumi:"id"`
	Instance   string `pulumi:"instance"`
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupSpannerInstanceIamPolicyOutput(ctx *pulumi.Context, args LookupSpannerInstanceIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupSpannerInstanceIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSpannerInstanceIamPolicyResultOutput, error) {
			args := v.(LookupSpannerInstanceIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupSpannerInstanceIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getSpannerInstanceIamPolicy:getSpannerInstanceIamPolicy", args, LookupSpannerInstanceIamPolicyResultOutput{}, options).(LookupSpannerInstanceIamPolicyResultOutput), nil
		}).(LookupSpannerInstanceIamPolicyResultOutput)
}

// A collection of arguments for invoking getSpannerInstanceIamPolicy.
type LookupSpannerInstanceIamPolicyOutputArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Instance pulumi.StringInput    `pulumi:"instance"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupSpannerInstanceIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpannerInstanceIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getSpannerInstanceIamPolicy.
type LookupSpannerInstanceIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupSpannerInstanceIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpannerInstanceIamPolicyResult)(nil)).Elem()
}

func (o LookupSpannerInstanceIamPolicyResultOutput) ToLookupSpannerInstanceIamPolicyResultOutput() LookupSpannerInstanceIamPolicyResultOutput {
	return o
}

func (o LookupSpannerInstanceIamPolicyResultOutput) ToLookupSpannerInstanceIamPolicyResultOutputWithContext(ctx context.Context) LookupSpannerInstanceIamPolicyResultOutput {
	return o
}

func (o LookupSpannerInstanceIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupSpannerInstanceIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSpannerInstanceIamPolicyResultOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceIamPolicyResult) string { return v.Instance }).(pulumi.StringOutput)
}

func (o LookupSpannerInstanceIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupSpannerInstanceIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSpannerInstanceIamPolicyResultOutput{})
}
