// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClouddeployTargetIamBinding struct {
	pulumi.CustomResourceState

	ClouddeployTargetIamBindingId pulumi.StringOutput                           `pulumi:"clouddeployTargetIamBindingId"`
	Condition                     ClouddeployTargetIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	Location                      pulumi.StringOutput                           `pulumi:"location"`
	Members                       pulumi.StringArrayOutput                      `pulumi:"members"`
	Name                          pulumi.StringOutput                           `pulumi:"name"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
}

// NewClouddeployTargetIamBinding registers a new resource with the given unique name, arguments, and options.
func NewClouddeployTargetIamBinding(ctx *pulumi.Context,
	name string, args *ClouddeployTargetIamBindingArgs, opts ...pulumi.ResourceOption) (*ClouddeployTargetIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ClouddeployTargetIamBinding
	err = ctx.RegisterPackageResource("google:index/clouddeployTargetIamBinding:ClouddeployTargetIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClouddeployTargetIamBinding gets an existing ClouddeployTargetIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClouddeployTargetIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClouddeployTargetIamBindingState, opts ...pulumi.ResourceOption) (*ClouddeployTargetIamBinding, error) {
	var resource ClouddeployTargetIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/clouddeployTargetIamBinding:ClouddeployTargetIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClouddeployTargetIamBinding resources.
type clouddeployTargetIamBindingState struct {
	ClouddeployTargetIamBindingId *string                               `pulumi:"clouddeployTargetIamBindingId"`
	Condition                     *ClouddeployTargetIamBindingCondition `pulumi:"condition"`
	Etag                          *string                               `pulumi:"etag"`
	Location                      *string                               `pulumi:"location"`
	Members                       []string                              `pulumi:"members"`
	Name                          *string                               `pulumi:"name"`
	Project                       *string                               `pulumi:"project"`
	Role                          *string                               `pulumi:"role"`
}

type ClouddeployTargetIamBindingState struct {
	ClouddeployTargetIamBindingId pulumi.StringPtrInput
	Condition                     ClouddeployTargetIamBindingConditionPtrInput
	Etag                          pulumi.StringPtrInput
	Location                      pulumi.StringPtrInput
	Members                       pulumi.StringArrayInput
	Name                          pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
}

func (ClouddeployTargetIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddeployTargetIamBindingState)(nil)).Elem()
}

type clouddeployTargetIamBindingArgs struct {
	ClouddeployTargetIamBindingId *string                               `pulumi:"clouddeployTargetIamBindingId"`
	Condition                     *ClouddeployTargetIamBindingCondition `pulumi:"condition"`
	Location                      *string                               `pulumi:"location"`
	Members                       []string                              `pulumi:"members"`
	Name                          *string                               `pulumi:"name"`
	Project                       *string                               `pulumi:"project"`
	Role                          string                                `pulumi:"role"`
}

// The set of arguments for constructing a ClouddeployTargetIamBinding resource.
type ClouddeployTargetIamBindingArgs struct {
	ClouddeployTargetIamBindingId pulumi.StringPtrInput
	Condition                     ClouddeployTargetIamBindingConditionPtrInput
	Location                      pulumi.StringPtrInput
	Members                       pulumi.StringArrayInput
	Name                          pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	Role                          pulumi.StringInput
}

func (ClouddeployTargetIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddeployTargetIamBindingArgs)(nil)).Elem()
}

type ClouddeployTargetIamBindingInput interface {
	pulumi.Input

	ToClouddeployTargetIamBindingOutput() ClouddeployTargetIamBindingOutput
	ToClouddeployTargetIamBindingOutputWithContext(ctx context.Context) ClouddeployTargetIamBindingOutput
}

func (*ClouddeployTargetIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddeployTargetIamBinding)(nil)).Elem()
}

func (i *ClouddeployTargetIamBinding) ToClouddeployTargetIamBindingOutput() ClouddeployTargetIamBindingOutput {
	return i.ToClouddeployTargetIamBindingOutputWithContext(context.Background())
}

func (i *ClouddeployTargetIamBinding) ToClouddeployTargetIamBindingOutputWithContext(ctx context.Context) ClouddeployTargetIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClouddeployTargetIamBindingOutput)
}

type ClouddeployTargetIamBindingOutput struct{ *pulumi.OutputState }

func (ClouddeployTargetIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddeployTargetIamBinding)(nil)).Elem()
}

func (o ClouddeployTargetIamBindingOutput) ToClouddeployTargetIamBindingOutput() ClouddeployTargetIamBindingOutput {
	return o
}

func (o ClouddeployTargetIamBindingOutput) ToClouddeployTargetIamBindingOutputWithContext(ctx context.Context) ClouddeployTargetIamBindingOutput {
	return o
}

func (o ClouddeployTargetIamBindingOutput) ClouddeployTargetIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamBinding) pulumi.StringOutput { return v.ClouddeployTargetIamBindingId }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamBindingOutput) Condition() ClouddeployTargetIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamBinding) ClouddeployTargetIamBindingConditionPtrOutput { return v.Condition }).(ClouddeployTargetIamBindingConditionPtrOutput)
}

func (o ClouddeployTargetIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o ClouddeployTargetIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClouddeployTargetIamBindingInput)(nil)).Elem(), &ClouddeployTargetIamBinding{})
	pulumi.RegisterOutputType(ClouddeployTargetIamBindingOutput{})
}
