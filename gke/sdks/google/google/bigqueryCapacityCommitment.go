// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryCapacityCommitment struct {
	pulumi.CustomResourceState

	BigqueryCapacityCommitmentId pulumi.StringOutput `pulumi:"bigqueryCapacityCommitmentId"`
	// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty.
	// This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a
	// dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split or merged.
	CapacityCommitmentId pulumi.StringPtrOutput `pulumi:"capacityCommitmentId"`
	// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
	CommitmentEndTime pulumi.StringOutput `pulumi:"commitmentEndTime"`
	// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
	CommitmentStartTime pulumi.StringOutput `pulumi:"commitmentStartTime"`
	// The edition type. Valid values are STANDARD, ENTERPRISE, ENTERPRISE_PLUS
	Edition pulumi.StringPtrOutput `pulumi:"edition"`
	// If true, fail the request if another project in the organization has a capacity commitment.
	EnforceSingleAdminProjectPerOrg pulumi.StringPtrOutput `pulumi:"enforceSingleAdminProjectPerOrg"`
	// The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is
	// US.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The resource name of the capacity commitment, e.g., projects/myproject/locations/US/capacityCommitments/123
	Name pulumi.StringOutput `pulumi:"name"`
	// Capacity commitment plan. Valid values are at
	// https://cloud.google.com/bigquery/docs/reference/reservations/rpc/google.cloud.bigquery.reservation.v1#commitmentplan
	Plan    pulumi.StringOutput `pulumi:"plan"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The plan this capacity commitment is converted to after commitmentEndTime passes. Once the plan is changed, committed
	// period is extended according to commitment plan. Only applicable for some commitment plans.
	RenewalPlan pulumi.StringPtrOutput `pulumi:"renewalPlan"`
	// Number of slots in this commitment.
	SlotCount pulumi.Float64Output `pulumi:"slotCount"`
	// State of the commitment
	State    pulumi.StringOutput                         `pulumi:"state"`
	Timeouts BigqueryCapacityCommitmentTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewBigqueryCapacityCommitment registers a new resource with the given unique name, arguments, and options.
func NewBigqueryCapacityCommitment(ctx *pulumi.Context,
	name string, args *BigqueryCapacityCommitmentArgs, opts ...pulumi.ResourceOption) (*BigqueryCapacityCommitment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Plan == nil {
		return nil, errors.New("invalid value for required argument 'Plan'")
	}
	if args.SlotCount == nil {
		return nil, errors.New("invalid value for required argument 'SlotCount'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryCapacityCommitment
	err = ctx.RegisterPackageResource("google:index/bigqueryCapacityCommitment:BigqueryCapacityCommitment", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryCapacityCommitment gets an existing BigqueryCapacityCommitment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryCapacityCommitment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryCapacityCommitmentState, opts ...pulumi.ResourceOption) (*BigqueryCapacityCommitment, error) {
	var resource BigqueryCapacityCommitment
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigqueryCapacityCommitment:BigqueryCapacityCommitment", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryCapacityCommitment resources.
type bigqueryCapacityCommitmentState struct {
	BigqueryCapacityCommitmentId *string `pulumi:"bigqueryCapacityCommitmentId"`
	// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty.
	// This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a
	// dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split or merged.
	CapacityCommitmentId *string `pulumi:"capacityCommitmentId"`
	// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
	CommitmentEndTime *string `pulumi:"commitmentEndTime"`
	// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
	CommitmentStartTime *string `pulumi:"commitmentStartTime"`
	// The edition type. Valid values are STANDARD, ENTERPRISE, ENTERPRISE_PLUS
	Edition *string `pulumi:"edition"`
	// If true, fail the request if another project in the organization has a capacity commitment.
	EnforceSingleAdminProjectPerOrg *string `pulumi:"enforceSingleAdminProjectPerOrg"`
	// The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is
	// US.
	Location *string `pulumi:"location"`
	// The resource name of the capacity commitment, e.g., projects/myproject/locations/US/capacityCommitments/123
	Name *string `pulumi:"name"`
	// Capacity commitment plan. Valid values are at
	// https://cloud.google.com/bigquery/docs/reference/reservations/rpc/google.cloud.bigquery.reservation.v1#commitmentplan
	Plan    *string `pulumi:"plan"`
	Project *string `pulumi:"project"`
	// The plan this capacity commitment is converted to after commitmentEndTime passes. Once the plan is changed, committed
	// period is extended according to commitment plan. Only applicable for some commitment plans.
	RenewalPlan *string `pulumi:"renewalPlan"`
	// Number of slots in this commitment.
	SlotCount *float64 `pulumi:"slotCount"`
	// State of the commitment
	State    *string                             `pulumi:"state"`
	Timeouts *BigqueryCapacityCommitmentTimeouts `pulumi:"timeouts"`
}

type BigqueryCapacityCommitmentState struct {
	BigqueryCapacityCommitmentId pulumi.StringPtrInput
	// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty.
	// This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a
	// dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split or merged.
	CapacityCommitmentId pulumi.StringPtrInput
	// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
	CommitmentEndTime pulumi.StringPtrInput
	// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
	CommitmentStartTime pulumi.StringPtrInput
	// The edition type. Valid values are STANDARD, ENTERPRISE, ENTERPRISE_PLUS
	Edition pulumi.StringPtrInput
	// If true, fail the request if another project in the organization has a capacity commitment.
	EnforceSingleAdminProjectPerOrg pulumi.StringPtrInput
	// The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is
	// US.
	Location pulumi.StringPtrInput
	// The resource name of the capacity commitment, e.g., projects/myproject/locations/US/capacityCommitments/123
	Name pulumi.StringPtrInput
	// Capacity commitment plan. Valid values are at
	// https://cloud.google.com/bigquery/docs/reference/reservations/rpc/google.cloud.bigquery.reservation.v1#commitmentplan
	Plan    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The plan this capacity commitment is converted to after commitmentEndTime passes. Once the plan is changed, committed
	// period is extended according to commitment plan. Only applicable for some commitment plans.
	RenewalPlan pulumi.StringPtrInput
	// Number of slots in this commitment.
	SlotCount pulumi.Float64PtrInput
	// State of the commitment
	State    pulumi.StringPtrInput
	Timeouts BigqueryCapacityCommitmentTimeoutsPtrInput
}

func (BigqueryCapacityCommitmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryCapacityCommitmentState)(nil)).Elem()
}

type bigqueryCapacityCommitmentArgs struct {
	BigqueryCapacityCommitmentId *string `pulumi:"bigqueryCapacityCommitmentId"`
	// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty.
	// This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a
	// dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split or merged.
	CapacityCommitmentId *string `pulumi:"capacityCommitmentId"`
	// The edition type. Valid values are STANDARD, ENTERPRISE, ENTERPRISE_PLUS
	Edition *string `pulumi:"edition"`
	// If true, fail the request if another project in the organization has a capacity commitment.
	EnforceSingleAdminProjectPerOrg *string `pulumi:"enforceSingleAdminProjectPerOrg"`
	// The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is
	// US.
	Location *string `pulumi:"location"`
	// Capacity commitment plan. Valid values are at
	// https://cloud.google.com/bigquery/docs/reference/reservations/rpc/google.cloud.bigquery.reservation.v1#commitmentplan
	Plan    string  `pulumi:"plan"`
	Project *string `pulumi:"project"`
	// The plan this capacity commitment is converted to after commitmentEndTime passes. Once the plan is changed, committed
	// period is extended according to commitment plan. Only applicable for some commitment plans.
	RenewalPlan *string `pulumi:"renewalPlan"`
	// Number of slots in this commitment.
	SlotCount float64                             `pulumi:"slotCount"`
	Timeouts  *BigqueryCapacityCommitmentTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BigqueryCapacityCommitment resource.
type BigqueryCapacityCommitmentArgs struct {
	BigqueryCapacityCommitmentId pulumi.StringPtrInput
	// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty.
	// This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a
	// dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split or merged.
	CapacityCommitmentId pulumi.StringPtrInput
	// The edition type. Valid values are STANDARD, ENTERPRISE, ENTERPRISE_PLUS
	Edition pulumi.StringPtrInput
	// If true, fail the request if another project in the organization has a capacity commitment.
	EnforceSingleAdminProjectPerOrg pulumi.StringPtrInput
	// The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is
	// US.
	Location pulumi.StringPtrInput
	// Capacity commitment plan. Valid values are at
	// https://cloud.google.com/bigquery/docs/reference/reservations/rpc/google.cloud.bigquery.reservation.v1#commitmentplan
	Plan    pulumi.StringInput
	Project pulumi.StringPtrInput
	// The plan this capacity commitment is converted to after commitmentEndTime passes. Once the plan is changed, committed
	// period is extended according to commitment plan. Only applicable for some commitment plans.
	RenewalPlan pulumi.StringPtrInput
	// Number of slots in this commitment.
	SlotCount pulumi.Float64Input
	Timeouts  BigqueryCapacityCommitmentTimeoutsPtrInput
}

func (BigqueryCapacityCommitmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryCapacityCommitmentArgs)(nil)).Elem()
}

type BigqueryCapacityCommitmentInput interface {
	pulumi.Input

	ToBigqueryCapacityCommitmentOutput() BigqueryCapacityCommitmentOutput
	ToBigqueryCapacityCommitmentOutputWithContext(ctx context.Context) BigqueryCapacityCommitmentOutput
}

func (*BigqueryCapacityCommitment) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryCapacityCommitment)(nil)).Elem()
}

func (i *BigqueryCapacityCommitment) ToBigqueryCapacityCommitmentOutput() BigqueryCapacityCommitmentOutput {
	return i.ToBigqueryCapacityCommitmentOutputWithContext(context.Background())
}

func (i *BigqueryCapacityCommitment) ToBigqueryCapacityCommitmentOutputWithContext(ctx context.Context) BigqueryCapacityCommitmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryCapacityCommitmentOutput)
}

type BigqueryCapacityCommitmentOutput struct{ *pulumi.OutputState }

func (BigqueryCapacityCommitmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryCapacityCommitment)(nil)).Elem()
}

func (o BigqueryCapacityCommitmentOutput) ToBigqueryCapacityCommitmentOutput() BigqueryCapacityCommitmentOutput {
	return o
}

func (o BigqueryCapacityCommitmentOutput) ToBigqueryCapacityCommitmentOutputWithContext(ctx context.Context) BigqueryCapacityCommitmentOutput {
	return o
}

func (o BigqueryCapacityCommitmentOutput) BigqueryCapacityCommitmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringOutput { return v.BigqueryCapacityCommitmentId }).(pulumi.StringOutput)
}

// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is empty.
// This field must only contain lower case alphanumeric characters or dashes. The first and last character cannot be a
// dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split or merged.
func (o BigqueryCapacityCommitmentOutput) CapacityCommitmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringPtrOutput { return v.CapacityCommitmentId }).(pulumi.StringPtrOutput)
}

// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
func (o BigqueryCapacityCommitmentOutput) CommitmentEndTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringOutput { return v.CommitmentEndTime }).(pulumi.StringOutput)
}

// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
func (o BigqueryCapacityCommitmentOutput) CommitmentStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringOutput { return v.CommitmentStartTime }).(pulumi.StringOutput)
}

// The edition type. Valid values are STANDARD, ENTERPRISE, ENTERPRISE_PLUS
func (o BigqueryCapacityCommitmentOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringPtrOutput { return v.Edition }).(pulumi.StringPtrOutput)
}

// If true, fail the request if another project in the organization has a capacity commitment.
func (o BigqueryCapacityCommitmentOutput) EnforceSingleAdminProjectPerOrg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringPtrOutput { return v.EnforceSingleAdminProjectPerOrg }).(pulumi.StringPtrOutput)
}

// The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is
// US.
func (o BigqueryCapacityCommitmentOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The resource name of the capacity commitment, e.g., projects/myproject/locations/US/capacityCommitments/123
func (o BigqueryCapacityCommitmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Capacity commitment plan. Valid values are at
// https://cloud.google.com/bigquery/docs/reference/reservations/rpc/google.cloud.bigquery.reservation.v1#commitmentplan
func (o BigqueryCapacityCommitmentOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringOutput { return v.Plan }).(pulumi.StringOutput)
}

func (o BigqueryCapacityCommitmentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The plan this capacity commitment is converted to after commitmentEndTime passes. Once the plan is changed, committed
// period is extended according to commitment plan. Only applicable for some commitment plans.
func (o BigqueryCapacityCommitmentOutput) RenewalPlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringPtrOutput { return v.RenewalPlan }).(pulumi.StringPtrOutput)
}

// Number of slots in this commitment.
func (o BigqueryCapacityCommitmentOutput) SlotCount() pulumi.Float64Output {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.Float64Output { return v.SlotCount }).(pulumi.Float64Output)
}

// State of the commitment
func (o BigqueryCapacityCommitmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o BigqueryCapacityCommitmentOutput) Timeouts() BigqueryCapacityCommitmentTimeoutsPtrOutput {
	return o.ApplyT(func(v *BigqueryCapacityCommitment) BigqueryCapacityCommitmentTimeoutsPtrOutput { return v.Timeouts }).(BigqueryCapacityCommitmentTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryCapacityCommitmentInput)(nil)).Elem(), &BigqueryCapacityCommitment{})
	pulumi.RegisterOutputType(BigqueryCapacityCommitmentOutput{})
}
