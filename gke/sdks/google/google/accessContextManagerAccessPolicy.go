// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessContextManagerAccessPolicy struct {
	pulumi.CustomResourceState

	AccessContextManagerAccessPolicyId pulumi.StringOutput `pulumi:"accessContextManagerAccessPolicyId"`
	// Time the AccessPolicy was created in UTC.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Resource name of the AccessPolicy. Format: '{{policy_id}}'
	Name pulumi.StringOutput `pulumi:"name"`
	// The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: 'organizations/{{organization_id}}'
	Parent pulumi.StringOutput `pulumi:"parent"`
	// Folder or project on which this policy is applicable. Format: 'folders/{{folder_id}}' or 'projects/{{project_number}}'
	Scopes   pulumi.StringArrayOutput                          `pulumi:"scopes"`
	Timeouts AccessContextManagerAccessPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
	// Human readable title. Does not affect behavior.
	Title pulumi.StringOutput `pulumi:"title"`
	// Time the AccessPolicy was updated in UTC.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewAccessContextManagerAccessPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccessContextManagerAccessPolicy(ctx *pulumi.Context,
	name string, args *AccessContextManagerAccessPolicyArgs, opts ...pulumi.ResourceOption) (*AccessContextManagerAccessPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource AccessContextManagerAccessPolicy
	err = ctx.RegisterPackageResource("google:index/accessContextManagerAccessPolicy:AccessContextManagerAccessPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessContextManagerAccessPolicy gets an existing AccessContextManagerAccessPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessContextManagerAccessPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessContextManagerAccessPolicyState, opts ...pulumi.ResourceOption) (*AccessContextManagerAccessPolicy, error) {
	var resource AccessContextManagerAccessPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/accessContextManagerAccessPolicy:AccessContextManagerAccessPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessContextManagerAccessPolicy resources.
type accessContextManagerAccessPolicyState struct {
	AccessContextManagerAccessPolicyId *string `pulumi:"accessContextManagerAccessPolicyId"`
	// Time the AccessPolicy was created in UTC.
	CreateTime *string `pulumi:"createTime"`
	// Resource name of the AccessPolicy. Format: '{{policy_id}}'
	Name *string `pulumi:"name"`
	// The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: 'organizations/{{organization_id}}'
	Parent *string `pulumi:"parent"`
	// Folder or project on which this policy is applicable. Format: 'folders/{{folder_id}}' or 'projects/{{project_number}}'
	Scopes   []string                                  `pulumi:"scopes"`
	Timeouts *AccessContextManagerAccessPolicyTimeouts `pulumi:"timeouts"`
	// Human readable title. Does not affect behavior.
	Title *string `pulumi:"title"`
	// Time the AccessPolicy was updated in UTC.
	UpdateTime *string `pulumi:"updateTime"`
}

type AccessContextManagerAccessPolicyState struct {
	AccessContextManagerAccessPolicyId pulumi.StringPtrInput
	// Time the AccessPolicy was created in UTC.
	CreateTime pulumi.StringPtrInput
	// Resource name of the AccessPolicy. Format: '{{policy_id}}'
	Name pulumi.StringPtrInput
	// The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: 'organizations/{{organization_id}}'
	Parent pulumi.StringPtrInput
	// Folder or project on which this policy is applicable. Format: 'folders/{{folder_id}}' or 'projects/{{project_number}}'
	Scopes   pulumi.StringArrayInput
	Timeouts AccessContextManagerAccessPolicyTimeoutsPtrInput
	// Human readable title. Does not affect behavior.
	Title pulumi.StringPtrInput
	// Time the AccessPolicy was updated in UTC.
	UpdateTime pulumi.StringPtrInput
}

func (AccessContextManagerAccessPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessContextManagerAccessPolicyState)(nil)).Elem()
}

type accessContextManagerAccessPolicyArgs struct {
	AccessContextManagerAccessPolicyId *string `pulumi:"accessContextManagerAccessPolicyId"`
	// The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: 'organizations/{{organization_id}}'
	Parent string `pulumi:"parent"`
	// Folder or project on which this policy is applicable. Format: 'folders/{{folder_id}}' or 'projects/{{project_number}}'
	Scopes   []string                                  `pulumi:"scopes"`
	Timeouts *AccessContextManagerAccessPolicyTimeouts `pulumi:"timeouts"`
	// Human readable title. Does not affect behavior.
	Title string `pulumi:"title"`
}

// The set of arguments for constructing a AccessContextManagerAccessPolicy resource.
type AccessContextManagerAccessPolicyArgs struct {
	AccessContextManagerAccessPolicyId pulumi.StringPtrInput
	// The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: 'organizations/{{organization_id}}'
	Parent pulumi.StringInput
	// Folder or project on which this policy is applicable. Format: 'folders/{{folder_id}}' or 'projects/{{project_number}}'
	Scopes   pulumi.StringArrayInput
	Timeouts AccessContextManagerAccessPolicyTimeoutsPtrInput
	// Human readable title. Does not affect behavior.
	Title pulumi.StringInput
}

func (AccessContextManagerAccessPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessContextManagerAccessPolicyArgs)(nil)).Elem()
}

type AccessContextManagerAccessPolicyInput interface {
	pulumi.Input

	ToAccessContextManagerAccessPolicyOutput() AccessContextManagerAccessPolicyOutput
	ToAccessContextManagerAccessPolicyOutputWithContext(ctx context.Context) AccessContextManagerAccessPolicyOutput
}

func (*AccessContextManagerAccessPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessContextManagerAccessPolicy)(nil)).Elem()
}

func (i *AccessContextManagerAccessPolicy) ToAccessContextManagerAccessPolicyOutput() AccessContextManagerAccessPolicyOutput {
	return i.ToAccessContextManagerAccessPolicyOutputWithContext(context.Background())
}

func (i *AccessContextManagerAccessPolicy) ToAccessContextManagerAccessPolicyOutputWithContext(ctx context.Context) AccessContextManagerAccessPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessContextManagerAccessPolicyOutput)
}

type AccessContextManagerAccessPolicyOutput struct{ *pulumi.OutputState }

func (AccessContextManagerAccessPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessContextManagerAccessPolicy)(nil)).Elem()
}

func (o AccessContextManagerAccessPolicyOutput) ToAccessContextManagerAccessPolicyOutput() AccessContextManagerAccessPolicyOutput {
	return o
}

func (o AccessContextManagerAccessPolicyOutput) ToAccessContextManagerAccessPolicyOutputWithContext(ctx context.Context) AccessContextManagerAccessPolicyOutput {
	return o
}

func (o AccessContextManagerAccessPolicyOutput) AccessContextManagerAccessPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicy) pulumi.StringOutput {
		return v.AccessContextManagerAccessPolicyId
	}).(pulumi.StringOutput)
}

// Time the AccessPolicy was created in UTC.
func (o AccessContextManagerAccessPolicyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicy) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Resource name of the AccessPolicy. Format: '{{policy_id}}'
func (o AccessContextManagerAccessPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: 'organizations/{{organization_id}}'
func (o AccessContextManagerAccessPolicyOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicy) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// Folder or project on which this policy is applicable. Format: 'folders/{{folder_id}}' or 'projects/{{project_number}}'
func (o AccessContextManagerAccessPolicyOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicy) pulumi.StringArrayOutput { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o AccessContextManagerAccessPolicyOutput) Timeouts() AccessContextManagerAccessPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicy) AccessContextManagerAccessPolicyTimeoutsPtrOutput {
		return v.Timeouts
	}).(AccessContextManagerAccessPolicyTimeoutsPtrOutput)
}

// Human readable title. Does not affect behavior.
func (o AccessContextManagerAccessPolicyOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicy) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

// Time the AccessPolicy was updated in UTC.
func (o AccessContextManagerAccessPolicyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessContextManagerAccessPolicy) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessContextManagerAccessPolicyInput)(nil)).Elem(), &AccessContextManagerAccessPolicy{})
	pulumi.RegisterOutputType(AccessContextManagerAccessPolicyOutput{})
}
