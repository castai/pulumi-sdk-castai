// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SqlDatabase struct {
	pulumi.CustomResourceState

	// The charset value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Character Set
	// Support](https://www.postgresql.org/docs/9.6/static/multibyte.html) for more details and supported values. Postgres
	// databases only support a value of 'UTF8' at creation time.
	Charset pulumi.StringOutput `pulumi:"charset"`
	// The collation value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Collation
	// Support](https://www.postgresql.org/docs/9.6/static/collation.html) for more details and supported values. Postgres
	// databases only support a value of 'en_US.UTF8' at creation time.
	Collation pulumi.StringOutput `pulumi:"collation"`
	// The deletion policy for the database. Setting ABANDON allows the resource to be abandoned rather than deleted. This is
	// useful for Postgres, where databases cannot be deleted from the API if there are users other than cloudsqlsuperuser with
	// access. Possible values are: "ABANDON", "DELETE". Defaults to "DELETE".
	DeletionPolicy pulumi.StringPtrOutput `pulumi:"deletionPolicy"`
	// The name of the Cloud SQL instance. This does not include the project ID.
	Instance pulumi.StringOutput `pulumi:"instance"`
	// The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.
	Name          pulumi.StringOutput          `pulumi:"name"`
	Project       pulumi.StringOutput          `pulumi:"project"`
	SelfLink      pulumi.StringOutput          `pulumi:"selfLink"`
	SqlDatabaseId pulumi.StringOutput          `pulumi:"sqlDatabaseId"`
	Timeouts      SqlDatabaseTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewSqlDatabase registers a new resource with the given unique name, arguments, and options.
func NewSqlDatabase(ctx *pulumi.Context,
	name string, args *SqlDatabaseArgs, opts ...pulumi.ResourceOption) (*SqlDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Instance == nil {
		return nil, errors.New("invalid value for required argument 'Instance'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SqlDatabase
	err = ctx.RegisterPackageResource("google:index/sqlDatabase:SqlDatabase", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlDatabase gets an existing SqlDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlDatabaseState, opts ...pulumi.ResourceOption) (*SqlDatabase, error) {
	var resource SqlDatabase
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/sqlDatabase:SqlDatabase", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlDatabase resources.
type sqlDatabaseState struct {
	// The charset value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Character Set
	// Support](https://www.postgresql.org/docs/9.6/static/multibyte.html) for more details and supported values. Postgres
	// databases only support a value of 'UTF8' at creation time.
	Charset *string `pulumi:"charset"`
	// The collation value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Collation
	// Support](https://www.postgresql.org/docs/9.6/static/collation.html) for more details and supported values. Postgres
	// databases only support a value of 'en_US.UTF8' at creation time.
	Collation *string `pulumi:"collation"`
	// The deletion policy for the database. Setting ABANDON allows the resource to be abandoned rather than deleted. This is
	// useful for Postgres, where databases cannot be deleted from the API if there are users other than cloudsqlsuperuser with
	// access. Possible values are: "ABANDON", "DELETE". Defaults to "DELETE".
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// The name of the Cloud SQL instance. This does not include the project ID.
	Instance *string `pulumi:"instance"`
	// The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.
	Name          *string              `pulumi:"name"`
	Project       *string              `pulumi:"project"`
	SelfLink      *string              `pulumi:"selfLink"`
	SqlDatabaseId *string              `pulumi:"sqlDatabaseId"`
	Timeouts      *SqlDatabaseTimeouts `pulumi:"timeouts"`
}

type SqlDatabaseState struct {
	// The charset value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Character Set
	// Support](https://www.postgresql.org/docs/9.6/static/multibyte.html) for more details and supported values. Postgres
	// databases only support a value of 'UTF8' at creation time.
	Charset pulumi.StringPtrInput
	// The collation value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Collation
	// Support](https://www.postgresql.org/docs/9.6/static/collation.html) for more details and supported values. Postgres
	// databases only support a value of 'en_US.UTF8' at creation time.
	Collation pulumi.StringPtrInput
	// The deletion policy for the database. Setting ABANDON allows the resource to be abandoned rather than deleted. This is
	// useful for Postgres, where databases cannot be deleted from the API if there are users other than cloudsqlsuperuser with
	// access. Possible values are: "ABANDON", "DELETE". Defaults to "DELETE".
	DeletionPolicy pulumi.StringPtrInput
	// The name of the Cloud SQL instance. This does not include the project ID.
	Instance pulumi.StringPtrInput
	// The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.
	Name          pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	SelfLink      pulumi.StringPtrInput
	SqlDatabaseId pulumi.StringPtrInput
	Timeouts      SqlDatabaseTimeoutsPtrInput
}

func (SqlDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlDatabaseState)(nil)).Elem()
}

type sqlDatabaseArgs struct {
	// The charset value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Character Set
	// Support](https://www.postgresql.org/docs/9.6/static/multibyte.html) for more details and supported values. Postgres
	// databases only support a value of 'UTF8' at creation time.
	Charset *string `pulumi:"charset"`
	// The collation value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Collation
	// Support](https://www.postgresql.org/docs/9.6/static/collation.html) for more details and supported values. Postgres
	// databases only support a value of 'en_US.UTF8' at creation time.
	Collation *string `pulumi:"collation"`
	// The deletion policy for the database. Setting ABANDON allows the resource to be abandoned rather than deleted. This is
	// useful for Postgres, where databases cannot be deleted from the API if there are users other than cloudsqlsuperuser with
	// access. Possible values are: "ABANDON", "DELETE". Defaults to "DELETE".
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// The name of the Cloud SQL instance. This does not include the project ID.
	Instance string `pulumi:"instance"`
	// The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.
	Name          *string              `pulumi:"name"`
	Project       *string              `pulumi:"project"`
	SqlDatabaseId *string              `pulumi:"sqlDatabaseId"`
	Timeouts      *SqlDatabaseTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SqlDatabase resource.
type SqlDatabaseArgs struct {
	// The charset value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Character Set
	// Support](https://www.postgresql.org/docs/9.6/static/multibyte.html) for more details and supported values. Postgres
	// databases only support a value of 'UTF8' at creation time.
	Charset pulumi.StringPtrInput
	// The collation value. See MySQL's [Supported Character Sets and
	// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Collation
	// Support](https://www.postgresql.org/docs/9.6/static/collation.html) for more details and supported values. Postgres
	// databases only support a value of 'en_US.UTF8' at creation time.
	Collation pulumi.StringPtrInput
	// The deletion policy for the database. Setting ABANDON allows the resource to be abandoned rather than deleted. This is
	// useful for Postgres, where databases cannot be deleted from the API if there are users other than cloudsqlsuperuser with
	// access. Possible values are: "ABANDON", "DELETE". Defaults to "DELETE".
	DeletionPolicy pulumi.StringPtrInput
	// The name of the Cloud SQL instance. This does not include the project ID.
	Instance pulumi.StringInput
	// The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.
	Name          pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	SqlDatabaseId pulumi.StringPtrInput
	Timeouts      SqlDatabaseTimeoutsPtrInput
}

func (SqlDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlDatabaseArgs)(nil)).Elem()
}

type SqlDatabaseInput interface {
	pulumi.Input

	ToSqlDatabaseOutput() SqlDatabaseOutput
	ToSqlDatabaseOutputWithContext(ctx context.Context) SqlDatabaseOutput
}

func (*SqlDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabase)(nil)).Elem()
}

func (i *SqlDatabase) ToSqlDatabaseOutput() SqlDatabaseOutput {
	return i.ToSqlDatabaseOutputWithContext(context.Background())
}

func (i *SqlDatabase) ToSqlDatabaseOutputWithContext(ctx context.Context) SqlDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlDatabaseOutput)
}

type SqlDatabaseOutput struct{ *pulumi.OutputState }

func (SqlDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlDatabase)(nil)).Elem()
}

func (o SqlDatabaseOutput) ToSqlDatabaseOutput() SqlDatabaseOutput {
	return o
}

func (o SqlDatabaseOutput) ToSqlDatabaseOutputWithContext(ctx context.Context) SqlDatabaseOutput {
	return o
}

// The charset value. See MySQL's [Supported Character Sets and
// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Character Set
// Support](https://www.postgresql.org/docs/9.6/static/multibyte.html) for more details and supported values. Postgres
// databases only support a value of 'UTF8' at creation time.
func (o SqlDatabaseOutput) Charset() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabase) pulumi.StringOutput { return v.Charset }).(pulumi.StringOutput)
}

// The collation value. See MySQL's [Supported Character Sets and
// Collations](https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html) and Postgres' [Collation
// Support](https://www.postgresql.org/docs/9.6/static/collation.html) for more details and supported values. Postgres
// databases only support a value of 'en_US.UTF8' at creation time.
func (o SqlDatabaseOutput) Collation() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabase) pulumi.StringOutput { return v.Collation }).(pulumi.StringOutput)
}

// The deletion policy for the database. Setting ABANDON allows the resource to be abandoned rather than deleted. This is
// useful for Postgres, where databases cannot be deleted from the API if there are users other than cloudsqlsuperuser with
// access. Possible values are: "ABANDON", "DELETE". Defaults to "DELETE".
func (o SqlDatabaseOutput) DeletionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlDatabase) pulumi.StringPtrOutput { return v.DeletionPolicy }).(pulumi.StringPtrOutput)
}

// The name of the Cloud SQL instance. This does not include the project ID.
func (o SqlDatabaseOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabase) pulumi.StringOutput { return v.Instance }).(pulumi.StringOutput)
}

// The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.
func (o SqlDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SqlDatabaseOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabase) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o SqlDatabaseOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabase) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

func (o SqlDatabaseOutput) SqlDatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlDatabase) pulumi.StringOutput { return v.SqlDatabaseId }).(pulumi.StringOutput)
}

func (o SqlDatabaseOutput) Timeouts() SqlDatabaseTimeoutsPtrOutput {
	return o.ApplyT(func(v *SqlDatabase) SqlDatabaseTimeoutsPtrOutput { return v.Timeouts }).(SqlDatabaseTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SqlDatabaseInput)(nil)).Elem(), &SqlDatabase{})
	pulumi.RegisterOutputType(SqlDatabaseOutput{})
}
