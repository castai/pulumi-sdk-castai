// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoggingProjectBucketConfig struct {
	pulumi.CustomResourceState

	// The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
	BucketId pulumi.StringOutput `pulumi:"bucketId"`
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings LoggingProjectBucketConfigCmekSettingsPtrOutput `pulumi:"cmekSettings"`
	// An optional description for this bucket.
	Description pulumi.StringOutput `pulumi:"description"`
	// Enable log analytics for the bucket. Cannot be disabled once enabled.
	EnableAnalytics pulumi.BoolPtrOutput `pulumi:"enableAnalytics"`
	// A list of indexed fields and related configuration data.
	IndexConfigs LoggingProjectBucketConfigIndexConfigArrayOutput `pulumi:"indexConfigs"`
	// The bucket's lifecycle such as active or deleted.
	LifecycleState pulumi.StringOutput `pulumi:"lifecycleState"`
	// The location of the bucket.
	Location pulumi.StringOutput `pulumi:"location"`
	// Whether the bucket is locked. The retention period on a locked bucket cannot be changed. Locked buckets may only be
	// deleted if they are empty.
	Locked                       pulumi.BoolPtrOutput `pulumi:"locked"`
	LoggingProjectBucketConfigId pulumi.StringOutput  `pulumi:"loggingProjectBucketConfigId"`
	// The resource name of the bucket
	Name pulumi.StringOutput `pulumi:"name"`
	// The parent project that contains the logging bucket.
	Project pulumi.StringOutput `pulumi:"project"`
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum
	// retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be
	// used.
	RetentionDays pulumi.Float64PtrOutput `pulumi:"retentionDays"`
}

// NewLoggingProjectBucketConfig registers a new resource with the given unique name, arguments, and options.
func NewLoggingProjectBucketConfig(ctx *pulumi.Context,
	name string, args *LoggingProjectBucketConfigArgs, opts ...pulumi.ResourceOption) (*LoggingProjectBucketConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BucketId == nil {
		return nil, errors.New("invalid value for required argument 'BucketId'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource LoggingProjectBucketConfig
	err = ctx.RegisterPackageResource("google:index/loggingProjectBucketConfig:LoggingProjectBucketConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingProjectBucketConfig gets an existing LoggingProjectBucketConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingProjectBucketConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingProjectBucketConfigState, opts ...pulumi.ResourceOption) (*LoggingProjectBucketConfig, error) {
	var resource LoggingProjectBucketConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/loggingProjectBucketConfig:LoggingProjectBucketConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingProjectBucketConfig resources.
type loggingProjectBucketConfigState struct {
	// The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
	BucketId *string `pulumi:"bucketId"`
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings *LoggingProjectBucketConfigCmekSettings `pulumi:"cmekSettings"`
	// An optional description for this bucket.
	Description *string `pulumi:"description"`
	// Enable log analytics for the bucket. Cannot be disabled once enabled.
	EnableAnalytics *bool `pulumi:"enableAnalytics"`
	// A list of indexed fields and related configuration data.
	IndexConfigs []LoggingProjectBucketConfigIndexConfig `pulumi:"indexConfigs"`
	// The bucket's lifecycle such as active or deleted.
	LifecycleState *string `pulumi:"lifecycleState"`
	// The location of the bucket.
	Location *string `pulumi:"location"`
	// Whether the bucket is locked. The retention period on a locked bucket cannot be changed. Locked buckets may only be
	// deleted if they are empty.
	Locked                       *bool   `pulumi:"locked"`
	LoggingProjectBucketConfigId *string `pulumi:"loggingProjectBucketConfigId"`
	// The resource name of the bucket
	Name *string `pulumi:"name"`
	// The parent project that contains the logging bucket.
	Project *string `pulumi:"project"`
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum
	// retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be
	// used.
	RetentionDays *float64 `pulumi:"retentionDays"`
}

type LoggingProjectBucketConfigState struct {
	// The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
	BucketId pulumi.StringPtrInput
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings LoggingProjectBucketConfigCmekSettingsPtrInput
	// An optional description for this bucket.
	Description pulumi.StringPtrInput
	// Enable log analytics for the bucket. Cannot be disabled once enabled.
	EnableAnalytics pulumi.BoolPtrInput
	// A list of indexed fields and related configuration data.
	IndexConfigs LoggingProjectBucketConfigIndexConfigArrayInput
	// The bucket's lifecycle such as active or deleted.
	LifecycleState pulumi.StringPtrInput
	// The location of the bucket.
	Location pulumi.StringPtrInput
	// Whether the bucket is locked. The retention period on a locked bucket cannot be changed. Locked buckets may only be
	// deleted if they are empty.
	Locked                       pulumi.BoolPtrInput
	LoggingProjectBucketConfigId pulumi.StringPtrInput
	// The resource name of the bucket
	Name pulumi.StringPtrInput
	// The parent project that contains the logging bucket.
	Project pulumi.StringPtrInput
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum
	// retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be
	// used.
	RetentionDays pulumi.Float64PtrInput
}

func (LoggingProjectBucketConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingProjectBucketConfigState)(nil)).Elem()
}

type loggingProjectBucketConfigArgs struct {
	// The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
	BucketId string `pulumi:"bucketId"`
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings *LoggingProjectBucketConfigCmekSettings `pulumi:"cmekSettings"`
	// An optional description for this bucket.
	Description *string `pulumi:"description"`
	// Enable log analytics for the bucket. Cannot be disabled once enabled.
	EnableAnalytics *bool `pulumi:"enableAnalytics"`
	// A list of indexed fields and related configuration data.
	IndexConfigs []LoggingProjectBucketConfigIndexConfig `pulumi:"indexConfigs"`
	// The location of the bucket.
	Location string `pulumi:"location"`
	// Whether the bucket is locked. The retention period on a locked bucket cannot be changed. Locked buckets may only be
	// deleted if they are empty.
	Locked                       *bool   `pulumi:"locked"`
	LoggingProjectBucketConfigId *string `pulumi:"loggingProjectBucketConfigId"`
	// The parent project that contains the logging bucket.
	Project string `pulumi:"project"`
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum
	// retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be
	// used.
	RetentionDays *float64 `pulumi:"retentionDays"`
}

// The set of arguments for constructing a LoggingProjectBucketConfig resource.
type LoggingProjectBucketConfigArgs struct {
	// The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
	BucketId pulumi.StringInput
	// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
	// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
	// updating the log bucket. Changing the KMS key is allowed.
	CmekSettings LoggingProjectBucketConfigCmekSettingsPtrInput
	// An optional description for this bucket.
	Description pulumi.StringPtrInput
	// Enable log analytics for the bucket. Cannot be disabled once enabled.
	EnableAnalytics pulumi.BoolPtrInput
	// A list of indexed fields and related configuration data.
	IndexConfigs LoggingProjectBucketConfigIndexConfigArrayInput
	// The location of the bucket.
	Location pulumi.StringInput
	// Whether the bucket is locked. The retention period on a locked bucket cannot be changed. Locked buckets may only be
	// deleted if they are empty.
	Locked                       pulumi.BoolPtrInput
	LoggingProjectBucketConfigId pulumi.StringPtrInput
	// The parent project that contains the logging bucket.
	Project pulumi.StringInput
	// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum
	// retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be
	// used.
	RetentionDays pulumi.Float64PtrInput
}

func (LoggingProjectBucketConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingProjectBucketConfigArgs)(nil)).Elem()
}

type LoggingProjectBucketConfigInput interface {
	pulumi.Input

	ToLoggingProjectBucketConfigOutput() LoggingProjectBucketConfigOutput
	ToLoggingProjectBucketConfigOutputWithContext(ctx context.Context) LoggingProjectBucketConfigOutput
}

func (*LoggingProjectBucketConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingProjectBucketConfig)(nil)).Elem()
}

func (i *LoggingProjectBucketConfig) ToLoggingProjectBucketConfigOutput() LoggingProjectBucketConfigOutput {
	return i.ToLoggingProjectBucketConfigOutputWithContext(context.Background())
}

func (i *LoggingProjectBucketConfig) ToLoggingProjectBucketConfigOutputWithContext(ctx context.Context) LoggingProjectBucketConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingProjectBucketConfigOutput)
}

type LoggingProjectBucketConfigOutput struct{ *pulumi.OutputState }

func (LoggingProjectBucketConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingProjectBucketConfig)(nil)).Elem()
}

func (o LoggingProjectBucketConfigOutput) ToLoggingProjectBucketConfigOutput() LoggingProjectBucketConfigOutput {
	return o
}

func (o LoggingProjectBucketConfigOutput) ToLoggingProjectBucketConfigOutputWithContext(ctx context.Context) LoggingProjectBucketConfigOutput {
	return o
}

// The name of the logging bucket. Logging automatically creates two log buckets: _Required and _Default.
func (o LoggingProjectBucketConfigOutput) BucketId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.StringOutput { return v.BucketId }).(pulumi.StringOutput)
}

// The CMEK settings of the log bucket. If present, new log entries written to this log bucket are encrypted using the CMEK
// key provided in this configuration. If a log bucket has CMEK settings, the CMEK settings cannot be disabled later by
// updating the log bucket. Changing the KMS key is allowed.
func (o LoggingProjectBucketConfigOutput) CmekSettings() LoggingProjectBucketConfigCmekSettingsPtrOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) LoggingProjectBucketConfigCmekSettingsPtrOutput {
		return v.CmekSettings
	}).(LoggingProjectBucketConfigCmekSettingsPtrOutput)
}

// An optional description for this bucket.
func (o LoggingProjectBucketConfigOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Enable log analytics for the bucket. Cannot be disabled once enabled.
func (o LoggingProjectBucketConfigOutput) EnableAnalytics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.BoolPtrOutput { return v.EnableAnalytics }).(pulumi.BoolPtrOutput)
}

// A list of indexed fields and related configuration data.
func (o LoggingProjectBucketConfigOutput) IndexConfigs() LoggingProjectBucketConfigIndexConfigArrayOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) LoggingProjectBucketConfigIndexConfigArrayOutput {
		return v.IndexConfigs
	}).(LoggingProjectBucketConfigIndexConfigArrayOutput)
}

// The bucket's lifecycle such as active or deleted.
func (o LoggingProjectBucketConfigOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.StringOutput { return v.LifecycleState }).(pulumi.StringOutput)
}

// The location of the bucket.
func (o LoggingProjectBucketConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Whether the bucket is locked. The retention period on a locked bucket cannot be changed. Locked buckets may only be
// deleted if they are empty.
func (o LoggingProjectBucketConfigOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.BoolPtrOutput { return v.Locked }).(pulumi.BoolPtrOutput)
}

func (o LoggingProjectBucketConfigOutput) LoggingProjectBucketConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.StringOutput { return v.LoggingProjectBucketConfigId }).(pulumi.StringOutput)
}

// The resource name of the bucket
func (o LoggingProjectBucketConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The parent project that contains the logging bucket.
func (o LoggingProjectBucketConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Logs will be retained by default for this amount of time, after which they will automatically be deleted. The minimum
// retention period is 1 day. If this value is set to zero at bucket creation time, the default time of 30 days will be
// used.
func (o LoggingProjectBucketConfigOutput) RetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *LoggingProjectBucketConfig) pulumi.Float64PtrOutput { return v.RetentionDays }).(pulumi.Float64PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingProjectBucketConfigInput)(nil)).Elem(), &LoggingProjectBucketConfig{})
	pulumi.RegisterOutputType(LoggingProjectBucketConfigOutput{})
}
