// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecretManagerSecret struct {
	pulumi.CustomResourceState

	// Custom metadata about the secret. Annotations are distinct from various forms of labels. Annotations exist to allow
	// client tools to store their own state information without requiring a database. Annotation keys must be between 1 and 63
	// characters long, have a UTF-8 encoding of maximum 128 bytes, begin and end with an alphanumeric character ([a-z0-9A-Z]),
	// and may have dashes (-), underscores (_), dots (.), and alphanumerics in between these symbols. The total size of
	// annotation keys and values must be less than 16KiB. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// The time at which the Secret was created.
	CreateTime           pulumi.StringOutput    `pulumi:"createTime"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Timestamp in UTC when the Secret is scheduled to expire. This is always provided on output, regardless of what was sent
	// on input. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z". Only one of 'expire_time' or 'ttl' can be
	// provided.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// The labels assigned to this Secret. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The resource name of the Secret. Format: 'projects/{{project}}/secrets/{{secret_id}}'
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The replication policy of the secret data attached to the Secret. It cannot be changed after the Secret has been
	// created.
	Replication SecretManagerSecretReplicationOutput `pulumi:"replication"`
	// The rotation time and period for a Secret. At 'next_rotation_time', Secret Manager will send a Pub/Sub notification to
	// the topics configured on the Secret. 'topics' must be set to configure rotation.
	Rotation SecretManagerSecretRotationPtrOutput `pulumi:"rotation"`
	// This must be unique within the project.
	SecretId              pulumi.StringOutput `pulumi:"secretId"`
	SecretManagerSecretId pulumi.StringOutput `pulumi:"secretManagerSecretId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput               `pulumi:"terraformLabels"`
	Timeouts        SecretManagerSecretTimeoutsPtrOutput `pulumi:"timeouts"`
	// A list of up to 10 Pub/Sub topics to which messages are published when control plane operations are called on the secret
	// or its versions.
	Topics SecretManagerSecretTopicArrayOutput `pulumi:"topics"`
	// The TTL for the Secret. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	// Only one of 'ttl' or 'expire_time' can be provided.
	Ttl pulumi.StringPtrOutput `pulumi:"ttl"`
	// Mapping from version alias to version name. A version alias is a string with a maximum length of 63 characters and can
	// contain uppercase and lowercase letters, numerals, and the hyphen (-) and underscore ('_') characters. An alias string
	// must start with a letter and cannot be the string 'latest' or 'NEW'. No more than 50 aliases can be assigned to a given
	// secret. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	VersionAliases pulumi.StringMapOutput `pulumi:"versionAliases"`
	// Secret Version TTL after destruction request. This is a part of the delayed delete feature on Secret Version. For secret
	// with versionDestroyTtl>0, version destruction doesn't happen immediately on calling destroy instead the version goes to
	// a disabled state and the actual destruction happens after this TTL expires.
	VersionDestroyTtl pulumi.StringPtrOutput `pulumi:"versionDestroyTtl"`
}

// NewSecretManagerSecret registers a new resource with the given unique name, arguments, and options.
func NewSecretManagerSecret(ctx *pulumi.Context,
	name string, args *SecretManagerSecretArgs, opts ...pulumi.ResourceOption) (*SecretManagerSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Replication == nil {
		return nil, errors.New("invalid value for required argument 'Replication'")
	}
	if args.SecretId == nil {
		return nil, errors.New("invalid value for required argument 'SecretId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SecretManagerSecret
	err = ctx.RegisterPackageResource("google:index/secretManagerSecret:SecretManagerSecret", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretManagerSecret gets an existing SecretManagerSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretManagerSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretManagerSecretState, opts ...pulumi.ResourceOption) (*SecretManagerSecret, error) {
	var resource SecretManagerSecret
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/secretManagerSecret:SecretManagerSecret", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretManagerSecret resources.
type secretManagerSecretState struct {
	// Custom metadata about the secret. Annotations are distinct from various forms of labels. Annotations exist to allow
	// client tools to store their own state information without requiring a database. Annotation keys must be between 1 and 63
	// characters long, have a UTF-8 encoding of maximum 128 bytes, begin and end with an alphanumeric character ([a-z0-9A-Z]),
	// and may have dashes (-), underscores (_), dots (.), and alphanumerics in between these symbols. The total size of
	// annotation keys and values must be less than 16KiB. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// The time at which the Secret was created.
	CreateTime           *string           `pulumi:"createTime"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// Timestamp in UTC when the Secret is scheduled to expire. This is always provided on output, regardless of what was sent
	// on input. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z". Only one of 'expire_time' or 'ttl' can be
	// provided.
	ExpireTime *string `pulumi:"expireTime"`
	// The labels assigned to this Secret. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The resource name of the Secret. Format: 'projects/{{project}}/secrets/{{secret_id}}'
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The replication policy of the secret data attached to the Secret. It cannot be changed after the Secret has been
	// created.
	Replication *SecretManagerSecretReplication `pulumi:"replication"`
	// The rotation time and period for a Secret. At 'next_rotation_time', Secret Manager will send a Pub/Sub notification to
	// the topics configured on the Secret. 'topics' must be set to configure rotation.
	Rotation *SecretManagerSecretRotation `pulumi:"rotation"`
	// This must be unique within the project.
	SecretId              *string `pulumi:"secretId"`
	SecretManagerSecretId *string `pulumi:"secretManagerSecretId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string            `pulumi:"terraformLabels"`
	Timeouts        *SecretManagerSecretTimeouts `pulumi:"timeouts"`
	// A list of up to 10 Pub/Sub topics to which messages are published when control plane operations are called on the secret
	// or its versions.
	Topics []SecretManagerSecretTopic `pulumi:"topics"`
	// The TTL for the Secret. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	// Only one of 'ttl' or 'expire_time' can be provided.
	Ttl *string `pulumi:"ttl"`
	// Mapping from version alias to version name. A version alias is a string with a maximum length of 63 characters and can
	// contain uppercase and lowercase letters, numerals, and the hyphen (-) and underscore ('_') characters. An alias string
	// must start with a letter and cannot be the string 'latest' or 'NEW'. No more than 50 aliases can be assigned to a given
	// secret. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	VersionAliases map[string]string `pulumi:"versionAliases"`
	// Secret Version TTL after destruction request. This is a part of the delayed delete feature on Secret Version. For secret
	// with versionDestroyTtl>0, version destruction doesn't happen immediately on calling destroy instead the version goes to
	// a disabled state and the actual destruction happens after this TTL expires.
	VersionDestroyTtl *string `pulumi:"versionDestroyTtl"`
}

type SecretManagerSecretState struct {
	// Custom metadata about the secret. Annotations are distinct from various forms of labels. Annotations exist to allow
	// client tools to store their own state information without requiring a database. Annotation keys must be between 1 and 63
	// characters long, have a UTF-8 encoding of maximum 128 bytes, begin and end with an alphanumeric character ([a-z0-9A-Z]),
	// and may have dashes (-), underscores (_), dots (.), and alphanumerics in between these symbols. The total size of
	// annotation keys and values must be less than 16KiB. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations pulumi.StringMapInput
	// The time at which the Secret was created.
	CreateTime           pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// Timestamp in UTC when the Secret is scheduled to expire. This is always provided on output, regardless of what was sent
	// on input. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z". Only one of 'expire_time' or 'ttl' can be
	// provided.
	ExpireTime pulumi.StringPtrInput
	// The labels assigned to this Secret. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The resource name of the Secret. Format: 'projects/{{project}}/secrets/{{secret_id}}'
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The replication policy of the secret data attached to the Secret. It cannot be changed after the Secret has been
	// created.
	Replication SecretManagerSecretReplicationPtrInput
	// The rotation time and period for a Secret. At 'next_rotation_time', Secret Manager will send a Pub/Sub notification to
	// the topics configured on the Secret. 'topics' must be set to configure rotation.
	Rotation SecretManagerSecretRotationPtrInput
	// This must be unique within the project.
	SecretId              pulumi.StringPtrInput
	SecretManagerSecretId pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        SecretManagerSecretTimeoutsPtrInput
	// A list of up to 10 Pub/Sub topics to which messages are published when control plane operations are called on the secret
	// or its versions.
	Topics SecretManagerSecretTopicArrayInput
	// The TTL for the Secret. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	// Only one of 'ttl' or 'expire_time' can be provided.
	Ttl pulumi.StringPtrInput
	// Mapping from version alias to version name. A version alias is a string with a maximum length of 63 characters and can
	// contain uppercase and lowercase letters, numerals, and the hyphen (-) and underscore ('_') characters. An alias string
	// must start with a letter and cannot be the string 'latest' or 'NEW'. No more than 50 aliases can be assigned to a given
	// secret. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	VersionAliases pulumi.StringMapInput
	// Secret Version TTL after destruction request. This is a part of the delayed delete feature on Secret Version. For secret
	// with versionDestroyTtl>0, version destruction doesn't happen immediately on calling destroy instead the version goes to
	// a disabled state and the actual destruction happens after this TTL expires.
	VersionDestroyTtl pulumi.StringPtrInput
}

func (SecretManagerSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretManagerSecretState)(nil)).Elem()
}

type secretManagerSecretArgs struct {
	// Custom metadata about the secret. Annotations are distinct from various forms of labels. Annotations exist to allow
	// client tools to store their own state information without requiring a database. Annotation keys must be between 1 and 63
	// characters long, have a UTF-8 encoding of maximum 128 bytes, begin and end with an alphanumeric character ([a-z0-9A-Z]),
	// and may have dashes (-), underscores (_), dots (.), and alphanumerics in between these symbols. The total size of
	// annotation keys and values must be less than 16KiB. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Timestamp in UTC when the Secret is scheduled to expire. This is always provided on output, regardless of what was sent
	// on input. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z". Only one of 'expire_time' or 'ttl' can be
	// provided.
	ExpireTime *string `pulumi:"expireTime"`
	// The labels assigned to this Secret. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels  map[string]string `pulumi:"labels"`
	Project *string           `pulumi:"project"`
	// The replication policy of the secret data attached to the Secret. It cannot be changed after the Secret has been
	// created.
	Replication SecretManagerSecretReplication `pulumi:"replication"`
	// The rotation time and period for a Secret. At 'next_rotation_time', Secret Manager will send a Pub/Sub notification to
	// the topics configured on the Secret. 'topics' must be set to configure rotation.
	Rotation *SecretManagerSecretRotation `pulumi:"rotation"`
	// This must be unique within the project.
	SecretId              string                       `pulumi:"secretId"`
	SecretManagerSecretId *string                      `pulumi:"secretManagerSecretId"`
	Timeouts              *SecretManagerSecretTimeouts `pulumi:"timeouts"`
	// A list of up to 10 Pub/Sub topics to which messages are published when control plane operations are called on the secret
	// or its versions.
	Topics []SecretManagerSecretTopic `pulumi:"topics"`
	// The TTL for the Secret. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	// Only one of 'ttl' or 'expire_time' can be provided.
	Ttl *string `pulumi:"ttl"`
	// Mapping from version alias to version name. A version alias is a string with a maximum length of 63 characters and can
	// contain uppercase and lowercase letters, numerals, and the hyphen (-) and underscore ('_') characters. An alias string
	// must start with a letter and cannot be the string 'latest' or 'NEW'. No more than 50 aliases can be assigned to a given
	// secret. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	VersionAliases map[string]string `pulumi:"versionAliases"`
	// Secret Version TTL after destruction request. This is a part of the delayed delete feature on Secret Version. For secret
	// with versionDestroyTtl>0, version destruction doesn't happen immediately on calling destroy instead the version goes to
	// a disabled state and the actual destruction happens after this TTL expires.
	VersionDestroyTtl *string `pulumi:"versionDestroyTtl"`
}

// The set of arguments for constructing a SecretManagerSecret resource.
type SecretManagerSecretArgs struct {
	// Custom metadata about the secret. Annotations are distinct from various forms of labels. Annotations exist to allow
	// client tools to store their own state information without requiring a database. Annotation keys must be between 1 and 63
	// characters long, have a UTF-8 encoding of maximum 128 bytes, begin and end with an alphanumeric character ([a-z0-9A-Z]),
	// and may have dashes (-), underscores (_), dots (.), and alphanumerics in between these symbols. The total size of
	// annotation keys and values must be less than 16KiB. An object containing a list of "key": value pairs. Example: {
	// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations pulumi.StringMapInput
	// Timestamp in UTC when the Secret is scheduled to expire. This is always provided on output, regardless of what was sent
	// on input. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
	// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z". Only one of 'expire_time' or 'ttl' can be
	// provided.
	ExpireTime pulumi.StringPtrInput
	// The labels assigned to this Secret. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
	// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
	// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
	// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
	// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
	// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels  pulumi.StringMapInput
	Project pulumi.StringPtrInput
	// The replication policy of the secret data attached to the Secret. It cannot be changed after the Secret has been
	// created.
	Replication SecretManagerSecretReplicationInput
	// The rotation time and period for a Secret. At 'next_rotation_time', Secret Manager will send a Pub/Sub notification to
	// the topics configured on the Secret. 'topics' must be set to configure rotation.
	Rotation SecretManagerSecretRotationPtrInput
	// This must be unique within the project.
	SecretId              pulumi.StringInput
	SecretManagerSecretId pulumi.StringPtrInput
	Timeouts              SecretManagerSecretTimeoutsPtrInput
	// A list of up to 10 Pub/Sub topics to which messages are published when control plane operations are called on the secret
	// or its versions.
	Topics SecretManagerSecretTopicArrayInput
	// The TTL for the Secret. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
	// Only one of 'ttl' or 'expire_time' can be provided.
	Ttl pulumi.StringPtrInput
	// Mapping from version alias to version name. A version alias is a string with a maximum length of 63 characters and can
	// contain uppercase and lowercase letters, numerals, and the hyphen (-) and underscore ('_') characters. An alias string
	// must start with a letter and cannot be the string 'latest' or 'NEW'. No more than 50 aliases can be assigned to a given
	// secret. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
	VersionAliases pulumi.StringMapInput
	// Secret Version TTL after destruction request. This is a part of the delayed delete feature on Secret Version. For secret
	// with versionDestroyTtl>0, version destruction doesn't happen immediately on calling destroy instead the version goes to
	// a disabled state and the actual destruction happens after this TTL expires.
	VersionDestroyTtl pulumi.StringPtrInput
}

func (SecretManagerSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretManagerSecretArgs)(nil)).Elem()
}

type SecretManagerSecretInput interface {
	pulumi.Input

	ToSecretManagerSecretOutput() SecretManagerSecretOutput
	ToSecretManagerSecretOutputWithContext(ctx context.Context) SecretManagerSecretOutput
}

func (*SecretManagerSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretManagerSecret)(nil)).Elem()
}

func (i *SecretManagerSecret) ToSecretManagerSecretOutput() SecretManagerSecretOutput {
	return i.ToSecretManagerSecretOutputWithContext(context.Background())
}

func (i *SecretManagerSecret) ToSecretManagerSecretOutputWithContext(ctx context.Context) SecretManagerSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretManagerSecretOutput)
}

type SecretManagerSecretOutput struct{ *pulumi.OutputState }

func (SecretManagerSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretManagerSecret)(nil)).Elem()
}

func (o SecretManagerSecretOutput) ToSecretManagerSecretOutput() SecretManagerSecretOutput {
	return o
}

func (o SecretManagerSecretOutput) ToSecretManagerSecretOutputWithContext(ctx context.Context) SecretManagerSecretOutput {
	return o
}

// Custom metadata about the secret. Annotations are distinct from various forms of labels. Annotations exist to allow
// client tools to store their own state information without requiring a database. Annotation keys must be between 1 and 63
// characters long, have a UTF-8 encoding of maximum 128 bytes, begin and end with an alphanumeric character ([a-z0-9A-Z]),
// and may have dashes (-), underscores (_), dots (.), and alphanumerics in between these symbols. The total size of
// annotation keys and values must be less than 16KiB. An object containing a list of "key": value pairs. Example: {
// "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the
// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
// present on the resource.
func (o SecretManagerSecretOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// The time at which the Secret was created.
func (o SecretManagerSecretOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o SecretManagerSecretOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o SecretManagerSecretOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Timestamp in UTC when the Secret is scheduled to expire. This is always provided on output, regardless of what was sent
// on input. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
// Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z". Only one of 'expire_time' or 'ttl' can be
// provided.
func (o SecretManagerSecretOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// The labels assigned to this Secret. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of
// maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}][\p{Ll}\p{Lo}\p{N}_-]{0,62}
// Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to
// the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be assigned to a given
// resource. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3"
// }. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
// refer to the field 'effective_labels' for all of the labels present on the resource.
func (o SecretManagerSecretOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The resource name of the Secret. Format: 'projects/{{project}}/secrets/{{secret_id}}'
func (o SecretManagerSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SecretManagerSecretOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The replication policy of the secret data attached to the Secret. It cannot be changed after the Secret has been
// created.
func (o SecretManagerSecretOutput) Replication() SecretManagerSecretReplicationOutput {
	return o.ApplyT(func(v *SecretManagerSecret) SecretManagerSecretReplicationOutput { return v.Replication }).(SecretManagerSecretReplicationOutput)
}

// The rotation time and period for a Secret. At 'next_rotation_time', Secret Manager will send a Pub/Sub notification to
// the topics configured on the Secret. 'topics' must be set to configure rotation.
func (o SecretManagerSecretOutput) Rotation() SecretManagerSecretRotationPtrOutput {
	return o.ApplyT(func(v *SecretManagerSecret) SecretManagerSecretRotationPtrOutput { return v.Rotation }).(SecretManagerSecretRotationPtrOutput)
}

// This must be unique within the project.
func (o SecretManagerSecretOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringOutput { return v.SecretId }).(pulumi.StringOutput)
}

func (o SecretManagerSecretOutput) SecretManagerSecretId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringOutput { return v.SecretManagerSecretId }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o SecretManagerSecretOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o SecretManagerSecretOutput) Timeouts() SecretManagerSecretTimeoutsPtrOutput {
	return o.ApplyT(func(v *SecretManagerSecret) SecretManagerSecretTimeoutsPtrOutput { return v.Timeouts }).(SecretManagerSecretTimeoutsPtrOutput)
}

// A list of up to 10 Pub/Sub topics to which messages are published when control plane operations are called on the secret
// or its versions.
func (o SecretManagerSecretOutput) Topics() SecretManagerSecretTopicArrayOutput {
	return o.ApplyT(func(v *SecretManagerSecret) SecretManagerSecretTopicArrayOutput { return v.Topics }).(SecretManagerSecretTopicArrayOutput)
}

// The TTL for the Secret. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
// Only one of 'ttl' or 'expire_time' can be provided.
func (o SecretManagerSecretOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringPtrOutput { return v.Ttl }).(pulumi.StringPtrOutput)
}

// Mapping from version alias to version name. A version alias is a string with a maximum length of 63 characters and can
// contain uppercase and lowercase letters, numerals, and the hyphen (-) and underscore ('_') characters. An alias string
// must start with a letter and cannot be the string 'latest' or 'NEW'. No more than 50 aliases can be assigned to a given
// secret. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
func (o SecretManagerSecretOutput) VersionAliases() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringMapOutput { return v.VersionAliases }).(pulumi.StringMapOutput)
}

// Secret Version TTL after destruction request. This is a part of the delayed delete feature on Secret Version. For secret
// with versionDestroyTtl>0, version destruction doesn't happen immediately on calling destroy instead the version goes to
// a disabled state and the actual destruction happens after this TTL expires.
func (o SecretManagerSecretOutput) VersionDestroyTtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretManagerSecret) pulumi.StringPtrOutput { return v.VersionDestroyTtl }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretManagerSecretInput)(nil)).Elem(), &SecretManagerSecret{})
	pulumi.RegisterOutputType(SecretManagerSecretOutput{})
}
