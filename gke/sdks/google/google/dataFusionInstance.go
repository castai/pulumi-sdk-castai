// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataFusionInstance struct {
	pulumi.CustomResourceState

	Accelerators DataFusionInstanceAcceleratorArrayOutput `pulumi:"accelerators"`
	// Endpoint on which the REST APIs is accessible.
	ApiEndpoint pulumi.StringOutput `pulumi:"apiEndpoint"`
	// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
	CryptoKeyConfig      DataFusionInstanceCryptoKeyConfigPtrOutput `pulumi:"cryptoKeyConfig"`
	DataFusionInstanceId pulumi.StringOutput                        `pulumi:"dataFusionInstanceId"`
	// User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing
	// pipelines.
	DataprocServiceAccount pulumi.StringPtrOutput `pulumi:"dataprocServiceAccount"`
	// An optional description of the instance.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Display name for an instance.
	DisplayName     pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Option to enable granular role-based access control.
	EnableRbac pulumi.BoolPtrOutput `pulumi:"enableRbac"`
	// Option to enable Stackdriver Logging.
	EnableStackdriverLogging pulumi.BoolPtrOutput `pulumi:"enableStackdriverLogging"`
	// Option to enable Stackdriver Monitoring.
	EnableStackdriverMonitoring pulumi.BoolPtrOutput `pulumi:"enableStackdriverMonitoring"`
	// Option to enable and pass metadata for event publishing.
	EventPublishConfig DataFusionInstanceEventPublishConfigPtrOutput `pulumi:"eventPublishConfig"`
	// Cloud Storage bucket generated by Data Fusion in the customer project.
	GcsBucket pulumi.StringOutput `pulumi:"gcsBucket"`
	// The resource labels for instance to use to annotate any related underlying resources, such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The ID of the instance or a fully qualified identifier for the instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// Network configuration options. These are required when a private Data Fusion instance is to be created.
	NetworkConfig DataFusionInstanceNetworkConfigPtrOutput `pulumi:"networkConfig"`
	// Map of additional options used to configure the behavior of Data Fusion instance.
	Options pulumi.StringMapOutput `pulumi:"options"`
	// P4 service account for the customer project.
	P4ServiceAccount pulumi.StringOutput `pulumi:"p4ServiceAccount"`
	// Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP
	// addresses and will not be able to access the public internet.
	PrivateInstance pulumi.BoolPtrOutput `pulumi:"privateInstance"`
	Project         pulumi.StringOutput  `pulumi:"project"`
	// The region of the Data Fusion instance.
	Region pulumi.StringOutput `pulumi:"region"`
	// Endpoint on which the Data Fusion UI and REST APIs are accessible.
	ServiceEndpoint pulumi.StringOutput `pulumi:"serviceEndpoint"`
	// The current state of this Data Fusion instance. - CREATING: Instance is being created - RUNNING: Instance is running and
	// ready for requests - FAILED: Instance creation failed - DELETING: Instance is being deleted - UPGRADING: Instance is
	// being upgraded - RESTARTING: Instance is being restarted
	State pulumi.StringOutput `pulumi:"state"`
	// Additional information about the current state of this Data Fusion instance if available.
	StateMessage pulumi.StringOutput `pulumi:"stateMessage"`
	// The name of the tenant project.
	TenantProjectId pulumi.StringOutput `pulumi:"tenantProjectId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput              `pulumi:"terraformLabels"`
	Timeouts        DataFusionInstanceTimeoutsPtrOutput `pulumi:"timeouts"`
	// Represents the type of Data Fusion instance. Each type is configured with the default settings for processing and
	// memory. - BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines using point
	// and click UI. However, there are certain limitations, such as fewer number of concurrent pipelines, no support for
	// streaming pipelines, etc. - ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more
	// features available, such as support for streaming pipelines, higher number of concurrent pipelines, etc. - DEVELOPER:
	// Developer Data Fusion instance. In Developer type, the user will have all features available but with restrictive
	// capabilities. This is to help enterprises design and develop their data ingestion and integration pipelines at low cost.
	// Possible values: ["BASIC", "ENTERPRISE", "DEVELOPER"]
	Type pulumi.StringOutput `pulumi:"type"`
	// The time the instance was last updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Current version of the Data Fusion.
	Version pulumi.StringOutput `pulumi:"version"`
	// Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewDataFusionInstance registers a new resource with the given unique name, arguments, and options.
func NewDataFusionInstance(ctx *pulumi.Context,
	name string, args *DataFusionInstanceArgs, opts ...pulumi.ResourceOption) (*DataFusionInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataFusionInstance
	err = ctx.RegisterPackageResource("google:index/dataFusionInstance:DataFusionInstance", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataFusionInstance gets an existing DataFusionInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataFusionInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataFusionInstanceState, opts ...pulumi.ResourceOption) (*DataFusionInstance, error) {
	var resource DataFusionInstance
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataFusionInstance:DataFusionInstance", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataFusionInstance resources.
type dataFusionInstanceState struct {
	Accelerators []DataFusionInstanceAccelerator `pulumi:"accelerators"`
	// Endpoint on which the REST APIs is accessible.
	ApiEndpoint *string `pulumi:"apiEndpoint"`
	// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	CreateTime *string `pulumi:"createTime"`
	// The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
	CryptoKeyConfig      *DataFusionInstanceCryptoKeyConfig `pulumi:"cryptoKeyConfig"`
	DataFusionInstanceId *string                            `pulumi:"dataFusionInstanceId"`
	// User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing
	// pipelines.
	DataprocServiceAccount *string `pulumi:"dataprocServiceAccount"`
	// An optional description of the instance.
	Description *string `pulumi:"description"`
	// Display name for an instance.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Option to enable granular role-based access control.
	EnableRbac *bool `pulumi:"enableRbac"`
	// Option to enable Stackdriver Logging.
	EnableStackdriverLogging *bool `pulumi:"enableStackdriverLogging"`
	// Option to enable Stackdriver Monitoring.
	EnableStackdriverMonitoring *bool `pulumi:"enableStackdriverMonitoring"`
	// Option to enable and pass metadata for event publishing.
	EventPublishConfig *DataFusionInstanceEventPublishConfig `pulumi:"eventPublishConfig"`
	// Cloud Storage bucket generated by Data Fusion in the customer project.
	GcsBucket *string `pulumi:"gcsBucket"`
	// The resource labels for instance to use to annotate any related underlying resources, such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The ID of the instance or a fully qualified identifier for the instance.
	Name *string `pulumi:"name"`
	// Network configuration options. These are required when a private Data Fusion instance is to be created.
	NetworkConfig *DataFusionInstanceNetworkConfig `pulumi:"networkConfig"`
	// Map of additional options used to configure the behavior of Data Fusion instance.
	Options map[string]string `pulumi:"options"`
	// P4 service account for the customer project.
	P4ServiceAccount *string `pulumi:"p4ServiceAccount"`
	// Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP
	// addresses and will not be able to access the public internet.
	PrivateInstance *bool   `pulumi:"privateInstance"`
	Project         *string `pulumi:"project"`
	// The region of the Data Fusion instance.
	Region *string `pulumi:"region"`
	// Endpoint on which the Data Fusion UI and REST APIs are accessible.
	ServiceEndpoint *string `pulumi:"serviceEndpoint"`
	// The current state of this Data Fusion instance. - CREATING: Instance is being created - RUNNING: Instance is running and
	// ready for requests - FAILED: Instance creation failed - DELETING: Instance is being deleted - UPGRADING: Instance is
	// being upgraded - RESTARTING: Instance is being restarted
	State *string `pulumi:"state"`
	// Additional information about the current state of this Data Fusion instance if available.
	StateMessage *string `pulumi:"stateMessage"`
	// The name of the tenant project.
	TenantProjectId *string `pulumi:"tenantProjectId"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string           `pulumi:"terraformLabels"`
	Timeouts        *DataFusionInstanceTimeouts `pulumi:"timeouts"`
	// Represents the type of Data Fusion instance. Each type is configured with the default settings for processing and
	// memory. - BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines using point
	// and click UI. However, there are certain limitations, such as fewer number of concurrent pipelines, no support for
	// streaming pipelines, etc. - ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more
	// features available, such as support for streaming pipelines, higher number of concurrent pipelines, etc. - DEVELOPER:
	// Developer Data Fusion instance. In Developer type, the user will have all features available but with restrictive
	// capabilities. This is to help enterprises design and develop their data ingestion and integration pipelines at low cost.
	// Possible values: ["BASIC", "ENTERPRISE", "DEVELOPER"]
	Type *string `pulumi:"type"`
	// The time the instance was last updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	UpdateTime *string `pulumi:"updateTime"`
	// Current version of the Data Fusion.
	Version *string `pulumi:"version"`
	// Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
	Zone *string `pulumi:"zone"`
}

type DataFusionInstanceState struct {
	Accelerators DataFusionInstanceAcceleratorArrayInput
	// Endpoint on which the REST APIs is accessible.
	ApiEndpoint pulumi.StringPtrInput
	// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	CreateTime pulumi.StringPtrInput
	// The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
	CryptoKeyConfig      DataFusionInstanceCryptoKeyConfigPtrInput
	DataFusionInstanceId pulumi.StringPtrInput
	// User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing
	// pipelines.
	DataprocServiceAccount pulumi.StringPtrInput
	// An optional description of the instance.
	Description pulumi.StringPtrInput
	// Display name for an instance.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Option to enable granular role-based access control.
	EnableRbac pulumi.BoolPtrInput
	// Option to enable Stackdriver Logging.
	EnableStackdriverLogging pulumi.BoolPtrInput
	// Option to enable Stackdriver Monitoring.
	EnableStackdriverMonitoring pulumi.BoolPtrInput
	// Option to enable and pass metadata for event publishing.
	EventPublishConfig DataFusionInstanceEventPublishConfigPtrInput
	// Cloud Storage bucket generated by Data Fusion in the customer project.
	GcsBucket pulumi.StringPtrInput
	// The resource labels for instance to use to annotate any related underlying resources, such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The ID of the instance or a fully qualified identifier for the instance.
	Name pulumi.StringPtrInput
	// Network configuration options. These are required when a private Data Fusion instance is to be created.
	NetworkConfig DataFusionInstanceNetworkConfigPtrInput
	// Map of additional options used to configure the behavior of Data Fusion instance.
	Options pulumi.StringMapInput
	// P4 service account for the customer project.
	P4ServiceAccount pulumi.StringPtrInput
	// Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP
	// addresses and will not be able to access the public internet.
	PrivateInstance pulumi.BoolPtrInput
	Project         pulumi.StringPtrInput
	// The region of the Data Fusion instance.
	Region pulumi.StringPtrInput
	// Endpoint on which the Data Fusion UI and REST APIs are accessible.
	ServiceEndpoint pulumi.StringPtrInput
	// The current state of this Data Fusion instance. - CREATING: Instance is being created - RUNNING: Instance is running and
	// ready for requests - FAILED: Instance creation failed - DELETING: Instance is being deleted - UPGRADING: Instance is
	// being upgraded - RESTARTING: Instance is being restarted
	State pulumi.StringPtrInput
	// Additional information about the current state of this Data Fusion instance if available.
	StateMessage pulumi.StringPtrInput
	// The name of the tenant project.
	TenantProjectId pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DataFusionInstanceTimeoutsPtrInput
	// Represents the type of Data Fusion instance. Each type is configured with the default settings for processing and
	// memory. - BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines using point
	// and click UI. However, there are certain limitations, such as fewer number of concurrent pipelines, no support for
	// streaming pipelines, etc. - ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more
	// features available, such as support for streaming pipelines, higher number of concurrent pipelines, etc. - DEVELOPER:
	// Developer Data Fusion instance. In Developer type, the user will have all features available but with restrictive
	// capabilities. This is to help enterprises design and develop their data ingestion and integration pipelines at low cost.
	// Possible values: ["BASIC", "ENTERPRISE", "DEVELOPER"]
	Type pulumi.StringPtrInput
	// The time the instance was last updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	UpdateTime pulumi.StringPtrInput
	// Current version of the Data Fusion.
	Version pulumi.StringPtrInput
	// Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
	Zone pulumi.StringPtrInput
}

func (DataFusionInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataFusionInstanceState)(nil)).Elem()
}

type dataFusionInstanceArgs struct {
	Accelerators []DataFusionInstanceAccelerator `pulumi:"accelerators"`
	// The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
	CryptoKeyConfig      *DataFusionInstanceCryptoKeyConfig `pulumi:"cryptoKeyConfig"`
	DataFusionInstanceId *string                            `pulumi:"dataFusionInstanceId"`
	// User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing
	// pipelines.
	DataprocServiceAccount *string `pulumi:"dataprocServiceAccount"`
	// An optional description of the instance.
	Description *string `pulumi:"description"`
	// Display name for an instance.
	DisplayName *string `pulumi:"displayName"`
	// Option to enable granular role-based access control.
	EnableRbac *bool `pulumi:"enableRbac"`
	// Option to enable Stackdriver Logging.
	EnableStackdriverLogging *bool `pulumi:"enableStackdriverLogging"`
	// Option to enable Stackdriver Monitoring.
	EnableStackdriverMonitoring *bool `pulumi:"enableStackdriverMonitoring"`
	// Option to enable and pass metadata for event publishing.
	EventPublishConfig *DataFusionInstanceEventPublishConfig `pulumi:"eventPublishConfig"`
	// The resource labels for instance to use to annotate any related underlying resources, such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The ID of the instance or a fully qualified identifier for the instance.
	Name *string `pulumi:"name"`
	// Network configuration options. These are required when a private Data Fusion instance is to be created.
	NetworkConfig *DataFusionInstanceNetworkConfig `pulumi:"networkConfig"`
	// Map of additional options used to configure the behavior of Data Fusion instance.
	Options map[string]string `pulumi:"options"`
	// Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP
	// addresses and will not be able to access the public internet.
	PrivateInstance *bool   `pulumi:"privateInstance"`
	Project         *string `pulumi:"project"`
	// The region of the Data Fusion instance.
	Region   *string                     `pulumi:"region"`
	Timeouts *DataFusionInstanceTimeouts `pulumi:"timeouts"`
	// Represents the type of Data Fusion instance. Each type is configured with the default settings for processing and
	// memory. - BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines using point
	// and click UI. However, there are certain limitations, such as fewer number of concurrent pipelines, no support for
	// streaming pipelines, etc. - ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more
	// features available, such as support for streaming pipelines, higher number of concurrent pipelines, etc. - DEVELOPER:
	// Developer Data Fusion instance. In Developer type, the user will have all features available but with restrictive
	// capabilities. This is to help enterprises design and develop their data ingestion and integration pipelines at low cost.
	// Possible values: ["BASIC", "ENTERPRISE", "DEVELOPER"]
	Type string `pulumi:"type"`
	// Current version of the Data Fusion.
	Version *string `pulumi:"version"`
	// Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a DataFusionInstance resource.
type DataFusionInstanceArgs struct {
	Accelerators DataFusionInstanceAcceleratorArrayInput
	// The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
	CryptoKeyConfig      DataFusionInstanceCryptoKeyConfigPtrInput
	DataFusionInstanceId pulumi.StringPtrInput
	// User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing
	// pipelines.
	DataprocServiceAccount pulumi.StringPtrInput
	// An optional description of the instance.
	Description pulumi.StringPtrInput
	// Display name for an instance.
	DisplayName pulumi.StringPtrInput
	// Option to enable granular role-based access control.
	EnableRbac pulumi.BoolPtrInput
	// Option to enable Stackdriver Logging.
	EnableStackdriverLogging pulumi.BoolPtrInput
	// Option to enable Stackdriver Monitoring.
	EnableStackdriverMonitoring pulumi.BoolPtrInput
	// Option to enable and pass metadata for event publishing.
	EventPublishConfig DataFusionInstanceEventPublishConfigPtrInput
	// The resource labels for instance to use to annotate any related underlying resources, such as Compute Engine VMs.
	// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
	// to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The ID of the instance or a fully qualified identifier for the instance.
	Name pulumi.StringPtrInput
	// Network configuration options. These are required when a private Data Fusion instance is to be created.
	NetworkConfig DataFusionInstanceNetworkConfigPtrInput
	// Map of additional options used to configure the behavior of Data Fusion instance.
	Options pulumi.StringMapInput
	// Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP
	// addresses and will not be able to access the public internet.
	PrivateInstance pulumi.BoolPtrInput
	Project         pulumi.StringPtrInput
	// The region of the Data Fusion instance.
	Region   pulumi.StringPtrInput
	Timeouts DataFusionInstanceTimeoutsPtrInput
	// Represents the type of Data Fusion instance. Each type is configured with the default settings for processing and
	// memory. - BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines using point
	// and click UI. However, there are certain limitations, such as fewer number of concurrent pipelines, no support for
	// streaming pipelines, etc. - ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more
	// features available, such as support for streaming pipelines, higher number of concurrent pipelines, etc. - DEVELOPER:
	// Developer Data Fusion instance. In Developer type, the user will have all features available but with restrictive
	// capabilities. This is to help enterprises design and develop their data ingestion and integration pipelines at low cost.
	// Possible values: ["BASIC", "ENTERPRISE", "DEVELOPER"]
	Type pulumi.StringInput
	// Current version of the Data Fusion.
	Version pulumi.StringPtrInput
	// Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
	Zone pulumi.StringPtrInput
}

func (DataFusionInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataFusionInstanceArgs)(nil)).Elem()
}

type DataFusionInstanceInput interface {
	pulumi.Input

	ToDataFusionInstanceOutput() DataFusionInstanceOutput
	ToDataFusionInstanceOutputWithContext(ctx context.Context) DataFusionInstanceOutput
}

func (*DataFusionInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFusionInstance)(nil)).Elem()
}

func (i *DataFusionInstance) ToDataFusionInstanceOutput() DataFusionInstanceOutput {
	return i.ToDataFusionInstanceOutputWithContext(context.Background())
}

func (i *DataFusionInstance) ToDataFusionInstanceOutputWithContext(ctx context.Context) DataFusionInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFusionInstanceOutput)
}

type DataFusionInstanceOutput struct{ *pulumi.OutputState }

func (DataFusionInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFusionInstance)(nil)).Elem()
}

func (o DataFusionInstanceOutput) ToDataFusionInstanceOutput() DataFusionInstanceOutput {
	return o
}

func (o DataFusionInstanceOutput) ToDataFusionInstanceOutputWithContext(ctx context.Context) DataFusionInstanceOutput {
	return o
}

func (o DataFusionInstanceOutput) Accelerators() DataFusionInstanceAcceleratorArrayOutput {
	return o.ApplyT(func(v *DataFusionInstance) DataFusionInstanceAcceleratorArrayOutput { return v.Accelerators }).(DataFusionInstanceAcceleratorArrayOutput)
}

// Endpoint on which the REST APIs is accessible.
func (o DataFusionInstanceOutput) ApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.ApiEndpoint }).(pulumi.StringOutput)
}

// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
func (o DataFusionInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
func (o DataFusionInstanceOutput) CryptoKeyConfig() DataFusionInstanceCryptoKeyConfigPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) DataFusionInstanceCryptoKeyConfigPtrOutput { return v.CryptoKeyConfig }).(DataFusionInstanceCryptoKeyConfigPtrOutput)
}

func (o DataFusionInstanceOutput) DataFusionInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.DataFusionInstanceId }).(pulumi.StringOutput)
}

// User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing
// pipelines.
func (o DataFusionInstanceOutput) DataprocServiceAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringPtrOutput { return v.DataprocServiceAccount }).(pulumi.StringPtrOutput)
}

// An optional description of the instance.
func (o DataFusionInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Display name for an instance.
func (o DataFusionInstanceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o DataFusionInstanceOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Option to enable granular role-based access control.
func (o DataFusionInstanceOutput) EnableRbac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.BoolPtrOutput { return v.EnableRbac }).(pulumi.BoolPtrOutput)
}

// Option to enable Stackdriver Logging.
func (o DataFusionInstanceOutput) EnableStackdriverLogging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.BoolPtrOutput { return v.EnableStackdriverLogging }).(pulumi.BoolPtrOutput)
}

// Option to enable Stackdriver Monitoring.
func (o DataFusionInstanceOutput) EnableStackdriverMonitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.BoolPtrOutput { return v.EnableStackdriverMonitoring }).(pulumi.BoolPtrOutput)
}

// Option to enable and pass metadata for event publishing.
func (o DataFusionInstanceOutput) EventPublishConfig() DataFusionInstanceEventPublishConfigPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) DataFusionInstanceEventPublishConfigPtrOutput { return v.EventPublishConfig }).(DataFusionInstanceEventPublishConfigPtrOutput)
}

// Cloud Storage bucket generated by Data Fusion in the customer project.
func (o DataFusionInstanceOutput) GcsBucket() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.GcsBucket }).(pulumi.StringOutput)
}

// The resource labels for instance to use to annotate any related underlying resources, such as Compute Engine VMs.
// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please refer
// to the field 'effective_labels' for all of the labels present on the resource.
func (o DataFusionInstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The ID of the instance or a fully qualified identifier for the instance.
func (o DataFusionInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network configuration options. These are required when a private Data Fusion instance is to be created.
func (o DataFusionInstanceOutput) NetworkConfig() DataFusionInstanceNetworkConfigPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) DataFusionInstanceNetworkConfigPtrOutput { return v.NetworkConfig }).(DataFusionInstanceNetworkConfigPtrOutput)
}

// Map of additional options used to configure the behavior of Data Fusion instance.
func (o DataFusionInstanceOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringMapOutput { return v.Options }).(pulumi.StringMapOutput)
}

// P4 service account for the customer project.
func (o DataFusionInstanceOutput) P4ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.P4ServiceAccount }).(pulumi.StringOutput)
}

// Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP
// addresses and will not be able to access the public internet.
func (o DataFusionInstanceOutput) PrivateInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.BoolPtrOutput { return v.PrivateInstance }).(pulumi.BoolPtrOutput)
}

func (o DataFusionInstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of the Data Fusion instance.
func (o DataFusionInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Endpoint on which the Data Fusion UI and REST APIs are accessible.
func (o DataFusionInstanceOutput) ServiceEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.ServiceEndpoint }).(pulumi.StringOutput)
}

// The current state of this Data Fusion instance. - CREATING: Instance is being created - RUNNING: Instance is running and
// ready for requests - FAILED: Instance creation failed - DELETING: Instance is being deleted - UPGRADING: Instance is
// being upgraded - RESTARTING: Instance is being restarted
func (o DataFusionInstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Additional information about the current state of this Data Fusion instance if available.
func (o DataFusionInstanceOutput) StateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.StateMessage }).(pulumi.StringOutput)
}

// The name of the tenant project.
func (o DataFusionInstanceOutput) TenantProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.TenantProjectId }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DataFusionInstanceOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DataFusionInstanceOutput) Timeouts() DataFusionInstanceTimeoutsPtrOutput {
	return o.ApplyT(func(v *DataFusionInstance) DataFusionInstanceTimeoutsPtrOutput { return v.Timeouts }).(DataFusionInstanceTimeoutsPtrOutput)
}

// Represents the type of Data Fusion instance. Each type is configured with the default settings for processing and
// memory. - BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines using point
// and click UI. However, there are certain limitations, such as fewer number of concurrent pipelines, no support for
// streaming pipelines, etc. - ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more
// features available, such as support for streaming pipelines, higher number of concurrent pipelines, etc. - DEVELOPER:
// Developer Data Fusion instance. In Developer type, the user will have all features available but with restrictive
// capabilities. This is to help enterprises design and develop their data ingestion and integration pipelines at low cost.
// Possible values: ["BASIC", "ENTERPRISE", "DEVELOPER"]
func (o DataFusionInstanceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The time the instance was last updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
func (o DataFusionInstanceOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Current version of the Data Fusion.
func (o DataFusionInstanceOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

// Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
func (o DataFusionInstanceOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstance) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataFusionInstanceInput)(nil)).Elem(), &DataFusionInstance{})
	pulumi.RegisterOutputType(DataFusionInstanceOutput{})
}
