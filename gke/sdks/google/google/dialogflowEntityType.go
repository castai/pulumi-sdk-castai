// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DialogflowEntityType struct {
	pulumi.CustomResourceState

	DialogflowEntityTypeId pulumi.StringOutput `pulumi:"dialogflowEntityTypeId"`
	// The name of this entity type to be displayed on the console.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolPtrOutput `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities DialogflowEntityTypeEntityArrayOutput `pulumi:"entities"`
	// Indicates the kind of entity type. * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference
	// value. * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
	// types can contain references to other entity types (with or without aliases). * KIND_REGEXP: Regexp entity types allow
	// to specify regular expressions in entries values. Possible values: ["KIND_MAP", "KIND_LIST", "KIND_REGEXP"]
	Kind pulumi.StringOutput `pulumi:"kind"`
	// The unique identifier of the entity type. Format: projects/<Project ID>/agent/entityTypes/<Entity type ID>.
	Name     pulumi.StringOutput                   `pulumi:"name"`
	Project  pulumi.StringOutput                   `pulumi:"project"`
	Timeouts DialogflowEntityTypeTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewDialogflowEntityType registers a new resource with the given unique name, arguments, and options.
func NewDialogflowEntityType(ctx *pulumi.Context,
	name string, args *DialogflowEntityTypeArgs, opts ...pulumi.ResourceOption) (*DialogflowEntityType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DialogflowEntityType
	err = ctx.RegisterPackageResource("google:index/dialogflowEntityType:DialogflowEntityType", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDialogflowEntityType gets an existing DialogflowEntityType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDialogflowEntityType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DialogflowEntityTypeState, opts ...pulumi.ResourceOption) (*DialogflowEntityType, error) {
	var resource DialogflowEntityType
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dialogflowEntityType:DialogflowEntityType", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DialogflowEntityType resources.
type dialogflowEntityTypeState struct {
	DialogflowEntityTypeId *string `pulumi:"dialogflowEntityTypeId"`
	// The name of this entity type to be displayed on the console.
	DisplayName *string `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction *bool `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities []DialogflowEntityTypeEntity `pulumi:"entities"`
	// Indicates the kind of entity type. * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference
	// value. * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
	// types can contain references to other entity types (with or without aliases). * KIND_REGEXP: Regexp entity types allow
	// to specify regular expressions in entries values. Possible values: ["KIND_MAP", "KIND_LIST", "KIND_REGEXP"]
	Kind *string `pulumi:"kind"`
	// The unique identifier of the entity type. Format: projects/<Project ID>/agent/entityTypes/<Entity type ID>.
	Name     *string                       `pulumi:"name"`
	Project  *string                       `pulumi:"project"`
	Timeouts *DialogflowEntityTypeTimeouts `pulumi:"timeouts"`
}

type DialogflowEntityTypeState struct {
	DialogflowEntityTypeId pulumi.StringPtrInput
	// The name of this entity type to be displayed on the console.
	DisplayName pulumi.StringPtrInput
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolPtrInput
	// The collection of entity entries associated with the entity type.
	Entities DialogflowEntityTypeEntityArrayInput
	// Indicates the kind of entity type. * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference
	// value. * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
	// types can contain references to other entity types (with or without aliases). * KIND_REGEXP: Regexp entity types allow
	// to specify regular expressions in entries values. Possible values: ["KIND_MAP", "KIND_LIST", "KIND_REGEXP"]
	Kind pulumi.StringPtrInput
	// The unique identifier of the entity type. Format: projects/<Project ID>/agent/entityTypes/<Entity type ID>.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts DialogflowEntityTypeTimeoutsPtrInput
}

func (DialogflowEntityTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowEntityTypeState)(nil)).Elem()
}

type dialogflowEntityTypeArgs struct {
	DialogflowEntityTypeId *string `pulumi:"dialogflowEntityTypeId"`
	// The name of this entity type to be displayed on the console.
	DisplayName string `pulumi:"displayName"`
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction *bool `pulumi:"enableFuzzyExtraction"`
	// The collection of entity entries associated with the entity type.
	Entities []DialogflowEntityTypeEntity `pulumi:"entities"`
	// Indicates the kind of entity type. * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference
	// value. * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
	// types can contain references to other entity types (with or without aliases). * KIND_REGEXP: Regexp entity types allow
	// to specify regular expressions in entries values. Possible values: ["KIND_MAP", "KIND_LIST", "KIND_REGEXP"]
	Kind     string                        `pulumi:"kind"`
	Project  *string                       `pulumi:"project"`
	Timeouts *DialogflowEntityTypeTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a DialogflowEntityType resource.
type DialogflowEntityTypeArgs struct {
	DialogflowEntityTypeId pulumi.StringPtrInput
	// The name of this entity type to be displayed on the console.
	DisplayName pulumi.StringInput
	// Enables fuzzy entity extraction during classification.
	EnableFuzzyExtraction pulumi.BoolPtrInput
	// The collection of entity entries associated with the entity type.
	Entities DialogflowEntityTypeEntityArrayInput
	// Indicates the kind of entity type. * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference
	// value. * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
	// types can contain references to other entity types (with or without aliases). * KIND_REGEXP: Regexp entity types allow
	// to specify regular expressions in entries values. Possible values: ["KIND_MAP", "KIND_LIST", "KIND_REGEXP"]
	Kind     pulumi.StringInput
	Project  pulumi.StringPtrInput
	Timeouts DialogflowEntityTypeTimeoutsPtrInput
}

func (DialogflowEntityTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowEntityTypeArgs)(nil)).Elem()
}

type DialogflowEntityTypeInput interface {
	pulumi.Input

	ToDialogflowEntityTypeOutput() DialogflowEntityTypeOutput
	ToDialogflowEntityTypeOutputWithContext(ctx context.Context) DialogflowEntityTypeOutput
}

func (*DialogflowEntityType) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowEntityType)(nil)).Elem()
}

func (i *DialogflowEntityType) ToDialogflowEntityTypeOutput() DialogflowEntityTypeOutput {
	return i.ToDialogflowEntityTypeOutputWithContext(context.Background())
}

func (i *DialogflowEntityType) ToDialogflowEntityTypeOutputWithContext(ctx context.Context) DialogflowEntityTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DialogflowEntityTypeOutput)
}

type DialogflowEntityTypeOutput struct{ *pulumi.OutputState }

func (DialogflowEntityTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowEntityType)(nil)).Elem()
}

func (o DialogflowEntityTypeOutput) ToDialogflowEntityTypeOutput() DialogflowEntityTypeOutput {
	return o
}

func (o DialogflowEntityTypeOutput) ToDialogflowEntityTypeOutputWithContext(ctx context.Context) DialogflowEntityTypeOutput {
	return o
}

func (o DialogflowEntityTypeOutput) DialogflowEntityTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowEntityType) pulumi.StringOutput { return v.DialogflowEntityTypeId }).(pulumi.StringOutput)
}

// The name of this entity type to be displayed on the console.
func (o DialogflowEntityTypeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowEntityType) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Enables fuzzy entity extraction during classification.
func (o DialogflowEntityTypeOutput) EnableFuzzyExtraction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DialogflowEntityType) pulumi.BoolPtrOutput { return v.EnableFuzzyExtraction }).(pulumi.BoolPtrOutput)
}

// The collection of entity entries associated with the entity type.
func (o DialogflowEntityTypeOutput) Entities() DialogflowEntityTypeEntityArrayOutput {
	return o.ApplyT(func(v *DialogflowEntityType) DialogflowEntityTypeEntityArrayOutput { return v.Entities }).(DialogflowEntityTypeEntityArrayOutput)
}

// Indicates the kind of entity type. * KIND_MAP: Map entity types allow mapping of a group of synonyms to a reference
// value. * KIND_LIST: List entity types contain a set of entries that do not map to reference values. However, list entity
// types can contain references to other entity types (with or without aliases). * KIND_REGEXP: Regexp entity types allow
// to specify regular expressions in entries values. Possible values: ["KIND_MAP", "KIND_LIST", "KIND_REGEXP"]
func (o DialogflowEntityTypeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowEntityType) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// The unique identifier of the entity type. Format: projects/<Project ID>/agent/entityTypes/<Entity type ID>.
func (o DialogflowEntityTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowEntityType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DialogflowEntityTypeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowEntityType) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DialogflowEntityTypeOutput) Timeouts() DialogflowEntityTypeTimeoutsPtrOutput {
	return o.ApplyT(func(v *DialogflowEntityType) DialogflowEntityTypeTimeoutsPtrOutput { return v.Timeouts }).(DialogflowEntityTypeTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DialogflowEntityTypeInput)(nil)).Elem(), &DialogflowEntityType{})
	pulumi.RegisterOutputType(DialogflowEntityTypeOutput{})
}
