// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkConnectivityInternalRange struct {
	pulumi.CustomResourceState

	// An optional description of this resource.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The IP range that this internal range defines.
	IpCidrRange pulumi.StringOutput `pulumi:"ipCidrRange"`
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Specification for migration with source and target resource names.
	Migration NetworkConnectivityInternalRangeMigrationPtrOutput `pulumi:"migration"`
	// The name of the policy based route.
	Name pulumi.StringOutput `pulumi:"name"`
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                            pulumi.StringOutput `pulumi:"network"`
	NetworkConnectivityInternalRangeId pulumi.StringOutput `pulumi:"networkConnectivityInternalRangeId"`
	// Optional. Types of resources that are allowed to overlap with the current internal range. Possible values:
	// ["OVERLAP_ROUTE_RANGE", "OVERLAP_EXISTING_SUBNET_RANGE"]
	Overlaps pulumi.StringArrayOutput `pulumi:"overlaps"`
	// The type of peering set for this internal range. Possible values: ["FOR_SELF", "FOR_PEER", "NOT_SHARED"]
	Peering pulumi.StringOutput `pulumi:"peering"`
	// An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the
	// given size. If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be
	// used during updates to change the range size.
	PrefixLength pulumi.Float64PtrOutput `pulumi:"prefixLength"`
	Project      pulumi.StringOutput     `pulumi:"project"`
	// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set,
	// defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like
	// "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
	TargetCidrRanges pulumi.StringArrayOutput `pulumi:"targetCidrRanges"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                            `pulumi:"terraformLabels"`
	Timeouts        NetworkConnectivityInternalRangeTimeoutsPtrOutput `pulumi:"timeouts"`
	// The type of usage set for this InternalRange. Possible values: ["FOR_VPC", "EXTERNAL_TO_VPC", "FOR_MIGRATION"]
	Usage pulumi.StringOutput `pulumi:"usage"`
	// Output only. The list of resources that refer to this internal range. Resources that use the internal range for their
	// range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by
	// creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal
	// range referred to. Can be empty.
	Users pulumi.StringArrayOutput `pulumi:"users"`
}

// NewNetworkConnectivityInternalRange registers a new resource with the given unique name, arguments, and options.
func NewNetworkConnectivityInternalRange(ctx *pulumi.Context,
	name string, args *NetworkConnectivityInternalRangeArgs, opts ...pulumi.ResourceOption) (*NetworkConnectivityInternalRange, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.Peering == nil {
		return nil, errors.New("invalid value for required argument 'Peering'")
	}
	if args.Usage == nil {
		return nil, errors.New("invalid value for required argument 'Usage'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkConnectivityInternalRange
	err = ctx.RegisterPackageResource("google:index/networkConnectivityInternalRange:NetworkConnectivityInternalRange", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkConnectivityInternalRange gets an existing NetworkConnectivityInternalRange resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkConnectivityInternalRange(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkConnectivityInternalRangeState, opts ...pulumi.ResourceOption) (*NetworkConnectivityInternalRange, error) {
	var resource NetworkConnectivityInternalRange
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/networkConnectivityInternalRange:NetworkConnectivityInternalRange", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkConnectivityInternalRange resources.
type networkConnectivityInternalRangeState struct {
	// An optional description of this resource.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The IP range that this internal range defines.
	IpCidrRange *string `pulumi:"ipCidrRange"`
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Specification for migration with source and target resource names.
	Migration *NetworkConnectivityInternalRangeMigration `pulumi:"migration"`
	// The name of the policy based route.
	Name *string `pulumi:"name"`
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                            *string `pulumi:"network"`
	NetworkConnectivityInternalRangeId *string `pulumi:"networkConnectivityInternalRangeId"`
	// Optional. Types of resources that are allowed to overlap with the current internal range. Possible values:
	// ["OVERLAP_ROUTE_RANGE", "OVERLAP_EXISTING_SUBNET_RANGE"]
	Overlaps []string `pulumi:"overlaps"`
	// The type of peering set for this internal range. Possible values: ["FOR_SELF", "FOR_PEER", "NOT_SHARED"]
	Peering *string `pulumi:"peering"`
	// An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the
	// given size. If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be
	// used during updates to change the range size.
	PrefixLength *float64 `pulumi:"prefixLength"`
	Project      *string  `pulumi:"project"`
	// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set,
	// defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like
	// "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
	TargetCidrRanges []string `pulumi:"targetCidrRanges"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                         `pulumi:"terraformLabels"`
	Timeouts        *NetworkConnectivityInternalRangeTimeouts `pulumi:"timeouts"`
	// The type of usage set for this InternalRange. Possible values: ["FOR_VPC", "EXTERNAL_TO_VPC", "FOR_MIGRATION"]
	Usage *string `pulumi:"usage"`
	// Output only. The list of resources that refer to this internal range. Resources that use the internal range for their
	// range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by
	// creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal
	// range referred to. Can be empty.
	Users []string `pulumi:"users"`
}

type NetworkConnectivityInternalRangeState struct {
	// An optional description of this resource.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The IP range that this internal range defines.
	IpCidrRange pulumi.StringPtrInput
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Specification for migration with source and target resource names.
	Migration NetworkConnectivityInternalRangeMigrationPtrInput
	// The name of the policy based route.
	Name pulumi.StringPtrInput
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                            pulumi.StringPtrInput
	NetworkConnectivityInternalRangeId pulumi.StringPtrInput
	// Optional. Types of resources that are allowed to overlap with the current internal range. Possible values:
	// ["OVERLAP_ROUTE_RANGE", "OVERLAP_EXISTING_SUBNET_RANGE"]
	Overlaps pulumi.StringArrayInput
	// The type of peering set for this internal range. Possible values: ["FOR_SELF", "FOR_PEER", "NOT_SHARED"]
	Peering pulumi.StringPtrInput
	// An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the
	// given size. If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be
	// used during updates to change the range size.
	PrefixLength pulumi.Float64PtrInput
	Project      pulumi.StringPtrInput
	// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set,
	// defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like
	// "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
	TargetCidrRanges pulumi.StringArrayInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkConnectivityInternalRangeTimeoutsPtrInput
	// The type of usage set for this InternalRange. Possible values: ["FOR_VPC", "EXTERNAL_TO_VPC", "FOR_MIGRATION"]
	Usage pulumi.StringPtrInput
	// Output only. The list of resources that refer to this internal range. Resources that use the internal range for their
	// range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by
	// creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal
	// range referred to. Can be empty.
	Users pulumi.StringArrayInput
}

func (NetworkConnectivityInternalRangeState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectivityInternalRangeState)(nil)).Elem()
}

type networkConnectivityInternalRangeArgs struct {
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// The IP range that this internal range defines.
	IpCidrRange *string `pulumi:"ipCidrRange"`
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Specification for migration with source and target resource names.
	Migration *NetworkConnectivityInternalRangeMigration `pulumi:"migration"`
	// The name of the policy based route.
	Name *string `pulumi:"name"`
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                            string  `pulumi:"network"`
	NetworkConnectivityInternalRangeId *string `pulumi:"networkConnectivityInternalRangeId"`
	// Optional. Types of resources that are allowed to overlap with the current internal range. Possible values:
	// ["OVERLAP_ROUTE_RANGE", "OVERLAP_EXISTING_SUBNET_RANGE"]
	Overlaps []string `pulumi:"overlaps"`
	// The type of peering set for this internal range. Possible values: ["FOR_SELF", "FOR_PEER", "NOT_SHARED"]
	Peering string `pulumi:"peering"`
	// An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the
	// given size. If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be
	// used during updates to change the range size.
	PrefixLength *float64 `pulumi:"prefixLength"`
	Project      *string  `pulumi:"project"`
	// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set,
	// defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like
	// "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
	TargetCidrRanges []string                                  `pulumi:"targetCidrRanges"`
	Timeouts         *NetworkConnectivityInternalRangeTimeouts `pulumi:"timeouts"`
	// The type of usage set for this InternalRange. Possible values: ["FOR_VPC", "EXTERNAL_TO_VPC", "FOR_MIGRATION"]
	Usage string `pulumi:"usage"`
}

// The set of arguments for constructing a NetworkConnectivityInternalRange resource.
type NetworkConnectivityInternalRangeArgs struct {
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// The IP range that this internal range defines.
	IpCidrRange pulumi.StringPtrInput
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Specification for migration with source and target resource names.
	Migration NetworkConnectivityInternalRangeMigrationPtrInput
	// The name of the policy based route.
	Name pulumi.StringPtrInput
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                            pulumi.StringInput
	NetworkConnectivityInternalRangeId pulumi.StringPtrInput
	// Optional. Types of resources that are allowed to overlap with the current internal range. Possible values:
	// ["OVERLAP_ROUTE_RANGE", "OVERLAP_EXISTING_SUBNET_RANGE"]
	Overlaps pulumi.StringArrayInput
	// The type of peering set for this internal range. Possible values: ["FOR_SELF", "FOR_PEER", "NOT_SHARED"]
	Peering pulumi.StringInput
	// An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the
	// given size. If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be
	// used during updates to change the range size.
	PrefixLength pulumi.Float64PtrInput
	Project      pulumi.StringPtrInput
	// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set,
	// defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like
	// "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
	TargetCidrRanges pulumi.StringArrayInput
	Timeouts         NetworkConnectivityInternalRangeTimeoutsPtrInput
	// The type of usage set for this InternalRange. Possible values: ["FOR_VPC", "EXTERNAL_TO_VPC", "FOR_MIGRATION"]
	Usage pulumi.StringInput
}

func (NetworkConnectivityInternalRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectivityInternalRangeArgs)(nil)).Elem()
}

type NetworkConnectivityInternalRangeInput interface {
	pulumi.Input

	ToNetworkConnectivityInternalRangeOutput() NetworkConnectivityInternalRangeOutput
	ToNetworkConnectivityInternalRangeOutputWithContext(ctx context.Context) NetworkConnectivityInternalRangeOutput
}

func (*NetworkConnectivityInternalRange) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectivityInternalRange)(nil)).Elem()
}

func (i *NetworkConnectivityInternalRange) ToNetworkConnectivityInternalRangeOutput() NetworkConnectivityInternalRangeOutput {
	return i.ToNetworkConnectivityInternalRangeOutputWithContext(context.Background())
}

func (i *NetworkConnectivityInternalRange) ToNetworkConnectivityInternalRangeOutputWithContext(ctx context.Context) NetworkConnectivityInternalRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectivityInternalRangeOutput)
}

type NetworkConnectivityInternalRangeOutput struct{ *pulumi.OutputState }

func (NetworkConnectivityInternalRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectivityInternalRange)(nil)).Elem()
}

func (o NetworkConnectivityInternalRangeOutput) ToNetworkConnectivityInternalRangeOutput() NetworkConnectivityInternalRangeOutput {
	return o
}

func (o NetworkConnectivityInternalRangeOutput) ToNetworkConnectivityInternalRangeOutputWithContext(ctx context.Context) NetworkConnectivityInternalRangeOutput {
	return o
}

// An optional description of this resource.
func (o NetworkConnectivityInternalRangeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkConnectivityInternalRangeOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The IP range that this internal range defines.
func (o NetworkConnectivityInternalRangeOutput) IpCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringOutput { return v.IpCidrRange }).(pulumi.StringOutput)
}

// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o NetworkConnectivityInternalRangeOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Specification for migration with source and target resource names.
func (o NetworkConnectivityInternalRangeOutput) Migration() NetworkConnectivityInternalRangeMigrationPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) NetworkConnectivityInternalRangeMigrationPtrOutput {
		return v.Migration
	}).(NetworkConnectivityInternalRangeMigrationPtrOutput)
}

// The name of the policy based route.
func (o NetworkConnectivityInternalRangeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Fully-qualified URL of the network that this route applies to, for example:
// projects/my-project/global/networks/my-network.
func (o NetworkConnectivityInternalRangeOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o NetworkConnectivityInternalRangeOutput) NetworkConnectivityInternalRangeId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringOutput {
		return v.NetworkConnectivityInternalRangeId
	}).(pulumi.StringOutput)
}

// Optional. Types of resources that are allowed to overlap with the current internal range. Possible values:
// ["OVERLAP_ROUTE_RANGE", "OVERLAP_EXISTING_SUBNET_RANGE"]
func (o NetworkConnectivityInternalRangeOutput) Overlaps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringArrayOutput { return v.Overlaps }).(pulumi.StringArrayOutput)
}

// The type of peering set for this internal range. Possible values: ["FOR_SELF", "FOR_PEER", "NOT_SHARED"]
func (o NetworkConnectivityInternalRangeOutput) Peering() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringOutput { return v.Peering }).(pulumi.StringOutput)
}

// An alternate to ipCidrRange. Can be set when trying to create a reservation that automatically finds a free range of the
// given size. If both ipCidrRange and prefixLength are set, there is an error if the range sizes do not match. Can also be
// used during updates to change the range size.
func (o NetworkConnectivityInternalRangeOutput) PrefixLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.Float64PtrOutput { return v.PrefixLength }).(pulumi.Float64PtrOutput)
}

func (o NetworkConnectivityInternalRangeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Optional. Can be set to narrow down or pick a different address space while searching for a free range. If not set,
// defaults to the "10.0.0.0/8" address space. This can be used to search in other rfc-1918 address spaces like
// "172.16.0.0/12" and "192.168.0.0/16" or non-rfc-1918 address spaces used in the VPC.
func (o NetworkConnectivityInternalRangeOutput) TargetCidrRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringArrayOutput { return v.TargetCidrRanges }).(pulumi.StringArrayOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkConnectivityInternalRangeOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkConnectivityInternalRangeOutput) Timeouts() NetworkConnectivityInternalRangeTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) NetworkConnectivityInternalRangeTimeoutsPtrOutput {
		return v.Timeouts
	}).(NetworkConnectivityInternalRangeTimeoutsPtrOutput)
}

// The type of usage set for this InternalRange. Possible values: ["FOR_VPC", "EXTERNAL_TO_VPC", "FOR_MIGRATION"]
func (o NetworkConnectivityInternalRangeOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringOutput { return v.Usage }).(pulumi.StringOutput)
}

// Output only. The list of resources that refer to this internal range. Resources that use the internal range for their
// range allocation are referred to as users of the range. Other resources mark themselves as users while doing so by
// creating a reference to this internal range. Having a user, based on this reference, prevents deletion of the internal
// range referred to. Can be empty.
func (o NetworkConnectivityInternalRangeOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkConnectivityInternalRange) pulumi.StringArrayOutput { return v.Users }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectivityInternalRangeInput)(nil)).Elem(), &NetworkConnectivityInternalRange{})
	pulumi.RegisterOutputType(NetworkConnectivityInternalRangeOutput{})
}
