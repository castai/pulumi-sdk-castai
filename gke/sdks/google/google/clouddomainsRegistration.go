// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClouddomainsRegistration struct {
	pulumi.CustomResourceState

	ClouddomainsRegistrationId pulumi.StringOutput `pulumi:"clouddomainsRegistrationId"`
	// The list of contact notices that the caller acknowledges. Possible value is PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT
	ContactNotices pulumi.StringArrayOutput `pulumi:"contactNotices"`
	// Required. Settings for contact information linked to the Registration.
	ContactSettings ClouddomainsRegistrationContactSettingsOutput `pulumi:"contactSettings"`
	// Output only. Time at which the automation was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Settings controlling the DNS configuration of the Registration.
	DnsSettings ClouddomainsRegistrationDnsSettingsPtrOutput `pulumi:"dnsSettings"`
	// Required. The domain name. Unicode domain names must be expressed in Punycode format.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// The list of domain notices that you acknowledge. Possible value is HSTS_PRELOADED
	DomainNotices   pulumi.StringArrayOutput `pulumi:"domainNotices"`
	EffectiveLabels pulumi.StringMapOutput   `pulumi:"effectiveLabels"`
	// Output only. Time at which the automation was updated.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// Output only. The set of issues with the Registration that require attention.
	Issues pulumi.StringArrayOutput `pulumi:"issues"`
	// Set of labels associated with the Registration. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// Settings for management of the Registration, including renewal, billing, and transfer
	ManagementSettings ClouddomainsRegistrationManagementSettingsPtrOutput `pulumi:"managementSettings"`
	// Output only. Name of the Registration resource, in the format projects/*/locations/*/registrations/<domain_name>.
	Name    pulumi.StringOutput `pulumi:"name"`
	Project pulumi.StringOutput `pulumi:"project"`
	// Output only. The reason the domain registration failed. Only set for domains in REGISTRATION_FAILED state.
	RegisterFailureReason pulumi.StringOutput `pulumi:"registerFailureReason"`
	// Output only. The current state of the Registration.
	State pulumi.StringOutput `pulumi:"state"`
	// Output only. Set of options for the contactSettings.privacy field that this Registration supports.
	SupportedPrivacies pulumi.StringArrayOutput `pulumi:"supportedPrivacies"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                    `pulumi:"terraformLabels"`
	Timeouts        ClouddomainsRegistrationTimeoutsPtrOutput `pulumi:"timeouts"`
	// Required. Yearly price to register or renew the domain. The value that should be put here can be obtained from
	// registrations.retrieveRegisterParameters or registrations.searchDomains calls.
	YearlyPrice ClouddomainsRegistrationYearlyPriceOutput `pulumi:"yearlyPrice"`
}

// NewClouddomainsRegistration registers a new resource with the given unique name, arguments, and options.
func NewClouddomainsRegistration(ctx *pulumi.Context,
	name string, args *ClouddomainsRegistrationArgs, opts ...pulumi.ResourceOption) (*ClouddomainsRegistration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContactSettings == nil {
		return nil, errors.New("invalid value for required argument 'ContactSettings'")
	}
	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.YearlyPrice == nil {
		return nil, errors.New("invalid value for required argument 'YearlyPrice'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ClouddomainsRegistration
	err = ctx.RegisterPackageResource("google:index/clouddomainsRegistration:ClouddomainsRegistration", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClouddomainsRegistration gets an existing ClouddomainsRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClouddomainsRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClouddomainsRegistrationState, opts ...pulumi.ResourceOption) (*ClouddomainsRegistration, error) {
	var resource ClouddomainsRegistration
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/clouddomainsRegistration:ClouddomainsRegistration", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClouddomainsRegistration resources.
type clouddomainsRegistrationState struct {
	ClouddomainsRegistrationId *string `pulumi:"clouddomainsRegistrationId"`
	// The list of contact notices that the caller acknowledges. Possible value is PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT
	ContactNotices []string `pulumi:"contactNotices"`
	// Required. Settings for contact information linked to the Registration.
	ContactSettings *ClouddomainsRegistrationContactSettings `pulumi:"contactSettings"`
	// Output only. Time at which the automation was created.
	CreateTime *string `pulumi:"createTime"`
	// Settings controlling the DNS configuration of the Registration.
	DnsSettings *ClouddomainsRegistrationDnsSettings `pulumi:"dnsSettings"`
	// Required. The domain name. Unicode domain names must be expressed in Punycode format.
	DomainName *string `pulumi:"domainName"`
	// The list of domain notices that you acknowledge. Possible value is HSTS_PRELOADED
	DomainNotices   []string          `pulumi:"domainNotices"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Output only. Time at which the automation was updated.
	ExpireTime *string `pulumi:"expireTime"`
	// Output only. The set of issues with the Registration that require attention.
	Issues []string `pulumi:"issues"`
	// Set of labels associated with the Registration. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// Settings for management of the Registration, including renewal, billing, and transfer
	ManagementSettings *ClouddomainsRegistrationManagementSettings `pulumi:"managementSettings"`
	// Output only. Name of the Registration resource, in the format projects/*/locations/*/registrations/<domain_name>.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// Output only. The reason the domain registration failed. Only set for domains in REGISTRATION_FAILED state.
	RegisterFailureReason *string `pulumi:"registerFailureReason"`
	// Output only. The current state of the Registration.
	State *string `pulumi:"state"`
	// Output only. Set of options for the contactSettings.privacy field that this Registration supports.
	SupportedPrivacies []string `pulumi:"supportedPrivacies"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                 `pulumi:"terraformLabels"`
	Timeouts        *ClouddomainsRegistrationTimeouts `pulumi:"timeouts"`
	// Required. Yearly price to register or renew the domain. The value that should be put here can be obtained from
	// registrations.retrieveRegisterParameters or registrations.searchDomains calls.
	YearlyPrice *ClouddomainsRegistrationYearlyPrice `pulumi:"yearlyPrice"`
}

type ClouddomainsRegistrationState struct {
	ClouddomainsRegistrationId pulumi.StringPtrInput
	// The list of contact notices that the caller acknowledges. Possible value is PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT
	ContactNotices pulumi.StringArrayInput
	// Required. Settings for contact information linked to the Registration.
	ContactSettings ClouddomainsRegistrationContactSettingsPtrInput
	// Output only. Time at which the automation was created.
	CreateTime pulumi.StringPtrInput
	// Settings controlling the DNS configuration of the Registration.
	DnsSettings ClouddomainsRegistrationDnsSettingsPtrInput
	// Required. The domain name. Unicode domain names must be expressed in Punycode format.
	DomainName pulumi.StringPtrInput
	// The list of domain notices that you acknowledge. Possible value is HSTS_PRELOADED
	DomainNotices   pulumi.StringArrayInput
	EffectiveLabels pulumi.StringMapInput
	// Output only. Time at which the automation was updated.
	ExpireTime pulumi.StringPtrInput
	// Output only. The set of issues with the Registration that require attention.
	Issues pulumi.StringArrayInput
	// Set of labels associated with the Registration. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// Settings for management of the Registration, including renewal, billing, and transfer
	ManagementSettings ClouddomainsRegistrationManagementSettingsPtrInput
	// Output only. Name of the Registration resource, in the format projects/*/locations/*/registrations/<domain_name>.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// Output only. The reason the domain registration failed. Only set for domains in REGISTRATION_FAILED state.
	RegisterFailureReason pulumi.StringPtrInput
	// Output only. The current state of the Registration.
	State pulumi.StringPtrInput
	// Output only. Set of options for the contactSettings.privacy field that this Registration supports.
	SupportedPrivacies pulumi.StringArrayInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ClouddomainsRegistrationTimeoutsPtrInput
	// Required. Yearly price to register or renew the domain. The value that should be put here can be obtained from
	// registrations.retrieveRegisterParameters or registrations.searchDomains calls.
	YearlyPrice ClouddomainsRegistrationYearlyPricePtrInput
}

func (ClouddomainsRegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddomainsRegistrationState)(nil)).Elem()
}

type clouddomainsRegistrationArgs struct {
	ClouddomainsRegistrationId *string `pulumi:"clouddomainsRegistrationId"`
	// The list of contact notices that the caller acknowledges. Possible value is PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT
	ContactNotices []string `pulumi:"contactNotices"`
	// Required. Settings for contact information linked to the Registration.
	ContactSettings ClouddomainsRegistrationContactSettings `pulumi:"contactSettings"`
	// Settings controlling the DNS configuration of the Registration.
	DnsSettings *ClouddomainsRegistrationDnsSettings `pulumi:"dnsSettings"`
	// Required. The domain name. Unicode domain names must be expressed in Punycode format.
	DomainName string `pulumi:"domainName"`
	// The list of domain notices that you acknowledge. Possible value is HSTS_PRELOADED
	DomainNotices []string `pulumi:"domainNotices"`
	// Set of labels associated with the Registration. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location for the resource
	Location string `pulumi:"location"`
	// Settings for management of the Registration, including renewal, billing, and transfer
	ManagementSettings *ClouddomainsRegistrationManagementSettings `pulumi:"managementSettings"`
	Project            *string                                     `pulumi:"project"`
	Timeouts           *ClouddomainsRegistrationTimeouts           `pulumi:"timeouts"`
	// Required. Yearly price to register or renew the domain. The value that should be put here can be obtained from
	// registrations.retrieveRegisterParameters or registrations.searchDomains calls.
	YearlyPrice ClouddomainsRegistrationYearlyPrice `pulumi:"yearlyPrice"`
}

// The set of arguments for constructing a ClouddomainsRegistration resource.
type ClouddomainsRegistrationArgs struct {
	ClouddomainsRegistrationId pulumi.StringPtrInput
	// The list of contact notices that the caller acknowledges. Possible value is PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT
	ContactNotices pulumi.StringArrayInput
	// Required. Settings for contact information linked to the Registration.
	ContactSettings ClouddomainsRegistrationContactSettingsInput
	// Settings controlling the DNS configuration of the Registration.
	DnsSettings ClouddomainsRegistrationDnsSettingsPtrInput
	// Required. The domain name. Unicode domain names must be expressed in Punycode format.
	DomainName pulumi.StringInput
	// The list of domain notices that you acknowledge. Possible value is HSTS_PRELOADED
	DomainNotices pulumi.StringArrayInput
	// Set of labels associated with the Registration. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location for the resource
	Location pulumi.StringInput
	// Settings for management of the Registration, including renewal, billing, and transfer
	ManagementSettings ClouddomainsRegistrationManagementSettingsPtrInput
	Project            pulumi.StringPtrInput
	Timeouts           ClouddomainsRegistrationTimeoutsPtrInput
	// Required. Yearly price to register or renew the domain. The value that should be put here can be obtained from
	// registrations.retrieveRegisterParameters or registrations.searchDomains calls.
	YearlyPrice ClouddomainsRegistrationYearlyPriceInput
}

func (ClouddomainsRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddomainsRegistrationArgs)(nil)).Elem()
}

type ClouddomainsRegistrationInput interface {
	pulumi.Input

	ToClouddomainsRegistrationOutput() ClouddomainsRegistrationOutput
	ToClouddomainsRegistrationOutputWithContext(ctx context.Context) ClouddomainsRegistrationOutput
}

func (*ClouddomainsRegistration) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddomainsRegistration)(nil)).Elem()
}

func (i *ClouddomainsRegistration) ToClouddomainsRegistrationOutput() ClouddomainsRegistrationOutput {
	return i.ToClouddomainsRegistrationOutputWithContext(context.Background())
}

func (i *ClouddomainsRegistration) ToClouddomainsRegistrationOutputWithContext(ctx context.Context) ClouddomainsRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClouddomainsRegistrationOutput)
}

type ClouddomainsRegistrationOutput struct{ *pulumi.OutputState }

func (ClouddomainsRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddomainsRegistration)(nil)).Elem()
}

func (o ClouddomainsRegistrationOutput) ToClouddomainsRegistrationOutput() ClouddomainsRegistrationOutput {
	return o
}

func (o ClouddomainsRegistrationOutput) ToClouddomainsRegistrationOutputWithContext(ctx context.Context) ClouddomainsRegistrationOutput {
	return o
}

func (o ClouddomainsRegistrationOutput) ClouddomainsRegistrationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringOutput { return v.ClouddomainsRegistrationId }).(pulumi.StringOutput)
}

// The list of contact notices that the caller acknowledges. Possible value is PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT
func (o ClouddomainsRegistrationOutput) ContactNotices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringArrayOutput { return v.ContactNotices }).(pulumi.StringArrayOutput)
}

// Required. Settings for contact information linked to the Registration.
func (o ClouddomainsRegistrationOutput) ContactSettings() ClouddomainsRegistrationContactSettingsOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) ClouddomainsRegistrationContactSettingsOutput {
		return v.ContactSettings
	}).(ClouddomainsRegistrationContactSettingsOutput)
}

// Output only. Time at which the automation was created.
func (o ClouddomainsRegistrationOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Settings controlling the DNS configuration of the Registration.
func (o ClouddomainsRegistrationOutput) DnsSettings() ClouddomainsRegistrationDnsSettingsPtrOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) ClouddomainsRegistrationDnsSettingsPtrOutput { return v.DnsSettings }).(ClouddomainsRegistrationDnsSettingsPtrOutput)
}

// Required. The domain name. Unicode domain names must be expressed in Punycode format.
func (o ClouddomainsRegistrationOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// The list of domain notices that you acknowledge. Possible value is HSTS_PRELOADED
func (o ClouddomainsRegistrationOutput) DomainNotices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringArrayOutput { return v.DomainNotices }).(pulumi.StringArrayOutput)
}

func (o ClouddomainsRegistrationOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Output only. Time at which the automation was updated.
func (o ClouddomainsRegistrationOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// Output only. The set of issues with the Registration that require attention.
func (o ClouddomainsRegistrationOutput) Issues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringArrayOutput { return v.Issues }).(pulumi.StringArrayOutput)
}

// Set of labels associated with the Registration. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o ClouddomainsRegistrationOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location for the resource
func (o ClouddomainsRegistrationOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Settings for management of the Registration, including renewal, billing, and transfer
func (o ClouddomainsRegistrationOutput) ManagementSettings() ClouddomainsRegistrationManagementSettingsPtrOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) ClouddomainsRegistrationManagementSettingsPtrOutput {
		return v.ManagementSettings
	}).(ClouddomainsRegistrationManagementSettingsPtrOutput)
}

// Output only. Name of the Registration resource, in the format projects/*/locations/*/registrations/<domain_name>.
func (o ClouddomainsRegistrationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ClouddomainsRegistrationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. The reason the domain registration failed. Only set for domains in REGISTRATION_FAILED state.
func (o ClouddomainsRegistrationOutput) RegisterFailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringOutput { return v.RegisterFailureReason }).(pulumi.StringOutput)
}

// Output only. The current state of the Registration.
func (o ClouddomainsRegistrationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Output only. Set of options for the contactSettings.privacy field that this Registration supports.
func (o ClouddomainsRegistrationOutput) SupportedPrivacies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringArrayOutput { return v.SupportedPrivacies }).(pulumi.StringArrayOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ClouddomainsRegistrationOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ClouddomainsRegistrationOutput) Timeouts() ClouddomainsRegistrationTimeoutsPtrOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) ClouddomainsRegistrationTimeoutsPtrOutput { return v.Timeouts }).(ClouddomainsRegistrationTimeoutsPtrOutput)
}

// Required. Yearly price to register or renew the domain. The value that should be put here can be obtained from
// registrations.retrieveRegisterParameters or registrations.searchDomains calls.
func (o ClouddomainsRegistrationOutput) YearlyPrice() ClouddomainsRegistrationYearlyPriceOutput {
	return o.ApplyT(func(v *ClouddomainsRegistration) ClouddomainsRegistrationYearlyPriceOutput { return v.YearlyPrice }).(ClouddomainsRegistrationYearlyPriceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClouddomainsRegistrationInput)(nil)).Elem(), &ClouddomainsRegistration{})
	pulumi.RegisterOutputType(ClouddomainsRegistrationOutput{})
}
