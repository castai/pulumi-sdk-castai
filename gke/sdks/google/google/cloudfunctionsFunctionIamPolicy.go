// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudfunctionsFunctionIamPolicy struct {
	pulumi.CustomResourceState

	CloudFunction                     pulumi.StringOutput `pulumi:"cloudFunction"`
	CloudfunctionsFunctionIamPolicyId pulumi.StringOutput `pulumi:"cloudfunctionsFunctionIamPolicyId"`
	Etag                              pulumi.StringOutput `pulumi:"etag"`
	PolicyData                        pulumi.StringOutput `pulumi:"policyData"`
	Project                           pulumi.StringOutput `pulumi:"project"`
	Region                            pulumi.StringOutput `pulumi:"region"`
}

// NewCloudfunctionsFunctionIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewCloudfunctionsFunctionIamPolicy(ctx *pulumi.Context,
	name string, args *CloudfunctionsFunctionIamPolicyArgs, opts ...pulumi.ResourceOption) (*CloudfunctionsFunctionIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudFunction == nil {
		return nil, errors.New("invalid value for required argument 'CloudFunction'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudfunctionsFunctionIamPolicy
	err = ctx.RegisterPackageResource("google:index/cloudfunctionsFunctionIamPolicy:CloudfunctionsFunctionIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudfunctionsFunctionIamPolicy gets an existing CloudfunctionsFunctionIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudfunctionsFunctionIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudfunctionsFunctionIamPolicyState, opts ...pulumi.ResourceOption) (*CloudfunctionsFunctionIamPolicy, error) {
	var resource CloudfunctionsFunctionIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudfunctionsFunctionIamPolicy:CloudfunctionsFunctionIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudfunctionsFunctionIamPolicy resources.
type cloudfunctionsFunctionIamPolicyState struct {
	CloudFunction                     *string `pulumi:"cloudFunction"`
	CloudfunctionsFunctionIamPolicyId *string `pulumi:"cloudfunctionsFunctionIamPolicyId"`
	Etag                              *string `pulumi:"etag"`
	PolicyData                        *string `pulumi:"policyData"`
	Project                           *string `pulumi:"project"`
	Region                            *string `pulumi:"region"`
}

type CloudfunctionsFunctionIamPolicyState struct {
	CloudFunction                     pulumi.StringPtrInput
	CloudfunctionsFunctionIamPolicyId pulumi.StringPtrInput
	Etag                              pulumi.StringPtrInput
	PolicyData                        pulumi.StringPtrInput
	Project                           pulumi.StringPtrInput
	Region                            pulumi.StringPtrInput
}

func (CloudfunctionsFunctionIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfunctionsFunctionIamPolicyState)(nil)).Elem()
}

type cloudfunctionsFunctionIamPolicyArgs struct {
	CloudFunction                     string  `pulumi:"cloudFunction"`
	CloudfunctionsFunctionIamPolicyId *string `pulumi:"cloudfunctionsFunctionIamPolicyId"`
	PolicyData                        string  `pulumi:"policyData"`
	Project                           *string `pulumi:"project"`
	Region                            *string `pulumi:"region"`
}

// The set of arguments for constructing a CloudfunctionsFunctionIamPolicy resource.
type CloudfunctionsFunctionIamPolicyArgs struct {
	CloudFunction                     pulumi.StringInput
	CloudfunctionsFunctionIamPolicyId pulumi.StringPtrInput
	PolicyData                        pulumi.StringInput
	Project                           pulumi.StringPtrInput
	Region                            pulumi.StringPtrInput
}

func (CloudfunctionsFunctionIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfunctionsFunctionIamPolicyArgs)(nil)).Elem()
}

type CloudfunctionsFunctionIamPolicyInput interface {
	pulumi.Input

	ToCloudfunctionsFunctionIamPolicyOutput() CloudfunctionsFunctionIamPolicyOutput
	ToCloudfunctionsFunctionIamPolicyOutputWithContext(ctx context.Context) CloudfunctionsFunctionIamPolicyOutput
}

func (*CloudfunctionsFunctionIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfunctionsFunctionIamPolicy)(nil)).Elem()
}

func (i *CloudfunctionsFunctionIamPolicy) ToCloudfunctionsFunctionIamPolicyOutput() CloudfunctionsFunctionIamPolicyOutput {
	return i.ToCloudfunctionsFunctionIamPolicyOutputWithContext(context.Background())
}

func (i *CloudfunctionsFunctionIamPolicy) ToCloudfunctionsFunctionIamPolicyOutputWithContext(ctx context.Context) CloudfunctionsFunctionIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfunctionsFunctionIamPolicyOutput)
}

type CloudfunctionsFunctionIamPolicyOutput struct{ *pulumi.OutputState }

func (CloudfunctionsFunctionIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfunctionsFunctionIamPolicy)(nil)).Elem()
}

func (o CloudfunctionsFunctionIamPolicyOutput) ToCloudfunctionsFunctionIamPolicyOutput() CloudfunctionsFunctionIamPolicyOutput {
	return o
}

func (o CloudfunctionsFunctionIamPolicyOutput) ToCloudfunctionsFunctionIamPolicyOutputWithContext(ctx context.Context) CloudfunctionsFunctionIamPolicyOutput {
	return o
}

func (o CloudfunctionsFunctionIamPolicyOutput) CloudFunction() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamPolicy) pulumi.StringOutput { return v.CloudFunction }).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamPolicyOutput) CloudfunctionsFunctionIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamPolicy) pulumi.StringOutput {
		return v.CloudfunctionsFunctionIamPolicyId
	}).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o CloudfunctionsFunctionIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfunctionsFunctionIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfunctionsFunctionIamPolicyInput)(nil)).Elem(), &CloudfunctionsFunctionIamPolicy{})
	pulumi.RegisterOutputType(CloudfunctionsFunctionIamPolicyOutput{})
}
