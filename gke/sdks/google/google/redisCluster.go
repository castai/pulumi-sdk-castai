// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RedisCluster struct {
	pulumi.CustomResourceState

	// Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.
	// Default value: "AUTH_MODE_DISABLED" Possible values: ["AUTH_MODE_UNSPECIFIED", "AUTH_MODE_IAM_AUTH",
	// "AUTH_MODE_DISABLED"]
	AuthorizationMode pulumi.StringPtrOutput `pulumi:"authorizationMode"`
	// The timestamp associated with the cluster creation request. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Cross cluster replication config
	CrossClusterReplicationConfig RedisClusterCrossClusterReplicationConfigPtrOutput `pulumi:"crossClusterReplicationConfig"`
	// Optional. Indicates if the cluster is deletion protected or not. If the value if set to true, any delete cluster
	// operation will fail. Default value is true.
	DeletionProtectionEnabled pulumi.BoolPtrOutput `pulumi:"deletionProtectionEnabled"`
	// Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one
	// endpoint is supported.
	DiscoveryEndpoints RedisClusterDiscoveryEndpointArrayOutput `pulumi:"discoveryEndpoints"`
	// Maintenance policy for a cluster
	MaintenancePolicy RedisClusterMaintenancePolicyPtrOutput `pulumi:"maintenancePolicy"`
	// Upcoming maintenance schedule.
	MaintenanceSchedules RedisClusterMaintenanceScheduleArrayOutput `pulumi:"maintenanceSchedules"`
	// Unique name of the resource in this scope including project and location using the form:
	// projects/{projectId}/locations/{locationId}/clusters/{clusterId}
	Name pulumi.StringOutput `pulumi:"name"`
	// The nodeType for the Redis cluster. If not provided, REDIS_HIGHMEM_MEDIUM will be used as default Possible values:
	// ["REDIS_SHARED_CORE_NANO", "REDIS_HIGHMEM_MEDIUM", "REDIS_HIGHMEM_XLARGE", "REDIS_STANDARD_SMALL"]
	NodeType pulumi.StringOutput `pulumi:"nodeType"`
	// Persistence config (RDB, AOF) for the cluster.
	PersistenceConfig RedisClusterPersistenceConfigPtrOutput `pulumi:"persistenceConfig"`
	// Output only. Redis memory precise size in GB for the entire cluster.
	PreciseSizeGb pulumi.Float64Output `pulumi:"preciseSizeGb"`
	Project       pulumi.StringOutput  `pulumi:"project"`
	// Required. Each PscConfig configures the consumer network where two network addresses will be designated to the cluster
	// for client access. Currently, only one PscConfig is supported.
	PscConfigs RedisClusterPscConfigArrayOutput `pulumi:"pscConfigs"`
	// Output only. PSC connections for discovery of the cluster topology and accessing the cluster.
	PscConnections RedisClusterPscConnectionArrayOutput `pulumi:"pscConnections"`
	// Service attachment details to configure Psc connections.
	PscServiceAttachments RedisClusterPscServiceAttachmentArrayOutput `pulumi:"pscServiceAttachments"`
	RedisClusterId        pulumi.StringOutput                         `pulumi:"redisClusterId"`
	// Configure Redis Cluster behavior using a subset of native Redis configuration parameters. Please check Memorystore
	// documentation for the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/cluster/supported-instance-configurations
	RedisConfigs pulumi.StringMapOutput `pulumi:"redisConfigs"`
	// The name of the region of the Redis cluster.
	Region pulumi.StringOutput `pulumi:"region"`
	// Optional. The number of replica nodes per shard.
	ReplicaCount pulumi.Float64PtrOutput `pulumi:"replicaCount"`
	// Required. Number of shards for the Redis cluster.
	ShardCount pulumi.Float64Output `pulumi:"shardCount"`
	// Output only. Redis memory size in GB for the entire cluster.
	SizeGb pulumi.Float64Output `pulumi:"sizeGb"`
	// The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED
	State pulumi.StringOutput `pulumi:"state"`
	// Output only. Additional information about the current state of the cluster.
	StateInfos RedisClusterStateInfoArrayOutput `pulumi:"stateInfos"`
	Timeouts   RedisClusterTimeoutsPtrOutput    `pulumi:"timeouts"`
	// Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is disabled for the cluster.
	// Default value: "TRANSIT_ENCRYPTION_MODE_DISABLED" Possible values: ["TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
	// "TRANSIT_ENCRYPTION_MODE_DISABLED", "TRANSIT_ENCRYPTION_MODE_SERVER_AUTHENTICATION"]
	TransitEncryptionMode pulumi.StringPtrOutput `pulumi:"transitEncryptionMode"`
	// System assigned, unique identifier for the cluster.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Immutable. Zone distribution config for Memorystore Redis cluster.
	ZoneDistributionConfig RedisClusterZoneDistributionConfigPtrOutput `pulumi:"zoneDistributionConfig"`
}

// NewRedisCluster registers a new resource with the given unique name, arguments, and options.
func NewRedisCluster(ctx *pulumi.Context,
	name string, args *RedisClusterArgs, opts ...pulumi.ResourceOption) (*RedisCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ShardCount == nil {
		return nil, errors.New("invalid value for required argument 'ShardCount'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource RedisCluster
	err = ctx.RegisterPackageResource("google:index/redisCluster:RedisCluster", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRedisCluster gets an existing RedisCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRedisCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RedisClusterState, opts ...pulumi.ResourceOption) (*RedisCluster, error) {
	var resource RedisCluster
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/redisCluster:RedisCluster", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RedisCluster resources.
type redisClusterState struct {
	// Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.
	// Default value: "AUTH_MODE_DISABLED" Possible values: ["AUTH_MODE_UNSPECIFIED", "AUTH_MODE_IAM_AUTH",
	// "AUTH_MODE_DISABLED"]
	AuthorizationMode *string `pulumi:"authorizationMode"`
	// The timestamp associated with the cluster creation request. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// Cross cluster replication config
	CrossClusterReplicationConfig *RedisClusterCrossClusterReplicationConfig `pulumi:"crossClusterReplicationConfig"`
	// Optional. Indicates if the cluster is deletion protected or not. If the value if set to true, any delete cluster
	// operation will fail. Default value is true.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one
	// endpoint is supported.
	DiscoveryEndpoints []RedisClusterDiscoveryEndpoint `pulumi:"discoveryEndpoints"`
	// Maintenance policy for a cluster
	MaintenancePolicy *RedisClusterMaintenancePolicy `pulumi:"maintenancePolicy"`
	// Upcoming maintenance schedule.
	MaintenanceSchedules []RedisClusterMaintenanceSchedule `pulumi:"maintenanceSchedules"`
	// Unique name of the resource in this scope including project and location using the form:
	// projects/{projectId}/locations/{locationId}/clusters/{clusterId}
	Name *string `pulumi:"name"`
	// The nodeType for the Redis cluster. If not provided, REDIS_HIGHMEM_MEDIUM will be used as default Possible values:
	// ["REDIS_SHARED_CORE_NANO", "REDIS_HIGHMEM_MEDIUM", "REDIS_HIGHMEM_XLARGE", "REDIS_STANDARD_SMALL"]
	NodeType *string `pulumi:"nodeType"`
	// Persistence config (RDB, AOF) for the cluster.
	PersistenceConfig *RedisClusterPersistenceConfig `pulumi:"persistenceConfig"`
	// Output only. Redis memory precise size in GB for the entire cluster.
	PreciseSizeGb *float64 `pulumi:"preciseSizeGb"`
	Project       *string  `pulumi:"project"`
	// Required. Each PscConfig configures the consumer network where two network addresses will be designated to the cluster
	// for client access. Currently, only one PscConfig is supported.
	PscConfigs []RedisClusterPscConfig `pulumi:"pscConfigs"`
	// Output only. PSC connections for discovery of the cluster topology and accessing the cluster.
	PscConnections []RedisClusterPscConnection `pulumi:"pscConnections"`
	// Service attachment details to configure Psc connections.
	PscServiceAttachments []RedisClusterPscServiceAttachment `pulumi:"pscServiceAttachments"`
	RedisClusterId        *string                            `pulumi:"redisClusterId"`
	// Configure Redis Cluster behavior using a subset of native Redis configuration parameters. Please check Memorystore
	// documentation for the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/cluster/supported-instance-configurations
	RedisConfigs map[string]string `pulumi:"redisConfigs"`
	// The name of the region of the Redis cluster.
	Region *string `pulumi:"region"`
	// Optional. The number of replica nodes per shard.
	ReplicaCount *float64 `pulumi:"replicaCount"`
	// Required. Number of shards for the Redis cluster.
	ShardCount *float64 `pulumi:"shardCount"`
	// Output only. Redis memory size in GB for the entire cluster.
	SizeGb *float64 `pulumi:"sizeGb"`
	// The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED
	State *string `pulumi:"state"`
	// Output only. Additional information about the current state of the cluster.
	StateInfos []RedisClusterStateInfo `pulumi:"stateInfos"`
	Timeouts   *RedisClusterTimeouts   `pulumi:"timeouts"`
	// Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is disabled for the cluster.
	// Default value: "TRANSIT_ENCRYPTION_MODE_DISABLED" Possible values: ["TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
	// "TRANSIT_ENCRYPTION_MODE_DISABLED", "TRANSIT_ENCRYPTION_MODE_SERVER_AUTHENTICATION"]
	TransitEncryptionMode *string `pulumi:"transitEncryptionMode"`
	// System assigned, unique identifier for the cluster.
	Uid *string `pulumi:"uid"`
	// Immutable. Zone distribution config for Memorystore Redis cluster.
	ZoneDistributionConfig *RedisClusterZoneDistributionConfig `pulumi:"zoneDistributionConfig"`
}

type RedisClusterState struct {
	// Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.
	// Default value: "AUTH_MODE_DISABLED" Possible values: ["AUTH_MODE_UNSPECIFIED", "AUTH_MODE_IAM_AUTH",
	// "AUTH_MODE_DISABLED"]
	AuthorizationMode pulumi.StringPtrInput
	// The timestamp associated with the cluster creation request. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// Cross cluster replication config
	CrossClusterReplicationConfig RedisClusterCrossClusterReplicationConfigPtrInput
	// Optional. Indicates if the cluster is deletion protected or not. If the value if set to true, any delete cluster
	// operation will fail. Default value is true.
	DeletionProtectionEnabled pulumi.BoolPtrInput
	// Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one
	// endpoint is supported.
	DiscoveryEndpoints RedisClusterDiscoveryEndpointArrayInput
	// Maintenance policy for a cluster
	MaintenancePolicy RedisClusterMaintenancePolicyPtrInput
	// Upcoming maintenance schedule.
	MaintenanceSchedules RedisClusterMaintenanceScheduleArrayInput
	// Unique name of the resource in this scope including project and location using the form:
	// projects/{projectId}/locations/{locationId}/clusters/{clusterId}
	Name pulumi.StringPtrInput
	// The nodeType for the Redis cluster. If not provided, REDIS_HIGHMEM_MEDIUM will be used as default Possible values:
	// ["REDIS_SHARED_CORE_NANO", "REDIS_HIGHMEM_MEDIUM", "REDIS_HIGHMEM_XLARGE", "REDIS_STANDARD_SMALL"]
	NodeType pulumi.StringPtrInput
	// Persistence config (RDB, AOF) for the cluster.
	PersistenceConfig RedisClusterPersistenceConfigPtrInput
	// Output only. Redis memory precise size in GB for the entire cluster.
	PreciseSizeGb pulumi.Float64PtrInput
	Project       pulumi.StringPtrInput
	// Required. Each PscConfig configures the consumer network where two network addresses will be designated to the cluster
	// for client access. Currently, only one PscConfig is supported.
	PscConfigs RedisClusterPscConfigArrayInput
	// Output only. PSC connections for discovery of the cluster topology and accessing the cluster.
	PscConnections RedisClusterPscConnectionArrayInput
	// Service attachment details to configure Psc connections.
	PscServiceAttachments RedisClusterPscServiceAttachmentArrayInput
	RedisClusterId        pulumi.StringPtrInput
	// Configure Redis Cluster behavior using a subset of native Redis configuration parameters. Please check Memorystore
	// documentation for the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/cluster/supported-instance-configurations
	RedisConfigs pulumi.StringMapInput
	// The name of the region of the Redis cluster.
	Region pulumi.StringPtrInput
	// Optional. The number of replica nodes per shard.
	ReplicaCount pulumi.Float64PtrInput
	// Required. Number of shards for the Redis cluster.
	ShardCount pulumi.Float64PtrInput
	// Output only. Redis memory size in GB for the entire cluster.
	SizeGb pulumi.Float64PtrInput
	// The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED
	State pulumi.StringPtrInput
	// Output only. Additional information about the current state of the cluster.
	StateInfos RedisClusterStateInfoArrayInput
	Timeouts   RedisClusterTimeoutsPtrInput
	// Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is disabled for the cluster.
	// Default value: "TRANSIT_ENCRYPTION_MODE_DISABLED" Possible values: ["TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
	// "TRANSIT_ENCRYPTION_MODE_DISABLED", "TRANSIT_ENCRYPTION_MODE_SERVER_AUTHENTICATION"]
	TransitEncryptionMode pulumi.StringPtrInput
	// System assigned, unique identifier for the cluster.
	Uid pulumi.StringPtrInput
	// Immutable. Zone distribution config for Memorystore Redis cluster.
	ZoneDistributionConfig RedisClusterZoneDistributionConfigPtrInput
}

func (RedisClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*redisClusterState)(nil)).Elem()
}

type redisClusterArgs struct {
	// Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.
	// Default value: "AUTH_MODE_DISABLED" Possible values: ["AUTH_MODE_UNSPECIFIED", "AUTH_MODE_IAM_AUTH",
	// "AUTH_MODE_DISABLED"]
	AuthorizationMode *string `pulumi:"authorizationMode"`
	// Cross cluster replication config
	CrossClusterReplicationConfig *RedisClusterCrossClusterReplicationConfig `pulumi:"crossClusterReplicationConfig"`
	// Optional. Indicates if the cluster is deletion protected or not. If the value if set to true, any delete cluster
	// operation will fail. Default value is true.
	DeletionProtectionEnabled *bool `pulumi:"deletionProtectionEnabled"`
	// Maintenance policy for a cluster
	MaintenancePolicy *RedisClusterMaintenancePolicy `pulumi:"maintenancePolicy"`
	// Unique name of the resource in this scope including project and location using the form:
	// projects/{projectId}/locations/{locationId}/clusters/{clusterId}
	Name *string `pulumi:"name"`
	// The nodeType for the Redis cluster. If not provided, REDIS_HIGHMEM_MEDIUM will be used as default Possible values:
	// ["REDIS_SHARED_CORE_NANO", "REDIS_HIGHMEM_MEDIUM", "REDIS_HIGHMEM_XLARGE", "REDIS_STANDARD_SMALL"]
	NodeType *string `pulumi:"nodeType"`
	// Persistence config (RDB, AOF) for the cluster.
	PersistenceConfig *RedisClusterPersistenceConfig `pulumi:"persistenceConfig"`
	Project           *string                        `pulumi:"project"`
	// Required. Each PscConfig configures the consumer network where two network addresses will be designated to the cluster
	// for client access. Currently, only one PscConfig is supported.
	PscConfigs     []RedisClusterPscConfig `pulumi:"pscConfigs"`
	RedisClusterId *string                 `pulumi:"redisClusterId"`
	// Configure Redis Cluster behavior using a subset of native Redis configuration parameters. Please check Memorystore
	// documentation for the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/cluster/supported-instance-configurations
	RedisConfigs map[string]string `pulumi:"redisConfigs"`
	// The name of the region of the Redis cluster.
	Region *string `pulumi:"region"`
	// Optional. The number of replica nodes per shard.
	ReplicaCount *float64 `pulumi:"replicaCount"`
	// Required. Number of shards for the Redis cluster.
	ShardCount float64               `pulumi:"shardCount"`
	Timeouts   *RedisClusterTimeouts `pulumi:"timeouts"`
	// Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is disabled for the cluster.
	// Default value: "TRANSIT_ENCRYPTION_MODE_DISABLED" Possible values: ["TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
	// "TRANSIT_ENCRYPTION_MODE_DISABLED", "TRANSIT_ENCRYPTION_MODE_SERVER_AUTHENTICATION"]
	TransitEncryptionMode *string `pulumi:"transitEncryptionMode"`
	// Immutable. Zone distribution config for Memorystore Redis cluster.
	ZoneDistributionConfig *RedisClusterZoneDistributionConfig `pulumi:"zoneDistributionConfig"`
}

// The set of arguments for constructing a RedisCluster resource.
type RedisClusterArgs struct {
	// Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.
	// Default value: "AUTH_MODE_DISABLED" Possible values: ["AUTH_MODE_UNSPECIFIED", "AUTH_MODE_IAM_AUTH",
	// "AUTH_MODE_DISABLED"]
	AuthorizationMode pulumi.StringPtrInput
	// Cross cluster replication config
	CrossClusterReplicationConfig RedisClusterCrossClusterReplicationConfigPtrInput
	// Optional. Indicates if the cluster is deletion protected or not. If the value if set to true, any delete cluster
	// operation will fail. Default value is true.
	DeletionProtectionEnabled pulumi.BoolPtrInput
	// Maintenance policy for a cluster
	MaintenancePolicy RedisClusterMaintenancePolicyPtrInput
	// Unique name of the resource in this scope including project and location using the form:
	// projects/{projectId}/locations/{locationId}/clusters/{clusterId}
	Name pulumi.StringPtrInput
	// The nodeType for the Redis cluster. If not provided, REDIS_HIGHMEM_MEDIUM will be used as default Possible values:
	// ["REDIS_SHARED_CORE_NANO", "REDIS_HIGHMEM_MEDIUM", "REDIS_HIGHMEM_XLARGE", "REDIS_STANDARD_SMALL"]
	NodeType pulumi.StringPtrInput
	// Persistence config (RDB, AOF) for the cluster.
	PersistenceConfig RedisClusterPersistenceConfigPtrInput
	Project           pulumi.StringPtrInput
	// Required. Each PscConfig configures the consumer network where two network addresses will be designated to the cluster
	// for client access. Currently, only one PscConfig is supported.
	PscConfigs     RedisClusterPscConfigArrayInput
	RedisClusterId pulumi.StringPtrInput
	// Configure Redis Cluster behavior using a subset of native Redis configuration parameters. Please check Memorystore
	// documentation for the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/cluster/supported-instance-configurations
	RedisConfigs pulumi.StringMapInput
	// The name of the region of the Redis cluster.
	Region pulumi.StringPtrInput
	// Optional. The number of replica nodes per shard.
	ReplicaCount pulumi.Float64PtrInput
	// Required. Number of shards for the Redis cluster.
	ShardCount pulumi.Float64Input
	Timeouts   RedisClusterTimeoutsPtrInput
	// Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is disabled for the cluster.
	// Default value: "TRANSIT_ENCRYPTION_MODE_DISABLED" Possible values: ["TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
	// "TRANSIT_ENCRYPTION_MODE_DISABLED", "TRANSIT_ENCRYPTION_MODE_SERVER_AUTHENTICATION"]
	TransitEncryptionMode pulumi.StringPtrInput
	// Immutable. Zone distribution config for Memorystore Redis cluster.
	ZoneDistributionConfig RedisClusterZoneDistributionConfigPtrInput
}

func (RedisClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*redisClusterArgs)(nil)).Elem()
}

type RedisClusterInput interface {
	pulumi.Input

	ToRedisClusterOutput() RedisClusterOutput
	ToRedisClusterOutputWithContext(ctx context.Context) RedisClusterOutput
}

func (*RedisCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisCluster)(nil)).Elem()
}

func (i *RedisCluster) ToRedisClusterOutput() RedisClusterOutput {
	return i.ToRedisClusterOutputWithContext(context.Background())
}

func (i *RedisCluster) ToRedisClusterOutputWithContext(ctx context.Context) RedisClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisClusterOutput)
}

type RedisClusterOutput struct{ *pulumi.OutputState }

func (RedisClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisCluster)(nil)).Elem()
}

func (o RedisClusterOutput) ToRedisClusterOutput() RedisClusterOutput {
	return o
}

func (o RedisClusterOutput) ToRedisClusterOutputWithContext(ctx context.Context) RedisClusterOutput {
	return o
}

// Optional. The authorization mode of the Redis cluster. If not provided, auth feature is disabled for the cluster.
// Default value: "AUTH_MODE_DISABLED" Possible values: ["AUTH_MODE_UNSPECIFIED", "AUTH_MODE_IAM_AUTH",
// "AUTH_MODE_DISABLED"]
func (o RedisClusterOutput) AuthorizationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringPtrOutput { return v.AuthorizationMode }).(pulumi.StringPtrOutput)
}

// The timestamp associated with the cluster creation request. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o RedisClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Cross cluster replication config
func (o RedisClusterOutput) CrossClusterReplicationConfig() RedisClusterCrossClusterReplicationConfigPtrOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterCrossClusterReplicationConfigPtrOutput {
		return v.CrossClusterReplicationConfig
	}).(RedisClusterCrossClusterReplicationConfigPtrOutput)
}

// Optional. Indicates if the cluster is deletion protected or not. If the value if set to true, any delete cluster
// operation will fail. Default value is true.
func (o RedisClusterOutput) DeletionProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.BoolPtrOutput { return v.DeletionProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// Output only. Endpoints created on each given network, for Redis clients to connect to the cluster. Currently only one
// endpoint is supported.
func (o RedisClusterOutput) DiscoveryEndpoints() RedisClusterDiscoveryEndpointArrayOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterDiscoveryEndpointArrayOutput { return v.DiscoveryEndpoints }).(RedisClusterDiscoveryEndpointArrayOutput)
}

// Maintenance policy for a cluster
func (o RedisClusterOutput) MaintenancePolicy() RedisClusterMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterMaintenancePolicyPtrOutput { return v.MaintenancePolicy }).(RedisClusterMaintenancePolicyPtrOutput)
}

// Upcoming maintenance schedule.
func (o RedisClusterOutput) MaintenanceSchedules() RedisClusterMaintenanceScheduleArrayOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterMaintenanceScheduleArrayOutput { return v.MaintenanceSchedules }).(RedisClusterMaintenanceScheduleArrayOutput)
}

// Unique name of the resource in this scope including project and location using the form:
// projects/{projectId}/locations/{locationId}/clusters/{clusterId}
func (o RedisClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The nodeType for the Redis cluster. If not provided, REDIS_HIGHMEM_MEDIUM will be used as default Possible values:
// ["REDIS_SHARED_CORE_NANO", "REDIS_HIGHMEM_MEDIUM", "REDIS_HIGHMEM_XLARGE", "REDIS_STANDARD_SMALL"]
func (o RedisClusterOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.NodeType }).(pulumi.StringOutput)
}

// Persistence config (RDB, AOF) for the cluster.
func (o RedisClusterOutput) PersistenceConfig() RedisClusterPersistenceConfigPtrOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterPersistenceConfigPtrOutput { return v.PersistenceConfig }).(RedisClusterPersistenceConfigPtrOutput)
}

// Output only. Redis memory precise size in GB for the entire cluster.
func (o RedisClusterOutput) PreciseSizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v *RedisCluster) pulumi.Float64Output { return v.PreciseSizeGb }).(pulumi.Float64Output)
}

func (o RedisClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Required. Each PscConfig configures the consumer network where two network addresses will be designated to the cluster
// for client access. Currently, only one PscConfig is supported.
func (o RedisClusterOutput) PscConfigs() RedisClusterPscConfigArrayOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterPscConfigArrayOutput { return v.PscConfigs }).(RedisClusterPscConfigArrayOutput)
}

// Output only. PSC connections for discovery of the cluster topology and accessing the cluster.
func (o RedisClusterOutput) PscConnections() RedisClusterPscConnectionArrayOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterPscConnectionArrayOutput { return v.PscConnections }).(RedisClusterPscConnectionArrayOutput)
}

// Service attachment details to configure Psc connections.
func (o RedisClusterOutput) PscServiceAttachments() RedisClusterPscServiceAttachmentArrayOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterPscServiceAttachmentArrayOutput { return v.PscServiceAttachments }).(RedisClusterPscServiceAttachmentArrayOutput)
}

func (o RedisClusterOutput) RedisClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.RedisClusterId }).(pulumi.StringOutput)
}

// Configure Redis Cluster behavior using a subset of native Redis configuration parameters. Please check Memorystore
// documentation for the list of supported parameters:
// https://cloud.google.com/memorystore/docs/cluster/supported-instance-configurations
func (o RedisClusterOutput) RedisConfigs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringMapOutput { return v.RedisConfigs }).(pulumi.StringMapOutput)
}

// The name of the region of the Redis cluster.
func (o RedisClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Optional. The number of replica nodes per shard.
func (o RedisClusterOutput) ReplicaCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.Float64PtrOutput { return v.ReplicaCount }).(pulumi.Float64PtrOutput)
}

// Required. Number of shards for the Redis cluster.
func (o RedisClusterOutput) ShardCount() pulumi.Float64Output {
	return o.ApplyT(func(v *RedisCluster) pulumi.Float64Output { return v.ShardCount }).(pulumi.Float64Output)
}

// Output only. Redis memory size in GB for the entire cluster.
func (o RedisClusterOutput) SizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v *RedisCluster) pulumi.Float64Output { return v.SizeGb }).(pulumi.Float64Output)
}

// The current state of this cluster. Can be CREATING, READY, UPDATING, DELETING and SUSPENDED
func (o RedisClusterOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Output only. Additional information about the current state of the cluster.
func (o RedisClusterOutput) StateInfos() RedisClusterStateInfoArrayOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterStateInfoArrayOutput { return v.StateInfos }).(RedisClusterStateInfoArrayOutput)
}

func (o RedisClusterOutput) Timeouts() RedisClusterTimeoutsPtrOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterTimeoutsPtrOutput { return v.Timeouts }).(RedisClusterTimeoutsPtrOutput)
}

// Optional. The in-transit encryption for the Redis cluster. If not provided, encryption is disabled for the cluster.
// Default value: "TRANSIT_ENCRYPTION_MODE_DISABLED" Possible values: ["TRANSIT_ENCRYPTION_MODE_UNSPECIFIED",
// "TRANSIT_ENCRYPTION_MODE_DISABLED", "TRANSIT_ENCRYPTION_MODE_SERVER_AUTHENTICATION"]
func (o RedisClusterOutput) TransitEncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringPtrOutput { return v.TransitEncryptionMode }).(pulumi.StringPtrOutput)
}

// System assigned, unique identifier for the cluster.
func (o RedisClusterOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisCluster) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Immutable. Zone distribution config for Memorystore Redis cluster.
func (o RedisClusterOutput) ZoneDistributionConfig() RedisClusterZoneDistributionConfigPtrOutput {
	return o.ApplyT(func(v *RedisCluster) RedisClusterZoneDistributionConfigPtrOutput { return v.ZoneDistributionConfig }).(RedisClusterZoneDistributionConfigPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RedisClusterInput)(nil)).Elem(), &RedisCluster{})
	pulumi.RegisterOutputType(RedisClusterOutput{})
}
