// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigtableTableIamPolicy struct {
	pulumi.CustomResourceState

	BigtableTableIamPolicyId pulumi.StringOutput `pulumi:"bigtableTableIamPolicyId"`
	Etag                     pulumi.StringOutput `pulumi:"etag"`
	Instance                 pulumi.StringOutput `pulumi:"instance"`
	PolicyData               pulumi.StringOutput `pulumi:"policyData"`
	Project                  pulumi.StringOutput `pulumi:"project"`
	Table                    pulumi.StringOutput `pulumi:"table"`
}

// NewBigtableTableIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewBigtableTableIamPolicy(ctx *pulumi.Context,
	name string, args *BigtableTableIamPolicyArgs, opts ...pulumi.ResourceOption) (*BigtableTableIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Instance == nil {
		return nil, errors.New("invalid value for required argument 'Instance'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.Table == nil {
		return nil, errors.New("invalid value for required argument 'Table'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigtableTableIamPolicy
	err = ctx.RegisterPackageResource("google:index/bigtableTableIamPolicy:BigtableTableIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigtableTableIamPolicy gets an existing BigtableTableIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigtableTableIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigtableTableIamPolicyState, opts ...pulumi.ResourceOption) (*BigtableTableIamPolicy, error) {
	var resource BigtableTableIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigtableTableIamPolicy:BigtableTableIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigtableTableIamPolicy resources.
type bigtableTableIamPolicyState struct {
	BigtableTableIamPolicyId *string `pulumi:"bigtableTableIamPolicyId"`
	Etag                     *string `pulumi:"etag"`
	Instance                 *string `pulumi:"instance"`
	PolicyData               *string `pulumi:"policyData"`
	Project                  *string `pulumi:"project"`
	Table                    *string `pulumi:"table"`
}

type BigtableTableIamPolicyState struct {
	BigtableTableIamPolicyId pulumi.StringPtrInput
	Etag                     pulumi.StringPtrInput
	Instance                 pulumi.StringPtrInput
	PolicyData               pulumi.StringPtrInput
	Project                  pulumi.StringPtrInput
	Table                    pulumi.StringPtrInput
}

func (BigtableTableIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigtableTableIamPolicyState)(nil)).Elem()
}

type bigtableTableIamPolicyArgs struct {
	BigtableTableIamPolicyId *string `pulumi:"bigtableTableIamPolicyId"`
	Instance                 string  `pulumi:"instance"`
	PolicyData               string  `pulumi:"policyData"`
	Project                  *string `pulumi:"project"`
	Table                    string  `pulumi:"table"`
}

// The set of arguments for constructing a BigtableTableIamPolicy resource.
type BigtableTableIamPolicyArgs struct {
	BigtableTableIamPolicyId pulumi.StringPtrInput
	Instance                 pulumi.StringInput
	PolicyData               pulumi.StringInput
	Project                  pulumi.StringPtrInput
	Table                    pulumi.StringInput
}

func (BigtableTableIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigtableTableIamPolicyArgs)(nil)).Elem()
}

type BigtableTableIamPolicyInput interface {
	pulumi.Input

	ToBigtableTableIamPolicyOutput() BigtableTableIamPolicyOutput
	ToBigtableTableIamPolicyOutputWithContext(ctx context.Context) BigtableTableIamPolicyOutput
}

func (*BigtableTableIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BigtableTableIamPolicy)(nil)).Elem()
}

func (i *BigtableTableIamPolicy) ToBigtableTableIamPolicyOutput() BigtableTableIamPolicyOutput {
	return i.ToBigtableTableIamPolicyOutputWithContext(context.Background())
}

func (i *BigtableTableIamPolicy) ToBigtableTableIamPolicyOutputWithContext(ctx context.Context) BigtableTableIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigtableTableIamPolicyOutput)
}

type BigtableTableIamPolicyOutput struct{ *pulumi.OutputState }

func (BigtableTableIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigtableTableIamPolicy)(nil)).Elem()
}

func (o BigtableTableIamPolicyOutput) ToBigtableTableIamPolicyOutput() BigtableTableIamPolicyOutput {
	return o
}

func (o BigtableTableIamPolicyOutput) ToBigtableTableIamPolicyOutputWithContext(ctx context.Context) BigtableTableIamPolicyOutput {
	return o
}

func (o BigtableTableIamPolicyOutput) BigtableTableIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTableIamPolicy) pulumi.StringOutput { return v.BigtableTableIamPolicyId }).(pulumi.StringOutput)
}

func (o BigtableTableIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTableIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigtableTableIamPolicyOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTableIamPolicy) pulumi.StringOutput { return v.Instance }).(pulumi.StringOutput)
}

func (o BigtableTableIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTableIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o BigtableTableIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTableIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigtableTableIamPolicyOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v *BigtableTableIamPolicy) pulumi.StringOutput { return v.Table }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigtableTableIamPolicyInput)(nil)).Elem(), &BigtableTableIamPolicy{})
	pulumi.RegisterOutputType(BigtableTableIamPolicyOutput{})
}
