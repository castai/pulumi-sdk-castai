// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudRunServiceIamMember struct {
	pulumi.CustomResourceState

	CloudRunServiceIamMemberId pulumi.StringOutput                        `pulumi:"cloudRunServiceIamMemberId"`
	Condition                  CloudRunServiceIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                       pulumi.StringOutput                        `pulumi:"etag"`
	Location                   pulumi.StringOutput                        `pulumi:"location"`
	Member                     pulumi.StringOutput                        `pulumi:"member"`
	Project                    pulumi.StringOutput                        `pulumi:"project"`
	Role                       pulumi.StringOutput                        `pulumi:"role"`
	Service                    pulumi.StringOutput                        `pulumi:"service"`
}

// NewCloudRunServiceIamMember registers a new resource with the given unique name, arguments, and options.
func NewCloudRunServiceIamMember(ctx *pulumi.Context,
	name string, args *CloudRunServiceIamMemberArgs, opts ...pulumi.ResourceOption) (*CloudRunServiceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudRunServiceIamMember
	err = ctx.RegisterPackageResource("google:index/cloudRunServiceIamMember:CloudRunServiceIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudRunServiceIamMember gets an existing CloudRunServiceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudRunServiceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudRunServiceIamMemberState, opts ...pulumi.ResourceOption) (*CloudRunServiceIamMember, error) {
	var resource CloudRunServiceIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudRunServiceIamMember:CloudRunServiceIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudRunServiceIamMember resources.
type cloudRunServiceIamMemberState struct {
	CloudRunServiceIamMemberId *string                            `pulumi:"cloudRunServiceIamMemberId"`
	Condition                  *CloudRunServiceIamMemberCondition `pulumi:"condition"`
	Etag                       *string                            `pulumi:"etag"`
	Location                   *string                            `pulumi:"location"`
	Member                     *string                            `pulumi:"member"`
	Project                    *string                            `pulumi:"project"`
	Role                       *string                            `pulumi:"role"`
	Service                    *string                            `pulumi:"service"`
}

type CloudRunServiceIamMemberState struct {
	CloudRunServiceIamMemberId pulumi.StringPtrInput
	Condition                  CloudRunServiceIamMemberConditionPtrInput
	Etag                       pulumi.StringPtrInput
	Location                   pulumi.StringPtrInput
	Member                     pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	Role                       pulumi.StringPtrInput
	Service                    pulumi.StringPtrInput
}

func (CloudRunServiceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunServiceIamMemberState)(nil)).Elem()
}

type cloudRunServiceIamMemberArgs struct {
	CloudRunServiceIamMemberId *string                            `pulumi:"cloudRunServiceIamMemberId"`
	Condition                  *CloudRunServiceIamMemberCondition `pulumi:"condition"`
	Location                   *string                            `pulumi:"location"`
	Member                     string                             `pulumi:"member"`
	Project                    *string                            `pulumi:"project"`
	Role                       string                             `pulumi:"role"`
	Service                    string                             `pulumi:"service"`
}

// The set of arguments for constructing a CloudRunServiceIamMember resource.
type CloudRunServiceIamMemberArgs struct {
	CloudRunServiceIamMemberId pulumi.StringPtrInput
	Condition                  CloudRunServiceIamMemberConditionPtrInput
	Location                   pulumi.StringPtrInput
	Member                     pulumi.StringInput
	Project                    pulumi.StringPtrInput
	Role                       pulumi.StringInput
	Service                    pulumi.StringInput
}

func (CloudRunServiceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunServiceIamMemberArgs)(nil)).Elem()
}

type CloudRunServiceIamMemberInput interface {
	pulumi.Input

	ToCloudRunServiceIamMemberOutput() CloudRunServiceIamMemberOutput
	ToCloudRunServiceIamMemberOutputWithContext(ctx context.Context) CloudRunServiceIamMemberOutput
}

func (*CloudRunServiceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunServiceIamMember)(nil)).Elem()
}

func (i *CloudRunServiceIamMember) ToCloudRunServiceIamMemberOutput() CloudRunServiceIamMemberOutput {
	return i.ToCloudRunServiceIamMemberOutputWithContext(context.Background())
}

func (i *CloudRunServiceIamMember) ToCloudRunServiceIamMemberOutputWithContext(ctx context.Context) CloudRunServiceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudRunServiceIamMemberOutput)
}

type CloudRunServiceIamMemberOutput struct{ *pulumi.OutputState }

func (CloudRunServiceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunServiceIamMember)(nil)).Elem()
}

func (o CloudRunServiceIamMemberOutput) ToCloudRunServiceIamMemberOutput() CloudRunServiceIamMemberOutput {
	return o
}

func (o CloudRunServiceIamMemberOutput) ToCloudRunServiceIamMemberOutputWithContext(ctx context.Context) CloudRunServiceIamMemberOutput {
	return o
}

func (o CloudRunServiceIamMemberOutput) CloudRunServiceIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamMember) pulumi.StringOutput { return v.CloudRunServiceIamMemberId }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamMemberOutput) Condition() CloudRunServiceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *CloudRunServiceIamMember) CloudRunServiceIamMemberConditionPtrOutput { return v.Condition }).(CloudRunServiceIamMemberConditionPtrOutput)
}

func (o CloudRunServiceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamMemberOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamMember) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudRunServiceIamMemberInput)(nil)).Elem(), &CloudRunServiceIamMember{})
	pulumi.RegisterOutputType(CloudRunServiceIamMemberOutput{})
}
