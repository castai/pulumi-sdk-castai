// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationIamPolicy struct {
	pulumi.CustomResourceState

	Etag pulumi.StringOutput `pulumi:"etag"`
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                   pulumi.StringOutput `pulumi:"orgId"`
	OrganizationIamPolicyId pulumi.StringOutput `pulumi:"organizationIamPolicyId"`
	PolicyData              pulumi.StringOutput `pulumi:"policyData"`
}

// NewOrganizationIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewOrganizationIamPolicy(ctx *pulumi.Context,
	name string, args *OrganizationIamPolicyArgs, opts ...pulumi.ResourceOption) (*OrganizationIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource OrganizationIamPolicy
	err = ctx.RegisterPackageResource("google:index/organizationIamPolicy:OrganizationIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationIamPolicy gets an existing OrganizationIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationIamPolicyState, opts ...pulumi.ResourceOption) (*OrganizationIamPolicy, error) {
	var resource OrganizationIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/organizationIamPolicy:OrganizationIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationIamPolicy resources.
type organizationIamPolicyState struct {
	Etag *string `pulumi:"etag"`
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                   *string `pulumi:"orgId"`
	OrganizationIamPolicyId *string `pulumi:"organizationIamPolicyId"`
	PolicyData              *string `pulumi:"policyData"`
}

type OrganizationIamPolicyState struct {
	Etag pulumi.StringPtrInput
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                   pulumi.StringPtrInput
	OrganizationIamPolicyId pulumi.StringPtrInput
	PolicyData              pulumi.StringPtrInput
}

func (OrganizationIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationIamPolicyState)(nil)).Elem()
}

type organizationIamPolicyArgs struct {
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                   string  `pulumi:"orgId"`
	OrganizationIamPolicyId *string `pulumi:"organizationIamPolicyId"`
	PolicyData              string  `pulumi:"policyData"`
}

// The set of arguments for constructing a OrganizationIamPolicy resource.
type OrganizationIamPolicyArgs struct {
	// The numeric ID of the organization in which you want to manage the audit logging config.
	OrgId                   pulumi.StringInput
	OrganizationIamPolicyId pulumi.StringPtrInput
	PolicyData              pulumi.StringInput
}

func (OrganizationIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationIamPolicyArgs)(nil)).Elem()
}

type OrganizationIamPolicyInput interface {
	pulumi.Input

	ToOrganizationIamPolicyOutput() OrganizationIamPolicyOutput
	ToOrganizationIamPolicyOutputWithContext(ctx context.Context) OrganizationIamPolicyOutput
}

func (*OrganizationIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationIamPolicy)(nil)).Elem()
}

func (i *OrganizationIamPolicy) ToOrganizationIamPolicyOutput() OrganizationIamPolicyOutput {
	return i.ToOrganizationIamPolicyOutputWithContext(context.Background())
}

func (i *OrganizationIamPolicy) ToOrganizationIamPolicyOutputWithContext(ctx context.Context) OrganizationIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationIamPolicyOutput)
}

type OrganizationIamPolicyOutput struct{ *pulumi.OutputState }

func (OrganizationIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationIamPolicy)(nil)).Elem()
}

func (o OrganizationIamPolicyOutput) ToOrganizationIamPolicyOutput() OrganizationIamPolicyOutput {
	return o
}

func (o OrganizationIamPolicyOutput) ToOrganizationIamPolicyOutputWithContext(ctx context.Context) OrganizationIamPolicyOutput {
	return o
}

func (o OrganizationIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The numeric ID of the organization in which you want to manage the audit logging config.
func (o OrganizationIamPolicyOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationIamPolicy) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

func (o OrganizationIamPolicyOutput) OrganizationIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationIamPolicy) pulumi.StringOutput { return v.OrganizationIamPolicyId }).(pulumi.StringOutput)
}

func (o OrganizationIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationIamPolicyInput)(nil)).Elem(), &OrganizationIamPolicy{})
	pulumi.RegisterOutputType(OrganizationIamPolicyOutput{})
}
