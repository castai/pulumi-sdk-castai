// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetComposerImageVersions(ctx *pulumi.Context, args *GetComposerImageVersionsArgs, opts ...pulumi.InvokeOption) (*GetComposerImageVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetComposerImageVersionsResult
	err = ctx.InvokePackage("google:index/getComposerImageVersions:getComposerImageVersions", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComposerImageVersions.
type GetComposerImageVersionsArgs struct {
	Id      *string `pulumi:"id"`
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
}

// A collection of values returned by getComposerImageVersions.
type GetComposerImageVersionsResult struct {
	Id            string                                 `pulumi:"id"`
	ImageVersions []GetComposerImageVersionsImageVersion `pulumi:"imageVersions"`
	Project       string                                 `pulumi:"project"`
	Region        string                                 `pulumi:"region"`
}

func GetComposerImageVersionsOutput(ctx *pulumi.Context, args GetComposerImageVersionsOutputArgs, opts ...pulumi.InvokeOption) GetComposerImageVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetComposerImageVersionsResultOutput, error) {
			args := v.(GetComposerImageVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetComposerImageVersionsResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getComposerImageVersions:getComposerImageVersions", args, GetComposerImageVersionsResultOutput{}, options).(GetComposerImageVersionsResultOutput), nil
		}).(GetComposerImageVersionsResultOutput)
}

// A collection of arguments for invoking getComposerImageVersions.
type GetComposerImageVersionsOutputArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Project pulumi.StringPtrInput `pulumi:"project"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
}

func (GetComposerImageVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComposerImageVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getComposerImageVersions.
type GetComposerImageVersionsResultOutput struct{ *pulumi.OutputState }

func (GetComposerImageVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComposerImageVersionsResult)(nil)).Elem()
}

func (o GetComposerImageVersionsResultOutput) ToGetComposerImageVersionsResultOutput() GetComposerImageVersionsResultOutput {
	return o
}

func (o GetComposerImageVersionsResultOutput) ToGetComposerImageVersionsResultOutputWithContext(ctx context.Context) GetComposerImageVersionsResultOutput {
	return o
}

func (o GetComposerImageVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComposerImageVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComposerImageVersionsResultOutput) ImageVersions() GetComposerImageVersionsImageVersionArrayOutput {
	return o.ApplyT(func(v GetComposerImageVersionsResult) []GetComposerImageVersionsImageVersion { return v.ImageVersions }).(GetComposerImageVersionsImageVersionArrayOutput)
}

func (o GetComposerImageVersionsResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetComposerImageVersionsResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetComposerImageVersionsResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetComposerImageVersionsResult) string { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetComposerImageVersionsResultOutput{})
}
