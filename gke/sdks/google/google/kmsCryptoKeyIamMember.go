// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KmsCryptoKeyIamMember struct {
	pulumi.CustomResourceState

	Condition               KmsCryptoKeyIamMemberConditionPtrOutput `pulumi:"condition"`
	CryptoKeyId             pulumi.StringOutput                     `pulumi:"cryptoKeyId"`
	Etag                    pulumi.StringOutput                     `pulumi:"etag"`
	KmsCryptoKeyIamMemberId pulumi.StringOutput                     `pulumi:"kmsCryptoKeyIamMemberId"`
	Member                  pulumi.StringOutput                     `pulumi:"member"`
	Role                    pulumi.StringOutput                     `pulumi:"role"`
}

// NewKmsCryptoKeyIamMember registers a new resource with the given unique name, arguments, and options.
func NewKmsCryptoKeyIamMember(ctx *pulumi.Context,
	name string, args *KmsCryptoKeyIamMemberArgs, opts ...pulumi.ResourceOption) (*KmsCryptoKeyIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CryptoKeyId == nil {
		return nil, errors.New("invalid value for required argument 'CryptoKeyId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource KmsCryptoKeyIamMember
	err = ctx.RegisterPackageResource("google:index/kmsCryptoKeyIamMember:KmsCryptoKeyIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsCryptoKeyIamMember gets an existing KmsCryptoKeyIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsCryptoKeyIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsCryptoKeyIamMemberState, opts ...pulumi.ResourceOption) (*KmsCryptoKeyIamMember, error) {
	var resource KmsCryptoKeyIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/kmsCryptoKeyIamMember:KmsCryptoKeyIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsCryptoKeyIamMember resources.
type kmsCryptoKeyIamMemberState struct {
	Condition               *KmsCryptoKeyIamMemberCondition `pulumi:"condition"`
	CryptoKeyId             *string                         `pulumi:"cryptoKeyId"`
	Etag                    *string                         `pulumi:"etag"`
	KmsCryptoKeyIamMemberId *string                         `pulumi:"kmsCryptoKeyIamMemberId"`
	Member                  *string                         `pulumi:"member"`
	Role                    *string                         `pulumi:"role"`
}

type KmsCryptoKeyIamMemberState struct {
	Condition               KmsCryptoKeyIamMemberConditionPtrInput
	CryptoKeyId             pulumi.StringPtrInput
	Etag                    pulumi.StringPtrInput
	KmsCryptoKeyIamMemberId pulumi.StringPtrInput
	Member                  pulumi.StringPtrInput
	Role                    pulumi.StringPtrInput
}

func (KmsCryptoKeyIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsCryptoKeyIamMemberState)(nil)).Elem()
}

type kmsCryptoKeyIamMemberArgs struct {
	Condition               *KmsCryptoKeyIamMemberCondition `pulumi:"condition"`
	CryptoKeyId             string                          `pulumi:"cryptoKeyId"`
	KmsCryptoKeyIamMemberId *string                         `pulumi:"kmsCryptoKeyIamMemberId"`
	Member                  string                          `pulumi:"member"`
	Role                    string                          `pulumi:"role"`
}

// The set of arguments for constructing a KmsCryptoKeyIamMember resource.
type KmsCryptoKeyIamMemberArgs struct {
	Condition               KmsCryptoKeyIamMemberConditionPtrInput
	CryptoKeyId             pulumi.StringInput
	KmsCryptoKeyIamMemberId pulumi.StringPtrInput
	Member                  pulumi.StringInput
	Role                    pulumi.StringInput
}

func (KmsCryptoKeyIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsCryptoKeyIamMemberArgs)(nil)).Elem()
}

type KmsCryptoKeyIamMemberInput interface {
	pulumi.Input

	ToKmsCryptoKeyIamMemberOutput() KmsCryptoKeyIamMemberOutput
	ToKmsCryptoKeyIamMemberOutputWithContext(ctx context.Context) KmsCryptoKeyIamMemberOutput
}

func (*KmsCryptoKeyIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsCryptoKeyIamMember)(nil)).Elem()
}

func (i *KmsCryptoKeyIamMember) ToKmsCryptoKeyIamMemberOutput() KmsCryptoKeyIamMemberOutput {
	return i.ToKmsCryptoKeyIamMemberOutputWithContext(context.Background())
}

func (i *KmsCryptoKeyIamMember) ToKmsCryptoKeyIamMemberOutputWithContext(ctx context.Context) KmsCryptoKeyIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsCryptoKeyIamMemberOutput)
}

type KmsCryptoKeyIamMemberOutput struct{ *pulumi.OutputState }

func (KmsCryptoKeyIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsCryptoKeyIamMember)(nil)).Elem()
}

func (o KmsCryptoKeyIamMemberOutput) ToKmsCryptoKeyIamMemberOutput() KmsCryptoKeyIamMemberOutput {
	return o
}

func (o KmsCryptoKeyIamMemberOutput) ToKmsCryptoKeyIamMemberOutputWithContext(ctx context.Context) KmsCryptoKeyIamMemberOutput {
	return o
}

func (o KmsCryptoKeyIamMemberOutput) Condition() KmsCryptoKeyIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamMember) KmsCryptoKeyIamMemberConditionPtrOutput { return v.Condition }).(KmsCryptoKeyIamMemberConditionPtrOutput)
}

func (o KmsCryptoKeyIamMemberOutput) CryptoKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamMember) pulumi.StringOutput { return v.CryptoKeyId }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamMemberOutput) KmsCryptoKeyIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamMember) pulumi.StringOutput { return v.KmsCryptoKeyIamMemberId }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsCryptoKeyIamMemberInput)(nil)).Elem(), &KmsCryptoKeyIamMember{})
	pulumi.RegisterOutputType(KmsCryptoKeyIamMemberOutput{})
}
