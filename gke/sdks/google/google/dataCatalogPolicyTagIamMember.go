// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataCatalogPolicyTagIamMember struct {
	pulumi.CustomResourceState

	Condition                       DataCatalogPolicyTagIamMemberConditionPtrOutput `pulumi:"condition"`
	DataCatalogPolicyTagIamMemberId pulumi.StringOutput                             `pulumi:"dataCatalogPolicyTagIamMemberId"`
	Etag                            pulumi.StringOutput                             `pulumi:"etag"`
	Member                          pulumi.StringOutput                             `pulumi:"member"`
	PolicyTag                       pulumi.StringOutput                             `pulumi:"policyTag"`
	Role                            pulumi.StringOutput                             `pulumi:"role"`
}

// NewDataCatalogPolicyTagIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataCatalogPolicyTagIamMember(ctx *pulumi.Context,
	name string, args *DataCatalogPolicyTagIamMemberArgs, opts ...pulumi.ResourceOption) (*DataCatalogPolicyTagIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.PolicyTag == nil {
		return nil, errors.New("invalid value for required argument 'PolicyTag'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataCatalogPolicyTagIamMember
	err = ctx.RegisterPackageResource("google:index/dataCatalogPolicyTagIamMember:DataCatalogPolicyTagIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataCatalogPolicyTagIamMember gets an existing DataCatalogPolicyTagIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataCatalogPolicyTagIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataCatalogPolicyTagIamMemberState, opts ...pulumi.ResourceOption) (*DataCatalogPolicyTagIamMember, error) {
	var resource DataCatalogPolicyTagIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataCatalogPolicyTagIamMember:DataCatalogPolicyTagIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataCatalogPolicyTagIamMember resources.
type dataCatalogPolicyTagIamMemberState struct {
	Condition                       *DataCatalogPolicyTagIamMemberCondition `pulumi:"condition"`
	DataCatalogPolicyTagIamMemberId *string                                 `pulumi:"dataCatalogPolicyTagIamMemberId"`
	Etag                            *string                                 `pulumi:"etag"`
	Member                          *string                                 `pulumi:"member"`
	PolicyTag                       *string                                 `pulumi:"policyTag"`
	Role                            *string                                 `pulumi:"role"`
}

type DataCatalogPolicyTagIamMemberState struct {
	Condition                       DataCatalogPolicyTagIamMemberConditionPtrInput
	DataCatalogPolicyTagIamMemberId pulumi.StringPtrInput
	Etag                            pulumi.StringPtrInput
	Member                          pulumi.StringPtrInput
	PolicyTag                       pulumi.StringPtrInput
	Role                            pulumi.StringPtrInput
}

func (DataCatalogPolicyTagIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogPolicyTagIamMemberState)(nil)).Elem()
}

type dataCatalogPolicyTagIamMemberArgs struct {
	Condition                       *DataCatalogPolicyTagIamMemberCondition `pulumi:"condition"`
	DataCatalogPolicyTagIamMemberId *string                                 `pulumi:"dataCatalogPolicyTagIamMemberId"`
	Member                          string                                  `pulumi:"member"`
	PolicyTag                       string                                  `pulumi:"policyTag"`
	Role                            string                                  `pulumi:"role"`
}

// The set of arguments for constructing a DataCatalogPolicyTagIamMember resource.
type DataCatalogPolicyTagIamMemberArgs struct {
	Condition                       DataCatalogPolicyTagIamMemberConditionPtrInput
	DataCatalogPolicyTagIamMemberId pulumi.StringPtrInput
	Member                          pulumi.StringInput
	PolicyTag                       pulumi.StringInput
	Role                            pulumi.StringInput
}

func (DataCatalogPolicyTagIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogPolicyTagIamMemberArgs)(nil)).Elem()
}

type DataCatalogPolicyTagIamMemberInput interface {
	pulumi.Input

	ToDataCatalogPolicyTagIamMemberOutput() DataCatalogPolicyTagIamMemberOutput
	ToDataCatalogPolicyTagIamMemberOutputWithContext(ctx context.Context) DataCatalogPolicyTagIamMemberOutput
}

func (*DataCatalogPolicyTagIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogPolicyTagIamMember)(nil)).Elem()
}

func (i *DataCatalogPolicyTagIamMember) ToDataCatalogPolicyTagIamMemberOutput() DataCatalogPolicyTagIamMemberOutput {
	return i.ToDataCatalogPolicyTagIamMemberOutputWithContext(context.Background())
}

func (i *DataCatalogPolicyTagIamMember) ToDataCatalogPolicyTagIamMemberOutputWithContext(ctx context.Context) DataCatalogPolicyTagIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogPolicyTagIamMemberOutput)
}

type DataCatalogPolicyTagIamMemberOutput struct{ *pulumi.OutputState }

func (DataCatalogPolicyTagIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogPolicyTagIamMember)(nil)).Elem()
}

func (o DataCatalogPolicyTagIamMemberOutput) ToDataCatalogPolicyTagIamMemberOutput() DataCatalogPolicyTagIamMemberOutput {
	return o
}

func (o DataCatalogPolicyTagIamMemberOutput) ToDataCatalogPolicyTagIamMemberOutputWithContext(ctx context.Context) DataCatalogPolicyTagIamMemberOutput {
	return o
}

func (o DataCatalogPolicyTagIamMemberOutput) Condition() DataCatalogPolicyTagIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataCatalogPolicyTagIamMember) DataCatalogPolicyTagIamMemberConditionPtrOutput {
		return v.Condition
	}).(DataCatalogPolicyTagIamMemberConditionPtrOutput)
}

func (o DataCatalogPolicyTagIamMemberOutput) DataCatalogPolicyTagIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogPolicyTagIamMember) pulumi.StringOutput { return v.DataCatalogPolicyTagIamMemberId }).(pulumi.StringOutput)
}

func (o DataCatalogPolicyTagIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogPolicyTagIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataCatalogPolicyTagIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogPolicyTagIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataCatalogPolicyTagIamMemberOutput) PolicyTag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogPolicyTagIamMember) pulumi.StringOutput { return v.PolicyTag }).(pulumi.StringOutput)
}

func (o DataCatalogPolicyTagIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogPolicyTagIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataCatalogPolicyTagIamMemberInput)(nil)).Elem(), &DataCatalogPolicyTagIamMember{})
	pulumi.RegisterOutputType(DataCatalogPolicyTagIamMemberOutput{})
}
