// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClouddeployTargetIamMember struct {
	pulumi.CustomResourceState

	ClouddeployTargetIamMemberId pulumi.StringOutput                          `pulumi:"clouddeployTargetIamMemberId"`
	Condition                    ClouddeployTargetIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	Location                     pulumi.StringOutput                          `pulumi:"location"`
	Member                       pulumi.StringOutput                          `pulumi:"member"`
	Name                         pulumi.StringOutput                          `pulumi:"name"`
	Project                      pulumi.StringOutput                          `pulumi:"project"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
}

// NewClouddeployTargetIamMember registers a new resource with the given unique name, arguments, and options.
func NewClouddeployTargetIamMember(ctx *pulumi.Context,
	name string, args *ClouddeployTargetIamMemberArgs, opts ...pulumi.ResourceOption) (*ClouddeployTargetIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ClouddeployTargetIamMember
	err = ctx.RegisterPackageResource("google:index/clouddeployTargetIamMember:ClouddeployTargetIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClouddeployTargetIamMember gets an existing ClouddeployTargetIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClouddeployTargetIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClouddeployTargetIamMemberState, opts ...pulumi.ResourceOption) (*ClouddeployTargetIamMember, error) {
	var resource ClouddeployTargetIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/clouddeployTargetIamMember:ClouddeployTargetIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClouddeployTargetIamMember resources.
type clouddeployTargetIamMemberState struct {
	ClouddeployTargetIamMemberId *string                              `pulumi:"clouddeployTargetIamMemberId"`
	Condition                    *ClouddeployTargetIamMemberCondition `pulumi:"condition"`
	Etag                         *string                              `pulumi:"etag"`
	Location                     *string                              `pulumi:"location"`
	Member                       *string                              `pulumi:"member"`
	Name                         *string                              `pulumi:"name"`
	Project                      *string                              `pulumi:"project"`
	Role                         *string                              `pulumi:"role"`
}

type ClouddeployTargetIamMemberState struct {
	ClouddeployTargetIamMemberId pulumi.StringPtrInput
	Condition                    ClouddeployTargetIamMemberConditionPtrInput
	Etag                         pulumi.StringPtrInput
	Location                     pulumi.StringPtrInput
	Member                       pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringPtrInput
}

func (ClouddeployTargetIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddeployTargetIamMemberState)(nil)).Elem()
}

type clouddeployTargetIamMemberArgs struct {
	ClouddeployTargetIamMemberId *string                              `pulumi:"clouddeployTargetIamMemberId"`
	Condition                    *ClouddeployTargetIamMemberCondition `pulumi:"condition"`
	Location                     *string                              `pulumi:"location"`
	Member                       string                               `pulumi:"member"`
	Name                         *string                              `pulumi:"name"`
	Project                      *string                              `pulumi:"project"`
	Role                         string                               `pulumi:"role"`
}

// The set of arguments for constructing a ClouddeployTargetIamMember resource.
type ClouddeployTargetIamMemberArgs struct {
	ClouddeployTargetIamMemberId pulumi.StringPtrInput
	Condition                    ClouddeployTargetIamMemberConditionPtrInput
	Location                     pulumi.StringPtrInput
	Member                       pulumi.StringInput
	Name                         pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringInput
}

func (ClouddeployTargetIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clouddeployTargetIamMemberArgs)(nil)).Elem()
}

type ClouddeployTargetIamMemberInput interface {
	pulumi.Input

	ToClouddeployTargetIamMemberOutput() ClouddeployTargetIamMemberOutput
	ToClouddeployTargetIamMemberOutputWithContext(ctx context.Context) ClouddeployTargetIamMemberOutput
}

func (*ClouddeployTargetIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddeployTargetIamMember)(nil)).Elem()
}

func (i *ClouddeployTargetIamMember) ToClouddeployTargetIamMemberOutput() ClouddeployTargetIamMemberOutput {
	return i.ToClouddeployTargetIamMemberOutputWithContext(context.Background())
}

func (i *ClouddeployTargetIamMember) ToClouddeployTargetIamMemberOutputWithContext(ctx context.Context) ClouddeployTargetIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClouddeployTargetIamMemberOutput)
}

type ClouddeployTargetIamMemberOutput struct{ *pulumi.OutputState }

func (ClouddeployTargetIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClouddeployTargetIamMember)(nil)).Elem()
}

func (o ClouddeployTargetIamMemberOutput) ToClouddeployTargetIamMemberOutput() ClouddeployTargetIamMemberOutput {
	return o
}

func (o ClouddeployTargetIamMemberOutput) ToClouddeployTargetIamMemberOutputWithContext(ctx context.Context) ClouddeployTargetIamMemberOutput {
	return o
}

func (o ClouddeployTargetIamMemberOutput) ClouddeployTargetIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamMember) pulumi.StringOutput { return v.ClouddeployTargetIamMemberId }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamMemberOutput) Condition() ClouddeployTargetIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamMember) ClouddeployTargetIamMemberConditionPtrOutput { return v.Condition }).(ClouddeployTargetIamMemberConditionPtrOutput)
}

func (o ClouddeployTargetIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ClouddeployTargetIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ClouddeployTargetIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClouddeployTargetIamMemberInput)(nil)).Elem(), &ClouddeployTargetIamMember{})
	pulumi.RegisterOutputType(ClouddeployTargetIamMemberOutput{})
}
