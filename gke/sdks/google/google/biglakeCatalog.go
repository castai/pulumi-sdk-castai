// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BiglakeCatalog struct {
	pulumi.CustomResourceState

	BiglakeCatalogId pulumi.StringOutput `pulumi:"biglakeCatalogId"`
	// Output only. The creation time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Output only. The deletion time of the catalog. Only set after the catalog is deleted. A timestamp in RFC3339 UTC "Zulu"
	// format, with nanosecond resolution and up to nine fractional digits.
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// Output only. The time when this catalog is considered expired. Only set after the catalog is deleted. Only set after the
	// catalog is deleted. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
	// digits.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// The geographic location where the Catalog should reside.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name of the Catalog. Format: projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
	Name     pulumi.StringOutput             `pulumi:"name"`
	Project  pulumi.StringOutput             `pulumi:"project"`
	Timeouts BiglakeCatalogTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. The last modification time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewBiglakeCatalog registers a new resource with the given unique name, arguments, and options.
func NewBiglakeCatalog(ctx *pulumi.Context,
	name string, args *BiglakeCatalogArgs, opts ...pulumi.ResourceOption) (*BiglakeCatalog, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BiglakeCatalog
	err = ctx.RegisterPackageResource("google:index/biglakeCatalog:BiglakeCatalog", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBiglakeCatalog gets an existing BiglakeCatalog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBiglakeCatalog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BiglakeCatalogState, opts ...pulumi.ResourceOption) (*BiglakeCatalog, error) {
	var resource BiglakeCatalog
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/biglakeCatalog:BiglakeCatalog", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BiglakeCatalog resources.
type biglakeCatalogState struct {
	BiglakeCatalogId *string `pulumi:"biglakeCatalogId"`
	// Output only. The creation time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// Output only. The deletion time of the catalog. Only set after the catalog is deleted. A timestamp in RFC3339 UTC "Zulu"
	// format, with nanosecond resolution and up to nine fractional digits.
	DeleteTime *string `pulumi:"deleteTime"`
	// Output only. The time when this catalog is considered expired. Only set after the catalog is deleted. Only set after the
	// catalog is deleted. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
	// digits.
	ExpireTime *string `pulumi:"expireTime"`
	// The geographic location where the Catalog should reside.
	Location *string `pulumi:"location"`
	// The name of the Catalog. Format: projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
	Name     *string                 `pulumi:"name"`
	Project  *string                 `pulumi:"project"`
	Timeouts *BiglakeCatalogTimeouts `pulumi:"timeouts"`
	// Output only. The last modification time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime *string `pulumi:"updateTime"`
}

type BiglakeCatalogState struct {
	BiglakeCatalogId pulumi.StringPtrInput
	// Output only. The creation time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits.
	CreateTime pulumi.StringPtrInput
	// Output only. The deletion time of the catalog. Only set after the catalog is deleted. A timestamp in RFC3339 UTC "Zulu"
	// format, with nanosecond resolution and up to nine fractional digits.
	DeleteTime pulumi.StringPtrInput
	// Output only. The time when this catalog is considered expired. Only set after the catalog is deleted. Only set after the
	// catalog is deleted. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
	// digits.
	ExpireTime pulumi.StringPtrInput
	// The geographic location where the Catalog should reside.
	Location pulumi.StringPtrInput
	// The name of the Catalog. Format: projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts BiglakeCatalogTimeoutsPtrInput
	// Output only. The last modification time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
	// resolution and up to nine fractional digits.
	UpdateTime pulumi.StringPtrInput
}

func (BiglakeCatalogState) ElementType() reflect.Type {
	return reflect.TypeOf((*biglakeCatalogState)(nil)).Elem()
}

type biglakeCatalogArgs struct {
	BiglakeCatalogId *string `pulumi:"biglakeCatalogId"`
	// The geographic location where the Catalog should reside.
	Location string `pulumi:"location"`
	// The name of the Catalog. Format: projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
	Name     *string                 `pulumi:"name"`
	Project  *string                 `pulumi:"project"`
	Timeouts *BiglakeCatalogTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BiglakeCatalog resource.
type BiglakeCatalogArgs struct {
	BiglakeCatalogId pulumi.StringPtrInput
	// The geographic location where the Catalog should reside.
	Location pulumi.StringInput
	// The name of the Catalog. Format: projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts BiglakeCatalogTimeoutsPtrInput
}

func (BiglakeCatalogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*biglakeCatalogArgs)(nil)).Elem()
}

type BiglakeCatalogInput interface {
	pulumi.Input

	ToBiglakeCatalogOutput() BiglakeCatalogOutput
	ToBiglakeCatalogOutputWithContext(ctx context.Context) BiglakeCatalogOutput
}

func (*BiglakeCatalog) ElementType() reflect.Type {
	return reflect.TypeOf((**BiglakeCatalog)(nil)).Elem()
}

func (i *BiglakeCatalog) ToBiglakeCatalogOutput() BiglakeCatalogOutput {
	return i.ToBiglakeCatalogOutputWithContext(context.Background())
}

func (i *BiglakeCatalog) ToBiglakeCatalogOutputWithContext(ctx context.Context) BiglakeCatalogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BiglakeCatalogOutput)
}

type BiglakeCatalogOutput struct{ *pulumi.OutputState }

func (BiglakeCatalogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BiglakeCatalog)(nil)).Elem()
}

func (o BiglakeCatalogOutput) ToBiglakeCatalogOutput() BiglakeCatalogOutput {
	return o
}

func (o BiglakeCatalogOutput) ToBiglakeCatalogOutputWithContext(ctx context.Context) BiglakeCatalogOutput {
	return o
}

func (o BiglakeCatalogOutput) BiglakeCatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeCatalog) pulumi.StringOutput { return v.BiglakeCatalogId }).(pulumi.StringOutput)
}

// Output only. The creation time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
// up to nine fractional digits.
func (o BiglakeCatalogOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeCatalog) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Output only. The deletion time of the catalog. Only set after the catalog is deleted. A timestamp in RFC3339 UTC "Zulu"
// format, with nanosecond resolution and up to nine fractional digits.
func (o BiglakeCatalogOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeCatalog) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// Output only. The time when this catalog is considered expired. Only set after the catalog is deleted. Only set after the
// catalog is deleted. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
// digits.
func (o BiglakeCatalogOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeCatalog) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// The geographic location where the Catalog should reside.
func (o BiglakeCatalogOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeCatalog) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name of the Catalog. Format: projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
func (o BiglakeCatalogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeCatalog) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BiglakeCatalogOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeCatalog) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BiglakeCatalogOutput) Timeouts() BiglakeCatalogTimeoutsPtrOutput {
	return o.ApplyT(func(v *BiglakeCatalog) BiglakeCatalogTimeoutsPtrOutput { return v.Timeouts }).(BiglakeCatalogTimeoutsPtrOutput)
}

// Output only. The last modification time of the catalog. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
// resolution and up to nine fractional digits.
func (o BiglakeCatalogOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BiglakeCatalog) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BiglakeCatalogInput)(nil)).Elem(), &BiglakeCatalog{})
	pulumi.RegisterOutputType(BiglakeCatalogOutput{})
}
