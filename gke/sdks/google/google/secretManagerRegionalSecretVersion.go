// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SecretManagerRegionalSecretVersion struct {
	pulumi.CustomResourceState

	// The time at which the regional secret version was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The customer-managed encryption configuration of the regional secret.
	CustomerManagedEncryptions SecretManagerRegionalSecretVersionCustomerManagedEncryptionArrayOutput `pulumi:"customerManagedEncryptions"`
	// The deletion policy for the regional secret version. Setting 'ABANDON' allows the resource to be abandoned rather than
	// deleted. Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values
	// are: * DELETE * DISABLE * ABANDON
	DeletionPolicy pulumi.StringPtrOutput `pulumi:"deletionPolicy"`
	// The time at which the regional secret version was destroyed. Only present if state is DESTROYED.
	DestroyTime pulumi.StringOutput `pulumi:"destroyTime"`
	// The current state of the regional secret version.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 pulumi.BoolPtrOutput `pulumi:"isSecretDataBase64"`
	// Location of Secret Manager regional secret resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource name of the regional secret version. Format:
	// 'projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}'
	Name pulumi.StringOutput `pulumi:"name"`
	// Secret Manager regional secret resource.
	Secret pulumi.StringOutput `pulumi:"secret"`
	// The secret data. Must be no larger than 64KiB.
	SecretData                           pulumi.StringOutput                                 `pulumi:"secretData"`
	SecretManagerRegionalSecretVersionId pulumi.StringOutput                                 `pulumi:"secretManagerRegionalSecretVersionId"`
	Timeouts                             SecretManagerRegionalSecretVersionTimeoutsPtrOutput `pulumi:"timeouts"`
	// The version of the Regional Secret.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewSecretManagerRegionalSecretVersion registers a new resource with the given unique name, arguments, and options.
func NewSecretManagerRegionalSecretVersion(ctx *pulumi.Context,
	name string, args *SecretManagerRegionalSecretVersionArgs, opts ...pulumi.ResourceOption) (*SecretManagerRegionalSecretVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Secret == nil {
		return nil, errors.New("invalid value for required argument 'Secret'")
	}
	if args.SecretData == nil {
		return nil, errors.New("invalid value for required argument 'SecretData'")
	}
	if args.SecretData != nil {
		args.SecretData = pulumi.ToSecret(args.SecretData).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretData",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SecretManagerRegionalSecretVersion
	err = ctx.RegisterPackageResource("google:index/secretManagerRegionalSecretVersion:SecretManagerRegionalSecretVersion", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecretManagerRegionalSecretVersion gets an existing SecretManagerRegionalSecretVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecretManagerRegionalSecretVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecretManagerRegionalSecretVersionState, opts ...pulumi.ResourceOption) (*SecretManagerRegionalSecretVersion, error) {
	var resource SecretManagerRegionalSecretVersion
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/secretManagerRegionalSecretVersion:SecretManagerRegionalSecretVersion", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecretManagerRegionalSecretVersion resources.
type secretManagerRegionalSecretVersionState struct {
	// The time at which the regional secret version was created.
	CreateTime *string `pulumi:"createTime"`
	// The customer-managed encryption configuration of the regional secret.
	CustomerManagedEncryptions []SecretManagerRegionalSecretVersionCustomerManagedEncryption `pulumi:"customerManagedEncryptions"`
	// The deletion policy for the regional secret version. Setting 'ABANDON' allows the resource to be abandoned rather than
	// deleted. Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values
	// are: * DELETE * DISABLE * ABANDON
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// The time at which the regional secret version was destroyed. Only present if state is DESTROYED.
	DestroyTime *string `pulumi:"destroyTime"`
	// The current state of the regional secret version.
	Enabled *bool `pulumi:"enabled"`
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 *bool `pulumi:"isSecretDataBase64"`
	// Location of Secret Manager regional secret resource.
	Location *string `pulumi:"location"`
	// The resource name of the regional secret version. Format:
	// 'projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}'
	Name *string `pulumi:"name"`
	// Secret Manager regional secret resource.
	Secret *string `pulumi:"secret"`
	// The secret data. Must be no larger than 64KiB.
	SecretData                           *string                                     `pulumi:"secretData"`
	SecretManagerRegionalSecretVersionId *string                                     `pulumi:"secretManagerRegionalSecretVersionId"`
	Timeouts                             *SecretManagerRegionalSecretVersionTimeouts `pulumi:"timeouts"`
	// The version of the Regional Secret.
	Version *string `pulumi:"version"`
}

type SecretManagerRegionalSecretVersionState struct {
	// The time at which the regional secret version was created.
	CreateTime pulumi.StringPtrInput
	// The customer-managed encryption configuration of the regional secret.
	CustomerManagedEncryptions SecretManagerRegionalSecretVersionCustomerManagedEncryptionArrayInput
	// The deletion policy for the regional secret version. Setting 'ABANDON' allows the resource to be abandoned rather than
	// deleted. Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values
	// are: * DELETE * DISABLE * ABANDON
	DeletionPolicy pulumi.StringPtrInput
	// The time at which the regional secret version was destroyed. Only present if state is DESTROYED.
	DestroyTime pulumi.StringPtrInput
	// The current state of the regional secret version.
	Enabled pulumi.BoolPtrInput
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 pulumi.BoolPtrInput
	// Location of Secret Manager regional secret resource.
	Location pulumi.StringPtrInput
	// The resource name of the regional secret version. Format:
	// 'projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}'
	Name pulumi.StringPtrInput
	// Secret Manager regional secret resource.
	Secret pulumi.StringPtrInput
	// The secret data. Must be no larger than 64KiB.
	SecretData                           pulumi.StringPtrInput
	SecretManagerRegionalSecretVersionId pulumi.StringPtrInput
	Timeouts                             SecretManagerRegionalSecretVersionTimeoutsPtrInput
	// The version of the Regional Secret.
	Version pulumi.StringPtrInput
}

func (SecretManagerRegionalSecretVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*secretManagerRegionalSecretVersionState)(nil)).Elem()
}

type secretManagerRegionalSecretVersionArgs struct {
	// The deletion policy for the regional secret version. Setting 'ABANDON' allows the resource to be abandoned rather than
	// deleted. Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values
	// are: * DELETE * DISABLE * ABANDON
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// The current state of the regional secret version.
	Enabled *bool `pulumi:"enabled"`
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 *bool `pulumi:"isSecretDataBase64"`
	// Secret Manager regional secret resource.
	Secret string `pulumi:"secret"`
	// The secret data. Must be no larger than 64KiB.
	SecretData                           string                                      `pulumi:"secretData"`
	SecretManagerRegionalSecretVersionId *string                                     `pulumi:"secretManagerRegionalSecretVersionId"`
	Timeouts                             *SecretManagerRegionalSecretVersionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SecretManagerRegionalSecretVersion resource.
type SecretManagerRegionalSecretVersionArgs struct {
	// The deletion policy for the regional secret version. Setting 'ABANDON' allows the resource to be abandoned rather than
	// deleted. Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values
	// are: * DELETE * DISABLE * ABANDON
	DeletionPolicy pulumi.StringPtrInput
	// The current state of the regional secret version.
	Enabled pulumi.BoolPtrInput
	// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
	IsSecretDataBase64 pulumi.BoolPtrInput
	// Secret Manager regional secret resource.
	Secret pulumi.StringInput
	// The secret data. Must be no larger than 64KiB.
	SecretData                           pulumi.StringInput
	SecretManagerRegionalSecretVersionId pulumi.StringPtrInput
	Timeouts                             SecretManagerRegionalSecretVersionTimeoutsPtrInput
}

func (SecretManagerRegionalSecretVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*secretManagerRegionalSecretVersionArgs)(nil)).Elem()
}

type SecretManagerRegionalSecretVersionInput interface {
	pulumi.Input

	ToSecretManagerRegionalSecretVersionOutput() SecretManagerRegionalSecretVersionOutput
	ToSecretManagerRegionalSecretVersionOutputWithContext(ctx context.Context) SecretManagerRegionalSecretVersionOutput
}

func (*SecretManagerRegionalSecretVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretManagerRegionalSecretVersion)(nil)).Elem()
}

func (i *SecretManagerRegionalSecretVersion) ToSecretManagerRegionalSecretVersionOutput() SecretManagerRegionalSecretVersionOutput {
	return i.ToSecretManagerRegionalSecretVersionOutputWithContext(context.Background())
}

func (i *SecretManagerRegionalSecretVersion) ToSecretManagerRegionalSecretVersionOutputWithContext(ctx context.Context) SecretManagerRegionalSecretVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretManagerRegionalSecretVersionOutput)
}

type SecretManagerRegionalSecretVersionOutput struct{ *pulumi.OutputState }

func (SecretManagerRegionalSecretVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretManagerRegionalSecretVersion)(nil)).Elem()
}

func (o SecretManagerRegionalSecretVersionOutput) ToSecretManagerRegionalSecretVersionOutput() SecretManagerRegionalSecretVersionOutput {
	return o
}

func (o SecretManagerRegionalSecretVersionOutput) ToSecretManagerRegionalSecretVersionOutputWithContext(ctx context.Context) SecretManagerRegionalSecretVersionOutput {
	return o
}

// The time at which the regional secret version was created.
func (o SecretManagerRegionalSecretVersionOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The customer-managed encryption configuration of the regional secret.
func (o SecretManagerRegionalSecretVersionOutput) CustomerManagedEncryptions() SecretManagerRegionalSecretVersionCustomerManagedEncryptionArrayOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) SecretManagerRegionalSecretVersionCustomerManagedEncryptionArrayOutput {
		return v.CustomerManagedEncryptions
	}).(SecretManagerRegionalSecretVersionCustomerManagedEncryptionArrayOutput)
}

// The deletion policy for the regional secret version. Setting 'ABANDON' allows the resource to be abandoned rather than
// deleted. Setting 'DISABLE' allows the resource to be disabled rather than deleted. Default is 'DELETE'. Possible values
// are: * DELETE * DISABLE * ABANDON
func (o SecretManagerRegionalSecretVersionOutput) DeletionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.StringPtrOutput { return v.DeletionPolicy }).(pulumi.StringPtrOutput)
}

// The time at which the regional secret version was destroyed. Only present if state is DESTROYED.
func (o SecretManagerRegionalSecretVersionOutput) DestroyTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.StringOutput { return v.DestroyTime }).(pulumi.StringOutput)
}

// The current state of the regional secret version.
func (o SecretManagerRegionalSecretVersionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
func (o SecretManagerRegionalSecretVersionOutput) IsSecretDataBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.BoolPtrOutput { return v.IsSecretDataBase64 }).(pulumi.BoolPtrOutput)
}

// Location of Secret Manager regional secret resource.
func (o SecretManagerRegionalSecretVersionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource name of the regional secret version. Format:
// 'projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}'
func (o SecretManagerRegionalSecretVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Secret Manager regional secret resource.
func (o SecretManagerRegionalSecretVersionOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.StringOutput { return v.Secret }).(pulumi.StringOutput)
}

// The secret data. Must be no larger than 64KiB.
func (o SecretManagerRegionalSecretVersionOutput) SecretData() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.StringOutput { return v.SecretData }).(pulumi.StringOutput)
}

func (o SecretManagerRegionalSecretVersionOutput) SecretManagerRegionalSecretVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.StringOutput {
		return v.SecretManagerRegionalSecretVersionId
	}).(pulumi.StringOutput)
}

func (o SecretManagerRegionalSecretVersionOutput) Timeouts() SecretManagerRegionalSecretVersionTimeoutsPtrOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) SecretManagerRegionalSecretVersionTimeoutsPtrOutput {
		return v.Timeouts
	}).(SecretManagerRegionalSecretVersionTimeoutsPtrOutput)
}

// The version of the Regional Secret.
func (o SecretManagerRegionalSecretVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *SecretManagerRegionalSecretVersion) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecretManagerRegionalSecretVersionInput)(nil)).Elem(), &SecretManagerRegionalSecretVersion{})
	pulumi.RegisterOutputType(SecretManagerRegionalSecretVersionOutput{})
}
