// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataCatalogTagTemplateIamMember struct {
	pulumi.CustomResourceState

	Condition                         DataCatalogTagTemplateIamMemberConditionPtrOutput `pulumi:"condition"`
	DataCatalogTagTemplateIamMemberId pulumi.StringOutput                               `pulumi:"dataCatalogTagTemplateIamMemberId"`
	Etag                              pulumi.StringOutput                               `pulumi:"etag"`
	Member                            pulumi.StringOutput                               `pulumi:"member"`
	Project                           pulumi.StringOutput                               `pulumi:"project"`
	Region                            pulumi.StringOutput                               `pulumi:"region"`
	Role                              pulumi.StringOutput                               `pulumi:"role"`
	TagTemplate                       pulumi.StringOutput                               `pulumi:"tagTemplate"`
}

// NewDataCatalogTagTemplateIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataCatalogTagTemplateIamMember(ctx *pulumi.Context,
	name string, args *DataCatalogTagTemplateIamMemberArgs, opts ...pulumi.ResourceOption) (*DataCatalogTagTemplateIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.TagTemplate == nil {
		return nil, errors.New("invalid value for required argument 'TagTemplate'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataCatalogTagTemplateIamMember
	err = ctx.RegisterPackageResource("google:index/dataCatalogTagTemplateIamMember:DataCatalogTagTemplateIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataCatalogTagTemplateIamMember gets an existing DataCatalogTagTemplateIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataCatalogTagTemplateIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataCatalogTagTemplateIamMemberState, opts ...pulumi.ResourceOption) (*DataCatalogTagTemplateIamMember, error) {
	var resource DataCatalogTagTemplateIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataCatalogTagTemplateIamMember:DataCatalogTagTemplateIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataCatalogTagTemplateIamMember resources.
type dataCatalogTagTemplateIamMemberState struct {
	Condition                         *DataCatalogTagTemplateIamMemberCondition `pulumi:"condition"`
	DataCatalogTagTemplateIamMemberId *string                                   `pulumi:"dataCatalogTagTemplateIamMemberId"`
	Etag                              *string                                   `pulumi:"etag"`
	Member                            *string                                   `pulumi:"member"`
	Project                           *string                                   `pulumi:"project"`
	Region                            *string                                   `pulumi:"region"`
	Role                              *string                                   `pulumi:"role"`
	TagTemplate                       *string                                   `pulumi:"tagTemplate"`
}

type DataCatalogTagTemplateIamMemberState struct {
	Condition                         DataCatalogTagTemplateIamMemberConditionPtrInput
	DataCatalogTagTemplateIamMemberId pulumi.StringPtrInput
	Etag                              pulumi.StringPtrInput
	Member                            pulumi.StringPtrInput
	Project                           pulumi.StringPtrInput
	Region                            pulumi.StringPtrInput
	Role                              pulumi.StringPtrInput
	TagTemplate                       pulumi.StringPtrInput
}

func (DataCatalogTagTemplateIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogTagTemplateIamMemberState)(nil)).Elem()
}

type dataCatalogTagTemplateIamMemberArgs struct {
	Condition                         *DataCatalogTagTemplateIamMemberCondition `pulumi:"condition"`
	DataCatalogTagTemplateIamMemberId *string                                   `pulumi:"dataCatalogTagTemplateIamMemberId"`
	Member                            string                                    `pulumi:"member"`
	Project                           *string                                   `pulumi:"project"`
	Region                            *string                                   `pulumi:"region"`
	Role                              string                                    `pulumi:"role"`
	TagTemplate                       string                                    `pulumi:"tagTemplate"`
}

// The set of arguments for constructing a DataCatalogTagTemplateIamMember resource.
type DataCatalogTagTemplateIamMemberArgs struct {
	Condition                         DataCatalogTagTemplateIamMemberConditionPtrInput
	DataCatalogTagTemplateIamMemberId pulumi.StringPtrInput
	Member                            pulumi.StringInput
	Project                           pulumi.StringPtrInput
	Region                            pulumi.StringPtrInput
	Role                              pulumi.StringInput
	TagTemplate                       pulumi.StringInput
}

func (DataCatalogTagTemplateIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogTagTemplateIamMemberArgs)(nil)).Elem()
}

type DataCatalogTagTemplateIamMemberInput interface {
	pulumi.Input

	ToDataCatalogTagTemplateIamMemberOutput() DataCatalogTagTemplateIamMemberOutput
	ToDataCatalogTagTemplateIamMemberOutputWithContext(ctx context.Context) DataCatalogTagTemplateIamMemberOutput
}

func (*DataCatalogTagTemplateIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogTagTemplateIamMember)(nil)).Elem()
}

func (i *DataCatalogTagTemplateIamMember) ToDataCatalogTagTemplateIamMemberOutput() DataCatalogTagTemplateIamMemberOutput {
	return i.ToDataCatalogTagTemplateIamMemberOutputWithContext(context.Background())
}

func (i *DataCatalogTagTemplateIamMember) ToDataCatalogTagTemplateIamMemberOutputWithContext(ctx context.Context) DataCatalogTagTemplateIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogTagTemplateIamMemberOutput)
}

type DataCatalogTagTemplateIamMemberOutput struct{ *pulumi.OutputState }

func (DataCatalogTagTemplateIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogTagTemplateIamMember)(nil)).Elem()
}

func (o DataCatalogTagTemplateIamMemberOutput) ToDataCatalogTagTemplateIamMemberOutput() DataCatalogTagTemplateIamMemberOutput {
	return o
}

func (o DataCatalogTagTemplateIamMemberOutput) ToDataCatalogTagTemplateIamMemberOutputWithContext(ctx context.Context) DataCatalogTagTemplateIamMemberOutput {
	return o
}

func (o DataCatalogTagTemplateIamMemberOutput) Condition() DataCatalogTagTemplateIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamMember) DataCatalogTagTemplateIamMemberConditionPtrOutput {
		return v.Condition
	}).(DataCatalogTagTemplateIamMemberConditionPtrOutput)
}

func (o DataCatalogTagTemplateIamMemberOutput) DataCatalogTagTemplateIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamMember) pulumi.StringOutput {
		return v.DataCatalogTagTemplateIamMemberId
	}).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamMemberOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamMember) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o DataCatalogTagTemplateIamMemberOutput) TagTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogTagTemplateIamMember) pulumi.StringOutput { return v.TagTemplate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataCatalogTagTemplateIamMemberInput)(nil)).Elem(), &DataCatalogTagTemplateIamMember{})
	pulumi.RegisterOutputType(DataCatalogTagTemplateIamMemberOutput{})
}
