// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KmsCryptoKeyIamBinding struct {
	pulumi.CustomResourceState

	Condition                KmsCryptoKeyIamBindingConditionPtrOutput `pulumi:"condition"`
	CryptoKeyId              pulumi.StringOutput                      `pulumi:"cryptoKeyId"`
	Etag                     pulumi.StringOutput                      `pulumi:"etag"`
	KmsCryptoKeyIamBindingId pulumi.StringOutput                      `pulumi:"kmsCryptoKeyIamBindingId"`
	Members                  pulumi.StringArrayOutput                 `pulumi:"members"`
	Role                     pulumi.StringOutput                      `pulumi:"role"`
}

// NewKmsCryptoKeyIamBinding registers a new resource with the given unique name, arguments, and options.
func NewKmsCryptoKeyIamBinding(ctx *pulumi.Context,
	name string, args *KmsCryptoKeyIamBindingArgs, opts ...pulumi.ResourceOption) (*KmsCryptoKeyIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CryptoKeyId == nil {
		return nil, errors.New("invalid value for required argument 'CryptoKeyId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource KmsCryptoKeyIamBinding
	err = ctx.RegisterPackageResource("google:index/kmsCryptoKeyIamBinding:KmsCryptoKeyIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsCryptoKeyIamBinding gets an existing KmsCryptoKeyIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsCryptoKeyIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsCryptoKeyIamBindingState, opts ...pulumi.ResourceOption) (*KmsCryptoKeyIamBinding, error) {
	var resource KmsCryptoKeyIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/kmsCryptoKeyIamBinding:KmsCryptoKeyIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsCryptoKeyIamBinding resources.
type kmsCryptoKeyIamBindingState struct {
	Condition                *KmsCryptoKeyIamBindingCondition `pulumi:"condition"`
	CryptoKeyId              *string                          `pulumi:"cryptoKeyId"`
	Etag                     *string                          `pulumi:"etag"`
	KmsCryptoKeyIamBindingId *string                          `pulumi:"kmsCryptoKeyIamBindingId"`
	Members                  []string                         `pulumi:"members"`
	Role                     *string                          `pulumi:"role"`
}

type KmsCryptoKeyIamBindingState struct {
	Condition                KmsCryptoKeyIamBindingConditionPtrInput
	CryptoKeyId              pulumi.StringPtrInput
	Etag                     pulumi.StringPtrInput
	KmsCryptoKeyIamBindingId pulumi.StringPtrInput
	Members                  pulumi.StringArrayInput
	Role                     pulumi.StringPtrInput
}

func (KmsCryptoKeyIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsCryptoKeyIamBindingState)(nil)).Elem()
}

type kmsCryptoKeyIamBindingArgs struct {
	Condition                *KmsCryptoKeyIamBindingCondition `pulumi:"condition"`
	CryptoKeyId              string                           `pulumi:"cryptoKeyId"`
	KmsCryptoKeyIamBindingId *string                          `pulumi:"kmsCryptoKeyIamBindingId"`
	Members                  []string                         `pulumi:"members"`
	Role                     string                           `pulumi:"role"`
}

// The set of arguments for constructing a KmsCryptoKeyIamBinding resource.
type KmsCryptoKeyIamBindingArgs struct {
	Condition                KmsCryptoKeyIamBindingConditionPtrInput
	CryptoKeyId              pulumi.StringInput
	KmsCryptoKeyIamBindingId pulumi.StringPtrInput
	Members                  pulumi.StringArrayInput
	Role                     pulumi.StringInput
}

func (KmsCryptoKeyIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsCryptoKeyIamBindingArgs)(nil)).Elem()
}

type KmsCryptoKeyIamBindingInput interface {
	pulumi.Input

	ToKmsCryptoKeyIamBindingOutput() KmsCryptoKeyIamBindingOutput
	ToKmsCryptoKeyIamBindingOutputWithContext(ctx context.Context) KmsCryptoKeyIamBindingOutput
}

func (*KmsCryptoKeyIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsCryptoKeyIamBinding)(nil)).Elem()
}

func (i *KmsCryptoKeyIamBinding) ToKmsCryptoKeyIamBindingOutput() KmsCryptoKeyIamBindingOutput {
	return i.ToKmsCryptoKeyIamBindingOutputWithContext(context.Background())
}

func (i *KmsCryptoKeyIamBinding) ToKmsCryptoKeyIamBindingOutputWithContext(ctx context.Context) KmsCryptoKeyIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsCryptoKeyIamBindingOutput)
}

type KmsCryptoKeyIamBindingOutput struct{ *pulumi.OutputState }

func (KmsCryptoKeyIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsCryptoKeyIamBinding)(nil)).Elem()
}

func (o KmsCryptoKeyIamBindingOutput) ToKmsCryptoKeyIamBindingOutput() KmsCryptoKeyIamBindingOutput {
	return o
}

func (o KmsCryptoKeyIamBindingOutput) ToKmsCryptoKeyIamBindingOutputWithContext(ctx context.Context) KmsCryptoKeyIamBindingOutput {
	return o
}

func (o KmsCryptoKeyIamBindingOutput) Condition() KmsCryptoKeyIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamBinding) KmsCryptoKeyIamBindingConditionPtrOutput { return v.Condition }).(KmsCryptoKeyIamBindingConditionPtrOutput)
}

func (o KmsCryptoKeyIamBindingOutput) CryptoKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamBinding) pulumi.StringOutput { return v.CryptoKeyId }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamBindingOutput) KmsCryptoKeyIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamBinding) pulumi.StringOutput { return v.KmsCryptoKeyIamBindingId }).(pulumi.StringOutput)
}

func (o KmsCryptoKeyIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o KmsCryptoKeyIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsCryptoKeyIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsCryptoKeyIamBindingInput)(nil)).Elem(), &KmsCryptoKeyIamBinding{})
	pulumi.RegisterOutputType(KmsCryptoKeyIamBindingOutput{})
}
