// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSpannerInstance(ctx *pulumi.Context, args *LookupSpannerInstanceArgs, opts ...pulumi.InvokeOption) (*LookupSpannerInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupSpannerInstanceResult
	err = ctx.InvokePackage("google:index/getSpannerInstance:getSpannerInstance", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSpannerInstance.
type LookupSpannerInstanceArgs struct {
	Config      *string `pulumi:"config"`
	DisplayName *string `pulumi:"displayName"`
	Id          *string `pulumi:"id"`
	Name        string  `pulumi:"name"`
	Project     *string `pulumi:"project"`
}

// A collection of values returned by getSpannerInstance.
type LookupSpannerInstanceResult struct {
	AutoscalingConfigs        []GetSpannerInstanceAutoscalingConfig `pulumi:"autoscalingConfigs"`
	Config                    *string                               `pulumi:"config"`
	DefaultBackupScheduleType string                                `pulumi:"defaultBackupScheduleType"`
	DisplayName               *string                               `pulumi:"displayName"`
	Edition                   string                                `pulumi:"edition"`
	EffectiveLabels           map[string]string                     `pulumi:"effectiveLabels"`
	ForceDestroy              bool                                  `pulumi:"forceDestroy"`
	Id                        string                                `pulumi:"id"`
	Labels                    map[string]string                     `pulumi:"labels"`
	Name                      string                                `pulumi:"name"`
	NumNodes                  float64                               `pulumi:"numNodes"`
	ProcessingUnits           float64                               `pulumi:"processingUnits"`
	Project                   *string                               `pulumi:"project"`
	State                     string                                `pulumi:"state"`
	TerraformLabels           map[string]string                     `pulumi:"terraformLabels"`
}

func LookupSpannerInstanceOutput(ctx *pulumi.Context, args LookupSpannerInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupSpannerInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSpannerInstanceResultOutput, error) {
			args := v.(LookupSpannerInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupSpannerInstanceResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getSpannerInstance:getSpannerInstance", args, LookupSpannerInstanceResultOutput{}, options).(LookupSpannerInstanceResultOutput), nil
		}).(LookupSpannerInstanceResultOutput)
}

// A collection of arguments for invoking getSpannerInstance.
type LookupSpannerInstanceOutputArgs struct {
	Config      pulumi.StringPtrInput `pulumi:"config"`
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Name        pulumi.StringInput    `pulumi:"name"`
	Project     pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupSpannerInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpannerInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getSpannerInstance.
type LookupSpannerInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupSpannerInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpannerInstanceResult)(nil)).Elem()
}

func (o LookupSpannerInstanceResultOutput) ToLookupSpannerInstanceResultOutput() LookupSpannerInstanceResultOutput {
	return o
}

func (o LookupSpannerInstanceResultOutput) ToLookupSpannerInstanceResultOutputWithContext(ctx context.Context) LookupSpannerInstanceResultOutput {
	return o
}

func (o LookupSpannerInstanceResultOutput) AutoscalingConfigs() GetSpannerInstanceAutoscalingConfigArrayOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) []GetSpannerInstanceAutoscalingConfig { return v.AutoscalingConfigs }).(GetSpannerInstanceAutoscalingConfigArrayOutput)
}

func (o LookupSpannerInstanceResultOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) *string { return v.Config }).(pulumi.StringPtrOutput)
}

func (o LookupSpannerInstanceResultOutput) DefaultBackupScheduleType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) string { return v.DefaultBackupScheduleType }).(pulumi.StringOutput)
}

func (o LookupSpannerInstanceResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupSpannerInstanceResultOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) string { return v.Edition }).(pulumi.StringOutput)
}

func (o LookupSpannerInstanceResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupSpannerInstanceResultOutput) ForceDestroy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) bool { return v.ForceDestroy }).(pulumi.BoolOutput)
}

func (o LookupSpannerInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSpannerInstanceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupSpannerInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSpannerInstanceResultOutput) NumNodes() pulumi.Float64Output {
	return o.ApplyT(func(v LookupSpannerInstanceResult) float64 { return v.NumNodes }).(pulumi.Float64Output)
}

func (o LookupSpannerInstanceResultOutput) ProcessingUnits() pulumi.Float64Output {
	return o.ApplyT(func(v LookupSpannerInstanceResult) float64 { return v.ProcessingUnits }).(pulumi.Float64Output)
}

func (o LookupSpannerInstanceResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupSpannerInstanceResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupSpannerInstanceResultOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSpannerInstanceResult) map[string]string { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSpannerInstanceResultOutput{})
}
