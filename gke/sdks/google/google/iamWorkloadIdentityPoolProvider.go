// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IamWorkloadIdentityPoolProvider struct {
	pulumi.CustomResourceState

	// [A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. * 'attribute': The custom attributes mapped from the assertion in
	// the 'attribute_mappings'. The maximum length of the attribute condition expression is 4096 characters. If unspecified,
	// all valid authentication credential are accepted. The following example shows how to only allow credentials with a
	// mapped 'google.groups' value of 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition pulumi.StringPtrOutput `pulumi:"attributeCondition"`
	// Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such
	// as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following
	// keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in IAM
	// bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * 'google.groups':
	// Groups the external identity belongs to. You can grant groups access to resources using an IAM 'principalSet' binding;
	// access applies to all members of the group. You can also provide custom attributes by specifying
	// 'attribute.{custom_attribute}', where '{custom_attribute}' is the name of the custom attribute to be mapped. You can
	// define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key
	// may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained
	// access for a workload to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}' *
	// 'google.groups':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}'
	// Each value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For AWS providers, the following rules apply: - If no attribute mapping is defined, the
	// following default mapping applies: ''' { "google.subject":"assertion.arn", "attribute.aws_role":
	// "assertion.arn.contains('assumed-role')" " ? assertion.arn.extract('{account_arn}assumed-role/')" " + 'assumed-role/'" "
	// + assertion.arn.extract('assumed-role/{role_name}/')" " : assertion.arn", } ''' - If any custom attribute mappings are
	//   defined, they must include a mapping to the 'google.subject' attribute. For OIDC providers, the following rules apply: -
	//   Custom attribute mappings must be defined, and must include a mapping to the 'google.subject' attribute. For example,
	//   the following maps the 'sub' claim of the incoming credential to the 'subject' attribute on a Google token. '''
	//   {"google.subject": "assertion.sub"} '''
	AttributeMapping pulumi.StringMapOutput `pulumi:"attributeMapping"`
	// An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
	Aws IamWorkloadIdentityPoolProviderAwsPtrOutput `pulumi:"aws"`
	// A description for the provider. Cannot exceed 256 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// A display name for the provider. Cannot exceed 32 characters.
	DisplayName                       pulumi.StringPtrOutput `pulumi:"displayName"`
	IamWorkloadIdentityPoolProviderId pulumi.StringOutput    `pulumi:"iamWorkloadIdentityPoolProviderId"`
	// The resource name of the provider as
	// 'projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}'.
	Name pulumi.StringOutput `pulumi:"name"`
	// An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
	Oidc    IamWorkloadIdentityPoolProviderOidcPtrOutput `pulumi:"oidc"`
	Project pulumi.StringOutput                          `pulumi:"project"`
	// An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
	Saml IamWorkloadIdentityPoolProviderSamlPtrOutput `pulumi:"saml"`
	// The state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active, and may be used to
	// validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
	// deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider.
	// You cannot reuse the ID of a soft-deleted provider until it is permanently deleted.
	State    pulumi.StringOutput                              `pulumi:"state"`
	Timeouts IamWorkloadIdentityPoolProviderTimeoutsPtrOutput `pulumi:"timeouts"`
	// The ID used for the pool, which is the final component of the pool resource name. This value should be 4-32 characters,
	// and may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId pulumi.StringOutput `pulumi:"workloadIdentityPoolId"`
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolProviderId pulumi.StringOutput `pulumi:"workloadIdentityPoolProviderId"`
	// An X.509-type identity provider represents a CA. It is trusted to assert a client identity if the client has a
	// certificate that chains up to this CA.
	X509 IamWorkloadIdentityPoolProviderX509PtrOutput `pulumi:"x509"`
}

// NewIamWorkloadIdentityPoolProvider registers a new resource with the given unique name, arguments, and options.
func NewIamWorkloadIdentityPoolProvider(ctx *pulumi.Context,
	name string, args *IamWorkloadIdentityPoolProviderArgs, opts ...pulumi.ResourceOption) (*IamWorkloadIdentityPoolProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.WorkloadIdentityPoolId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadIdentityPoolId'")
	}
	if args.WorkloadIdentityPoolProviderId == nil {
		return nil, errors.New("invalid value for required argument 'WorkloadIdentityPoolProviderId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IamWorkloadIdentityPoolProvider
	err = ctx.RegisterPackageResource("google:index/iamWorkloadIdentityPoolProvider:IamWorkloadIdentityPoolProvider", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamWorkloadIdentityPoolProvider gets an existing IamWorkloadIdentityPoolProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamWorkloadIdentityPoolProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamWorkloadIdentityPoolProviderState, opts ...pulumi.ResourceOption) (*IamWorkloadIdentityPoolProvider, error) {
	var resource IamWorkloadIdentityPoolProvider
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/iamWorkloadIdentityPoolProvider:IamWorkloadIdentityPoolProvider", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamWorkloadIdentityPoolProvider resources.
type iamWorkloadIdentityPoolProviderState struct {
	// [A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. * 'attribute': The custom attributes mapped from the assertion in
	// the 'attribute_mappings'. The maximum length of the attribute condition expression is 4096 characters. If unspecified,
	// all valid authentication credential are accepted. The following example shows how to only allow credentials with a
	// mapped 'google.groups' value of 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition *string `pulumi:"attributeCondition"`
	// Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such
	// as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following
	// keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in IAM
	// bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * 'google.groups':
	// Groups the external identity belongs to. You can grant groups access to resources using an IAM 'principalSet' binding;
	// access applies to all members of the group. You can also provide custom attributes by specifying
	// 'attribute.{custom_attribute}', where '{custom_attribute}' is the name of the custom attribute to be mapped. You can
	// define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key
	// may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained
	// access for a workload to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}' *
	// 'google.groups':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}'
	// Each value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For AWS providers, the following rules apply: - If no attribute mapping is defined, the
	// following default mapping applies: ''' { "google.subject":"assertion.arn", "attribute.aws_role":
	// "assertion.arn.contains('assumed-role')" " ? assertion.arn.extract('{account_arn}assumed-role/')" " + 'assumed-role/'" "
	// + assertion.arn.extract('assumed-role/{role_name}/')" " : assertion.arn", } ''' - If any custom attribute mappings are
	//   defined, they must include a mapping to the 'google.subject' attribute. For OIDC providers, the following rules apply: -
	//   Custom attribute mappings must be defined, and must include a mapping to the 'google.subject' attribute. For example,
	//   the following maps the 'sub' claim of the incoming credential to the 'subject' attribute on a Google token. '''
	//   {"google.subject": "assertion.sub"} '''
	AttributeMapping map[string]string `pulumi:"attributeMapping"`
	// An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
	Aws *IamWorkloadIdentityPoolProviderAws `pulumi:"aws"`
	// A description for the provider. Cannot exceed 256 characters.
	Description *string `pulumi:"description"`
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled *bool `pulumi:"disabled"`
	// A display name for the provider. Cannot exceed 32 characters.
	DisplayName                       *string `pulumi:"displayName"`
	IamWorkloadIdentityPoolProviderId *string `pulumi:"iamWorkloadIdentityPoolProviderId"`
	// The resource name of the provider as
	// 'projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}'.
	Name *string `pulumi:"name"`
	// An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
	Oidc    *IamWorkloadIdentityPoolProviderOidc `pulumi:"oidc"`
	Project *string                              `pulumi:"project"`
	// An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
	Saml *IamWorkloadIdentityPoolProviderSaml `pulumi:"saml"`
	// The state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active, and may be used to
	// validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
	// deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider.
	// You cannot reuse the ID of a soft-deleted provider until it is permanently deleted.
	State    *string                                  `pulumi:"state"`
	Timeouts *IamWorkloadIdentityPoolProviderTimeouts `pulumi:"timeouts"`
	// The ID used for the pool, which is the final component of the pool resource name. This value should be 4-32 characters,
	// and may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId *string `pulumi:"workloadIdentityPoolId"`
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolProviderId *string `pulumi:"workloadIdentityPoolProviderId"`
	// An X.509-type identity provider represents a CA. It is trusted to assert a client identity if the client has a
	// certificate that chains up to this CA.
	X509 *IamWorkloadIdentityPoolProviderX509 `pulumi:"x509"`
}

type IamWorkloadIdentityPoolProviderState struct {
	// [A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. * 'attribute': The custom attributes mapped from the assertion in
	// the 'attribute_mappings'. The maximum length of the attribute condition expression is 4096 characters. If unspecified,
	// all valid authentication credential are accepted. The following example shows how to only allow credentials with a
	// mapped 'google.groups' value of 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition pulumi.StringPtrInput
	// Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such
	// as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following
	// keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in IAM
	// bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * 'google.groups':
	// Groups the external identity belongs to. You can grant groups access to resources using an IAM 'principalSet' binding;
	// access applies to all members of the group. You can also provide custom attributes by specifying
	// 'attribute.{custom_attribute}', where '{custom_attribute}' is the name of the custom attribute to be mapped. You can
	// define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key
	// may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained
	// access for a workload to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}' *
	// 'google.groups':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}'
	// Each value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For AWS providers, the following rules apply: - If no attribute mapping is defined, the
	// following default mapping applies: ''' { "google.subject":"assertion.arn", "attribute.aws_role":
	// "assertion.arn.contains('assumed-role')" " ? assertion.arn.extract('{account_arn}assumed-role/')" " + 'assumed-role/'" "
	// + assertion.arn.extract('assumed-role/{role_name}/')" " : assertion.arn", } ''' - If any custom attribute mappings are
	//   defined, they must include a mapping to the 'google.subject' attribute. For OIDC providers, the following rules apply: -
	//   Custom attribute mappings must be defined, and must include a mapping to the 'google.subject' attribute. For example,
	//   the following maps the 'sub' claim of the incoming credential to the 'subject' attribute on a Google token. '''
	//   {"google.subject": "assertion.sub"} '''
	AttributeMapping pulumi.StringMapInput
	// An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
	Aws IamWorkloadIdentityPoolProviderAwsPtrInput
	// A description for the provider. Cannot exceed 256 characters.
	Description pulumi.StringPtrInput
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled pulumi.BoolPtrInput
	// A display name for the provider. Cannot exceed 32 characters.
	DisplayName                       pulumi.StringPtrInput
	IamWorkloadIdentityPoolProviderId pulumi.StringPtrInput
	// The resource name of the provider as
	// 'projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}'.
	Name pulumi.StringPtrInput
	// An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
	Oidc    IamWorkloadIdentityPoolProviderOidcPtrInput
	Project pulumi.StringPtrInput
	// An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
	Saml IamWorkloadIdentityPoolProviderSamlPtrInput
	// The state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active, and may be used to
	// validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
	// deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider.
	// You cannot reuse the ID of a soft-deleted provider until it is permanently deleted.
	State    pulumi.StringPtrInput
	Timeouts IamWorkloadIdentityPoolProviderTimeoutsPtrInput
	// The ID used for the pool, which is the final component of the pool resource name. This value should be 4-32 characters,
	// and may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId pulumi.StringPtrInput
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolProviderId pulumi.StringPtrInput
	// An X.509-type identity provider represents a CA. It is trusted to assert a client identity if the client has a
	// certificate that chains up to this CA.
	X509 IamWorkloadIdentityPoolProviderX509PtrInput
}

func (IamWorkloadIdentityPoolProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamWorkloadIdentityPoolProviderState)(nil)).Elem()
}

type iamWorkloadIdentityPoolProviderArgs struct {
	// [A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. * 'attribute': The custom attributes mapped from the assertion in
	// the 'attribute_mappings'. The maximum length of the attribute condition expression is 4096 characters. If unspecified,
	// all valid authentication credential are accepted. The following example shows how to only allow credentials with a
	// mapped 'google.groups' value of 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition *string `pulumi:"attributeCondition"`
	// Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such
	// as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following
	// keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in IAM
	// bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * 'google.groups':
	// Groups the external identity belongs to. You can grant groups access to resources using an IAM 'principalSet' binding;
	// access applies to all members of the group. You can also provide custom attributes by specifying
	// 'attribute.{custom_attribute}', where '{custom_attribute}' is the name of the custom attribute to be mapped. You can
	// define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key
	// may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained
	// access for a workload to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}' *
	// 'google.groups':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}'
	// Each value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For AWS providers, the following rules apply: - If no attribute mapping is defined, the
	// following default mapping applies: ''' { "google.subject":"assertion.arn", "attribute.aws_role":
	// "assertion.arn.contains('assumed-role')" " ? assertion.arn.extract('{account_arn}assumed-role/')" " + 'assumed-role/'" "
	// + assertion.arn.extract('assumed-role/{role_name}/')" " : assertion.arn", } ''' - If any custom attribute mappings are
	//   defined, they must include a mapping to the 'google.subject' attribute. For OIDC providers, the following rules apply: -
	//   Custom attribute mappings must be defined, and must include a mapping to the 'google.subject' attribute. For example,
	//   the following maps the 'sub' claim of the incoming credential to the 'subject' attribute on a Google token. '''
	//   {"google.subject": "assertion.sub"} '''
	AttributeMapping map[string]string `pulumi:"attributeMapping"`
	// An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
	Aws *IamWorkloadIdentityPoolProviderAws `pulumi:"aws"`
	// A description for the provider. Cannot exceed 256 characters.
	Description *string `pulumi:"description"`
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled *bool `pulumi:"disabled"`
	// A display name for the provider. Cannot exceed 32 characters.
	DisplayName                       *string `pulumi:"displayName"`
	IamWorkloadIdentityPoolProviderId *string `pulumi:"iamWorkloadIdentityPoolProviderId"`
	// An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
	Oidc    *IamWorkloadIdentityPoolProviderOidc `pulumi:"oidc"`
	Project *string                              `pulumi:"project"`
	// An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
	Saml     *IamWorkloadIdentityPoolProviderSaml     `pulumi:"saml"`
	Timeouts *IamWorkloadIdentityPoolProviderTimeouts `pulumi:"timeouts"`
	// The ID used for the pool, which is the final component of the pool resource name. This value should be 4-32 characters,
	// and may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId string `pulumi:"workloadIdentityPoolId"`
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolProviderId string `pulumi:"workloadIdentityPoolProviderId"`
	// An X.509-type identity provider represents a CA. It is trusted to assert a client identity if the client has a
	// certificate that chains up to this CA.
	X509 *IamWorkloadIdentityPoolProviderX509 `pulumi:"x509"`
}

// The set of arguments for constructing a IamWorkloadIdentityPoolProvider resource.
type IamWorkloadIdentityPoolProviderArgs struct {
	// [A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
	// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
	// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
	// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
	// mapped from the assertion in the 'attribute_mappings'. * 'attribute': The custom attributes mapped from the assertion in
	// the 'attribute_mappings'. The maximum length of the attribute condition expression is 4096 characters. If unspecified,
	// all valid authentication credential are accepted. The following example shows how to only allow credentials with a
	// mapped 'google.groups' value of 'admins': ''' "'admins' in google.groups" '''
	AttributeCondition pulumi.StringPtrInput
	// Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such
	// as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following
	// keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in IAM
	// bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * 'google.groups':
	// Groups the external identity belongs to. You can grant groups access to resources using an IAM 'principalSet' binding;
	// access applies to all members of the group. You can also provide custom attributes by specifying
	// 'attribute.{custom_attribute}', where '{custom_attribute}' is the name of the custom attribute to be mapped. You can
	// define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key
	// may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained
	// access for a workload to Google Cloud resources. For example: * 'google.subject':
	// 'principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}' *
	// 'google.groups':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}' *
	// 'attribute.{custom_attribute}':
	// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}'
	// Each value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
	// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
	// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
	// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
	// attributes must not exceed 8KB. For AWS providers, the following rules apply: - If no attribute mapping is defined, the
	// following default mapping applies: ''' { "google.subject":"assertion.arn", "attribute.aws_role":
	// "assertion.arn.contains('assumed-role')" " ? assertion.arn.extract('{account_arn}assumed-role/')" " + 'assumed-role/'" "
	// + assertion.arn.extract('assumed-role/{role_name}/')" " : assertion.arn", } ''' - If any custom attribute mappings are
	//   defined, they must include a mapping to the 'google.subject' attribute. For OIDC providers, the following rules apply: -
	//   Custom attribute mappings must be defined, and must include a mapping to the 'google.subject' attribute. For example,
	//   the following maps the 'sub' claim of the incoming credential to the 'subject' attribute on a Google token. '''
	//   {"google.subject": "assertion.sub"} '''
	AttributeMapping pulumi.StringMapInput
	// An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
	Aws IamWorkloadIdentityPoolProviderAwsPtrInput
	// A description for the provider. Cannot exceed 256 characters.
	Description pulumi.StringPtrInput
	// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
	// grant access.
	Disabled pulumi.BoolPtrInput
	// A display name for the provider. Cannot exceed 32 characters.
	DisplayName                       pulumi.StringPtrInput
	IamWorkloadIdentityPoolProviderId pulumi.StringPtrInput
	// An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
	Oidc    IamWorkloadIdentityPoolProviderOidcPtrInput
	Project pulumi.StringPtrInput
	// An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
	Saml     IamWorkloadIdentityPoolProviderSamlPtrInput
	Timeouts IamWorkloadIdentityPoolProviderTimeoutsPtrInput
	// The ID used for the pool, which is the final component of the pool resource name. This value should be 4-32 characters,
	// and may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolId pulumi.StringInput
	// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
	// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
	WorkloadIdentityPoolProviderId pulumi.StringInput
	// An X.509-type identity provider represents a CA. It is trusted to assert a client identity if the client has a
	// certificate that chains up to this CA.
	X509 IamWorkloadIdentityPoolProviderX509PtrInput
}

func (IamWorkloadIdentityPoolProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamWorkloadIdentityPoolProviderArgs)(nil)).Elem()
}

type IamWorkloadIdentityPoolProviderInput interface {
	pulumi.Input

	ToIamWorkloadIdentityPoolProviderOutput() IamWorkloadIdentityPoolProviderOutput
	ToIamWorkloadIdentityPoolProviderOutputWithContext(ctx context.Context) IamWorkloadIdentityPoolProviderOutput
}

func (*IamWorkloadIdentityPoolProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**IamWorkloadIdentityPoolProvider)(nil)).Elem()
}

func (i *IamWorkloadIdentityPoolProvider) ToIamWorkloadIdentityPoolProviderOutput() IamWorkloadIdentityPoolProviderOutput {
	return i.ToIamWorkloadIdentityPoolProviderOutputWithContext(context.Background())
}

func (i *IamWorkloadIdentityPoolProvider) ToIamWorkloadIdentityPoolProviderOutputWithContext(ctx context.Context) IamWorkloadIdentityPoolProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamWorkloadIdentityPoolProviderOutput)
}

type IamWorkloadIdentityPoolProviderOutput struct{ *pulumi.OutputState }

func (IamWorkloadIdentityPoolProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IamWorkloadIdentityPoolProvider)(nil)).Elem()
}

func (o IamWorkloadIdentityPoolProviderOutput) ToIamWorkloadIdentityPoolProviderOutput() IamWorkloadIdentityPoolProviderOutput {
	return o
}

func (o IamWorkloadIdentityPoolProviderOutput) ToIamWorkloadIdentityPoolProviderOutputWithContext(ctx context.Context) IamWorkloadIdentityPoolProviderOutput {
	return o
}

// [A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what
// otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a
// boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: *
// 'assertion': JSON representing the authentication credential issued by the provider. * 'google': The Google attributes
// mapped from the assertion in the 'attribute_mappings'. * 'attribute': The custom attributes mapped from the assertion in
// the 'attribute_mappings'. The maximum length of the attribute condition expression is 4096 characters. If unspecified,
// all valid authentication credential are accepted. The following example shows how to only allow credentials with a
// mapped 'google.groups' value of 'admins': ”' "'admins' in google.groups" ”'
func (o IamWorkloadIdentityPoolProviderOutput) AttributeCondition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringPtrOutput { return v.AttributeCondition }).(pulumi.StringPtrOutput)
}

// Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such
// as 'subject' and 'segment'. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following
// keys are supported: * 'google.subject': The principal IAM is authenticating. You can reference this value in IAM
// bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * 'google.groups':
// Groups the external identity belongs to. You can grant groups access to resources using an IAM 'principalSet' binding;
// access applies to all members of the group. You can also provide custom attributes by specifying
// 'attribute.{custom_attribute}', where '{custom_attribute}' is the name of the custom attribute to be mapped. You can
// define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key
// may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained
// access for a workload to Google Cloud resources. For example: * 'google.subject':
// 'principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}' *
// 'google.groups':
// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}' *
// 'attribute.{custom_attribute}':
// 'principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}'
// Each value must be a [Common Expression Language](https://opensource.google/projects/cel) function that maps an identity
// provider credential to the normalized attribute specified by the corresponding map key. You can use the 'assertion'
// keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The
// maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped
// attributes must not exceed 8KB. For AWS providers, the following rules apply: - If no attribute mapping is defined, the
// following default mapping applies: ”' { "google.subject":"assertion.arn", "attribute.aws_role":
// "assertion.arn.contains('assumed-role')" " ? assertion.arn.extract('{account_arn}assumed-role/')" " + 'assumed-role/'" "
//   - assertion.arn.extract('assumed-role/{role_name}/')" " : assertion.arn", } ”' - If any custom attribute mappings are
//     defined, they must include a mapping to the 'google.subject' attribute. For OIDC providers, the following rules apply: -
//     Custom attribute mappings must be defined, and must include a mapping to the 'google.subject' attribute. For example,
//     the following maps the 'sub' claim of the incoming credential to the 'subject' attribute on a Google token. ”'
//     {"google.subject": "assertion.sub"} ”'
func (o IamWorkloadIdentityPoolProviderOutput) AttributeMapping() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringMapOutput { return v.AttributeMapping }).(pulumi.StringMapOutput)
}

// An Amazon Web Services identity provider. Not compatible with the property oidc or saml.
func (o IamWorkloadIdentityPoolProviderOutput) Aws() IamWorkloadIdentityPoolProviderAwsPtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) IamWorkloadIdentityPoolProviderAwsPtrOutput { return v.Aws }).(IamWorkloadIdentityPoolProviderAwsPtrOutput)
}

// A description for the provider. Cannot exceed 256 characters.
func (o IamWorkloadIdentityPoolProviderOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still
// grant access.
func (o IamWorkloadIdentityPoolProviderOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// A display name for the provider. Cannot exceed 32 characters.
func (o IamWorkloadIdentityPoolProviderOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o IamWorkloadIdentityPoolProviderOutput) IamWorkloadIdentityPoolProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringOutput {
		return v.IamWorkloadIdentityPoolProviderId
	}).(pulumi.StringOutput)
}

// The resource name of the provider as
// 'projects/{project_number}/locations/global/workloadIdentityPools/{workload_identity_pool_id}/providers/{workload_identity_pool_provider_id}'.
func (o IamWorkloadIdentityPoolProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An OpenId Connect 1.0 identity provider. Not compatible with the property aws or saml.
func (o IamWorkloadIdentityPoolProviderOutput) Oidc() IamWorkloadIdentityPoolProviderOidcPtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) IamWorkloadIdentityPoolProviderOidcPtrOutput { return v.Oidc }).(IamWorkloadIdentityPoolProviderOidcPtrOutput)
}

func (o IamWorkloadIdentityPoolProviderOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// An SAML 2.0 identity provider. Not compatible with the property oidc or aws.
func (o IamWorkloadIdentityPoolProviderOutput) Saml() IamWorkloadIdentityPoolProviderSamlPtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) IamWorkloadIdentityPoolProviderSamlPtrOutput { return v.Saml }).(IamWorkloadIdentityPoolProviderSamlPtrOutput)
}

// The state of the provider. * STATE_UNSPECIFIED: State unspecified. * ACTIVE: The provider is active, and may be used to
// validate authentication credentials. * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
// deleted after approximately 30 days. You can restore a soft-deleted provider using UndeleteWorkloadIdentityPoolProvider.
// You cannot reuse the ID of a soft-deleted provider until it is permanently deleted.
func (o IamWorkloadIdentityPoolProviderOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o IamWorkloadIdentityPoolProviderOutput) Timeouts() IamWorkloadIdentityPoolProviderTimeoutsPtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) IamWorkloadIdentityPoolProviderTimeoutsPtrOutput {
		return v.Timeouts
	}).(IamWorkloadIdentityPoolProviderTimeoutsPtrOutput)
}

// The ID used for the pool, which is the final component of the pool resource name. This value should be 4-32 characters,
// and may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
func (o IamWorkloadIdentityPoolProviderOutput) WorkloadIdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringOutput { return v.WorkloadIdentityPoolId }).(pulumi.StringOutput)
}

// The ID for the provider, which becomes the final component of the resource name. This value must be 4-32 characters, and
// may contain the characters [a-z0-9-]. The prefix 'gcp-' is reserved for use by Google, and may not be specified.
func (o IamWorkloadIdentityPoolProviderOutput) WorkloadIdentityPoolProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) pulumi.StringOutput { return v.WorkloadIdentityPoolProviderId }).(pulumi.StringOutput)
}

// An X.509-type identity provider represents a CA. It is trusted to assert a client identity if the client has a
// certificate that chains up to this CA.
func (o IamWorkloadIdentityPoolProviderOutput) X509() IamWorkloadIdentityPoolProviderX509PtrOutput {
	return o.ApplyT(func(v *IamWorkloadIdentityPoolProvider) IamWorkloadIdentityPoolProviderX509PtrOutput { return v.X509 }).(IamWorkloadIdentityPoolProviderX509PtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IamWorkloadIdentityPoolProviderInput)(nil)).Elem(), &IamWorkloadIdentityPoolProvider{})
	pulumi.RegisterOutputType(IamWorkloadIdentityPoolProviderOutput{})
}
