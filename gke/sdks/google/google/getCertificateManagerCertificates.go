// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCertificateManagerCertificates(ctx *pulumi.Context, args *GetCertificateManagerCertificatesArgs, opts ...pulumi.InvokeOption) (*GetCertificateManagerCertificatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetCertificateManagerCertificatesResult
	err = ctx.InvokePackage("google:index/getCertificateManagerCertificates:getCertificateManagerCertificates", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificateManagerCertificates.
type GetCertificateManagerCertificatesArgs struct {
	Filter *string `pulumi:"filter"`
	Id     *string `pulumi:"id"`
	Region *string `pulumi:"region"`
}

// A collection of values returned by getCertificateManagerCertificates.
type GetCertificateManagerCertificatesResult struct {
	Certificates []GetCertificateManagerCertificatesCertificate `pulumi:"certificates"`
	Filter       *string                                        `pulumi:"filter"`
	Id           string                                         `pulumi:"id"`
	Region       *string                                        `pulumi:"region"`
}

func GetCertificateManagerCertificatesOutput(ctx *pulumi.Context, args GetCertificateManagerCertificatesOutputArgs, opts ...pulumi.InvokeOption) GetCertificateManagerCertificatesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCertificateManagerCertificatesResultOutput, error) {
			args := v.(GetCertificateManagerCertificatesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetCertificateManagerCertificatesResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getCertificateManagerCertificates:getCertificateManagerCertificates", args, GetCertificateManagerCertificatesResultOutput{}, options).(GetCertificateManagerCertificatesResultOutput), nil
		}).(GetCertificateManagerCertificatesResultOutput)
}

// A collection of arguments for invoking getCertificateManagerCertificates.
type GetCertificateManagerCertificatesOutputArgs struct {
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	Id     pulumi.StringPtrInput `pulumi:"id"`
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (GetCertificateManagerCertificatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateManagerCertificatesArgs)(nil)).Elem()
}

// A collection of values returned by getCertificateManagerCertificates.
type GetCertificateManagerCertificatesResultOutput struct{ *pulumi.OutputState }

func (GetCertificateManagerCertificatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateManagerCertificatesResult)(nil)).Elem()
}

func (o GetCertificateManagerCertificatesResultOutput) ToGetCertificateManagerCertificatesResultOutput() GetCertificateManagerCertificatesResultOutput {
	return o
}

func (o GetCertificateManagerCertificatesResultOutput) ToGetCertificateManagerCertificatesResultOutputWithContext(ctx context.Context) GetCertificateManagerCertificatesResultOutput {
	return o
}

func (o GetCertificateManagerCertificatesResultOutput) Certificates() GetCertificateManagerCertificatesCertificateArrayOutput {
	return o.ApplyT(func(v GetCertificateManagerCertificatesResult) []GetCertificateManagerCertificatesCertificate {
		return v.Certificates
	}).(GetCertificateManagerCertificatesCertificateArrayOutput)
}

func (o GetCertificateManagerCertificatesResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateManagerCertificatesResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o GetCertificateManagerCertificatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateManagerCertificatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCertificateManagerCertificatesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCertificateManagerCertificatesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCertificateManagerCertificatesResultOutput{})
}
