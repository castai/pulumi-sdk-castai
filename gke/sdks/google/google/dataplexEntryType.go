// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexEntryType struct {
	pulumi.CustomResourceState

	// The time when the EntryType was created.
	CreateTime          pulumi.StringOutput `pulumi:"createTime"`
	DataplexEntryTypeId pulumi.StringOutput `pulumi:"dataplexEntryTypeId"`
	// Description of the EntryType.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User friendly display name.
	DisplayName     pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The entry type id of the entry type.
	EntryTypeId pulumi.StringPtrOutput `pulumi:"entryTypeId"`
	// User-defined labels for the EntryType. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The location where entry type will be created in.
	Location pulumi.StringPtrOutput `pulumi:"location"`
	// The relative resource name of the EntryType, of the form:
	// projects/{project_number}/locations/{location_id}/entryTypes/{entry_type_id}
	Name pulumi.StringOutput `pulumi:"name"`
	// The platform that Entries of this type belongs to.
	Platform pulumi.StringPtrOutput `pulumi:"platform"`
	Project  pulumi.StringOutput    `pulumi:"project"`
	// AspectInfo for the entry type.
	RequiredAspects DataplexEntryTypeRequiredAspectArrayOutput `pulumi:"requiredAspects"`
	// The system that Entries of this type belongs to.
	System pulumi.StringPtrOutput `pulumi:"system"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput             `pulumi:"terraformLabels"`
	Timeouts        DataplexEntryTypeTimeoutsPtrOutput `pulumi:"timeouts"`
	// Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
	TypeAliases pulumi.StringArrayOutput `pulumi:"typeAliases"`
	// System generated globally unique ID for the EntryType. This ID will be different if the EntryType is deleted and
	// re-created with the same name.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time when the EntryType was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewDataplexEntryType registers a new resource with the given unique name, arguments, and options.
func NewDataplexEntryType(ctx *pulumi.Context,
	name string, args *DataplexEntryTypeArgs, opts ...pulumi.ResourceOption) (*DataplexEntryType, error) {
	if args == nil {
		args = &DataplexEntryTypeArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexEntryType
	err = ctx.RegisterPackageResource("google:index/dataplexEntryType:DataplexEntryType", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexEntryType gets an existing DataplexEntryType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexEntryType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexEntryTypeState, opts ...pulumi.ResourceOption) (*DataplexEntryType, error) {
	var resource DataplexEntryType
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataplexEntryType:DataplexEntryType", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexEntryType resources.
type dataplexEntryTypeState struct {
	// The time when the EntryType was created.
	CreateTime          *string `pulumi:"createTime"`
	DataplexEntryTypeId *string `pulumi:"dataplexEntryTypeId"`
	// Description of the EntryType.
	Description *string `pulumi:"description"`
	// User friendly display name.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The entry type id of the entry type.
	EntryTypeId *string `pulumi:"entryTypeId"`
	// User-defined labels for the EntryType. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where entry type will be created in.
	Location *string `pulumi:"location"`
	// The relative resource name of the EntryType, of the form:
	// projects/{project_number}/locations/{location_id}/entryTypes/{entry_type_id}
	Name *string `pulumi:"name"`
	// The platform that Entries of this type belongs to.
	Platform *string `pulumi:"platform"`
	Project  *string `pulumi:"project"`
	// AspectInfo for the entry type.
	RequiredAspects []DataplexEntryTypeRequiredAspect `pulumi:"requiredAspects"`
	// The system that Entries of this type belongs to.
	System *string `pulumi:"system"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string          `pulumi:"terraformLabels"`
	Timeouts        *DataplexEntryTypeTimeouts `pulumi:"timeouts"`
	// Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
	TypeAliases []string `pulumi:"typeAliases"`
	// System generated globally unique ID for the EntryType. This ID will be different if the EntryType is deleted and
	// re-created with the same name.
	Uid *string `pulumi:"uid"`
	// The time when the EntryType was last updated.
	UpdateTime *string `pulumi:"updateTime"`
}

type DataplexEntryTypeState struct {
	// The time when the EntryType was created.
	CreateTime          pulumi.StringPtrInput
	DataplexEntryTypeId pulumi.StringPtrInput
	// Description of the EntryType.
	Description pulumi.StringPtrInput
	// User friendly display name.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The entry type id of the entry type.
	EntryTypeId pulumi.StringPtrInput
	// User-defined labels for the EntryType. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location where entry type will be created in.
	Location pulumi.StringPtrInput
	// The relative resource name of the EntryType, of the form:
	// projects/{project_number}/locations/{location_id}/entryTypes/{entry_type_id}
	Name pulumi.StringPtrInput
	// The platform that Entries of this type belongs to.
	Platform pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// AspectInfo for the entry type.
	RequiredAspects DataplexEntryTypeRequiredAspectArrayInput
	// The system that Entries of this type belongs to.
	System pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DataplexEntryTypeTimeoutsPtrInput
	// Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
	TypeAliases pulumi.StringArrayInput
	// System generated globally unique ID for the EntryType. This ID will be different if the EntryType is deleted and
	// re-created with the same name.
	Uid pulumi.StringPtrInput
	// The time when the EntryType was last updated.
	UpdateTime pulumi.StringPtrInput
}

func (DataplexEntryTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexEntryTypeState)(nil)).Elem()
}

type dataplexEntryTypeArgs struct {
	DataplexEntryTypeId *string `pulumi:"dataplexEntryTypeId"`
	// Description of the EntryType.
	Description *string `pulumi:"description"`
	// User friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// The entry type id of the entry type.
	EntryTypeId *string `pulumi:"entryTypeId"`
	// User-defined labels for the EntryType. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The location where entry type will be created in.
	Location *string `pulumi:"location"`
	// The platform that Entries of this type belongs to.
	Platform *string `pulumi:"platform"`
	Project  *string `pulumi:"project"`
	// AspectInfo for the entry type.
	RequiredAspects []DataplexEntryTypeRequiredAspect `pulumi:"requiredAspects"`
	// The system that Entries of this type belongs to.
	System   *string                    `pulumi:"system"`
	Timeouts *DataplexEntryTypeTimeouts `pulumi:"timeouts"`
	// Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
	TypeAliases []string `pulumi:"typeAliases"`
}

// The set of arguments for constructing a DataplexEntryType resource.
type DataplexEntryTypeArgs struct {
	DataplexEntryTypeId pulumi.StringPtrInput
	// Description of the EntryType.
	Description pulumi.StringPtrInput
	// User friendly display name.
	DisplayName pulumi.StringPtrInput
	// The entry type id of the entry type.
	EntryTypeId pulumi.StringPtrInput
	// User-defined labels for the EntryType. **Note**: This field is non-authoritative, and will only manage the labels
	// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The location where entry type will be created in.
	Location pulumi.StringPtrInput
	// The platform that Entries of this type belongs to.
	Platform pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	// AspectInfo for the entry type.
	RequiredAspects DataplexEntryTypeRequiredAspectArrayInput
	// The system that Entries of this type belongs to.
	System   pulumi.StringPtrInput
	Timeouts DataplexEntryTypeTimeoutsPtrInput
	// Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
	TypeAliases pulumi.StringArrayInput
}

func (DataplexEntryTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexEntryTypeArgs)(nil)).Elem()
}

type DataplexEntryTypeInput interface {
	pulumi.Input

	ToDataplexEntryTypeOutput() DataplexEntryTypeOutput
	ToDataplexEntryTypeOutputWithContext(ctx context.Context) DataplexEntryTypeOutput
}

func (*DataplexEntryType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexEntryType)(nil)).Elem()
}

func (i *DataplexEntryType) ToDataplexEntryTypeOutput() DataplexEntryTypeOutput {
	return i.ToDataplexEntryTypeOutputWithContext(context.Background())
}

func (i *DataplexEntryType) ToDataplexEntryTypeOutputWithContext(ctx context.Context) DataplexEntryTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexEntryTypeOutput)
}

type DataplexEntryTypeOutput struct{ *pulumi.OutputState }

func (DataplexEntryTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexEntryType)(nil)).Elem()
}

func (o DataplexEntryTypeOutput) ToDataplexEntryTypeOutput() DataplexEntryTypeOutput {
	return o
}

func (o DataplexEntryTypeOutput) ToDataplexEntryTypeOutputWithContext(ctx context.Context) DataplexEntryTypeOutput {
	return o
}

// The time when the EntryType was created.
func (o DataplexEntryTypeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o DataplexEntryTypeOutput) DataplexEntryTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringOutput { return v.DataplexEntryTypeId }).(pulumi.StringOutput)
}

// Description of the EntryType.
func (o DataplexEntryTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User friendly display name.
func (o DataplexEntryTypeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o DataplexEntryTypeOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The entry type id of the entry type.
func (o DataplexEntryTypeOutput) EntryTypeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringPtrOutput { return v.EntryTypeId }).(pulumi.StringPtrOutput)
}

// User-defined labels for the EntryType. **Note**: This field is non-authoritative, and will only manage the labels
// present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o DataplexEntryTypeOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The location where entry type will be created in.
func (o DataplexEntryTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringPtrOutput { return v.Location }).(pulumi.StringPtrOutput)
}

// The relative resource name of the EntryType, of the form:
// projects/{project_number}/locations/{location_id}/entryTypes/{entry_type_id}
func (o DataplexEntryTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The platform that Entries of this type belongs to.
func (o DataplexEntryTypeOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringPtrOutput { return v.Platform }).(pulumi.StringPtrOutput)
}

func (o DataplexEntryTypeOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// AspectInfo for the entry type.
func (o DataplexEntryTypeOutput) RequiredAspects() DataplexEntryTypeRequiredAspectArrayOutput {
	return o.ApplyT(func(v *DataplexEntryType) DataplexEntryTypeRequiredAspectArrayOutput { return v.RequiredAspects }).(DataplexEntryTypeRequiredAspectArrayOutput)
}

// The system that Entries of this type belongs to.
func (o DataplexEntryTypeOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringPtrOutput { return v.System }).(pulumi.StringPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DataplexEntryTypeOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DataplexEntryTypeOutput) Timeouts() DataplexEntryTypeTimeoutsPtrOutput {
	return o.ApplyT(func(v *DataplexEntryType) DataplexEntryTypeTimeoutsPtrOutput { return v.Timeouts }).(DataplexEntryTypeTimeoutsPtrOutput)
}

// Indicates the class this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.
func (o DataplexEntryTypeOutput) TypeAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringArrayOutput { return v.TypeAliases }).(pulumi.StringArrayOutput)
}

// System generated globally unique ID for the EntryType. This ID will be different if the EntryType is deleted and
// re-created with the same name.
func (o DataplexEntryTypeOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time when the EntryType was last updated.
func (o DataplexEntryTypeOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexEntryType) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexEntryTypeInput)(nil)).Elem(), &DataplexEntryType{})
	pulumi.RegisterOutputType(DataplexEntryTypeOutput{})
}
