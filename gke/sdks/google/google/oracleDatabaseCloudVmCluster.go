// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OracleDatabaseCloudVmCluster struct {
	pulumi.CustomResourceState

	// CIDR range of the backup subnet.
	BackupSubnetCidr pulumi.StringOutput `pulumi:"backupSubnetCidr"`
	// Network settings. CIDR to use for cluster IP allocation.
	Cidr pulumi.StringOutput `pulumi:"cidr"`
	// The ID of the VM Cluster to create. This value is restricted to (^a-z?$) and must be a maximum of 63 characters in
	// length. The value must start with a letter and end with a letter or a number.
	CloudVmClusterId pulumi.StringOutput `pulumi:"cloudVmClusterId"`
	// The date and time that the VM cluster was created.
	CreateTime         pulumi.StringOutput  `pulumi:"createTime"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// User friendly name for this resource.
	DisplayName     pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The name of the Exadata Infrastructure resource on which VM cluster resource is created, in the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastuctures/{cloud_extradata_infrastructure}
	ExadataInfrastructure pulumi.StringOutput `pulumi:"exadataInfrastructure"`
	// GCP location where Oracle Exadata is hosted. It is same as GCP Oracle zone of Exadata infrastructure.
	GcpOracleZone pulumi.StringOutput `pulumi:"gcpOracleZone"`
	// Labels or tags associated with the VM Cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbNode'.
	Location pulumi.StringOutput `pulumi:"location"`
	// Identifier. The name of the VM Cluster resource with the format:
	// projects/{project}/locations/{region}/cloudVmClusters/{cloud_vm_cluster}
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of the VPC network. Format: projects/{project}/global/networks/{network}
	Network                        pulumi.StringOutput `pulumi:"network"`
	OracleDatabaseCloudVmClusterId pulumi.StringOutput `pulumi:"oracleDatabaseCloudVmClusterId"`
	Project                        pulumi.StringOutput `pulumi:"project"`
	// Various properties and settings associated with Exadata VM cluster.
	Properties OracleDatabaseCloudVmClusterPropertiesPtrOutput `pulumi:"properties"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                        `pulumi:"terraformLabels"`
	Timeouts        OracleDatabaseCloudVmClusterTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewOracleDatabaseCloudVmCluster registers a new resource with the given unique name, arguments, and options.
func NewOracleDatabaseCloudVmCluster(ctx *pulumi.Context,
	name string, args *OracleDatabaseCloudVmClusterArgs, opts ...pulumi.ResourceOption) (*OracleDatabaseCloudVmCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupSubnetCidr == nil {
		return nil, errors.New("invalid value for required argument 'BackupSubnetCidr'")
	}
	if args.Cidr == nil {
		return nil, errors.New("invalid value for required argument 'Cidr'")
	}
	if args.CloudVmClusterId == nil {
		return nil, errors.New("invalid value for required argument 'CloudVmClusterId'")
	}
	if args.ExadataInfrastructure == nil {
		return nil, errors.New("invalid value for required argument 'ExadataInfrastructure'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource OracleDatabaseCloudVmCluster
	err = ctx.RegisterPackageResource("google:index/oracleDatabaseCloudVmCluster:OracleDatabaseCloudVmCluster", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOracleDatabaseCloudVmCluster gets an existing OracleDatabaseCloudVmCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOracleDatabaseCloudVmCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OracleDatabaseCloudVmClusterState, opts ...pulumi.ResourceOption) (*OracleDatabaseCloudVmCluster, error) {
	var resource OracleDatabaseCloudVmCluster
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/oracleDatabaseCloudVmCluster:OracleDatabaseCloudVmCluster", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OracleDatabaseCloudVmCluster resources.
type oracleDatabaseCloudVmClusterState struct {
	// CIDR range of the backup subnet.
	BackupSubnetCidr *string `pulumi:"backupSubnetCidr"`
	// Network settings. CIDR to use for cluster IP allocation.
	Cidr *string `pulumi:"cidr"`
	// The ID of the VM Cluster to create. This value is restricted to (^a-z?$) and must be a maximum of 63 characters in
	// length. The value must start with a letter and end with a letter or a number.
	CloudVmClusterId *string `pulumi:"cloudVmClusterId"`
	// The date and time that the VM cluster was created.
	CreateTime         *string `pulumi:"createTime"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// User friendly name for this resource.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The name of the Exadata Infrastructure resource on which VM cluster resource is created, in the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastuctures/{cloud_extradata_infrastructure}
	ExadataInfrastructure *string `pulumi:"exadataInfrastructure"`
	// GCP location where Oracle Exadata is hosted. It is same as GCP Oracle zone of Exadata infrastructure.
	GcpOracleZone *string `pulumi:"gcpOracleZone"`
	// Labels or tags associated with the VM Cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbNode'.
	Location *string `pulumi:"location"`
	// Identifier. The name of the VM Cluster resource with the format:
	// projects/{project}/locations/{region}/cloudVmClusters/{cloud_vm_cluster}
	Name *string `pulumi:"name"`
	// The name of the VPC network. Format: projects/{project}/global/networks/{network}
	Network                        *string `pulumi:"network"`
	OracleDatabaseCloudVmClusterId *string `pulumi:"oracleDatabaseCloudVmClusterId"`
	Project                        *string `pulumi:"project"`
	// Various properties and settings associated with Exadata VM cluster.
	Properties *OracleDatabaseCloudVmClusterProperties `pulumi:"properties"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                     `pulumi:"terraformLabels"`
	Timeouts        *OracleDatabaseCloudVmClusterTimeouts `pulumi:"timeouts"`
}

type OracleDatabaseCloudVmClusterState struct {
	// CIDR range of the backup subnet.
	BackupSubnetCidr pulumi.StringPtrInput
	// Network settings. CIDR to use for cluster IP allocation.
	Cidr pulumi.StringPtrInput
	// The ID of the VM Cluster to create. This value is restricted to (^a-z?$) and must be a maximum of 63 characters in
	// length. The value must start with a letter and end with a letter or a number.
	CloudVmClusterId pulumi.StringPtrInput
	// The date and time that the VM cluster was created.
	CreateTime         pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// User friendly name for this resource.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The name of the Exadata Infrastructure resource on which VM cluster resource is created, in the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastuctures/{cloud_extradata_infrastructure}
	ExadataInfrastructure pulumi.StringPtrInput
	// GCP location where Oracle Exadata is hosted. It is same as GCP Oracle zone of Exadata infrastructure.
	GcpOracleZone pulumi.StringPtrInput
	// Labels or tags associated with the VM Cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbNode'.
	Location pulumi.StringPtrInput
	// Identifier. The name of the VM Cluster resource with the format:
	// projects/{project}/locations/{region}/cloudVmClusters/{cloud_vm_cluster}
	Name pulumi.StringPtrInput
	// The name of the VPC network. Format: projects/{project}/global/networks/{network}
	Network                        pulumi.StringPtrInput
	OracleDatabaseCloudVmClusterId pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
	// Various properties and settings associated with Exadata VM cluster.
	Properties OracleDatabaseCloudVmClusterPropertiesPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        OracleDatabaseCloudVmClusterTimeoutsPtrInput
}

func (OracleDatabaseCloudVmClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*oracleDatabaseCloudVmClusterState)(nil)).Elem()
}

type oracleDatabaseCloudVmClusterArgs struct {
	// CIDR range of the backup subnet.
	BackupSubnetCidr string `pulumi:"backupSubnetCidr"`
	// Network settings. CIDR to use for cluster IP allocation.
	Cidr string `pulumi:"cidr"`
	// The ID of the VM Cluster to create. This value is restricted to (^a-z?$) and must be a maximum of 63 characters in
	// length. The value must start with a letter and end with a letter or a number.
	CloudVmClusterId   string `pulumi:"cloudVmClusterId"`
	DeletionProtection *bool  `pulumi:"deletionProtection"`
	// User friendly name for this resource.
	DisplayName *string `pulumi:"displayName"`
	// The name of the Exadata Infrastructure resource on which VM cluster resource is created, in the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastuctures/{cloud_extradata_infrastructure}
	ExadataInfrastructure string `pulumi:"exadataInfrastructure"`
	// Labels or tags associated with the VM Cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbNode'.
	Location string `pulumi:"location"`
	// The name of the VPC network. Format: projects/{project}/global/networks/{network}
	Network                        string  `pulumi:"network"`
	OracleDatabaseCloudVmClusterId *string `pulumi:"oracleDatabaseCloudVmClusterId"`
	Project                        *string `pulumi:"project"`
	// Various properties and settings associated with Exadata VM cluster.
	Properties *OracleDatabaseCloudVmClusterProperties `pulumi:"properties"`
	Timeouts   *OracleDatabaseCloudVmClusterTimeouts   `pulumi:"timeouts"`
}

// The set of arguments for constructing a OracleDatabaseCloudVmCluster resource.
type OracleDatabaseCloudVmClusterArgs struct {
	// CIDR range of the backup subnet.
	BackupSubnetCidr pulumi.StringInput
	// Network settings. CIDR to use for cluster IP allocation.
	Cidr pulumi.StringInput
	// The ID of the VM Cluster to create. This value is restricted to (^a-z?$) and must be a maximum of 63 characters in
	// length. The value must start with a letter and end with a letter or a number.
	CloudVmClusterId   pulumi.StringInput
	DeletionProtection pulumi.BoolPtrInput
	// User friendly name for this resource.
	DisplayName pulumi.StringPtrInput
	// The name of the Exadata Infrastructure resource on which VM cluster resource is created, in the following format:
	// projects/{project}/locations/{region}/cloudExadataInfrastuctures/{cloud_extradata_infrastructure}
	ExadataInfrastructure pulumi.StringInput
	// Labels or tags associated with the VM Cluster. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// Resource ID segment making up resource 'name'. See documentation for resource type
	// 'oracledatabase.googleapis.com/DbNode'.
	Location pulumi.StringInput
	// The name of the VPC network. Format: projects/{project}/global/networks/{network}
	Network                        pulumi.StringInput
	OracleDatabaseCloudVmClusterId pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
	// Various properties and settings associated with Exadata VM cluster.
	Properties OracleDatabaseCloudVmClusterPropertiesPtrInput
	Timeouts   OracleDatabaseCloudVmClusterTimeoutsPtrInput
}

func (OracleDatabaseCloudVmClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oracleDatabaseCloudVmClusterArgs)(nil)).Elem()
}

type OracleDatabaseCloudVmClusterInput interface {
	pulumi.Input

	ToOracleDatabaseCloudVmClusterOutput() OracleDatabaseCloudVmClusterOutput
	ToOracleDatabaseCloudVmClusterOutputWithContext(ctx context.Context) OracleDatabaseCloudVmClusterOutput
}

func (*OracleDatabaseCloudVmCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**OracleDatabaseCloudVmCluster)(nil)).Elem()
}

func (i *OracleDatabaseCloudVmCluster) ToOracleDatabaseCloudVmClusterOutput() OracleDatabaseCloudVmClusterOutput {
	return i.ToOracleDatabaseCloudVmClusterOutputWithContext(context.Background())
}

func (i *OracleDatabaseCloudVmCluster) ToOracleDatabaseCloudVmClusterOutputWithContext(ctx context.Context) OracleDatabaseCloudVmClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OracleDatabaseCloudVmClusterOutput)
}

type OracleDatabaseCloudVmClusterOutput struct{ *pulumi.OutputState }

func (OracleDatabaseCloudVmClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OracleDatabaseCloudVmCluster)(nil)).Elem()
}

func (o OracleDatabaseCloudVmClusterOutput) ToOracleDatabaseCloudVmClusterOutput() OracleDatabaseCloudVmClusterOutput {
	return o
}

func (o OracleDatabaseCloudVmClusterOutput) ToOracleDatabaseCloudVmClusterOutputWithContext(ctx context.Context) OracleDatabaseCloudVmClusterOutput {
	return o
}

// CIDR range of the backup subnet.
func (o OracleDatabaseCloudVmClusterOutput) BackupSubnetCidr() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.BackupSubnetCidr }).(pulumi.StringOutput)
}

// Network settings. CIDR to use for cluster IP allocation.
func (o OracleDatabaseCloudVmClusterOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

// The ID of the VM Cluster to create. This value is restricted to (^a-z?$) and must be a maximum of 63 characters in
// length. The value must start with a letter and end with a letter or a number.
func (o OracleDatabaseCloudVmClusterOutput) CloudVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.CloudVmClusterId }).(pulumi.StringOutput)
}

// The date and time that the VM cluster was created.
func (o OracleDatabaseCloudVmClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o OracleDatabaseCloudVmClusterOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// User friendly name for this resource.
func (o OracleDatabaseCloudVmClusterOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o OracleDatabaseCloudVmClusterOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The name of the Exadata Infrastructure resource on which VM cluster resource is created, in the following format:
// projects/{project}/locations/{region}/cloudExadataInfrastuctures/{cloud_extradata_infrastructure}
func (o OracleDatabaseCloudVmClusterOutput) ExadataInfrastructure() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.ExadataInfrastructure }).(pulumi.StringOutput)
}

// GCP location where Oracle Exadata is hosted. It is same as GCP Oracle zone of Exadata infrastructure.
func (o OracleDatabaseCloudVmClusterOutput) GcpOracleZone() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.GcpOracleZone }).(pulumi.StringOutput)
}

// Labels or tags associated with the VM Cluster. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o OracleDatabaseCloudVmClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Resource ID segment making up resource 'name'. See documentation for resource type
// 'oracledatabase.googleapis.com/DbNode'.
func (o OracleDatabaseCloudVmClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Identifier. The name of the VM Cluster resource with the format:
// projects/{project}/locations/{region}/cloudVmClusters/{cloud_vm_cluster}
func (o OracleDatabaseCloudVmClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name of the VPC network. Format: projects/{project}/global/networks/{network}
func (o OracleDatabaseCloudVmClusterOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o OracleDatabaseCloudVmClusterOutput) OracleDatabaseCloudVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.OracleDatabaseCloudVmClusterId }).(pulumi.StringOutput)
}

func (o OracleDatabaseCloudVmClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Various properties and settings associated with Exadata VM cluster.
func (o OracleDatabaseCloudVmClusterOutput) Properties() OracleDatabaseCloudVmClusterPropertiesPtrOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) OracleDatabaseCloudVmClusterPropertiesPtrOutput {
		return v.Properties
	}).(OracleDatabaseCloudVmClusterPropertiesPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o OracleDatabaseCloudVmClusterOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o OracleDatabaseCloudVmClusterOutput) Timeouts() OracleDatabaseCloudVmClusterTimeoutsPtrOutput {
	return o.ApplyT(func(v *OracleDatabaseCloudVmCluster) OracleDatabaseCloudVmClusterTimeoutsPtrOutput { return v.Timeouts }).(OracleDatabaseCloudVmClusterTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OracleDatabaseCloudVmClusterInput)(nil)).Elem(), &OracleDatabaseCloudVmCluster{})
	pulumi.RegisterOutputType(OracleDatabaseCloudVmClusterOutput{})
}
