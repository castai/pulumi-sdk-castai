// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeBackendServiceSignedUrlKey struct {
	pulumi.CustomResourceState

	// The backend service this signed URL key belongs.
	BackendService                      pulumi.StringOutput `pulumi:"backendService"`
	ComputeBackendServiceSignedUrlKeyId pulumi.StringOutput `pulumi:"computeBackendServiceSignedUrlKeyId"`
	// 128-bit key value used for signing the URL. The key value must be a valid RFC 4648 Section 5 base64url encoded string.
	KeyValue pulumi.StringOutput `pulumi:"keyValue"`
	// Name of the signed URL key.
	Name     pulumi.StringOutput                                `pulumi:"name"`
	Project  pulumi.StringOutput                                `pulumi:"project"`
	Timeouts ComputeBackendServiceSignedUrlKeyTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeBackendServiceSignedUrlKey registers a new resource with the given unique name, arguments, and options.
func NewComputeBackendServiceSignedUrlKey(ctx *pulumi.Context,
	name string, args *ComputeBackendServiceSignedUrlKeyArgs, opts ...pulumi.ResourceOption) (*ComputeBackendServiceSignedUrlKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackendService == nil {
		return nil, errors.New("invalid value for required argument 'BackendService'")
	}
	if args.KeyValue == nil {
		return nil, errors.New("invalid value for required argument 'KeyValue'")
	}
	if args.KeyValue != nil {
		args.KeyValue = pulumi.ToSecret(args.KeyValue).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"keyValue",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeBackendServiceSignedUrlKey
	err = ctx.RegisterPackageResource("google:index/computeBackendServiceSignedUrlKey:ComputeBackendServiceSignedUrlKey", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeBackendServiceSignedUrlKey gets an existing ComputeBackendServiceSignedUrlKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeBackendServiceSignedUrlKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeBackendServiceSignedUrlKeyState, opts ...pulumi.ResourceOption) (*ComputeBackendServiceSignedUrlKey, error) {
	var resource ComputeBackendServiceSignedUrlKey
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeBackendServiceSignedUrlKey:ComputeBackendServiceSignedUrlKey", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeBackendServiceSignedUrlKey resources.
type computeBackendServiceSignedUrlKeyState struct {
	// The backend service this signed URL key belongs.
	BackendService                      *string `pulumi:"backendService"`
	ComputeBackendServiceSignedUrlKeyId *string `pulumi:"computeBackendServiceSignedUrlKeyId"`
	// 128-bit key value used for signing the URL. The key value must be a valid RFC 4648 Section 5 base64url encoded string.
	KeyValue *string `pulumi:"keyValue"`
	// Name of the signed URL key.
	Name     *string                                    `pulumi:"name"`
	Project  *string                                    `pulumi:"project"`
	Timeouts *ComputeBackendServiceSignedUrlKeyTimeouts `pulumi:"timeouts"`
}

type ComputeBackendServiceSignedUrlKeyState struct {
	// The backend service this signed URL key belongs.
	BackendService                      pulumi.StringPtrInput
	ComputeBackendServiceSignedUrlKeyId pulumi.StringPtrInput
	// 128-bit key value used for signing the URL. The key value must be a valid RFC 4648 Section 5 base64url encoded string.
	KeyValue pulumi.StringPtrInput
	// Name of the signed URL key.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts ComputeBackendServiceSignedUrlKeyTimeoutsPtrInput
}

func (ComputeBackendServiceSignedUrlKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendServiceSignedUrlKeyState)(nil)).Elem()
}

type computeBackendServiceSignedUrlKeyArgs struct {
	// The backend service this signed URL key belongs.
	BackendService                      string  `pulumi:"backendService"`
	ComputeBackendServiceSignedUrlKeyId *string `pulumi:"computeBackendServiceSignedUrlKeyId"`
	// 128-bit key value used for signing the URL. The key value must be a valid RFC 4648 Section 5 base64url encoded string.
	KeyValue string `pulumi:"keyValue"`
	// Name of the signed URL key.
	Name     *string                                    `pulumi:"name"`
	Project  *string                                    `pulumi:"project"`
	Timeouts *ComputeBackendServiceSignedUrlKeyTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeBackendServiceSignedUrlKey resource.
type ComputeBackendServiceSignedUrlKeyArgs struct {
	// The backend service this signed URL key belongs.
	BackendService                      pulumi.StringInput
	ComputeBackendServiceSignedUrlKeyId pulumi.StringPtrInput
	// 128-bit key value used for signing the URL. The key value must be a valid RFC 4648 Section 5 base64url encoded string.
	KeyValue pulumi.StringInput
	// Name of the signed URL key.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts ComputeBackendServiceSignedUrlKeyTimeoutsPtrInput
}

func (ComputeBackendServiceSignedUrlKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeBackendServiceSignedUrlKeyArgs)(nil)).Elem()
}

type ComputeBackendServiceSignedUrlKeyInput interface {
	pulumi.Input

	ToComputeBackendServiceSignedUrlKeyOutput() ComputeBackendServiceSignedUrlKeyOutput
	ToComputeBackendServiceSignedUrlKeyOutputWithContext(ctx context.Context) ComputeBackendServiceSignedUrlKeyOutput
}

func (*ComputeBackendServiceSignedUrlKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendServiceSignedUrlKey)(nil)).Elem()
}

func (i *ComputeBackendServiceSignedUrlKey) ToComputeBackendServiceSignedUrlKeyOutput() ComputeBackendServiceSignedUrlKeyOutput {
	return i.ToComputeBackendServiceSignedUrlKeyOutputWithContext(context.Background())
}

func (i *ComputeBackendServiceSignedUrlKey) ToComputeBackendServiceSignedUrlKeyOutputWithContext(ctx context.Context) ComputeBackendServiceSignedUrlKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeBackendServiceSignedUrlKeyOutput)
}

type ComputeBackendServiceSignedUrlKeyOutput struct{ *pulumi.OutputState }

func (ComputeBackendServiceSignedUrlKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeBackendServiceSignedUrlKey)(nil)).Elem()
}

func (o ComputeBackendServiceSignedUrlKeyOutput) ToComputeBackendServiceSignedUrlKeyOutput() ComputeBackendServiceSignedUrlKeyOutput {
	return o
}

func (o ComputeBackendServiceSignedUrlKeyOutput) ToComputeBackendServiceSignedUrlKeyOutputWithContext(ctx context.Context) ComputeBackendServiceSignedUrlKeyOutput {
	return o
}

// The backend service this signed URL key belongs.
func (o ComputeBackendServiceSignedUrlKeyOutput) BackendService() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceSignedUrlKey) pulumi.StringOutput { return v.BackendService }).(pulumi.StringOutput)
}

func (o ComputeBackendServiceSignedUrlKeyOutput) ComputeBackendServiceSignedUrlKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceSignedUrlKey) pulumi.StringOutput {
		return v.ComputeBackendServiceSignedUrlKeyId
	}).(pulumi.StringOutput)
}

// 128-bit key value used for signing the URL. The key value must be a valid RFC 4648 Section 5 base64url encoded string.
func (o ComputeBackendServiceSignedUrlKeyOutput) KeyValue() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceSignedUrlKey) pulumi.StringOutput { return v.KeyValue }).(pulumi.StringOutput)
}

// Name of the signed URL key.
func (o ComputeBackendServiceSignedUrlKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceSignedUrlKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeBackendServiceSignedUrlKeyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeBackendServiceSignedUrlKey) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeBackendServiceSignedUrlKeyOutput) Timeouts() ComputeBackendServiceSignedUrlKeyTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeBackendServiceSignedUrlKey) ComputeBackendServiceSignedUrlKeyTimeoutsPtrOutput {
		return v.Timeouts
	}).(ComputeBackendServiceSignedUrlKeyTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeBackendServiceSignedUrlKeyInput)(nil)).Elem(), &ComputeBackendServiceSignedUrlKey{})
	pulumi.RegisterOutputType(ComputeBackendServiceSignedUrlKeyOutput{})
}
