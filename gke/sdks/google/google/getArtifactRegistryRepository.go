// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupArtifactRegistryRepository(ctx *pulumi.Context, args *LookupArtifactRegistryRepositoryArgs, opts ...pulumi.InvokeOption) (*LookupArtifactRegistryRepositoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupArtifactRegistryRepositoryResult
	err = ctx.InvokePackage("google:index/getArtifactRegistryRepository:getArtifactRegistryRepository", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getArtifactRegistryRepository.
type LookupArtifactRegistryRepositoryArgs struct {
	Id           *string `pulumi:"id"`
	Location     string  `pulumi:"location"`
	Project      *string `pulumi:"project"`
	RepositoryId string  `pulumi:"repositoryId"`
}

// A collection of values returned by getArtifactRegistryRepository.
type LookupArtifactRegistryRepositoryResult struct {
	CleanupPolicies              []GetArtifactRegistryRepositoryCleanupPolicy               `pulumi:"cleanupPolicies"`
	CleanupPolicyDryRun          bool                                                       `pulumi:"cleanupPolicyDryRun"`
	CreateTime                   string                                                     `pulumi:"createTime"`
	Description                  string                                                     `pulumi:"description"`
	DockerConfigs                []GetArtifactRegistryRepositoryDockerConfig                `pulumi:"dockerConfigs"`
	EffectiveLabels              map[string]string                                          `pulumi:"effectiveLabels"`
	Format                       string                                                     `pulumi:"format"`
	Id                           string                                                     `pulumi:"id"`
	KmsKeyName                   string                                                     `pulumi:"kmsKeyName"`
	Labels                       map[string]string                                          `pulumi:"labels"`
	Location                     string                                                     `pulumi:"location"`
	MavenConfigs                 []GetArtifactRegistryRepositoryMavenConfig                 `pulumi:"mavenConfigs"`
	Mode                         string                                                     `pulumi:"mode"`
	Name                         string                                                     `pulumi:"name"`
	Project                      *string                                                    `pulumi:"project"`
	RemoteRepositoryConfigs      []GetArtifactRegistryRepositoryRemoteRepositoryConfig      `pulumi:"remoteRepositoryConfigs"`
	RepositoryId                 string                                                     `pulumi:"repositoryId"`
	TerraformLabels              map[string]string                                          `pulumi:"terraformLabels"`
	UpdateTime                   string                                                     `pulumi:"updateTime"`
	VirtualRepositoryConfigs     []GetArtifactRegistryRepositoryVirtualRepositoryConfig     `pulumi:"virtualRepositoryConfigs"`
	VulnerabilityScanningConfigs []GetArtifactRegistryRepositoryVulnerabilityScanningConfig `pulumi:"vulnerabilityScanningConfigs"`
}

func LookupArtifactRegistryRepositoryOutput(ctx *pulumi.Context, args LookupArtifactRegistryRepositoryOutputArgs, opts ...pulumi.InvokeOption) LookupArtifactRegistryRepositoryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupArtifactRegistryRepositoryResultOutput, error) {
			args := v.(LookupArtifactRegistryRepositoryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupArtifactRegistryRepositoryResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getArtifactRegistryRepository:getArtifactRegistryRepository", args, LookupArtifactRegistryRepositoryResultOutput{}, options).(LookupArtifactRegistryRepositoryResultOutput), nil
		}).(LookupArtifactRegistryRepositoryResultOutput)
}

// A collection of arguments for invoking getArtifactRegistryRepository.
type LookupArtifactRegistryRepositoryOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	Location     pulumi.StringInput    `pulumi:"location"`
	Project      pulumi.StringPtrInput `pulumi:"project"`
	RepositoryId pulumi.StringInput    `pulumi:"repositoryId"`
}

func (LookupArtifactRegistryRepositoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArtifactRegistryRepositoryArgs)(nil)).Elem()
}

// A collection of values returned by getArtifactRegistryRepository.
type LookupArtifactRegistryRepositoryResultOutput struct{ *pulumi.OutputState }

func (LookupArtifactRegistryRepositoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupArtifactRegistryRepositoryResult)(nil)).Elem()
}

func (o LookupArtifactRegistryRepositoryResultOutput) ToLookupArtifactRegistryRepositoryResultOutput() LookupArtifactRegistryRepositoryResultOutput {
	return o
}

func (o LookupArtifactRegistryRepositoryResultOutput) ToLookupArtifactRegistryRepositoryResultOutputWithContext(ctx context.Context) LookupArtifactRegistryRepositoryResultOutput {
	return o
}

func (o LookupArtifactRegistryRepositoryResultOutput) CleanupPolicies() GetArtifactRegistryRepositoryCleanupPolicyArrayOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) []GetArtifactRegistryRepositoryCleanupPolicy {
		return v.CleanupPolicies
	}).(GetArtifactRegistryRepositoryCleanupPolicyArrayOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) CleanupPolicyDryRun() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) bool { return v.CleanupPolicyDryRun }).(pulumi.BoolOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) DockerConfigs() GetArtifactRegistryRepositoryDockerConfigArrayOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) []GetArtifactRegistryRepositoryDockerConfig {
		return v.DockerConfigs
	}).(GetArtifactRegistryRepositoryDockerConfigArrayOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.Format }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) KmsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.KmsKeyName }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) MavenConfigs() GetArtifactRegistryRepositoryMavenConfigArrayOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) []GetArtifactRegistryRepositoryMavenConfig {
		return v.MavenConfigs
	}).(GetArtifactRegistryRepositoryMavenConfigArrayOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.Mode }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) RemoteRepositoryConfigs() GetArtifactRegistryRepositoryRemoteRepositoryConfigArrayOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) []GetArtifactRegistryRepositoryRemoteRepositoryConfig {
		return v.RemoteRepositoryConfigs
	}).(GetArtifactRegistryRepositoryRemoteRepositoryConfigArrayOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.RepositoryId }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) map[string]string { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) VirtualRepositoryConfigs() GetArtifactRegistryRepositoryVirtualRepositoryConfigArrayOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) []GetArtifactRegistryRepositoryVirtualRepositoryConfig {
		return v.VirtualRepositoryConfigs
	}).(GetArtifactRegistryRepositoryVirtualRepositoryConfigArrayOutput)
}

func (o LookupArtifactRegistryRepositoryResultOutput) VulnerabilityScanningConfigs() GetArtifactRegistryRepositoryVulnerabilityScanningConfigArrayOutput {
	return o.ApplyT(func(v LookupArtifactRegistryRepositoryResult) []GetArtifactRegistryRepositoryVulnerabilityScanningConfig {
		return v.VulnerabilityScanningConfigs
	}).(GetArtifactRegistryRepositoryVulnerabilityScanningConfigArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupArtifactRegistryRepositoryResultOutput{})
}
