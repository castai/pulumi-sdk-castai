// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeSubnetworkIamPolicy struct {
	pulumi.CustomResourceState

	ComputeSubnetworkIamPolicyId pulumi.StringOutput `pulumi:"computeSubnetworkIamPolicyId"`
	Etag                         pulumi.StringOutput `pulumi:"etag"`
	PolicyData                   pulumi.StringOutput `pulumi:"policyData"`
	Project                      pulumi.StringOutput `pulumi:"project"`
	Region                       pulumi.StringOutput `pulumi:"region"`
	Subnetwork                   pulumi.StringOutput `pulumi:"subnetwork"`
}

// NewComputeSubnetworkIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewComputeSubnetworkIamPolicy(ctx *pulumi.Context,
	name string, args *ComputeSubnetworkIamPolicyArgs, opts ...pulumi.ResourceOption) (*ComputeSubnetworkIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.Subnetwork == nil {
		return nil, errors.New("invalid value for required argument 'Subnetwork'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeSubnetworkIamPolicy
	err = ctx.RegisterPackageResource("google:index/computeSubnetworkIamPolicy:ComputeSubnetworkIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeSubnetworkIamPolicy gets an existing ComputeSubnetworkIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeSubnetworkIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeSubnetworkIamPolicyState, opts ...pulumi.ResourceOption) (*ComputeSubnetworkIamPolicy, error) {
	var resource ComputeSubnetworkIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeSubnetworkIamPolicy:ComputeSubnetworkIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeSubnetworkIamPolicy resources.
type computeSubnetworkIamPolicyState struct {
	ComputeSubnetworkIamPolicyId *string `pulumi:"computeSubnetworkIamPolicyId"`
	Etag                         *string `pulumi:"etag"`
	PolicyData                   *string `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
	Region                       *string `pulumi:"region"`
	Subnetwork                   *string `pulumi:"subnetwork"`
}

type ComputeSubnetworkIamPolicyState struct {
	ComputeSubnetworkIamPolicyId pulumi.StringPtrInput
	Etag                         pulumi.StringPtrInput
	PolicyData                   pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
	Subnetwork                   pulumi.StringPtrInput
}

func (ComputeSubnetworkIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSubnetworkIamPolicyState)(nil)).Elem()
}

type computeSubnetworkIamPolicyArgs struct {
	ComputeSubnetworkIamPolicyId *string `pulumi:"computeSubnetworkIamPolicyId"`
	PolicyData                   string  `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
	Region                       *string `pulumi:"region"`
	Subnetwork                   string  `pulumi:"subnetwork"`
}

// The set of arguments for constructing a ComputeSubnetworkIamPolicy resource.
type ComputeSubnetworkIamPolicyArgs struct {
	ComputeSubnetworkIamPolicyId pulumi.StringPtrInput
	PolicyData                   pulumi.StringInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
	Subnetwork                   pulumi.StringInput
}

func (ComputeSubnetworkIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSubnetworkIamPolicyArgs)(nil)).Elem()
}

type ComputeSubnetworkIamPolicyInput interface {
	pulumi.Input

	ToComputeSubnetworkIamPolicyOutput() ComputeSubnetworkIamPolicyOutput
	ToComputeSubnetworkIamPolicyOutputWithContext(ctx context.Context) ComputeSubnetworkIamPolicyOutput
}

func (*ComputeSubnetworkIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSubnetworkIamPolicy)(nil)).Elem()
}

func (i *ComputeSubnetworkIamPolicy) ToComputeSubnetworkIamPolicyOutput() ComputeSubnetworkIamPolicyOutput {
	return i.ToComputeSubnetworkIamPolicyOutputWithContext(context.Background())
}

func (i *ComputeSubnetworkIamPolicy) ToComputeSubnetworkIamPolicyOutputWithContext(ctx context.Context) ComputeSubnetworkIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeSubnetworkIamPolicyOutput)
}

type ComputeSubnetworkIamPolicyOutput struct{ *pulumi.OutputState }

func (ComputeSubnetworkIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSubnetworkIamPolicy)(nil)).Elem()
}

func (o ComputeSubnetworkIamPolicyOutput) ToComputeSubnetworkIamPolicyOutput() ComputeSubnetworkIamPolicyOutput {
	return o
}

func (o ComputeSubnetworkIamPolicyOutput) ToComputeSubnetworkIamPolicyOutputWithContext(ctx context.Context) ComputeSubnetworkIamPolicyOutput {
	return o
}

func (o ComputeSubnetworkIamPolicyOutput) ComputeSubnetworkIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamPolicy) pulumi.StringOutput { return v.ComputeSubnetworkIamPolicyId }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamPolicyOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamPolicy) pulumi.StringOutput { return v.Subnetwork }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeSubnetworkIamPolicyInput)(nil)).Elem(), &ComputeSubnetworkIamPolicy{})
	pulumi.RegisterOutputType(ComputeSubnetworkIamPolicyOutput{})
}
