// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetComputeZones(ctx *pulumi.Context, args *GetComputeZonesArgs, opts ...pulumi.InvokeOption) (*GetComputeZonesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetComputeZonesResult
	err = ctx.InvokePackage("google:index/getComputeZones:getComputeZones", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getComputeZones.
type GetComputeZonesArgs struct {
	Id      *string `pulumi:"id"`
	Project *string `pulumi:"project"`
	Region  *string `pulumi:"region"`
	Status  *string `pulumi:"status"`
}

// A collection of values returned by getComputeZones.
type GetComputeZonesResult struct {
	Id      string   `pulumi:"id"`
	Names   []string `pulumi:"names"`
	Project string   `pulumi:"project"`
	Region  *string  `pulumi:"region"`
	Status  *string  `pulumi:"status"`
}

func GetComputeZonesOutput(ctx *pulumi.Context, args GetComputeZonesOutputArgs, opts ...pulumi.InvokeOption) GetComputeZonesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetComputeZonesResultOutput, error) {
			args := v.(GetComputeZonesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetComputeZonesResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getComputeZones:getComputeZones", args, GetComputeZonesResultOutput{}, options).(GetComputeZonesResultOutput), nil
		}).(GetComputeZonesResultOutput)
}

// A collection of arguments for invoking getComputeZones.
type GetComputeZonesOutputArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Project pulumi.StringPtrInput `pulumi:"project"`
	Region  pulumi.StringPtrInput `pulumi:"region"`
	Status  pulumi.StringPtrInput `pulumi:"status"`
}

func (GetComputeZonesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeZonesArgs)(nil)).Elem()
}

// A collection of values returned by getComputeZones.
type GetComputeZonesResultOutput struct{ *pulumi.OutputState }

func (GetComputeZonesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetComputeZonesResult)(nil)).Elem()
}

func (o GetComputeZonesResultOutput) ToGetComputeZonesResultOutput() GetComputeZonesResultOutput {
	return o
}

func (o GetComputeZonesResultOutput) ToGetComputeZonesResultOutputWithContext(ctx context.Context) GetComputeZonesResultOutput {
	return o
}

func (o GetComputeZonesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeZonesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetComputeZonesResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetComputeZonesResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetComputeZonesResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetComputeZonesResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetComputeZonesResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeZonesResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetComputeZonesResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetComputeZonesResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetComputeZonesResultOutput{})
}
