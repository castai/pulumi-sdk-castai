// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApigeeEnvironment struct {
	pulumi.CustomResourceState

	// Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be
	// changed. Possible values: ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]
	ApiProxyType        pulumi.StringOutput `pulumi:"apiProxyType"`
	ApigeeEnvironmentId pulumi.StringOutput `pulumi:"apigeeEnvironmentId"`
	// Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and
	// cannot be changed. When you enable archive deployment, you will be prevented from performing a subset of actions within
	// the environment, including: Managing the deployment of API proxy or shared flow revisions; Creating, updating, or
	// deleting resource files; Creating, updating, or deleting target servers. Possible values:
	// ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]
	DeploymentType pulumi.StringOutput `pulumi:"deploymentType"`
	// Description of the environment.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Display name of the environment.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of
	// {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
	ForwardProxyUri pulumi.StringPtrOutput `pulumi:"forwardProxyUri"`
	// The resource ID of the environment.
	Name pulumi.StringOutput `pulumi:"name"`
	// NodeConfig for setting the min/max number of nodes associated with the environment.
	NodeConfig ApigeeEnvironmentNodeConfigPtrOutput `pulumi:"nodeConfig"`
	// The Apigee Organization associated with the Apigee environment, in the format 'organizations/{{org_name}}'.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// Key-value pairs that may be used for customizing the environment.
	Properties ApigeeEnvironmentPropertiesPtrOutput `pulumi:"properties"`
	Timeouts   ApigeeEnvironmentTimeoutsPtrOutput   `pulumi:"timeouts"`
	// Types that can be selected for an Environment. Each of the types are limited by capability and capacity. Refer to
	// Apigee's public documentation to understand about each of these types in details. An Apigee org can support
	// heterogeneous Environments. Possible values: ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewApigeeEnvironment registers a new resource with the given unique name, arguments, and options.
func NewApigeeEnvironment(ctx *pulumi.Context,
	name string, args *ApigeeEnvironmentArgs, opts ...pulumi.ResourceOption) (*ApigeeEnvironment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ApigeeEnvironment
	err = ctx.RegisterPackageResource("google:index/apigeeEnvironment:ApigeeEnvironment", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigeeEnvironment gets an existing ApigeeEnvironment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigeeEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigeeEnvironmentState, opts ...pulumi.ResourceOption) (*ApigeeEnvironment, error) {
	var resource ApigeeEnvironment
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/apigeeEnvironment:ApigeeEnvironment", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigeeEnvironment resources.
type apigeeEnvironmentState struct {
	// Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be
	// changed. Possible values: ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]
	ApiProxyType        *string `pulumi:"apiProxyType"`
	ApigeeEnvironmentId *string `pulumi:"apigeeEnvironmentId"`
	// Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and
	// cannot be changed. When you enable archive deployment, you will be prevented from performing a subset of actions within
	// the environment, including: Managing the deployment of API proxy or shared flow revisions; Creating, updating, or
	// deleting resource files; Creating, updating, or deleting target servers. Possible values:
	// ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]
	DeploymentType *string `pulumi:"deploymentType"`
	// Description of the environment.
	Description *string `pulumi:"description"`
	// Display name of the environment.
	DisplayName *string `pulumi:"displayName"`
	// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of
	// {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
	ForwardProxyUri *string `pulumi:"forwardProxyUri"`
	// The resource ID of the environment.
	Name *string `pulumi:"name"`
	// NodeConfig for setting the min/max number of nodes associated with the environment.
	NodeConfig *ApigeeEnvironmentNodeConfig `pulumi:"nodeConfig"`
	// The Apigee Organization associated with the Apigee environment, in the format 'organizations/{{org_name}}'.
	OrgId *string `pulumi:"orgId"`
	// Key-value pairs that may be used for customizing the environment.
	Properties *ApigeeEnvironmentProperties `pulumi:"properties"`
	Timeouts   *ApigeeEnvironmentTimeouts   `pulumi:"timeouts"`
	// Types that can be selected for an Environment. Each of the types are limited by capability and capacity. Refer to
	// Apigee's public documentation to understand about each of these types in details. An Apigee org can support
	// heterogeneous Environments. Possible values: ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]
	Type *string `pulumi:"type"`
}

type ApigeeEnvironmentState struct {
	// Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be
	// changed. Possible values: ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]
	ApiProxyType        pulumi.StringPtrInput
	ApigeeEnvironmentId pulumi.StringPtrInput
	// Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and
	// cannot be changed. When you enable archive deployment, you will be prevented from performing a subset of actions within
	// the environment, including: Managing the deployment of API proxy or shared flow revisions; Creating, updating, or
	// deleting resource files; Creating, updating, or deleting target servers. Possible values:
	// ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]
	DeploymentType pulumi.StringPtrInput
	// Description of the environment.
	Description pulumi.StringPtrInput
	// Display name of the environment.
	DisplayName pulumi.StringPtrInput
	// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of
	// {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
	ForwardProxyUri pulumi.StringPtrInput
	// The resource ID of the environment.
	Name pulumi.StringPtrInput
	// NodeConfig for setting the min/max number of nodes associated with the environment.
	NodeConfig ApigeeEnvironmentNodeConfigPtrInput
	// The Apigee Organization associated with the Apigee environment, in the format 'organizations/{{org_name}}'.
	OrgId pulumi.StringPtrInput
	// Key-value pairs that may be used for customizing the environment.
	Properties ApigeeEnvironmentPropertiesPtrInput
	Timeouts   ApigeeEnvironmentTimeoutsPtrInput
	// Types that can be selected for an Environment. Each of the types are limited by capability and capacity. Refer to
	// Apigee's public documentation to understand about each of these types in details. An Apigee org can support
	// heterogeneous Environments. Possible values: ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]
	Type pulumi.StringPtrInput
}

func (ApigeeEnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigeeEnvironmentState)(nil)).Elem()
}

type apigeeEnvironmentArgs struct {
	// Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be
	// changed. Possible values: ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]
	ApiProxyType        *string `pulumi:"apiProxyType"`
	ApigeeEnvironmentId *string `pulumi:"apigeeEnvironmentId"`
	// Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and
	// cannot be changed. When you enable archive deployment, you will be prevented from performing a subset of actions within
	// the environment, including: Managing the deployment of API proxy or shared flow revisions; Creating, updating, or
	// deleting resource files; Creating, updating, or deleting target servers. Possible values:
	// ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]
	DeploymentType *string `pulumi:"deploymentType"`
	// Description of the environment.
	Description *string `pulumi:"description"`
	// Display name of the environment.
	DisplayName *string `pulumi:"displayName"`
	// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of
	// {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
	ForwardProxyUri *string `pulumi:"forwardProxyUri"`
	// The resource ID of the environment.
	Name *string `pulumi:"name"`
	// NodeConfig for setting the min/max number of nodes associated with the environment.
	NodeConfig *ApigeeEnvironmentNodeConfig `pulumi:"nodeConfig"`
	// The Apigee Organization associated with the Apigee environment, in the format 'organizations/{{org_name}}'.
	OrgId string `pulumi:"orgId"`
	// Key-value pairs that may be used for customizing the environment.
	Properties *ApigeeEnvironmentProperties `pulumi:"properties"`
	Timeouts   *ApigeeEnvironmentTimeouts   `pulumi:"timeouts"`
	// Types that can be selected for an Environment. Each of the types are limited by capability and capacity. Refer to
	// Apigee's public documentation to understand about each of these types in details. An Apigee org can support
	// heterogeneous Environments. Possible values: ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a ApigeeEnvironment resource.
type ApigeeEnvironmentArgs struct {
	// Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be
	// changed. Possible values: ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]
	ApiProxyType        pulumi.StringPtrInput
	ApigeeEnvironmentId pulumi.StringPtrInput
	// Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and
	// cannot be changed. When you enable archive deployment, you will be prevented from performing a subset of actions within
	// the environment, including: Managing the deployment of API proxy or shared flow revisions; Creating, updating, or
	// deleting resource files; Creating, updating, or deleting target servers. Possible values:
	// ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]
	DeploymentType pulumi.StringPtrInput
	// Description of the environment.
	Description pulumi.StringPtrInput
	// Display name of the environment.
	DisplayName pulumi.StringPtrInput
	// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of
	// {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
	ForwardProxyUri pulumi.StringPtrInput
	// The resource ID of the environment.
	Name pulumi.StringPtrInput
	// NodeConfig for setting the min/max number of nodes associated with the environment.
	NodeConfig ApigeeEnvironmentNodeConfigPtrInput
	// The Apigee Organization associated with the Apigee environment, in the format 'organizations/{{org_name}}'.
	OrgId pulumi.StringInput
	// Key-value pairs that may be used for customizing the environment.
	Properties ApigeeEnvironmentPropertiesPtrInput
	Timeouts   ApigeeEnvironmentTimeoutsPtrInput
	// Types that can be selected for an Environment. Each of the types are limited by capability and capacity. Refer to
	// Apigee's public documentation to understand about each of these types in details. An Apigee org can support
	// heterogeneous Environments. Possible values: ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]
	Type pulumi.StringPtrInput
}

func (ApigeeEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigeeEnvironmentArgs)(nil)).Elem()
}

type ApigeeEnvironmentInput interface {
	pulumi.Input

	ToApigeeEnvironmentOutput() ApigeeEnvironmentOutput
	ToApigeeEnvironmentOutputWithContext(ctx context.Context) ApigeeEnvironmentOutput
}

func (*ApigeeEnvironment) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigeeEnvironment)(nil)).Elem()
}

func (i *ApigeeEnvironment) ToApigeeEnvironmentOutput() ApigeeEnvironmentOutput {
	return i.ToApigeeEnvironmentOutputWithContext(context.Background())
}

func (i *ApigeeEnvironment) ToApigeeEnvironmentOutputWithContext(ctx context.Context) ApigeeEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigeeEnvironmentOutput)
}

type ApigeeEnvironmentOutput struct{ *pulumi.OutputState }

func (ApigeeEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigeeEnvironment)(nil)).Elem()
}

func (o ApigeeEnvironmentOutput) ToApigeeEnvironmentOutput() ApigeeEnvironmentOutput {
	return o
}

func (o ApigeeEnvironmentOutput) ToApigeeEnvironmentOutputWithContext(ctx context.Context) ApigeeEnvironmentOutput {
	return o
}

// Optional. API Proxy type supported by the environment. The type can be set when creating the Environment and cannot be
// changed. Possible values: ["API_PROXY_TYPE_UNSPECIFIED", "PROGRAMMABLE", "CONFIGURABLE"]
func (o ApigeeEnvironmentOutput) ApiProxyType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) pulumi.StringOutput { return v.ApiProxyType }).(pulumi.StringOutput)
}

func (o ApigeeEnvironmentOutput) ApigeeEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) pulumi.StringOutput { return v.ApigeeEnvironmentId }).(pulumi.StringOutput)
}

// Optional. Deployment type supported by the environment. The deployment type can be set when creating the environment and
// cannot be changed. When you enable archive deployment, you will be prevented from performing a subset of actions within
// the environment, including: Managing the deployment of API proxy or shared flow revisions; Creating, updating, or
// deleting resource files; Creating, updating, or deleting target servers. Possible values:
// ["DEPLOYMENT_TYPE_UNSPECIFIED", "PROXY", "ARCHIVE"]
func (o ApigeeEnvironmentOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) pulumi.StringOutput { return v.DeploymentType }).(pulumi.StringOutput)
}

// Description of the environment.
func (o ApigeeEnvironmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Display name of the environment.
func (o ApigeeEnvironmentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Optional. URI of the forward proxy to be applied to the runtime instances in this environment. Must be in the format of
// {scheme}://{hostname}:{port}. Note that the scheme must be one of "http" or "https", and the port must be supplied.
func (o ApigeeEnvironmentOutput) ForwardProxyUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) pulumi.StringPtrOutput { return v.ForwardProxyUri }).(pulumi.StringPtrOutput)
}

// The resource ID of the environment.
func (o ApigeeEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// NodeConfig for setting the min/max number of nodes associated with the environment.
func (o ApigeeEnvironmentOutput) NodeConfig() ApigeeEnvironmentNodeConfigPtrOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) ApigeeEnvironmentNodeConfigPtrOutput { return v.NodeConfig }).(ApigeeEnvironmentNodeConfigPtrOutput)
}

// The Apigee Organization associated with the Apigee environment, in the format 'organizations/{{org_name}}'.
func (o ApigeeEnvironmentOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// Key-value pairs that may be used for customizing the environment.
func (o ApigeeEnvironmentOutput) Properties() ApigeeEnvironmentPropertiesPtrOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) ApigeeEnvironmentPropertiesPtrOutput { return v.Properties }).(ApigeeEnvironmentPropertiesPtrOutput)
}

func (o ApigeeEnvironmentOutput) Timeouts() ApigeeEnvironmentTimeoutsPtrOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) ApigeeEnvironmentTimeoutsPtrOutput { return v.Timeouts }).(ApigeeEnvironmentTimeoutsPtrOutput)
}

// Types that can be selected for an Environment. Each of the types are limited by capability and capacity. Refer to
// Apigee's public documentation to understand about each of these types in details. An Apigee org can support
// heterogeneous Environments. Possible values: ["ENVIRONMENT_TYPE_UNSPECIFIED", "BASE", "INTERMEDIATE", "COMPREHENSIVE"]
func (o ApigeeEnvironmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeEnvironment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigeeEnvironmentInput)(nil)).Elem(), &ApigeeEnvironment{})
	pulumi.RegisterOutputType(ApigeeEnvironmentOutput{})
}
