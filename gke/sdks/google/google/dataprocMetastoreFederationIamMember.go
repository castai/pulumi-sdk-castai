// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataprocMetastoreFederationIamMember struct {
	pulumi.CustomResourceState

	Condition                              DataprocMetastoreFederationIamMemberConditionPtrOutput `pulumi:"condition"`
	DataprocMetastoreFederationIamMemberId pulumi.StringOutput                                    `pulumi:"dataprocMetastoreFederationIamMemberId"`
	Etag                                   pulumi.StringOutput                                    `pulumi:"etag"`
	FederationId                           pulumi.StringOutput                                    `pulumi:"federationId"`
	Location                               pulumi.StringOutput                                    `pulumi:"location"`
	Member                                 pulumi.StringOutput                                    `pulumi:"member"`
	Project                                pulumi.StringOutput                                    `pulumi:"project"`
	Role                                   pulumi.StringOutput                                    `pulumi:"role"`
}

// NewDataprocMetastoreFederationIamMember registers a new resource with the given unique name, arguments, and options.
func NewDataprocMetastoreFederationIamMember(ctx *pulumi.Context,
	name string, args *DataprocMetastoreFederationIamMemberArgs, opts ...pulumi.ResourceOption) (*DataprocMetastoreFederationIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FederationId == nil {
		return nil, errors.New("invalid value for required argument 'FederationId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataprocMetastoreFederationIamMember
	err = ctx.RegisterPackageResource("google:index/dataprocMetastoreFederationIamMember:DataprocMetastoreFederationIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocMetastoreFederationIamMember gets an existing DataprocMetastoreFederationIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocMetastoreFederationIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocMetastoreFederationIamMemberState, opts ...pulumi.ResourceOption) (*DataprocMetastoreFederationIamMember, error) {
	var resource DataprocMetastoreFederationIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataprocMetastoreFederationIamMember:DataprocMetastoreFederationIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocMetastoreFederationIamMember resources.
type dataprocMetastoreFederationIamMemberState struct {
	Condition                              *DataprocMetastoreFederationIamMemberCondition `pulumi:"condition"`
	DataprocMetastoreFederationIamMemberId *string                                        `pulumi:"dataprocMetastoreFederationIamMemberId"`
	Etag                                   *string                                        `pulumi:"etag"`
	FederationId                           *string                                        `pulumi:"federationId"`
	Location                               *string                                        `pulumi:"location"`
	Member                                 *string                                        `pulumi:"member"`
	Project                                *string                                        `pulumi:"project"`
	Role                                   *string                                        `pulumi:"role"`
}

type DataprocMetastoreFederationIamMemberState struct {
	Condition                              DataprocMetastoreFederationIamMemberConditionPtrInput
	DataprocMetastoreFederationIamMemberId pulumi.StringPtrInput
	Etag                                   pulumi.StringPtrInput
	FederationId                           pulumi.StringPtrInput
	Location                               pulumi.StringPtrInput
	Member                                 pulumi.StringPtrInput
	Project                                pulumi.StringPtrInput
	Role                                   pulumi.StringPtrInput
}

func (DataprocMetastoreFederationIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreFederationIamMemberState)(nil)).Elem()
}

type dataprocMetastoreFederationIamMemberArgs struct {
	Condition                              *DataprocMetastoreFederationIamMemberCondition `pulumi:"condition"`
	DataprocMetastoreFederationIamMemberId *string                                        `pulumi:"dataprocMetastoreFederationIamMemberId"`
	FederationId                           string                                         `pulumi:"federationId"`
	Location                               *string                                        `pulumi:"location"`
	Member                                 string                                         `pulumi:"member"`
	Project                                *string                                        `pulumi:"project"`
	Role                                   string                                         `pulumi:"role"`
}

// The set of arguments for constructing a DataprocMetastoreFederationIamMember resource.
type DataprocMetastoreFederationIamMemberArgs struct {
	Condition                              DataprocMetastoreFederationIamMemberConditionPtrInput
	DataprocMetastoreFederationIamMemberId pulumi.StringPtrInput
	FederationId                           pulumi.StringInput
	Location                               pulumi.StringPtrInput
	Member                                 pulumi.StringInput
	Project                                pulumi.StringPtrInput
	Role                                   pulumi.StringInput
}

func (DataprocMetastoreFederationIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocMetastoreFederationIamMemberArgs)(nil)).Elem()
}

type DataprocMetastoreFederationIamMemberInput interface {
	pulumi.Input

	ToDataprocMetastoreFederationIamMemberOutput() DataprocMetastoreFederationIamMemberOutput
	ToDataprocMetastoreFederationIamMemberOutputWithContext(ctx context.Context) DataprocMetastoreFederationIamMemberOutput
}

func (*DataprocMetastoreFederationIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreFederationIamMember)(nil)).Elem()
}

func (i *DataprocMetastoreFederationIamMember) ToDataprocMetastoreFederationIamMemberOutput() DataprocMetastoreFederationIamMemberOutput {
	return i.ToDataprocMetastoreFederationIamMemberOutputWithContext(context.Background())
}

func (i *DataprocMetastoreFederationIamMember) ToDataprocMetastoreFederationIamMemberOutputWithContext(ctx context.Context) DataprocMetastoreFederationIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocMetastoreFederationIamMemberOutput)
}

type DataprocMetastoreFederationIamMemberOutput struct{ *pulumi.OutputState }

func (DataprocMetastoreFederationIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocMetastoreFederationIamMember)(nil)).Elem()
}

func (o DataprocMetastoreFederationIamMemberOutput) ToDataprocMetastoreFederationIamMemberOutput() DataprocMetastoreFederationIamMemberOutput {
	return o
}

func (o DataprocMetastoreFederationIamMemberOutput) ToDataprocMetastoreFederationIamMemberOutputWithContext(ctx context.Context) DataprocMetastoreFederationIamMemberOutput {
	return o
}

func (o DataprocMetastoreFederationIamMemberOutput) Condition() DataprocMetastoreFederationIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamMember) DataprocMetastoreFederationIamMemberConditionPtrOutput {
		return v.Condition
	}).(DataprocMetastoreFederationIamMemberConditionPtrOutput)
}

func (o DataprocMetastoreFederationIamMemberOutput) DataprocMetastoreFederationIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamMember) pulumi.StringOutput {
		return v.DataprocMetastoreFederationIamMemberId
	}).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamMemberOutput) FederationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamMember) pulumi.StringOutput { return v.FederationId }).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataprocMetastoreFederationIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocMetastoreFederationIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocMetastoreFederationIamMemberInput)(nil)).Elem(), &DataprocMetastoreFederationIamMember{})
	pulumi.RegisterOutputType(DataprocMetastoreFederationIamMemberOutput{})
}
