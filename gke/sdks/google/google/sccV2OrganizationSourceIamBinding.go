// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SccV2OrganizationSourceIamBinding struct {
	pulumi.CustomResourceState

	Condition                           SccV2OrganizationSourceIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                                pulumi.StringOutput                                 `pulumi:"etag"`
	Members                             pulumi.StringArrayOutput                            `pulumi:"members"`
	Organization                        pulumi.StringOutput                                 `pulumi:"organization"`
	Role                                pulumi.StringOutput                                 `pulumi:"role"`
	SccV2OrganizationSourceIamBindingId pulumi.StringOutput                                 `pulumi:"sccV2OrganizationSourceIamBindingId"`
	Source                              pulumi.StringOutput                                 `pulumi:"source"`
}

// NewSccV2OrganizationSourceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewSccV2OrganizationSourceIamBinding(ctx *pulumi.Context,
	name string, args *SccV2OrganizationSourceIamBindingArgs, opts ...pulumi.ResourceOption) (*SccV2OrganizationSourceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SccV2OrganizationSourceIamBinding
	err = ctx.RegisterPackageResource("google:index/sccV2OrganizationSourceIamBinding:SccV2OrganizationSourceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSccV2OrganizationSourceIamBinding gets an existing SccV2OrganizationSourceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSccV2OrganizationSourceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SccV2OrganizationSourceIamBindingState, opts ...pulumi.ResourceOption) (*SccV2OrganizationSourceIamBinding, error) {
	var resource SccV2OrganizationSourceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/sccV2OrganizationSourceIamBinding:SccV2OrganizationSourceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SccV2OrganizationSourceIamBinding resources.
type sccV2OrganizationSourceIamBindingState struct {
	Condition                           *SccV2OrganizationSourceIamBindingCondition `pulumi:"condition"`
	Etag                                *string                                     `pulumi:"etag"`
	Members                             []string                                    `pulumi:"members"`
	Organization                        *string                                     `pulumi:"organization"`
	Role                                *string                                     `pulumi:"role"`
	SccV2OrganizationSourceIamBindingId *string                                     `pulumi:"sccV2OrganizationSourceIamBindingId"`
	Source                              *string                                     `pulumi:"source"`
}

type SccV2OrganizationSourceIamBindingState struct {
	Condition                           SccV2OrganizationSourceIamBindingConditionPtrInput
	Etag                                pulumi.StringPtrInput
	Members                             pulumi.StringArrayInput
	Organization                        pulumi.StringPtrInput
	Role                                pulumi.StringPtrInput
	SccV2OrganizationSourceIamBindingId pulumi.StringPtrInput
	Source                              pulumi.StringPtrInput
}

func (SccV2OrganizationSourceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*sccV2OrganizationSourceIamBindingState)(nil)).Elem()
}

type sccV2OrganizationSourceIamBindingArgs struct {
	Condition                           *SccV2OrganizationSourceIamBindingCondition `pulumi:"condition"`
	Members                             []string                                    `pulumi:"members"`
	Organization                        string                                      `pulumi:"organization"`
	Role                                string                                      `pulumi:"role"`
	SccV2OrganizationSourceIamBindingId *string                                     `pulumi:"sccV2OrganizationSourceIamBindingId"`
	Source                              string                                      `pulumi:"source"`
}

// The set of arguments for constructing a SccV2OrganizationSourceIamBinding resource.
type SccV2OrganizationSourceIamBindingArgs struct {
	Condition                           SccV2OrganizationSourceIamBindingConditionPtrInput
	Members                             pulumi.StringArrayInput
	Organization                        pulumi.StringInput
	Role                                pulumi.StringInput
	SccV2OrganizationSourceIamBindingId pulumi.StringPtrInput
	Source                              pulumi.StringInput
}

func (SccV2OrganizationSourceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sccV2OrganizationSourceIamBindingArgs)(nil)).Elem()
}

type SccV2OrganizationSourceIamBindingInput interface {
	pulumi.Input

	ToSccV2OrganizationSourceIamBindingOutput() SccV2OrganizationSourceIamBindingOutput
	ToSccV2OrganizationSourceIamBindingOutputWithContext(ctx context.Context) SccV2OrganizationSourceIamBindingOutput
}

func (*SccV2OrganizationSourceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**SccV2OrganizationSourceIamBinding)(nil)).Elem()
}

func (i *SccV2OrganizationSourceIamBinding) ToSccV2OrganizationSourceIamBindingOutput() SccV2OrganizationSourceIamBindingOutput {
	return i.ToSccV2OrganizationSourceIamBindingOutputWithContext(context.Background())
}

func (i *SccV2OrganizationSourceIamBinding) ToSccV2OrganizationSourceIamBindingOutputWithContext(ctx context.Context) SccV2OrganizationSourceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SccV2OrganizationSourceIamBindingOutput)
}

type SccV2OrganizationSourceIamBindingOutput struct{ *pulumi.OutputState }

func (SccV2OrganizationSourceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SccV2OrganizationSourceIamBinding)(nil)).Elem()
}

func (o SccV2OrganizationSourceIamBindingOutput) ToSccV2OrganizationSourceIamBindingOutput() SccV2OrganizationSourceIamBindingOutput {
	return o
}

func (o SccV2OrganizationSourceIamBindingOutput) ToSccV2OrganizationSourceIamBindingOutputWithContext(ctx context.Context) SccV2OrganizationSourceIamBindingOutput {
	return o
}

func (o SccV2OrganizationSourceIamBindingOutput) Condition() SccV2OrganizationSourceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamBinding) SccV2OrganizationSourceIamBindingConditionPtrOutput {
		return v.Condition
	}).(SccV2OrganizationSourceIamBindingConditionPtrOutput)
}

func (o SccV2OrganizationSourceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o SccV2OrganizationSourceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o SccV2OrganizationSourceIamBindingOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamBinding) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

func (o SccV2OrganizationSourceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o SccV2OrganizationSourceIamBindingOutput) SccV2OrganizationSourceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamBinding) pulumi.StringOutput {
		return v.SccV2OrganizationSourceIamBindingId
	}).(pulumi.StringOutput)
}

func (o SccV2OrganizationSourceIamBindingOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *SccV2OrganizationSourceIamBinding) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SccV2OrganizationSourceIamBindingInput)(nil)).Elem(), &SccV2OrganizationSourceIamBinding{})
	pulumi.RegisterOutputType(SccV2OrganizationSourceIamBindingOutput{})
}
