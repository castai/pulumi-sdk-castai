// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SpannerDatabaseIamMember struct {
	pulumi.CustomResourceState

	Condition                  SpannerDatabaseIamMemberConditionPtrOutput `pulumi:"condition"`
	Database                   pulumi.StringOutput                        `pulumi:"database"`
	Etag                       pulumi.StringOutput                        `pulumi:"etag"`
	Instance                   pulumi.StringOutput                        `pulumi:"instance"`
	Member                     pulumi.StringOutput                        `pulumi:"member"`
	Project                    pulumi.StringOutput                        `pulumi:"project"`
	Role                       pulumi.StringOutput                        `pulumi:"role"`
	SpannerDatabaseIamMemberId pulumi.StringOutput                        `pulumi:"spannerDatabaseIamMemberId"`
}

// NewSpannerDatabaseIamMember registers a new resource with the given unique name, arguments, and options.
func NewSpannerDatabaseIamMember(ctx *pulumi.Context,
	name string, args *SpannerDatabaseIamMemberArgs, opts ...pulumi.ResourceOption) (*SpannerDatabaseIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Database == nil {
		return nil, errors.New("invalid value for required argument 'Database'")
	}
	if args.Instance == nil {
		return nil, errors.New("invalid value for required argument 'Instance'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SpannerDatabaseIamMember
	err = ctx.RegisterPackageResource("google:index/spannerDatabaseIamMember:SpannerDatabaseIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSpannerDatabaseIamMember gets an existing SpannerDatabaseIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSpannerDatabaseIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SpannerDatabaseIamMemberState, opts ...pulumi.ResourceOption) (*SpannerDatabaseIamMember, error) {
	var resource SpannerDatabaseIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/spannerDatabaseIamMember:SpannerDatabaseIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SpannerDatabaseIamMember resources.
type spannerDatabaseIamMemberState struct {
	Condition                  *SpannerDatabaseIamMemberCondition `pulumi:"condition"`
	Database                   *string                            `pulumi:"database"`
	Etag                       *string                            `pulumi:"etag"`
	Instance                   *string                            `pulumi:"instance"`
	Member                     *string                            `pulumi:"member"`
	Project                    *string                            `pulumi:"project"`
	Role                       *string                            `pulumi:"role"`
	SpannerDatabaseIamMemberId *string                            `pulumi:"spannerDatabaseIamMemberId"`
}

type SpannerDatabaseIamMemberState struct {
	Condition                  SpannerDatabaseIamMemberConditionPtrInput
	Database                   pulumi.StringPtrInput
	Etag                       pulumi.StringPtrInput
	Instance                   pulumi.StringPtrInput
	Member                     pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	Role                       pulumi.StringPtrInput
	SpannerDatabaseIamMemberId pulumi.StringPtrInput
}

func (SpannerDatabaseIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*spannerDatabaseIamMemberState)(nil)).Elem()
}

type spannerDatabaseIamMemberArgs struct {
	Condition                  *SpannerDatabaseIamMemberCondition `pulumi:"condition"`
	Database                   string                             `pulumi:"database"`
	Instance                   string                             `pulumi:"instance"`
	Member                     string                             `pulumi:"member"`
	Project                    *string                            `pulumi:"project"`
	Role                       string                             `pulumi:"role"`
	SpannerDatabaseIamMemberId *string                            `pulumi:"spannerDatabaseIamMemberId"`
}

// The set of arguments for constructing a SpannerDatabaseIamMember resource.
type SpannerDatabaseIamMemberArgs struct {
	Condition                  SpannerDatabaseIamMemberConditionPtrInput
	Database                   pulumi.StringInput
	Instance                   pulumi.StringInput
	Member                     pulumi.StringInput
	Project                    pulumi.StringPtrInput
	Role                       pulumi.StringInput
	SpannerDatabaseIamMemberId pulumi.StringPtrInput
}

func (SpannerDatabaseIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*spannerDatabaseIamMemberArgs)(nil)).Elem()
}

type SpannerDatabaseIamMemberInput interface {
	pulumi.Input

	ToSpannerDatabaseIamMemberOutput() SpannerDatabaseIamMemberOutput
	ToSpannerDatabaseIamMemberOutputWithContext(ctx context.Context) SpannerDatabaseIamMemberOutput
}

func (*SpannerDatabaseIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**SpannerDatabaseIamMember)(nil)).Elem()
}

func (i *SpannerDatabaseIamMember) ToSpannerDatabaseIamMemberOutput() SpannerDatabaseIamMemberOutput {
	return i.ToSpannerDatabaseIamMemberOutputWithContext(context.Background())
}

func (i *SpannerDatabaseIamMember) ToSpannerDatabaseIamMemberOutputWithContext(ctx context.Context) SpannerDatabaseIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpannerDatabaseIamMemberOutput)
}

type SpannerDatabaseIamMemberOutput struct{ *pulumi.OutputState }

func (SpannerDatabaseIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpannerDatabaseIamMember)(nil)).Elem()
}

func (o SpannerDatabaseIamMemberOutput) ToSpannerDatabaseIamMemberOutput() SpannerDatabaseIamMemberOutput {
	return o
}

func (o SpannerDatabaseIamMemberOutput) ToSpannerDatabaseIamMemberOutputWithContext(ctx context.Context) SpannerDatabaseIamMemberOutput {
	return o
}

func (o SpannerDatabaseIamMemberOutput) Condition() SpannerDatabaseIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *SpannerDatabaseIamMember) SpannerDatabaseIamMemberConditionPtrOutput { return v.Condition }).(SpannerDatabaseIamMemberConditionPtrOutput)
}

func (o SpannerDatabaseIamMemberOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerDatabaseIamMember) pulumi.StringOutput { return v.Database }).(pulumi.StringOutput)
}

func (o SpannerDatabaseIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerDatabaseIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o SpannerDatabaseIamMemberOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerDatabaseIamMember) pulumi.StringOutput { return v.Instance }).(pulumi.StringOutput)
}

func (o SpannerDatabaseIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerDatabaseIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o SpannerDatabaseIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerDatabaseIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o SpannerDatabaseIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerDatabaseIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o SpannerDatabaseIamMemberOutput) SpannerDatabaseIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *SpannerDatabaseIamMember) pulumi.StringOutput { return v.SpannerDatabaseIamMemberId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SpannerDatabaseIamMemberInput)(nil)).Elem(), &SpannerDatabaseIamMember{})
	pulumi.RegisterOutputType(SpannerDatabaseIamMemberOutput{})
}
