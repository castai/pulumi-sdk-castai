// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeHubFleet struct {
	pulumi.CustomResourceState

	// The time the fleet was created, in RFC3339 text format.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The default cluster configurations to apply across the fleet.
	DefaultClusterConfig GkeHubFleetDefaultClusterConfigPtrOutput `pulumi:"defaultClusterConfig"`
	// The time the fleet was deleted, in RFC3339 text format.
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are:
	// lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
	DisplayName   pulumi.StringPtrOutput `pulumi:"displayName"`
	GkeHubFleetId pulumi.StringOutput    `pulumi:"gkeHubFleetId"`
	Project       pulumi.StringOutput    `pulumi:"project"`
	// The state of the fleet resource.
	States   GkeHubFleetStateTypeArrayOutput `pulumi:"states"`
	Timeouts GkeHubFleetTimeoutsPtrOutput    `pulumi:"timeouts"`
	// Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and
	// another resource with the same name is created, it gets a different uid.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time the fleet was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewGkeHubFleet registers a new resource with the given unique name, arguments, and options.
func NewGkeHubFleet(ctx *pulumi.Context,
	name string, args *GkeHubFleetArgs, opts ...pulumi.ResourceOption) (*GkeHubFleet, error) {
	if args == nil {
		args = &GkeHubFleetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeHubFleet
	err = ctx.RegisterPackageResource("google:index/gkeHubFleet:GkeHubFleet", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeHubFleet gets an existing GkeHubFleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeHubFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeHubFleetState, opts ...pulumi.ResourceOption) (*GkeHubFleet, error) {
	var resource GkeHubFleet
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/gkeHubFleet:GkeHubFleet", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeHubFleet resources.
type gkeHubFleetState struct {
	// The time the fleet was created, in RFC3339 text format.
	CreateTime *string `pulumi:"createTime"`
	// The default cluster configurations to apply across the fleet.
	DefaultClusterConfig *GkeHubFleetDefaultClusterConfig `pulumi:"defaultClusterConfig"`
	// The time the fleet was deleted, in RFC3339 text format.
	DeleteTime *string `pulumi:"deleteTime"`
	// A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are:
	// lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
	DisplayName   *string `pulumi:"displayName"`
	GkeHubFleetId *string `pulumi:"gkeHubFleetId"`
	Project       *string `pulumi:"project"`
	// The state of the fleet resource.
	States   []GkeHubFleetStateType `pulumi:"states"`
	Timeouts *GkeHubFleetTimeouts   `pulumi:"timeouts"`
	// Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and
	// another resource with the same name is created, it gets a different uid.
	Uid *string `pulumi:"uid"`
	// The time the fleet was last updated, in RFC3339 text format.
	UpdateTime *string `pulumi:"updateTime"`
}

type GkeHubFleetState struct {
	// The time the fleet was created, in RFC3339 text format.
	CreateTime pulumi.StringPtrInput
	// The default cluster configurations to apply across the fleet.
	DefaultClusterConfig GkeHubFleetDefaultClusterConfigPtrInput
	// The time the fleet was deleted, in RFC3339 text format.
	DeleteTime pulumi.StringPtrInput
	// A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are:
	// lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
	DisplayName   pulumi.StringPtrInput
	GkeHubFleetId pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	// The state of the fleet resource.
	States   GkeHubFleetStateTypeArrayInput
	Timeouts GkeHubFleetTimeoutsPtrInput
	// Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and
	// another resource with the same name is created, it gets a different uid.
	Uid pulumi.StringPtrInput
	// The time the fleet was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringPtrInput
}

func (GkeHubFleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubFleetState)(nil)).Elem()
}

type gkeHubFleetArgs struct {
	// The default cluster configurations to apply across the fleet.
	DefaultClusterConfig *GkeHubFleetDefaultClusterConfig `pulumi:"defaultClusterConfig"`
	// A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are:
	// lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
	DisplayName   *string              `pulumi:"displayName"`
	GkeHubFleetId *string              `pulumi:"gkeHubFleetId"`
	Project       *string              `pulumi:"project"`
	Timeouts      *GkeHubFleetTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a GkeHubFleet resource.
type GkeHubFleetArgs struct {
	// The default cluster configurations to apply across the fleet.
	DefaultClusterConfig GkeHubFleetDefaultClusterConfigPtrInput
	// A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are:
	// lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
	DisplayName   pulumi.StringPtrInput
	GkeHubFleetId pulumi.StringPtrInput
	Project       pulumi.StringPtrInput
	Timeouts      GkeHubFleetTimeoutsPtrInput
}

func (GkeHubFleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeHubFleetArgs)(nil)).Elem()
}

type GkeHubFleetInput interface {
	pulumi.Input

	ToGkeHubFleetOutput() GkeHubFleetOutput
	ToGkeHubFleetOutputWithContext(ctx context.Context) GkeHubFleetOutput
}

func (*GkeHubFleet) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubFleet)(nil)).Elem()
}

func (i *GkeHubFleet) ToGkeHubFleetOutput() GkeHubFleetOutput {
	return i.ToGkeHubFleetOutputWithContext(context.Background())
}

func (i *GkeHubFleet) ToGkeHubFleetOutputWithContext(ctx context.Context) GkeHubFleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeHubFleetOutput)
}

type GkeHubFleetOutput struct{ *pulumi.OutputState }

func (GkeHubFleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeHubFleet)(nil)).Elem()
}

func (o GkeHubFleetOutput) ToGkeHubFleetOutput() GkeHubFleetOutput {
	return o
}

func (o GkeHubFleetOutput) ToGkeHubFleetOutputWithContext(ctx context.Context) GkeHubFleetOutput {
	return o
}

// The time the fleet was created, in RFC3339 text format.
func (o GkeHubFleetOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFleet) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The default cluster configurations to apply across the fleet.
func (o GkeHubFleetOutput) DefaultClusterConfig() GkeHubFleetDefaultClusterConfigPtrOutput {
	return o.ApplyT(func(v *GkeHubFleet) GkeHubFleetDefaultClusterConfigPtrOutput { return v.DefaultClusterConfig }).(GkeHubFleetDefaultClusterConfigPtrOutput)
}

// The time the fleet was deleted, in RFC3339 text format.
func (o GkeHubFleetOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFleet) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters. Allowed characters are:
// lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
func (o GkeHubFleetOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeHubFleet) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GkeHubFleetOutput) GkeHubFleetId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFleet) pulumi.StringOutput { return v.GkeHubFleetId }).(pulumi.StringOutput)
}

func (o GkeHubFleetOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFleet) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The state of the fleet resource.
func (o GkeHubFleetOutput) States() GkeHubFleetStateTypeArrayOutput {
	return o.ApplyT(func(v *GkeHubFleet) GkeHubFleetStateTypeArrayOutput { return v.States }).(GkeHubFleetStateTypeArrayOutput)
}

func (o GkeHubFleetOutput) Timeouts() GkeHubFleetTimeoutsPtrOutput {
	return o.ApplyT(func(v *GkeHubFleet) GkeHubFleetTimeoutsPtrOutput { return v.Timeouts }).(GkeHubFleetTimeoutsPtrOutput)
}

// Google-generated UUID for this resource. This is unique across all Fleet resources. If a Fleet resource is deleted and
// another resource with the same name is created, it gets a different uid.
func (o GkeHubFleetOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFleet) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time the fleet was last updated, in RFC3339 text format.
func (o GkeHubFleetOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeHubFleet) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeHubFleetInput)(nil)).Elem(), &GkeHubFleet{})
	pulumi.RegisterOutputType(GkeHubFleetOutput{})
}
