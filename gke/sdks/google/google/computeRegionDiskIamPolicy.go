// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRegionDiskIamPolicy struct {
	pulumi.CustomResourceState

	ComputeRegionDiskIamPolicyId pulumi.StringOutput `pulumi:"computeRegionDiskIamPolicyId"`
	Etag                         pulumi.StringOutput `pulumi:"etag"`
	Name                         pulumi.StringOutput `pulumi:"name"`
	PolicyData                   pulumi.StringOutput `pulumi:"policyData"`
	Project                      pulumi.StringOutput `pulumi:"project"`
	Region                       pulumi.StringOutput `pulumi:"region"`
}

// NewComputeRegionDiskIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewComputeRegionDiskIamPolicy(ctx *pulumi.Context,
	name string, args *ComputeRegionDiskIamPolicyArgs, opts ...pulumi.ResourceOption) (*ComputeRegionDiskIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRegionDiskIamPolicy
	err = ctx.RegisterPackageResource("google:index/computeRegionDiskIamPolicy:ComputeRegionDiskIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRegionDiskIamPolicy gets an existing ComputeRegionDiskIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRegionDiskIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRegionDiskIamPolicyState, opts ...pulumi.ResourceOption) (*ComputeRegionDiskIamPolicy, error) {
	var resource ComputeRegionDiskIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeRegionDiskIamPolicy:ComputeRegionDiskIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRegionDiskIamPolicy resources.
type computeRegionDiskIamPolicyState struct {
	ComputeRegionDiskIamPolicyId *string `pulumi:"computeRegionDiskIamPolicyId"`
	Etag                         *string `pulumi:"etag"`
	Name                         *string `pulumi:"name"`
	PolicyData                   *string `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
	Region                       *string `pulumi:"region"`
}

type ComputeRegionDiskIamPolicyState struct {
	ComputeRegionDiskIamPolicyId pulumi.StringPtrInput
	Etag                         pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	PolicyData                   pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
}

func (ComputeRegionDiskIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionDiskIamPolicyState)(nil)).Elem()
}

type computeRegionDiskIamPolicyArgs struct {
	ComputeRegionDiskIamPolicyId *string `pulumi:"computeRegionDiskIamPolicyId"`
	Name                         *string `pulumi:"name"`
	PolicyData                   string  `pulumi:"policyData"`
	Project                      *string `pulumi:"project"`
	Region                       *string `pulumi:"region"`
}

// The set of arguments for constructing a ComputeRegionDiskIamPolicy resource.
type ComputeRegionDiskIamPolicyArgs struct {
	ComputeRegionDiskIamPolicyId pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	PolicyData                   pulumi.StringInput
	Project                      pulumi.StringPtrInput
	Region                       pulumi.StringPtrInput
}

func (ComputeRegionDiskIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRegionDiskIamPolicyArgs)(nil)).Elem()
}

type ComputeRegionDiskIamPolicyInput interface {
	pulumi.Input

	ToComputeRegionDiskIamPolicyOutput() ComputeRegionDiskIamPolicyOutput
	ToComputeRegionDiskIamPolicyOutputWithContext(ctx context.Context) ComputeRegionDiskIamPolicyOutput
}

func (*ComputeRegionDiskIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionDiskIamPolicy)(nil)).Elem()
}

func (i *ComputeRegionDiskIamPolicy) ToComputeRegionDiskIamPolicyOutput() ComputeRegionDiskIamPolicyOutput {
	return i.ToComputeRegionDiskIamPolicyOutputWithContext(context.Background())
}

func (i *ComputeRegionDiskIamPolicy) ToComputeRegionDiskIamPolicyOutputWithContext(ctx context.Context) ComputeRegionDiskIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRegionDiskIamPolicyOutput)
}

type ComputeRegionDiskIamPolicyOutput struct{ *pulumi.OutputState }

func (ComputeRegionDiskIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRegionDiskIamPolicy)(nil)).Elem()
}

func (o ComputeRegionDiskIamPolicyOutput) ToComputeRegionDiskIamPolicyOutput() ComputeRegionDiskIamPolicyOutput {
	return o
}

func (o ComputeRegionDiskIamPolicyOutput) ToComputeRegionDiskIamPolicyOutputWithContext(ctx context.Context) ComputeRegionDiskIamPolicyOutput {
	return o
}

func (o ComputeRegionDiskIamPolicyOutput) ComputeRegionDiskIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamPolicy) pulumi.StringOutput { return v.ComputeRegionDiskIamPolicyId }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeRegionDiskIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRegionDiskIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRegionDiskIamPolicyInput)(nil)).Elem(), &ComputeRegionDiskIamPolicy{})
	pulumi.RegisterOutputType(ComputeRegionDiskIamPolicyOutput{})
}
