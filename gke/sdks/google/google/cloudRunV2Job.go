// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudRunV2Job struct {
	pulumi.CustomResourceState

	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected on new
	// resources. All system annotations in v1 now have a corresponding field in v2 Job. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Settings for the Binary Authorization feature.
	BinaryAuthorization CloudRunV2JobBinaryAuthorizationPtrOutput `pulumi:"binaryAuthorization"`
	// Arbitrary identifier for the API client.
	Client pulumi.StringPtrOutput `pulumi:"client"`
	// Arbitrary version identifier for the API client.
	ClientVersion   pulumi.StringPtrOutput `pulumi:"clientVersion"`
	CloudRunV2JobId pulumi.StringOutput    `pulumi:"cloudRunV2JobId"`
	// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job
	// does not reach its desired state. See comments in reconciling for additional information on 'reconciliation' process in
	// Cloud Run.
	Conditions CloudRunV2JobConditionArrayOutput `pulumi:"conditions"`
	// The creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Email address of the authenticated creator.
	Creator pulumi.StringOutput `pulumi:"creator"`
	// The deletion time.
	DeleteTime           pulumi.StringOutput    `pulumi:"deleteTime"`
	DeletionProtection   pulumi.BoolPtrOutput   `pulumi:"deletionProtection"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	EffectiveLabels      pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during
	// updates.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// Number of executions created for this job.
	ExecutionCount pulumi.Float64Output `pulumi:"executionCount"`
	// For a deleted resource, the time after which it will be permanently deleted.
	ExpireTime pulumi.StringOutput `pulumi:"expireTime"`
	// A number that monotonically increases every time the user modifies the desired state.
	Generation pulumi.StringOutput `pulumi:"generation"`
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Job. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Email address of the last authenticated modifier.
	LastModifier pulumi.StringOutput `pulumi:"lastModifier"`
	// Name of the last created execution.
	LatestCreatedExecutions CloudRunV2JobLatestCreatedExecutionArrayOutput `pulumi:"latestCreatedExecutions"`
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage pulumi.StringOutput `pulumi:"launchStage"`
	// The location of the cloud run job
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the Job.
	Name pulumi.StringOutput `pulumi:"name"`
	// The generation of this Job. See comments in reconciling for additional information on reconciliation process in Cloud
	// Run.
	ObservedGeneration pulumi.StringOutput `pulumi:"observedGeneration"`
	Project            pulumi.StringOutput `pulumi:"project"`
	// Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job
	// is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to
	// the desired state. This process is called reconciliation. While reconciliation is in process, observedGeneration and
	// latest_succeeded_execution, will have transient values that might mismatch the intended state: Once reconciliation is
	// over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job,
	// or there was an error, and reconciliation failed. This state can be found in terminalCondition.state. If reconciliation
	// succeeded, the following fields will match: observedGeneration and generation, latest_succeeded_execution and
	// latestCreatedExecution. If reconciliation failed, observedGeneration and latest_succeeded_execution will have the state
	// of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in
	// terminalCondition and conditions
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// The template used to create executions for this Job.
	Template CloudRunV2JobTemplateOutput `pulumi:"template"`
	// The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the
	// desired state
	TerminalConditions CloudRunV2JobTerminalConditionArrayOutput `pulumi:"terminalConditions"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput         `pulumi:"terraformLabels"`
	Timeouts        CloudRunV2JobTimeoutsPtrOutput `pulumi:"timeouts"`
	// Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged
	// until the resource is deleted.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The last-modified time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCloudRunV2Job registers a new resource with the given unique name, arguments, and options.
func NewCloudRunV2Job(ctx *pulumi.Context,
	name string, args *CloudRunV2JobArgs, opts ...pulumi.ResourceOption) (*CloudRunV2Job, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Template == nil {
		return nil, errors.New("invalid value for required argument 'Template'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudRunV2Job
	err = ctx.RegisterPackageResource("google:index/cloudRunV2Job:CloudRunV2Job", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudRunV2Job gets an existing CloudRunV2Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudRunV2Job(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudRunV2JobState, opts ...pulumi.ResourceOption) (*CloudRunV2Job, error) {
	var resource CloudRunV2Job
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudRunV2Job:CloudRunV2Job", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudRunV2Job resources.
type cloudRunV2JobState struct {
	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected on new
	// resources. All system annotations in v1 now have a corresponding field in v2 Job. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Settings for the Binary Authorization feature.
	BinaryAuthorization *CloudRunV2JobBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Arbitrary identifier for the API client.
	Client *string `pulumi:"client"`
	// Arbitrary version identifier for the API client.
	ClientVersion   *string `pulumi:"clientVersion"`
	CloudRunV2JobId *string `pulumi:"cloudRunV2JobId"`
	// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job
	// does not reach its desired state. See comments in reconciling for additional information on 'reconciliation' process in
	// Cloud Run.
	Conditions []CloudRunV2JobCondition `pulumi:"conditions"`
	// The creation time.
	CreateTime *string `pulumi:"createTime"`
	// Email address of the authenticated creator.
	Creator *string `pulumi:"creator"`
	// The deletion time.
	DeleteTime           *string           `pulumi:"deleteTime"`
	DeletionProtection   *bool             `pulumi:"deletionProtection"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	EffectiveLabels      map[string]string `pulumi:"effectiveLabels"`
	// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during
	// updates.
	Etag *string `pulumi:"etag"`
	// Number of executions created for this job.
	ExecutionCount *float64 `pulumi:"executionCount"`
	// For a deleted resource, the time after which it will be permanently deleted.
	ExpireTime *string `pulumi:"expireTime"`
	// A number that monotonically increases every time the user modifies the desired state.
	Generation *string `pulumi:"generation"`
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Job. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Email address of the last authenticated modifier.
	LastModifier *string `pulumi:"lastModifier"`
	// Name of the last created execution.
	LatestCreatedExecutions []CloudRunV2JobLatestCreatedExecution `pulumi:"latestCreatedExecutions"`
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage *string `pulumi:"launchStage"`
	// The location of the cloud run job
	Location *string `pulumi:"location"`
	// Name of the Job.
	Name *string `pulumi:"name"`
	// The generation of this Job. See comments in reconciling for additional information on reconciliation process in Cloud
	// Run.
	ObservedGeneration *string `pulumi:"observedGeneration"`
	Project            *string `pulumi:"project"`
	// Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job
	// is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to
	// the desired state. This process is called reconciliation. While reconciliation is in process, observedGeneration and
	// latest_succeeded_execution, will have transient values that might mismatch the intended state: Once reconciliation is
	// over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job,
	// or there was an error, and reconciliation failed. This state can be found in terminalCondition.state. If reconciliation
	// succeeded, the following fields will match: observedGeneration and generation, latest_succeeded_execution and
	// latestCreatedExecution. If reconciliation failed, observedGeneration and latest_succeeded_execution will have the state
	// of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in
	// terminalCondition and conditions
	Reconciling *bool `pulumi:"reconciling"`
	// The template used to create executions for this Job.
	Template *CloudRunV2JobTemplate `pulumi:"template"`
	// The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the
	// desired state
	TerminalConditions []CloudRunV2JobTerminalCondition `pulumi:"terminalConditions"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string      `pulumi:"terraformLabels"`
	Timeouts        *CloudRunV2JobTimeouts `pulumi:"timeouts"`
	// Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged
	// until the resource is deleted.
	Uid *string `pulumi:"uid"`
	// The last-modified time.
	UpdateTime *string `pulumi:"updateTime"`
}

type CloudRunV2JobState struct {
	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected on new
	// resources. All system annotations in v1 now have a corresponding field in v2 Job. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations pulumi.StringMapInput
	// Settings for the Binary Authorization feature.
	BinaryAuthorization CloudRunV2JobBinaryAuthorizationPtrInput
	// Arbitrary identifier for the API client.
	Client pulumi.StringPtrInput
	// Arbitrary version identifier for the API client.
	ClientVersion   pulumi.StringPtrInput
	CloudRunV2JobId pulumi.StringPtrInput
	// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job
	// does not reach its desired state. See comments in reconciling for additional information on 'reconciliation' process in
	// Cloud Run.
	Conditions CloudRunV2JobConditionArrayInput
	// The creation time.
	CreateTime pulumi.StringPtrInput
	// Email address of the authenticated creator.
	Creator pulumi.StringPtrInput
	// The deletion time.
	DeleteTime           pulumi.StringPtrInput
	DeletionProtection   pulumi.BoolPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	EffectiveLabels      pulumi.StringMapInput
	// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during
	// updates.
	Etag pulumi.StringPtrInput
	// Number of executions created for this job.
	ExecutionCount pulumi.Float64PtrInput
	// For a deleted resource, the time after which it will be permanently deleted.
	ExpireTime pulumi.StringPtrInput
	// A number that monotonically increases every time the user modifies the desired state.
	Generation pulumi.StringPtrInput
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Job. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Email address of the last authenticated modifier.
	LastModifier pulumi.StringPtrInput
	// Name of the last created execution.
	LatestCreatedExecutions CloudRunV2JobLatestCreatedExecutionArrayInput
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage pulumi.StringPtrInput
	// The location of the cloud run job
	Location pulumi.StringPtrInput
	// Name of the Job.
	Name pulumi.StringPtrInput
	// The generation of this Job. See comments in reconciling for additional information on reconciliation process in Cloud
	// Run.
	ObservedGeneration pulumi.StringPtrInput
	Project            pulumi.StringPtrInput
	// Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job
	// is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to
	// the desired state. This process is called reconciliation. While reconciliation is in process, observedGeneration and
	// latest_succeeded_execution, will have transient values that might mismatch the intended state: Once reconciliation is
	// over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job,
	// or there was an error, and reconciliation failed. This state can be found in terminalCondition.state. If reconciliation
	// succeeded, the following fields will match: observedGeneration and generation, latest_succeeded_execution and
	// latestCreatedExecution. If reconciliation failed, observedGeneration and latest_succeeded_execution will have the state
	// of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in
	// terminalCondition and conditions
	Reconciling pulumi.BoolPtrInput
	// The template used to create executions for this Job.
	Template CloudRunV2JobTemplatePtrInput
	// The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the
	// desired state
	TerminalConditions CloudRunV2JobTerminalConditionArrayInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        CloudRunV2JobTimeoutsPtrInput
	// Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged
	// until the resource is deleted.
	Uid pulumi.StringPtrInput
	// The last-modified time.
	UpdateTime pulumi.StringPtrInput
}

func (CloudRunV2JobState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunV2JobState)(nil)).Elem()
}

type cloudRunV2JobArgs struct {
	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected on new
	// resources. All system annotations in v1 now have a corresponding field in v2 Job. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Settings for the Binary Authorization feature.
	BinaryAuthorization *CloudRunV2JobBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Arbitrary identifier for the API client.
	Client *string `pulumi:"client"`
	// Arbitrary version identifier for the API client.
	ClientVersion      *string `pulumi:"clientVersion"`
	CloudRunV2JobId    *string `pulumi:"cloudRunV2JobId"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Job. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage *string `pulumi:"launchStage"`
	// The location of the cloud run job
	Location string `pulumi:"location"`
	// Name of the Job.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The template used to create executions for this Job.
	Template CloudRunV2JobTemplate  `pulumi:"template"`
	Timeouts *CloudRunV2JobTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudRunV2Job resource.
type CloudRunV2JobArgs struct {
	// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
	// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
	// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected on new
	// resources. All system annotations in v1 now have a corresponding field in v2 Job. This field follows Kubernetes
	// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
	// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
	// present on the resource.
	Annotations pulumi.StringMapInput
	// Settings for the Binary Authorization feature.
	BinaryAuthorization CloudRunV2JobBinaryAuthorizationPtrInput
	// Arbitrary identifier for the API client.
	Client pulumi.StringPtrInput
	// Arbitrary version identifier for the API client.
	ClientVersion      pulumi.StringPtrInput
	CloudRunV2JobId    pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
	// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
	// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
	// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
	// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
	// will be rejected. All system labels in v1 now have a corresponding field in v2 Job. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The launch stage as defined by [Google Cloud Platform Launch
	// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
	// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
	// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
	// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
	// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
	LaunchStage pulumi.StringPtrInput
	// The location of the cloud run job
	Location pulumi.StringInput
	// Name of the Job.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The template used to create executions for this Job.
	Template CloudRunV2JobTemplateInput
	Timeouts CloudRunV2JobTimeoutsPtrInput
}

func (CloudRunV2JobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunV2JobArgs)(nil)).Elem()
}

type CloudRunV2JobInput interface {
	pulumi.Input

	ToCloudRunV2JobOutput() CloudRunV2JobOutput
	ToCloudRunV2JobOutputWithContext(ctx context.Context) CloudRunV2JobOutput
}

func (*CloudRunV2Job) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunV2Job)(nil)).Elem()
}

func (i *CloudRunV2Job) ToCloudRunV2JobOutput() CloudRunV2JobOutput {
	return i.ToCloudRunV2JobOutputWithContext(context.Background())
}

func (i *CloudRunV2Job) ToCloudRunV2JobOutputWithContext(ctx context.Context) CloudRunV2JobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudRunV2JobOutput)
}

type CloudRunV2JobOutput struct{ *pulumi.OutputState }

func (CloudRunV2JobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunV2Job)(nil)).Elem()
}

func (o CloudRunV2JobOutput) ToCloudRunV2JobOutput() CloudRunV2JobOutput {
	return o
}

func (o CloudRunV2JobOutput) ToCloudRunV2JobOutputWithContext(ctx context.Context) CloudRunV2JobOutput {
	return o
}

// Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and
// should be preserved when modifying objects. Cloud Run API v2 does not support annotations with 'run.googleapis.com',
// 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they will be rejected on new
// resources. All system annotations in v1 now have a corresponding field in v2 Job. This field follows Kubernetes
// annotations' namespacing, limits, and rules. **Note**: This field is non-authoritative, and will only manage the
// annotations present in your configuration. Please refer to the field 'effective_annotations' for all of the annotations
// present on the resource.
func (o CloudRunV2JobOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Settings for the Binary Authorization feature.
func (o CloudRunV2JobOutput) BinaryAuthorization() CloudRunV2JobBinaryAuthorizationPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Job) CloudRunV2JobBinaryAuthorizationPtrOutput { return v.BinaryAuthorization }).(CloudRunV2JobBinaryAuthorizationPtrOutput)
}

// Arbitrary identifier for the API client.
func (o CloudRunV2JobOutput) Client() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringPtrOutput { return v.Client }).(pulumi.StringPtrOutput)
}

// Arbitrary version identifier for the API client.
func (o CloudRunV2JobOutput) ClientVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringPtrOutput { return v.ClientVersion }).(pulumi.StringPtrOutput)
}

func (o CloudRunV2JobOutput) CloudRunV2JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.CloudRunV2JobId }).(pulumi.StringOutput)
}

// The Conditions of all other associated sub-resources. They contain additional diagnostics information in case the Job
// does not reach its desired state. See comments in reconciling for additional information on 'reconciliation' process in
// Cloud Run.
func (o CloudRunV2JobOutput) Conditions() CloudRunV2JobConditionArrayOutput {
	return o.ApplyT(func(v *CloudRunV2Job) CloudRunV2JobConditionArrayOutput { return v.Conditions }).(CloudRunV2JobConditionArrayOutput)
}

// The creation time.
func (o CloudRunV2JobOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Email address of the authenticated creator.
func (o CloudRunV2JobOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.Creator }).(pulumi.StringOutput)
}

// The deletion time.
func (o CloudRunV2JobOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

func (o CloudRunV2JobOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

func (o CloudRunV2JobOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o CloudRunV2JobOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during
// updates.
func (o CloudRunV2JobOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// Number of executions created for this job.
func (o CloudRunV2JobOutput) ExecutionCount() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.Float64Output { return v.ExecutionCount }).(pulumi.Float64Output)
}

// For a deleted resource, the time after which it will be permanently deleted.
func (o CloudRunV2JobOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.ExpireTime }).(pulumi.StringOutput)
}

// A number that monotonically increases every time the user modifies the desired state.
func (o CloudRunV2JobOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.Generation }).(pulumi.StringOutput)
}

// Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with
// Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment,
// state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or
// https://cloud.google.com/run/docs/configuring/labels. Cloud Run API v2 does not support labels with
// 'run.googleapis.com', 'cloud.googleapis.com', 'serving.knative.dev', or 'autoscaling.knative.dev' namespaces, and they
// will be rejected. All system labels in v1 now have a corresponding field in v2 Job. **Note**: This field is
// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o CloudRunV2JobOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Email address of the last authenticated modifier.
func (o CloudRunV2JobOutput) LastModifier() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.LastModifier }).(pulumi.StringOutput)
}

// Name of the last created execution.
func (o CloudRunV2JobOutput) LatestCreatedExecutions() CloudRunV2JobLatestCreatedExecutionArrayOutput {
	return o.ApplyT(func(v *CloudRunV2Job) CloudRunV2JobLatestCreatedExecutionArrayOutput {
		return v.LatestCreatedExecutions
	}).(CloudRunV2JobLatestCreatedExecutionArrayOutput)
}

// The launch stage as defined by [Google Cloud Platform Launch
// Stages](https://cloud.google.com/products#product-launch-stages). Cloud Run supports ALPHA, BETA, and GA. If no value is
// specified, GA is assumed. Set the launch stage to a preview stage on input to allow use of preview features in that
// stage. On read (or output), describes whether the resource uses preview features. For example, if ALPHA is provided as
// input, but only BETA and GA-level features are used, this field will be BETA on output. Possible values:
// ["UNIMPLEMENTED", "PRELAUNCH", "EARLY_ACCESS", "ALPHA", "BETA", "GA", "DEPRECATED"]
func (o CloudRunV2JobOutput) LaunchStage() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.LaunchStage }).(pulumi.StringOutput)
}

// The location of the cloud run job
func (o CloudRunV2JobOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the Job.
func (o CloudRunV2JobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The generation of this Job. See comments in reconciling for additional information on reconciliation process in Cloud
// Run.
func (o CloudRunV2JobOutput) ObservedGeneration() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.ObservedGeneration }).(pulumi.StringOutput)
}

func (o CloudRunV2JobOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Returns true if the Job is currently being acted upon by the system to bring it into the desired state. When a new Job
// is created, or an existing one is updated, Cloud Run will asynchronously perform all necessary steps to bring the Job to
// the desired state. This process is called reconciliation. While reconciliation is in process, observedGeneration and
// latest_succeeded_execution, will have transient values that might mismatch the intended state: Once reconciliation is
// over (and this field is false), there are two possible outcomes: reconciliation succeeded and the state matches the Job,
// or there was an error, and reconciliation failed. This state can be found in terminalCondition.state. If reconciliation
// succeeded, the following fields will match: observedGeneration and generation, latest_succeeded_execution and
// latestCreatedExecution. If reconciliation failed, observedGeneration and latest_succeeded_execution will have the state
// of the last succeeded execution or empty for newly created Job. Additional information on the failure can be found in
// terminalCondition and conditions
func (o CloudRunV2JobOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// The template used to create executions for this Job.
func (o CloudRunV2JobOutput) Template() CloudRunV2JobTemplateOutput {
	return o.ApplyT(func(v *CloudRunV2Job) CloudRunV2JobTemplateOutput { return v.Template }).(CloudRunV2JobTemplateOutput)
}

// The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the
// desired state
func (o CloudRunV2JobOutput) TerminalConditions() CloudRunV2JobTerminalConditionArrayOutput {
	return o.ApplyT(func(v *CloudRunV2Job) CloudRunV2JobTerminalConditionArrayOutput { return v.TerminalConditions }).(CloudRunV2JobTerminalConditionArrayOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o CloudRunV2JobOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o CloudRunV2JobOutput) Timeouts() CloudRunV2JobTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudRunV2Job) CloudRunV2JobTimeoutsPtrOutput { return v.Timeouts }).(CloudRunV2JobTimeoutsPtrOutput)
}

// Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged
// until the resource is deleted.
func (o CloudRunV2JobOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The last-modified time.
func (o CloudRunV2JobOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunV2Job) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudRunV2JobInput)(nil)).Elem(), &CloudRunV2Job{})
	pulumi.RegisterOutputType(CloudRunV2JobOutput{})
}
