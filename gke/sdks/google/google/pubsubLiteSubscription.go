// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PubsubLiteSubscription struct {
	pulumi.CustomResourceState

	// The settings for this subscription's message delivery.
	DeliveryConfig PubsubLiteSubscriptionDeliveryConfigPtrOutput `pulumi:"deliveryConfig"`
	// Name of the subscription.
	Name                     pulumi.StringOutput `pulumi:"name"`
	Project                  pulumi.StringOutput `pulumi:"project"`
	PubsubLiteSubscriptionId pulumi.StringOutput `pulumi:"pubsubLiteSubscriptionId"`
	// The region of the pubsub lite topic.
	Region   pulumi.StringPtrOutput                  `pulumi:"region"`
	Timeouts PubsubLiteSubscriptionTimeoutsPtrOutput `pulumi:"timeouts"`
	// A reference to a Topic resource.
	Topic pulumi.StringOutput `pulumi:"topic"`
	// The zone of the pubsub lite topic.
	Zone pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewPubsubLiteSubscription registers a new resource with the given unique name, arguments, and options.
func NewPubsubLiteSubscription(ctx *pulumi.Context,
	name string, args *PubsubLiteSubscriptionArgs, opts ...pulumi.ResourceOption) (*PubsubLiteSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Topic == nil {
		return nil, errors.New("invalid value for required argument 'Topic'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource PubsubLiteSubscription
	err = ctx.RegisterPackageResource("google:index/pubsubLiteSubscription:PubsubLiteSubscription", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPubsubLiteSubscription gets an existing PubsubLiteSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPubsubLiteSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PubsubLiteSubscriptionState, opts ...pulumi.ResourceOption) (*PubsubLiteSubscription, error) {
	var resource PubsubLiteSubscription
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/pubsubLiteSubscription:PubsubLiteSubscription", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PubsubLiteSubscription resources.
type pubsubLiteSubscriptionState struct {
	// The settings for this subscription's message delivery.
	DeliveryConfig *PubsubLiteSubscriptionDeliveryConfig `pulumi:"deliveryConfig"`
	// Name of the subscription.
	Name                     *string `pulumi:"name"`
	Project                  *string `pulumi:"project"`
	PubsubLiteSubscriptionId *string `pulumi:"pubsubLiteSubscriptionId"`
	// The region of the pubsub lite topic.
	Region   *string                         `pulumi:"region"`
	Timeouts *PubsubLiteSubscriptionTimeouts `pulumi:"timeouts"`
	// A reference to a Topic resource.
	Topic *string `pulumi:"topic"`
	// The zone of the pubsub lite topic.
	Zone *string `pulumi:"zone"`
}

type PubsubLiteSubscriptionState struct {
	// The settings for this subscription's message delivery.
	DeliveryConfig PubsubLiteSubscriptionDeliveryConfigPtrInput
	// Name of the subscription.
	Name                     pulumi.StringPtrInput
	Project                  pulumi.StringPtrInput
	PubsubLiteSubscriptionId pulumi.StringPtrInput
	// The region of the pubsub lite topic.
	Region   pulumi.StringPtrInput
	Timeouts PubsubLiteSubscriptionTimeoutsPtrInput
	// A reference to a Topic resource.
	Topic pulumi.StringPtrInput
	// The zone of the pubsub lite topic.
	Zone pulumi.StringPtrInput
}

func (PubsubLiteSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubLiteSubscriptionState)(nil)).Elem()
}

type pubsubLiteSubscriptionArgs struct {
	// The settings for this subscription's message delivery.
	DeliveryConfig *PubsubLiteSubscriptionDeliveryConfig `pulumi:"deliveryConfig"`
	// Name of the subscription.
	Name                     *string `pulumi:"name"`
	Project                  *string `pulumi:"project"`
	PubsubLiteSubscriptionId *string `pulumi:"pubsubLiteSubscriptionId"`
	// The region of the pubsub lite topic.
	Region   *string                         `pulumi:"region"`
	Timeouts *PubsubLiteSubscriptionTimeouts `pulumi:"timeouts"`
	// A reference to a Topic resource.
	Topic string `pulumi:"topic"`
	// The zone of the pubsub lite topic.
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a PubsubLiteSubscription resource.
type PubsubLiteSubscriptionArgs struct {
	// The settings for this subscription's message delivery.
	DeliveryConfig PubsubLiteSubscriptionDeliveryConfigPtrInput
	// Name of the subscription.
	Name                     pulumi.StringPtrInput
	Project                  pulumi.StringPtrInput
	PubsubLiteSubscriptionId pulumi.StringPtrInput
	// The region of the pubsub lite topic.
	Region   pulumi.StringPtrInput
	Timeouts PubsubLiteSubscriptionTimeoutsPtrInput
	// A reference to a Topic resource.
	Topic pulumi.StringInput
	// The zone of the pubsub lite topic.
	Zone pulumi.StringPtrInput
}

func (PubsubLiteSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubLiteSubscriptionArgs)(nil)).Elem()
}

type PubsubLiteSubscriptionInput interface {
	pulumi.Input

	ToPubsubLiteSubscriptionOutput() PubsubLiteSubscriptionOutput
	ToPubsubLiteSubscriptionOutputWithContext(ctx context.Context) PubsubLiteSubscriptionOutput
}

func (*PubsubLiteSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubLiteSubscription)(nil)).Elem()
}

func (i *PubsubLiteSubscription) ToPubsubLiteSubscriptionOutput() PubsubLiteSubscriptionOutput {
	return i.ToPubsubLiteSubscriptionOutputWithContext(context.Background())
}

func (i *PubsubLiteSubscription) ToPubsubLiteSubscriptionOutputWithContext(ctx context.Context) PubsubLiteSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PubsubLiteSubscriptionOutput)
}

type PubsubLiteSubscriptionOutput struct{ *pulumi.OutputState }

func (PubsubLiteSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubLiteSubscription)(nil)).Elem()
}

func (o PubsubLiteSubscriptionOutput) ToPubsubLiteSubscriptionOutput() PubsubLiteSubscriptionOutput {
	return o
}

func (o PubsubLiteSubscriptionOutput) ToPubsubLiteSubscriptionOutputWithContext(ctx context.Context) PubsubLiteSubscriptionOutput {
	return o
}

// The settings for this subscription's message delivery.
func (o PubsubLiteSubscriptionOutput) DeliveryConfig() PubsubLiteSubscriptionDeliveryConfigPtrOutput {
	return o.ApplyT(func(v *PubsubLiteSubscription) PubsubLiteSubscriptionDeliveryConfigPtrOutput { return v.DeliveryConfig }).(PubsubLiteSubscriptionDeliveryConfigPtrOutput)
}

// Name of the subscription.
func (o PubsubLiteSubscriptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubLiteSubscription) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PubsubLiteSubscriptionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubLiteSubscription) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o PubsubLiteSubscriptionOutput) PubsubLiteSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubLiteSubscription) pulumi.StringOutput { return v.PubsubLiteSubscriptionId }).(pulumi.StringOutput)
}

// The region of the pubsub lite topic.
func (o PubsubLiteSubscriptionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PubsubLiteSubscription) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

func (o PubsubLiteSubscriptionOutput) Timeouts() PubsubLiteSubscriptionTimeoutsPtrOutput {
	return o.ApplyT(func(v *PubsubLiteSubscription) PubsubLiteSubscriptionTimeoutsPtrOutput { return v.Timeouts }).(PubsubLiteSubscriptionTimeoutsPtrOutput)
}

// A reference to a Topic resource.
func (o PubsubLiteSubscriptionOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubLiteSubscription) pulumi.StringOutput { return v.Topic }).(pulumi.StringOutput)
}

// The zone of the pubsub lite topic.
func (o PubsubLiteSubscriptionOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PubsubLiteSubscription) pulumi.StringPtrOutput { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PubsubLiteSubscriptionInput)(nil)).Elem(), &PubsubLiteSubscription{})
	pulumi.RegisterOutputType(PubsubLiteSubscriptionOutput{})
}
