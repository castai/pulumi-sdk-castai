// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupKmsCryptoKey(ctx *pulumi.Context, args *LookupKmsCryptoKeyArgs, opts ...pulumi.InvokeOption) (*LookupKmsCryptoKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupKmsCryptoKeyResult
	err = ctx.InvokePackage("google:index/getKmsCryptoKey:getKmsCryptoKey", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKmsCryptoKey.
type LookupKmsCryptoKeyArgs struct {
	Id      *string `pulumi:"id"`
	KeyRing string  `pulumi:"keyRing"`
	Name    string  `pulumi:"name"`
}

// A collection of values returned by getKmsCryptoKey.
type LookupKmsCryptoKeyResult struct {
	CryptoKeyBackend           string                           `pulumi:"cryptoKeyBackend"`
	DestroyScheduledDuration   string                           `pulumi:"destroyScheduledDuration"`
	EffectiveLabels            map[string]string                `pulumi:"effectiveLabels"`
	Id                         string                           `pulumi:"id"`
	ImportOnly                 bool                             `pulumi:"importOnly"`
	KeyRing                    string                           `pulumi:"keyRing"`
	Labels                     map[string]string                `pulumi:"labels"`
	Name                       string                           `pulumi:"name"`
	Primaries                  []GetKmsCryptoKeyPrimary         `pulumi:"primaries"`
	Purpose                    string                           `pulumi:"purpose"`
	RotationPeriod             string                           `pulumi:"rotationPeriod"`
	SkipInitialVersionCreation bool                             `pulumi:"skipInitialVersionCreation"`
	TerraformLabels            map[string]string                `pulumi:"terraformLabels"`
	VersionTemplates           []GetKmsCryptoKeyVersionTemplate `pulumi:"versionTemplates"`
}

func LookupKmsCryptoKeyOutput(ctx *pulumi.Context, args LookupKmsCryptoKeyOutputArgs, opts ...pulumi.InvokeOption) LookupKmsCryptoKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKmsCryptoKeyResultOutput, error) {
			args := v.(LookupKmsCryptoKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupKmsCryptoKeyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getKmsCryptoKey:getKmsCryptoKey", args, LookupKmsCryptoKeyResultOutput{}, options).(LookupKmsCryptoKeyResultOutput), nil
		}).(LookupKmsCryptoKeyResultOutput)
}

// A collection of arguments for invoking getKmsCryptoKey.
type LookupKmsCryptoKeyOutputArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	KeyRing pulumi.StringInput    `pulumi:"keyRing"`
	Name    pulumi.StringInput    `pulumi:"name"`
}

func (LookupKmsCryptoKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKmsCryptoKeyArgs)(nil)).Elem()
}

// A collection of values returned by getKmsCryptoKey.
type LookupKmsCryptoKeyResultOutput struct{ *pulumi.OutputState }

func (LookupKmsCryptoKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKmsCryptoKeyResult)(nil)).Elem()
}

func (o LookupKmsCryptoKeyResultOutput) ToLookupKmsCryptoKeyResultOutput() LookupKmsCryptoKeyResultOutput {
	return o
}

func (o LookupKmsCryptoKeyResultOutput) ToLookupKmsCryptoKeyResultOutputWithContext(ctx context.Context) LookupKmsCryptoKeyResultOutput {
	return o
}

func (o LookupKmsCryptoKeyResultOutput) CryptoKeyBackend() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) string { return v.CryptoKeyBackend }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyResultOutput) DestroyScheduledDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) string { return v.DestroyScheduledDuration }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupKmsCryptoKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyResultOutput) ImportOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) bool { return v.ImportOnly }).(pulumi.BoolOutput)
}

func (o LookupKmsCryptoKeyResultOutput) KeyRing() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) string { return v.KeyRing }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupKmsCryptoKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyResultOutput) Primaries() GetKmsCryptoKeyPrimaryArrayOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) []GetKmsCryptoKeyPrimary { return v.Primaries }).(GetKmsCryptoKeyPrimaryArrayOutput)
}

func (o LookupKmsCryptoKeyResultOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) string { return v.Purpose }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyResultOutput) RotationPeriod() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) string { return v.RotationPeriod }).(pulumi.StringOutput)
}

func (o LookupKmsCryptoKeyResultOutput) SkipInitialVersionCreation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) bool { return v.SkipInitialVersionCreation }).(pulumi.BoolOutput)
}

func (o LookupKmsCryptoKeyResultOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) map[string]string { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o LookupKmsCryptoKeyResultOutput) VersionTemplates() GetKmsCryptoKeyVersionTemplateArrayOutput {
	return o.ApplyT(func(v LookupKmsCryptoKeyResult) []GetKmsCryptoKeyVersionTemplate { return v.VersionTemplates }).(GetKmsCryptoKeyVersionTemplateArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKmsCryptoKeyResultOutput{})
}
