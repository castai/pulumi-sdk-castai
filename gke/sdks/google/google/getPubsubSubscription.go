// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPubsubSubscription(ctx *pulumi.Context, args *LookupPubsubSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupPubsubSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupPubsubSubscriptionResult
	err = ctx.InvokePackage("google:index/getPubsubSubscription:getPubsubSubscription", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPubsubSubscription.
type LookupPubsubSubscriptionArgs struct {
	Id      *string `pulumi:"id"`
	Name    string  `pulumi:"name"`
	Project *string `pulumi:"project"`
}

// A collection of values returned by getPubsubSubscription.
type LookupPubsubSubscriptionResult struct {
	AckDeadlineSeconds        float64                                   `pulumi:"ackDeadlineSeconds"`
	BigqueryConfigs           []GetPubsubSubscriptionBigqueryConfig     `pulumi:"bigqueryConfigs"`
	CloudStorageConfigs       []GetPubsubSubscriptionCloudStorageConfig `pulumi:"cloudStorageConfigs"`
	DeadLetterPolicies        []GetPubsubSubscriptionDeadLetterPolicy   `pulumi:"deadLetterPolicies"`
	EffectiveLabels           map[string]string                         `pulumi:"effectiveLabels"`
	EnableExactlyOnceDelivery bool                                      `pulumi:"enableExactlyOnceDelivery"`
	EnableMessageOrdering     bool                                      `pulumi:"enableMessageOrdering"`
	ExpirationPolicies        []GetPubsubSubscriptionExpirationPolicy   `pulumi:"expirationPolicies"`
	Filter                    string                                    `pulumi:"filter"`
	Id                        string                                    `pulumi:"id"`
	Labels                    map[string]string                         `pulumi:"labels"`
	MessageRetentionDuration  string                                    `pulumi:"messageRetentionDuration"`
	Name                      string                                    `pulumi:"name"`
	Project                   *string                                   `pulumi:"project"`
	PushConfigs               []GetPubsubSubscriptionPushConfig         `pulumi:"pushConfigs"`
	RetainAckedMessages       bool                                      `pulumi:"retainAckedMessages"`
	RetryPolicies             []GetPubsubSubscriptionRetryPolicy        `pulumi:"retryPolicies"`
	TerraformLabels           map[string]string                         `pulumi:"terraformLabels"`
	Topic                     string                                    `pulumi:"topic"`
}

func LookupPubsubSubscriptionOutput(ctx *pulumi.Context, args LookupPubsubSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupPubsubSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPubsubSubscriptionResultOutput, error) {
			args := v.(LookupPubsubSubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupPubsubSubscriptionResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getPubsubSubscription:getPubsubSubscription", args, LookupPubsubSubscriptionResultOutput{}, options).(LookupPubsubSubscriptionResultOutput), nil
		}).(LookupPubsubSubscriptionResultOutput)
}

// A collection of arguments for invoking getPubsubSubscription.
type LookupPubsubSubscriptionOutputArgs struct {
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Name    pulumi.StringInput    `pulumi:"name"`
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupPubsubSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPubsubSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getPubsubSubscription.
type LookupPubsubSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupPubsubSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPubsubSubscriptionResult)(nil)).Elem()
}

func (o LookupPubsubSubscriptionResultOutput) ToLookupPubsubSubscriptionResultOutput() LookupPubsubSubscriptionResultOutput {
	return o
}

func (o LookupPubsubSubscriptionResultOutput) ToLookupPubsubSubscriptionResultOutputWithContext(ctx context.Context) LookupPubsubSubscriptionResultOutput {
	return o
}

func (o LookupPubsubSubscriptionResultOutput) AckDeadlineSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) float64 { return v.AckDeadlineSeconds }).(pulumi.Float64Output)
}

func (o LookupPubsubSubscriptionResultOutput) BigqueryConfigs() GetPubsubSubscriptionBigqueryConfigArrayOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) []GetPubsubSubscriptionBigqueryConfig { return v.BigqueryConfigs }).(GetPubsubSubscriptionBigqueryConfigArrayOutput)
}

func (o LookupPubsubSubscriptionResultOutput) CloudStorageConfigs() GetPubsubSubscriptionCloudStorageConfigArrayOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) []GetPubsubSubscriptionCloudStorageConfig {
		return v.CloudStorageConfigs
	}).(GetPubsubSubscriptionCloudStorageConfigArrayOutput)
}

func (o LookupPubsubSubscriptionResultOutput) DeadLetterPolicies() GetPubsubSubscriptionDeadLetterPolicyArrayOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) []GetPubsubSubscriptionDeadLetterPolicy {
		return v.DeadLetterPolicies
	}).(GetPubsubSubscriptionDeadLetterPolicyArrayOutput)
}

func (o LookupPubsubSubscriptionResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupPubsubSubscriptionResultOutput) EnableExactlyOnceDelivery() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) bool { return v.EnableExactlyOnceDelivery }).(pulumi.BoolOutput)
}

func (o LookupPubsubSubscriptionResultOutput) EnableMessageOrdering() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) bool { return v.EnableMessageOrdering }).(pulumi.BoolOutput)
}

func (o LookupPubsubSubscriptionResultOutput) ExpirationPolicies() GetPubsubSubscriptionExpirationPolicyArrayOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) []GetPubsubSubscriptionExpirationPolicy {
		return v.ExpirationPolicies
	}).(GetPubsubSubscriptionExpirationPolicyArrayOutput)
}

func (o LookupPubsubSubscriptionResultOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) string { return v.Filter }).(pulumi.StringOutput)
}

func (o LookupPubsubSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPubsubSubscriptionResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupPubsubSubscriptionResultOutput) MessageRetentionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) string { return v.MessageRetentionDuration }).(pulumi.StringOutput)
}

func (o LookupPubsubSubscriptionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPubsubSubscriptionResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupPubsubSubscriptionResultOutput) PushConfigs() GetPubsubSubscriptionPushConfigArrayOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) []GetPubsubSubscriptionPushConfig { return v.PushConfigs }).(GetPubsubSubscriptionPushConfigArrayOutput)
}

func (o LookupPubsubSubscriptionResultOutput) RetainAckedMessages() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) bool { return v.RetainAckedMessages }).(pulumi.BoolOutput)
}

func (o LookupPubsubSubscriptionResultOutput) RetryPolicies() GetPubsubSubscriptionRetryPolicyArrayOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) []GetPubsubSubscriptionRetryPolicy { return v.RetryPolicies }).(GetPubsubSubscriptionRetryPolicyArrayOutput)
}

func (o LookupPubsubSubscriptionResultOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) map[string]string { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o LookupPubsubSubscriptionResultOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPubsubSubscriptionResult) string { return v.Topic }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPubsubSubscriptionResultOutput{})
}
