// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkConnectivityPolicyBasedRoute struct {
	pulumi.CustomResourceState

	// Time when the policy-based route was created.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// An optional description of this resource.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The filter to match L4 traffic.
	Filter NetworkConnectivityPolicyBasedRouteFilterOutput `pulumi:"filter"`
	// The interconnect attachments that this policy-based route applies to.
	InterconnectAttachment NetworkConnectivityPolicyBasedRouteInterconnectAttachmentPtrOutput `pulumi:"interconnectAttachment"`
	// Type of this resource.
	Kind pulumi.StringOutput `pulumi:"kind"`
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of the policy based route.
	Name pulumi.StringOutput `pulumi:"name"`
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                               pulumi.StringOutput `pulumi:"network"`
	NetworkConnectivityPolicyBasedRouteId pulumi.StringOutput `pulumi:"networkConnectivityPolicyBasedRouteId"`
	// The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
	NextHopIlbIp pulumi.StringPtrOutput `pulumi:"nextHopIlbIp"`
	// Other routes that will be referenced to determine the next hop of the packet. Possible values: ["DEFAULT_ROUTING"]
	NextHopOtherRoutes pulumi.StringPtrOutput `pulumi:"nextHopOtherRoutes"`
	// The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching
	// policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered
	// priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
	Priority pulumi.Float64PtrOutput `pulumi:"priority"`
	Project  pulumi.StringOutput     `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                               `pulumi:"terraformLabels"`
	Timeouts        NetworkConnectivityPolicyBasedRouteTimeoutsPtrOutput `pulumi:"timeouts"`
	// Time when the policy-based route was created.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// VM instances to which this policy-based route applies to.
	VirtualMachine NetworkConnectivityPolicyBasedRouteVirtualMachinePtrOutput `pulumi:"virtualMachine"`
	// If potential misconfigurations are detected for this route, this field will be populated with warning messages.
	Warnings NetworkConnectivityPolicyBasedRouteWarningArrayOutput `pulumi:"warnings"`
}

// NewNetworkConnectivityPolicyBasedRoute registers a new resource with the given unique name, arguments, and options.
func NewNetworkConnectivityPolicyBasedRoute(ctx *pulumi.Context,
	name string, args *NetworkConnectivityPolicyBasedRouteArgs, opts ...pulumi.ResourceOption) (*NetworkConnectivityPolicyBasedRoute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Filter == nil {
		return nil, errors.New("invalid value for required argument 'Filter'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NetworkConnectivityPolicyBasedRoute
	err = ctx.RegisterPackageResource("google:index/networkConnectivityPolicyBasedRoute:NetworkConnectivityPolicyBasedRoute", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkConnectivityPolicyBasedRoute gets an existing NetworkConnectivityPolicyBasedRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkConnectivityPolicyBasedRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkConnectivityPolicyBasedRouteState, opts ...pulumi.ResourceOption) (*NetworkConnectivityPolicyBasedRoute, error) {
	var resource NetworkConnectivityPolicyBasedRoute
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/networkConnectivityPolicyBasedRoute:NetworkConnectivityPolicyBasedRoute", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkConnectivityPolicyBasedRoute resources.
type networkConnectivityPolicyBasedRouteState struct {
	// Time when the policy-based route was created.
	CreateTime *string `pulumi:"createTime"`
	// An optional description of this resource.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The filter to match L4 traffic.
	Filter *NetworkConnectivityPolicyBasedRouteFilter `pulumi:"filter"`
	// The interconnect attachments that this policy-based route applies to.
	InterconnectAttachment *NetworkConnectivityPolicyBasedRouteInterconnectAttachment `pulumi:"interconnectAttachment"`
	// Type of this resource.
	Kind *string `pulumi:"kind"`
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the policy based route.
	Name *string `pulumi:"name"`
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                               *string `pulumi:"network"`
	NetworkConnectivityPolicyBasedRouteId *string `pulumi:"networkConnectivityPolicyBasedRouteId"`
	// The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
	NextHopIlbIp *string `pulumi:"nextHopIlbIp"`
	// Other routes that will be referenced to determine the next hop of the packet. Possible values: ["DEFAULT_ROUTING"]
	NextHopOtherRoutes *string `pulumi:"nextHopOtherRoutes"`
	// The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching
	// policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered
	// priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
	Priority *float64 `pulumi:"priority"`
	Project  *string  `pulumi:"project"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                            `pulumi:"terraformLabels"`
	Timeouts        *NetworkConnectivityPolicyBasedRouteTimeouts `pulumi:"timeouts"`
	// Time when the policy-based route was created.
	UpdateTime *string `pulumi:"updateTime"`
	// VM instances to which this policy-based route applies to.
	VirtualMachine *NetworkConnectivityPolicyBasedRouteVirtualMachine `pulumi:"virtualMachine"`
	// If potential misconfigurations are detected for this route, this field will be populated with warning messages.
	Warnings []NetworkConnectivityPolicyBasedRouteWarning `pulumi:"warnings"`
}

type NetworkConnectivityPolicyBasedRouteState struct {
	// Time when the policy-based route was created.
	CreateTime pulumi.StringPtrInput
	// An optional description of this resource.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The filter to match L4 traffic.
	Filter NetworkConnectivityPolicyBasedRouteFilterPtrInput
	// The interconnect attachments that this policy-based route applies to.
	InterconnectAttachment NetworkConnectivityPolicyBasedRouteInterconnectAttachmentPtrInput
	// Type of this resource.
	Kind pulumi.StringPtrInput
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of the policy based route.
	Name pulumi.StringPtrInput
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                               pulumi.StringPtrInput
	NetworkConnectivityPolicyBasedRouteId pulumi.StringPtrInput
	// The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
	NextHopIlbIp pulumi.StringPtrInput
	// Other routes that will be referenced to determine the next hop of the packet. Possible values: ["DEFAULT_ROUTING"]
	NextHopOtherRoutes pulumi.StringPtrInput
	// The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching
	// policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered
	// priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
	Priority pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        NetworkConnectivityPolicyBasedRouteTimeoutsPtrInput
	// Time when the policy-based route was created.
	UpdateTime pulumi.StringPtrInput
	// VM instances to which this policy-based route applies to.
	VirtualMachine NetworkConnectivityPolicyBasedRouteVirtualMachinePtrInput
	// If potential misconfigurations are detected for this route, this field will be populated with warning messages.
	Warnings NetworkConnectivityPolicyBasedRouteWarningArrayInput
}

func (NetworkConnectivityPolicyBasedRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectivityPolicyBasedRouteState)(nil)).Elem()
}

type networkConnectivityPolicyBasedRouteArgs struct {
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// The filter to match L4 traffic.
	Filter NetworkConnectivityPolicyBasedRouteFilter `pulumi:"filter"`
	// The interconnect attachments that this policy-based route applies to.
	InterconnectAttachment *NetworkConnectivityPolicyBasedRouteInterconnectAttachment `pulumi:"interconnectAttachment"`
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the policy based route.
	Name *string `pulumi:"name"`
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                               string  `pulumi:"network"`
	NetworkConnectivityPolicyBasedRouteId *string `pulumi:"networkConnectivityPolicyBasedRouteId"`
	// The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
	NextHopIlbIp *string `pulumi:"nextHopIlbIp"`
	// Other routes that will be referenced to determine the next hop of the packet. Possible values: ["DEFAULT_ROUTING"]
	NextHopOtherRoutes *string `pulumi:"nextHopOtherRoutes"`
	// The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching
	// policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered
	// priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
	Priority *float64                                     `pulumi:"priority"`
	Project  *string                                      `pulumi:"project"`
	Timeouts *NetworkConnectivityPolicyBasedRouteTimeouts `pulumi:"timeouts"`
	// VM instances to which this policy-based route applies to.
	VirtualMachine *NetworkConnectivityPolicyBasedRouteVirtualMachine `pulumi:"virtualMachine"`
}

// The set of arguments for constructing a NetworkConnectivityPolicyBasedRoute resource.
type NetworkConnectivityPolicyBasedRouteArgs struct {
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// The filter to match L4 traffic.
	Filter NetworkConnectivityPolicyBasedRouteFilterInput
	// The interconnect attachments that this policy-based route applies to.
	InterconnectAttachment NetworkConnectivityPolicyBasedRouteInterconnectAttachmentPtrInput
	// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
	// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of the policy based route.
	Name pulumi.StringPtrInput
	// Fully-qualified URL of the network that this route applies to, for example:
	// projects/my-project/global/networks/my-network.
	Network                               pulumi.StringInput
	NetworkConnectivityPolicyBasedRouteId pulumi.StringPtrInput
	// The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
	NextHopIlbIp pulumi.StringPtrInput
	// Other routes that will be referenced to determine the next hop of the packet. Possible values: ["DEFAULT_ROUTING"]
	NextHopOtherRoutes pulumi.StringPtrInput
	// The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching
	// policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered
	// priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
	Priority pulumi.Float64PtrInput
	Project  pulumi.StringPtrInput
	Timeouts NetworkConnectivityPolicyBasedRouteTimeoutsPtrInput
	// VM instances to which this policy-based route applies to.
	VirtualMachine NetworkConnectivityPolicyBasedRouteVirtualMachinePtrInput
}

func (NetworkConnectivityPolicyBasedRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkConnectivityPolicyBasedRouteArgs)(nil)).Elem()
}

type NetworkConnectivityPolicyBasedRouteInput interface {
	pulumi.Input

	ToNetworkConnectivityPolicyBasedRouteOutput() NetworkConnectivityPolicyBasedRouteOutput
	ToNetworkConnectivityPolicyBasedRouteOutputWithContext(ctx context.Context) NetworkConnectivityPolicyBasedRouteOutput
}

func (*NetworkConnectivityPolicyBasedRoute) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectivityPolicyBasedRoute)(nil)).Elem()
}

func (i *NetworkConnectivityPolicyBasedRoute) ToNetworkConnectivityPolicyBasedRouteOutput() NetworkConnectivityPolicyBasedRouteOutput {
	return i.ToNetworkConnectivityPolicyBasedRouteOutputWithContext(context.Background())
}

func (i *NetworkConnectivityPolicyBasedRoute) ToNetworkConnectivityPolicyBasedRouteOutputWithContext(ctx context.Context) NetworkConnectivityPolicyBasedRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkConnectivityPolicyBasedRouteOutput)
}

type NetworkConnectivityPolicyBasedRouteOutput struct{ *pulumi.OutputState }

func (NetworkConnectivityPolicyBasedRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkConnectivityPolicyBasedRoute)(nil)).Elem()
}

func (o NetworkConnectivityPolicyBasedRouteOutput) ToNetworkConnectivityPolicyBasedRouteOutput() NetworkConnectivityPolicyBasedRouteOutput {
	return o
}

func (o NetworkConnectivityPolicyBasedRouteOutput) ToNetworkConnectivityPolicyBasedRouteOutputWithContext(ctx context.Context) NetworkConnectivityPolicyBasedRouteOutput {
	return o
}

// Time when the policy-based route was created.
func (o NetworkConnectivityPolicyBasedRouteOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// An optional description of this resource.
func (o NetworkConnectivityPolicyBasedRouteOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkConnectivityPolicyBasedRouteOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The filter to match L4 traffic.
func (o NetworkConnectivityPolicyBasedRouteOutput) Filter() NetworkConnectivityPolicyBasedRouteFilterOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) NetworkConnectivityPolicyBasedRouteFilterOutput {
		return v.Filter
	}).(NetworkConnectivityPolicyBasedRouteFilterOutput)
}

// The interconnect attachments that this policy-based route applies to.
func (o NetworkConnectivityPolicyBasedRouteOutput) InterconnectAttachment() NetworkConnectivityPolicyBasedRouteInterconnectAttachmentPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) NetworkConnectivityPolicyBasedRouteInterconnectAttachmentPtrOutput {
		return v.InterconnectAttachment
	}).(NetworkConnectivityPolicyBasedRouteInterconnectAttachmentPtrOutput)
}

// Type of this resource.
func (o NetworkConnectivityPolicyBasedRouteOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// User-defined labels. **Note**: This field is non-authoritative, and will only manage the labels present in your
// configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o NetworkConnectivityPolicyBasedRouteOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the policy based route.
func (o NetworkConnectivityPolicyBasedRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Fully-qualified URL of the network that this route applies to, for example:
// projects/my-project/global/networks/my-network.
func (o NetworkConnectivityPolicyBasedRouteOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o NetworkConnectivityPolicyBasedRouteOutput) NetworkConnectivityPolicyBasedRouteId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringOutput {
		return v.NetworkConnectivityPolicyBasedRouteId
	}).(pulumi.StringOutput)
}

// The IP address of a global-access-enabled L4 ILB that is the next hop for matching packets.
func (o NetworkConnectivityPolicyBasedRouteOutput) NextHopIlbIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringPtrOutput { return v.NextHopIlbIp }).(pulumi.StringPtrOutput)
}

// Other routes that will be referenced to determine the next hop of the packet. Possible values: ["DEFAULT_ROUTING"]
func (o NetworkConnectivityPolicyBasedRouteOutput) NextHopOtherRoutes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringPtrOutput { return v.NextHopOtherRoutes }).(pulumi.StringPtrOutput)
}

// The priority of this policy-based route. Priority is used to break ties in cases where there are more than one matching
// policy-based routes found. In cases where multiple policy-based routes are matched, the one with the lowest-numbered
// priority value wins. The default value is 1000. The priority value must be from 1 to 65535, inclusive.
func (o NetworkConnectivityPolicyBasedRouteOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.Float64PtrOutput { return v.Priority }).(pulumi.Float64PtrOutput)
}

func (o NetworkConnectivityPolicyBasedRouteOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o NetworkConnectivityPolicyBasedRouteOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o NetworkConnectivityPolicyBasedRouteOutput) Timeouts() NetworkConnectivityPolicyBasedRouteTimeoutsPtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) NetworkConnectivityPolicyBasedRouteTimeoutsPtrOutput {
		return v.Timeouts
	}).(NetworkConnectivityPolicyBasedRouteTimeoutsPtrOutput)
}

// Time when the policy-based route was created.
func (o NetworkConnectivityPolicyBasedRouteOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// VM instances to which this policy-based route applies to.
func (o NetworkConnectivityPolicyBasedRouteOutput) VirtualMachine() NetworkConnectivityPolicyBasedRouteVirtualMachinePtrOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) NetworkConnectivityPolicyBasedRouteVirtualMachinePtrOutput {
		return v.VirtualMachine
	}).(NetworkConnectivityPolicyBasedRouteVirtualMachinePtrOutput)
}

// If potential misconfigurations are detected for this route, this field will be populated with warning messages.
func (o NetworkConnectivityPolicyBasedRouteOutput) Warnings() NetworkConnectivityPolicyBasedRouteWarningArrayOutput {
	return o.ApplyT(func(v *NetworkConnectivityPolicyBasedRoute) NetworkConnectivityPolicyBasedRouteWarningArrayOutput {
		return v.Warnings
	}).(NetworkConnectivityPolicyBasedRouteWarningArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkConnectivityPolicyBasedRouteInput)(nil)).Elem(), &NetworkConnectivityPolicyBasedRoute{})
	pulumi.RegisterOutputType(NetworkConnectivityPolicyBasedRouteOutput{})
}
