// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApigeeInstance struct {
	pulumi.CustomResourceState

	ApigeeInstanceId pulumi.StringOutput `pulumi:"apigeeInstanceId"`
	// Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect
	// to the service attachment. It is an optional field which the customers can provide during the instance creation. By
	// default, the customer project associated with the Apigee organization will be included to the list.
	ConsumerAcceptLists pulumi.StringArrayOutput `pulumi:"consumerAcceptLists"`
	// Description of the instance.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
	// Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
	DiskEncryptionKeyName pulumi.StringPtrOutput `pulumi:"diskEncryptionKeyName"`
	// Display name of the instance.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service.
	Host pulumi.StringOutput `pulumi:"host"`
	// IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation.
	// This optional range, if provided, should be freely available as part of larger named range the customer has allocated to
	// the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR
	// block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow
	// traffic from Apigee. Input format: "a.b.c.d/22"
	IpRange pulumi.StringPtrOutput `pulumi:"ipRange"`
	// Required. Compute Engine location where the instance resides.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource ID of the instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
	OrgId pulumi.StringOutput `pulumi:"orgId"`
	// The size of the CIDR block range that will be reserved by the instance. For valid values, see
	// [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the
	// documentation.
	PeeringCidrRange pulumi.StringOutput `pulumi:"peeringCidrRange"`
	// Output only. Port number of the exposed Apigee endpoint.
	Port pulumi.StringOutput `pulumi:"port"`
	// Output only. Resource name of the service attachment created for the instance in the format:
	// projects/*/regions/*/serviceAttachments/* Apigee customers can privately forward traffic to this service attachment
	// using the PSC endpoints.
	ServiceAttachment pulumi.StringOutput             `pulumi:"serviceAttachment"`
	Timeouts          ApigeeInstanceTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewApigeeInstance registers a new resource with the given unique name, arguments, and options.
func NewApigeeInstance(ctx *pulumi.Context,
	name string, args *ApigeeInstanceArgs, opts ...pulumi.ResourceOption) (*ApigeeInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.OrgId == nil {
		return nil, errors.New("invalid value for required argument 'OrgId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ApigeeInstance
	err = ctx.RegisterPackageResource("google:index/apigeeInstance:ApigeeInstance", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApigeeInstance gets an existing ApigeeInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApigeeInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApigeeInstanceState, opts ...pulumi.ResourceOption) (*ApigeeInstance, error) {
	var resource ApigeeInstance
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/apigeeInstance:ApigeeInstance", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApigeeInstance resources.
type apigeeInstanceState struct {
	ApigeeInstanceId *string `pulumi:"apigeeInstanceId"`
	// Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect
	// to the service attachment. It is an optional field which the customers can provide during the instance creation. By
	// default, the customer project associated with the Apigee organization will be included to the list.
	ConsumerAcceptLists []string `pulumi:"consumerAcceptLists"`
	// Description of the instance.
	Description *string `pulumi:"description"`
	// Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
	// Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
	DiskEncryptionKeyName *string `pulumi:"diskEncryptionKeyName"`
	// Display name of the instance.
	DisplayName *string `pulumi:"displayName"`
	// Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service.
	Host *string `pulumi:"host"`
	// IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation.
	// This optional range, if provided, should be freely available as part of larger named range the customer has allocated to
	// the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR
	// block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow
	// traffic from Apigee. Input format: "a.b.c.d/22"
	IpRange *string `pulumi:"ipRange"`
	// Required. Compute Engine location where the instance resides.
	Location *string `pulumi:"location"`
	// Resource ID of the instance.
	Name *string `pulumi:"name"`
	// The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
	OrgId *string `pulumi:"orgId"`
	// The size of the CIDR block range that will be reserved by the instance. For valid values, see
	// [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the
	// documentation.
	PeeringCidrRange *string `pulumi:"peeringCidrRange"`
	// Output only. Port number of the exposed Apigee endpoint.
	Port *string `pulumi:"port"`
	// Output only. Resource name of the service attachment created for the instance in the format:
	// projects/*/regions/*/serviceAttachments/* Apigee customers can privately forward traffic to this service attachment
	// using the PSC endpoints.
	ServiceAttachment *string                 `pulumi:"serviceAttachment"`
	Timeouts          *ApigeeInstanceTimeouts `pulumi:"timeouts"`
}

type ApigeeInstanceState struct {
	ApigeeInstanceId pulumi.StringPtrInput
	// Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect
	// to the service attachment. It is an optional field which the customers can provide during the instance creation. By
	// default, the customer project associated with the Apigee organization will be included to the list.
	ConsumerAcceptLists pulumi.StringArrayInput
	// Description of the instance.
	Description pulumi.StringPtrInput
	// Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
	// Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
	DiskEncryptionKeyName pulumi.StringPtrInput
	// Display name of the instance.
	DisplayName pulumi.StringPtrInput
	// Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service.
	Host pulumi.StringPtrInput
	// IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation.
	// This optional range, if provided, should be freely available as part of larger named range the customer has allocated to
	// the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR
	// block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow
	// traffic from Apigee. Input format: "a.b.c.d/22"
	IpRange pulumi.StringPtrInput
	// Required. Compute Engine location where the instance resides.
	Location pulumi.StringPtrInput
	// Resource ID of the instance.
	Name pulumi.StringPtrInput
	// The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
	OrgId pulumi.StringPtrInput
	// The size of the CIDR block range that will be reserved by the instance. For valid values, see
	// [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the
	// documentation.
	PeeringCidrRange pulumi.StringPtrInput
	// Output only. Port number of the exposed Apigee endpoint.
	Port pulumi.StringPtrInput
	// Output only. Resource name of the service attachment created for the instance in the format:
	// projects/*/regions/*/serviceAttachments/* Apigee customers can privately forward traffic to this service attachment
	// using the PSC endpoints.
	ServiceAttachment pulumi.StringPtrInput
	Timeouts          ApigeeInstanceTimeoutsPtrInput
}

func (ApigeeInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*apigeeInstanceState)(nil)).Elem()
}

type apigeeInstanceArgs struct {
	ApigeeInstanceId *string `pulumi:"apigeeInstanceId"`
	// Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect
	// to the service attachment. It is an optional field which the customers can provide during the instance creation. By
	// default, the customer project associated with the Apigee organization will be included to the list.
	ConsumerAcceptLists []string `pulumi:"consumerAcceptLists"`
	// Description of the instance.
	Description *string `pulumi:"description"`
	// Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
	// Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
	DiskEncryptionKeyName *string `pulumi:"diskEncryptionKeyName"`
	// Display name of the instance.
	DisplayName *string `pulumi:"displayName"`
	// IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation.
	// This optional range, if provided, should be freely available as part of larger named range the customer has allocated to
	// the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR
	// block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow
	// traffic from Apigee. Input format: "a.b.c.d/22"
	IpRange *string `pulumi:"ipRange"`
	// Required. Compute Engine location where the instance resides.
	Location string `pulumi:"location"`
	// Resource ID of the instance.
	Name *string `pulumi:"name"`
	// The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
	OrgId string `pulumi:"orgId"`
	// The size of the CIDR block range that will be reserved by the instance. For valid values, see
	// [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the
	// documentation.
	PeeringCidrRange *string                 `pulumi:"peeringCidrRange"`
	Timeouts         *ApigeeInstanceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ApigeeInstance resource.
type ApigeeInstanceArgs struct {
	ApigeeInstanceId pulumi.StringPtrInput
	// Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect
	// to the service attachment. It is an optional field which the customers can provide during the instance creation. By
	// default, the customer project associated with the Apigee organization will be included to the list.
	ConsumerAcceptLists pulumi.StringArrayInput
	// Description of the instance.
	Description pulumi.StringPtrInput
	// Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
	// Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
	DiskEncryptionKeyName pulumi.StringPtrInput
	// Display name of the instance.
	DisplayName pulumi.StringPtrInput
	// IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation.
	// This optional range, if provided, should be freely available as part of larger named range the customer has allocated to
	// the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR
	// block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow
	// traffic from Apigee. Input format: "a.b.c.d/22"
	IpRange pulumi.StringPtrInput
	// Required. Compute Engine location where the instance resides.
	Location pulumi.StringInput
	// Resource ID of the instance.
	Name pulumi.StringPtrInput
	// The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
	OrgId pulumi.StringInput
	// The size of the CIDR block range that will be reserved by the instance. For valid values, see
	// [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the
	// documentation.
	PeeringCidrRange pulumi.StringPtrInput
	Timeouts         ApigeeInstanceTimeoutsPtrInput
}

func (ApigeeInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apigeeInstanceArgs)(nil)).Elem()
}

type ApigeeInstanceInput interface {
	pulumi.Input

	ToApigeeInstanceOutput() ApigeeInstanceOutput
	ToApigeeInstanceOutputWithContext(ctx context.Context) ApigeeInstanceOutput
}

func (*ApigeeInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigeeInstance)(nil)).Elem()
}

func (i *ApigeeInstance) ToApigeeInstanceOutput() ApigeeInstanceOutput {
	return i.ToApigeeInstanceOutputWithContext(context.Background())
}

func (i *ApigeeInstance) ToApigeeInstanceOutputWithContext(ctx context.Context) ApigeeInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApigeeInstanceOutput)
}

type ApigeeInstanceOutput struct{ *pulumi.OutputState }

func (ApigeeInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApigeeInstance)(nil)).Elem()
}

func (o ApigeeInstanceOutput) ToApigeeInstanceOutput() ApigeeInstanceOutput {
	return o
}

func (o ApigeeInstanceOutput) ToApigeeInstanceOutputWithContext(ctx context.Context) ApigeeInstanceOutput {
	return o
}

func (o ApigeeInstanceOutput) ApigeeInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringOutput { return v.ApigeeInstanceId }).(pulumi.StringOutput)
}

// Optional. Customer accept list represents the list of projects (id/number) on customer side that can privately connect
// to the service attachment. It is an optional field which the customers can provide during the instance creation. By
// default, the customer project associated with the Apigee organization will be included to the list.
func (o ApigeeInstanceOutput) ConsumerAcceptLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringArrayOutput { return v.ConsumerAcceptLists }).(pulumi.StringArrayOutput)
}

// Description of the instance.
func (o ApigeeInstanceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Customer Managed Encryption Key (CMEK) used for disk and volume encryption. Required for Apigee paid subscriptions only.
// Use the following format: 'projects/([^/]+)/locations/([^/]+)/keyRings/([^/]+)/cryptoKeys/([^/]+)'
func (o ApigeeInstanceOutput) DiskEncryptionKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringPtrOutput { return v.DiskEncryptionKeyName }).(pulumi.StringPtrOutput)
}

// Display name of the instance.
func (o ApigeeInstanceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service.
func (o ApigeeInstanceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// IP range represents the customer-provided CIDR block of length 22 that will be used for the Apigee instance creation.
// This optional range, if provided, should be freely available as part of larger named range the customer has allocated to
// the Service Networking peering. If this is not provided, Apigee will automatically request for any available /22 CIDR
// block from Service Networking. The customer should use this CIDR block for configuring their firewall needs to allow
// traffic from Apigee. Input format: "a.b.c.d/22"
func (o ApigeeInstanceOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringPtrOutput { return v.IpRange }).(pulumi.StringPtrOutput)
}

// Required. Compute Engine location where the instance resides.
func (o ApigeeInstanceOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource ID of the instance.
func (o ApigeeInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Apigee Organization associated with the Apigee instance, in the format 'organizations/{{org_name}}'.
func (o ApigeeInstanceOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringOutput { return v.OrgId }).(pulumi.StringOutput)
}

// The size of the CIDR block range that will be reserved by the instance. For valid values, see
// [CidrRange](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.instances#CidrRange) on the
// documentation.
func (o ApigeeInstanceOutput) PeeringCidrRange() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringOutput { return v.PeeringCidrRange }).(pulumi.StringOutput)
}

// Output only. Port number of the exposed Apigee endpoint.
func (o ApigeeInstanceOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

// Output only. Resource name of the service attachment created for the instance in the format:
// projects/*/regions/*/serviceAttachments/* Apigee customers can privately forward traffic to this service attachment
// using the PSC endpoints.
func (o ApigeeInstanceOutput) ServiceAttachment() pulumi.StringOutput {
	return o.ApplyT(func(v *ApigeeInstance) pulumi.StringOutput { return v.ServiceAttachment }).(pulumi.StringOutput)
}

func (o ApigeeInstanceOutput) Timeouts() ApigeeInstanceTimeoutsPtrOutput {
	return o.ApplyT(func(v *ApigeeInstance) ApigeeInstanceTimeoutsPtrOutput { return v.Timeouts }).(ApigeeInstanceTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApigeeInstanceInput)(nil)).Elem(), &ApigeeInstance{})
	pulumi.RegisterOutputType(ApigeeInstanceOutput{})
}
