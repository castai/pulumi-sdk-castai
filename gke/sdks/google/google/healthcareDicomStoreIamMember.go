// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HealthcareDicomStoreIamMember struct {
	pulumi.CustomResourceState

	Condition                       HealthcareDicomStoreIamMemberConditionPtrOutput `pulumi:"condition"`
	DicomStoreId                    pulumi.StringOutput                             `pulumi:"dicomStoreId"`
	Etag                            pulumi.StringOutput                             `pulumi:"etag"`
	HealthcareDicomStoreIamMemberId pulumi.StringOutput                             `pulumi:"healthcareDicomStoreIamMemberId"`
	Member                          pulumi.StringOutput                             `pulumi:"member"`
	Role                            pulumi.StringOutput                             `pulumi:"role"`
}

// NewHealthcareDicomStoreIamMember registers a new resource with the given unique name, arguments, and options.
func NewHealthcareDicomStoreIamMember(ctx *pulumi.Context,
	name string, args *HealthcareDicomStoreIamMemberArgs, opts ...pulumi.ResourceOption) (*HealthcareDicomStoreIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DicomStoreId == nil {
		return nil, errors.New("invalid value for required argument 'DicomStoreId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HealthcareDicomStoreIamMember
	err = ctx.RegisterPackageResource("google:index/healthcareDicomStoreIamMember:HealthcareDicomStoreIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthcareDicomStoreIamMember gets an existing HealthcareDicomStoreIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthcareDicomStoreIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthcareDicomStoreIamMemberState, opts ...pulumi.ResourceOption) (*HealthcareDicomStoreIamMember, error) {
	var resource HealthcareDicomStoreIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/healthcareDicomStoreIamMember:HealthcareDicomStoreIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthcareDicomStoreIamMember resources.
type healthcareDicomStoreIamMemberState struct {
	Condition                       *HealthcareDicomStoreIamMemberCondition `pulumi:"condition"`
	DicomStoreId                    *string                                 `pulumi:"dicomStoreId"`
	Etag                            *string                                 `pulumi:"etag"`
	HealthcareDicomStoreIamMemberId *string                                 `pulumi:"healthcareDicomStoreIamMemberId"`
	Member                          *string                                 `pulumi:"member"`
	Role                            *string                                 `pulumi:"role"`
}

type HealthcareDicomStoreIamMemberState struct {
	Condition                       HealthcareDicomStoreIamMemberConditionPtrInput
	DicomStoreId                    pulumi.StringPtrInput
	Etag                            pulumi.StringPtrInput
	HealthcareDicomStoreIamMemberId pulumi.StringPtrInput
	Member                          pulumi.StringPtrInput
	Role                            pulumi.StringPtrInput
}

func (HealthcareDicomStoreIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareDicomStoreIamMemberState)(nil)).Elem()
}

type healthcareDicomStoreIamMemberArgs struct {
	Condition                       *HealthcareDicomStoreIamMemberCondition `pulumi:"condition"`
	DicomStoreId                    string                                  `pulumi:"dicomStoreId"`
	HealthcareDicomStoreIamMemberId *string                                 `pulumi:"healthcareDicomStoreIamMemberId"`
	Member                          string                                  `pulumi:"member"`
	Role                            string                                  `pulumi:"role"`
}

// The set of arguments for constructing a HealthcareDicomStoreIamMember resource.
type HealthcareDicomStoreIamMemberArgs struct {
	Condition                       HealthcareDicomStoreIamMemberConditionPtrInput
	DicomStoreId                    pulumi.StringInput
	HealthcareDicomStoreIamMemberId pulumi.StringPtrInput
	Member                          pulumi.StringInput
	Role                            pulumi.StringInput
}

func (HealthcareDicomStoreIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareDicomStoreIamMemberArgs)(nil)).Elem()
}

type HealthcareDicomStoreIamMemberInput interface {
	pulumi.Input

	ToHealthcareDicomStoreIamMemberOutput() HealthcareDicomStoreIamMemberOutput
	ToHealthcareDicomStoreIamMemberOutputWithContext(ctx context.Context) HealthcareDicomStoreIamMemberOutput
}

func (*HealthcareDicomStoreIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareDicomStoreIamMember)(nil)).Elem()
}

func (i *HealthcareDicomStoreIamMember) ToHealthcareDicomStoreIamMemberOutput() HealthcareDicomStoreIamMemberOutput {
	return i.ToHealthcareDicomStoreIamMemberOutputWithContext(context.Background())
}

func (i *HealthcareDicomStoreIamMember) ToHealthcareDicomStoreIamMemberOutputWithContext(ctx context.Context) HealthcareDicomStoreIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcareDicomStoreIamMemberOutput)
}

type HealthcareDicomStoreIamMemberOutput struct{ *pulumi.OutputState }

func (HealthcareDicomStoreIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareDicomStoreIamMember)(nil)).Elem()
}

func (o HealthcareDicomStoreIamMemberOutput) ToHealthcareDicomStoreIamMemberOutput() HealthcareDicomStoreIamMemberOutput {
	return o
}

func (o HealthcareDicomStoreIamMemberOutput) ToHealthcareDicomStoreIamMemberOutputWithContext(ctx context.Context) HealthcareDicomStoreIamMemberOutput {
	return o
}

func (o HealthcareDicomStoreIamMemberOutput) Condition() HealthcareDicomStoreIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamMember) HealthcareDicomStoreIamMemberConditionPtrOutput {
		return v.Condition
	}).(HealthcareDicomStoreIamMemberConditionPtrOutput)
}

func (o HealthcareDicomStoreIamMemberOutput) DicomStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamMember) pulumi.StringOutput { return v.DicomStoreId }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamMemberOutput) HealthcareDicomStoreIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamMember) pulumi.StringOutput { return v.HealthcareDicomStoreIamMemberId }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o HealthcareDicomStoreIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareDicomStoreIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcareDicomStoreIamMemberInput)(nil)).Elem(), &HealthcareDicomStoreIamMember{})
	pulumi.RegisterOutputType(HealthcareDicomStoreIamMemberOutput{})
}
