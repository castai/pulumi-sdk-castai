// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DatabaseMigrationServicePrivateConnection struct {
	pulumi.CustomResourceState

	DatabaseMigrationServicePrivateConnectionId pulumi.StringOutput `pulumi:"databaseMigrationServicePrivateConnectionId"`
	// Display name.
	DisplayName     pulumi.StringOutput    `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The PrivateConnection error in case of failure.
	Errors DatabaseMigrationServicePrivateConnectionErrorArrayOutput `pulumi:"errors"`
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of the location this private connection is located in.
	Location pulumi.StringOutput `pulumi:"location"`
	// The resource's name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The private connectivity identifier.
	PrivateConnectionId pulumi.StringOutput `pulumi:"privateConnectionId"`
	Project             pulumi.StringOutput `pulumi:"project"`
	// State of the PrivateConnection.
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                                     `pulumi:"terraformLabels"`
	Timeouts        DatabaseMigrationServicePrivateConnectionTimeoutsPtrOutput `pulumi:"timeouts"`
	// The VPC Peering configuration is used to create VPC peering between databasemigrationservice and the consumer's VPC.
	VpcPeeringConfig DatabaseMigrationServicePrivateConnectionVpcPeeringConfigOutput `pulumi:"vpcPeeringConfig"`
}

// NewDatabaseMigrationServicePrivateConnection registers a new resource with the given unique name, arguments, and options.
func NewDatabaseMigrationServicePrivateConnection(ctx *pulumi.Context,
	name string, args *DatabaseMigrationServicePrivateConnectionArgs, opts ...pulumi.ResourceOption) (*DatabaseMigrationServicePrivateConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.PrivateConnectionId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateConnectionId'")
	}
	if args.VpcPeeringConfig == nil {
		return nil, errors.New("invalid value for required argument 'VpcPeeringConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DatabaseMigrationServicePrivateConnection
	err = ctx.RegisterPackageResource("google:index/databaseMigrationServicePrivateConnection:DatabaseMigrationServicePrivateConnection", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseMigrationServicePrivateConnection gets an existing DatabaseMigrationServicePrivateConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseMigrationServicePrivateConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseMigrationServicePrivateConnectionState, opts ...pulumi.ResourceOption) (*DatabaseMigrationServicePrivateConnection, error) {
	var resource DatabaseMigrationServicePrivateConnection
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/databaseMigrationServicePrivateConnection:DatabaseMigrationServicePrivateConnection", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseMigrationServicePrivateConnection resources.
type databaseMigrationServicePrivateConnectionState struct {
	DatabaseMigrationServicePrivateConnectionId *string `pulumi:"databaseMigrationServicePrivateConnectionId"`
	// Display name.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The PrivateConnection error in case of failure.
	Errors []DatabaseMigrationServicePrivateConnectionError `pulumi:"errors"`
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location this private connection is located in.
	Location *string `pulumi:"location"`
	// The resource's name.
	Name *string `pulumi:"name"`
	// The private connectivity identifier.
	PrivateConnectionId *string `pulumi:"privateConnectionId"`
	Project             *string `pulumi:"project"`
	// State of the PrivateConnection.
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string                                  `pulumi:"terraformLabels"`
	Timeouts        *DatabaseMigrationServicePrivateConnectionTimeouts `pulumi:"timeouts"`
	// The VPC Peering configuration is used to create VPC peering between databasemigrationservice and the consumer's VPC.
	VpcPeeringConfig *DatabaseMigrationServicePrivateConnectionVpcPeeringConfig `pulumi:"vpcPeeringConfig"`
}

type DatabaseMigrationServicePrivateConnectionState struct {
	DatabaseMigrationServicePrivateConnectionId pulumi.StringPtrInput
	// Display name.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// The PrivateConnection error in case of failure.
	Errors DatabaseMigrationServicePrivateConnectionErrorArrayInput
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of the location this private connection is located in.
	Location pulumi.StringPtrInput
	// The resource's name.
	Name pulumi.StringPtrInput
	// The private connectivity identifier.
	PrivateConnectionId pulumi.StringPtrInput
	Project             pulumi.StringPtrInput
	// State of the PrivateConnection.
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DatabaseMigrationServicePrivateConnectionTimeoutsPtrInput
	// The VPC Peering configuration is used to create VPC peering between databasemigrationservice and the consumer's VPC.
	VpcPeeringConfig DatabaseMigrationServicePrivateConnectionVpcPeeringConfigPtrInput
}

func (DatabaseMigrationServicePrivateConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationServicePrivateConnectionState)(nil)).Elem()
}

type databaseMigrationServicePrivateConnectionArgs struct {
	DatabaseMigrationServicePrivateConnectionId *string `pulumi:"databaseMigrationServicePrivateConnectionId"`
	// Display name.
	DisplayName *string `pulumi:"displayName"`
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The name of the location this private connection is located in.
	Location string `pulumi:"location"`
	// The private connectivity identifier.
	PrivateConnectionId string                                             `pulumi:"privateConnectionId"`
	Project             *string                                            `pulumi:"project"`
	Timeouts            *DatabaseMigrationServicePrivateConnectionTimeouts `pulumi:"timeouts"`
	// The VPC Peering configuration is used to create VPC peering between databasemigrationservice and the consumer's VPC.
	VpcPeeringConfig DatabaseMigrationServicePrivateConnectionVpcPeeringConfig `pulumi:"vpcPeeringConfig"`
}

// The set of arguments for constructing a DatabaseMigrationServicePrivateConnection resource.
type DatabaseMigrationServicePrivateConnectionArgs struct {
	DatabaseMigrationServicePrivateConnectionId pulumi.StringPtrInput
	// Display name.
	DisplayName pulumi.StringPtrInput
	// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
	// refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The name of the location this private connection is located in.
	Location pulumi.StringInput
	// The private connectivity identifier.
	PrivateConnectionId pulumi.StringInput
	Project             pulumi.StringPtrInput
	Timeouts            DatabaseMigrationServicePrivateConnectionTimeoutsPtrInput
	// The VPC Peering configuration is used to create VPC peering between databasemigrationservice and the consumer's VPC.
	VpcPeeringConfig DatabaseMigrationServicePrivateConnectionVpcPeeringConfigInput
}

func (DatabaseMigrationServicePrivateConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseMigrationServicePrivateConnectionArgs)(nil)).Elem()
}

type DatabaseMigrationServicePrivateConnectionInput interface {
	pulumi.Input

	ToDatabaseMigrationServicePrivateConnectionOutput() DatabaseMigrationServicePrivateConnectionOutput
	ToDatabaseMigrationServicePrivateConnectionOutputWithContext(ctx context.Context) DatabaseMigrationServicePrivateConnectionOutput
}

func (*DatabaseMigrationServicePrivateConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationServicePrivateConnection)(nil)).Elem()
}

func (i *DatabaseMigrationServicePrivateConnection) ToDatabaseMigrationServicePrivateConnectionOutput() DatabaseMigrationServicePrivateConnectionOutput {
	return i.ToDatabaseMigrationServicePrivateConnectionOutputWithContext(context.Background())
}

func (i *DatabaseMigrationServicePrivateConnection) ToDatabaseMigrationServicePrivateConnectionOutputWithContext(ctx context.Context) DatabaseMigrationServicePrivateConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMigrationServicePrivateConnectionOutput)
}

type DatabaseMigrationServicePrivateConnectionOutput struct{ *pulumi.OutputState }

func (DatabaseMigrationServicePrivateConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseMigrationServicePrivateConnection)(nil)).Elem()
}

func (o DatabaseMigrationServicePrivateConnectionOutput) ToDatabaseMigrationServicePrivateConnectionOutput() DatabaseMigrationServicePrivateConnectionOutput {
	return o
}

func (o DatabaseMigrationServicePrivateConnectionOutput) ToDatabaseMigrationServicePrivateConnectionOutputWithContext(ctx context.Context) DatabaseMigrationServicePrivateConnectionOutput {
	return o
}

func (o DatabaseMigrationServicePrivateConnectionOutput) DatabaseMigrationServicePrivateConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringOutput {
		return v.DatabaseMigrationServicePrivateConnectionId
	}).(pulumi.StringOutput)
}

// Display name.
func (o DatabaseMigrationServicePrivateConnectionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o DatabaseMigrationServicePrivateConnectionOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The PrivateConnection error in case of failure.
func (o DatabaseMigrationServicePrivateConnectionOutput) Errors() DatabaseMigrationServicePrivateConnectionErrorArrayOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) DatabaseMigrationServicePrivateConnectionErrorArrayOutput {
		return v.Errors
	}).(DatabaseMigrationServicePrivateConnectionErrorArrayOutput)
}

// Labels. **Note**: This field is non-authoritative, and will only manage the labels present in your configuration. Please
// refer to the field 'effective_labels' for all of the labels present on the resource.
func (o DatabaseMigrationServicePrivateConnectionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the location this private connection is located in.
func (o DatabaseMigrationServicePrivateConnectionOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The resource's name.
func (o DatabaseMigrationServicePrivateConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The private connectivity identifier.
func (o DatabaseMigrationServicePrivateConnectionOutput) PrivateConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringOutput { return v.PrivateConnectionId }).(pulumi.StringOutput)
}

func (o DatabaseMigrationServicePrivateConnectionOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// State of the PrivateConnection.
func (o DatabaseMigrationServicePrivateConnectionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DatabaseMigrationServicePrivateConnectionOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DatabaseMigrationServicePrivateConnectionOutput) Timeouts() DatabaseMigrationServicePrivateConnectionTimeoutsPtrOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) DatabaseMigrationServicePrivateConnectionTimeoutsPtrOutput {
		return v.Timeouts
	}).(DatabaseMigrationServicePrivateConnectionTimeoutsPtrOutput)
}

// The VPC Peering configuration is used to create VPC peering between databasemigrationservice and the consumer's VPC.
func (o DatabaseMigrationServicePrivateConnectionOutput) VpcPeeringConfig() DatabaseMigrationServicePrivateConnectionVpcPeeringConfigOutput {
	return o.ApplyT(func(v *DatabaseMigrationServicePrivateConnection) DatabaseMigrationServicePrivateConnectionVpcPeeringConfigOutput {
		return v.VpcPeeringConfig
	}).(DatabaseMigrationServicePrivateConnectionVpcPeeringConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseMigrationServicePrivateConnectionInput)(nil)).Elem(), &DatabaseMigrationServicePrivateConnection{})
	pulumi.RegisterOutputType(DatabaseMigrationServicePrivateConnectionOutput{})
}
