// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeBackupRestorePlanIamBinding struct {
	pulumi.CustomResourceState

	Condition                        GkeBackupRestorePlanIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                             pulumi.StringOutput                              `pulumi:"etag"`
	GkeBackupRestorePlanIamBindingId pulumi.StringOutput                              `pulumi:"gkeBackupRestorePlanIamBindingId"`
	Location                         pulumi.StringOutput                              `pulumi:"location"`
	Members                          pulumi.StringArrayOutput                         `pulumi:"members"`
	Name                             pulumi.StringOutput                              `pulumi:"name"`
	Project                          pulumi.StringOutput                              `pulumi:"project"`
	Role                             pulumi.StringOutput                              `pulumi:"role"`
}

// NewGkeBackupRestorePlanIamBinding registers a new resource with the given unique name, arguments, and options.
func NewGkeBackupRestorePlanIamBinding(ctx *pulumi.Context,
	name string, args *GkeBackupRestorePlanIamBindingArgs, opts ...pulumi.ResourceOption) (*GkeBackupRestorePlanIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeBackupRestorePlanIamBinding
	err = ctx.RegisterPackageResource("google:index/gkeBackupRestorePlanIamBinding:GkeBackupRestorePlanIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeBackupRestorePlanIamBinding gets an existing GkeBackupRestorePlanIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeBackupRestorePlanIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeBackupRestorePlanIamBindingState, opts ...pulumi.ResourceOption) (*GkeBackupRestorePlanIamBinding, error) {
	var resource GkeBackupRestorePlanIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/gkeBackupRestorePlanIamBinding:GkeBackupRestorePlanIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeBackupRestorePlanIamBinding resources.
type gkeBackupRestorePlanIamBindingState struct {
	Condition                        *GkeBackupRestorePlanIamBindingCondition `pulumi:"condition"`
	Etag                             *string                                  `pulumi:"etag"`
	GkeBackupRestorePlanIamBindingId *string                                  `pulumi:"gkeBackupRestorePlanIamBindingId"`
	Location                         *string                                  `pulumi:"location"`
	Members                          []string                                 `pulumi:"members"`
	Name                             *string                                  `pulumi:"name"`
	Project                          *string                                  `pulumi:"project"`
	Role                             *string                                  `pulumi:"role"`
}

type GkeBackupRestorePlanIamBindingState struct {
	Condition                        GkeBackupRestorePlanIamBindingConditionPtrInput
	Etag                             pulumi.StringPtrInput
	GkeBackupRestorePlanIamBindingId pulumi.StringPtrInput
	Location                         pulumi.StringPtrInput
	Members                          pulumi.StringArrayInput
	Name                             pulumi.StringPtrInput
	Project                          pulumi.StringPtrInput
	Role                             pulumi.StringPtrInput
}

func (GkeBackupRestorePlanIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeBackupRestorePlanIamBindingState)(nil)).Elem()
}

type gkeBackupRestorePlanIamBindingArgs struct {
	Condition                        *GkeBackupRestorePlanIamBindingCondition `pulumi:"condition"`
	GkeBackupRestorePlanIamBindingId *string                                  `pulumi:"gkeBackupRestorePlanIamBindingId"`
	Location                         *string                                  `pulumi:"location"`
	Members                          []string                                 `pulumi:"members"`
	Name                             *string                                  `pulumi:"name"`
	Project                          *string                                  `pulumi:"project"`
	Role                             string                                   `pulumi:"role"`
}

// The set of arguments for constructing a GkeBackupRestorePlanIamBinding resource.
type GkeBackupRestorePlanIamBindingArgs struct {
	Condition                        GkeBackupRestorePlanIamBindingConditionPtrInput
	GkeBackupRestorePlanIamBindingId pulumi.StringPtrInput
	Location                         pulumi.StringPtrInput
	Members                          pulumi.StringArrayInput
	Name                             pulumi.StringPtrInput
	Project                          pulumi.StringPtrInput
	Role                             pulumi.StringInput
}

func (GkeBackupRestorePlanIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeBackupRestorePlanIamBindingArgs)(nil)).Elem()
}

type GkeBackupRestorePlanIamBindingInput interface {
	pulumi.Input

	ToGkeBackupRestorePlanIamBindingOutput() GkeBackupRestorePlanIamBindingOutput
	ToGkeBackupRestorePlanIamBindingOutputWithContext(ctx context.Context) GkeBackupRestorePlanIamBindingOutput
}

func (*GkeBackupRestorePlanIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeBackupRestorePlanIamBinding)(nil)).Elem()
}

func (i *GkeBackupRestorePlanIamBinding) ToGkeBackupRestorePlanIamBindingOutput() GkeBackupRestorePlanIamBindingOutput {
	return i.ToGkeBackupRestorePlanIamBindingOutputWithContext(context.Background())
}

func (i *GkeBackupRestorePlanIamBinding) ToGkeBackupRestorePlanIamBindingOutputWithContext(ctx context.Context) GkeBackupRestorePlanIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeBackupRestorePlanIamBindingOutput)
}

type GkeBackupRestorePlanIamBindingOutput struct{ *pulumi.OutputState }

func (GkeBackupRestorePlanIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeBackupRestorePlanIamBinding)(nil)).Elem()
}

func (o GkeBackupRestorePlanIamBindingOutput) ToGkeBackupRestorePlanIamBindingOutput() GkeBackupRestorePlanIamBindingOutput {
	return o
}

func (o GkeBackupRestorePlanIamBindingOutput) ToGkeBackupRestorePlanIamBindingOutputWithContext(ctx context.Context) GkeBackupRestorePlanIamBindingOutput {
	return o
}

func (o GkeBackupRestorePlanIamBindingOutput) Condition() GkeBackupRestorePlanIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamBinding) GkeBackupRestorePlanIamBindingConditionPtrOutput {
		return v.Condition
	}).(GkeBackupRestorePlanIamBindingConditionPtrOutput)
}

func (o GkeBackupRestorePlanIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamBindingOutput) GkeBackupRestorePlanIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamBinding) pulumi.StringOutput { return v.GkeBackupRestorePlanIamBindingId }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o GkeBackupRestorePlanIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o GkeBackupRestorePlanIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupRestorePlanIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeBackupRestorePlanIamBindingInput)(nil)).Elem(), &GkeBackupRestorePlanIamBinding{})
	pulumi.RegisterOutputType(GkeBackupRestorePlanIamBindingOutput{})
}
