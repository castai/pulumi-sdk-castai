// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetMonitoringUptimeCheckIps(ctx *pulumi.Context, args *GetMonitoringUptimeCheckIpsArgs, opts ...pulumi.InvokeOption) (*GetMonitoringUptimeCheckIpsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetMonitoringUptimeCheckIpsResult
	err = ctx.InvokePackage("google:index/getMonitoringUptimeCheckIps:getMonitoringUptimeCheckIps", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitoringUptimeCheckIps.
type GetMonitoringUptimeCheckIpsArgs struct {
	Id *string `pulumi:"id"`
}

// A collection of values returned by getMonitoringUptimeCheckIps.
type GetMonitoringUptimeCheckIpsResult struct {
	Id             string                                     `pulumi:"id"`
	UptimeCheckIps []GetMonitoringUptimeCheckIpsUptimeCheckIp `pulumi:"uptimeCheckIps"`
}

func GetMonitoringUptimeCheckIpsOutput(ctx *pulumi.Context, args GetMonitoringUptimeCheckIpsOutputArgs, opts ...pulumi.InvokeOption) GetMonitoringUptimeCheckIpsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMonitoringUptimeCheckIpsResultOutput, error) {
			args := v.(GetMonitoringUptimeCheckIpsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetMonitoringUptimeCheckIpsResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getMonitoringUptimeCheckIps:getMonitoringUptimeCheckIps", args, GetMonitoringUptimeCheckIpsResultOutput{}, options).(GetMonitoringUptimeCheckIpsResultOutput), nil
		}).(GetMonitoringUptimeCheckIpsResultOutput)
}

// A collection of arguments for invoking getMonitoringUptimeCheckIps.
type GetMonitoringUptimeCheckIpsOutputArgs struct {
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetMonitoringUptimeCheckIpsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitoringUptimeCheckIpsArgs)(nil)).Elem()
}

// A collection of values returned by getMonitoringUptimeCheckIps.
type GetMonitoringUptimeCheckIpsResultOutput struct{ *pulumi.OutputState }

func (GetMonitoringUptimeCheckIpsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitoringUptimeCheckIpsResult)(nil)).Elem()
}

func (o GetMonitoringUptimeCheckIpsResultOutput) ToGetMonitoringUptimeCheckIpsResultOutput() GetMonitoringUptimeCheckIpsResultOutput {
	return o
}

func (o GetMonitoringUptimeCheckIpsResultOutput) ToGetMonitoringUptimeCheckIpsResultOutputWithContext(ctx context.Context) GetMonitoringUptimeCheckIpsResultOutput {
	return o
}

func (o GetMonitoringUptimeCheckIpsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitoringUptimeCheckIpsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMonitoringUptimeCheckIpsResultOutput) UptimeCheckIps() GetMonitoringUptimeCheckIpsUptimeCheckIpArrayOutput {
	return o.ApplyT(func(v GetMonitoringUptimeCheckIpsResult) []GetMonitoringUptimeCheckIpsUptimeCheckIp {
		return v.UptimeCheckIps
	}).(GetMonitoringUptimeCheckIpsUptimeCheckIpArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMonitoringUptimeCheckIpsResultOutput{})
}
