// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeReservation struct {
	pulumi.CustomResourceState

	// Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.
	Commitment           pulumi.StringOutput `pulumi:"commitment"`
	ComputeReservationId pulumi.StringOutput `pulumi:"computeReservationId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringOutput `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name     pulumi.StringOutput `pulumi:"name"`
	Project  pulumi.StringOutput `pulumi:"project"`
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// The share setting for reservations.
	ShareSettings ComputeReservationShareSettingsPtrOutput `pulumi:"shareSettings"`
	// Reservation for instances with specific machine shapes.
	SpecificReservation ComputeReservationSpecificReservationOutput `pulumi:"specificReservation"`
	// When set to true, only VMs that target this reservation by name can consume this reservation. Otherwise, it can be
	// consumed by VMs with affinity for any reservation. Defaults to false.
	SpecificReservationRequired pulumi.BoolPtrOutput `pulumi:"specificReservationRequired"`
	// The status of the reservation.
	Status   pulumi.StringOutput                 `pulumi:"status"`
	Timeouts ComputeReservationTimeoutsPtrOutput `pulumi:"timeouts"`
	// The zone where the reservation is made.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewComputeReservation registers a new resource with the given unique name, arguments, and options.
func NewComputeReservation(ctx *pulumi.Context,
	name string, args *ComputeReservationArgs, opts ...pulumi.ResourceOption) (*ComputeReservation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SpecificReservation == nil {
		return nil, errors.New("invalid value for required argument 'SpecificReservation'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeReservation
	err = ctx.RegisterPackageResource("google:index/computeReservation:ComputeReservation", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeReservation gets an existing ComputeReservation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeReservation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeReservationState, opts ...pulumi.ResourceOption) (*ComputeReservation, error) {
	var resource ComputeReservation
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeReservation:ComputeReservation", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeReservation resources.
type computeReservationState struct {
	// Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.
	Commitment           *string `pulumi:"commitment"`
	ComputeReservationId *string `pulumi:"computeReservationId"`
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp *string `pulumi:"creationTimestamp"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name     *string `pulumi:"name"`
	Project  *string `pulumi:"project"`
	SelfLink *string `pulumi:"selfLink"`
	// The share setting for reservations.
	ShareSettings *ComputeReservationShareSettings `pulumi:"shareSettings"`
	// Reservation for instances with specific machine shapes.
	SpecificReservation *ComputeReservationSpecificReservation `pulumi:"specificReservation"`
	// When set to true, only VMs that target this reservation by name can consume this reservation. Otherwise, it can be
	// consumed by VMs with affinity for any reservation. Defaults to false.
	SpecificReservationRequired *bool `pulumi:"specificReservationRequired"`
	// The status of the reservation.
	Status   *string                     `pulumi:"status"`
	Timeouts *ComputeReservationTimeouts `pulumi:"timeouts"`
	// The zone where the reservation is made.
	Zone *string `pulumi:"zone"`
}

type ComputeReservationState struct {
	// Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.
	Commitment           pulumi.StringPtrInput
	ComputeReservationId pulumi.StringPtrInput
	// Creation timestamp in RFC3339 text format.
	CreationTimestamp pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	SelfLink pulumi.StringPtrInput
	// The share setting for reservations.
	ShareSettings ComputeReservationShareSettingsPtrInput
	// Reservation for instances with specific machine shapes.
	SpecificReservation ComputeReservationSpecificReservationPtrInput
	// When set to true, only VMs that target this reservation by name can consume this reservation. Otherwise, it can be
	// consumed by VMs with affinity for any reservation. Defaults to false.
	SpecificReservationRequired pulumi.BoolPtrInput
	// The status of the reservation.
	Status   pulumi.StringPtrInput
	Timeouts ComputeReservationTimeoutsPtrInput
	// The zone where the reservation is made.
	Zone pulumi.StringPtrInput
}

func (ComputeReservationState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeReservationState)(nil)).Elem()
}

type computeReservationArgs struct {
	ComputeReservationId *string `pulumi:"computeReservationId"`
	// An optional description of this resource.
	Description *string `pulumi:"description"`
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    *string `pulumi:"name"`
	Project *string `pulumi:"project"`
	// The share setting for reservations.
	ShareSettings *ComputeReservationShareSettings `pulumi:"shareSettings"`
	// Reservation for instances with specific machine shapes.
	SpecificReservation ComputeReservationSpecificReservation `pulumi:"specificReservation"`
	// When set to true, only VMs that target this reservation by name can consume this reservation. Otherwise, it can be
	// consumed by VMs with affinity for any reservation. Defaults to false.
	SpecificReservationRequired *bool                       `pulumi:"specificReservationRequired"`
	Timeouts                    *ComputeReservationTimeouts `pulumi:"timeouts"`
	// The zone where the reservation is made.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeReservation resource.
type ComputeReservationArgs struct {
	ComputeReservationId pulumi.StringPtrInput
	// An optional description of this resource.
	Description pulumi.StringPtrInput
	// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
	// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
	// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
	// digit, except the last character, which cannot be a dash.
	Name    pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The share setting for reservations.
	ShareSettings ComputeReservationShareSettingsPtrInput
	// Reservation for instances with specific machine shapes.
	SpecificReservation ComputeReservationSpecificReservationInput
	// When set to true, only VMs that target this reservation by name can consume this reservation. Otherwise, it can be
	// consumed by VMs with affinity for any reservation. Defaults to false.
	SpecificReservationRequired pulumi.BoolPtrInput
	Timeouts                    ComputeReservationTimeoutsPtrInput
	// The zone where the reservation is made.
	Zone pulumi.StringInput
}

func (ComputeReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeReservationArgs)(nil)).Elem()
}

type ComputeReservationInput interface {
	pulumi.Input

	ToComputeReservationOutput() ComputeReservationOutput
	ToComputeReservationOutputWithContext(ctx context.Context) ComputeReservationOutput
}

func (*ComputeReservation) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeReservation)(nil)).Elem()
}

func (i *ComputeReservation) ToComputeReservationOutput() ComputeReservationOutput {
	return i.ToComputeReservationOutputWithContext(context.Background())
}

func (i *ComputeReservation) ToComputeReservationOutputWithContext(ctx context.Context) ComputeReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeReservationOutput)
}

type ComputeReservationOutput struct{ *pulumi.OutputState }

func (ComputeReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeReservation)(nil)).Elem()
}

func (o ComputeReservationOutput) ToComputeReservationOutput() ComputeReservationOutput {
	return o
}

func (o ComputeReservationOutput) ToComputeReservationOutputWithContext(ctx context.Context) ComputeReservationOutput {
	return o
}

// Full or partial URL to a parent commitment. This field displays for reservations that are tied to a commitment.
func (o ComputeReservationOutput) Commitment() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.StringOutput { return v.Commitment }).(pulumi.StringOutput)
}

func (o ComputeReservationOutput) ComputeReservationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.StringOutput { return v.ComputeReservationId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC3339 text format.
func (o ComputeReservationOutput) CreationTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.StringOutput { return v.CreationTimestamp }).(pulumi.StringOutput)
}

// An optional description of this resource.
func (o ComputeReservationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and
// comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression 'a-z?' which
// means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or
// digit, except the last character, which cannot be a dash.
func (o ComputeReservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ComputeReservationOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeReservationOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// The share setting for reservations.
func (o ComputeReservationOutput) ShareSettings() ComputeReservationShareSettingsPtrOutput {
	return o.ApplyT(func(v *ComputeReservation) ComputeReservationShareSettingsPtrOutput { return v.ShareSettings }).(ComputeReservationShareSettingsPtrOutput)
}

// Reservation for instances with specific machine shapes.
func (o ComputeReservationOutput) SpecificReservation() ComputeReservationSpecificReservationOutput {
	return o.ApplyT(func(v *ComputeReservation) ComputeReservationSpecificReservationOutput { return v.SpecificReservation }).(ComputeReservationSpecificReservationOutput)
}

// When set to true, only VMs that target this reservation by name can consume this reservation. Otherwise, it can be
// consumed by VMs with affinity for any reservation. Defaults to false.
func (o ComputeReservationOutput) SpecificReservationRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.BoolPtrOutput { return v.SpecificReservationRequired }).(pulumi.BoolPtrOutput)
}

// The status of the reservation.
func (o ComputeReservationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o ComputeReservationOutput) Timeouts() ComputeReservationTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeReservation) ComputeReservationTimeoutsPtrOutput { return v.Timeouts }).(ComputeReservationTimeoutsPtrOutput)
}

// The zone where the reservation is made.
func (o ComputeReservationOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeReservation) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeReservationInput)(nil)).Elem(), &ComputeReservation{})
	pulumi.RegisterOutputType(ComputeReservationOutput{})
}
