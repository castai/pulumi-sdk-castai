// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IntegrationsAuthConfig struct {
	pulumi.CustomResourceState

	// Certificate id for client certificate.
	CertificateId pulumi.StringOutput `pulumi:"certificateId"`
	// Raw client certificate
	ClientCertificate IntegrationsAuthConfigClientCertificatePtrOutput `pulumi:"clientCertificate"`
	// The timestamp when the auth config is created. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	CreatorEmail pulumi.StringOutput `pulumi:"creatorEmail"`
	// Credential type of the encrypted credential.
	CredentialType pulumi.StringOutput `pulumi:"credentialType"`
	// Raw auth credentials.
	DecryptedCredential IntegrationsAuthConfigDecryptedCredentialPtrOutput `pulumi:"decryptedCredential"`
	// A description of the auth config.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the auth config.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key. A base64-encoded string.
	EncryptedCredential pulumi.StringOutput `pulumi:"encryptedCredential"`
	// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days.
	// Support granularity in hours. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	ExpiryNotificationDurations pulumi.StringArrayOutput `pulumi:"expiryNotificationDurations"`
	IntegrationsAuthConfigId    pulumi.StringOutput      `pulumi:"integrationsAuthConfigId"`
	// The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail pulumi.StringOutput `pulumi:"lastModifierEmail"`
	// Location in which client needs to be provisioned.
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name of the auth config.
	Name pulumi.StringOutput `pulumi:"name"`
	// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6
	// months depending on the instance settings. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	OverrideValidTime pulumi.StringPtrOutput `pulumi:"overrideValidTime"`
	Project           pulumi.StringOutput    `pulumi:"project"`
	// The reason / details of the current status.
	Reason pulumi.StringOutput `pulumi:"reason"`
	// The status of the auth config.
	State    pulumi.StringOutput                     `pulumi:"state"`
	Timeouts IntegrationsAuthConfigTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp when the auth config is modified. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The time until the auth config is valid. Empty or max value is considered the auth config won't expire. A timestamp in
	// RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z"
	// and "2014-10-02T15:01:23.045123456Z".
	ValidTime pulumi.StringOutput `pulumi:"validTime"`
	// The visibility of the auth config. Possible values: ["PRIVATE", "CLIENT_VISIBLE"]
	Visibility pulumi.StringPtrOutput `pulumi:"visibility"`
}

// NewIntegrationsAuthConfig registers a new resource with the given unique name, arguments, and options.
func NewIntegrationsAuthConfig(ctx *pulumi.Context,
	name string, args *IntegrationsAuthConfigArgs, opts ...pulumi.ResourceOption) (*IntegrationsAuthConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IntegrationsAuthConfig
	err = ctx.RegisterPackageResource("google:index/integrationsAuthConfig:IntegrationsAuthConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationsAuthConfig gets an existing IntegrationsAuthConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationsAuthConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationsAuthConfigState, opts ...pulumi.ResourceOption) (*IntegrationsAuthConfig, error) {
	var resource IntegrationsAuthConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/integrationsAuthConfig:IntegrationsAuthConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationsAuthConfig resources.
type integrationsAuthConfigState struct {
	// Certificate id for client certificate.
	CertificateId *string `pulumi:"certificateId"`
	// Raw client certificate
	ClientCertificate *IntegrationsAuthConfigClientCertificate `pulumi:"clientCertificate"`
	// The timestamp when the auth config is created. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime *string `pulumi:"createTime"`
	// The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	CreatorEmail *string `pulumi:"creatorEmail"`
	// Credential type of the encrypted credential.
	CredentialType *string `pulumi:"credentialType"`
	// Raw auth credentials.
	DecryptedCredential *IntegrationsAuthConfigDecryptedCredential `pulumi:"decryptedCredential"`
	// A description of the auth config.
	Description *string `pulumi:"description"`
	// The name of the auth config.
	DisplayName *string `pulumi:"displayName"`
	// Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key. A base64-encoded string.
	EncryptedCredential *string `pulumi:"encryptedCredential"`
	// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days.
	// Support granularity in hours. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	ExpiryNotificationDurations []string `pulumi:"expiryNotificationDurations"`
	IntegrationsAuthConfigId    *string  `pulumi:"integrationsAuthConfigId"`
	// The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail *string `pulumi:"lastModifierEmail"`
	// Location in which client needs to be provisioned.
	Location *string `pulumi:"location"`
	// Resource name of the auth config.
	Name *string `pulumi:"name"`
	// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6
	// months depending on the instance settings. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	OverrideValidTime *string `pulumi:"overrideValidTime"`
	Project           *string `pulumi:"project"`
	// The reason / details of the current status.
	Reason *string `pulumi:"reason"`
	// The status of the auth config.
	State    *string                         `pulumi:"state"`
	Timeouts *IntegrationsAuthConfigTimeouts `pulumi:"timeouts"`
	// The timestamp when the auth config is modified. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime *string `pulumi:"updateTime"`
	// The time until the auth config is valid. Empty or max value is considered the auth config won't expire. A timestamp in
	// RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z"
	// and "2014-10-02T15:01:23.045123456Z".
	ValidTime *string `pulumi:"validTime"`
	// The visibility of the auth config. Possible values: ["PRIVATE", "CLIENT_VISIBLE"]
	Visibility *string `pulumi:"visibility"`
}

type IntegrationsAuthConfigState struct {
	// Certificate id for client certificate.
	CertificateId pulumi.StringPtrInput
	// Raw client certificate
	ClientCertificate IntegrationsAuthConfigClientCertificatePtrInput
	// The timestamp when the auth config is created. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	CreateTime pulumi.StringPtrInput
	// The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	CreatorEmail pulumi.StringPtrInput
	// Credential type of the encrypted credential.
	CredentialType pulumi.StringPtrInput
	// Raw auth credentials.
	DecryptedCredential IntegrationsAuthConfigDecryptedCredentialPtrInput
	// A description of the auth config.
	Description pulumi.StringPtrInput
	// The name of the auth config.
	DisplayName pulumi.StringPtrInput
	// Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key. A base64-encoded string.
	EncryptedCredential pulumi.StringPtrInput
	// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days.
	// Support granularity in hours. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	ExpiryNotificationDurations pulumi.StringArrayInput
	IntegrationsAuthConfigId    pulumi.StringPtrInput
	// The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail pulumi.StringPtrInput
	// Location in which client needs to be provisioned.
	Location pulumi.StringPtrInput
	// Resource name of the auth config.
	Name pulumi.StringPtrInput
	// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6
	// months depending on the instance settings. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	OverrideValidTime pulumi.StringPtrInput
	Project           pulumi.StringPtrInput
	// The reason / details of the current status.
	Reason pulumi.StringPtrInput
	// The status of the auth config.
	State    pulumi.StringPtrInput
	Timeouts IntegrationsAuthConfigTimeoutsPtrInput
	// The timestamp when the auth config is modified. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
	// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	UpdateTime pulumi.StringPtrInput
	// The time until the auth config is valid. Empty or max value is considered the auth config won't expire. A timestamp in
	// RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z"
	// and "2014-10-02T15:01:23.045123456Z".
	ValidTime pulumi.StringPtrInput
	// The visibility of the auth config. Possible values: ["PRIVATE", "CLIENT_VISIBLE"]
	Visibility pulumi.StringPtrInput
}

func (IntegrationsAuthConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationsAuthConfigState)(nil)).Elem()
}

type integrationsAuthConfigArgs struct {
	// Raw client certificate
	ClientCertificate *IntegrationsAuthConfigClientCertificate `pulumi:"clientCertificate"`
	// Raw auth credentials.
	DecryptedCredential *IntegrationsAuthConfigDecryptedCredential `pulumi:"decryptedCredential"`
	// A description of the auth config.
	Description *string `pulumi:"description"`
	// The name of the auth config.
	DisplayName string `pulumi:"displayName"`
	// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days.
	// Support granularity in hours. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	ExpiryNotificationDurations []string `pulumi:"expiryNotificationDurations"`
	IntegrationsAuthConfigId    *string  `pulumi:"integrationsAuthConfigId"`
	// Location in which client needs to be provisioned.
	Location string `pulumi:"location"`
	// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6
	// months depending on the instance settings. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	OverrideValidTime *string                         `pulumi:"overrideValidTime"`
	Project           *string                         `pulumi:"project"`
	Timeouts          *IntegrationsAuthConfigTimeouts `pulumi:"timeouts"`
	// The visibility of the auth config. Possible values: ["PRIVATE", "CLIENT_VISIBLE"]
	Visibility *string `pulumi:"visibility"`
}

// The set of arguments for constructing a IntegrationsAuthConfig resource.
type IntegrationsAuthConfigArgs struct {
	// Raw client certificate
	ClientCertificate IntegrationsAuthConfigClientCertificatePtrInput
	// Raw auth credentials.
	DecryptedCredential IntegrationsAuthConfigDecryptedCredentialPtrInput
	// A description of the auth config.
	Description pulumi.StringPtrInput
	// The name of the auth config.
	DisplayName pulumi.StringInput
	// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days.
	// Support granularity in hours. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
	ExpiryNotificationDurations pulumi.StringArrayInput
	IntegrationsAuthConfigId    pulumi.StringPtrInput
	// Location in which client needs to be provisioned.
	Location pulumi.StringInput
	// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6
	// months depending on the instance settings. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
	// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
	OverrideValidTime pulumi.StringPtrInput
	Project           pulumi.StringPtrInput
	Timeouts          IntegrationsAuthConfigTimeoutsPtrInput
	// The visibility of the auth config. Possible values: ["PRIVATE", "CLIENT_VISIBLE"]
	Visibility pulumi.StringPtrInput
}

func (IntegrationsAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationsAuthConfigArgs)(nil)).Elem()
}

type IntegrationsAuthConfigInput interface {
	pulumi.Input

	ToIntegrationsAuthConfigOutput() IntegrationsAuthConfigOutput
	ToIntegrationsAuthConfigOutputWithContext(ctx context.Context) IntegrationsAuthConfigOutput
}

func (*IntegrationsAuthConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationsAuthConfig)(nil)).Elem()
}

func (i *IntegrationsAuthConfig) ToIntegrationsAuthConfigOutput() IntegrationsAuthConfigOutput {
	return i.ToIntegrationsAuthConfigOutputWithContext(context.Background())
}

func (i *IntegrationsAuthConfig) ToIntegrationsAuthConfigOutputWithContext(ctx context.Context) IntegrationsAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationsAuthConfigOutput)
}

type IntegrationsAuthConfigOutput struct{ *pulumi.OutputState }

func (IntegrationsAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationsAuthConfig)(nil)).Elem()
}

func (o IntegrationsAuthConfigOutput) ToIntegrationsAuthConfigOutput() IntegrationsAuthConfigOutput {
	return o
}

func (o IntegrationsAuthConfigOutput) ToIntegrationsAuthConfigOutputWithContext(ctx context.Context) IntegrationsAuthConfigOutput {
	return o
}

// Certificate id for client certificate.
func (o IntegrationsAuthConfigOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.CertificateId }).(pulumi.StringOutput)
}

// Raw client certificate
func (o IntegrationsAuthConfigOutput) ClientCertificate() IntegrationsAuthConfigClientCertificatePtrOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) IntegrationsAuthConfigClientCertificatePtrOutput {
		return v.ClientCertificate
	}).(IntegrationsAuthConfigClientCertificatePtrOutput)
}

// The timestamp when the auth config is created. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o IntegrationsAuthConfigOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o IntegrationsAuthConfigOutput) CreatorEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.CreatorEmail }).(pulumi.StringOutput)
}

// Credential type of the encrypted credential.
func (o IntegrationsAuthConfigOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.CredentialType }).(pulumi.StringOutput)
}

// Raw auth credentials.
func (o IntegrationsAuthConfigOutput) DecryptedCredential() IntegrationsAuthConfigDecryptedCredentialPtrOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) IntegrationsAuthConfigDecryptedCredentialPtrOutput {
		return v.DecryptedCredential
	}).(IntegrationsAuthConfigDecryptedCredentialPtrOutput)
}

// A description of the auth config.
func (o IntegrationsAuthConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the auth config.
func (o IntegrationsAuthConfigOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key. A base64-encoded string.
func (o IntegrationsAuthConfigOutput) EncryptedCredential() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.EncryptedCredential }).(pulumi.StringOutput)
}

// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days.
// Support granularity in hours. A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
func (o IntegrationsAuthConfigOutput) ExpiryNotificationDurations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringArrayOutput { return v.ExpiryNotificationDurations }).(pulumi.StringArrayOutput)
}

func (o IntegrationsAuthConfigOutput) IntegrationsAuthConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.IntegrationsAuthConfigId }).(pulumi.StringOutput)
}

// The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
func (o IntegrationsAuthConfigOutput) LastModifierEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.LastModifierEmail }).(pulumi.StringOutput)
}

// Location in which client needs to be provisioned.
func (o IntegrationsAuthConfigOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Resource name of the auth config.
func (o IntegrationsAuthConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6
// months depending on the instance settings. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up
// to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o IntegrationsAuthConfigOutput) OverrideValidTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringPtrOutput { return v.OverrideValidTime }).(pulumi.StringPtrOutput)
}

func (o IntegrationsAuthConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The reason / details of the current status.
func (o IntegrationsAuthConfigOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.Reason }).(pulumi.StringOutput)
}

// The status of the auth config.
func (o IntegrationsAuthConfigOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o IntegrationsAuthConfigOutput) Timeouts() IntegrationsAuthConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) IntegrationsAuthConfigTimeoutsPtrOutput { return v.Timeouts }).(IntegrationsAuthConfigTimeoutsPtrOutput)
}

// The timestamp when the auth config is modified. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
func (o IntegrationsAuthConfigOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The time until the auth config is valid. Empty or max value is considered the auth config won't expire. A timestamp in
// RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z"
// and "2014-10-02T15:01:23.045123456Z".
func (o IntegrationsAuthConfigOutput) ValidTime() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringOutput { return v.ValidTime }).(pulumi.StringOutput)
}

// The visibility of the auth config. Possible values: ["PRIVATE", "CLIENT_VISIBLE"]
func (o IntegrationsAuthConfigOutput) Visibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationsAuthConfig) pulumi.StringPtrOutput { return v.Visibility }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationsAuthConfigInput)(nil)).Elem(), &IntegrationsAuthConfig{})
	pulumi.RegisterOutputType(IntegrationsAuthConfigOutput{})
}
