// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryTable struct {
	pulumi.CustomResourceState

	// Specifies the configuration of a BigLake managed table.
	BiglakeConfiguration BigqueryTableBiglakeConfigurationPtrOutput `pulumi:"biglakeConfiguration"`
	BigqueryTableId      pulumi.StringOutput                        `pulumi:"bigqueryTableId"`
	// Specifies column names to use for data clustering. Up to four top-level columns are allowed, and should be specified in
	// descending priority order.
	Clusterings pulumi.StringArrayOutput `pulumi:"clusterings"`
	// The time when this table was created, in milliseconds since the epoch.
	CreationTime pulumi.Float64Output `pulumi:"creationTime"`
	// The dataset ID to create the table in. Changing this forces a new resource to be created.
	DatasetId          pulumi.StringOutput  `pulumi:"datasetId"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// The field description.
	Description     pulumi.StringPtrOutput `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Specifies how the table should be encrypted. If left blank, the table will be encrypted with a Google-managed key; that
	// process is transparent to the user.
	EncryptionConfiguration BigqueryTableEncryptionConfigurationPtrOutput `pulumi:"encryptionConfiguration"`
	// A hash of the resource.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely.
	// Expired tables will be deleted and their storage reclaimed.
	ExpirationTime pulumi.Float64Output `pulumi:"expirationTime"`
	// Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these
	// properties, the data source can then be queried as if it were a standard BigQuery table.
	ExternalDataConfiguration BigqueryTableExternalDataConfigurationPtrOutput `pulumi:"externalDataConfiguration"`
	// A descriptive name for the table.
	FriendlyName pulumi.StringPtrOutput `pulumi:"friendlyName"`
	// A mapping of labels to assign to the resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The time when this table was last modified, in milliseconds since the epoch.
	LastModifiedTime pulumi.Float64Output `pulumi:"lastModifiedTime"`
	// The geographic location where the table resides. This value is inherited from the dataset.
	Location pulumi.StringOutput `pulumi:"location"`
	// If specified, configures this table as a materialized view.
	MaterializedView BigqueryTableMaterializedViewPtrOutput `pulumi:"materializedView"`
	// The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a
	// string encoding of [SQL IntervalValue
	// type](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#interval_type).
	MaxStaleness pulumi.StringPtrOutput `pulumi:"maxStaleness"`
	// The geographic location where the table resides. This value is inherited from the dataset.
	NumBytes pulumi.Float64Output `pulumi:"numBytes"`
	// The number of bytes in the table that are considered "long-term storage".
	NumLongTermBytes pulumi.Float64Output `pulumi:"numLongTermBytes"`
	// The number of rows of data in this table, excluding any data in the streaming buffer.
	NumRows pulumi.Float64Output `pulumi:"numRows"`
	// The ID of the project in which the resource belongs.
	Project pulumi.StringOutput `pulumi:"project"`
	// If specified, configures range-based partitioning for this table.
	RangePartitioning BigqueryTableRangePartitioningPtrOutput `pulumi:"rangePartitioning"`
	// If set to true, queries over this table require a partition filter that can be used for partition elimination to be
	// specified.
	RequirePartitionFilter pulumi.BoolPtrOutput `pulumi:"requirePartitionFilter"`
	// The tags attached to this table. Tag keys are globally unique. Tag key is expected to be in the namespaced format, for
	// example "123456789012/environment" where 123456789012 is the ID of the parent organization or project resource for this
	// tag key. Tag value is expected to be the short name, for example "Production".
	ResourceTags pulumi.StringMapOutput `pulumi:"resourceTags"`
	// A JSON schema for the table.
	Schema pulumi.StringOutput `pulumi:"schema"`
	// The URI of the created resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// Defines the primary key and foreign keys.
	TableConstraints BigqueryTableTableConstraintsPtrOutput `pulumi:"tableConstraints"`
	// A unique ID for the resource. Changing this forces a new resource to be created.
	TableId pulumi.StringOutput `pulumi:"tableId"`
	// Replication info of a table created using "AS REPLICA" DDL like: "CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv".
	TableReplicationInfo BigqueryTableTableReplicationInfoPtrOutput `pulumi:"tableReplicationInfo"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput `pulumi:"terraformLabels"`
	// If specified, configures time-based partitioning for this table.
	TimePartitioning BigqueryTableTimePartitioningPtrOutput `pulumi:"timePartitioning"`
	// Describes the table type.
	Type pulumi.StringOutput `pulumi:"type"`
	// If specified, configures this table as a view.
	View BigqueryTableViewPtrOutput `pulumi:"view"`
}

// NewBigqueryTable registers a new resource with the given unique name, arguments, and options.
func NewBigqueryTable(ctx *pulumi.Context,
	name string, args *BigqueryTableArgs, opts ...pulumi.ResourceOption) (*BigqueryTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatasetId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetId'")
	}
	if args.TableId == nil {
		return nil, errors.New("invalid value for required argument 'TableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryTable
	err = ctx.RegisterPackageResource("google:index/bigqueryTable:BigqueryTable", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryTable gets an existing BigqueryTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryTableState, opts ...pulumi.ResourceOption) (*BigqueryTable, error) {
	var resource BigqueryTable
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigqueryTable:BigqueryTable", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryTable resources.
type bigqueryTableState struct {
	// Specifies the configuration of a BigLake managed table.
	BiglakeConfiguration *BigqueryTableBiglakeConfiguration `pulumi:"biglakeConfiguration"`
	BigqueryTableId      *string                            `pulumi:"bigqueryTableId"`
	// Specifies column names to use for data clustering. Up to four top-level columns are allowed, and should be specified in
	// descending priority order.
	Clusterings []string `pulumi:"clusterings"`
	// The time when this table was created, in milliseconds since the epoch.
	CreationTime *float64 `pulumi:"creationTime"`
	// The dataset ID to create the table in. Changing this forces a new resource to be created.
	DatasetId          *string `pulumi:"datasetId"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// The field description.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Specifies how the table should be encrypted. If left blank, the table will be encrypted with a Google-managed key; that
	// process is transparent to the user.
	EncryptionConfiguration *BigqueryTableEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// A hash of the resource.
	Etag *string `pulumi:"etag"`
	// The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely.
	// Expired tables will be deleted and their storage reclaimed.
	ExpirationTime *float64 `pulumi:"expirationTime"`
	// Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these
	// properties, the data source can then be queried as if it were a standard BigQuery table.
	ExternalDataConfiguration *BigqueryTableExternalDataConfiguration `pulumi:"externalDataConfiguration"`
	// A descriptive name for the table.
	FriendlyName *string `pulumi:"friendlyName"`
	// A mapping of labels to assign to the resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The time when this table was last modified, in milliseconds since the epoch.
	LastModifiedTime *float64 `pulumi:"lastModifiedTime"`
	// The geographic location where the table resides. This value is inherited from the dataset.
	Location *string `pulumi:"location"`
	// If specified, configures this table as a materialized view.
	MaterializedView *BigqueryTableMaterializedView `pulumi:"materializedView"`
	// The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a
	// string encoding of [SQL IntervalValue
	// type](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#interval_type).
	MaxStaleness *string `pulumi:"maxStaleness"`
	// The geographic location where the table resides. This value is inherited from the dataset.
	NumBytes *float64 `pulumi:"numBytes"`
	// The number of bytes in the table that are considered "long-term storage".
	NumLongTermBytes *float64 `pulumi:"numLongTermBytes"`
	// The number of rows of data in this table, excluding any data in the streaming buffer.
	NumRows *float64 `pulumi:"numRows"`
	// The ID of the project in which the resource belongs.
	Project *string `pulumi:"project"`
	// If specified, configures range-based partitioning for this table.
	RangePartitioning *BigqueryTableRangePartitioning `pulumi:"rangePartitioning"`
	// If set to true, queries over this table require a partition filter that can be used for partition elimination to be
	// specified.
	RequirePartitionFilter *bool `pulumi:"requirePartitionFilter"`
	// The tags attached to this table. Tag keys are globally unique. Tag key is expected to be in the namespaced format, for
	// example "123456789012/environment" where 123456789012 is the ID of the parent organization or project resource for this
	// tag key. Tag value is expected to be the short name, for example "Production".
	ResourceTags map[string]string `pulumi:"resourceTags"`
	// A JSON schema for the table.
	Schema *string `pulumi:"schema"`
	// The URI of the created resource.
	SelfLink *string `pulumi:"selfLink"`
	// Defines the primary key and foreign keys.
	TableConstraints *BigqueryTableTableConstraints `pulumi:"tableConstraints"`
	// A unique ID for the resource. Changing this forces a new resource to be created.
	TableId *string `pulumi:"tableId"`
	// Replication info of a table created using "AS REPLICA" DDL like: "CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv".
	TableReplicationInfo *BigqueryTableTableReplicationInfo `pulumi:"tableReplicationInfo"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string `pulumi:"terraformLabels"`
	// If specified, configures time-based partitioning for this table.
	TimePartitioning *BigqueryTableTimePartitioning `pulumi:"timePartitioning"`
	// Describes the table type.
	Type *string `pulumi:"type"`
	// If specified, configures this table as a view.
	View *BigqueryTableView `pulumi:"view"`
}

type BigqueryTableState struct {
	// Specifies the configuration of a BigLake managed table.
	BiglakeConfiguration BigqueryTableBiglakeConfigurationPtrInput
	BigqueryTableId      pulumi.StringPtrInput
	// Specifies column names to use for data clustering. Up to four top-level columns are allowed, and should be specified in
	// descending priority order.
	Clusterings pulumi.StringArrayInput
	// The time when this table was created, in milliseconds since the epoch.
	CreationTime pulumi.Float64PtrInput
	// The dataset ID to create the table in. Changing this forces a new resource to be created.
	DatasetId          pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// The field description.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Specifies how the table should be encrypted. If left blank, the table will be encrypted with a Google-managed key; that
	// process is transparent to the user.
	EncryptionConfiguration BigqueryTableEncryptionConfigurationPtrInput
	// A hash of the resource.
	Etag pulumi.StringPtrInput
	// The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely.
	// Expired tables will be deleted and their storage reclaimed.
	ExpirationTime pulumi.Float64PtrInput
	// Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these
	// properties, the data source can then be queried as if it were a standard BigQuery table.
	ExternalDataConfiguration BigqueryTableExternalDataConfigurationPtrInput
	// A descriptive name for the table.
	FriendlyName pulumi.StringPtrInput
	// A mapping of labels to assign to the resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The time when this table was last modified, in milliseconds since the epoch.
	LastModifiedTime pulumi.Float64PtrInput
	// The geographic location where the table resides. This value is inherited from the dataset.
	Location pulumi.StringPtrInput
	// If specified, configures this table as a materialized view.
	MaterializedView BigqueryTableMaterializedViewPtrInput
	// The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a
	// string encoding of [SQL IntervalValue
	// type](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#interval_type).
	MaxStaleness pulumi.StringPtrInput
	// The geographic location where the table resides. This value is inherited from the dataset.
	NumBytes pulumi.Float64PtrInput
	// The number of bytes in the table that are considered "long-term storage".
	NumLongTermBytes pulumi.Float64PtrInput
	// The number of rows of data in this table, excluding any data in the streaming buffer.
	NumRows pulumi.Float64PtrInput
	// The ID of the project in which the resource belongs.
	Project pulumi.StringPtrInput
	// If specified, configures range-based partitioning for this table.
	RangePartitioning BigqueryTableRangePartitioningPtrInput
	// If set to true, queries over this table require a partition filter that can be used for partition elimination to be
	// specified.
	RequirePartitionFilter pulumi.BoolPtrInput
	// The tags attached to this table. Tag keys are globally unique. Tag key is expected to be in the namespaced format, for
	// example "123456789012/environment" where 123456789012 is the ID of the parent organization or project resource for this
	// tag key. Tag value is expected to be the short name, for example "Production".
	ResourceTags pulumi.StringMapInput
	// A JSON schema for the table.
	Schema pulumi.StringPtrInput
	// The URI of the created resource.
	SelfLink pulumi.StringPtrInput
	// Defines the primary key and foreign keys.
	TableConstraints BigqueryTableTableConstraintsPtrInput
	// A unique ID for the resource. Changing this forces a new resource to be created.
	TableId pulumi.StringPtrInput
	// Replication info of a table created using "AS REPLICA" DDL like: "CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv".
	TableReplicationInfo BigqueryTableTableReplicationInfoPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	// If specified, configures time-based partitioning for this table.
	TimePartitioning BigqueryTableTimePartitioningPtrInput
	// Describes the table type.
	Type pulumi.StringPtrInput
	// If specified, configures this table as a view.
	View BigqueryTableViewPtrInput
}

func (BigqueryTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryTableState)(nil)).Elem()
}

type bigqueryTableArgs struct {
	// Specifies the configuration of a BigLake managed table.
	BiglakeConfiguration *BigqueryTableBiglakeConfiguration `pulumi:"biglakeConfiguration"`
	BigqueryTableId      *string                            `pulumi:"bigqueryTableId"`
	// Specifies column names to use for data clustering. Up to four top-level columns are allowed, and should be specified in
	// descending priority order.
	Clusterings []string `pulumi:"clusterings"`
	// The dataset ID to create the table in. Changing this forces a new resource to be created.
	DatasetId          string `pulumi:"datasetId"`
	DeletionProtection *bool  `pulumi:"deletionProtection"`
	// The field description.
	Description *string `pulumi:"description"`
	// Specifies how the table should be encrypted. If left blank, the table will be encrypted with a Google-managed key; that
	// process is transparent to the user.
	EncryptionConfiguration *BigqueryTableEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely.
	// Expired tables will be deleted and their storage reclaimed.
	ExpirationTime *float64 `pulumi:"expirationTime"`
	// Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these
	// properties, the data source can then be queried as if it were a standard BigQuery table.
	ExternalDataConfiguration *BigqueryTableExternalDataConfiguration `pulumi:"externalDataConfiguration"`
	// A descriptive name for the table.
	FriendlyName *string `pulumi:"friendlyName"`
	// A mapping of labels to assign to the resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// If specified, configures this table as a materialized view.
	MaterializedView *BigqueryTableMaterializedView `pulumi:"materializedView"`
	// The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a
	// string encoding of [SQL IntervalValue
	// type](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#interval_type).
	MaxStaleness *string `pulumi:"maxStaleness"`
	// The ID of the project in which the resource belongs.
	Project *string `pulumi:"project"`
	// If specified, configures range-based partitioning for this table.
	RangePartitioning *BigqueryTableRangePartitioning `pulumi:"rangePartitioning"`
	// If set to true, queries over this table require a partition filter that can be used for partition elimination to be
	// specified.
	RequirePartitionFilter *bool `pulumi:"requirePartitionFilter"`
	// The tags attached to this table. Tag keys are globally unique. Tag key is expected to be in the namespaced format, for
	// example "123456789012/environment" where 123456789012 is the ID of the parent organization or project resource for this
	// tag key. Tag value is expected to be the short name, for example "Production".
	ResourceTags map[string]string `pulumi:"resourceTags"`
	// A JSON schema for the table.
	Schema *string `pulumi:"schema"`
	// Defines the primary key and foreign keys.
	TableConstraints *BigqueryTableTableConstraints `pulumi:"tableConstraints"`
	// A unique ID for the resource. Changing this forces a new resource to be created.
	TableId string `pulumi:"tableId"`
	// Replication info of a table created using "AS REPLICA" DDL like: "CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv".
	TableReplicationInfo *BigqueryTableTableReplicationInfo `pulumi:"tableReplicationInfo"`
	// If specified, configures time-based partitioning for this table.
	TimePartitioning *BigqueryTableTimePartitioning `pulumi:"timePartitioning"`
	// If specified, configures this table as a view.
	View *BigqueryTableView `pulumi:"view"`
}

// The set of arguments for constructing a BigqueryTable resource.
type BigqueryTableArgs struct {
	// Specifies the configuration of a BigLake managed table.
	BiglakeConfiguration BigqueryTableBiglakeConfigurationPtrInput
	BigqueryTableId      pulumi.StringPtrInput
	// Specifies column names to use for data clustering. Up to four top-level columns are allowed, and should be specified in
	// descending priority order.
	Clusterings pulumi.StringArrayInput
	// The dataset ID to create the table in. Changing this forces a new resource to be created.
	DatasetId          pulumi.StringInput
	DeletionProtection pulumi.BoolPtrInput
	// The field description.
	Description pulumi.StringPtrInput
	// Specifies how the table should be encrypted. If left blank, the table will be encrypted with a Google-managed key; that
	// process is transparent to the user.
	EncryptionConfiguration BigqueryTableEncryptionConfigurationPtrInput
	// The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely.
	// Expired tables will be deleted and their storage reclaimed.
	ExpirationTime pulumi.Float64PtrInput
	// Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these
	// properties, the data source can then be queried as if it were a standard BigQuery table.
	ExternalDataConfiguration BigqueryTableExternalDataConfigurationPtrInput
	// A descriptive name for the table.
	FriendlyName pulumi.StringPtrInput
	// A mapping of labels to assign to the resource. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// If specified, configures this table as a materialized view.
	MaterializedView BigqueryTableMaterializedViewPtrInput
	// The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a
	// string encoding of [SQL IntervalValue
	// type](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#interval_type).
	MaxStaleness pulumi.StringPtrInput
	// The ID of the project in which the resource belongs.
	Project pulumi.StringPtrInput
	// If specified, configures range-based partitioning for this table.
	RangePartitioning BigqueryTableRangePartitioningPtrInput
	// If set to true, queries over this table require a partition filter that can be used for partition elimination to be
	// specified.
	RequirePartitionFilter pulumi.BoolPtrInput
	// The tags attached to this table. Tag keys are globally unique. Tag key is expected to be in the namespaced format, for
	// example "123456789012/environment" where 123456789012 is the ID of the parent organization or project resource for this
	// tag key. Tag value is expected to be the short name, for example "Production".
	ResourceTags pulumi.StringMapInput
	// A JSON schema for the table.
	Schema pulumi.StringPtrInput
	// Defines the primary key and foreign keys.
	TableConstraints BigqueryTableTableConstraintsPtrInput
	// A unique ID for the resource. Changing this forces a new resource to be created.
	TableId pulumi.StringInput
	// Replication info of a table created using "AS REPLICA" DDL like: "CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv".
	TableReplicationInfo BigqueryTableTableReplicationInfoPtrInput
	// If specified, configures time-based partitioning for this table.
	TimePartitioning BigqueryTableTimePartitioningPtrInput
	// If specified, configures this table as a view.
	View BigqueryTableViewPtrInput
}

func (BigqueryTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryTableArgs)(nil)).Elem()
}

type BigqueryTableInput interface {
	pulumi.Input

	ToBigqueryTableOutput() BigqueryTableOutput
	ToBigqueryTableOutputWithContext(ctx context.Context) BigqueryTableOutput
}

func (*BigqueryTable) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryTable)(nil)).Elem()
}

func (i *BigqueryTable) ToBigqueryTableOutput() BigqueryTableOutput {
	return i.ToBigqueryTableOutputWithContext(context.Background())
}

func (i *BigqueryTable) ToBigqueryTableOutputWithContext(ctx context.Context) BigqueryTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryTableOutput)
}

type BigqueryTableOutput struct{ *pulumi.OutputState }

func (BigqueryTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryTable)(nil)).Elem()
}

func (o BigqueryTableOutput) ToBigqueryTableOutput() BigqueryTableOutput {
	return o
}

func (o BigqueryTableOutput) ToBigqueryTableOutputWithContext(ctx context.Context) BigqueryTableOutput {
	return o
}

// Specifies the configuration of a BigLake managed table.
func (o BigqueryTableOutput) BiglakeConfiguration() BigqueryTableBiglakeConfigurationPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) BigqueryTableBiglakeConfigurationPtrOutput { return v.BiglakeConfiguration }).(BigqueryTableBiglakeConfigurationPtrOutput)
}

func (o BigqueryTableOutput) BigqueryTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringOutput { return v.BigqueryTableId }).(pulumi.StringOutput)
}

// Specifies column names to use for data clustering. Up to four top-level columns are allowed, and should be specified in
// descending priority order.
func (o BigqueryTableOutput) Clusterings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringArrayOutput { return v.Clusterings }).(pulumi.StringArrayOutput)
}

// The time when this table was created, in milliseconds since the epoch.
func (o BigqueryTableOutput) CreationTime() pulumi.Float64Output {
	return o.ApplyT(func(v *BigqueryTable) pulumi.Float64Output { return v.CreationTime }).(pulumi.Float64Output)
}

// The dataset ID to create the table in. Changing this forces a new resource to be created.
func (o BigqueryTableOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringOutput { return v.DatasetId }).(pulumi.StringOutput)
}

func (o BigqueryTableOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// The field description.
func (o BigqueryTableOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BigqueryTableOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Specifies how the table should be encrypted. If left blank, the table will be encrypted with a Google-managed key; that
// process is transparent to the user.
func (o BigqueryTableOutput) EncryptionConfiguration() BigqueryTableEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) BigqueryTableEncryptionConfigurationPtrOutput { return v.EncryptionConfiguration }).(BigqueryTableEncryptionConfigurationPtrOutput)
}

// A hash of the resource.
func (o BigqueryTableOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely.
// Expired tables will be deleted and their storage reclaimed.
func (o BigqueryTableOutput) ExpirationTime() pulumi.Float64Output {
	return o.ApplyT(func(v *BigqueryTable) pulumi.Float64Output { return v.ExpirationTime }).(pulumi.Float64Output)
}

// Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these
// properties, the data source can then be queried as if it were a standard BigQuery table.
func (o BigqueryTableOutput) ExternalDataConfiguration() BigqueryTableExternalDataConfigurationPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) BigqueryTableExternalDataConfigurationPtrOutput {
		return v.ExternalDataConfiguration
	}).(BigqueryTableExternalDataConfigurationPtrOutput)
}

// A descriptive name for the table.
func (o BigqueryTableOutput) FriendlyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringPtrOutput { return v.FriendlyName }).(pulumi.StringPtrOutput)
}

// A mapping of labels to assign to the resource. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o BigqueryTableOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The time when this table was last modified, in milliseconds since the epoch.
func (o BigqueryTableOutput) LastModifiedTime() pulumi.Float64Output {
	return o.ApplyT(func(v *BigqueryTable) pulumi.Float64Output { return v.LastModifiedTime }).(pulumi.Float64Output)
}

// The geographic location where the table resides. This value is inherited from the dataset.
func (o BigqueryTableOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// If specified, configures this table as a materialized view.
func (o BigqueryTableOutput) MaterializedView() BigqueryTableMaterializedViewPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) BigqueryTableMaterializedViewPtrOutput { return v.MaterializedView }).(BigqueryTableMaterializedViewPtrOutput)
}

// The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a
// string encoding of [SQL IntervalValue
// type](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-types#interval_type).
func (o BigqueryTableOutput) MaxStaleness() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringPtrOutput { return v.MaxStaleness }).(pulumi.StringPtrOutput)
}

// The geographic location where the table resides. This value is inherited from the dataset.
func (o BigqueryTableOutput) NumBytes() pulumi.Float64Output {
	return o.ApplyT(func(v *BigqueryTable) pulumi.Float64Output { return v.NumBytes }).(pulumi.Float64Output)
}

// The number of bytes in the table that are considered "long-term storage".
func (o BigqueryTableOutput) NumLongTermBytes() pulumi.Float64Output {
	return o.ApplyT(func(v *BigqueryTable) pulumi.Float64Output { return v.NumLongTermBytes }).(pulumi.Float64Output)
}

// The number of rows of data in this table, excluding any data in the streaming buffer.
func (o BigqueryTableOutput) NumRows() pulumi.Float64Output {
	return o.ApplyT(func(v *BigqueryTable) pulumi.Float64Output { return v.NumRows }).(pulumi.Float64Output)
}

// The ID of the project in which the resource belongs.
func (o BigqueryTableOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// If specified, configures range-based partitioning for this table.
func (o BigqueryTableOutput) RangePartitioning() BigqueryTableRangePartitioningPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) BigqueryTableRangePartitioningPtrOutput { return v.RangePartitioning }).(BigqueryTableRangePartitioningPtrOutput)
}

// If set to true, queries over this table require a partition filter that can be used for partition elimination to be
// specified.
func (o BigqueryTableOutput) RequirePartitionFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.BoolPtrOutput { return v.RequirePartitionFilter }).(pulumi.BoolPtrOutput)
}

// The tags attached to this table. Tag keys are globally unique. Tag key is expected to be in the namespaced format, for
// example "123456789012/environment" where 123456789012 is the ID of the parent organization or project resource for this
// tag key. Tag value is expected to be the short name, for example "Production".
func (o BigqueryTableOutput) ResourceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringMapOutput { return v.ResourceTags }).(pulumi.StringMapOutput)
}

// A JSON schema for the table.
func (o BigqueryTableOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringOutput { return v.Schema }).(pulumi.StringOutput)
}

// The URI of the created resource.
func (o BigqueryTableOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// Defines the primary key and foreign keys.
func (o BigqueryTableOutput) TableConstraints() BigqueryTableTableConstraintsPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) BigqueryTableTableConstraintsPtrOutput { return v.TableConstraints }).(BigqueryTableTableConstraintsPtrOutput)
}

// A unique ID for the resource. Changing this forces a new resource to be created.
func (o BigqueryTableOutput) TableId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringOutput { return v.TableId }).(pulumi.StringOutput)
}

// Replication info of a table created using "AS REPLICA" DDL like: "CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv".
func (o BigqueryTableOutput) TableReplicationInfo() BigqueryTableTableReplicationInfoPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) BigqueryTableTableReplicationInfoPtrOutput { return v.TableReplicationInfo }).(BigqueryTableTableReplicationInfoPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o BigqueryTableOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

// If specified, configures time-based partitioning for this table.
func (o BigqueryTableOutput) TimePartitioning() BigqueryTableTimePartitioningPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) BigqueryTableTimePartitioningPtrOutput { return v.TimePartitioning }).(BigqueryTableTimePartitioningPtrOutput)
}

// Describes the table type.
func (o BigqueryTableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTable) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// If specified, configures this table as a view.
func (o BigqueryTableOutput) View() BigqueryTableViewPtrOutput {
	return o.ApplyT(func(v *BigqueryTable) BigqueryTableViewPtrOutput { return v.View }).(BigqueryTableViewPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryTableInput)(nil)).Elem(), &BigqueryTable{})
	pulumi.RegisterOutputType(BigqueryTableOutput{})
}
