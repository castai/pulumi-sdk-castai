// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SqlSourceRepresentationInstance struct {
	pulumi.CustomResourceState

	// The CA certificate on the external server. Include only if SSL/TLS is used on the external server.
	CaCertificate pulumi.StringPtrOutput `pulumi:"caCertificate"`
	// The client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS
	// is used on the external server.
	ClientCertificate pulumi.StringPtrOutput `pulumi:"clientCertificate"`
	// The private key file for the client certificate on the external server. Required only for server-client authentication.
	// Include only if SSL/TLS is used on the external server.
	ClientKey pulumi.StringPtrOutput `pulumi:"clientKey"`
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17. Database Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion pulumi.StringOutput `pulumi:"databaseVersion"`
	// A file in the bucket that contains the data from the external server.
	DumpFilePath pulumi.StringPtrOutput `pulumi:"dumpFilePath"`
	// The IPv4 address and port for the external server, or the the DNS address for the external server. If the external
	// server is hosted on Cloud SQL, the port is 5432.
	Host pulumi.StringOutput `pulumi:"host"`
	// The name of the source representation instance. Use any valid Cloud SQL instance name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The password for the replication user account.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// The externally accessible port for the source database server. Defaults to 3306.
	Port    pulumi.Float64PtrOutput `pulumi:"port"`
	Project pulumi.StringOutput     `pulumi:"project"`
	// The Region in which the created instance should reside. If it is not provided, the provider region is used.
	Region                            pulumi.StringOutput                              `pulumi:"region"`
	SqlSourceRepresentationInstanceId pulumi.StringOutput                              `pulumi:"sqlSourceRepresentationInstanceId"`
	Timeouts                          SqlSourceRepresentationInstanceTimeoutsPtrOutput `pulumi:"timeouts"`
	// The replication user account on the external server.
	Username pulumi.StringPtrOutput `pulumi:"username"`
}

// NewSqlSourceRepresentationInstance registers a new resource with the given unique name, arguments, and options.
func NewSqlSourceRepresentationInstance(ctx *pulumi.Context,
	name string, args *SqlSourceRepresentationInstanceArgs, opts ...pulumi.ResourceOption) (*SqlSourceRepresentationInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseVersion == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseVersion'")
	}
	if args.Host == nil {
		return nil, errors.New("invalid value for required argument 'Host'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SqlSourceRepresentationInstance
	err = ctx.RegisterPackageResource("google:index/sqlSourceRepresentationInstance:SqlSourceRepresentationInstance", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlSourceRepresentationInstance gets an existing SqlSourceRepresentationInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlSourceRepresentationInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlSourceRepresentationInstanceState, opts ...pulumi.ResourceOption) (*SqlSourceRepresentationInstance, error) {
	var resource SqlSourceRepresentationInstance
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/sqlSourceRepresentationInstance:SqlSourceRepresentationInstance", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlSourceRepresentationInstance resources.
type sqlSourceRepresentationInstanceState struct {
	// The CA certificate on the external server. Include only if SSL/TLS is used on the external server.
	CaCertificate *string `pulumi:"caCertificate"`
	// The client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS
	// is used on the external server.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The private key file for the client certificate on the external server. Required only for server-client authentication.
	// Include only if SSL/TLS is used on the external server.
	ClientKey *string `pulumi:"clientKey"`
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17. Database Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion *string `pulumi:"databaseVersion"`
	// A file in the bucket that contains the data from the external server.
	DumpFilePath *string `pulumi:"dumpFilePath"`
	// The IPv4 address and port for the external server, or the the DNS address for the external server. If the external
	// server is hosted on Cloud SQL, the port is 5432.
	Host *string `pulumi:"host"`
	// The name of the source representation instance. Use any valid Cloud SQL instance name.
	Name *string `pulumi:"name"`
	// The password for the replication user account.
	Password *string `pulumi:"password"`
	// The externally accessible port for the source database server. Defaults to 3306.
	Port    *float64 `pulumi:"port"`
	Project *string  `pulumi:"project"`
	// The Region in which the created instance should reside. If it is not provided, the provider region is used.
	Region                            *string                                  `pulumi:"region"`
	SqlSourceRepresentationInstanceId *string                                  `pulumi:"sqlSourceRepresentationInstanceId"`
	Timeouts                          *SqlSourceRepresentationInstanceTimeouts `pulumi:"timeouts"`
	// The replication user account on the external server.
	Username *string `pulumi:"username"`
}

type SqlSourceRepresentationInstanceState struct {
	// The CA certificate on the external server. Include only if SSL/TLS is used on the external server.
	CaCertificate pulumi.StringPtrInput
	// The client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS
	// is used on the external server.
	ClientCertificate pulumi.StringPtrInput
	// The private key file for the client certificate on the external server. Required only for server-client authentication.
	// Include only if SSL/TLS is used on the external server.
	ClientKey pulumi.StringPtrInput
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17. Database Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion pulumi.StringPtrInput
	// A file in the bucket that contains the data from the external server.
	DumpFilePath pulumi.StringPtrInput
	// The IPv4 address and port for the external server, or the the DNS address for the external server. If the external
	// server is hosted on Cloud SQL, the port is 5432.
	Host pulumi.StringPtrInput
	// The name of the source representation instance. Use any valid Cloud SQL instance name.
	Name pulumi.StringPtrInput
	// The password for the replication user account.
	Password pulumi.StringPtrInput
	// The externally accessible port for the source database server. Defaults to 3306.
	Port    pulumi.Float64PtrInput
	Project pulumi.StringPtrInput
	// The Region in which the created instance should reside. If it is not provided, the provider region is used.
	Region                            pulumi.StringPtrInput
	SqlSourceRepresentationInstanceId pulumi.StringPtrInput
	Timeouts                          SqlSourceRepresentationInstanceTimeoutsPtrInput
	// The replication user account on the external server.
	Username pulumi.StringPtrInput
}

func (SqlSourceRepresentationInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlSourceRepresentationInstanceState)(nil)).Elem()
}

type sqlSourceRepresentationInstanceArgs struct {
	// The CA certificate on the external server. Include only if SSL/TLS is used on the external server.
	CaCertificate *string `pulumi:"caCertificate"`
	// The client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS
	// is used on the external server.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The private key file for the client certificate on the external server. Required only for server-client authentication.
	// Include only if SSL/TLS is used on the external server.
	ClientKey *string `pulumi:"clientKey"`
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17. Database Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion string `pulumi:"databaseVersion"`
	// A file in the bucket that contains the data from the external server.
	DumpFilePath *string `pulumi:"dumpFilePath"`
	// The IPv4 address and port for the external server, or the the DNS address for the external server. If the external
	// server is hosted on Cloud SQL, the port is 5432.
	Host string `pulumi:"host"`
	// The name of the source representation instance. Use any valid Cloud SQL instance name.
	Name *string `pulumi:"name"`
	// The password for the replication user account.
	Password *string `pulumi:"password"`
	// The externally accessible port for the source database server. Defaults to 3306.
	Port    *float64 `pulumi:"port"`
	Project *string  `pulumi:"project"`
	// The Region in which the created instance should reside. If it is not provided, the provider region is used.
	Region                            *string                                  `pulumi:"region"`
	SqlSourceRepresentationInstanceId *string                                  `pulumi:"sqlSourceRepresentationInstanceId"`
	Timeouts                          *SqlSourceRepresentationInstanceTimeouts `pulumi:"timeouts"`
	// The replication user account on the external server.
	Username *string `pulumi:"username"`
}

// The set of arguments for constructing a SqlSourceRepresentationInstance resource.
type SqlSourceRepresentationInstanceArgs struct {
	// The CA certificate on the external server. Include only if SSL/TLS is used on the external server.
	CaCertificate pulumi.StringPtrInput
	// The client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS
	// is used on the external server.
	ClientCertificate pulumi.StringPtrInput
	// The private key file for the client certificate on the external server. Required only for server-client authentication.
	// Include only if SSL/TLS is used on the external server.
	ClientKey pulumi.StringPtrInput
	// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
	// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
	// POSTGRES_17. Database Version Policies includes an up-to-date reference of supported versions.
	DatabaseVersion pulumi.StringInput
	// A file in the bucket that contains the data from the external server.
	DumpFilePath pulumi.StringPtrInput
	// The IPv4 address and port for the external server, or the the DNS address for the external server. If the external
	// server is hosted on Cloud SQL, the port is 5432.
	Host pulumi.StringInput
	// The name of the source representation instance. Use any valid Cloud SQL instance name.
	Name pulumi.StringPtrInput
	// The password for the replication user account.
	Password pulumi.StringPtrInput
	// The externally accessible port for the source database server. Defaults to 3306.
	Port    pulumi.Float64PtrInput
	Project pulumi.StringPtrInput
	// The Region in which the created instance should reside. If it is not provided, the provider region is used.
	Region                            pulumi.StringPtrInput
	SqlSourceRepresentationInstanceId pulumi.StringPtrInput
	Timeouts                          SqlSourceRepresentationInstanceTimeoutsPtrInput
	// The replication user account on the external server.
	Username pulumi.StringPtrInput
}

func (SqlSourceRepresentationInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlSourceRepresentationInstanceArgs)(nil)).Elem()
}

type SqlSourceRepresentationInstanceInput interface {
	pulumi.Input

	ToSqlSourceRepresentationInstanceOutput() SqlSourceRepresentationInstanceOutput
	ToSqlSourceRepresentationInstanceOutputWithContext(ctx context.Context) SqlSourceRepresentationInstanceOutput
}

func (*SqlSourceRepresentationInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlSourceRepresentationInstance)(nil)).Elem()
}

func (i *SqlSourceRepresentationInstance) ToSqlSourceRepresentationInstanceOutput() SqlSourceRepresentationInstanceOutput {
	return i.ToSqlSourceRepresentationInstanceOutputWithContext(context.Background())
}

func (i *SqlSourceRepresentationInstance) ToSqlSourceRepresentationInstanceOutputWithContext(ctx context.Context) SqlSourceRepresentationInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlSourceRepresentationInstanceOutput)
}

type SqlSourceRepresentationInstanceOutput struct{ *pulumi.OutputState }

func (SqlSourceRepresentationInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlSourceRepresentationInstance)(nil)).Elem()
}

func (o SqlSourceRepresentationInstanceOutput) ToSqlSourceRepresentationInstanceOutput() SqlSourceRepresentationInstanceOutput {
	return o
}

func (o SqlSourceRepresentationInstanceOutput) ToSqlSourceRepresentationInstanceOutputWithContext(ctx context.Context) SqlSourceRepresentationInstanceOutput {
	return o
}

// The CA certificate on the external server. Include only if SSL/TLS is used on the external server.
func (o SqlSourceRepresentationInstanceOutput) CaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringPtrOutput { return v.CaCertificate }).(pulumi.StringPtrOutput)
}

// The client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS
// is used on the external server.
func (o SqlSourceRepresentationInstanceOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringPtrOutput { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The private key file for the client certificate on the external server. Required only for server-client authentication.
// Include only if SSL/TLS is used on the external server.
func (o SqlSourceRepresentationInstanceOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringPtrOutput { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0,
// MYSQL_8_4, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, POSTGRES_16,
// POSTGRES_17. Database Version Policies includes an up-to-date reference of supported versions.
func (o SqlSourceRepresentationInstanceOutput) DatabaseVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringOutput { return v.DatabaseVersion }).(pulumi.StringOutput)
}

// A file in the bucket that contains the data from the external server.
func (o SqlSourceRepresentationInstanceOutput) DumpFilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringPtrOutput { return v.DumpFilePath }).(pulumi.StringPtrOutput)
}

// The IPv4 address and port for the external server, or the the DNS address for the external server. If the external
// server is hosted on Cloud SQL, the port is 5432.
func (o SqlSourceRepresentationInstanceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// The name of the source representation instance. Use any valid Cloud SQL instance name.
func (o SqlSourceRepresentationInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The password for the replication user account.
func (o SqlSourceRepresentationInstanceOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// The externally accessible port for the source database server. Defaults to 3306.
func (o SqlSourceRepresentationInstanceOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.Float64PtrOutput { return v.Port }).(pulumi.Float64PtrOutput)
}

func (o SqlSourceRepresentationInstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The Region in which the created instance should reside. If it is not provided, the provider region is used.
func (o SqlSourceRepresentationInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o SqlSourceRepresentationInstanceOutput) SqlSourceRepresentationInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringOutput {
		return v.SqlSourceRepresentationInstanceId
	}).(pulumi.StringOutput)
}

func (o SqlSourceRepresentationInstanceOutput) Timeouts() SqlSourceRepresentationInstanceTimeoutsPtrOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) SqlSourceRepresentationInstanceTimeoutsPtrOutput {
		return v.Timeouts
	}).(SqlSourceRepresentationInstanceTimeoutsPtrOutput)
}

// The replication user account on the external server.
func (o SqlSourceRepresentationInstanceOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SqlSourceRepresentationInstance) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SqlSourceRepresentationInstanceInput)(nil)).Elem(), &SqlSourceRepresentationInstance{})
	pulumi.RegisterOutputType(SqlSourceRepresentationInstanceOutput{})
}
