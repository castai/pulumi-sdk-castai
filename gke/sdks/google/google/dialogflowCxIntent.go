// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DialogflowCxIntent struct {
	pulumi.CustomResourceState

	// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character
	// limit: 140 characters.
	Description          pulumi.StringPtrOutput `pulumi:"description"`
	DialogflowCxIntentId pulumi.StringOutput    `pulumi:"dialogflowCxIntentId"`
	// The human-readable name of the intent, unique within the agent.
	DisplayName     pulumi.StringOutput    `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Marks this as the [Default Negative Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#negative) for an
	// agent. When you create an agent, a Default Negative Intent is created automatically. The Default Negative Intent cannot
	// be deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_negative_intent =
	// true' because they will compete to control a single Default Negative Intent resource in GCP.
	IsDefaultNegativeIntent pulumi.BoolPtrOutput `pulumi:"isDefaultNegativeIntent"`
	// Marks this as the [Default Welcome Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#welcome) for an
	// agent. When you create an agent, a Default Welcome Intent is created automatically. The Default Welcome Intent cannot be
	// deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_welcome_intent = true'
	// because they will compete to control a single Default Welcome Intent resource in GCP.
	IsDefaultWelcomeIntent pulumi.BoolPtrOutput `pulumi:"isDefaultWelcomeIntent"`
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is
	// added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are
	// mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match
	// event. To manage the fallback intent, set 'is_default_negative_intent = true'
	IsFallback pulumi.BoolPtrOutput `pulumi:"isFallback"`
	// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'.
	// International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and
	// values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
	// labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require
	// value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent. An object
	// containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The language of the following fields in intent: Intent.training_phrases.parts.text If not specified, the agent's default
	// language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode pulumi.StringPtrOutput `pulumi:"languageCode"`
	// The unique identifier of the intent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
	// ID>/intents/<Intent ID>.
	Name pulumi.StringOutput `pulumi:"name"`
	// The collection of parameters associated with the intent.
	Parameters DialogflowCxIntentParameterArrayOutput `pulumi:"parameters"`
	// The agent to create an intent for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent pulumi.StringPtrOutput `pulumi:"parent"`
	// The priority of this intent. Higher numbers represent higher priorities. If the supplied value is unspecified or 0, the
	// service translates the value to 500,000, which corresponds to the Normal priority in the console. If the supplied value
	// is negative, the intent is ignored in runtime detect intent requests.
	Priority pulumi.Float64PtrOutput `pulumi:"priority"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput              `pulumi:"terraformLabels"`
	Timeouts        DialogflowCxIntentTimeoutsPtrOutput `pulumi:"timeouts"`
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases DialogflowCxIntentTrainingPhraseArrayOutput `pulumi:"trainingPhrases"`
}

// NewDialogflowCxIntent registers a new resource with the given unique name, arguments, and options.
func NewDialogflowCxIntent(ctx *pulumi.Context,
	name string, args *DialogflowCxIntentArgs, opts ...pulumi.ResourceOption) (*DialogflowCxIntent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DialogflowCxIntent
	err = ctx.RegisterPackageResource("google:index/dialogflowCxIntent:DialogflowCxIntent", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDialogflowCxIntent gets an existing DialogflowCxIntent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDialogflowCxIntent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DialogflowCxIntentState, opts ...pulumi.ResourceOption) (*DialogflowCxIntent, error) {
	var resource DialogflowCxIntent
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dialogflowCxIntent:DialogflowCxIntent", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DialogflowCxIntent resources.
type dialogflowCxIntentState struct {
	// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character
	// limit: 140 characters.
	Description          *string `pulumi:"description"`
	DialogflowCxIntentId *string `pulumi:"dialogflowCxIntentId"`
	// The human-readable name of the intent, unique within the agent.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Marks this as the [Default Negative Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#negative) for an
	// agent. When you create an agent, a Default Negative Intent is created automatically. The Default Negative Intent cannot
	// be deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_negative_intent =
	// true' because they will compete to control a single Default Negative Intent resource in GCP.
	IsDefaultNegativeIntent *bool `pulumi:"isDefaultNegativeIntent"`
	// Marks this as the [Default Welcome Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#welcome) for an
	// agent. When you create an agent, a Default Welcome Intent is created automatically. The Default Welcome Intent cannot be
	// deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_welcome_intent = true'
	// because they will compete to control a single Default Welcome Intent resource in GCP.
	IsDefaultWelcomeIntent *bool `pulumi:"isDefaultWelcomeIntent"`
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is
	// added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are
	// mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match
	// event. To manage the fallback intent, set 'is_default_negative_intent = true'
	IsFallback *bool `pulumi:"isFallback"`
	// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'.
	// International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and
	// values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
	// labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require
	// value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent. An object
	// containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The language of the following fields in intent: Intent.training_phrases.parts.text If not specified, the agent's default
	// language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode *string `pulumi:"languageCode"`
	// The unique identifier of the intent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
	// ID>/intents/<Intent ID>.
	Name *string `pulumi:"name"`
	// The collection of parameters associated with the intent.
	Parameters []DialogflowCxIntentParameter `pulumi:"parameters"`
	// The agent to create an intent for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent *string `pulumi:"parent"`
	// The priority of this intent. Higher numbers represent higher priorities. If the supplied value is unspecified or 0, the
	// service translates the value to 500,000, which corresponds to the Normal priority in the console. If the supplied value
	// is negative, the intent is ignored in runtime detect intent requests.
	Priority *float64 `pulumi:"priority"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string           `pulumi:"terraformLabels"`
	Timeouts        *DialogflowCxIntentTimeouts `pulumi:"timeouts"`
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases []DialogflowCxIntentTrainingPhrase `pulumi:"trainingPhrases"`
}

type DialogflowCxIntentState struct {
	// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character
	// limit: 140 characters.
	Description          pulumi.StringPtrInput
	DialogflowCxIntentId pulumi.StringPtrInput
	// The human-readable name of the intent, unique within the agent.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Marks this as the [Default Negative Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#negative) for an
	// agent. When you create an agent, a Default Negative Intent is created automatically. The Default Negative Intent cannot
	// be deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_negative_intent =
	// true' because they will compete to control a single Default Negative Intent resource in GCP.
	IsDefaultNegativeIntent pulumi.BoolPtrInput
	// Marks this as the [Default Welcome Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#welcome) for an
	// agent. When you create an agent, a Default Welcome Intent is created automatically. The Default Welcome Intent cannot be
	// deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_welcome_intent = true'
	// because they will compete to control a single Default Welcome Intent resource in GCP.
	IsDefaultWelcomeIntent pulumi.BoolPtrInput
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is
	// added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are
	// mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match
	// event. To manage the fallback intent, set 'is_default_negative_intent = true'
	IsFallback pulumi.BoolPtrInput
	// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'.
	// International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and
	// values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
	// labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require
	// value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent. An object
	// containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The language of the following fields in intent: Intent.training_phrases.parts.text If not specified, the agent's default
	// language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode pulumi.StringPtrInput
	// The unique identifier of the intent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
	// ID>/intents/<Intent ID>.
	Name pulumi.StringPtrInput
	// The collection of parameters associated with the intent.
	Parameters DialogflowCxIntentParameterArrayInput
	// The agent to create an intent for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent pulumi.StringPtrInput
	// The priority of this intent. Higher numbers represent higher priorities. If the supplied value is unspecified or 0, the
	// service translates the value to 500,000, which corresponds to the Normal priority in the console. If the supplied value
	// is negative, the intent is ignored in runtime detect intent requests.
	Priority pulumi.Float64PtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        DialogflowCxIntentTimeoutsPtrInput
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases DialogflowCxIntentTrainingPhraseArrayInput
}

func (DialogflowCxIntentState) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowCxIntentState)(nil)).Elem()
}

type dialogflowCxIntentArgs struct {
	// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character
	// limit: 140 characters.
	Description          *string `pulumi:"description"`
	DialogflowCxIntentId *string `pulumi:"dialogflowCxIntentId"`
	// The human-readable name of the intent, unique within the agent.
	DisplayName string `pulumi:"displayName"`
	// Marks this as the [Default Negative Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#negative) for an
	// agent. When you create an agent, a Default Negative Intent is created automatically. The Default Negative Intent cannot
	// be deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_negative_intent =
	// true' because they will compete to control a single Default Negative Intent resource in GCP.
	IsDefaultNegativeIntent *bool `pulumi:"isDefaultNegativeIntent"`
	// Marks this as the [Default Welcome Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#welcome) for an
	// agent. When you create an agent, a Default Welcome Intent is created automatically. The Default Welcome Intent cannot be
	// deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_welcome_intent = true'
	// because they will compete to control a single Default Welcome Intent resource in GCP.
	IsDefaultWelcomeIntent *bool `pulumi:"isDefaultWelcomeIntent"`
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is
	// added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are
	// mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match
	// event. To manage the fallback intent, set 'is_default_negative_intent = true'
	IsFallback *bool `pulumi:"isFallback"`
	// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'.
	// International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and
	// values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
	// labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require
	// value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent. An object
	// containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// The language of the following fields in intent: Intent.training_phrases.parts.text If not specified, the agent's default
	// language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode *string `pulumi:"languageCode"`
	// The collection of parameters associated with the intent.
	Parameters []DialogflowCxIntentParameter `pulumi:"parameters"`
	// The agent to create an intent for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent *string `pulumi:"parent"`
	// The priority of this intent. Higher numbers represent higher priorities. If the supplied value is unspecified or 0, the
	// service translates the value to 500,000, which corresponds to the Normal priority in the console. If the supplied value
	// is negative, the intent is ignored in runtime detect intent requests.
	Priority *float64                    `pulumi:"priority"`
	Timeouts *DialogflowCxIntentTimeouts `pulumi:"timeouts"`
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases []DialogflowCxIntentTrainingPhrase `pulumi:"trainingPhrases"`
}

// The set of arguments for constructing a DialogflowCxIntent resource.
type DialogflowCxIntentArgs struct {
	// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character
	// limit: 140 characters.
	Description          pulumi.StringPtrInput
	DialogflowCxIntentId pulumi.StringPtrInput
	// The human-readable name of the intent, unique within the agent.
	DisplayName pulumi.StringInput
	// Marks this as the [Default Negative Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#negative) for an
	// agent. When you create an agent, a Default Negative Intent is created automatically. The Default Negative Intent cannot
	// be deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_negative_intent =
	// true' because they will compete to control a single Default Negative Intent resource in GCP.
	IsDefaultNegativeIntent pulumi.BoolPtrInput
	// Marks this as the [Default Welcome Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#welcome) for an
	// agent. When you create an agent, a Default Welcome Intent is created automatically. The Default Welcome Intent cannot be
	// deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
	// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_welcome_intent = true'
	// because they will compete to control a single Default Welcome Intent resource in GCP.
	IsDefaultWelcomeIntent pulumi.BoolPtrInput
	// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is
	// added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are
	// mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match
	// event. To manage the fallback intent, set 'is_default_negative_intent = true'
	IsFallback pulumi.BoolPtrInput
	// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'.
	// International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and
	// values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
	// labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require
	// value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent. An object
	// containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This
	// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// The language of the following fields in intent: Intent.training_phrases.parts.text If not specified, the agent's default
	// language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
	LanguageCode pulumi.StringPtrInput
	// The collection of parameters associated with the intent.
	Parameters DialogflowCxIntentParameterArrayInput
	// The agent to create an intent for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
	Parent pulumi.StringPtrInput
	// The priority of this intent. Higher numbers represent higher priorities. If the supplied value is unspecified or 0, the
	// service translates the value to 500,000, which corresponds to the Normal priority in the console. If the supplied value
	// is negative, the intent is ignored in runtime detect intent requests.
	Priority pulumi.Float64PtrInput
	Timeouts DialogflowCxIntentTimeoutsPtrInput
	// The collection of training phrases the agent is trained on to identify the intent.
	TrainingPhrases DialogflowCxIntentTrainingPhraseArrayInput
}

func (DialogflowCxIntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dialogflowCxIntentArgs)(nil)).Elem()
}

type DialogflowCxIntentInput interface {
	pulumi.Input

	ToDialogflowCxIntentOutput() DialogflowCxIntentOutput
	ToDialogflowCxIntentOutputWithContext(ctx context.Context) DialogflowCxIntentOutput
}

func (*DialogflowCxIntent) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowCxIntent)(nil)).Elem()
}

func (i *DialogflowCxIntent) ToDialogflowCxIntentOutput() DialogflowCxIntentOutput {
	return i.ToDialogflowCxIntentOutputWithContext(context.Background())
}

func (i *DialogflowCxIntent) ToDialogflowCxIntentOutputWithContext(ctx context.Context) DialogflowCxIntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DialogflowCxIntentOutput)
}

type DialogflowCxIntentOutput struct{ *pulumi.OutputState }

func (DialogflowCxIntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DialogflowCxIntent)(nil)).Elem()
}

func (o DialogflowCxIntentOutput) ToDialogflowCxIntentOutput() DialogflowCxIntentOutput {
	return o
}

func (o DialogflowCxIntentOutput) ToDialogflowCxIntentOutputWithContext(ctx context.Context) DialogflowCxIntentOutput {
	return o
}

// Human readable description for better understanding an intent like its scope, content, result etc. Maximum character
// limit: 140 characters.
func (o DialogflowCxIntentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DialogflowCxIntentOutput) DialogflowCxIntentId() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.StringOutput { return v.DialogflowCxIntentId }).(pulumi.StringOutput)
}

// The human-readable name of the intent, unique within the agent.
func (o DialogflowCxIntentOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o DialogflowCxIntentOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Marks this as the [Default Negative Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#negative) for an
// agent. When you create an agent, a Default Negative Intent is created automatically. The Default Negative Intent cannot
// be deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_negative_intent =
// true' because they will compete to control a single Default Negative Intent resource in GCP.
func (o DialogflowCxIntentOutput) IsDefaultNegativeIntent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.BoolPtrOutput { return v.IsDefaultNegativeIntent }).(pulumi.BoolPtrOutput)
}

// Marks this as the [Default Welcome Intent](https://cloud.google.com/dialogflow/cx/docs/concept/intent#welcome) for an
// agent. When you create an agent, a Default Welcome Intent is created automatically. The Default Welcome Intent cannot be
// deleted; deleting the 'google_dialogflow_cx_intent' resource does nothing to the underlying GCP resources. > Avoid
// having multiple 'google_dialogflow_cx_intent' resources linked to the same agent with 'is_default_welcome_intent = true'
// because they will compete to control a single Default Welcome Intent resource in GCP.
func (o DialogflowCxIntentOutput) IsDefaultWelcomeIntent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.BoolPtrOutput { return v.IsDefaultWelcomeIntent }).(pulumi.BoolPtrOutput)
}

// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is
// added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are
// mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match
// event. To manage the fallback intent, set 'is_default_negative_intent = true'
func (o DialogflowCxIntentOutput) IsFallback() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.BoolPtrOutput { return v.IsFallback }).(pulumi.BoolPtrOutput)
}

// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'.
// International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and
// values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-" is reserved for Dialogflow defined
// labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require
// value. "sys-head" means the intent is a head intent. "sys.contextual" means the intent is a contextual intent. An object
// containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }. **Note**: This
// field is non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o DialogflowCxIntentOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The language of the following fields in intent: Intent.training_phrases.parts.text If not specified, the agent's default
// language is used. Many languages are supported. Note: languages must be enabled in the agent before they can be used.
func (o DialogflowCxIntentOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.StringPtrOutput { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

// The unique identifier of the intent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent
// ID>/intents/<Intent ID>.
func (o DialogflowCxIntentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The collection of parameters associated with the intent.
func (o DialogflowCxIntentOutput) Parameters() DialogflowCxIntentParameterArrayOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) DialogflowCxIntentParameterArrayOutput { return v.Parameters }).(DialogflowCxIntentParameterArrayOutput)
}

// The agent to create an intent for. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.
func (o DialogflowCxIntentOutput) Parent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.StringPtrOutput { return v.Parent }).(pulumi.StringPtrOutput)
}

// The priority of this intent. Higher numbers represent higher priorities. If the supplied value is unspecified or 0, the
// service translates the value to 500,000, which corresponds to the Normal priority in the console. If the supplied value
// is negative, the intent is ignored in runtime detect intent requests.
func (o DialogflowCxIntentOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.Float64PtrOutput { return v.Priority }).(pulumi.Float64PtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o DialogflowCxIntentOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o DialogflowCxIntentOutput) Timeouts() DialogflowCxIntentTimeoutsPtrOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) DialogflowCxIntentTimeoutsPtrOutput { return v.Timeouts }).(DialogflowCxIntentTimeoutsPtrOutput)
}

// The collection of training phrases the agent is trained on to identify the intent.
func (o DialogflowCxIntentOutput) TrainingPhrases() DialogflowCxIntentTrainingPhraseArrayOutput {
	return o.ApplyT(func(v *DialogflowCxIntent) DialogflowCxIntentTrainingPhraseArrayOutput { return v.TrainingPhrases }).(DialogflowCxIntentTrainingPhraseArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DialogflowCxIntentInput)(nil)).Elem(), &DialogflowCxIntent{})
	pulumi.RegisterOutputType(DialogflowCxIntentOutput{})
}
