// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBigtableTableIamPolicy(ctx *pulumi.Context, args *LookupBigtableTableIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupBigtableTableIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupBigtableTableIamPolicyResult
	err = ctx.InvokePackage("google:index/getBigtableTableIamPolicy:getBigtableTableIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBigtableTableIamPolicy.
type LookupBigtableTableIamPolicyArgs struct {
	Id       *string `pulumi:"id"`
	Instance string  `pulumi:"instance"`
	Project  *string `pulumi:"project"`
	Table    string  `pulumi:"table"`
}

// A collection of values returned by getBigtableTableIamPolicy.
type LookupBigtableTableIamPolicyResult struct {
	Etag       string `pulumi:"etag"`
	Id         string `pulumi:"id"`
	Instance   string `pulumi:"instance"`
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
	Table      string `pulumi:"table"`
}

func LookupBigtableTableIamPolicyOutput(ctx *pulumi.Context, args LookupBigtableTableIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupBigtableTableIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBigtableTableIamPolicyResultOutput, error) {
			args := v.(LookupBigtableTableIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupBigtableTableIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getBigtableTableIamPolicy:getBigtableTableIamPolicy", args, LookupBigtableTableIamPolicyResultOutput{}, options).(LookupBigtableTableIamPolicyResultOutput), nil
		}).(LookupBigtableTableIamPolicyResultOutput)
}

// A collection of arguments for invoking getBigtableTableIamPolicy.
type LookupBigtableTableIamPolicyOutputArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Instance pulumi.StringInput    `pulumi:"instance"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
	Table    pulumi.StringInput    `pulumi:"table"`
}

func (LookupBigtableTableIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBigtableTableIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getBigtableTableIamPolicy.
type LookupBigtableTableIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupBigtableTableIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBigtableTableIamPolicyResult)(nil)).Elem()
}

func (o LookupBigtableTableIamPolicyResultOutput) ToLookupBigtableTableIamPolicyResultOutput() LookupBigtableTableIamPolicyResultOutput {
	return o
}

func (o LookupBigtableTableIamPolicyResultOutput) ToLookupBigtableTableIamPolicyResultOutputWithContext(ctx context.Context) LookupBigtableTableIamPolicyResultOutput {
	return o
}

func (o LookupBigtableTableIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigtableTableIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupBigtableTableIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigtableTableIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBigtableTableIamPolicyResultOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigtableTableIamPolicyResult) string { return v.Instance }).(pulumi.StringOutput)
}

func (o LookupBigtableTableIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigtableTableIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupBigtableTableIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigtableTableIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o LookupBigtableTableIamPolicyResultOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBigtableTableIamPolicyResult) string { return v.Table }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBigtableTableIamPolicyResultOutput{})
}
