// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudIdsEndpoint struct {
	pulumi.CustomResourceState

	CloudIdsEndpointId pulumi.StringOutput `pulumi:"cloudIdsEndpointId"`
	// Creation timestamp in RFC 3339 text format.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// An optional description of the endpoint.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// URL of the endpoint's network address to which traffic is to be sent by Packet Mirroring.
	EndpointForwardingRule pulumi.StringOutput `pulumi:"endpointForwardingRule"`
	// Internal IP address of the endpoint's network entry point.
	EndpointIp pulumi.StringOutput `pulumi:"endpointIp"`
	// The location for the endpoint.
	Location pulumi.StringOutput `pulumi:"location"`
	// Name of the endpoint in the format projects/{project_id}/locations/{locationId}/endpoints/{endpointId}.
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the VPC network that is connected to the IDS endpoint. This can either contain the VPC network name itself (like
	// "src-net") or the full URL to the network (like "projects/{project_id}/global/networks/src-net").
	Network pulumi.StringOutput `pulumi:"network"`
	Project pulumi.StringOutput `pulumi:"project"`
	// The minimum alert severity level that is reported by the endpoint. Possible values: ["INFORMATIONAL", "LOW", "MEDIUM",
	// "HIGH", "CRITICAL"]
	Severity pulumi.StringOutput `pulumi:"severity"`
	// Configuration for threat IDs excluded from generating alerts. Limit: 99 IDs.
	ThreatExceptions pulumi.StringArrayOutput          `pulumi:"threatExceptions"`
	Timeouts         CloudIdsEndpointTimeoutsPtrOutput `pulumi:"timeouts"`
	// Last update timestamp in RFC 3339 text format.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewCloudIdsEndpoint registers a new resource with the given unique name, arguments, and options.
func NewCloudIdsEndpoint(ctx *pulumi.Context,
	name string, args *CloudIdsEndpointArgs, opts ...pulumi.ResourceOption) (*CloudIdsEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.Severity == nil {
		return nil, errors.New("invalid value for required argument 'Severity'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudIdsEndpoint
	err = ctx.RegisterPackageResource("google:index/cloudIdsEndpoint:CloudIdsEndpoint", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudIdsEndpoint gets an existing CloudIdsEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudIdsEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudIdsEndpointState, opts ...pulumi.ResourceOption) (*CloudIdsEndpoint, error) {
	var resource CloudIdsEndpoint
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudIdsEndpoint:CloudIdsEndpoint", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudIdsEndpoint resources.
type cloudIdsEndpointState struct {
	CloudIdsEndpointId *string `pulumi:"cloudIdsEndpointId"`
	// Creation timestamp in RFC 3339 text format.
	CreateTime *string `pulumi:"createTime"`
	// An optional description of the endpoint.
	Description *string `pulumi:"description"`
	// URL of the endpoint's network address to which traffic is to be sent by Packet Mirroring.
	EndpointForwardingRule *string `pulumi:"endpointForwardingRule"`
	// Internal IP address of the endpoint's network entry point.
	EndpointIp *string `pulumi:"endpointIp"`
	// The location for the endpoint.
	Location *string `pulumi:"location"`
	// Name of the endpoint in the format projects/{project_id}/locations/{locationId}/endpoints/{endpointId}.
	Name *string `pulumi:"name"`
	// Name of the VPC network that is connected to the IDS endpoint. This can either contain the VPC network name itself (like
	// "src-net") or the full URL to the network (like "projects/{project_id}/global/networks/src-net").
	Network *string `pulumi:"network"`
	Project *string `pulumi:"project"`
	// The minimum alert severity level that is reported by the endpoint. Possible values: ["INFORMATIONAL", "LOW", "MEDIUM",
	// "HIGH", "CRITICAL"]
	Severity *string `pulumi:"severity"`
	// Configuration for threat IDs excluded from generating alerts. Limit: 99 IDs.
	ThreatExceptions []string                  `pulumi:"threatExceptions"`
	Timeouts         *CloudIdsEndpointTimeouts `pulumi:"timeouts"`
	// Last update timestamp in RFC 3339 text format.
	UpdateTime *string `pulumi:"updateTime"`
}

type CloudIdsEndpointState struct {
	CloudIdsEndpointId pulumi.StringPtrInput
	// Creation timestamp in RFC 3339 text format.
	CreateTime pulumi.StringPtrInput
	// An optional description of the endpoint.
	Description pulumi.StringPtrInput
	// URL of the endpoint's network address to which traffic is to be sent by Packet Mirroring.
	EndpointForwardingRule pulumi.StringPtrInput
	// Internal IP address of the endpoint's network entry point.
	EndpointIp pulumi.StringPtrInput
	// The location for the endpoint.
	Location pulumi.StringPtrInput
	// Name of the endpoint in the format projects/{project_id}/locations/{locationId}/endpoints/{endpointId}.
	Name pulumi.StringPtrInput
	// Name of the VPC network that is connected to the IDS endpoint. This can either contain the VPC network name itself (like
	// "src-net") or the full URL to the network (like "projects/{project_id}/global/networks/src-net").
	Network pulumi.StringPtrInput
	Project pulumi.StringPtrInput
	// The minimum alert severity level that is reported by the endpoint. Possible values: ["INFORMATIONAL", "LOW", "MEDIUM",
	// "HIGH", "CRITICAL"]
	Severity pulumi.StringPtrInput
	// Configuration for threat IDs excluded from generating alerts. Limit: 99 IDs.
	ThreatExceptions pulumi.StringArrayInput
	Timeouts         CloudIdsEndpointTimeoutsPtrInput
	// Last update timestamp in RFC 3339 text format.
	UpdateTime pulumi.StringPtrInput
}

func (CloudIdsEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIdsEndpointState)(nil)).Elem()
}

type cloudIdsEndpointArgs struct {
	CloudIdsEndpointId *string `pulumi:"cloudIdsEndpointId"`
	// An optional description of the endpoint.
	Description *string `pulumi:"description"`
	// The location for the endpoint.
	Location string `pulumi:"location"`
	// Name of the endpoint in the format projects/{project_id}/locations/{locationId}/endpoints/{endpointId}.
	Name *string `pulumi:"name"`
	// Name of the VPC network that is connected to the IDS endpoint. This can either contain the VPC network name itself (like
	// "src-net") or the full URL to the network (like "projects/{project_id}/global/networks/src-net").
	Network string  `pulumi:"network"`
	Project *string `pulumi:"project"`
	// The minimum alert severity level that is reported by the endpoint. Possible values: ["INFORMATIONAL", "LOW", "MEDIUM",
	// "HIGH", "CRITICAL"]
	Severity string `pulumi:"severity"`
	// Configuration for threat IDs excluded from generating alerts. Limit: 99 IDs.
	ThreatExceptions []string                  `pulumi:"threatExceptions"`
	Timeouts         *CloudIdsEndpointTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a CloudIdsEndpoint resource.
type CloudIdsEndpointArgs struct {
	CloudIdsEndpointId pulumi.StringPtrInput
	// An optional description of the endpoint.
	Description pulumi.StringPtrInput
	// The location for the endpoint.
	Location pulumi.StringInput
	// Name of the endpoint in the format projects/{project_id}/locations/{locationId}/endpoints/{endpointId}.
	Name pulumi.StringPtrInput
	// Name of the VPC network that is connected to the IDS endpoint. This can either contain the VPC network name itself (like
	// "src-net") or the full URL to the network (like "projects/{project_id}/global/networks/src-net").
	Network pulumi.StringInput
	Project pulumi.StringPtrInput
	// The minimum alert severity level that is reported by the endpoint. Possible values: ["INFORMATIONAL", "LOW", "MEDIUM",
	// "HIGH", "CRITICAL"]
	Severity pulumi.StringInput
	// Configuration for threat IDs excluded from generating alerts. Limit: 99 IDs.
	ThreatExceptions pulumi.StringArrayInput
	Timeouts         CloudIdsEndpointTimeoutsPtrInput
}

func (CloudIdsEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudIdsEndpointArgs)(nil)).Elem()
}

type CloudIdsEndpointInput interface {
	pulumi.Input

	ToCloudIdsEndpointOutput() CloudIdsEndpointOutput
	ToCloudIdsEndpointOutputWithContext(ctx context.Context) CloudIdsEndpointOutput
}

func (*CloudIdsEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudIdsEndpoint)(nil)).Elem()
}

func (i *CloudIdsEndpoint) ToCloudIdsEndpointOutput() CloudIdsEndpointOutput {
	return i.ToCloudIdsEndpointOutputWithContext(context.Background())
}

func (i *CloudIdsEndpoint) ToCloudIdsEndpointOutputWithContext(ctx context.Context) CloudIdsEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudIdsEndpointOutput)
}

type CloudIdsEndpointOutput struct{ *pulumi.OutputState }

func (CloudIdsEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudIdsEndpoint)(nil)).Elem()
}

func (o CloudIdsEndpointOutput) ToCloudIdsEndpointOutput() CloudIdsEndpointOutput {
	return o
}

func (o CloudIdsEndpointOutput) ToCloudIdsEndpointOutputWithContext(ctx context.Context) CloudIdsEndpointOutput {
	return o
}

func (o CloudIdsEndpointOutput) CloudIdsEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.CloudIdsEndpointId }).(pulumi.StringOutput)
}

// Creation timestamp in RFC 3339 text format.
func (o CloudIdsEndpointOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// An optional description of the endpoint.
func (o CloudIdsEndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// URL of the endpoint's network address to which traffic is to be sent by Packet Mirroring.
func (o CloudIdsEndpointOutput) EndpointForwardingRule() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.EndpointForwardingRule }).(pulumi.StringOutput)
}

// Internal IP address of the endpoint's network entry point.
func (o CloudIdsEndpointOutput) EndpointIp() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.EndpointIp }).(pulumi.StringOutput)
}

// The location for the endpoint.
func (o CloudIdsEndpointOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Name of the endpoint in the format projects/{project_id}/locations/{locationId}/endpoints/{endpointId}.
func (o CloudIdsEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the VPC network that is connected to the IDS endpoint. This can either contain the VPC network name itself (like
// "src-net") or the full URL to the network (like "projects/{project_id}/global/networks/src-net").
func (o CloudIdsEndpointOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o CloudIdsEndpointOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The minimum alert severity level that is reported by the endpoint. Possible values: ["INFORMATIONAL", "LOW", "MEDIUM",
// "HIGH", "CRITICAL"]
func (o CloudIdsEndpointOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.Severity }).(pulumi.StringOutput)
}

// Configuration for threat IDs excluded from generating alerts. Limit: 99 IDs.
func (o CloudIdsEndpointOutput) ThreatExceptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringArrayOutput { return v.ThreatExceptions }).(pulumi.StringArrayOutput)
}

func (o CloudIdsEndpointOutput) Timeouts() CloudIdsEndpointTimeoutsPtrOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) CloudIdsEndpointTimeoutsPtrOutput { return v.Timeouts }).(CloudIdsEndpointTimeoutsPtrOutput)
}

// Last update timestamp in RFC 3339 text format.
func (o CloudIdsEndpointOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudIdsEndpoint) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudIdsEndpointInput)(nil)).Elem(), &CloudIdsEndpoint{})
	pulumi.RegisterOutputType(CloudIdsEndpointOutput{})
}
