// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BigqueryTableIamBinding struct {
	pulumi.CustomResourceState

	BigqueryTableIamBindingId pulumi.StringOutput                       `pulumi:"bigqueryTableIamBindingId"`
	Condition                 BigqueryTableIamBindingConditionPtrOutput `pulumi:"condition"`
	DatasetId                 pulumi.StringOutput                       `pulumi:"datasetId"`
	Etag                      pulumi.StringOutput                       `pulumi:"etag"`
	Members                   pulumi.StringArrayOutput                  `pulumi:"members"`
	Project                   pulumi.StringOutput                       `pulumi:"project"`
	Role                      pulumi.StringOutput                       `pulumi:"role"`
	TableId                   pulumi.StringOutput                       `pulumi:"tableId"`
}

// NewBigqueryTableIamBinding registers a new resource with the given unique name, arguments, and options.
func NewBigqueryTableIamBinding(ctx *pulumi.Context,
	name string, args *BigqueryTableIamBindingArgs, opts ...pulumi.ResourceOption) (*BigqueryTableIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatasetId == nil {
		return nil, errors.New("invalid value for required argument 'DatasetId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.TableId == nil {
		return nil, errors.New("invalid value for required argument 'TableId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BigqueryTableIamBinding
	err = ctx.RegisterPackageResource("google:index/bigqueryTableIamBinding:BigqueryTableIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBigqueryTableIamBinding gets an existing BigqueryTableIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBigqueryTableIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BigqueryTableIamBindingState, opts ...pulumi.ResourceOption) (*BigqueryTableIamBinding, error) {
	var resource BigqueryTableIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/bigqueryTableIamBinding:BigqueryTableIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BigqueryTableIamBinding resources.
type bigqueryTableIamBindingState struct {
	BigqueryTableIamBindingId *string                           `pulumi:"bigqueryTableIamBindingId"`
	Condition                 *BigqueryTableIamBindingCondition `pulumi:"condition"`
	DatasetId                 *string                           `pulumi:"datasetId"`
	Etag                      *string                           `pulumi:"etag"`
	Members                   []string                          `pulumi:"members"`
	Project                   *string                           `pulumi:"project"`
	Role                      *string                           `pulumi:"role"`
	TableId                   *string                           `pulumi:"tableId"`
}

type BigqueryTableIamBindingState struct {
	BigqueryTableIamBindingId pulumi.StringPtrInput
	Condition                 BigqueryTableIamBindingConditionPtrInput
	DatasetId                 pulumi.StringPtrInput
	Etag                      pulumi.StringPtrInput
	Members                   pulumi.StringArrayInput
	Project                   pulumi.StringPtrInput
	Role                      pulumi.StringPtrInput
	TableId                   pulumi.StringPtrInput
}

func (BigqueryTableIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryTableIamBindingState)(nil)).Elem()
}

type bigqueryTableIamBindingArgs struct {
	BigqueryTableIamBindingId *string                           `pulumi:"bigqueryTableIamBindingId"`
	Condition                 *BigqueryTableIamBindingCondition `pulumi:"condition"`
	DatasetId                 string                            `pulumi:"datasetId"`
	Members                   []string                          `pulumi:"members"`
	Project                   *string                           `pulumi:"project"`
	Role                      string                            `pulumi:"role"`
	TableId                   string                            `pulumi:"tableId"`
}

// The set of arguments for constructing a BigqueryTableIamBinding resource.
type BigqueryTableIamBindingArgs struct {
	BigqueryTableIamBindingId pulumi.StringPtrInput
	Condition                 BigqueryTableIamBindingConditionPtrInput
	DatasetId                 pulumi.StringInput
	Members                   pulumi.StringArrayInput
	Project                   pulumi.StringPtrInput
	Role                      pulumi.StringInput
	TableId                   pulumi.StringInput
}

func (BigqueryTableIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bigqueryTableIamBindingArgs)(nil)).Elem()
}

type BigqueryTableIamBindingInput interface {
	pulumi.Input

	ToBigqueryTableIamBindingOutput() BigqueryTableIamBindingOutput
	ToBigqueryTableIamBindingOutputWithContext(ctx context.Context) BigqueryTableIamBindingOutput
}

func (*BigqueryTableIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryTableIamBinding)(nil)).Elem()
}

func (i *BigqueryTableIamBinding) ToBigqueryTableIamBindingOutput() BigqueryTableIamBindingOutput {
	return i.ToBigqueryTableIamBindingOutputWithContext(context.Background())
}

func (i *BigqueryTableIamBinding) ToBigqueryTableIamBindingOutputWithContext(ctx context.Context) BigqueryTableIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BigqueryTableIamBindingOutput)
}

type BigqueryTableIamBindingOutput struct{ *pulumi.OutputState }

func (BigqueryTableIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BigqueryTableIamBinding)(nil)).Elem()
}

func (o BigqueryTableIamBindingOutput) ToBigqueryTableIamBindingOutput() BigqueryTableIamBindingOutput {
	return o
}

func (o BigqueryTableIamBindingOutput) ToBigqueryTableIamBindingOutputWithContext(ctx context.Context) BigqueryTableIamBindingOutput {
	return o
}

func (o BigqueryTableIamBindingOutput) BigqueryTableIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamBinding) pulumi.StringOutput { return v.BigqueryTableIamBindingId }).(pulumi.StringOutput)
}

func (o BigqueryTableIamBindingOutput) Condition() BigqueryTableIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *BigqueryTableIamBinding) BigqueryTableIamBindingConditionPtrOutput { return v.Condition }).(BigqueryTableIamBindingConditionPtrOutput)
}

func (o BigqueryTableIamBindingOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamBinding) pulumi.StringOutput { return v.DatasetId }).(pulumi.StringOutput)
}

func (o BigqueryTableIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BigqueryTableIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BigqueryTableIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o BigqueryTableIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BigqueryTableIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o BigqueryTableIamBindingOutput) TableId() pulumi.StringOutput {
	return o.ApplyT(func(v *BigqueryTableIamBinding) pulumi.StringOutput { return v.TableId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BigqueryTableIamBindingInput)(nil)).Elem(), &BigqueryTableIamBinding{})
	pulumi.RegisterOutputType(BigqueryTableIamBindingOutput{})
}
