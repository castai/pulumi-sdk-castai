// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BinaryAuthorizationPolicy struct {
	pulumi.CustomResourceState

	// A whitelist of image patterns to exclude from admission rules. If an image's name matches a whitelist pattern, the
	// image's admission requests will always be permitted regardless of your admission rules.
	AdmissionWhitelistPatterns  BinaryAuthorizationPolicyAdmissionWhitelistPatternArrayOutput `pulumi:"admissionWhitelistPatterns"`
	BinaryAuthorizationPolicyId pulumi.StringOutput                                           `pulumi:"binaryAuthorizationPolicyId"`
	// Per-cluster admission rules. An admission rule specifies either that all container images used in a pod creation request
	// must be attested to by one or more attestors, that all pod creations will be allowed, or that all pod creations will be
	// denied. There can be at most one admission rule per cluster spec. Identifier format: '{{location}}.{{clusterId}}'. A
	// location is either a compute zone (e.g. 'us-central1-a') or a region (e.g. 'us-central1').
	ClusterAdmissionRules BinaryAuthorizationPolicyClusterAdmissionRuleArrayOutput `pulumi:"clusterAdmissionRules"`
	// Default admission rule for a cluster without a per-cluster admission rule.
	DefaultAdmissionRule BinaryAuthorizationPolicyDefaultAdmissionRuleOutput `pulumi:"defaultAdmissionRule"`
	// A descriptive comment.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not
	// covered by the global policy will be subject to the project admission policy. Possible values: ["ENABLE", "DISABLE"]
	GlobalPolicyEvaluationMode pulumi.StringOutput                        `pulumi:"globalPolicyEvaluationMode"`
	Project                    pulumi.StringOutput                        `pulumi:"project"`
	Timeouts                   BinaryAuthorizationPolicyTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewBinaryAuthorizationPolicy registers a new resource with the given unique name, arguments, and options.
func NewBinaryAuthorizationPolicy(ctx *pulumi.Context,
	name string, args *BinaryAuthorizationPolicyArgs, opts ...pulumi.ResourceOption) (*BinaryAuthorizationPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultAdmissionRule == nil {
		return nil, errors.New("invalid value for required argument 'DefaultAdmissionRule'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BinaryAuthorizationPolicy
	err = ctx.RegisterPackageResource("google:index/binaryAuthorizationPolicy:BinaryAuthorizationPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBinaryAuthorizationPolicy gets an existing BinaryAuthorizationPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBinaryAuthorizationPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BinaryAuthorizationPolicyState, opts ...pulumi.ResourceOption) (*BinaryAuthorizationPolicy, error) {
	var resource BinaryAuthorizationPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/binaryAuthorizationPolicy:BinaryAuthorizationPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BinaryAuthorizationPolicy resources.
type binaryAuthorizationPolicyState struct {
	// A whitelist of image patterns to exclude from admission rules. If an image's name matches a whitelist pattern, the
	// image's admission requests will always be permitted regardless of your admission rules.
	AdmissionWhitelistPatterns  []BinaryAuthorizationPolicyAdmissionWhitelistPattern `pulumi:"admissionWhitelistPatterns"`
	BinaryAuthorizationPolicyId *string                                              `pulumi:"binaryAuthorizationPolicyId"`
	// Per-cluster admission rules. An admission rule specifies either that all container images used in a pod creation request
	// must be attested to by one or more attestors, that all pod creations will be allowed, or that all pod creations will be
	// denied. There can be at most one admission rule per cluster spec. Identifier format: '{{location}}.{{clusterId}}'. A
	// location is either a compute zone (e.g. 'us-central1-a') or a region (e.g. 'us-central1').
	ClusterAdmissionRules []BinaryAuthorizationPolicyClusterAdmissionRule `pulumi:"clusterAdmissionRules"`
	// Default admission rule for a cluster without a per-cluster admission rule.
	DefaultAdmissionRule *BinaryAuthorizationPolicyDefaultAdmissionRule `pulumi:"defaultAdmissionRule"`
	// A descriptive comment.
	Description *string `pulumi:"description"`
	// Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not
	// covered by the global policy will be subject to the project admission policy. Possible values: ["ENABLE", "DISABLE"]
	GlobalPolicyEvaluationMode *string                            `pulumi:"globalPolicyEvaluationMode"`
	Project                    *string                            `pulumi:"project"`
	Timeouts                   *BinaryAuthorizationPolicyTimeouts `pulumi:"timeouts"`
}

type BinaryAuthorizationPolicyState struct {
	// A whitelist of image patterns to exclude from admission rules. If an image's name matches a whitelist pattern, the
	// image's admission requests will always be permitted regardless of your admission rules.
	AdmissionWhitelistPatterns  BinaryAuthorizationPolicyAdmissionWhitelistPatternArrayInput
	BinaryAuthorizationPolicyId pulumi.StringPtrInput
	// Per-cluster admission rules. An admission rule specifies either that all container images used in a pod creation request
	// must be attested to by one or more attestors, that all pod creations will be allowed, or that all pod creations will be
	// denied. There can be at most one admission rule per cluster spec. Identifier format: '{{location}}.{{clusterId}}'. A
	// location is either a compute zone (e.g. 'us-central1-a') or a region (e.g. 'us-central1').
	ClusterAdmissionRules BinaryAuthorizationPolicyClusterAdmissionRuleArrayInput
	// Default admission rule for a cluster without a per-cluster admission rule.
	DefaultAdmissionRule BinaryAuthorizationPolicyDefaultAdmissionRulePtrInput
	// A descriptive comment.
	Description pulumi.StringPtrInput
	// Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not
	// covered by the global policy will be subject to the project admission policy. Possible values: ["ENABLE", "DISABLE"]
	GlobalPolicyEvaluationMode pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	Timeouts                   BinaryAuthorizationPolicyTimeoutsPtrInput
}

func (BinaryAuthorizationPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*binaryAuthorizationPolicyState)(nil)).Elem()
}

type binaryAuthorizationPolicyArgs struct {
	// A whitelist of image patterns to exclude from admission rules. If an image's name matches a whitelist pattern, the
	// image's admission requests will always be permitted regardless of your admission rules.
	AdmissionWhitelistPatterns  []BinaryAuthorizationPolicyAdmissionWhitelistPattern `pulumi:"admissionWhitelistPatterns"`
	BinaryAuthorizationPolicyId *string                                              `pulumi:"binaryAuthorizationPolicyId"`
	// Per-cluster admission rules. An admission rule specifies either that all container images used in a pod creation request
	// must be attested to by one or more attestors, that all pod creations will be allowed, or that all pod creations will be
	// denied. There can be at most one admission rule per cluster spec. Identifier format: '{{location}}.{{clusterId}}'. A
	// location is either a compute zone (e.g. 'us-central1-a') or a region (e.g. 'us-central1').
	ClusterAdmissionRules []BinaryAuthorizationPolicyClusterAdmissionRule `pulumi:"clusterAdmissionRules"`
	// Default admission rule for a cluster without a per-cluster admission rule.
	DefaultAdmissionRule BinaryAuthorizationPolicyDefaultAdmissionRule `pulumi:"defaultAdmissionRule"`
	// A descriptive comment.
	Description *string `pulumi:"description"`
	// Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not
	// covered by the global policy will be subject to the project admission policy. Possible values: ["ENABLE", "DISABLE"]
	GlobalPolicyEvaluationMode *string                            `pulumi:"globalPolicyEvaluationMode"`
	Project                    *string                            `pulumi:"project"`
	Timeouts                   *BinaryAuthorizationPolicyTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BinaryAuthorizationPolicy resource.
type BinaryAuthorizationPolicyArgs struct {
	// A whitelist of image patterns to exclude from admission rules. If an image's name matches a whitelist pattern, the
	// image's admission requests will always be permitted regardless of your admission rules.
	AdmissionWhitelistPatterns  BinaryAuthorizationPolicyAdmissionWhitelistPatternArrayInput
	BinaryAuthorizationPolicyId pulumi.StringPtrInput
	// Per-cluster admission rules. An admission rule specifies either that all container images used in a pod creation request
	// must be attested to by one or more attestors, that all pod creations will be allowed, or that all pod creations will be
	// denied. There can be at most one admission rule per cluster spec. Identifier format: '{{location}}.{{clusterId}}'. A
	// location is either a compute zone (e.g. 'us-central1-a') or a region (e.g. 'us-central1').
	ClusterAdmissionRules BinaryAuthorizationPolicyClusterAdmissionRuleArrayInput
	// Default admission rule for a cluster without a per-cluster admission rule.
	DefaultAdmissionRule BinaryAuthorizationPolicyDefaultAdmissionRuleInput
	// A descriptive comment.
	Description pulumi.StringPtrInput
	// Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not
	// covered by the global policy will be subject to the project admission policy. Possible values: ["ENABLE", "DISABLE"]
	GlobalPolicyEvaluationMode pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	Timeouts                   BinaryAuthorizationPolicyTimeoutsPtrInput
}

func (BinaryAuthorizationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*binaryAuthorizationPolicyArgs)(nil)).Elem()
}

type BinaryAuthorizationPolicyInput interface {
	pulumi.Input

	ToBinaryAuthorizationPolicyOutput() BinaryAuthorizationPolicyOutput
	ToBinaryAuthorizationPolicyOutputWithContext(ctx context.Context) BinaryAuthorizationPolicyOutput
}

func (*BinaryAuthorizationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BinaryAuthorizationPolicy)(nil)).Elem()
}

func (i *BinaryAuthorizationPolicy) ToBinaryAuthorizationPolicyOutput() BinaryAuthorizationPolicyOutput {
	return i.ToBinaryAuthorizationPolicyOutputWithContext(context.Background())
}

func (i *BinaryAuthorizationPolicy) ToBinaryAuthorizationPolicyOutputWithContext(ctx context.Context) BinaryAuthorizationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BinaryAuthorizationPolicyOutput)
}

type BinaryAuthorizationPolicyOutput struct{ *pulumi.OutputState }

func (BinaryAuthorizationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BinaryAuthorizationPolicy)(nil)).Elem()
}

func (o BinaryAuthorizationPolicyOutput) ToBinaryAuthorizationPolicyOutput() BinaryAuthorizationPolicyOutput {
	return o
}

func (o BinaryAuthorizationPolicyOutput) ToBinaryAuthorizationPolicyOutputWithContext(ctx context.Context) BinaryAuthorizationPolicyOutput {
	return o
}

// A whitelist of image patterns to exclude from admission rules. If an image's name matches a whitelist pattern, the
// image's admission requests will always be permitted regardless of your admission rules.
func (o BinaryAuthorizationPolicyOutput) AdmissionWhitelistPatterns() BinaryAuthorizationPolicyAdmissionWhitelistPatternArrayOutput {
	return o.ApplyT(func(v *BinaryAuthorizationPolicy) BinaryAuthorizationPolicyAdmissionWhitelistPatternArrayOutput {
		return v.AdmissionWhitelistPatterns
	}).(BinaryAuthorizationPolicyAdmissionWhitelistPatternArrayOutput)
}

func (o BinaryAuthorizationPolicyOutput) BinaryAuthorizationPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BinaryAuthorizationPolicy) pulumi.StringOutput { return v.BinaryAuthorizationPolicyId }).(pulumi.StringOutput)
}

// Per-cluster admission rules. An admission rule specifies either that all container images used in a pod creation request
// must be attested to by one or more attestors, that all pod creations will be allowed, or that all pod creations will be
// denied. There can be at most one admission rule per cluster spec. Identifier format: '{{location}}.{{clusterId}}'. A
// location is either a compute zone (e.g. 'us-central1-a') or a region (e.g. 'us-central1').
func (o BinaryAuthorizationPolicyOutput) ClusterAdmissionRules() BinaryAuthorizationPolicyClusterAdmissionRuleArrayOutput {
	return o.ApplyT(func(v *BinaryAuthorizationPolicy) BinaryAuthorizationPolicyClusterAdmissionRuleArrayOutput {
		return v.ClusterAdmissionRules
	}).(BinaryAuthorizationPolicyClusterAdmissionRuleArrayOutput)
}

// Default admission rule for a cluster without a per-cluster admission rule.
func (o BinaryAuthorizationPolicyOutput) DefaultAdmissionRule() BinaryAuthorizationPolicyDefaultAdmissionRuleOutput {
	return o.ApplyT(func(v *BinaryAuthorizationPolicy) BinaryAuthorizationPolicyDefaultAdmissionRuleOutput {
		return v.DefaultAdmissionRule
	}).(BinaryAuthorizationPolicyDefaultAdmissionRuleOutput)
}

// A descriptive comment.
func (o BinaryAuthorizationPolicyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BinaryAuthorizationPolicy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Controls the evaluation of a Google-maintained global admission policy for common system-level images. Images not
// covered by the global policy will be subject to the project admission policy. Possible values: ["ENABLE", "DISABLE"]
func (o BinaryAuthorizationPolicyOutput) GlobalPolicyEvaluationMode() pulumi.StringOutput {
	return o.ApplyT(func(v *BinaryAuthorizationPolicy) pulumi.StringOutput { return v.GlobalPolicyEvaluationMode }).(pulumi.StringOutput)
}

func (o BinaryAuthorizationPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BinaryAuthorizationPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o BinaryAuthorizationPolicyOutput) Timeouts() BinaryAuthorizationPolicyTimeoutsPtrOutput {
	return o.ApplyT(func(v *BinaryAuthorizationPolicy) BinaryAuthorizationPolicyTimeoutsPtrOutput { return v.Timeouts }).(BinaryAuthorizationPolicyTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BinaryAuthorizationPolicyInput)(nil)).Elem(), &BinaryAuthorizationPolicy{})
	pulumi.RegisterOutputType(BinaryAuthorizationPolicyOutput{})
}
