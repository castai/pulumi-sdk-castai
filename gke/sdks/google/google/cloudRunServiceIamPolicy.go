// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudRunServiceIamPolicy struct {
	pulumi.CustomResourceState

	CloudRunServiceIamPolicyId pulumi.StringOutput `pulumi:"cloudRunServiceIamPolicyId"`
	Etag                       pulumi.StringOutput `pulumi:"etag"`
	Location                   pulumi.StringOutput `pulumi:"location"`
	PolicyData                 pulumi.StringOutput `pulumi:"policyData"`
	Project                    pulumi.StringOutput `pulumi:"project"`
	Service                    pulumi.StringOutput `pulumi:"service"`
}

// NewCloudRunServiceIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewCloudRunServiceIamPolicy(ctx *pulumi.Context,
	name string, args *CloudRunServiceIamPolicyArgs, opts ...pulumi.ResourceOption) (*CloudRunServiceIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource CloudRunServiceIamPolicy
	err = ctx.RegisterPackageResource("google:index/cloudRunServiceIamPolicy:CloudRunServiceIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudRunServiceIamPolicy gets an existing CloudRunServiceIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudRunServiceIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudRunServiceIamPolicyState, opts ...pulumi.ResourceOption) (*CloudRunServiceIamPolicy, error) {
	var resource CloudRunServiceIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudRunServiceIamPolicy:CloudRunServiceIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudRunServiceIamPolicy resources.
type cloudRunServiceIamPolicyState struct {
	CloudRunServiceIamPolicyId *string `pulumi:"cloudRunServiceIamPolicyId"`
	Etag                       *string `pulumi:"etag"`
	Location                   *string `pulumi:"location"`
	PolicyData                 *string `pulumi:"policyData"`
	Project                    *string `pulumi:"project"`
	Service                    *string `pulumi:"service"`
}

type CloudRunServiceIamPolicyState struct {
	CloudRunServiceIamPolicyId pulumi.StringPtrInput
	Etag                       pulumi.StringPtrInput
	Location                   pulumi.StringPtrInput
	PolicyData                 pulumi.StringPtrInput
	Project                    pulumi.StringPtrInput
	Service                    pulumi.StringPtrInput
}

func (CloudRunServiceIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunServiceIamPolicyState)(nil)).Elem()
}

type cloudRunServiceIamPolicyArgs struct {
	CloudRunServiceIamPolicyId *string `pulumi:"cloudRunServiceIamPolicyId"`
	Location                   *string `pulumi:"location"`
	PolicyData                 string  `pulumi:"policyData"`
	Project                    *string `pulumi:"project"`
	Service                    string  `pulumi:"service"`
}

// The set of arguments for constructing a CloudRunServiceIamPolicy resource.
type CloudRunServiceIamPolicyArgs struct {
	CloudRunServiceIamPolicyId pulumi.StringPtrInput
	Location                   pulumi.StringPtrInput
	PolicyData                 pulumi.StringInput
	Project                    pulumi.StringPtrInput
	Service                    pulumi.StringInput
}

func (CloudRunServiceIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudRunServiceIamPolicyArgs)(nil)).Elem()
}

type CloudRunServiceIamPolicyInput interface {
	pulumi.Input

	ToCloudRunServiceIamPolicyOutput() CloudRunServiceIamPolicyOutput
	ToCloudRunServiceIamPolicyOutputWithContext(ctx context.Context) CloudRunServiceIamPolicyOutput
}

func (*CloudRunServiceIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunServiceIamPolicy)(nil)).Elem()
}

func (i *CloudRunServiceIamPolicy) ToCloudRunServiceIamPolicyOutput() CloudRunServiceIamPolicyOutput {
	return i.ToCloudRunServiceIamPolicyOutputWithContext(context.Background())
}

func (i *CloudRunServiceIamPolicy) ToCloudRunServiceIamPolicyOutputWithContext(ctx context.Context) CloudRunServiceIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudRunServiceIamPolicyOutput)
}

type CloudRunServiceIamPolicyOutput struct{ *pulumi.OutputState }

func (CloudRunServiceIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudRunServiceIamPolicy)(nil)).Elem()
}

func (o CloudRunServiceIamPolicyOutput) ToCloudRunServiceIamPolicyOutput() CloudRunServiceIamPolicyOutput {
	return o
}

func (o CloudRunServiceIamPolicyOutput) ToCloudRunServiceIamPolicyOutputWithContext(ctx context.Context) CloudRunServiceIamPolicyOutput {
	return o
}

func (o CloudRunServiceIamPolicyOutput) CloudRunServiceIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamPolicy) pulumi.StringOutput { return v.CloudRunServiceIamPolicyId }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o CloudRunServiceIamPolicyOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudRunServiceIamPolicy) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudRunServiceIamPolicyInput)(nil)).Elem(), &CloudRunServiceIamPolicy{})
	pulumi.RegisterOutputType(CloudRunServiceIamPolicyOutput{})
}
