// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BeyondcorpAppConnector struct {
	pulumi.CustomResourceState

	BeyondcorpAppConnectorId pulumi.StringOutput `pulumi:"beyondcorpAppConnectorId"`
	// An arbitrary user-provided name for the AppConnector.
	DisplayName     pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// ID of the AppConnector.
	Name pulumi.StringOutput `pulumi:"name"`
	// Principal information about the Identity of the AppConnector.
	PrincipalInfo BeyondcorpAppConnectorPrincipalInfoOutput `pulumi:"principalInfo"`
	Project       pulumi.StringOutput                       `pulumi:"project"`
	// The region of the AppConnector.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// Represents the different states of a AppConnector.
	State pulumi.StringOutput `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput                  `pulumi:"terraformLabels"`
	Timeouts        BeyondcorpAppConnectorTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewBeyondcorpAppConnector registers a new resource with the given unique name, arguments, and options.
func NewBeyondcorpAppConnector(ctx *pulumi.Context,
	name string, args *BeyondcorpAppConnectorArgs, opts ...pulumi.ResourceOption) (*BeyondcorpAppConnector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrincipalInfo == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalInfo'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BeyondcorpAppConnector
	err = ctx.RegisterPackageResource("google:index/beyondcorpAppConnector:BeyondcorpAppConnector", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBeyondcorpAppConnector gets an existing BeyondcorpAppConnector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBeyondcorpAppConnector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BeyondcorpAppConnectorState, opts ...pulumi.ResourceOption) (*BeyondcorpAppConnector, error) {
	var resource BeyondcorpAppConnector
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/beyondcorpAppConnector:BeyondcorpAppConnector", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BeyondcorpAppConnector resources.
type beyondcorpAppConnectorState struct {
	BeyondcorpAppConnectorId *string `pulumi:"beyondcorpAppConnectorId"`
	// An arbitrary user-provided name for the AppConnector.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// ID of the AppConnector.
	Name *string `pulumi:"name"`
	// Principal information about the Identity of the AppConnector.
	PrincipalInfo *BeyondcorpAppConnectorPrincipalInfo `pulumi:"principalInfo"`
	Project       *string                              `pulumi:"project"`
	// The region of the AppConnector.
	Region *string `pulumi:"region"`
	// Represents the different states of a AppConnector.
	State *string `pulumi:"state"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string               `pulumi:"terraformLabels"`
	Timeouts        *BeyondcorpAppConnectorTimeouts `pulumi:"timeouts"`
}

type BeyondcorpAppConnectorState struct {
	BeyondcorpAppConnectorId pulumi.StringPtrInput
	// An arbitrary user-provided name for the AppConnector.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// ID of the AppConnector.
	Name pulumi.StringPtrInput
	// Principal information about the Identity of the AppConnector.
	PrincipalInfo BeyondcorpAppConnectorPrincipalInfoPtrInput
	Project       pulumi.StringPtrInput
	// The region of the AppConnector.
	Region pulumi.StringPtrInput
	// Represents the different states of a AppConnector.
	State pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        BeyondcorpAppConnectorTimeoutsPtrInput
}

func (BeyondcorpAppConnectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpAppConnectorState)(nil)).Elem()
}

type beyondcorpAppConnectorArgs struct {
	BeyondcorpAppConnectorId *string `pulumi:"beyondcorpAppConnectorId"`
	// An arbitrary user-provided name for the AppConnector.
	DisplayName *string `pulumi:"displayName"`
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// ID of the AppConnector.
	Name *string `pulumi:"name"`
	// Principal information about the Identity of the AppConnector.
	PrincipalInfo BeyondcorpAppConnectorPrincipalInfo `pulumi:"principalInfo"`
	Project       *string                             `pulumi:"project"`
	// The region of the AppConnector.
	Region   *string                         `pulumi:"region"`
	Timeouts *BeyondcorpAppConnectorTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BeyondcorpAppConnector resource.
type BeyondcorpAppConnectorArgs struct {
	BeyondcorpAppConnectorId pulumi.StringPtrInput
	// An arbitrary user-provided name for the AppConnector.
	DisplayName pulumi.StringPtrInput
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// ID of the AppConnector.
	Name pulumi.StringPtrInput
	// Principal information about the Identity of the AppConnector.
	PrincipalInfo BeyondcorpAppConnectorPrincipalInfoInput
	Project       pulumi.StringPtrInput
	// The region of the AppConnector.
	Region   pulumi.StringPtrInput
	Timeouts BeyondcorpAppConnectorTimeoutsPtrInput
}

func (BeyondcorpAppConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*beyondcorpAppConnectorArgs)(nil)).Elem()
}

type BeyondcorpAppConnectorInput interface {
	pulumi.Input

	ToBeyondcorpAppConnectorOutput() BeyondcorpAppConnectorOutput
	ToBeyondcorpAppConnectorOutputWithContext(ctx context.Context) BeyondcorpAppConnectorOutput
}

func (*BeyondcorpAppConnector) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpAppConnector)(nil)).Elem()
}

func (i *BeyondcorpAppConnector) ToBeyondcorpAppConnectorOutput() BeyondcorpAppConnectorOutput {
	return i.ToBeyondcorpAppConnectorOutputWithContext(context.Background())
}

func (i *BeyondcorpAppConnector) ToBeyondcorpAppConnectorOutputWithContext(ctx context.Context) BeyondcorpAppConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BeyondcorpAppConnectorOutput)
}

type BeyondcorpAppConnectorOutput struct{ *pulumi.OutputState }

func (BeyondcorpAppConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BeyondcorpAppConnector)(nil)).Elem()
}

func (o BeyondcorpAppConnectorOutput) ToBeyondcorpAppConnectorOutput() BeyondcorpAppConnectorOutput {
	return o
}

func (o BeyondcorpAppConnectorOutput) ToBeyondcorpAppConnectorOutputWithContext(ctx context.Context) BeyondcorpAppConnectorOutput {
	return o
}

func (o BeyondcorpAppConnectorOutput) BeyondcorpAppConnectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) pulumi.StringOutput { return v.BeyondcorpAppConnectorId }).(pulumi.StringOutput)
}

// An arbitrary user-provided name for the AppConnector.
func (o BeyondcorpAppConnectorOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o BeyondcorpAppConnectorOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o BeyondcorpAppConnectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// ID of the AppConnector.
func (o BeyondcorpAppConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Principal information about the Identity of the AppConnector.
func (o BeyondcorpAppConnectorOutput) PrincipalInfo() BeyondcorpAppConnectorPrincipalInfoOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) BeyondcorpAppConnectorPrincipalInfoOutput { return v.PrincipalInfo }).(BeyondcorpAppConnectorPrincipalInfoOutput)
}

func (o BeyondcorpAppConnectorOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of the AppConnector.
func (o BeyondcorpAppConnectorOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// Represents the different states of a AppConnector.
func (o BeyondcorpAppConnectorOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o BeyondcorpAppConnectorOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o BeyondcorpAppConnectorOutput) Timeouts() BeyondcorpAppConnectorTimeoutsPtrOutput {
	return o.ApplyT(func(v *BeyondcorpAppConnector) BeyondcorpAppConnectorTimeoutsPtrOutput { return v.Timeouts }).(BeyondcorpAppConnectorTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BeyondcorpAppConnectorInput)(nil)).Elem(), &BeyondcorpAppConnector{})
	pulumi.RegisterOutputType(BeyondcorpAppConnectorOutput{})
}
