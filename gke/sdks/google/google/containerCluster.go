// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContainerCluster struct {
	pulumi.CustomResourceState

	// The configuration for addons supported by GKE.
	AddonsConfig ContainerClusterAddonsConfigPtrOutput `pulumi:"addonsConfig"`
	// Enable NET_ADMIN for this cluster.
	AllowNetAdmin pulumi.BoolPtrOutput `pulumi:"allowNetAdmin"`
	// Configuration for the Google Groups for GKE feature.
	AuthenticatorGroupsConfig ContainerClusterAuthenticatorGroupsConfigPtrOutput `pulumi:"authenticatorGroupsConfig"`
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization ContainerClusterBinaryAuthorizationPtrOutput `pulumi:"binaryAuthorization"`
	// Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to automatically adjust the size of the
	// cluster and create/delete node pools based on the current needs of the cluster's workload. See the guide to using Node
	// Auto-Provisioning for more details.
	ClusterAutoscaling ContainerClusterClusterAutoscalingPtrOutput `pulumi:"clusterAutoscaling"`
	// The IP address range of the Kubernetes pods in this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have
	// one automatically chosen or specify a /14 block in 10.0.0.0/8. This field will only work for routes-based clusters,
	// where ip_allocation_policy is not defined.
	ClusterIpv4Cidr pulumi.StringOutput `pulumi:"clusterIpv4Cidr"`
	// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration
	// can't be changed (or added/removed) after cluster creation without deleting and recreating the entire cluster.
	ConfidentialNodes  ContainerClusterConfidentialNodesPtrOutput `pulumi:"confidentialNodes"`
	ContainerClusterId pulumi.StringOutput                        `pulumi:"containerClusterId"`
	// Configuration for all of the cluster's control plane endpoints. Currently supports only DNS endpoint configuration, IP
	// endpoint configuration is available in private_cluster_config.
	ControlPlaneEndpointsConfig ContainerClusterControlPlaneEndpointsConfigPtrOutput `pulumi:"controlPlaneEndpointsConfig"`
	// Cost management configuration for the cluster.
	CostManagementConfig ContainerClusterCostManagementConfigPtrOutput `pulumi:"costManagementConfig"`
	// Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of
	// state are: "ENCRYPTED"; "DECRYPTED". key_name is the name of a CloudKMS key.
	DatabaseEncryption ContainerClusterDatabaseEncryptionPtrOutput `pulumi:"databaseEncryption"`
	// The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
	DatapathProvider pulumi.StringOutput `pulumi:"datapathProvider"`
	// The default maximum number of pods per node in this cluster. This doesn't work on "routes-based" clusters, clusters that
	// don't have IP Aliasing enabled.
	DefaultMaxPodsPerNode pulumi.Float64Output `pulumi:"defaultMaxPodsPerNode"`
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is
	// disabled.
	DefaultSnatStatus  ContainerClusterDefaultSnatStatusPtrOutput `pulumi:"defaultSnatStatus"`
	DeletionProtection pulumi.BoolPtrOutput                       `pulumi:"deletionProtection"`
	// Description of the cluster.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Configuration for Cloud DNS for Kubernetes Engine.
	DnsConfig       ContainerClusterDnsConfigPtrOutput `pulumi:"dnsConfig"`
	EffectiveLabels pulumi.StringMapOutput             `pulumi:"effectiveLabels"`
	// Enable Autopilot for this cluster.
	EnableAutopilot pulumi.BoolPtrOutput `pulumi:"enableAutopilot"`
	// Whether Cilium cluster-wide network policy is enabled on this cluster.
	EnableCiliumClusterwideNetworkPolicy pulumi.BoolPtrOutput `pulumi:"enableCiliumClusterwideNetworkPolicy"`
	// Whether FQDN Network Policy is enabled on this cluster.
	EnableFqdnNetworkPolicy pulumi.BoolPtrOutput `pulumi:"enableFqdnNetworkPolicy"`
	// Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC
	// network.
	EnableIntranodeVisibility pulumi.BoolOutput `pulumi:"enableIntranodeVisibility"`
	// Configuration for Kubernetes Beta APIs.
	EnableK8sBetaApis ContainerClusterEnableK8sBetaApisPtrOutput `pulumi:"enableK8sBetaApis"`
	// Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot
	// be upgraded and will be automatically deleted after 30 days.
	EnableKubernetesAlpha pulumi.BoolPtrOutput `pulumi:"enableKubernetesAlpha"`
	// Whether L4ILB Subsetting is enabled for this cluster.
	EnableL4IlbSubsetting pulumi.BoolPtrOutput `pulumi:"enableL4IlbSubsetting"`
	// Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service
	// accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC
	// configuration or IAM. Defaults to false.
	EnableLegacyAbac pulumi.BoolPtrOutput `pulumi:"enableLegacyAbac"`
	// Whether multi-networking is enabled for this cluster.
	EnableMultiNetworking pulumi.BoolPtrOutput `pulumi:"enableMultiNetworking"`
	// Enable Shielded Nodes features on all nodes in this cluster. Defaults to true.
	EnableShieldedNodes pulumi.BoolPtrOutput `pulumi:"enableShieldedNodes"`
	// Whether to enable Cloud TPU resources in this cluster.
	EnableTpu pulumi.BoolPtrOutput `pulumi:"enableTpu"`
	// The IP address of this cluster's Kubernetes master.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// Defines the config needed to enable/disable GKE Enterprise
	EnterpriseConfig ContainerClusterEnterpriseConfigPtrOutput `pulumi:"enterpriseConfig"`
	// Fleet configuration of the cluster.
	Fleet ContainerClusterFleetPtrOutput `pulumi:"fleet"`
	// Configuration for GKE Gateway API controller.
	GatewayApiConfig ContainerClusterGatewayApiConfigPtrOutput `pulumi:"gatewayApiConfig"`
	// Configuration for Identity Service which allows customers to use external identity providers with the K8S API.
	IdentityServiceConfig ContainerClusterIdentityServiceConfigPtrOutput `pulumi:"identityServiceConfig"`
	// The number of nodes to create in this cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if node_pool is not set. If you're using google.ContainerNodePool objects with no
	// default node pool, you'll need to set this to a value of at least 1, alongside setting remove_default_node_pool to true.
	InitialNodeCount pulumi.Float64PtrOutput `pulumi:"initialNodeCount"`
	// Configuration of cluster IP allocation for VPC-native clusters. Adding this block enables IP aliasing, making the
	// cluster VPC-native instead of routes-based.
	IpAllocationPolicy ContainerClusterIpAllocationPolicyPtrOutput `pulumi:"ipAllocationPolicy"`
	// The fingerprint of the set of labels for this cluster.
	LabelFingerprint pulumi.StringOutput `pulumi:"labelFingerprint"`
	// The location (region or zone) in which the cluster master will be created, as well as the default node location. If you
	// specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify
	// a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the
	// region, and with default node locations in those zones as well.
	Location pulumi.StringOutput `pulumi:"location"`
	// Logging configuration for the cluster.
	LoggingConfig ContainerClusterLoggingConfigPtrOutput `pulumi:"loggingConfig"`
	// The logging service that the cluster should write logs to. Available options include logging.googleapis.com(Legacy
	// Stackdriver), logging.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Logging), and none. Defaults to
	// logging.googleapis.com/kubernetes.
	LoggingService pulumi.StringOutput `pulumi:"loggingService"`
	// The maintenance policy to use for the cluster.
	MaintenancePolicy ContainerClusterMaintenancePolicyPtrOutput `pulumi:"maintenancePolicy"`
	// The authentication information for accessing the Kubernetes master. Some values in this block are only returned by the
	// API if your service account has permission to get credentials for your GKE cluster. If you see an unexpected diff
	// unsetting your client cert, ensure you have the container.clusters.getCredentials permission.
	MasterAuth ContainerClusterMasterAuthPtrOutput `pulumi:"masterAuth"`
	// The desired configuration options for master authorized networks. Omit the nested cidr_blocks attribute to disallow
	// external access (except the cluster node IPs, which GKE automatically whitelists).
	MasterAuthorizedNetworksConfig ContainerClusterMasterAuthorizedNetworksConfigPtrOutput `pulumi:"masterAuthorizedNetworksConfig"`
	// The current version of the master in the cluster. This may be different than the min_master_version set in the config if
	// the master has been updated by GKE.
	MasterVersion pulumi.StringOutput `pulumi:"masterVersion"`
	// If set, and enable_certificates=true, the GKE Workload Identity Certificates controller and node agent will be deployed
	// in the cluster.
	MeshCertificates ContainerClusterMeshCertificatesPtrOutput `pulumi:"meshCertificates"`
	// The minimum version of the master. GKE will auto-update the master to new versions, so this does not guarantee the
	// current master version--use the read-only master_version field to obtain that. If unset, the cluster's version will be
	// set by GKE to the version of the most recent official release (which is not necessarily the latest version).
	MinMasterVersion pulumi.StringPtrOutput `pulumi:"minMasterVersion"`
	// Monitoring configuration for the cluster.
	MonitoringConfig ContainerClusterMonitoringConfigPtrOutput `pulumi:"monitoringConfig"`
	// The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to
	// the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting
	// Available options include monitoring.googleapis.com(Legacy Stackdriver),
	// monitoring.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Monitoring), and none. Defaults to
	// monitoring.googleapis.com/kubernetes.
	MonitoringService pulumi.StringOutput `pulumi:"monitoringService"`
	// The name of the cluster, unique within the project and location.
	Name pulumi.StringOutput `pulumi:"name"`
	// The name or self_link of the Google Compute Engine network to which the cluster is connected. For Shared VPC, set this
	// to the self link of the shared network.
	Network pulumi.StringPtrOutput `pulumi:"network"`
	// Configuration options for the NetworkPolicy feature.
	NetworkPolicy ContainerClusterNetworkPolicyPtrOutput `pulumi:"networkPolicy"`
	// Determines whether alias IPs or routes will be used for pod IPs in the cluster. Defaults to VPC_NATIVE for new clusters.
	NetworkingMode pulumi.StringOutput `pulumi:"networkingMode"`
	// The configuration of the nodepool
	NodeConfig ContainerClusterNodeConfigPtrOutput `pulumi:"nodeConfig"`
	// The list of zones in which the cluster's nodes are located. Nodes must be in the region of their regional cluster or in
	// the same region as their cluster's zone for zonal clusters. If this is specified for a zonal cluster, omit the cluster's
	// zone.
	NodeLocations pulumi.StringArrayOutput `pulumi:"nodeLocations"`
	// Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled
	// clusters.
	NodePoolAutoConfig ContainerClusterNodePoolAutoConfigPtrOutput `pulumi:"nodePoolAutoConfig"`
	// The default nodel pool settings for the entire cluster.
	NodePoolDefaults ContainerClusterNodePoolDefaultsPtrOutput `pulumi:"nodePoolDefaults"`
	// List of node pools associated with this cluster. See google.ContainerNodePool for schema. Warning: node pools defined
	// inside a cluster can't be changed (or added/removed) after cluster creation without deleting and recreating the entire
	// cluster. Unless you absolutely need the ability to say "these are the only node pools associated with this cluster", use
	// the google.ContainerNodePool resource instead of this property.
	NodePools   ContainerClusterNodePoolArrayOutput `pulumi:"nodePools"`
	NodeVersion pulumi.StringOutput                 `pulumi:"nodeVersion"`
	// The notification config for sending cluster upgrade notifications
	NotificationConfig ContainerClusterNotificationConfigPtrOutput `pulumi:"notificationConfig"`
	Operation          pulumi.StringOutput                         `pulumi:"operation"`
	// Configuration for private clusters, clusters with private nodes.
	PrivateClusterConfig ContainerClusterPrivateClusterConfigPtrOutput `pulumi:"privateClusterConfig"`
	// The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services
	// (all access will be via IPv4).
	PrivateIpv6GoogleAccess pulumi.StringOutput `pulumi:"privateIpv6GoogleAccess"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringOutput `pulumi:"project"`
	// Configuration options for the Release channel feature, which provide more control over automatic upgrades of your GKE
	// clusters. Note that removing this field from your config will not unenroll it. Instead, use the "UNSPECIFIED" channel.
	ReleaseChannel ContainerClusterReleaseChannelPtrOutput `pulumi:"releaseChannel"`
	// If true, deletes the default node pool upon cluster creation. If you're using google.ContainerNodePool resources with no
	// default node pool, this should be set to true, alongside setting initial_node_count to at least 1.
	RemoveDefaultNodePool pulumi.BoolPtrOutput `pulumi:"removeDefaultNodePool"`
	// The GCE resource labels (a map of key/value pairs) to be applied to the cluster. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	ResourceLabels pulumi.StringMapOutput `pulumi:"resourceLabels"`
	// Configuration for the ResourceUsageExportConfig feature.
	ResourceUsageExportConfig ContainerClusterResourceUsageExportConfigPtrOutput `pulumi:"resourceUsageExportConfig"`
	// Configuration for the Secret Manager feature.
	SecretManagerConfig ContainerClusterSecretManagerConfigPtrOutput `pulumi:"secretManagerConfig"`
	// Defines the config needed to enable/disable features for the Security Posture API
	SecurityPostureConfig ContainerClusterSecurityPostureConfigPtrOutput `pulumi:"securityPostureConfig"`
	// Server-defined URL for the resource.
	SelfLink pulumi.StringOutput `pulumi:"selfLink"`
	// If set, and enabled=true, services with external ips field will not be blocked
	ServiceExternalIpsConfig ContainerClusterServiceExternalIpsConfigPtrOutput `pulumi:"serviceExternalIpsConfig"`
	// The IP address range of the Kubernetes services in this cluster, in CIDR notation (e.g. 1.2.3.4/29). Service addresses
	// are typically put in the last /16 from the container CIDR.
	ServicesIpv4Cidr pulumi.StringOutput `pulumi:"servicesIpv4Cidr"`
	// The name or self_link of the Google Compute Engine subnetwork in which the cluster's instances are launched.
	Subnetwork pulumi.StringOutput `pulumi:"subnetwork"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput            `pulumi:"terraformLabels"`
	Timeouts        ContainerClusterTimeoutsPtrOutput `pulumi:"timeouts"`
	// The IP address range of the Cloud TPUs in this cluster, in CIDR notation (e.g. 1.2.3.4/29).
	TpuIpv4CidrBlock pulumi.StringOutput `pulumi:"tpuIpv4CidrBlock"`
	// The custom keys configuration of the cluster.
	UserManagedKeysConfig ContainerClusterUserManagedKeysConfigPtrOutput `pulumi:"userManagedKeysConfig"`
	// Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
	VerticalPodAutoscaling ContainerClusterVerticalPodAutoscalingPtrOutput `pulumi:"verticalPodAutoscaling"`
	// Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
	WorkloadIdentityConfig ContainerClusterWorkloadIdentityConfigPtrOutput `pulumi:"workloadIdentityConfig"`
}

// NewContainerCluster registers a new resource with the given unique name, arguments, and options.
func NewContainerCluster(ctx *pulumi.Context,
	name string, args *ContainerClusterArgs, opts ...pulumi.ResourceOption) (*ContainerCluster, error) {
	if args == nil {
		args = &ContainerClusterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ContainerCluster
	err = ctx.RegisterPackageResource("google:index/containerCluster:ContainerCluster", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerCluster gets an existing ContainerCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerClusterState, opts ...pulumi.ResourceOption) (*ContainerCluster, error) {
	var resource ContainerCluster
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/containerCluster:ContainerCluster", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerCluster resources.
type containerClusterState struct {
	// The configuration for addons supported by GKE.
	AddonsConfig *ContainerClusterAddonsConfig `pulumi:"addonsConfig"`
	// Enable NET_ADMIN for this cluster.
	AllowNetAdmin *bool `pulumi:"allowNetAdmin"`
	// Configuration for the Google Groups for GKE feature.
	AuthenticatorGroupsConfig *ContainerClusterAuthenticatorGroupsConfig `pulumi:"authenticatorGroupsConfig"`
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization *ContainerClusterBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to automatically adjust the size of the
	// cluster and create/delete node pools based on the current needs of the cluster's workload. See the guide to using Node
	// Auto-Provisioning for more details.
	ClusterAutoscaling *ContainerClusterClusterAutoscaling `pulumi:"clusterAutoscaling"`
	// The IP address range of the Kubernetes pods in this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have
	// one automatically chosen or specify a /14 block in 10.0.0.0/8. This field will only work for routes-based clusters,
	// where ip_allocation_policy is not defined.
	ClusterIpv4Cidr *string `pulumi:"clusterIpv4Cidr"`
	// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration
	// can't be changed (or added/removed) after cluster creation without deleting and recreating the entire cluster.
	ConfidentialNodes  *ContainerClusterConfidentialNodes `pulumi:"confidentialNodes"`
	ContainerClusterId *string                            `pulumi:"containerClusterId"`
	// Configuration for all of the cluster's control plane endpoints. Currently supports only DNS endpoint configuration, IP
	// endpoint configuration is available in private_cluster_config.
	ControlPlaneEndpointsConfig *ContainerClusterControlPlaneEndpointsConfig `pulumi:"controlPlaneEndpointsConfig"`
	// Cost management configuration for the cluster.
	CostManagementConfig *ContainerClusterCostManagementConfig `pulumi:"costManagementConfig"`
	// Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of
	// state are: "ENCRYPTED"; "DECRYPTED". key_name is the name of a CloudKMS key.
	DatabaseEncryption *ContainerClusterDatabaseEncryption `pulumi:"databaseEncryption"`
	// The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
	DatapathProvider *string `pulumi:"datapathProvider"`
	// The default maximum number of pods per node in this cluster. This doesn't work on "routes-based" clusters, clusters that
	// don't have IP Aliasing enabled.
	DefaultMaxPodsPerNode *float64 `pulumi:"defaultMaxPodsPerNode"`
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is
	// disabled.
	DefaultSnatStatus  *ContainerClusterDefaultSnatStatus `pulumi:"defaultSnatStatus"`
	DeletionProtection *bool                              `pulumi:"deletionProtection"`
	// Description of the cluster.
	Description *string `pulumi:"description"`
	// Configuration for Cloud DNS for Kubernetes Engine.
	DnsConfig       *ContainerClusterDnsConfig `pulumi:"dnsConfig"`
	EffectiveLabels map[string]string          `pulumi:"effectiveLabels"`
	// Enable Autopilot for this cluster.
	EnableAutopilot *bool `pulumi:"enableAutopilot"`
	// Whether Cilium cluster-wide network policy is enabled on this cluster.
	EnableCiliumClusterwideNetworkPolicy *bool `pulumi:"enableCiliumClusterwideNetworkPolicy"`
	// Whether FQDN Network Policy is enabled on this cluster.
	EnableFqdnNetworkPolicy *bool `pulumi:"enableFqdnNetworkPolicy"`
	// Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC
	// network.
	EnableIntranodeVisibility *bool `pulumi:"enableIntranodeVisibility"`
	// Configuration for Kubernetes Beta APIs.
	EnableK8sBetaApis *ContainerClusterEnableK8sBetaApis `pulumi:"enableK8sBetaApis"`
	// Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot
	// be upgraded and will be automatically deleted after 30 days.
	EnableKubernetesAlpha *bool `pulumi:"enableKubernetesAlpha"`
	// Whether L4ILB Subsetting is enabled for this cluster.
	EnableL4IlbSubsetting *bool `pulumi:"enableL4IlbSubsetting"`
	// Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service
	// accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC
	// configuration or IAM. Defaults to false.
	EnableLegacyAbac *bool `pulumi:"enableLegacyAbac"`
	// Whether multi-networking is enabled for this cluster.
	EnableMultiNetworking *bool `pulumi:"enableMultiNetworking"`
	// Enable Shielded Nodes features on all nodes in this cluster. Defaults to true.
	EnableShieldedNodes *bool `pulumi:"enableShieldedNodes"`
	// Whether to enable Cloud TPU resources in this cluster.
	EnableTpu *bool `pulumi:"enableTpu"`
	// The IP address of this cluster's Kubernetes master.
	Endpoint *string `pulumi:"endpoint"`
	// Defines the config needed to enable/disable GKE Enterprise
	EnterpriseConfig *ContainerClusterEnterpriseConfig `pulumi:"enterpriseConfig"`
	// Fleet configuration of the cluster.
	Fleet *ContainerClusterFleet `pulumi:"fleet"`
	// Configuration for GKE Gateway API controller.
	GatewayApiConfig *ContainerClusterGatewayApiConfig `pulumi:"gatewayApiConfig"`
	// Configuration for Identity Service which allows customers to use external identity providers with the K8S API.
	IdentityServiceConfig *ContainerClusterIdentityServiceConfig `pulumi:"identityServiceConfig"`
	// The number of nodes to create in this cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if node_pool is not set. If you're using google.ContainerNodePool objects with no
	// default node pool, you'll need to set this to a value of at least 1, alongside setting remove_default_node_pool to true.
	InitialNodeCount *float64 `pulumi:"initialNodeCount"`
	// Configuration of cluster IP allocation for VPC-native clusters. Adding this block enables IP aliasing, making the
	// cluster VPC-native instead of routes-based.
	IpAllocationPolicy *ContainerClusterIpAllocationPolicy `pulumi:"ipAllocationPolicy"`
	// The fingerprint of the set of labels for this cluster.
	LabelFingerprint *string `pulumi:"labelFingerprint"`
	// The location (region or zone) in which the cluster master will be created, as well as the default node location. If you
	// specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify
	// a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the
	// region, and with default node locations in those zones as well.
	Location *string `pulumi:"location"`
	// Logging configuration for the cluster.
	LoggingConfig *ContainerClusterLoggingConfig `pulumi:"loggingConfig"`
	// The logging service that the cluster should write logs to. Available options include logging.googleapis.com(Legacy
	// Stackdriver), logging.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Logging), and none. Defaults to
	// logging.googleapis.com/kubernetes.
	LoggingService *string `pulumi:"loggingService"`
	// The maintenance policy to use for the cluster.
	MaintenancePolicy *ContainerClusterMaintenancePolicy `pulumi:"maintenancePolicy"`
	// The authentication information for accessing the Kubernetes master. Some values in this block are only returned by the
	// API if your service account has permission to get credentials for your GKE cluster. If you see an unexpected diff
	// unsetting your client cert, ensure you have the container.clusters.getCredentials permission.
	MasterAuth *ContainerClusterMasterAuth `pulumi:"masterAuth"`
	// The desired configuration options for master authorized networks. Omit the nested cidr_blocks attribute to disallow
	// external access (except the cluster node IPs, which GKE automatically whitelists).
	MasterAuthorizedNetworksConfig *ContainerClusterMasterAuthorizedNetworksConfig `pulumi:"masterAuthorizedNetworksConfig"`
	// The current version of the master in the cluster. This may be different than the min_master_version set in the config if
	// the master has been updated by GKE.
	MasterVersion *string `pulumi:"masterVersion"`
	// If set, and enable_certificates=true, the GKE Workload Identity Certificates controller and node agent will be deployed
	// in the cluster.
	MeshCertificates *ContainerClusterMeshCertificates `pulumi:"meshCertificates"`
	// The minimum version of the master. GKE will auto-update the master to new versions, so this does not guarantee the
	// current master version--use the read-only master_version field to obtain that. If unset, the cluster's version will be
	// set by GKE to the version of the most recent official release (which is not necessarily the latest version).
	MinMasterVersion *string `pulumi:"minMasterVersion"`
	// Monitoring configuration for the cluster.
	MonitoringConfig *ContainerClusterMonitoringConfig `pulumi:"monitoringConfig"`
	// The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to
	// the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting
	// Available options include monitoring.googleapis.com(Legacy Stackdriver),
	// monitoring.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Monitoring), and none. Defaults to
	// monitoring.googleapis.com/kubernetes.
	MonitoringService *string `pulumi:"monitoringService"`
	// The name of the cluster, unique within the project and location.
	Name *string `pulumi:"name"`
	// The name or self_link of the Google Compute Engine network to which the cluster is connected. For Shared VPC, set this
	// to the self link of the shared network.
	Network *string `pulumi:"network"`
	// Configuration options for the NetworkPolicy feature.
	NetworkPolicy *ContainerClusterNetworkPolicy `pulumi:"networkPolicy"`
	// Determines whether alias IPs or routes will be used for pod IPs in the cluster. Defaults to VPC_NATIVE for new clusters.
	NetworkingMode *string `pulumi:"networkingMode"`
	// The configuration of the nodepool
	NodeConfig *ContainerClusterNodeConfig `pulumi:"nodeConfig"`
	// The list of zones in which the cluster's nodes are located. Nodes must be in the region of their regional cluster or in
	// the same region as their cluster's zone for zonal clusters. If this is specified for a zonal cluster, omit the cluster's
	// zone.
	NodeLocations []string `pulumi:"nodeLocations"`
	// Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled
	// clusters.
	NodePoolAutoConfig *ContainerClusterNodePoolAutoConfig `pulumi:"nodePoolAutoConfig"`
	// The default nodel pool settings for the entire cluster.
	NodePoolDefaults *ContainerClusterNodePoolDefaults `pulumi:"nodePoolDefaults"`
	// List of node pools associated with this cluster. See google.ContainerNodePool for schema. Warning: node pools defined
	// inside a cluster can't be changed (or added/removed) after cluster creation without deleting and recreating the entire
	// cluster. Unless you absolutely need the ability to say "these are the only node pools associated with this cluster", use
	// the google.ContainerNodePool resource instead of this property.
	NodePools   []ContainerClusterNodePool `pulumi:"nodePools"`
	NodeVersion *string                    `pulumi:"nodeVersion"`
	// The notification config for sending cluster upgrade notifications
	NotificationConfig *ContainerClusterNotificationConfig `pulumi:"notificationConfig"`
	Operation          *string                             `pulumi:"operation"`
	// Configuration for private clusters, clusters with private nodes.
	PrivateClusterConfig *ContainerClusterPrivateClusterConfig `pulumi:"privateClusterConfig"`
	// The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services
	// (all access will be via IPv4).
	PrivateIpv6GoogleAccess *string `pulumi:"privateIpv6GoogleAccess"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Configuration options for the Release channel feature, which provide more control over automatic upgrades of your GKE
	// clusters. Note that removing this field from your config will not unenroll it. Instead, use the "UNSPECIFIED" channel.
	ReleaseChannel *ContainerClusterReleaseChannel `pulumi:"releaseChannel"`
	// If true, deletes the default node pool upon cluster creation. If you're using google.ContainerNodePool resources with no
	// default node pool, this should be set to true, alongside setting initial_node_count to at least 1.
	RemoveDefaultNodePool *bool `pulumi:"removeDefaultNodePool"`
	// The GCE resource labels (a map of key/value pairs) to be applied to the cluster. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	ResourceLabels map[string]string `pulumi:"resourceLabels"`
	// Configuration for the ResourceUsageExportConfig feature.
	ResourceUsageExportConfig *ContainerClusterResourceUsageExportConfig `pulumi:"resourceUsageExportConfig"`
	// Configuration for the Secret Manager feature.
	SecretManagerConfig *ContainerClusterSecretManagerConfig `pulumi:"secretManagerConfig"`
	// Defines the config needed to enable/disable features for the Security Posture API
	SecurityPostureConfig *ContainerClusterSecurityPostureConfig `pulumi:"securityPostureConfig"`
	// Server-defined URL for the resource.
	SelfLink *string `pulumi:"selfLink"`
	// If set, and enabled=true, services with external ips field will not be blocked
	ServiceExternalIpsConfig *ContainerClusterServiceExternalIpsConfig `pulumi:"serviceExternalIpsConfig"`
	// The IP address range of the Kubernetes services in this cluster, in CIDR notation (e.g. 1.2.3.4/29). Service addresses
	// are typically put in the last /16 from the container CIDR.
	ServicesIpv4Cidr *string `pulumi:"servicesIpv4Cidr"`
	// The name or self_link of the Google Compute Engine subnetwork in which the cluster's instances are launched.
	Subnetwork *string `pulumi:"subnetwork"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string         `pulumi:"terraformLabels"`
	Timeouts        *ContainerClusterTimeouts `pulumi:"timeouts"`
	// The IP address range of the Cloud TPUs in this cluster, in CIDR notation (e.g. 1.2.3.4/29).
	TpuIpv4CidrBlock *string `pulumi:"tpuIpv4CidrBlock"`
	// The custom keys configuration of the cluster.
	UserManagedKeysConfig *ContainerClusterUserManagedKeysConfig `pulumi:"userManagedKeysConfig"`
	// Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
	VerticalPodAutoscaling *ContainerClusterVerticalPodAutoscaling `pulumi:"verticalPodAutoscaling"`
	// Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
	WorkloadIdentityConfig *ContainerClusterWorkloadIdentityConfig `pulumi:"workloadIdentityConfig"`
}

type ContainerClusterState struct {
	// The configuration for addons supported by GKE.
	AddonsConfig ContainerClusterAddonsConfigPtrInput
	// Enable NET_ADMIN for this cluster.
	AllowNetAdmin pulumi.BoolPtrInput
	// Configuration for the Google Groups for GKE feature.
	AuthenticatorGroupsConfig ContainerClusterAuthenticatorGroupsConfigPtrInput
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization ContainerClusterBinaryAuthorizationPtrInput
	// Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to automatically adjust the size of the
	// cluster and create/delete node pools based on the current needs of the cluster's workload. See the guide to using Node
	// Auto-Provisioning for more details.
	ClusterAutoscaling ContainerClusterClusterAutoscalingPtrInput
	// The IP address range of the Kubernetes pods in this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have
	// one automatically chosen or specify a /14 block in 10.0.0.0/8. This field will only work for routes-based clusters,
	// where ip_allocation_policy is not defined.
	ClusterIpv4Cidr pulumi.StringPtrInput
	// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration
	// can't be changed (or added/removed) after cluster creation without deleting and recreating the entire cluster.
	ConfidentialNodes  ContainerClusterConfidentialNodesPtrInput
	ContainerClusterId pulumi.StringPtrInput
	// Configuration for all of the cluster's control plane endpoints. Currently supports only DNS endpoint configuration, IP
	// endpoint configuration is available in private_cluster_config.
	ControlPlaneEndpointsConfig ContainerClusterControlPlaneEndpointsConfigPtrInput
	// Cost management configuration for the cluster.
	CostManagementConfig ContainerClusterCostManagementConfigPtrInput
	// Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of
	// state are: "ENCRYPTED"; "DECRYPTED". key_name is the name of a CloudKMS key.
	DatabaseEncryption ContainerClusterDatabaseEncryptionPtrInput
	// The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
	DatapathProvider pulumi.StringPtrInput
	// The default maximum number of pods per node in this cluster. This doesn't work on "routes-based" clusters, clusters that
	// don't have IP Aliasing enabled.
	DefaultMaxPodsPerNode pulumi.Float64PtrInput
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is
	// disabled.
	DefaultSnatStatus  ContainerClusterDefaultSnatStatusPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// Description of the cluster.
	Description pulumi.StringPtrInput
	// Configuration for Cloud DNS for Kubernetes Engine.
	DnsConfig       ContainerClusterDnsConfigPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Enable Autopilot for this cluster.
	EnableAutopilot pulumi.BoolPtrInput
	// Whether Cilium cluster-wide network policy is enabled on this cluster.
	EnableCiliumClusterwideNetworkPolicy pulumi.BoolPtrInput
	// Whether FQDN Network Policy is enabled on this cluster.
	EnableFqdnNetworkPolicy pulumi.BoolPtrInput
	// Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC
	// network.
	EnableIntranodeVisibility pulumi.BoolPtrInput
	// Configuration for Kubernetes Beta APIs.
	EnableK8sBetaApis ContainerClusterEnableK8sBetaApisPtrInput
	// Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot
	// be upgraded and will be automatically deleted after 30 days.
	EnableKubernetesAlpha pulumi.BoolPtrInput
	// Whether L4ILB Subsetting is enabled for this cluster.
	EnableL4IlbSubsetting pulumi.BoolPtrInput
	// Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service
	// accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC
	// configuration or IAM. Defaults to false.
	EnableLegacyAbac pulumi.BoolPtrInput
	// Whether multi-networking is enabled for this cluster.
	EnableMultiNetworking pulumi.BoolPtrInput
	// Enable Shielded Nodes features on all nodes in this cluster. Defaults to true.
	EnableShieldedNodes pulumi.BoolPtrInput
	// Whether to enable Cloud TPU resources in this cluster.
	EnableTpu pulumi.BoolPtrInput
	// The IP address of this cluster's Kubernetes master.
	Endpoint pulumi.StringPtrInput
	// Defines the config needed to enable/disable GKE Enterprise
	EnterpriseConfig ContainerClusterEnterpriseConfigPtrInput
	// Fleet configuration of the cluster.
	Fleet ContainerClusterFleetPtrInput
	// Configuration for GKE Gateway API controller.
	GatewayApiConfig ContainerClusterGatewayApiConfigPtrInput
	// Configuration for Identity Service which allows customers to use external identity providers with the K8S API.
	IdentityServiceConfig ContainerClusterIdentityServiceConfigPtrInput
	// The number of nodes to create in this cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if node_pool is not set. If you're using google.ContainerNodePool objects with no
	// default node pool, you'll need to set this to a value of at least 1, alongside setting remove_default_node_pool to true.
	InitialNodeCount pulumi.Float64PtrInput
	// Configuration of cluster IP allocation for VPC-native clusters. Adding this block enables IP aliasing, making the
	// cluster VPC-native instead of routes-based.
	IpAllocationPolicy ContainerClusterIpAllocationPolicyPtrInput
	// The fingerprint of the set of labels for this cluster.
	LabelFingerprint pulumi.StringPtrInput
	// The location (region or zone) in which the cluster master will be created, as well as the default node location. If you
	// specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify
	// a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the
	// region, and with default node locations in those zones as well.
	Location pulumi.StringPtrInput
	// Logging configuration for the cluster.
	LoggingConfig ContainerClusterLoggingConfigPtrInput
	// The logging service that the cluster should write logs to. Available options include logging.googleapis.com(Legacy
	// Stackdriver), logging.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Logging), and none. Defaults to
	// logging.googleapis.com/kubernetes.
	LoggingService pulumi.StringPtrInput
	// The maintenance policy to use for the cluster.
	MaintenancePolicy ContainerClusterMaintenancePolicyPtrInput
	// The authentication information for accessing the Kubernetes master. Some values in this block are only returned by the
	// API if your service account has permission to get credentials for your GKE cluster. If you see an unexpected diff
	// unsetting your client cert, ensure you have the container.clusters.getCredentials permission.
	MasterAuth ContainerClusterMasterAuthPtrInput
	// The desired configuration options for master authorized networks. Omit the nested cidr_blocks attribute to disallow
	// external access (except the cluster node IPs, which GKE automatically whitelists).
	MasterAuthorizedNetworksConfig ContainerClusterMasterAuthorizedNetworksConfigPtrInput
	// The current version of the master in the cluster. This may be different than the min_master_version set in the config if
	// the master has been updated by GKE.
	MasterVersion pulumi.StringPtrInput
	// If set, and enable_certificates=true, the GKE Workload Identity Certificates controller and node agent will be deployed
	// in the cluster.
	MeshCertificates ContainerClusterMeshCertificatesPtrInput
	// The minimum version of the master. GKE will auto-update the master to new versions, so this does not guarantee the
	// current master version--use the read-only master_version field to obtain that. If unset, the cluster's version will be
	// set by GKE to the version of the most recent official release (which is not necessarily the latest version).
	MinMasterVersion pulumi.StringPtrInput
	// Monitoring configuration for the cluster.
	MonitoringConfig ContainerClusterMonitoringConfigPtrInput
	// The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to
	// the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting
	// Available options include monitoring.googleapis.com(Legacy Stackdriver),
	// monitoring.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Monitoring), and none. Defaults to
	// monitoring.googleapis.com/kubernetes.
	MonitoringService pulumi.StringPtrInput
	// The name of the cluster, unique within the project and location.
	Name pulumi.StringPtrInput
	// The name or self_link of the Google Compute Engine network to which the cluster is connected. For Shared VPC, set this
	// to the self link of the shared network.
	Network pulumi.StringPtrInput
	// Configuration options for the NetworkPolicy feature.
	NetworkPolicy ContainerClusterNetworkPolicyPtrInput
	// Determines whether alias IPs or routes will be used for pod IPs in the cluster. Defaults to VPC_NATIVE for new clusters.
	NetworkingMode pulumi.StringPtrInput
	// The configuration of the nodepool
	NodeConfig ContainerClusterNodeConfigPtrInput
	// The list of zones in which the cluster's nodes are located. Nodes must be in the region of their regional cluster or in
	// the same region as their cluster's zone for zonal clusters. If this is specified for a zonal cluster, omit the cluster's
	// zone.
	NodeLocations pulumi.StringArrayInput
	// Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled
	// clusters.
	NodePoolAutoConfig ContainerClusterNodePoolAutoConfigPtrInput
	// The default nodel pool settings for the entire cluster.
	NodePoolDefaults ContainerClusterNodePoolDefaultsPtrInput
	// List of node pools associated with this cluster. See google.ContainerNodePool for schema. Warning: node pools defined
	// inside a cluster can't be changed (or added/removed) after cluster creation without deleting and recreating the entire
	// cluster. Unless you absolutely need the ability to say "these are the only node pools associated with this cluster", use
	// the google.ContainerNodePool resource instead of this property.
	NodePools   ContainerClusterNodePoolArrayInput
	NodeVersion pulumi.StringPtrInput
	// The notification config for sending cluster upgrade notifications
	NotificationConfig ContainerClusterNotificationConfigPtrInput
	Operation          pulumi.StringPtrInput
	// Configuration for private clusters, clusters with private nodes.
	PrivateClusterConfig ContainerClusterPrivateClusterConfigPtrInput
	// The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services
	// (all access will be via IPv4).
	PrivateIpv6GoogleAccess pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Configuration options for the Release channel feature, which provide more control over automatic upgrades of your GKE
	// clusters. Note that removing this field from your config will not unenroll it. Instead, use the "UNSPECIFIED" channel.
	ReleaseChannel ContainerClusterReleaseChannelPtrInput
	// If true, deletes the default node pool upon cluster creation. If you're using google.ContainerNodePool resources with no
	// default node pool, this should be set to true, alongside setting initial_node_count to at least 1.
	RemoveDefaultNodePool pulumi.BoolPtrInput
	// The GCE resource labels (a map of key/value pairs) to be applied to the cluster. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	ResourceLabels pulumi.StringMapInput
	// Configuration for the ResourceUsageExportConfig feature.
	ResourceUsageExportConfig ContainerClusterResourceUsageExportConfigPtrInput
	// Configuration for the Secret Manager feature.
	SecretManagerConfig ContainerClusterSecretManagerConfigPtrInput
	// Defines the config needed to enable/disable features for the Security Posture API
	SecurityPostureConfig ContainerClusterSecurityPostureConfigPtrInput
	// Server-defined URL for the resource.
	SelfLink pulumi.StringPtrInput
	// If set, and enabled=true, services with external ips field will not be blocked
	ServiceExternalIpsConfig ContainerClusterServiceExternalIpsConfigPtrInput
	// The IP address range of the Kubernetes services in this cluster, in CIDR notation (e.g. 1.2.3.4/29). Service addresses
	// are typically put in the last /16 from the container CIDR.
	ServicesIpv4Cidr pulumi.StringPtrInput
	// The name or self_link of the Google Compute Engine subnetwork in which the cluster's instances are launched.
	Subnetwork pulumi.StringPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        ContainerClusterTimeoutsPtrInput
	// The IP address range of the Cloud TPUs in this cluster, in CIDR notation (e.g. 1.2.3.4/29).
	TpuIpv4CidrBlock pulumi.StringPtrInput
	// The custom keys configuration of the cluster.
	UserManagedKeysConfig ContainerClusterUserManagedKeysConfigPtrInput
	// Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
	VerticalPodAutoscaling ContainerClusterVerticalPodAutoscalingPtrInput
	// Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
	WorkloadIdentityConfig ContainerClusterWorkloadIdentityConfigPtrInput
}

func (ContainerClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerClusterState)(nil)).Elem()
}

type containerClusterArgs struct {
	// The configuration for addons supported by GKE.
	AddonsConfig *ContainerClusterAddonsConfig `pulumi:"addonsConfig"`
	// Enable NET_ADMIN for this cluster.
	AllowNetAdmin *bool `pulumi:"allowNetAdmin"`
	// Configuration for the Google Groups for GKE feature.
	AuthenticatorGroupsConfig *ContainerClusterAuthenticatorGroupsConfig `pulumi:"authenticatorGroupsConfig"`
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization *ContainerClusterBinaryAuthorization `pulumi:"binaryAuthorization"`
	// Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to automatically adjust the size of the
	// cluster and create/delete node pools based on the current needs of the cluster's workload. See the guide to using Node
	// Auto-Provisioning for more details.
	ClusterAutoscaling *ContainerClusterClusterAutoscaling `pulumi:"clusterAutoscaling"`
	// The IP address range of the Kubernetes pods in this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have
	// one automatically chosen or specify a /14 block in 10.0.0.0/8. This field will only work for routes-based clusters,
	// where ip_allocation_policy is not defined.
	ClusterIpv4Cidr *string `pulumi:"clusterIpv4Cidr"`
	// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration
	// can't be changed (or added/removed) after cluster creation without deleting and recreating the entire cluster.
	ConfidentialNodes  *ContainerClusterConfidentialNodes `pulumi:"confidentialNodes"`
	ContainerClusterId *string                            `pulumi:"containerClusterId"`
	// Configuration for all of the cluster's control plane endpoints. Currently supports only DNS endpoint configuration, IP
	// endpoint configuration is available in private_cluster_config.
	ControlPlaneEndpointsConfig *ContainerClusterControlPlaneEndpointsConfig `pulumi:"controlPlaneEndpointsConfig"`
	// Cost management configuration for the cluster.
	CostManagementConfig *ContainerClusterCostManagementConfig `pulumi:"costManagementConfig"`
	// Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of
	// state are: "ENCRYPTED"; "DECRYPTED". key_name is the name of a CloudKMS key.
	DatabaseEncryption *ContainerClusterDatabaseEncryption `pulumi:"databaseEncryption"`
	// The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
	DatapathProvider *string `pulumi:"datapathProvider"`
	// The default maximum number of pods per node in this cluster. This doesn't work on "routes-based" clusters, clusters that
	// don't have IP Aliasing enabled.
	DefaultMaxPodsPerNode *float64 `pulumi:"defaultMaxPodsPerNode"`
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is
	// disabled.
	DefaultSnatStatus  *ContainerClusterDefaultSnatStatus `pulumi:"defaultSnatStatus"`
	DeletionProtection *bool                              `pulumi:"deletionProtection"`
	// Description of the cluster.
	Description *string `pulumi:"description"`
	// Configuration for Cloud DNS for Kubernetes Engine.
	DnsConfig *ContainerClusterDnsConfig `pulumi:"dnsConfig"`
	// Enable Autopilot for this cluster.
	EnableAutopilot *bool `pulumi:"enableAutopilot"`
	// Whether Cilium cluster-wide network policy is enabled on this cluster.
	EnableCiliumClusterwideNetworkPolicy *bool `pulumi:"enableCiliumClusterwideNetworkPolicy"`
	// Whether FQDN Network Policy is enabled on this cluster.
	EnableFqdnNetworkPolicy *bool `pulumi:"enableFqdnNetworkPolicy"`
	// Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC
	// network.
	EnableIntranodeVisibility *bool `pulumi:"enableIntranodeVisibility"`
	// Configuration for Kubernetes Beta APIs.
	EnableK8sBetaApis *ContainerClusterEnableK8sBetaApis `pulumi:"enableK8sBetaApis"`
	// Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot
	// be upgraded and will be automatically deleted after 30 days.
	EnableKubernetesAlpha *bool `pulumi:"enableKubernetesAlpha"`
	// Whether L4ILB Subsetting is enabled for this cluster.
	EnableL4IlbSubsetting *bool `pulumi:"enableL4IlbSubsetting"`
	// Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service
	// accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC
	// configuration or IAM. Defaults to false.
	EnableLegacyAbac *bool `pulumi:"enableLegacyAbac"`
	// Whether multi-networking is enabled for this cluster.
	EnableMultiNetworking *bool `pulumi:"enableMultiNetworking"`
	// Enable Shielded Nodes features on all nodes in this cluster. Defaults to true.
	EnableShieldedNodes *bool `pulumi:"enableShieldedNodes"`
	// Whether to enable Cloud TPU resources in this cluster.
	EnableTpu *bool `pulumi:"enableTpu"`
	// Defines the config needed to enable/disable GKE Enterprise
	EnterpriseConfig *ContainerClusterEnterpriseConfig `pulumi:"enterpriseConfig"`
	// Fleet configuration of the cluster.
	Fleet *ContainerClusterFleet `pulumi:"fleet"`
	// Configuration for GKE Gateway API controller.
	GatewayApiConfig *ContainerClusterGatewayApiConfig `pulumi:"gatewayApiConfig"`
	// Configuration for Identity Service which allows customers to use external identity providers with the K8S API.
	IdentityServiceConfig *ContainerClusterIdentityServiceConfig `pulumi:"identityServiceConfig"`
	// The number of nodes to create in this cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if node_pool is not set. If you're using google.ContainerNodePool objects with no
	// default node pool, you'll need to set this to a value of at least 1, alongside setting remove_default_node_pool to true.
	InitialNodeCount *float64 `pulumi:"initialNodeCount"`
	// Configuration of cluster IP allocation for VPC-native clusters. Adding this block enables IP aliasing, making the
	// cluster VPC-native instead of routes-based.
	IpAllocationPolicy *ContainerClusterIpAllocationPolicy `pulumi:"ipAllocationPolicy"`
	// The location (region or zone) in which the cluster master will be created, as well as the default node location. If you
	// specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify
	// a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the
	// region, and with default node locations in those zones as well.
	Location *string `pulumi:"location"`
	// Logging configuration for the cluster.
	LoggingConfig *ContainerClusterLoggingConfig `pulumi:"loggingConfig"`
	// The logging service that the cluster should write logs to. Available options include logging.googleapis.com(Legacy
	// Stackdriver), logging.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Logging), and none. Defaults to
	// logging.googleapis.com/kubernetes.
	LoggingService *string `pulumi:"loggingService"`
	// The maintenance policy to use for the cluster.
	MaintenancePolicy *ContainerClusterMaintenancePolicy `pulumi:"maintenancePolicy"`
	// The authentication information for accessing the Kubernetes master. Some values in this block are only returned by the
	// API if your service account has permission to get credentials for your GKE cluster. If you see an unexpected diff
	// unsetting your client cert, ensure you have the container.clusters.getCredentials permission.
	MasterAuth *ContainerClusterMasterAuth `pulumi:"masterAuth"`
	// The desired configuration options for master authorized networks. Omit the nested cidr_blocks attribute to disallow
	// external access (except the cluster node IPs, which GKE automatically whitelists).
	MasterAuthorizedNetworksConfig *ContainerClusterMasterAuthorizedNetworksConfig `pulumi:"masterAuthorizedNetworksConfig"`
	// If set, and enable_certificates=true, the GKE Workload Identity Certificates controller and node agent will be deployed
	// in the cluster.
	MeshCertificates *ContainerClusterMeshCertificates `pulumi:"meshCertificates"`
	// The minimum version of the master. GKE will auto-update the master to new versions, so this does not guarantee the
	// current master version--use the read-only master_version field to obtain that. If unset, the cluster's version will be
	// set by GKE to the version of the most recent official release (which is not necessarily the latest version).
	MinMasterVersion *string `pulumi:"minMasterVersion"`
	// Monitoring configuration for the cluster.
	MonitoringConfig *ContainerClusterMonitoringConfig `pulumi:"monitoringConfig"`
	// The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to
	// the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting
	// Available options include monitoring.googleapis.com(Legacy Stackdriver),
	// monitoring.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Monitoring), and none. Defaults to
	// monitoring.googleapis.com/kubernetes.
	MonitoringService *string `pulumi:"monitoringService"`
	// The name of the cluster, unique within the project and location.
	Name *string `pulumi:"name"`
	// The name or self_link of the Google Compute Engine network to which the cluster is connected. For Shared VPC, set this
	// to the self link of the shared network.
	Network *string `pulumi:"network"`
	// Configuration options for the NetworkPolicy feature.
	NetworkPolicy *ContainerClusterNetworkPolicy `pulumi:"networkPolicy"`
	// Determines whether alias IPs or routes will be used for pod IPs in the cluster. Defaults to VPC_NATIVE for new clusters.
	NetworkingMode *string `pulumi:"networkingMode"`
	// The configuration of the nodepool
	NodeConfig *ContainerClusterNodeConfig `pulumi:"nodeConfig"`
	// The list of zones in which the cluster's nodes are located. Nodes must be in the region of their regional cluster or in
	// the same region as their cluster's zone for zonal clusters. If this is specified for a zonal cluster, omit the cluster's
	// zone.
	NodeLocations []string `pulumi:"nodeLocations"`
	// Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled
	// clusters.
	NodePoolAutoConfig *ContainerClusterNodePoolAutoConfig `pulumi:"nodePoolAutoConfig"`
	// The default nodel pool settings for the entire cluster.
	NodePoolDefaults *ContainerClusterNodePoolDefaults `pulumi:"nodePoolDefaults"`
	// List of node pools associated with this cluster. See google.ContainerNodePool for schema. Warning: node pools defined
	// inside a cluster can't be changed (or added/removed) after cluster creation without deleting and recreating the entire
	// cluster. Unless you absolutely need the ability to say "these are the only node pools associated with this cluster", use
	// the google.ContainerNodePool resource instead of this property.
	NodePools   []ContainerClusterNodePool `pulumi:"nodePools"`
	NodeVersion *string                    `pulumi:"nodeVersion"`
	// The notification config for sending cluster upgrade notifications
	NotificationConfig *ContainerClusterNotificationConfig `pulumi:"notificationConfig"`
	// Configuration for private clusters, clusters with private nodes.
	PrivateClusterConfig *ContainerClusterPrivateClusterConfig `pulumi:"privateClusterConfig"`
	// The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services
	// (all access will be via IPv4).
	PrivateIpv6GoogleAccess *string `pulumi:"privateIpv6GoogleAccess"`
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project *string `pulumi:"project"`
	// Configuration options for the Release channel feature, which provide more control over automatic upgrades of your GKE
	// clusters. Note that removing this field from your config will not unenroll it. Instead, use the "UNSPECIFIED" channel.
	ReleaseChannel *ContainerClusterReleaseChannel `pulumi:"releaseChannel"`
	// If true, deletes the default node pool upon cluster creation. If you're using google.ContainerNodePool resources with no
	// default node pool, this should be set to true, alongside setting initial_node_count to at least 1.
	RemoveDefaultNodePool *bool `pulumi:"removeDefaultNodePool"`
	// The GCE resource labels (a map of key/value pairs) to be applied to the cluster. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	ResourceLabels map[string]string `pulumi:"resourceLabels"`
	// Configuration for the ResourceUsageExportConfig feature.
	ResourceUsageExportConfig *ContainerClusterResourceUsageExportConfig `pulumi:"resourceUsageExportConfig"`
	// Configuration for the Secret Manager feature.
	SecretManagerConfig *ContainerClusterSecretManagerConfig `pulumi:"secretManagerConfig"`
	// Defines the config needed to enable/disable features for the Security Posture API
	SecurityPostureConfig *ContainerClusterSecurityPostureConfig `pulumi:"securityPostureConfig"`
	// If set, and enabled=true, services with external ips field will not be blocked
	ServiceExternalIpsConfig *ContainerClusterServiceExternalIpsConfig `pulumi:"serviceExternalIpsConfig"`
	// The name or self_link of the Google Compute Engine subnetwork in which the cluster's instances are launched.
	Subnetwork *string                   `pulumi:"subnetwork"`
	Timeouts   *ContainerClusterTimeouts `pulumi:"timeouts"`
	// The custom keys configuration of the cluster.
	UserManagedKeysConfig *ContainerClusterUserManagedKeysConfig `pulumi:"userManagedKeysConfig"`
	// Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
	VerticalPodAutoscaling *ContainerClusterVerticalPodAutoscaling `pulumi:"verticalPodAutoscaling"`
	// Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
	WorkloadIdentityConfig *ContainerClusterWorkloadIdentityConfig `pulumi:"workloadIdentityConfig"`
}

// The set of arguments for constructing a ContainerCluster resource.
type ContainerClusterArgs struct {
	// The configuration for addons supported by GKE.
	AddonsConfig ContainerClusterAddonsConfigPtrInput
	// Enable NET_ADMIN for this cluster.
	AllowNetAdmin pulumi.BoolPtrInput
	// Configuration for the Google Groups for GKE feature.
	AuthenticatorGroupsConfig ContainerClusterAuthenticatorGroupsConfigPtrInput
	// Configuration options for the Binary Authorization feature.
	BinaryAuthorization ContainerClusterBinaryAuthorizationPtrInput
	// Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to automatically adjust the size of the
	// cluster and create/delete node pools based on the current needs of the cluster's workload. See the guide to using Node
	// Auto-Provisioning for more details.
	ClusterAutoscaling ContainerClusterClusterAutoscalingPtrInput
	// The IP address range of the Kubernetes pods in this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have
	// one automatically chosen or specify a /14 block in 10.0.0.0/8. This field will only work for routes-based clusters,
	// where ip_allocation_policy is not defined.
	ClusterIpv4Cidr pulumi.StringPtrInput
	// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration
	// can't be changed (or added/removed) after cluster creation without deleting and recreating the entire cluster.
	ConfidentialNodes  ContainerClusterConfidentialNodesPtrInput
	ContainerClusterId pulumi.StringPtrInput
	// Configuration for all of the cluster's control plane endpoints. Currently supports only DNS endpoint configuration, IP
	// endpoint configuration is available in private_cluster_config.
	ControlPlaneEndpointsConfig ContainerClusterControlPlaneEndpointsConfigPtrInput
	// Cost management configuration for the cluster.
	CostManagementConfig ContainerClusterCostManagementConfigPtrInput
	// Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of
	// state are: "ENCRYPTED"; "DECRYPTED". key_name is the name of a CloudKMS key.
	DatabaseEncryption ContainerClusterDatabaseEncryptionPtrInput
	// The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
	DatapathProvider pulumi.StringPtrInput
	// The default maximum number of pods per node in this cluster. This doesn't work on "routes-based" clusters, clusters that
	// don't have IP Aliasing enabled.
	DefaultMaxPodsPerNode pulumi.Float64PtrInput
	// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is
	// disabled.
	DefaultSnatStatus  ContainerClusterDefaultSnatStatusPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// Description of the cluster.
	Description pulumi.StringPtrInput
	// Configuration for Cloud DNS for Kubernetes Engine.
	DnsConfig ContainerClusterDnsConfigPtrInput
	// Enable Autopilot for this cluster.
	EnableAutopilot pulumi.BoolPtrInput
	// Whether Cilium cluster-wide network policy is enabled on this cluster.
	EnableCiliumClusterwideNetworkPolicy pulumi.BoolPtrInput
	// Whether FQDN Network Policy is enabled on this cluster.
	EnableFqdnNetworkPolicy pulumi.BoolPtrInput
	// Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC
	// network.
	EnableIntranodeVisibility pulumi.BoolPtrInput
	// Configuration for Kubernetes Beta APIs.
	EnableK8sBetaApis ContainerClusterEnableK8sBetaApisPtrInput
	// Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot
	// be upgraded and will be automatically deleted after 30 days.
	EnableKubernetesAlpha pulumi.BoolPtrInput
	// Whether L4ILB Subsetting is enabled for this cluster.
	EnableL4IlbSubsetting pulumi.BoolPtrInput
	// Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service
	// accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC
	// configuration or IAM. Defaults to false.
	EnableLegacyAbac pulumi.BoolPtrInput
	// Whether multi-networking is enabled for this cluster.
	EnableMultiNetworking pulumi.BoolPtrInput
	// Enable Shielded Nodes features on all nodes in this cluster. Defaults to true.
	EnableShieldedNodes pulumi.BoolPtrInput
	// Whether to enable Cloud TPU resources in this cluster.
	EnableTpu pulumi.BoolPtrInput
	// Defines the config needed to enable/disable GKE Enterprise
	EnterpriseConfig ContainerClusterEnterpriseConfigPtrInput
	// Fleet configuration of the cluster.
	Fleet ContainerClusterFleetPtrInput
	// Configuration for GKE Gateway API controller.
	GatewayApiConfig ContainerClusterGatewayApiConfigPtrInput
	// Configuration for Identity Service which allows customers to use external identity providers with the K8S API.
	IdentityServiceConfig ContainerClusterIdentityServiceConfigPtrInput
	// The number of nodes to create in this cluster's default node pool. In regional or multi-zonal clusters, this is the
	// number of nodes per zone. Must be set if node_pool is not set. If you're using google.ContainerNodePool objects with no
	// default node pool, you'll need to set this to a value of at least 1, alongside setting remove_default_node_pool to true.
	InitialNodeCount pulumi.Float64PtrInput
	// Configuration of cluster IP allocation for VPC-native clusters. Adding this block enables IP aliasing, making the
	// cluster VPC-native instead of routes-based.
	IpAllocationPolicy ContainerClusterIpAllocationPolicyPtrInput
	// The location (region or zone) in which the cluster master will be created, as well as the default node location. If you
	// specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify
	// a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the
	// region, and with default node locations in those zones as well.
	Location pulumi.StringPtrInput
	// Logging configuration for the cluster.
	LoggingConfig ContainerClusterLoggingConfigPtrInput
	// The logging service that the cluster should write logs to. Available options include logging.googleapis.com(Legacy
	// Stackdriver), logging.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Logging), and none. Defaults to
	// logging.googleapis.com/kubernetes.
	LoggingService pulumi.StringPtrInput
	// The maintenance policy to use for the cluster.
	MaintenancePolicy ContainerClusterMaintenancePolicyPtrInput
	// The authentication information for accessing the Kubernetes master. Some values in this block are only returned by the
	// API if your service account has permission to get credentials for your GKE cluster. If you see an unexpected diff
	// unsetting your client cert, ensure you have the container.clusters.getCredentials permission.
	MasterAuth ContainerClusterMasterAuthPtrInput
	// The desired configuration options for master authorized networks. Omit the nested cidr_blocks attribute to disallow
	// external access (except the cluster node IPs, which GKE automatically whitelists).
	MasterAuthorizedNetworksConfig ContainerClusterMasterAuthorizedNetworksConfigPtrInput
	// If set, and enable_certificates=true, the GKE Workload Identity Certificates controller and node agent will be deployed
	// in the cluster.
	MeshCertificates ContainerClusterMeshCertificatesPtrInput
	// The minimum version of the master. GKE will auto-update the master to new versions, so this does not guarantee the
	// current master version--use the read-only master_version field to obtain that. If unset, the cluster's version will be
	// set by GKE to the version of the most recent official release (which is not necessarily the latest version).
	MinMasterVersion pulumi.StringPtrInput
	// Monitoring configuration for the cluster.
	MonitoringConfig ContainerClusterMonitoringConfigPtrInput
	// The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to
	// the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting
	// Available options include monitoring.googleapis.com(Legacy Stackdriver),
	// monitoring.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Monitoring), and none. Defaults to
	// monitoring.googleapis.com/kubernetes.
	MonitoringService pulumi.StringPtrInput
	// The name of the cluster, unique within the project and location.
	Name pulumi.StringPtrInput
	// The name or self_link of the Google Compute Engine network to which the cluster is connected. For Shared VPC, set this
	// to the self link of the shared network.
	Network pulumi.StringPtrInput
	// Configuration options for the NetworkPolicy feature.
	NetworkPolicy ContainerClusterNetworkPolicyPtrInput
	// Determines whether alias IPs or routes will be used for pod IPs in the cluster. Defaults to VPC_NATIVE for new clusters.
	NetworkingMode pulumi.StringPtrInput
	// The configuration of the nodepool
	NodeConfig ContainerClusterNodeConfigPtrInput
	// The list of zones in which the cluster's nodes are located. Nodes must be in the region of their regional cluster or in
	// the same region as their cluster's zone for zonal clusters. If this is specified for a zonal cluster, omit the cluster's
	// zone.
	NodeLocations pulumi.StringArrayInput
	// Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled
	// clusters.
	NodePoolAutoConfig ContainerClusterNodePoolAutoConfigPtrInput
	// The default nodel pool settings for the entire cluster.
	NodePoolDefaults ContainerClusterNodePoolDefaultsPtrInput
	// List of node pools associated with this cluster. See google.ContainerNodePool for schema. Warning: node pools defined
	// inside a cluster can't be changed (or added/removed) after cluster creation without deleting and recreating the entire
	// cluster. Unless you absolutely need the ability to say "these are the only node pools associated with this cluster", use
	// the google.ContainerNodePool resource instead of this property.
	NodePools   ContainerClusterNodePoolArrayInput
	NodeVersion pulumi.StringPtrInput
	// The notification config for sending cluster upgrade notifications
	NotificationConfig ContainerClusterNotificationConfigPtrInput
	// Configuration for private clusters, clusters with private nodes.
	PrivateClusterConfig ContainerClusterPrivateClusterConfigPtrInput
	// The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services
	// (all access will be via IPv4).
	PrivateIpv6GoogleAccess pulumi.StringPtrInput
	// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
	Project pulumi.StringPtrInput
	// Configuration options for the Release channel feature, which provide more control over automatic upgrades of your GKE
	// clusters. Note that removing this field from your config will not unenroll it. Instead, use the "UNSPECIFIED" channel.
	ReleaseChannel ContainerClusterReleaseChannelPtrInput
	// If true, deletes the default node pool upon cluster creation. If you're using google.ContainerNodePool resources with no
	// default node pool, this should be set to true, alongside setting initial_node_count to at least 1.
	RemoveDefaultNodePool pulumi.BoolPtrInput
	// The GCE resource labels (a map of key/value pairs) to be applied to the cluster. **Note**: This field is
	// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
	// 'effective_labels' for all of the labels present on the resource.
	ResourceLabels pulumi.StringMapInput
	// Configuration for the ResourceUsageExportConfig feature.
	ResourceUsageExportConfig ContainerClusterResourceUsageExportConfigPtrInput
	// Configuration for the Secret Manager feature.
	SecretManagerConfig ContainerClusterSecretManagerConfigPtrInput
	// Defines the config needed to enable/disable features for the Security Posture API
	SecurityPostureConfig ContainerClusterSecurityPostureConfigPtrInput
	// If set, and enabled=true, services with external ips field will not be blocked
	ServiceExternalIpsConfig ContainerClusterServiceExternalIpsConfigPtrInput
	// The name or self_link of the Google Compute Engine subnetwork in which the cluster's instances are launched.
	Subnetwork pulumi.StringPtrInput
	Timeouts   ContainerClusterTimeoutsPtrInput
	// The custom keys configuration of the cluster.
	UserManagedKeysConfig ContainerClusterUserManagedKeysConfigPtrInput
	// Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
	VerticalPodAutoscaling ContainerClusterVerticalPodAutoscalingPtrInput
	// Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
	WorkloadIdentityConfig ContainerClusterWorkloadIdentityConfigPtrInput
}

func (ContainerClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerClusterArgs)(nil)).Elem()
}

type ContainerClusterInput interface {
	pulumi.Input

	ToContainerClusterOutput() ContainerClusterOutput
	ToContainerClusterOutputWithContext(ctx context.Context) ContainerClusterOutput
}

func (*ContainerCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerCluster)(nil)).Elem()
}

func (i *ContainerCluster) ToContainerClusterOutput() ContainerClusterOutput {
	return i.ToContainerClusterOutputWithContext(context.Background())
}

func (i *ContainerCluster) ToContainerClusterOutputWithContext(ctx context.Context) ContainerClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerClusterOutput)
}

type ContainerClusterOutput struct{ *pulumi.OutputState }

func (ContainerClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerCluster)(nil)).Elem()
}

func (o ContainerClusterOutput) ToContainerClusterOutput() ContainerClusterOutput {
	return o
}

func (o ContainerClusterOutput) ToContainerClusterOutputWithContext(ctx context.Context) ContainerClusterOutput {
	return o
}

// The configuration for addons supported by GKE.
func (o ContainerClusterOutput) AddonsConfig() ContainerClusterAddonsConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterAddonsConfigPtrOutput { return v.AddonsConfig }).(ContainerClusterAddonsConfigPtrOutput)
}

// Enable NET_ADMIN for this cluster.
func (o ContainerClusterOutput) AllowNetAdmin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.AllowNetAdmin }).(pulumi.BoolPtrOutput)
}

// Configuration for the Google Groups for GKE feature.
func (o ContainerClusterOutput) AuthenticatorGroupsConfig() ContainerClusterAuthenticatorGroupsConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterAuthenticatorGroupsConfigPtrOutput {
		return v.AuthenticatorGroupsConfig
	}).(ContainerClusterAuthenticatorGroupsConfigPtrOutput)
}

// Configuration options for the Binary Authorization feature.
func (o ContainerClusterOutput) BinaryAuthorization() ContainerClusterBinaryAuthorizationPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterBinaryAuthorizationPtrOutput { return v.BinaryAuthorization }).(ContainerClusterBinaryAuthorizationPtrOutput)
}

// Per-cluster configuration of Node Auto-Provisioning with Cluster Autoscaler to automatically adjust the size of the
// cluster and create/delete node pools based on the current needs of the cluster's workload. See the guide to using Node
// Auto-Provisioning for more details.
func (o ContainerClusterOutput) ClusterAutoscaling() ContainerClusterClusterAutoscalingPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterClusterAutoscalingPtrOutput { return v.ClusterAutoscaling }).(ContainerClusterClusterAutoscalingPtrOutput)
}

// The IP address range of the Kubernetes pods in this cluster in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have
// one automatically chosen or specify a /14 block in 10.0.0.0/8. This field will only work for routes-based clusters,
// where ip_allocation_policy is not defined.
func (o ContainerClusterOutput) ClusterIpv4Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.ClusterIpv4Cidr }).(pulumi.StringOutput)
}

// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration
// can't be changed (or added/removed) after cluster creation without deleting and recreating the entire cluster.
func (o ContainerClusterOutput) ConfidentialNodes() ContainerClusterConfidentialNodesPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterConfidentialNodesPtrOutput { return v.ConfidentialNodes }).(ContainerClusterConfidentialNodesPtrOutput)
}

func (o ContainerClusterOutput) ContainerClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.ContainerClusterId }).(pulumi.StringOutput)
}

// Configuration for all of the cluster's control plane endpoints. Currently supports only DNS endpoint configuration, IP
// endpoint configuration is available in private_cluster_config.
func (o ContainerClusterOutput) ControlPlaneEndpointsConfig() ContainerClusterControlPlaneEndpointsConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterControlPlaneEndpointsConfigPtrOutput {
		return v.ControlPlaneEndpointsConfig
	}).(ContainerClusterControlPlaneEndpointsConfigPtrOutput)
}

// Cost management configuration for the cluster.
func (o ContainerClusterOutput) CostManagementConfig() ContainerClusterCostManagementConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterCostManagementConfigPtrOutput { return v.CostManagementConfig }).(ContainerClusterCostManagementConfigPtrOutput)
}

// Application-layer Secrets Encryption settings. The object format is {state = string, key_name = string}. Valid values of
// state are: "ENCRYPTED"; "DECRYPTED". key_name is the name of a CloudKMS key.
func (o ContainerClusterOutput) DatabaseEncryption() ContainerClusterDatabaseEncryptionPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterDatabaseEncryptionPtrOutput { return v.DatabaseEncryption }).(ContainerClusterDatabaseEncryptionPtrOutput)
}

// The desired datapath provider for this cluster. By default, uses the IPTables-based kube-proxy implementation.
func (o ContainerClusterOutput) DatapathProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.DatapathProvider }).(pulumi.StringOutput)
}

// The default maximum number of pods per node in this cluster. This doesn't work on "routes-based" clusters, clusters that
// don't have IP Aliasing enabled.
func (o ContainerClusterOutput) DefaultMaxPodsPerNode() pulumi.Float64Output {
	return o.ApplyT(func(v *ContainerCluster) pulumi.Float64Output { return v.DefaultMaxPodsPerNode }).(pulumi.Float64Output)
}

// Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is
// disabled.
func (o ContainerClusterOutput) DefaultSnatStatus() ContainerClusterDefaultSnatStatusPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterDefaultSnatStatusPtrOutput { return v.DefaultSnatStatus }).(ContainerClusterDefaultSnatStatusPtrOutput)
}

func (o ContainerClusterOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// Description of the cluster.
func (o ContainerClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Configuration for Cloud DNS for Kubernetes Engine.
func (o ContainerClusterOutput) DnsConfig() ContainerClusterDnsConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterDnsConfigPtrOutput { return v.DnsConfig }).(ContainerClusterDnsConfigPtrOutput)
}

func (o ContainerClusterOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Enable Autopilot for this cluster.
func (o ContainerClusterOutput) EnableAutopilot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.EnableAutopilot }).(pulumi.BoolPtrOutput)
}

// Whether Cilium cluster-wide network policy is enabled on this cluster.
func (o ContainerClusterOutput) EnableCiliumClusterwideNetworkPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.EnableCiliumClusterwideNetworkPolicy }).(pulumi.BoolPtrOutput)
}

// Whether FQDN Network Policy is enabled on this cluster.
func (o ContainerClusterOutput) EnableFqdnNetworkPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.EnableFqdnNetworkPolicy }).(pulumi.BoolPtrOutput)
}

// Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC
// network.
func (o ContainerClusterOutput) EnableIntranodeVisibility() pulumi.BoolOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolOutput { return v.EnableIntranodeVisibility }).(pulumi.BoolOutput)
}

// Configuration for Kubernetes Beta APIs.
func (o ContainerClusterOutput) EnableK8sBetaApis() ContainerClusterEnableK8sBetaApisPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterEnableK8sBetaApisPtrOutput { return v.EnableK8sBetaApis }).(ContainerClusterEnableK8sBetaApisPtrOutput)
}

// Whether to enable Kubernetes Alpha features for this cluster. Note that when this option is enabled, the cluster cannot
// be upgraded and will be automatically deleted after 30 days.
func (o ContainerClusterOutput) EnableKubernetesAlpha() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.EnableKubernetesAlpha }).(pulumi.BoolPtrOutput)
}

// Whether L4ILB Subsetting is enabled for this cluster.
func (o ContainerClusterOutput) EnableL4IlbSubsetting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.EnableL4IlbSubsetting }).(pulumi.BoolPtrOutput)
}

// Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service
// accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC
// configuration or IAM. Defaults to false.
func (o ContainerClusterOutput) EnableLegacyAbac() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.EnableLegacyAbac }).(pulumi.BoolPtrOutput)
}

// Whether multi-networking is enabled for this cluster.
func (o ContainerClusterOutput) EnableMultiNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.EnableMultiNetworking }).(pulumi.BoolPtrOutput)
}

// Enable Shielded Nodes features on all nodes in this cluster. Defaults to true.
func (o ContainerClusterOutput) EnableShieldedNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.EnableShieldedNodes }).(pulumi.BoolPtrOutput)
}

// Whether to enable Cloud TPU resources in this cluster.
func (o ContainerClusterOutput) EnableTpu() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.EnableTpu }).(pulumi.BoolPtrOutput)
}

// The IP address of this cluster's Kubernetes master.
func (o ContainerClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// Defines the config needed to enable/disable GKE Enterprise
func (o ContainerClusterOutput) EnterpriseConfig() ContainerClusterEnterpriseConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterEnterpriseConfigPtrOutput { return v.EnterpriseConfig }).(ContainerClusterEnterpriseConfigPtrOutput)
}

// Fleet configuration of the cluster.
func (o ContainerClusterOutput) Fleet() ContainerClusterFleetPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterFleetPtrOutput { return v.Fleet }).(ContainerClusterFleetPtrOutput)
}

// Configuration for GKE Gateway API controller.
func (o ContainerClusterOutput) GatewayApiConfig() ContainerClusterGatewayApiConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterGatewayApiConfigPtrOutput { return v.GatewayApiConfig }).(ContainerClusterGatewayApiConfigPtrOutput)
}

// Configuration for Identity Service which allows customers to use external identity providers with the K8S API.
func (o ContainerClusterOutput) IdentityServiceConfig() ContainerClusterIdentityServiceConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterIdentityServiceConfigPtrOutput {
		return v.IdentityServiceConfig
	}).(ContainerClusterIdentityServiceConfigPtrOutput)
}

// The number of nodes to create in this cluster's default node pool. In regional or multi-zonal clusters, this is the
// number of nodes per zone. Must be set if node_pool is not set. If you're using google.ContainerNodePool objects with no
// default node pool, you'll need to set this to a value of at least 1, alongside setting remove_default_node_pool to true.
func (o ContainerClusterOutput) InitialNodeCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.Float64PtrOutput { return v.InitialNodeCount }).(pulumi.Float64PtrOutput)
}

// Configuration of cluster IP allocation for VPC-native clusters. Adding this block enables IP aliasing, making the
// cluster VPC-native instead of routes-based.
func (o ContainerClusterOutput) IpAllocationPolicy() ContainerClusterIpAllocationPolicyPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterIpAllocationPolicyPtrOutput { return v.IpAllocationPolicy }).(ContainerClusterIpAllocationPolicyPtrOutput)
}

// The fingerprint of the set of labels for this cluster.
func (o ContainerClusterOutput) LabelFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.LabelFingerprint }).(pulumi.StringOutput)
}

// The location (region or zone) in which the cluster master will be created, as well as the default node location. If you
// specify a zone (such as us-central1-a), the cluster will be a zonal cluster with a single cluster master. If you specify
// a region (such as us-west1), the cluster will be a regional cluster with multiple masters spread across zones in the
// region, and with default node locations in those zones as well.
func (o ContainerClusterOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// Logging configuration for the cluster.
func (o ContainerClusterOutput) LoggingConfig() ContainerClusterLoggingConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterLoggingConfigPtrOutput { return v.LoggingConfig }).(ContainerClusterLoggingConfigPtrOutput)
}

// The logging service that the cluster should write logs to. Available options include logging.googleapis.com(Legacy
// Stackdriver), logging.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Logging), and none. Defaults to
// logging.googleapis.com/kubernetes.
func (o ContainerClusterOutput) LoggingService() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.LoggingService }).(pulumi.StringOutput)
}

// The maintenance policy to use for the cluster.
func (o ContainerClusterOutput) MaintenancePolicy() ContainerClusterMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterMaintenancePolicyPtrOutput { return v.MaintenancePolicy }).(ContainerClusterMaintenancePolicyPtrOutput)
}

// The authentication information for accessing the Kubernetes master. Some values in this block are only returned by the
// API if your service account has permission to get credentials for your GKE cluster. If you see an unexpected diff
// unsetting your client cert, ensure you have the container.clusters.getCredentials permission.
func (o ContainerClusterOutput) MasterAuth() ContainerClusterMasterAuthPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterMasterAuthPtrOutput { return v.MasterAuth }).(ContainerClusterMasterAuthPtrOutput)
}

// The desired configuration options for master authorized networks. Omit the nested cidr_blocks attribute to disallow
// external access (except the cluster node IPs, which GKE automatically whitelists).
func (o ContainerClusterOutput) MasterAuthorizedNetworksConfig() ContainerClusterMasterAuthorizedNetworksConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterMasterAuthorizedNetworksConfigPtrOutput {
		return v.MasterAuthorizedNetworksConfig
	}).(ContainerClusterMasterAuthorizedNetworksConfigPtrOutput)
}

// The current version of the master in the cluster. This may be different than the min_master_version set in the config if
// the master has been updated by GKE.
func (o ContainerClusterOutput) MasterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.MasterVersion }).(pulumi.StringOutput)
}

// If set, and enable_certificates=true, the GKE Workload Identity Certificates controller and node agent will be deployed
// in the cluster.
func (o ContainerClusterOutput) MeshCertificates() ContainerClusterMeshCertificatesPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterMeshCertificatesPtrOutput { return v.MeshCertificates }).(ContainerClusterMeshCertificatesPtrOutput)
}

// The minimum version of the master. GKE will auto-update the master to new versions, so this does not guarantee the
// current master version--use the read-only master_version field to obtain that. If unset, the cluster's version will be
// set by GKE to the version of the most recent official release (which is not necessarily the latest version).
func (o ContainerClusterOutput) MinMasterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringPtrOutput { return v.MinMasterVersion }).(pulumi.StringPtrOutput)
}

// Monitoring configuration for the cluster.
func (o ContainerClusterOutput) MonitoringConfig() ContainerClusterMonitoringConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterMonitoringConfigPtrOutput { return v.MonitoringConfig }).(ContainerClusterMonitoringConfigPtrOutput)
}

// The monitoring service that the cluster should write metrics to. Automatically send metrics from pods in the cluster to
// the Google Cloud Monitoring API. VM metrics will be collected by Google Compute Engine regardless of this setting
// Available options include monitoring.googleapis.com(Legacy Stackdriver),
// monitoring.googleapis.com/kubernetes(Stackdriver Kubernetes Engine Monitoring), and none. Defaults to
// monitoring.googleapis.com/kubernetes.
func (o ContainerClusterOutput) MonitoringService() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.MonitoringService }).(pulumi.StringOutput)
}

// The name of the cluster, unique within the project and location.
func (o ContainerClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The name or self_link of the Google Compute Engine network to which the cluster is connected. For Shared VPC, set this
// to the self link of the shared network.
func (o ContainerClusterOutput) Network() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringPtrOutput { return v.Network }).(pulumi.StringPtrOutput)
}

// Configuration options for the NetworkPolicy feature.
func (o ContainerClusterOutput) NetworkPolicy() ContainerClusterNetworkPolicyPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterNetworkPolicyPtrOutput { return v.NetworkPolicy }).(ContainerClusterNetworkPolicyPtrOutput)
}

// Determines whether alias IPs or routes will be used for pod IPs in the cluster. Defaults to VPC_NATIVE for new clusters.
func (o ContainerClusterOutput) NetworkingMode() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.NetworkingMode }).(pulumi.StringOutput)
}

// The configuration of the nodepool
func (o ContainerClusterOutput) NodeConfig() ContainerClusterNodeConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterNodeConfigPtrOutput { return v.NodeConfig }).(ContainerClusterNodeConfigPtrOutput)
}

// The list of zones in which the cluster's nodes are located. Nodes must be in the region of their regional cluster or in
// the same region as their cluster's zone for zonal clusters. If this is specified for a zonal cluster, omit the cluster's
// zone.
func (o ContainerClusterOutput) NodeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringArrayOutput { return v.NodeLocations }).(pulumi.StringArrayOutput)
}

// Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled
// clusters.
func (o ContainerClusterOutput) NodePoolAutoConfig() ContainerClusterNodePoolAutoConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterNodePoolAutoConfigPtrOutput { return v.NodePoolAutoConfig }).(ContainerClusterNodePoolAutoConfigPtrOutput)
}

// The default nodel pool settings for the entire cluster.
func (o ContainerClusterOutput) NodePoolDefaults() ContainerClusterNodePoolDefaultsPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterNodePoolDefaultsPtrOutput { return v.NodePoolDefaults }).(ContainerClusterNodePoolDefaultsPtrOutput)
}

// List of node pools associated with this cluster. See google.ContainerNodePool for schema. Warning: node pools defined
// inside a cluster can't be changed (or added/removed) after cluster creation without deleting and recreating the entire
// cluster. Unless you absolutely need the ability to say "these are the only node pools associated with this cluster", use
// the google.ContainerNodePool resource instead of this property.
func (o ContainerClusterOutput) NodePools() ContainerClusterNodePoolArrayOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterNodePoolArrayOutput { return v.NodePools }).(ContainerClusterNodePoolArrayOutput)
}

func (o ContainerClusterOutput) NodeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.NodeVersion }).(pulumi.StringOutput)
}

// The notification config for sending cluster upgrade notifications
func (o ContainerClusterOutput) NotificationConfig() ContainerClusterNotificationConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterNotificationConfigPtrOutput { return v.NotificationConfig }).(ContainerClusterNotificationConfigPtrOutput)
}

func (o ContainerClusterOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.Operation }).(pulumi.StringOutput)
}

// Configuration for private clusters, clusters with private nodes.
func (o ContainerClusterOutput) PrivateClusterConfig() ContainerClusterPrivateClusterConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterPrivateClusterConfigPtrOutput { return v.PrivateClusterConfig }).(ContainerClusterPrivateClusterConfigPtrOutput)
}

// The desired state of IPv6 connectivity to Google Services. By default, no private IPv6 access to or from Google Services
// (all access will be via IPv4).
func (o ContainerClusterOutput) PrivateIpv6GoogleAccess() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.PrivateIpv6GoogleAccess }).(pulumi.StringOutput)
}

// The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
func (o ContainerClusterOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Configuration options for the Release channel feature, which provide more control over automatic upgrades of your GKE
// clusters. Note that removing this field from your config will not unenroll it. Instead, use the "UNSPECIFIED" channel.
func (o ContainerClusterOutput) ReleaseChannel() ContainerClusterReleaseChannelPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterReleaseChannelPtrOutput { return v.ReleaseChannel }).(ContainerClusterReleaseChannelPtrOutput)
}

// If true, deletes the default node pool upon cluster creation. If you're using google.ContainerNodePool resources with no
// default node pool, this should be set to true, alongside setting initial_node_count to at least 1.
func (o ContainerClusterOutput) RemoveDefaultNodePool() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.BoolPtrOutput { return v.RemoveDefaultNodePool }).(pulumi.BoolPtrOutput)
}

// The GCE resource labels (a map of key/value pairs) to be applied to the cluster. **Note**: This field is
// non-authoritative, and will only manage the labels present in your configuration. Please refer to the field
// 'effective_labels' for all of the labels present on the resource.
func (o ContainerClusterOutput) ResourceLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringMapOutput { return v.ResourceLabels }).(pulumi.StringMapOutput)
}

// Configuration for the ResourceUsageExportConfig feature.
func (o ContainerClusterOutput) ResourceUsageExportConfig() ContainerClusterResourceUsageExportConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterResourceUsageExportConfigPtrOutput {
		return v.ResourceUsageExportConfig
	}).(ContainerClusterResourceUsageExportConfigPtrOutput)
}

// Configuration for the Secret Manager feature.
func (o ContainerClusterOutput) SecretManagerConfig() ContainerClusterSecretManagerConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterSecretManagerConfigPtrOutput { return v.SecretManagerConfig }).(ContainerClusterSecretManagerConfigPtrOutput)
}

// Defines the config needed to enable/disable features for the Security Posture API
func (o ContainerClusterOutput) SecurityPostureConfig() ContainerClusterSecurityPostureConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterSecurityPostureConfigPtrOutput {
		return v.SecurityPostureConfig
	}).(ContainerClusterSecurityPostureConfigPtrOutput)
}

// Server-defined URL for the resource.
func (o ContainerClusterOutput) SelfLink() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.SelfLink }).(pulumi.StringOutput)
}

// If set, and enabled=true, services with external ips field will not be blocked
func (o ContainerClusterOutput) ServiceExternalIpsConfig() ContainerClusterServiceExternalIpsConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterServiceExternalIpsConfigPtrOutput {
		return v.ServiceExternalIpsConfig
	}).(ContainerClusterServiceExternalIpsConfigPtrOutput)
}

// The IP address range of the Kubernetes services in this cluster, in CIDR notation (e.g. 1.2.3.4/29). Service addresses
// are typically put in the last /16 from the container CIDR.
func (o ContainerClusterOutput) ServicesIpv4Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.ServicesIpv4Cidr }).(pulumi.StringOutput)
}

// The name or self_link of the Google Compute Engine subnetwork in which the cluster's instances are launched.
func (o ContainerClusterOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.Subnetwork }).(pulumi.StringOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o ContainerClusterOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o ContainerClusterOutput) Timeouts() ContainerClusterTimeoutsPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterTimeoutsPtrOutput { return v.Timeouts }).(ContainerClusterTimeoutsPtrOutput)
}

// The IP address range of the Cloud TPUs in this cluster, in CIDR notation (e.g. 1.2.3.4/29).
func (o ContainerClusterOutput) TpuIpv4CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerCluster) pulumi.StringOutput { return v.TpuIpv4CidrBlock }).(pulumi.StringOutput)
}

// The custom keys configuration of the cluster.
func (o ContainerClusterOutput) UserManagedKeysConfig() ContainerClusterUserManagedKeysConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterUserManagedKeysConfigPtrOutput {
		return v.UserManagedKeysConfig
	}).(ContainerClusterUserManagedKeysConfigPtrOutput)
}

// Vertical Pod Autoscaling automatically adjusts the resources of pods controlled by it.
func (o ContainerClusterOutput) VerticalPodAutoscaling() ContainerClusterVerticalPodAutoscalingPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterVerticalPodAutoscalingPtrOutput {
		return v.VerticalPodAutoscaling
	}).(ContainerClusterVerticalPodAutoscalingPtrOutput)
}

// Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
func (o ContainerClusterOutput) WorkloadIdentityConfig() ContainerClusterWorkloadIdentityConfigPtrOutput {
	return o.ApplyT(func(v *ContainerCluster) ContainerClusterWorkloadIdentityConfigPtrOutput {
		return v.WorkloadIdentityConfig
	}).(ContainerClusterWorkloadIdentityConfigPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerClusterInput)(nil)).Elem(), &ContainerCluster{})
	pulumi.RegisterOutputType(ContainerClusterOutput{})
}
