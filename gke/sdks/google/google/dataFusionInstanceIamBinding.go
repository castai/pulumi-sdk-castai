// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataFusionInstanceIamBinding struct {
	pulumi.CustomResourceState

	Condition                      DataFusionInstanceIamBindingConditionPtrOutput `pulumi:"condition"`
	DataFusionInstanceIamBindingId pulumi.StringOutput                            `pulumi:"dataFusionInstanceIamBindingId"`
	Etag                           pulumi.StringOutput                            `pulumi:"etag"`
	Members                        pulumi.StringArrayOutput                       `pulumi:"members"`
	Name                           pulumi.StringOutput                            `pulumi:"name"`
	Project                        pulumi.StringOutput                            `pulumi:"project"`
	Region                         pulumi.StringOutput                            `pulumi:"region"`
	Role                           pulumi.StringOutput                            `pulumi:"role"`
}

// NewDataFusionInstanceIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDataFusionInstanceIamBinding(ctx *pulumi.Context,
	name string, args *DataFusionInstanceIamBindingArgs, opts ...pulumi.ResourceOption) (*DataFusionInstanceIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataFusionInstanceIamBinding
	err = ctx.RegisterPackageResource("google:index/dataFusionInstanceIamBinding:DataFusionInstanceIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataFusionInstanceIamBinding gets an existing DataFusionInstanceIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataFusionInstanceIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataFusionInstanceIamBindingState, opts ...pulumi.ResourceOption) (*DataFusionInstanceIamBinding, error) {
	var resource DataFusionInstanceIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataFusionInstanceIamBinding:DataFusionInstanceIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataFusionInstanceIamBinding resources.
type dataFusionInstanceIamBindingState struct {
	Condition                      *DataFusionInstanceIamBindingCondition `pulumi:"condition"`
	DataFusionInstanceIamBindingId *string                                `pulumi:"dataFusionInstanceIamBindingId"`
	Etag                           *string                                `pulumi:"etag"`
	Members                        []string                               `pulumi:"members"`
	Name                           *string                                `pulumi:"name"`
	Project                        *string                                `pulumi:"project"`
	Region                         *string                                `pulumi:"region"`
	Role                           *string                                `pulumi:"role"`
}

type DataFusionInstanceIamBindingState struct {
	Condition                      DataFusionInstanceIamBindingConditionPtrInput
	DataFusionInstanceIamBindingId pulumi.StringPtrInput
	Etag                           pulumi.StringPtrInput
	Members                        pulumi.StringArrayInput
	Name                           pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
	Region                         pulumi.StringPtrInput
	Role                           pulumi.StringPtrInput
}

func (DataFusionInstanceIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataFusionInstanceIamBindingState)(nil)).Elem()
}

type dataFusionInstanceIamBindingArgs struct {
	Condition                      *DataFusionInstanceIamBindingCondition `pulumi:"condition"`
	DataFusionInstanceIamBindingId *string                                `pulumi:"dataFusionInstanceIamBindingId"`
	Members                        []string                               `pulumi:"members"`
	Name                           *string                                `pulumi:"name"`
	Project                        *string                                `pulumi:"project"`
	Region                         *string                                `pulumi:"region"`
	Role                           string                                 `pulumi:"role"`
}

// The set of arguments for constructing a DataFusionInstanceIamBinding resource.
type DataFusionInstanceIamBindingArgs struct {
	Condition                      DataFusionInstanceIamBindingConditionPtrInput
	DataFusionInstanceIamBindingId pulumi.StringPtrInput
	Members                        pulumi.StringArrayInput
	Name                           pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
	Region                         pulumi.StringPtrInput
	Role                           pulumi.StringInput
}

func (DataFusionInstanceIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataFusionInstanceIamBindingArgs)(nil)).Elem()
}

type DataFusionInstanceIamBindingInput interface {
	pulumi.Input

	ToDataFusionInstanceIamBindingOutput() DataFusionInstanceIamBindingOutput
	ToDataFusionInstanceIamBindingOutputWithContext(ctx context.Context) DataFusionInstanceIamBindingOutput
}

func (*DataFusionInstanceIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFusionInstanceIamBinding)(nil)).Elem()
}

func (i *DataFusionInstanceIamBinding) ToDataFusionInstanceIamBindingOutput() DataFusionInstanceIamBindingOutput {
	return i.ToDataFusionInstanceIamBindingOutputWithContext(context.Background())
}

func (i *DataFusionInstanceIamBinding) ToDataFusionInstanceIamBindingOutputWithContext(ctx context.Context) DataFusionInstanceIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataFusionInstanceIamBindingOutput)
}

type DataFusionInstanceIamBindingOutput struct{ *pulumi.OutputState }

func (DataFusionInstanceIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataFusionInstanceIamBinding)(nil)).Elem()
}

func (o DataFusionInstanceIamBindingOutput) ToDataFusionInstanceIamBindingOutput() DataFusionInstanceIamBindingOutput {
	return o
}

func (o DataFusionInstanceIamBindingOutput) ToDataFusionInstanceIamBindingOutputWithContext(ctx context.Context) DataFusionInstanceIamBindingOutput {
	return o
}

func (o DataFusionInstanceIamBindingOutput) Condition() DataFusionInstanceIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamBinding) DataFusionInstanceIamBindingConditionPtrOutput {
		return v.Condition
	}).(DataFusionInstanceIamBindingConditionPtrOutput)
}

func (o DataFusionInstanceIamBindingOutput) DataFusionInstanceIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamBinding) pulumi.StringOutput { return v.DataFusionInstanceIamBindingId }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DataFusionInstanceIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamBindingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamBinding) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o DataFusionInstanceIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataFusionInstanceIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataFusionInstanceIamBindingInput)(nil)).Elem(), &DataFusionInstanceIamBinding{})
	pulumi.RegisterOutputType(DataFusionInstanceIamBindingOutput{})
}
