// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexZoneIamPolicy struct {
	pulumi.CustomResourceState

	DataplexZone            pulumi.StringOutput `pulumi:"dataplexZone"`
	DataplexZoneIamPolicyId pulumi.StringOutput `pulumi:"dataplexZoneIamPolicyId"`
	Etag                    pulumi.StringOutput `pulumi:"etag"`
	Lake                    pulumi.StringOutput `pulumi:"lake"`
	Location                pulumi.StringOutput `pulumi:"location"`
	PolicyData              pulumi.StringOutput `pulumi:"policyData"`
	Project                 pulumi.StringOutput `pulumi:"project"`
}

// NewDataplexZoneIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDataplexZoneIamPolicy(ctx *pulumi.Context,
	name string, args *DataplexZoneIamPolicyArgs, opts ...pulumi.ResourceOption) (*DataplexZoneIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataplexZone == nil {
		return nil, errors.New("invalid value for required argument 'DataplexZone'")
	}
	if args.Lake == nil {
		return nil, errors.New("invalid value for required argument 'Lake'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexZoneIamPolicy
	err = ctx.RegisterPackageResource("google:index/dataplexZoneIamPolicy:DataplexZoneIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexZoneIamPolicy gets an existing DataplexZoneIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexZoneIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexZoneIamPolicyState, opts ...pulumi.ResourceOption) (*DataplexZoneIamPolicy, error) {
	var resource DataplexZoneIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataplexZoneIamPolicy:DataplexZoneIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexZoneIamPolicy resources.
type dataplexZoneIamPolicyState struct {
	DataplexZone            *string `pulumi:"dataplexZone"`
	DataplexZoneIamPolicyId *string `pulumi:"dataplexZoneIamPolicyId"`
	Etag                    *string `pulumi:"etag"`
	Lake                    *string `pulumi:"lake"`
	Location                *string `pulumi:"location"`
	PolicyData              *string `pulumi:"policyData"`
	Project                 *string `pulumi:"project"`
}

type DataplexZoneIamPolicyState struct {
	DataplexZone            pulumi.StringPtrInput
	DataplexZoneIamPolicyId pulumi.StringPtrInput
	Etag                    pulumi.StringPtrInput
	Lake                    pulumi.StringPtrInput
	Location                pulumi.StringPtrInput
	PolicyData              pulumi.StringPtrInput
	Project                 pulumi.StringPtrInput
}

func (DataplexZoneIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexZoneIamPolicyState)(nil)).Elem()
}

type dataplexZoneIamPolicyArgs struct {
	DataplexZone            string  `pulumi:"dataplexZone"`
	DataplexZoneIamPolicyId *string `pulumi:"dataplexZoneIamPolicyId"`
	Lake                    string  `pulumi:"lake"`
	Location                *string `pulumi:"location"`
	PolicyData              string  `pulumi:"policyData"`
	Project                 *string `pulumi:"project"`
}

// The set of arguments for constructing a DataplexZoneIamPolicy resource.
type DataplexZoneIamPolicyArgs struct {
	DataplexZone            pulumi.StringInput
	DataplexZoneIamPolicyId pulumi.StringPtrInput
	Lake                    pulumi.StringInput
	Location                pulumi.StringPtrInput
	PolicyData              pulumi.StringInput
	Project                 pulumi.StringPtrInput
}

func (DataplexZoneIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexZoneIamPolicyArgs)(nil)).Elem()
}

type DataplexZoneIamPolicyInput interface {
	pulumi.Input

	ToDataplexZoneIamPolicyOutput() DataplexZoneIamPolicyOutput
	ToDataplexZoneIamPolicyOutputWithContext(ctx context.Context) DataplexZoneIamPolicyOutput
}

func (*DataplexZoneIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexZoneIamPolicy)(nil)).Elem()
}

func (i *DataplexZoneIamPolicy) ToDataplexZoneIamPolicyOutput() DataplexZoneIamPolicyOutput {
	return i.ToDataplexZoneIamPolicyOutputWithContext(context.Background())
}

func (i *DataplexZoneIamPolicy) ToDataplexZoneIamPolicyOutputWithContext(ctx context.Context) DataplexZoneIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexZoneIamPolicyOutput)
}

type DataplexZoneIamPolicyOutput struct{ *pulumi.OutputState }

func (DataplexZoneIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexZoneIamPolicy)(nil)).Elem()
}

func (o DataplexZoneIamPolicyOutput) ToDataplexZoneIamPolicyOutput() DataplexZoneIamPolicyOutput {
	return o
}

func (o DataplexZoneIamPolicyOutput) ToDataplexZoneIamPolicyOutputWithContext(ctx context.Context) DataplexZoneIamPolicyOutput {
	return o
}

func (o DataplexZoneIamPolicyOutput) DataplexZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamPolicy) pulumi.StringOutput { return v.DataplexZone }).(pulumi.StringOutput)
}

func (o DataplexZoneIamPolicyOutput) DataplexZoneIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamPolicy) pulumi.StringOutput { return v.DataplexZoneIamPolicyId }).(pulumi.StringOutput)
}

func (o DataplexZoneIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexZoneIamPolicyOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamPolicy) pulumi.StringOutput { return v.Lake }).(pulumi.StringOutput)
}

func (o DataplexZoneIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexZoneIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o DataplexZoneIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexZoneIamPolicyInput)(nil)).Elem(), &DataplexZoneIamPolicy{})
	pulumi.RegisterOutputType(DataplexZoneIamPolicyOutput{})
}
