// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SourcerepoRepositoryIamPolicy struct {
	pulumi.CustomResourceState

	Etag                            pulumi.StringOutput `pulumi:"etag"`
	PolicyData                      pulumi.StringOutput `pulumi:"policyData"`
	Project                         pulumi.StringOutput `pulumi:"project"`
	Repository                      pulumi.StringOutput `pulumi:"repository"`
	SourcerepoRepositoryIamPolicyId pulumi.StringOutput `pulumi:"sourcerepoRepositoryIamPolicyId"`
}

// NewSourcerepoRepositoryIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewSourcerepoRepositoryIamPolicy(ctx *pulumi.Context,
	name string, args *SourcerepoRepositoryIamPolicyArgs, opts ...pulumi.ResourceOption) (*SourcerepoRepositoryIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	if args.Repository == nil {
		return nil, errors.New("invalid value for required argument 'Repository'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SourcerepoRepositoryIamPolicy
	err = ctx.RegisterPackageResource("google:index/sourcerepoRepositoryIamPolicy:SourcerepoRepositoryIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSourcerepoRepositoryIamPolicy gets an existing SourcerepoRepositoryIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSourcerepoRepositoryIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SourcerepoRepositoryIamPolicyState, opts ...pulumi.ResourceOption) (*SourcerepoRepositoryIamPolicy, error) {
	var resource SourcerepoRepositoryIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/sourcerepoRepositoryIamPolicy:SourcerepoRepositoryIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SourcerepoRepositoryIamPolicy resources.
type sourcerepoRepositoryIamPolicyState struct {
	Etag                            *string `pulumi:"etag"`
	PolicyData                      *string `pulumi:"policyData"`
	Project                         *string `pulumi:"project"`
	Repository                      *string `pulumi:"repository"`
	SourcerepoRepositoryIamPolicyId *string `pulumi:"sourcerepoRepositoryIamPolicyId"`
}

type SourcerepoRepositoryIamPolicyState struct {
	Etag                            pulumi.StringPtrInput
	PolicyData                      pulumi.StringPtrInput
	Project                         pulumi.StringPtrInput
	Repository                      pulumi.StringPtrInput
	SourcerepoRepositoryIamPolicyId pulumi.StringPtrInput
}

func (SourcerepoRepositoryIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcerepoRepositoryIamPolicyState)(nil)).Elem()
}

type sourcerepoRepositoryIamPolicyArgs struct {
	PolicyData                      string  `pulumi:"policyData"`
	Project                         *string `pulumi:"project"`
	Repository                      string  `pulumi:"repository"`
	SourcerepoRepositoryIamPolicyId *string `pulumi:"sourcerepoRepositoryIamPolicyId"`
}

// The set of arguments for constructing a SourcerepoRepositoryIamPolicy resource.
type SourcerepoRepositoryIamPolicyArgs struct {
	PolicyData                      pulumi.StringInput
	Project                         pulumi.StringPtrInput
	Repository                      pulumi.StringInput
	SourcerepoRepositoryIamPolicyId pulumi.StringPtrInput
}

func (SourcerepoRepositoryIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sourcerepoRepositoryIamPolicyArgs)(nil)).Elem()
}

type SourcerepoRepositoryIamPolicyInput interface {
	pulumi.Input

	ToSourcerepoRepositoryIamPolicyOutput() SourcerepoRepositoryIamPolicyOutput
	ToSourcerepoRepositoryIamPolicyOutputWithContext(ctx context.Context) SourcerepoRepositoryIamPolicyOutput
}

func (*SourcerepoRepositoryIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcerepoRepositoryIamPolicy)(nil)).Elem()
}

func (i *SourcerepoRepositoryIamPolicy) ToSourcerepoRepositoryIamPolicyOutput() SourcerepoRepositoryIamPolicyOutput {
	return i.ToSourcerepoRepositoryIamPolicyOutputWithContext(context.Background())
}

func (i *SourcerepoRepositoryIamPolicy) ToSourcerepoRepositoryIamPolicyOutputWithContext(ctx context.Context) SourcerepoRepositoryIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourcerepoRepositoryIamPolicyOutput)
}

type SourcerepoRepositoryIamPolicyOutput struct{ *pulumi.OutputState }

func (SourcerepoRepositoryIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourcerepoRepositoryIamPolicy)(nil)).Elem()
}

func (o SourcerepoRepositoryIamPolicyOutput) ToSourcerepoRepositoryIamPolicyOutput() SourcerepoRepositoryIamPolicyOutput {
	return o
}

func (o SourcerepoRepositoryIamPolicyOutput) ToSourcerepoRepositoryIamPolicyOutputWithContext(ctx context.Context) SourcerepoRepositoryIamPolicyOutput {
	return o
}

func (o SourcerepoRepositoryIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcerepoRepositoryIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o SourcerepoRepositoryIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcerepoRepositoryIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o SourcerepoRepositoryIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcerepoRepositoryIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o SourcerepoRepositoryIamPolicyOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcerepoRepositoryIamPolicy) pulumi.StringOutput { return v.Repository }).(pulumi.StringOutput)
}

func (o SourcerepoRepositoryIamPolicyOutput) SourcerepoRepositoryIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *SourcerepoRepositoryIamPolicy) pulumi.StringOutput { return v.SourcerepoRepositoryIamPolicyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SourcerepoRepositoryIamPolicyInput)(nil)).Elem(), &SourcerepoRepositoryIamPolicy{})
	pulumi.RegisterOutputType(SourcerepoRepositoryIamPolicyOutput{})
}
