// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IdentityPlatformOauthIdpConfig struct {
	pulumi.CustomResourceState

	// The client id of an OAuth client.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret pulumi.StringPtrOutput `pulumi:"clientSecret"`
	// Human friendly display name.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// If this config allows users to sign in with the provider.
	Enabled                          pulumi.BoolPtrOutput `pulumi:"enabled"`
	IdentityPlatformOauthIdpConfigId pulumi.StringOutput  `pulumi:"identityPlatformOauthIdpConfigId"`
	// For OIDC Idps, the issuer identifier.
	Issuer pulumi.StringOutput `pulumi:"issuer"`
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name     pulumi.StringOutput                             `pulumi:"name"`
	Project  pulumi.StringOutput                             `pulumi:"project"`
	Timeouts IdentityPlatformOauthIdpConfigTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewIdentityPlatformOauthIdpConfig registers a new resource with the given unique name, arguments, and options.
func NewIdentityPlatformOauthIdpConfig(ctx *pulumi.Context,
	name string, args *IdentityPlatformOauthIdpConfigArgs, opts ...pulumi.ResourceOption) (*IdentityPlatformOauthIdpConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.Issuer == nil {
		return nil, errors.New("invalid value for required argument 'Issuer'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IdentityPlatformOauthIdpConfig
	err = ctx.RegisterPackageResource("google:index/identityPlatformOauthIdpConfig:IdentityPlatformOauthIdpConfig", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPlatformOauthIdpConfig gets an existing IdentityPlatformOauthIdpConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPlatformOauthIdpConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPlatformOauthIdpConfigState, opts ...pulumi.ResourceOption) (*IdentityPlatformOauthIdpConfig, error) {
	var resource IdentityPlatformOauthIdpConfig
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/identityPlatformOauthIdpConfig:IdentityPlatformOauthIdpConfig", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPlatformOauthIdpConfig resources.
type identityPlatformOauthIdpConfigState struct {
	// The client id of an OAuth client.
	ClientId *string `pulumi:"clientId"`
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret *string `pulumi:"clientSecret"`
	// Human friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// If this config allows users to sign in with the provider.
	Enabled                          *bool   `pulumi:"enabled"`
	IdentityPlatformOauthIdpConfigId *string `pulumi:"identityPlatformOauthIdpConfigId"`
	// For OIDC Idps, the issuer identifier.
	Issuer *string `pulumi:"issuer"`
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name     *string                                 `pulumi:"name"`
	Project  *string                                 `pulumi:"project"`
	Timeouts *IdentityPlatformOauthIdpConfigTimeouts `pulumi:"timeouts"`
}

type IdentityPlatformOauthIdpConfigState struct {
	// The client id of an OAuth client.
	ClientId pulumi.StringPtrInput
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret pulumi.StringPtrInput
	// Human friendly display name.
	DisplayName pulumi.StringPtrInput
	// If this config allows users to sign in with the provider.
	Enabled                          pulumi.BoolPtrInput
	IdentityPlatformOauthIdpConfigId pulumi.StringPtrInput
	// For OIDC Idps, the issuer identifier.
	Issuer pulumi.StringPtrInput
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts IdentityPlatformOauthIdpConfigTimeoutsPtrInput
}

func (IdentityPlatformOauthIdpConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPlatformOauthIdpConfigState)(nil)).Elem()
}

type identityPlatformOauthIdpConfigArgs struct {
	// The client id of an OAuth client.
	ClientId string `pulumi:"clientId"`
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret *string `pulumi:"clientSecret"`
	// Human friendly display name.
	DisplayName *string `pulumi:"displayName"`
	// If this config allows users to sign in with the provider.
	Enabled                          *bool   `pulumi:"enabled"`
	IdentityPlatformOauthIdpConfigId *string `pulumi:"identityPlatformOauthIdpConfigId"`
	// For OIDC Idps, the issuer identifier.
	Issuer string `pulumi:"issuer"`
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name     *string                                 `pulumi:"name"`
	Project  *string                                 `pulumi:"project"`
	Timeouts *IdentityPlatformOauthIdpConfigTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a IdentityPlatformOauthIdpConfig resource.
type IdentityPlatformOauthIdpConfigArgs struct {
	// The client id of an OAuth client.
	ClientId pulumi.StringInput
	// The client secret of the OAuth client, to enable OIDC code flow.
	ClientSecret pulumi.StringPtrInput
	// Human friendly display name.
	DisplayName pulumi.StringPtrInput
	// If this config allows users to sign in with the provider.
	Enabled                          pulumi.BoolPtrInput
	IdentityPlatformOauthIdpConfigId pulumi.StringPtrInput
	// For OIDC Idps, the issuer identifier.
	Issuer pulumi.StringInput
	// The name of the OauthIdpConfig. Must start with 'oidc.'.
	Name     pulumi.StringPtrInput
	Project  pulumi.StringPtrInput
	Timeouts IdentityPlatformOauthIdpConfigTimeoutsPtrInput
}

func (IdentityPlatformOauthIdpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPlatformOauthIdpConfigArgs)(nil)).Elem()
}

type IdentityPlatformOauthIdpConfigInput interface {
	pulumi.Input

	ToIdentityPlatformOauthIdpConfigOutput() IdentityPlatformOauthIdpConfigOutput
	ToIdentityPlatformOauthIdpConfigOutputWithContext(ctx context.Context) IdentityPlatformOauthIdpConfigOutput
}

func (*IdentityPlatformOauthIdpConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPlatformOauthIdpConfig)(nil)).Elem()
}

func (i *IdentityPlatformOauthIdpConfig) ToIdentityPlatformOauthIdpConfigOutput() IdentityPlatformOauthIdpConfigOutput {
	return i.ToIdentityPlatformOauthIdpConfigOutputWithContext(context.Background())
}

func (i *IdentityPlatformOauthIdpConfig) ToIdentityPlatformOauthIdpConfigOutputWithContext(ctx context.Context) IdentityPlatformOauthIdpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPlatformOauthIdpConfigOutput)
}

type IdentityPlatformOauthIdpConfigOutput struct{ *pulumi.OutputState }

func (IdentityPlatformOauthIdpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPlatformOauthIdpConfig)(nil)).Elem()
}

func (o IdentityPlatformOauthIdpConfigOutput) ToIdentityPlatformOauthIdpConfigOutput() IdentityPlatformOauthIdpConfigOutput {
	return o
}

func (o IdentityPlatformOauthIdpConfigOutput) ToIdentityPlatformOauthIdpConfigOutputWithContext(ctx context.Context) IdentityPlatformOauthIdpConfigOutput {
	return o
}

// The client id of an OAuth client.
func (o IdentityPlatformOauthIdpConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformOauthIdpConfig) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret of the OAuth client, to enable OIDC code flow.
func (o IdentityPlatformOauthIdpConfigOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformOauthIdpConfig) pulumi.StringPtrOutput { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Human friendly display name.
func (o IdentityPlatformOauthIdpConfigOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformOauthIdpConfig) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// If this config allows users to sign in with the provider.
func (o IdentityPlatformOauthIdpConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformOauthIdpConfig) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o IdentityPlatformOauthIdpConfigOutput) IdentityPlatformOauthIdpConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformOauthIdpConfig) pulumi.StringOutput { return v.IdentityPlatformOauthIdpConfigId }).(pulumi.StringOutput)
}

// For OIDC Idps, the issuer identifier.
func (o IdentityPlatformOauthIdpConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformOauthIdpConfig) pulumi.StringOutput { return v.Issuer }).(pulumi.StringOutput)
}

// The name of the OauthIdpConfig. Must start with 'oidc.'.
func (o IdentityPlatformOauthIdpConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformOauthIdpConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IdentityPlatformOauthIdpConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPlatformOauthIdpConfig) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o IdentityPlatformOauthIdpConfigOutput) Timeouts() IdentityPlatformOauthIdpConfigTimeoutsPtrOutput {
	return o.ApplyT(func(v *IdentityPlatformOauthIdpConfig) IdentityPlatformOauthIdpConfigTimeoutsPtrOutput {
		return v.Timeouts
	}).(IdentityPlatformOauthIdpConfigTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPlatformOauthIdpConfigInput)(nil)).Elem(), &IdentityPlatformOauthIdpConfig{})
	pulumi.RegisterOutputType(IdentityPlatformOauthIdpConfigOutput{})
}
