// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PrivatecaCaPool struct {
	pulumi.CustomResourceState

	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// The IssuancePolicy to control how Certificates will be issued from this CaPool.
	IssuancePolicy PrivatecaCaPoolIssuancePolicyPtrOutput `pulumi:"issuancePolicy"`
	// Labels with user-defined metadata. An object containing a list of "key": value pairs. Example: { "name": "wrench",
	// "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the labels present in
	// your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Location of the CaPool. A full list of valid locations can be found by running 'gcloud privateca locations list'.
	Location pulumi.StringOutput `pulumi:"location"`
	// The name for this CaPool.
	Name              pulumi.StringOutput `pulumi:"name"`
	PrivatecaCaPoolId pulumi.StringOutput `pulumi:"privatecaCaPoolId"`
	Project           pulumi.StringOutput `pulumi:"project"`
	// The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
	PublishingOptions PrivatecaCaPoolPublishingOptionsPtrOutput `pulumi:"publishingOptions"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput `pulumi:"terraformLabels"`
	// The Tier of this CaPool. Possible values: ["ENTERPRISE", "DEVOPS"]
	Tier     pulumi.StringOutput              `pulumi:"tier"`
	Timeouts PrivatecaCaPoolTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewPrivatecaCaPool registers a new resource with the given unique name, arguments, and options.
func NewPrivatecaCaPool(ctx *pulumi.Context,
	name string, args *PrivatecaCaPoolArgs, opts ...pulumi.ResourceOption) (*PrivatecaCaPool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.Tier == nil {
		return nil, errors.New("invalid value for required argument 'Tier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource PrivatecaCaPool
	err = ctx.RegisterPackageResource("google:index/privatecaCaPool:PrivatecaCaPool", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivatecaCaPool gets an existing PrivatecaCaPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivatecaCaPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivatecaCaPoolState, opts ...pulumi.ResourceOption) (*PrivatecaCaPool, error) {
	var resource PrivatecaCaPool
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/privatecaCaPool:PrivatecaCaPool", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivatecaCaPool resources.
type privatecaCaPoolState struct {
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// The IssuancePolicy to control how Certificates will be issued from this CaPool.
	IssuancePolicy *PrivatecaCaPoolIssuancePolicy `pulumi:"issuancePolicy"`
	// Labels with user-defined metadata. An object containing a list of "key": value pairs. Example: { "name": "wrench",
	// "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the labels present in
	// your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Location of the CaPool. A full list of valid locations can be found by running 'gcloud privateca locations list'.
	Location *string `pulumi:"location"`
	// The name for this CaPool.
	Name              *string `pulumi:"name"`
	PrivatecaCaPoolId *string `pulumi:"privatecaCaPoolId"`
	Project           *string `pulumi:"project"`
	// The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
	PublishingOptions *PrivatecaCaPoolPublishingOptions `pulumi:"publishingOptions"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string `pulumi:"terraformLabels"`
	// The Tier of this CaPool. Possible values: ["ENTERPRISE", "DEVOPS"]
	Tier     *string                  `pulumi:"tier"`
	Timeouts *PrivatecaCaPoolTimeouts `pulumi:"timeouts"`
}

type PrivatecaCaPoolState struct {
	EffectiveLabels pulumi.StringMapInput
	// The IssuancePolicy to control how Certificates will be issued from this CaPool.
	IssuancePolicy PrivatecaCaPoolIssuancePolicyPtrInput
	// Labels with user-defined metadata. An object containing a list of "key": value pairs. Example: { "name": "wrench",
	// "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the labels present in
	// your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Location of the CaPool. A full list of valid locations can be found by running 'gcloud privateca locations list'.
	Location pulumi.StringPtrInput
	// The name for this CaPool.
	Name              pulumi.StringPtrInput
	PrivatecaCaPoolId pulumi.StringPtrInput
	Project           pulumi.StringPtrInput
	// The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
	PublishingOptions PrivatecaCaPoolPublishingOptionsPtrInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	// The Tier of this CaPool. Possible values: ["ENTERPRISE", "DEVOPS"]
	Tier     pulumi.StringPtrInput
	Timeouts PrivatecaCaPoolTimeoutsPtrInput
}

func (PrivatecaCaPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*privatecaCaPoolState)(nil)).Elem()
}

type privatecaCaPoolArgs struct {
	// The IssuancePolicy to control how Certificates will be issued from this CaPool.
	IssuancePolicy *PrivatecaCaPoolIssuancePolicy `pulumi:"issuancePolicy"`
	// Labels with user-defined metadata. An object containing a list of "key": value pairs. Example: { "name": "wrench",
	// "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the labels present in
	// your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Location of the CaPool. A full list of valid locations can be found by running 'gcloud privateca locations list'.
	Location string `pulumi:"location"`
	// The name for this CaPool.
	Name              *string `pulumi:"name"`
	PrivatecaCaPoolId *string `pulumi:"privatecaCaPoolId"`
	Project           *string `pulumi:"project"`
	// The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
	PublishingOptions *PrivatecaCaPoolPublishingOptions `pulumi:"publishingOptions"`
	// The Tier of this CaPool. Possible values: ["ENTERPRISE", "DEVOPS"]
	Tier     string                   `pulumi:"tier"`
	Timeouts *PrivatecaCaPoolTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a PrivatecaCaPool resource.
type PrivatecaCaPoolArgs struct {
	// The IssuancePolicy to control how Certificates will be issued from this CaPool.
	IssuancePolicy PrivatecaCaPoolIssuancePolicyPtrInput
	// Labels with user-defined metadata. An object containing a list of "key": value pairs. Example: { "name": "wrench",
	// "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the labels present in
	// your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
	Labels pulumi.StringMapInput
	// Location of the CaPool. A full list of valid locations can be found by running 'gcloud privateca locations list'.
	Location pulumi.StringInput
	// The name for this CaPool.
	Name              pulumi.StringPtrInput
	PrivatecaCaPoolId pulumi.StringPtrInput
	Project           pulumi.StringPtrInput
	// The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
	PublishingOptions PrivatecaCaPoolPublishingOptionsPtrInput
	// The Tier of this CaPool. Possible values: ["ENTERPRISE", "DEVOPS"]
	Tier     pulumi.StringInput
	Timeouts PrivatecaCaPoolTimeoutsPtrInput
}

func (PrivatecaCaPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privatecaCaPoolArgs)(nil)).Elem()
}

type PrivatecaCaPoolInput interface {
	pulumi.Input

	ToPrivatecaCaPoolOutput() PrivatecaCaPoolOutput
	ToPrivatecaCaPoolOutputWithContext(ctx context.Context) PrivatecaCaPoolOutput
}

func (*PrivatecaCaPool) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivatecaCaPool)(nil)).Elem()
}

func (i *PrivatecaCaPool) ToPrivatecaCaPoolOutput() PrivatecaCaPoolOutput {
	return i.ToPrivatecaCaPoolOutputWithContext(context.Background())
}

func (i *PrivatecaCaPool) ToPrivatecaCaPoolOutputWithContext(ctx context.Context) PrivatecaCaPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivatecaCaPoolOutput)
}

type PrivatecaCaPoolOutput struct{ *pulumi.OutputState }

func (PrivatecaCaPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivatecaCaPool)(nil)).Elem()
}

func (o PrivatecaCaPoolOutput) ToPrivatecaCaPoolOutput() PrivatecaCaPoolOutput {
	return o
}

func (o PrivatecaCaPoolOutput) ToPrivatecaCaPoolOutputWithContext(ctx context.Context) PrivatecaCaPoolOutput {
	return o
}

func (o PrivatecaCaPoolOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// The IssuancePolicy to control how Certificates will be issued from this CaPool.
func (o PrivatecaCaPoolOutput) IssuancePolicy() PrivatecaCaPoolIssuancePolicyPtrOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) PrivatecaCaPoolIssuancePolicyPtrOutput { return v.IssuancePolicy }).(PrivatecaCaPoolIssuancePolicyPtrOutput)
}

// Labels with user-defined metadata. An object containing a list of "key": value pairs. Example: { "name": "wrench",
// "mass": "1.3kg", "count": "3" }. **Note**: This field is non-authoritative, and will only manage the labels present in
// your configuration. Please refer to the field 'effective_labels' for all of the labels present on the resource.
func (o PrivatecaCaPoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Location of the CaPool. A full list of valid locations can be found by running 'gcloud privateca locations list'.
func (o PrivatecaCaPoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The name for this CaPool.
func (o PrivatecaCaPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PrivatecaCaPoolOutput) PrivatecaCaPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) pulumi.StringOutput { return v.PrivatecaCaPoolId }).(pulumi.StringOutput)
}

func (o PrivatecaCaPoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
func (o PrivatecaCaPoolOutput) PublishingOptions() PrivatecaCaPoolPublishingOptionsPtrOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) PrivatecaCaPoolPublishingOptionsPtrOutput { return v.PublishingOptions }).(PrivatecaCaPoolPublishingOptionsPtrOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o PrivatecaCaPoolOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

// The Tier of this CaPool. Possible values: ["ENTERPRISE", "DEVOPS"]
func (o PrivatecaCaPoolOutput) Tier() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) pulumi.StringOutput { return v.Tier }).(pulumi.StringOutput)
}

func (o PrivatecaCaPoolOutput) Timeouts() PrivatecaCaPoolTimeoutsPtrOutput {
	return o.ApplyT(func(v *PrivatecaCaPool) PrivatecaCaPoolTimeoutsPtrOutput { return v.Timeouts }).(PrivatecaCaPoolTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivatecaCaPoolInput)(nil)).Elem(), &PrivatecaCaPool{})
	pulumi.RegisterOutputType(PrivatecaCaPoolOutput{})
}
