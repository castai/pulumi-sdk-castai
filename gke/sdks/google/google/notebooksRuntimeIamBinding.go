// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NotebooksRuntimeIamBinding struct {
	pulumi.CustomResourceState

	Condition                    NotebooksRuntimeIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	Location                     pulumi.StringOutput                          `pulumi:"location"`
	Members                      pulumi.StringArrayOutput                     `pulumi:"members"`
	NotebooksRuntimeIamBindingId pulumi.StringOutput                          `pulumi:"notebooksRuntimeIamBindingId"`
	Project                      pulumi.StringOutput                          `pulumi:"project"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
	RuntimeName                  pulumi.StringOutput                          `pulumi:"runtimeName"`
}

// NewNotebooksRuntimeIamBinding registers a new resource with the given unique name, arguments, and options.
func NewNotebooksRuntimeIamBinding(ctx *pulumi.Context,
	name string, args *NotebooksRuntimeIamBindingArgs, opts ...pulumi.ResourceOption) (*NotebooksRuntimeIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.RuntimeName == nil {
		return nil, errors.New("invalid value for required argument 'RuntimeName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource NotebooksRuntimeIamBinding
	err = ctx.RegisterPackageResource("google:index/notebooksRuntimeIamBinding:NotebooksRuntimeIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotebooksRuntimeIamBinding gets an existing NotebooksRuntimeIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotebooksRuntimeIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotebooksRuntimeIamBindingState, opts ...pulumi.ResourceOption) (*NotebooksRuntimeIamBinding, error) {
	var resource NotebooksRuntimeIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/notebooksRuntimeIamBinding:NotebooksRuntimeIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotebooksRuntimeIamBinding resources.
type notebooksRuntimeIamBindingState struct {
	Condition                    *NotebooksRuntimeIamBindingCondition `pulumi:"condition"`
	Etag                         *string                              `pulumi:"etag"`
	Location                     *string                              `pulumi:"location"`
	Members                      []string                             `pulumi:"members"`
	NotebooksRuntimeIamBindingId *string                              `pulumi:"notebooksRuntimeIamBindingId"`
	Project                      *string                              `pulumi:"project"`
	Role                         *string                              `pulumi:"role"`
	RuntimeName                  *string                              `pulumi:"runtimeName"`
}

type NotebooksRuntimeIamBindingState struct {
	Condition                    NotebooksRuntimeIamBindingConditionPtrInput
	Etag                         pulumi.StringPtrInput
	Location                     pulumi.StringPtrInput
	Members                      pulumi.StringArrayInput
	NotebooksRuntimeIamBindingId pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringPtrInput
	RuntimeName                  pulumi.StringPtrInput
}

func (NotebooksRuntimeIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*notebooksRuntimeIamBindingState)(nil)).Elem()
}

type notebooksRuntimeIamBindingArgs struct {
	Condition                    *NotebooksRuntimeIamBindingCondition `pulumi:"condition"`
	Location                     *string                              `pulumi:"location"`
	Members                      []string                             `pulumi:"members"`
	NotebooksRuntimeIamBindingId *string                              `pulumi:"notebooksRuntimeIamBindingId"`
	Project                      *string                              `pulumi:"project"`
	Role                         string                               `pulumi:"role"`
	RuntimeName                  string                               `pulumi:"runtimeName"`
}

// The set of arguments for constructing a NotebooksRuntimeIamBinding resource.
type NotebooksRuntimeIamBindingArgs struct {
	Condition                    NotebooksRuntimeIamBindingConditionPtrInput
	Location                     pulumi.StringPtrInput
	Members                      pulumi.StringArrayInput
	NotebooksRuntimeIamBindingId pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringInput
	RuntimeName                  pulumi.StringInput
}

func (NotebooksRuntimeIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notebooksRuntimeIamBindingArgs)(nil)).Elem()
}

type NotebooksRuntimeIamBindingInput interface {
	pulumi.Input

	ToNotebooksRuntimeIamBindingOutput() NotebooksRuntimeIamBindingOutput
	ToNotebooksRuntimeIamBindingOutputWithContext(ctx context.Context) NotebooksRuntimeIamBindingOutput
}

func (*NotebooksRuntimeIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebooksRuntimeIamBinding)(nil)).Elem()
}

func (i *NotebooksRuntimeIamBinding) ToNotebooksRuntimeIamBindingOutput() NotebooksRuntimeIamBindingOutput {
	return i.ToNotebooksRuntimeIamBindingOutputWithContext(context.Background())
}

func (i *NotebooksRuntimeIamBinding) ToNotebooksRuntimeIamBindingOutputWithContext(ctx context.Context) NotebooksRuntimeIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotebooksRuntimeIamBindingOutput)
}

type NotebooksRuntimeIamBindingOutput struct{ *pulumi.OutputState }

func (NotebooksRuntimeIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotebooksRuntimeIamBinding)(nil)).Elem()
}

func (o NotebooksRuntimeIamBindingOutput) ToNotebooksRuntimeIamBindingOutput() NotebooksRuntimeIamBindingOutput {
	return o
}

func (o NotebooksRuntimeIamBindingOutput) ToNotebooksRuntimeIamBindingOutputWithContext(ctx context.Context) NotebooksRuntimeIamBindingOutput {
	return o
}

func (o NotebooksRuntimeIamBindingOutput) Condition() NotebooksRuntimeIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamBinding) NotebooksRuntimeIamBindingConditionPtrOutput { return v.Condition }).(NotebooksRuntimeIamBindingConditionPtrOutput)
}

func (o NotebooksRuntimeIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o NotebooksRuntimeIamBindingOutput) NotebooksRuntimeIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamBinding) pulumi.StringOutput { return v.NotebooksRuntimeIamBindingId }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o NotebooksRuntimeIamBindingOutput) RuntimeName() pulumi.StringOutput {
	return o.ApplyT(func(v *NotebooksRuntimeIamBinding) pulumi.StringOutput { return v.RuntimeName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NotebooksRuntimeIamBindingInput)(nil)).Elem(), &NotebooksRuntimeIamBinding{})
	pulumi.RegisterOutputType(NotebooksRuntimeIamBindingOutput{})
}
