// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRouterInterface struct {
	pulumi.CustomResourceState

	ComputeRouterInterfaceId pulumi.StringOutput `pulumi:"computeRouterInterfaceId"`
	// The name or resource link to the VLAN interconnect for this interface. Changing this forces a new interface to be
	// created. Only one of interconnect_attachment, subnetwork or vpn_tunnel can be specified.
	InterconnectAttachment pulumi.StringPtrOutput `pulumi:"interconnectAttachment"`
	// The IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. Changing this forces
	// a new interface to be created.
	IpRange pulumi.StringOutput `pulumi:"ipRange"`
	// IP version of this interface.
	IpVersion pulumi.StringOutput `pulumi:"ipVersion"`
	// A unique name for the interface, required by GCE. Changing this forces a new interface to be created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party
	// Router Appliance. Changing this forces a new interface to be created.
	PrivateIpAddress pulumi.StringPtrOutput `pulumi:"privateIpAddress"`
	// The ID of the project in which this interface's router belongs. If it is not provided, the provider project is used.
	// Changing this forces a new interface to be created.
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the interface that is redundant to this interface. Changing this forces a new interface to be created.
	RedundantInterface pulumi.StringOutput `pulumi:"redundantInterface"`
	// The region this interface's router sits in. If not specified, the project region will be used. Changing this forces a
	// new interface to be created.
	Region pulumi.StringOutput `pulumi:"region"`
	// The name of the router this interface will be attached to. Changing this forces a new interface to be created.
	Router pulumi.StringOutput `pulumi:"router"`
	// The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router.
	// Changing this forces a new interface to be created. Only one of subnetwork, interconnect_attachment or vpn_tunnel can be
	// specified.
	Subnetwork pulumi.StringPtrOutput                  `pulumi:"subnetwork"`
	Timeouts   ComputeRouterInterfaceTimeoutsPtrOutput `pulumi:"timeouts"`
	// The name or resource link to the VPN tunnel this interface will be linked to. Changing this forces a new interface to be
	// created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
	VpnTunnel pulumi.StringPtrOutput `pulumi:"vpnTunnel"`
}

// NewComputeRouterInterface registers a new resource with the given unique name, arguments, and options.
func NewComputeRouterInterface(ctx *pulumi.Context,
	name string, args *ComputeRouterInterfaceArgs, opts ...pulumi.ResourceOption) (*ComputeRouterInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Router == nil {
		return nil, errors.New("invalid value for required argument 'Router'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRouterInterface
	err = ctx.RegisterPackageResource("google:index/computeRouterInterface:ComputeRouterInterface", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRouterInterface gets an existing ComputeRouterInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRouterInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRouterInterfaceState, opts ...pulumi.ResourceOption) (*ComputeRouterInterface, error) {
	var resource ComputeRouterInterface
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeRouterInterface:ComputeRouterInterface", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRouterInterface resources.
type computeRouterInterfaceState struct {
	ComputeRouterInterfaceId *string `pulumi:"computeRouterInterfaceId"`
	// The name or resource link to the VLAN interconnect for this interface. Changing this forces a new interface to be
	// created. Only one of interconnect_attachment, subnetwork or vpn_tunnel can be specified.
	InterconnectAttachment *string `pulumi:"interconnectAttachment"`
	// The IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. Changing this forces
	// a new interface to be created.
	IpRange *string `pulumi:"ipRange"`
	// IP version of this interface.
	IpVersion *string `pulumi:"ipVersion"`
	// A unique name for the interface, required by GCE. Changing this forces a new interface to be created.
	Name *string `pulumi:"name"`
	// The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party
	// Router Appliance. Changing this forces a new interface to be created.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The ID of the project in which this interface's router belongs. If it is not provided, the provider project is used.
	// Changing this forces a new interface to be created.
	Project *string `pulumi:"project"`
	// The name of the interface that is redundant to this interface. Changing this forces a new interface to be created.
	RedundantInterface *string `pulumi:"redundantInterface"`
	// The region this interface's router sits in. If not specified, the project region will be used. Changing this forces a
	// new interface to be created.
	Region *string `pulumi:"region"`
	// The name of the router this interface will be attached to. Changing this forces a new interface to be created.
	Router *string `pulumi:"router"`
	// The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router.
	// Changing this forces a new interface to be created. Only one of subnetwork, interconnect_attachment or vpn_tunnel can be
	// specified.
	Subnetwork *string                         `pulumi:"subnetwork"`
	Timeouts   *ComputeRouterInterfaceTimeouts `pulumi:"timeouts"`
	// The name or resource link to the VPN tunnel this interface will be linked to. Changing this forces a new interface to be
	// created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
	VpnTunnel *string `pulumi:"vpnTunnel"`
}

type ComputeRouterInterfaceState struct {
	ComputeRouterInterfaceId pulumi.StringPtrInput
	// The name or resource link to the VLAN interconnect for this interface. Changing this forces a new interface to be
	// created. Only one of interconnect_attachment, subnetwork or vpn_tunnel can be specified.
	InterconnectAttachment pulumi.StringPtrInput
	// The IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. Changing this forces
	// a new interface to be created.
	IpRange pulumi.StringPtrInput
	// IP version of this interface.
	IpVersion pulumi.StringPtrInput
	// A unique name for the interface, required by GCE. Changing this forces a new interface to be created.
	Name pulumi.StringPtrInput
	// The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party
	// Router Appliance. Changing this forces a new interface to be created.
	PrivateIpAddress pulumi.StringPtrInput
	// The ID of the project in which this interface's router belongs. If it is not provided, the provider project is used.
	// Changing this forces a new interface to be created.
	Project pulumi.StringPtrInput
	// The name of the interface that is redundant to this interface. Changing this forces a new interface to be created.
	RedundantInterface pulumi.StringPtrInput
	// The region this interface's router sits in. If not specified, the project region will be used. Changing this forces a
	// new interface to be created.
	Region pulumi.StringPtrInput
	// The name of the router this interface will be attached to. Changing this forces a new interface to be created.
	Router pulumi.StringPtrInput
	// The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router.
	// Changing this forces a new interface to be created. Only one of subnetwork, interconnect_attachment or vpn_tunnel can be
	// specified.
	Subnetwork pulumi.StringPtrInput
	Timeouts   ComputeRouterInterfaceTimeoutsPtrInput
	// The name or resource link to the VPN tunnel this interface will be linked to. Changing this forces a new interface to be
	// created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
	VpnTunnel pulumi.StringPtrInput
}

func (ComputeRouterInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRouterInterfaceState)(nil)).Elem()
}

type computeRouterInterfaceArgs struct {
	ComputeRouterInterfaceId *string `pulumi:"computeRouterInterfaceId"`
	// The name or resource link to the VLAN interconnect for this interface. Changing this forces a new interface to be
	// created. Only one of interconnect_attachment, subnetwork or vpn_tunnel can be specified.
	InterconnectAttachment *string `pulumi:"interconnectAttachment"`
	// The IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. Changing this forces
	// a new interface to be created.
	IpRange *string `pulumi:"ipRange"`
	// IP version of this interface.
	IpVersion *string `pulumi:"ipVersion"`
	// A unique name for the interface, required by GCE. Changing this forces a new interface to be created.
	Name *string `pulumi:"name"`
	// The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party
	// Router Appliance. Changing this forces a new interface to be created.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The ID of the project in which this interface's router belongs. If it is not provided, the provider project is used.
	// Changing this forces a new interface to be created.
	Project *string `pulumi:"project"`
	// The name of the interface that is redundant to this interface. Changing this forces a new interface to be created.
	RedundantInterface *string `pulumi:"redundantInterface"`
	// The region this interface's router sits in. If not specified, the project region will be used. Changing this forces a
	// new interface to be created.
	Region *string `pulumi:"region"`
	// The name of the router this interface will be attached to. Changing this forces a new interface to be created.
	Router string `pulumi:"router"`
	// The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router.
	// Changing this forces a new interface to be created. Only one of subnetwork, interconnect_attachment or vpn_tunnel can be
	// specified.
	Subnetwork *string                         `pulumi:"subnetwork"`
	Timeouts   *ComputeRouterInterfaceTimeouts `pulumi:"timeouts"`
	// The name or resource link to the VPN tunnel this interface will be linked to. Changing this forces a new interface to be
	// created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
	VpnTunnel *string `pulumi:"vpnTunnel"`
}

// The set of arguments for constructing a ComputeRouterInterface resource.
type ComputeRouterInterfaceArgs struct {
	ComputeRouterInterfaceId pulumi.StringPtrInput
	// The name or resource link to the VLAN interconnect for this interface. Changing this forces a new interface to be
	// created. Only one of interconnect_attachment, subnetwork or vpn_tunnel can be specified.
	InterconnectAttachment pulumi.StringPtrInput
	// The IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. Changing this forces
	// a new interface to be created.
	IpRange pulumi.StringPtrInput
	// IP version of this interface.
	IpVersion pulumi.StringPtrInput
	// A unique name for the interface, required by GCE. Changing this forces a new interface to be created.
	Name pulumi.StringPtrInput
	// The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party
	// Router Appliance. Changing this forces a new interface to be created.
	PrivateIpAddress pulumi.StringPtrInput
	// The ID of the project in which this interface's router belongs. If it is not provided, the provider project is used.
	// Changing this forces a new interface to be created.
	Project pulumi.StringPtrInput
	// The name of the interface that is redundant to this interface. Changing this forces a new interface to be created.
	RedundantInterface pulumi.StringPtrInput
	// The region this interface's router sits in. If not specified, the project region will be used. Changing this forces a
	// new interface to be created.
	Region pulumi.StringPtrInput
	// The name of the router this interface will be attached to. Changing this forces a new interface to be created.
	Router pulumi.StringInput
	// The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router.
	// Changing this forces a new interface to be created. Only one of subnetwork, interconnect_attachment or vpn_tunnel can be
	// specified.
	Subnetwork pulumi.StringPtrInput
	Timeouts   ComputeRouterInterfaceTimeoutsPtrInput
	// The name or resource link to the VPN tunnel this interface will be linked to. Changing this forces a new interface to be
	// created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
	VpnTunnel pulumi.StringPtrInput
}

func (ComputeRouterInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRouterInterfaceArgs)(nil)).Elem()
}

type ComputeRouterInterfaceInput interface {
	pulumi.Input

	ToComputeRouterInterfaceOutput() ComputeRouterInterfaceOutput
	ToComputeRouterInterfaceOutputWithContext(ctx context.Context) ComputeRouterInterfaceOutput
}

func (*ComputeRouterInterface) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRouterInterface)(nil)).Elem()
}

func (i *ComputeRouterInterface) ToComputeRouterInterfaceOutput() ComputeRouterInterfaceOutput {
	return i.ToComputeRouterInterfaceOutputWithContext(context.Background())
}

func (i *ComputeRouterInterface) ToComputeRouterInterfaceOutputWithContext(ctx context.Context) ComputeRouterInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRouterInterfaceOutput)
}

type ComputeRouterInterfaceOutput struct{ *pulumi.OutputState }

func (ComputeRouterInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRouterInterface)(nil)).Elem()
}

func (o ComputeRouterInterfaceOutput) ToComputeRouterInterfaceOutput() ComputeRouterInterfaceOutput {
	return o
}

func (o ComputeRouterInterfaceOutput) ToComputeRouterInterfaceOutputWithContext(ctx context.Context) ComputeRouterInterfaceOutput {
	return o
}

func (o ComputeRouterInterfaceOutput) ComputeRouterInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringOutput { return v.ComputeRouterInterfaceId }).(pulumi.StringOutput)
}

// The name or resource link to the VLAN interconnect for this interface. Changing this forces a new interface to be
// created. Only one of interconnect_attachment, subnetwork or vpn_tunnel can be specified.
func (o ComputeRouterInterfaceOutput) InterconnectAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringPtrOutput { return v.InterconnectAttachment }).(pulumi.StringPtrOutput)
}

// The IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. Changing this forces
// a new interface to be created.
func (o ComputeRouterInterfaceOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringOutput { return v.IpRange }).(pulumi.StringOutput)
}

// IP version of this interface.
func (o ComputeRouterInterfaceOutput) IpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringOutput { return v.IpVersion }).(pulumi.StringOutput)
}

// A unique name for the interface, required by GCE. Changing this forces a new interface to be created.
func (o ComputeRouterInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The regional private internal IP address that is used to establish BGP sessions to a VM instance acting as a third-party
// Router Appliance. Changing this forces a new interface to be created.
func (o ComputeRouterInterfaceOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringPtrOutput { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The ID of the project in which this interface's router belongs. If it is not provided, the provider project is used.
// Changing this forces a new interface to be created.
func (o ComputeRouterInterfaceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The name of the interface that is redundant to this interface. Changing this forces a new interface to be created.
func (o ComputeRouterInterfaceOutput) RedundantInterface() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringOutput { return v.RedundantInterface }).(pulumi.StringOutput)
}

// The region this interface's router sits in. If not specified, the project region will be used. Changing this forces a
// new interface to be created.
func (o ComputeRouterInterfaceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The name of the router this interface will be attached to. Changing this forces a new interface to be created.
func (o ComputeRouterInterfaceOutput) Router() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringOutput { return v.Router }).(pulumi.StringOutput)
}

// The URI of the subnetwork resource that this interface belongs to, which must be in the same region as the Cloud Router.
// Changing this forces a new interface to be created. Only one of subnetwork, interconnect_attachment or vpn_tunnel can be
// specified.
func (o ComputeRouterInterfaceOutput) Subnetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringPtrOutput { return v.Subnetwork }).(pulumi.StringPtrOutput)
}

func (o ComputeRouterInterfaceOutput) Timeouts() ComputeRouterInterfaceTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) ComputeRouterInterfaceTimeoutsPtrOutput { return v.Timeouts }).(ComputeRouterInterfaceTimeoutsPtrOutput)
}

// The name or resource link to the VPN tunnel this interface will be linked to. Changing this forces a new interface to be
// created. Only one of vpn_tunnel, interconnect_attachment or subnetwork can be specified.
func (o ComputeRouterInterfaceOutput) VpnTunnel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComputeRouterInterface) pulumi.StringPtrOutput { return v.VpnTunnel }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRouterInterfaceInput)(nil)).Elem(), &ComputeRouterInterface{})
	pulumi.RegisterOutputType(ComputeRouterInterfaceOutput{})
}
