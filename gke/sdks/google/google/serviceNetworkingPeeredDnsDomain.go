// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceNetworkingPeeredDnsDomain struct {
	pulumi.CustomResourceState

	// The DNS domain name suffix of the peered DNS domain.
	DnsSuffix pulumi.StringOutput `pulumi:"dnsSuffix"`
	// Name of the peered DNS domain.
	Name pulumi.StringOutput `pulumi:"name"`
	// Network in the consumer project to peer with.
	Network pulumi.StringOutput `pulumi:"network"`
	Parent  pulumi.StringOutput `pulumi:"parent"`
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project pulumi.StringOutput `pulumi:"project"`
	// The name of the service to create a peered DNS domain for, e.g. servicenetworking.googleapis.com
	Service                            pulumi.StringPtrOutput                            `pulumi:"service"`
	ServiceNetworkingPeeredDnsDomainId pulumi.StringOutput                               `pulumi:"serviceNetworkingPeeredDnsDomainId"`
	Timeouts                           ServiceNetworkingPeeredDnsDomainTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewServiceNetworkingPeeredDnsDomain registers a new resource with the given unique name, arguments, and options.
func NewServiceNetworkingPeeredDnsDomain(ctx *pulumi.Context,
	name string, args *ServiceNetworkingPeeredDnsDomainArgs, opts ...pulumi.ResourceOption) (*ServiceNetworkingPeeredDnsDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DnsSuffix == nil {
		return nil, errors.New("invalid value for required argument 'DnsSuffix'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceNetworkingPeeredDnsDomain
	err = ctx.RegisterPackageResource("google:index/serviceNetworkingPeeredDnsDomain:ServiceNetworkingPeeredDnsDomain", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceNetworkingPeeredDnsDomain gets an existing ServiceNetworkingPeeredDnsDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceNetworkingPeeredDnsDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceNetworkingPeeredDnsDomainState, opts ...pulumi.ResourceOption) (*ServiceNetworkingPeeredDnsDomain, error) {
	var resource ServiceNetworkingPeeredDnsDomain
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/serviceNetworkingPeeredDnsDomain:ServiceNetworkingPeeredDnsDomain", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceNetworkingPeeredDnsDomain resources.
type serviceNetworkingPeeredDnsDomainState struct {
	// The DNS domain name suffix of the peered DNS domain.
	DnsSuffix *string `pulumi:"dnsSuffix"`
	// Name of the peered DNS domain.
	Name *string `pulumi:"name"`
	// Network in the consumer project to peer with.
	Network *string `pulumi:"network"`
	Parent  *string `pulumi:"parent"`
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project *string `pulumi:"project"`
	// The name of the service to create a peered DNS domain for, e.g. servicenetworking.googleapis.com
	Service                            *string                                   `pulumi:"service"`
	ServiceNetworkingPeeredDnsDomainId *string                                   `pulumi:"serviceNetworkingPeeredDnsDomainId"`
	Timeouts                           *ServiceNetworkingPeeredDnsDomainTimeouts `pulumi:"timeouts"`
}

type ServiceNetworkingPeeredDnsDomainState struct {
	// The DNS domain name suffix of the peered DNS domain.
	DnsSuffix pulumi.StringPtrInput
	// Name of the peered DNS domain.
	Name pulumi.StringPtrInput
	// Network in the consumer project to peer with.
	Network pulumi.StringPtrInput
	Parent  pulumi.StringPtrInput
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project pulumi.StringPtrInput
	// The name of the service to create a peered DNS domain for, e.g. servicenetworking.googleapis.com
	Service                            pulumi.StringPtrInput
	ServiceNetworkingPeeredDnsDomainId pulumi.StringPtrInput
	Timeouts                           ServiceNetworkingPeeredDnsDomainTimeoutsPtrInput
}

func (ServiceNetworkingPeeredDnsDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkingPeeredDnsDomainState)(nil)).Elem()
}

type serviceNetworkingPeeredDnsDomainArgs struct {
	// The DNS domain name suffix of the peered DNS domain.
	DnsSuffix string `pulumi:"dnsSuffix"`
	// Name of the peered DNS domain.
	Name *string `pulumi:"name"`
	// Network in the consumer project to peer with.
	Network string `pulumi:"network"`
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project *string `pulumi:"project"`
	// The name of the service to create a peered DNS domain for, e.g. servicenetworking.googleapis.com
	Service                            *string                                   `pulumi:"service"`
	ServiceNetworkingPeeredDnsDomainId *string                                   `pulumi:"serviceNetworkingPeeredDnsDomainId"`
	Timeouts                           *ServiceNetworkingPeeredDnsDomainTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ServiceNetworkingPeeredDnsDomain resource.
type ServiceNetworkingPeeredDnsDomainArgs struct {
	// The DNS domain name suffix of the peered DNS domain.
	DnsSuffix pulumi.StringInput
	// Name of the peered DNS domain.
	Name pulumi.StringPtrInput
	// Network in the consumer project to peer with.
	Network pulumi.StringInput
	// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
	Project pulumi.StringPtrInput
	// The name of the service to create a peered DNS domain for, e.g. servicenetworking.googleapis.com
	Service                            pulumi.StringPtrInput
	ServiceNetworkingPeeredDnsDomainId pulumi.StringPtrInput
	Timeouts                           ServiceNetworkingPeeredDnsDomainTimeoutsPtrInput
}

func (ServiceNetworkingPeeredDnsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkingPeeredDnsDomainArgs)(nil)).Elem()
}

type ServiceNetworkingPeeredDnsDomainInput interface {
	pulumi.Input

	ToServiceNetworkingPeeredDnsDomainOutput() ServiceNetworkingPeeredDnsDomainOutput
	ToServiceNetworkingPeeredDnsDomainOutputWithContext(ctx context.Context) ServiceNetworkingPeeredDnsDomainOutput
}

func (*ServiceNetworkingPeeredDnsDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkingPeeredDnsDomain)(nil)).Elem()
}

func (i *ServiceNetworkingPeeredDnsDomain) ToServiceNetworkingPeeredDnsDomainOutput() ServiceNetworkingPeeredDnsDomainOutput {
	return i.ToServiceNetworkingPeeredDnsDomainOutputWithContext(context.Background())
}

func (i *ServiceNetworkingPeeredDnsDomain) ToServiceNetworkingPeeredDnsDomainOutputWithContext(ctx context.Context) ServiceNetworkingPeeredDnsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkingPeeredDnsDomainOutput)
}

type ServiceNetworkingPeeredDnsDomainOutput struct{ *pulumi.OutputState }

func (ServiceNetworkingPeeredDnsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkingPeeredDnsDomain)(nil)).Elem()
}

func (o ServiceNetworkingPeeredDnsDomainOutput) ToServiceNetworkingPeeredDnsDomainOutput() ServiceNetworkingPeeredDnsDomainOutput {
	return o
}

func (o ServiceNetworkingPeeredDnsDomainOutput) ToServiceNetworkingPeeredDnsDomainOutputWithContext(ctx context.Context) ServiceNetworkingPeeredDnsDomainOutput {
	return o
}

// The DNS domain name suffix of the peered DNS domain.
func (o ServiceNetworkingPeeredDnsDomainOutput) DnsSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkingPeeredDnsDomain) pulumi.StringOutput { return v.DnsSuffix }).(pulumi.StringOutput)
}

// Name of the peered DNS domain.
func (o ServiceNetworkingPeeredDnsDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkingPeeredDnsDomain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Network in the consumer project to peer with.
func (o ServiceNetworkingPeeredDnsDomainOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkingPeeredDnsDomain) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o ServiceNetworkingPeeredDnsDomainOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkingPeeredDnsDomain) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

// The ID of the project that the service account will be created in. Defaults to the provider project configuration.
func (o ServiceNetworkingPeeredDnsDomainOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkingPeeredDnsDomain) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The name of the service to create a peered DNS domain for, e.g. servicenetworking.googleapis.com
func (o ServiceNetworkingPeeredDnsDomainOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkingPeeredDnsDomain) pulumi.StringPtrOutput { return v.Service }).(pulumi.StringPtrOutput)
}

func (o ServiceNetworkingPeeredDnsDomainOutput) ServiceNetworkingPeeredDnsDomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkingPeeredDnsDomain) pulumi.StringOutput {
		return v.ServiceNetworkingPeeredDnsDomainId
	}).(pulumi.StringOutput)
}

func (o ServiceNetworkingPeeredDnsDomainOutput) Timeouts() ServiceNetworkingPeeredDnsDomainTimeoutsPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkingPeeredDnsDomain) ServiceNetworkingPeeredDnsDomainTimeoutsPtrOutput {
		return v.Timeouts
	}).(ServiceNetworkingPeeredDnsDomainTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkingPeeredDnsDomainInput)(nil)).Elem(), &ServiceNetworkingPeeredDnsDomain{})
	pulumi.RegisterOutputType(ServiceNetworkingPeeredDnsDomainOutput{})
}
