// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HealthcareFhirStoreIamMember struct {
	pulumi.CustomResourceState

	Condition                      HealthcareFhirStoreIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                           pulumi.StringOutput                            `pulumi:"etag"`
	FhirStoreId                    pulumi.StringOutput                            `pulumi:"fhirStoreId"`
	HealthcareFhirStoreIamMemberId pulumi.StringOutput                            `pulumi:"healthcareFhirStoreIamMemberId"`
	Member                         pulumi.StringOutput                            `pulumi:"member"`
	Role                           pulumi.StringOutput                            `pulumi:"role"`
}

// NewHealthcareFhirStoreIamMember registers a new resource with the given unique name, arguments, and options.
func NewHealthcareFhirStoreIamMember(ctx *pulumi.Context,
	name string, args *HealthcareFhirStoreIamMemberArgs, opts ...pulumi.ResourceOption) (*HealthcareFhirStoreIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FhirStoreId == nil {
		return nil, errors.New("invalid value for required argument 'FhirStoreId'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource HealthcareFhirStoreIamMember
	err = ctx.RegisterPackageResource("google:index/healthcareFhirStoreIamMember:HealthcareFhirStoreIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHealthcareFhirStoreIamMember gets an existing HealthcareFhirStoreIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHealthcareFhirStoreIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HealthcareFhirStoreIamMemberState, opts ...pulumi.ResourceOption) (*HealthcareFhirStoreIamMember, error) {
	var resource HealthcareFhirStoreIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/healthcareFhirStoreIamMember:HealthcareFhirStoreIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HealthcareFhirStoreIamMember resources.
type healthcareFhirStoreIamMemberState struct {
	Condition                      *HealthcareFhirStoreIamMemberCondition `pulumi:"condition"`
	Etag                           *string                                `pulumi:"etag"`
	FhirStoreId                    *string                                `pulumi:"fhirStoreId"`
	HealthcareFhirStoreIamMemberId *string                                `pulumi:"healthcareFhirStoreIamMemberId"`
	Member                         *string                                `pulumi:"member"`
	Role                           *string                                `pulumi:"role"`
}

type HealthcareFhirStoreIamMemberState struct {
	Condition                      HealthcareFhirStoreIamMemberConditionPtrInput
	Etag                           pulumi.StringPtrInput
	FhirStoreId                    pulumi.StringPtrInput
	HealthcareFhirStoreIamMemberId pulumi.StringPtrInput
	Member                         pulumi.StringPtrInput
	Role                           pulumi.StringPtrInput
}

func (HealthcareFhirStoreIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareFhirStoreIamMemberState)(nil)).Elem()
}

type healthcareFhirStoreIamMemberArgs struct {
	Condition                      *HealthcareFhirStoreIamMemberCondition `pulumi:"condition"`
	FhirStoreId                    string                                 `pulumi:"fhirStoreId"`
	HealthcareFhirStoreIamMemberId *string                                `pulumi:"healthcareFhirStoreIamMemberId"`
	Member                         string                                 `pulumi:"member"`
	Role                           string                                 `pulumi:"role"`
}

// The set of arguments for constructing a HealthcareFhirStoreIamMember resource.
type HealthcareFhirStoreIamMemberArgs struct {
	Condition                      HealthcareFhirStoreIamMemberConditionPtrInput
	FhirStoreId                    pulumi.StringInput
	HealthcareFhirStoreIamMemberId pulumi.StringPtrInput
	Member                         pulumi.StringInput
	Role                           pulumi.StringInput
}

func (HealthcareFhirStoreIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*healthcareFhirStoreIamMemberArgs)(nil)).Elem()
}

type HealthcareFhirStoreIamMemberInput interface {
	pulumi.Input

	ToHealthcareFhirStoreIamMemberOutput() HealthcareFhirStoreIamMemberOutput
	ToHealthcareFhirStoreIamMemberOutputWithContext(ctx context.Context) HealthcareFhirStoreIamMemberOutput
}

func (*HealthcareFhirStoreIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareFhirStoreIamMember)(nil)).Elem()
}

func (i *HealthcareFhirStoreIamMember) ToHealthcareFhirStoreIamMemberOutput() HealthcareFhirStoreIamMemberOutput {
	return i.ToHealthcareFhirStoreIamMemberOutputWithContext(context.Background())
}

func (i *HealthcareFhirStoreIamMember) ToHealthcareFhirStoreIamMemberOutputWithContext(ctx context.Context) HealthcareFhirStoreIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthcareFhirStoreIamMemberOutput)
}

type HealthcareFhirStoreIamMemberOutput struct{ *pulumi.OutputState }

func (HealthcareFhirStoreIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthcareFhirStoreIamMember)(nil)).Elem()
}

func (o HealthcareFhirStoreIamMemberOutput) ToHealthcareFhirStoreIamMemberOutput() HealthcareFhirStoreIamMemberOutput {
	return o
}

func (o HealthcareFhirStoreIamMemberOutput) ToHealthcareFhirStoreIamMemberOutputWithContext(ctx context.Context) HealthcareFhirStoreIamMemberOutput {
	return o
}

func (o HealthcareFhirStoreIamMemberOutput) Condition() HealthcareFhirStoreIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *HealthcareFhirStoreIamMember) HealthcareFhirStoreIamMemberConditionPtrOutput {
		return v.Condition
	}).(HealthcareFhirStoreIamMemberConditionPtrOutput)
}

func (o HealthcareFhirStoreIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareFhirStoreIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o HealthcareFhirStoreIamMemberOutput) FhirStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareFhirStoreIamMember) pulumi.StringOutput { return v.FhirStoreId }).(pulumi.StringOutput)
}

func (o HealthcareFhirStoreIamMemberOutput) HealthcareFhirStoreIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareFhirStoreIamMember) pulumi.StringOutput { return v.HealthcareFhirStoreIamMemberId }).(pulumi.StringOutput)
}

func (o HealthcareFhirStoreIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareFhirStoreIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o HealthcareFhirStoreIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *HealthcareFhirStoreIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HealthcareFhirStoreIamMemberInput)(nil)).Elem(), &HealthcareFhirStoreIamMember{})
	pulumi.RegisterOutputType(HealthcareFhirStoreIamMemberOutput{})
}
