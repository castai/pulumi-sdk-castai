// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoggingLogViewIamBinding struct {
	pulumi.CustomResourceState

	Bucket                     pulumi.StringOutput                        `pulumi:"bucket"`
	Condition                  LoggingLogViewIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                       pulumi.StringOutput                        `pulumi:"etag"`
	Location                   pulumi.StringOutput                        `pulumi:"location"`
	LoggingLogViewIamBindingId pulumi.StringOutput                        `pulumi:"loggingLogViewIamBindingId"`
	Members                    pulumi.StringArrayOutput                   `pulumi:"members"`
	Name                       pulumi.StringOutput                        `pulumi:"name"`
	Parent                     pulumi.StringOutput                        `pulumi:"parent"`
	Role                       pulumi.StringOutput                        `pulumi:"role"`
}

// NewLoggingLogViewIamBinding registers a new resource with the given unique name, arguments, and options.
func NewLoggingLogViewIamBinding(ctx *pulumi.Context,
	name string, args *LoggingLogViewIamBindingArgs, opts ...pulumi.ResourceOption) (*LoggingLogViewIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Parent == nil {
		return nil, errors.New("invalid value for required argument 'Parent'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource LoggingLogViewIamBinding
	err = ctx.RegisterPackageResource("google:index/loggingLogViewIamBinding:LoggingLogViewIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingLogViewIamBinding gets an existing LoggingLogViewIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingLogViewIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingLogViewIamBindingState, opts ...pulumi.ResourceOption) (*LoggingLogViewIamBinding, error) {
	var resource LoggingLogViewIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/loggingLogViewIamBinding:LoggingLogViewIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingLogViewIamBinding resources.
type loggingLogViewIamBindingState struct {
	Bucket                     *string                            `pulumi:"bucket"`
	Condition                  *LoggingLogViewIamBindingCondition `pulumi:"condition"`
	Etag                       *string                            `pulumi:"etag"`
	Location                   *string                            `pulumi:"location"`
	LoggingLogViewIamBindingId *string                            `pulumi:"loggingLogViewIamBindingId"`
	Members                    []string                           `pulumi:"members"`
	Name                       *string                            `pulumi:"name"`
	Parent                     *string                            `pulumi:"parent"`
	Role                       *string                            `pulumi:"role"`
}

type LoggingLogViewIamBindingState struct {
	Bucket                     pulumi.StringPtrInput
	Condition                  LoggingLogViewIamBindingConditionPtrInput
	Etag                       pulumi.StringPtrInput
	Location                   pulumi.StringPtrInput
	LoggingLogViewIamBindingId pulumi.StringPtrInput
	Members                    pulumi.StringArrayInput
	Name                       pulumi.StringPtrInput
	Parent                     pulumi.StringPtrInput
	Role                       pulumi.StringPtrInput
}

func (LoggingLogViewIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingLogViewIamBindingState)(nil)).Elem()
}

type loggingLogViewIamBindingArgs struct {
	Bucket                     string                             `pulumi:"bucket"`
	Condition                  *LoggingLogViewIamBindingCondition `pulumi:"condition"`
	Location                   *string                            `pulumi:"location"`
	LoggingLogViewIamBindingId *string                            `pulumi:"loggingLogViewIamBindingId"`
	Members                    []string                           `pulumi:"members"`
	Name                       *string                            `pulumi:"name"`
	Parent                     string                             `pulumi:"parent"`
	Role                       string                             `pulumi:"role"`
}

// The set of arguments for constructing a LoggingLogViewIamBinding resource.
type LoggingLogViewIamBindingArgs struct {
	Bucket                     pulumi.StringInput
	Condition                  LoggingLogViewIamBindingConditionPtrInput
	Location                   pulumi.StringPtrInput
	LoggingLogViewIamBindingId pulumi.StringPtrInput
	Members                    pulumi.StringArrayInput
	Name                       pulumi.StringPtrInput
	Parent                     pulumi.StringInput
	Role                       pulumi.StringInput
}

func (LoggingLogViewIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingLogViewIamBindingArgs)(nil)).Elem()
}

type LoggingLogViewIamBindingInput interface {
	pulumi.Input

	ToLoggingLogViewIamBindingOutput() LoggingLogViewIamBindingOutput
	ToLoggingLogViewIamBindingOutputWithContext(ctx context.Context) LoggingLogViewIamBindingOutput
}

func (*LoggingLogViewIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingLogViewIamBinding)(nil)).Elem()
}

func (i *LoggingLogViewIamBinding) ToLoggingLogViewIamBindingOutput() LoggingLogViewIamBindingOutput {
	return i.ToLoggingLogViewIamBindingOutputWithContext(context.Background())
}

func (i *LoggingLogViewIamBinding) ToLoggingLogViewIamBindingOutputWithContext(ctx context.Context) LoggingLogViewIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingLogViewIamBindingOutput)
}

type LoggingLogViewIamBindingOutput struct{ *pulumi.OutputState }

func (LoggingLogViewIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingLogViewIamBinding)(nil)).Elem()
}

func (o LoggingLogViewIamBindingOutput) ToLoggingLogViewIamBindingOutput() LoggingLogViewIamBindingOutput {
	return o
}

func (o LoggingLogViewIamBindingOutput) ToLoggingLogViewIamBindingOutputWithContext(ctx context.Context) LoggingLogViewIamBindingOutput {
	return o
}

func (o LoggingLogViewIamBindingOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamBinding) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamBindingOutput) Condition() LoggingLogViewIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *LoggingLogViewIamBinding) LoggingLogViewIamBindingConditionPtrOutput { return v.Condition }).(LoggingLogViewIamBindingConditionPtrOutput)
}

func (o LoggingLogViewIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamBindingOutput) LoggingLogViewIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamBinding) pulumi.StringOutput { return v.LoggingLogViewIamBindingId }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoggingLogViewIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o LoggingLogViewIamBindingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamBinding) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamBindingOutput) Parent() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamBinding) pulumi.StringOutput { return v.Parent }).(pulumi.StringOutput)
}

func (o LoggingLogViewIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *LoggingLogViewIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingLogViewIamBindingInput)(nil)).Elem(), &LoggingLogViewIamBinding{})
	pulumi.RegisterOutputType(LoggingLogViewIamBindingOutput{})
}
