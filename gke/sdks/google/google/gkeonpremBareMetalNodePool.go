// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeonpremBareMetalNodePool struct {
	pulumi.CustomResourceState

	// Annotations on the Bare Metal Node Pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// The cluster this node pool belongs to.
	BareMetalCluster pulumi.StringOutput `pulumi:"bareMetalCluster"`
	// The time the cluster was created, in RFC3339 text format.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The time the cluster was deleted, in RFC3339 text format.
	DeleteTime pulumi.StringOutput `pulumi:"deleteTime"`
	// The display name for the Bare Metal Node Pool.
	DisplayName          pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete
	// requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent
	// read-modify-writes through optimistic concurrency control.
	Etag                         pulumi.StringOutput `pulumi:"etag"`
	GkeonpremBareMetalNodePoolId pulumi.StringOutput `pulumi:"gkeonpremBareMetalNodePoolId"`
	// The location of the resource.
	Location pulumi.StringOutput `pulumi:"location"`
	// The bare metal node pool name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Node pool configuration.
	NodePoolConfig GkeonpremBareMetalNodePoolNodePoolConfigOutput `pulumi:"nodePoolConfig"`
	Project        pulumi.StringOutput                            `pulumi:"project"`
	// If set, there are currently changes in flight to the Bare Metal User Cluster.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// The current state of this cluster.
	State pulumi.StringOutput `pulumi:"state"`
	// Specifies detailed node pool status.
	Statuses GkeonpremBareMetalNodePoolStatusArrayOutput `pulumi:"statuses"`
	Timeouts GkeonpremBareMetalNodePoolTimeoutsPtrOutput `pulumi:"timeouts"`
	// The unique identifier of the Bare Metal Node Pool.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewGkeonpremBareMetalNodePool registers a new resource with the given unique name, arguments, and options.
func NewGkeonpremBareMetalNodePool(ctx *pulumi.Context,
	name string, args *GkeonpremBareMetalNodePoolArgs, opts ...pulumi.ResourceOption) (*GkeonpremBareMetalNodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BareMetalCluster == nil {
		return nil, errors.New("invalid value for required argument 'BareMetalCluster'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.NodePoolConfig == nil {
		return nil, errors.New("invalid value for required argument 'NodePoolConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeonpremBareMetalNodePool
	err = ctx.RegisterPackageResource("google:index/gkeonpremBareMetalNodePool:GkeonpremBareMetalNodePool", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeonpremBareMetalNodePool gets an existing GkeonpremBareMetalNodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeonpremBareMetalNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeonpremBareMetalNodePoolState, opts ...pulumi.ResourceOption) (*GkeonpremBareMetalNodePool, error) {
	var resource GkeonpremBareMetalNodePool
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/gkeonpremBareMetalNodePool:GkeonpremBareMetalNodePool", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeonpremBareMetalNodePool resources.
type gkeonpremBareMetalNodePoolState struct {
	// Annotations on the Bare Metal Node Pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// 'effective_annotations' for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// The cluster this node pool belongs to.
	BareMetalCluster *string `pulumi:"bareMetalCluster"`
	// The time the cluster was created, in RFC3339 text format.
	CreateTime *string `pulumi:"createTime"`
	// The time the cluster was deleted, in RFC3339 text format.
	DeleteTime *string `pulumi:"deleteTime"`
	// The display name for the Bare Metal Node Pool.
	DisplayName          *string           `pulumi:"displayName"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete
	// requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent
	// read-modify-writes through optimistic concurrency control.
	Etag                         *string `pulumi:"etag"`
	GkeonpremBareMetalNodePoolId *string `pulumi:"gkeonpremBareMetalNodePoolId"`
	// The location of the resource.
	Location *string `pulumi:"location"`
	// The bare metal node pool name.
	Name *string `pulumi:"name"`
	// Node pool configuration.
	NodePoolConfig *GkeonpremBareMetalNodePoolNodePoolConfig `pulumi:"nodePoolConfig"`
	Project        *string                                   `pulumi:"project"`
	// If set, there are currently changes in flight to the Bare Metal User Cluster.
	Reconciling *bool `pulumi:"reconciling"`
	// The current state of this cluster.
	State *string `pulumi:"state"`
	// Specifies detailed node pool status.
	Statuses []GkeonpremBareMetalNodePoolStatus  `pulumi:"statuses"`
	Timeouts *GkeonpremBareMetalNodePoolTimeouts `pulumi:"timeouts"`
	// The unique identifier of the Bare Metal Node Pool.
	Uid *string `pulumi:"uid"`
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime *string `pulumi:"updateTime"`
}

type GkeonpremBareMetalNodePoolState struct {
	// Annotations on the Bare Metal Node Pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// The cluster this node pool belongs to.
	BareMetalCluster pulumi.StringPtrInput
	// The time the cluster was created, in RFC3339 text format.
	CreateTime pulumi.StringPtrInput
	// The time the cluster was deleted, in RFC3339 text format.
	DeleteTime pulumi.StringPtrInput
	// The display name for the Bare Metal Node Pool.
	DisplayName          pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete
	// requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent
	// read-modify-writes through optimistic concurrency control.
	Etag                         pulumi.StringPtrInput
	GkeonpremBareMetalNodePoolId pulumi.StringPtrInput
	// The location of the resource.
	Location pulumi.StringPtrInput
	// The bare metal node pool name.
	Name pulumi.StringPtrInput
	// Node pool configuration.
	NodePoolConfig GkeonpremBareMetalNodePoolNodePoolConfigPtrInput
	Project        pulumi.StringPtrInput
	// If set, there are currently changes in flight to the Bare Metal User Cluster.
	Reconciling pulumi.BoolPtrInput
	// The current state of this cluster.
	State pulumi.StringPtrInput
	// Specifies detailed node pool status.
	Statuses GkeonpremBareMetalNodePoolStatusArrayInput
	Timeouts GkeonpremBareMetalNodePoolTimeoutsPtrInput
	// The unique identifier of the Bare Metal Node Pool.
	Uid pulumi.StringPtrInput
	// The time the cluster was last updated, in RFC3339 text format.
	UpdateTime pulumi.StringPtrInput
}

func (GkeonpremBareMetalNodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeonpremBareMetalNodePoolState)(nil)).Elem()
}

type gkeonpremBareMetalNodePoolArgs struct {
	// Annotations on the Bare Metal Node Pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// 'effective_annotations' for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// The cluster this node pool belongs to.
	BareMetalCluster string `pulumi:"bareMetalCluster"`
	// The display name for the Bare Metal Node Pool.
	DisplayName                  *string `pulumi:"displayName"`
	GkeonpremBareMetalNodePoolId *string `pulumi:"gkeonpremBareMetalNodePoolId"`
	// The location of the resource.
	Location string `pulumi:"location"`
	// The bare metal node pool name.
	Name *string `pulumi:"name"`
	// Node pool configuration.
	NodePoolConfig GkeonpremBareMetalNodePoolNodePoolConfig `pulumi:"nodePoolConfig"`
	Project        *string                                  `pulumi:"project"`
	Timeouts       *GkeonpremBareMetalNodePoolTimeouts      `pulumi:"timeouts"`
}

// The set of arguments for constructing a GkeonpremBareMetalNodePool resource.
type GkeonpremBareMetalNodePoolArgs struct {
	// Annotations on the Bare Metal Node Pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// 'effective_annotations' for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// The cluster this node pool belongs to.
	BareMetalCluster pulumi.StringInput
	// The display name for the Bare Metal Node Pool.
	DisplayName                  pulumi.StringPtrInput
	GkeonpremBareMetalNodePoolId pulumi.StringPtrInput
	// The location of the resource.
	Location pulumi.StringInput
	// The bare metal node pool name.
	Name pulumi.StringPtrInput
	// Node pool configuration.
	NodePoolConfig GkeonpremBareMetalNodePoolNodePoolConfigInput
	Project        pulumi.StringPtrInput
	Timeouts       GkeonpremBareMetalNodePoolTimeoutsPtrInput
}

func (GkeonpremBareMetalNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeonpremBareMetalNodePoolArgs)(nil)).Elem()
}

type GkeonpremBareMetalNodePoolInput interface {
	pulumi.Input

	ToGkeonpremBareMetalNodePoolOutput() GkeonpremBareMetalNodePoolOutput
	ToGkeonpremBareMetalNodePoolOutputWithContext(ctx context.Context) GkeonpremBareMetalNodePoolOutput
}

func (*GkeonpremBareMetalNodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeonpremBareMetalNodePool)(nil)).Elem()
}

func (i *GkeonpremBareMetalNodePool) ToGkeonpremBareMetalNodePoolOutput() GkeonpremBareMetalNodePoolOutput {
	return i.ToGkeonpremBareMetalNodePoolOutputWithContext(context.Background())
}

func (i *GkeonpremBareMetalNodePool) ToGkeonpremBareMetalNodePoolOutputWithContext(ctx context.Context) GkeonpremBareMetalNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeonpremBareMetalNodePoolOutput)
}

type GkeonpremBareMetalNodePoolOutput struct{ *pulumi.OutputState }

func (GkeonpremBareMetalNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeonpremBareMetalNodePool)(nil)).Elem()
}

func (o GkeonpremBareMetalNodePoolOutput) ToGkeonpremBareMetalNodePoolOutput() GkeonpremBareMetalNodePoolOutput {
	return o
}

func (o GkeonpremBareMetalNodePoolOutput) ToGkeonpremBareMetalNodePoolOutputWithContext(ctx context.Context) GkeonpremBareMetalNodePoolOutput {
	return o
}

// Annotations on the Bare Metal Node Pool. This field has the same restrictions as Kubernetes annotations. The total size
// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
// 'effective_annotations' for all of the annotations present on the resource.
func (o GkeonpremBareMetalNodePoolOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// The cluster this node pool belongs to.
func (o GkeonpremBareMetalNodePoolOutput) BareMetalCluster() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.BareMetalCluster }).(pulumi.StringOutput)
}

// The time the cluster was created, in RFC3339 text format.
func (o GkeonpremBareMetalNodePoolOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The time the cluster was deleted, in RFC3339 text format.
func (o GkeonpremBareMetalNodePoolOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.DeleteTime }).(pulumi.StringOutput)
}

// The display name for the Bare Metal Node Pool.
func (o GkeonpremBareMetalNodePoolOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o GkeonpremBareMetalNodePoolOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete
// requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent
// read-modify-writes through optimistic concurrency control.
func (o GkeonpremBareMetalNodePoolOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o GkeonpremBareMetalNodePoolOutput) GkeonpremBareMetalNodePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.GkeonpremBareMetalNodePoolId }).(pulumi.StringOutput)
}

// The location of the resource.
func (o GkeonpremBareMetalNodePoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The bare metal node pool name.
func (o GkeonpremBareMetalNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Node pool configuration.
func (o GkeonpremBareMetalNodePoolOutput) NodePoolConfig() GkeonpremBareMetalNodePoolNodePoolConfigOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) GkeonpremBareMetalNodePoolNodePoolConfigOutput {
		return v.NodePoolConfig
	}).(GkeonpremBareMetalNodePoolNodePoolConfigOutput)
}

func (o GkeonpremBareMetalNodePoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// If set, there are currently changes in flight to the Bare Metal User Cluster.
func (o GkeonpremBareMetalNodePoolOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// The current state of this cluster.
func (o GkeonpremBareMetalNodePoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Specifies detailed node pool status.
func (o GkeonpremBareMetalNodePoolOutput) Statuses() GkeonpremBareMetalNodePoolStatusArrayOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) GkeonpremBareMetalNodePoolStatusArrayOutput { return v.Statuses }).(GkeonpremBareMetalNodePoolStatusArrayOutput)
}

func (o GkeonpremBareMetalNodePoolOutput) Timeouts() GkeonpremBareMetalNodePoolTimeoutsPtrOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) GkeonpremBareMetalNodePoolTimeoutsPtrOutput { return v.Timeouts }).(GkeonpremBareMetalNodePoolTimeoutsPtrOutput)
}

// The unique identifier of the Bare Metal Node Pool.
func (o GkeonpremBareMetalNodePoolOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// The time the cluster was last updated, in RFC3339 text format.
func (o GkeonpremBareMetalNodePoolOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeonpremBareMetalNodePool) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeonpremBareMetalNodePoolInput)(nil)).Elem(), &GkeonpremBareMetalNodePool{})
	pulumi.RegisterOutputType(GkeonpremBareMetalNodePoolOutput{})
}
