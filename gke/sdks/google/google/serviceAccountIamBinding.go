// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceAccountIamBinding struct {
	pulumi.CustomResourceState

	Condition                  ServiceAccountIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                       pulumi.StringOutput                        `pulumi:"etag"`
	Members                    pulumi.StringArrayOutput                   `pulumi:"members"`
	Role                       pulumi.StringOutput                        `pulumi:"role"`
	ServiceAccountIamBindingId pulumi.StringOutput                        `pulumi:"serviceAccountIamBindingId"`
	ServiceAccountId           pulumi.StringOutput                        `pulumi:"serviceAccountId"`
}

// NewServiceAccountIamBinding registers a new resource with the given unique name, arguments, and options.
func NewServiceAccountIamBinding(ctx *pulumi.Context,
	name string, args *ServiceAccountIamBindingArgs, opts ...pulumi.ResourceOption) (*ServiceAccountIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceAccountIamBinding
	err = ctx.RegisterPackageResource("google:index/serviceAccountIamBinding:ServiceAccountIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAccountIamBinding gets an existing ServiceAccountIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceAccountIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceAccountIamBindingState, opts ...pulumi.ResourceOption) (*ServiceAccountIamBinding, error) {
	var resource ServiceAccountIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/serviceAccountIamBinding:ServiceAccountIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceAccountIamBinding resources.
type serviceAccountIamBindingState struct {
	Condition                  *ServiceAccountIamBindingCondition `pulumi:"condition"`
	Etag                       *string                            `pulumi:"etag"`
	Members                    []string                           `pulumi:"members"`
	Role                       *string                            `pulumi:"role"`
	ServiceAccountIamBindingId *string                            `pulumi:"serviceAccountIamBindingId"`
	ServiceAccountId           *string                            `pulumi:"serviceAccountId"`
}

type ServiceAccountIamBindingState struct {
	Condition                  ServiceAccountIamBindingConditionPtrInput
	Etag                       pulumi.StringPtrInput
	Members                    pulumi.StringArrayInput
	Role                       pulumi.StringPtrInput
	ServiceAccountIamBindingId pulumi.StringPtrInput
	ServiceAccountId           pulumi.StringPtrInput
}

func (ServiceAccountIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountIamBindingState)(nil)).Elem()
}

type serviceAccountIamBindingArgs struct {
	Condition                  *ServiceAccountIamBindingCondition `pulumi:"condition"`
	Members                    []string                           `pulumi:"members"`
	Role                       string                             `pulumi:"role"`
	ServiceAccountIamBindingId *string                            `pulumi:"serviceAccountIamBindingId"`
	ServiceAccountId           string                             `pulumi:"serviceAccountId"`
}

// The set of arguments for constructing a ServiceAccountIamBinding resource.
type ServiceAccountIamBindingArgs struct {
	Condition                  ServiceAccountIamBindingConditionPtrInput
	Members                    pulumi.StringArrayInput
	Role                       pulumi.StringInput
	ServiceAccountIamBindingId pulumi.StringPtrInput
	ServiceAccountId           pulumi.StringInput
}

func (ServiceAccountIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountIamBindingArgs)(nil)).Elem()
}

type ServiceAccountIamBindingInput interface {
	pulumi.Input

	ToServiceAccountIamBindingOutput() ServiceAccountIamBindingOutput
	ToServiceAccountIamBindingOutputWithContext(ctx context.Context) ServiceAccountIamBindingOutput
}

func (*ServiceAccountIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountIamBinding)(nil)).Elem()
}

func (i *ServiceAccountIamBinding) ToServiceAccountIamBindingOutput() ServiceAccountIamBindingOutput {
	return i.ToServiceAccountIamBindingOutputWithContext(context.Background())
}

func (i *ServiceAccountIamBinding) ToServiceAccountIamBindingOutputWithContext(ctx context.Context) ServiceAccountIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountIamBindingOutput)
}

type ServiceAccountIamBindingOutput struct{ *pulumi.OutputState }

func (ServiceAccountIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountIamBinding)(nil)).Elem()
}

func (o ServiceAccountIamBindingOutput) ToServiceAccountIamBindingOutput() ServiceAccountIamBindingOutput {
	return o
}

func (o ServiceAccountIamBindingOutput) ToServiceAccountIamBindingOutputWithContext(ctx context.Context) ServiceAccountIamBindingOutput {
	return o
}

func (o ServiceAccountIamBindingOutput) Condition() ServiceAccountIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *ServiceAccountIamBinding) ServiceAccountIamBindingConditionPtrOutput { return v.Condition }).(ServiceAccountIamBindingConditionPtrOutput)
}

func (o ServiceAccountIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ServiceAccountIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceAccountIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o ServiceAccountIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o ServiceAccountIamBindingOutput) ServiceAccountIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountIamBinding) pulumi.StringOutput { return v.ServiceAccountIamBindingId }).(pulumi.StringOutput)
}

func (o ServiceAccountIamBindingOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccountIamBinding) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountIamBindingInput)(nil)).Elem(), &ServiceAccountIamBinding{})
	pulumi.RegisterOutputType(ServiceAccountIamBindingOutput{})
}
