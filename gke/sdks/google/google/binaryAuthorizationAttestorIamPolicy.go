// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BinaryAuthorizationAttestorIamPolicy struct {
	pulumi.CustomResourceState

	Attestor                               pulumi.StringOutput `pulumi:"attestor"`
	BinaryAuthorizationAttestorIamPolicyId pulumi.StringOutput `pulumi:"binaryAuthorizationAttestorIamPolicyId"`
	Etag                                   pulumi.StringOutput `pulumi:"etag"`
	PolicyData                             pulumi.StringOutput `pulumi:"policyData"`
	Project                                pulumi.StringOutput `pulumi:"project"`
}

// NewBinaryAuthorizationAttestorIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewBinaryAuthorizationAttestorIamPolicy(ctx *pulumi.Context,
	name string, args *BinaryAuthorizationAttestorIamPolicyArgs, opts ...pulumi.ResourceOption) (*BinaryAuthorizationAttestorIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Attestor == nil {
		return nil, errors.New("invalid value for required argument 'Attestor'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource BinaryAuthorizationAttestorIamPolicy
	err = ctx.RegisterPackageResource("google:index/binaryAuthorizationAttestorIamPolicy:BinaryAuthorizationAttestorIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBinaryAuthorizationAttestorIamPolicy gets an existing BinaryAuthorizationAttestorIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBinaryAuthorizationAttestorIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BinaryAuthorizationAttestorIamPolicyState, opts ...pulumi.ResourceOption) (*BinaryAuthorizationAttestorIamPolicy, error) {
	var resource BinaryAuthorizationAttestorIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/binaryAuthorizationAttestorIamPolicy:BinaryAuthorizationAttestorIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BinaryAuthorizationAttestorIamPolicy resources.
type binaryAuthorizationAttestorIamPolicyState struct {
	Attestor                               *string `pulumi:"attestor"`
	BinaryAuthorizationAttestorIamPolicyId *string `pulumi:"binaryAuthorizationAttestorIamPolicyId"`
	Etag                                   *string `pulumi:"etag"`
	PolicyData                             *string `pulumi:"policyData"`
	Project                                *string `pulumi:"project"`
}

type BinaryAuthorizationAttestorIamPolicyState struct {
	Attestor                               pulumi.StringPtrInput
	BinaryAuthorizationAttestorIamPolicyId pulumi.StringPtrInput
	Etag                                   pulumi.StringPtrInput
	PolicyData                             pulumi.StringPtrInput
	Project                                pulumi.StringPtrInput
}

func (BinaryAuthorizationAttestorIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*binaryAuthorizationAttestorIamPolicyState)(nil)).Elem()
}

type binaryAuthorizationAttestorIamPolicyArgs struct {
	Attestor                               string  `pulumi:"attestor"`
	BinaryAuthorizationAttestorIamPolicyId *string `pulumi:"binaryAuthorizationAttestorIamPolicyId"`
	PolicyData                             string  `pulumi:"policyData"`
	Project                                *string `pulumi:"project"`
}

// The set of arguments for constructing a BinaryAuthorizationAttestorIamPolicy resource.
type BinaryAuthorizationAttestorIamPolicyArgs struct {
	Attestor                               pulumi.StringInput
	BinaryAuthorizationAttestorIamPolicyId pulumi.StringPtrInput
	PolicyData                             pulumi.StringInput
	Project                                pulumi.StringPtrInput
}

func (BinaryAuthorizationAttestorIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*binaryAuthorizationAttestorIamPolicyArgs)(nil)).Elem()
}

type BinaryAuthorizationAttestorIamPolicyInput interface {
	pulumi.Input

	ToBinaryAuthorizationAttestorIamPolicyOutput() BinaryAuthorizationAttestorIamPolicyOutput
	ToBinaryAuthorizationAttestorIamPolicyOutputWithContext(ctx context.Context) BinaryAuthorizationAttestorIamPolicyOutput
}

func (*BinaryAuthorizationAttestorIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**BinaryAuthorizationAttestorIamPolicy)(nil)).Elem()
}

func (i *BinaryAuthorizationAttestorIamPolicy) ToBinaryAuthorizationAttestorIamPolicyOutput() BinaryAuthorizationAttestorIamPolicyOutput {
	return i.ToBinaryAuthorizationAttestorIamPolicyOutputWithContext(context.Background())
}

func (i *BinaryAuthorizationAttestorIamPolicy) ToBinaryAuthorizationAttestorIamPolicyOutputWithContext(ctx context.Context) BinaryAuthorizationAttestorIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BinaryAuthorizationAttestorIamPolicyOutput)
}

type BinaryAuthorizationAttestorIamPolicyOutput struct{ *pulumi.OutputState }

func (BinaryAuthorizationAttestorIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BinaryAuthorizationAttestorIamPolicy)(nil)).Elem()
}

func (o BinaryAuthorizationAttestorIamPolicyOutput) ToBinaryAuthorizationAttestorIamPolicyOutput() BinaryAuthorizationAttestorIamPolicyOutput {
	return o
}

func (o BinaryAuthorizationAttestorIamPolicyOutput) ToBinaryAuthorizationAttestorIamPolicyOutputWithContext(ctx context.Context) BinaryAuthorizationAttestorIamPolicyOutput {
	return o
}

func (o BinaryAuthorizationAttestorIamPolicyOutput) Attestor() pulumi.StringOutput {
	return o.ApplyT(func(v *BinaryAuthorizationAttestorIamPolicy) pulumi.StringOutput { return v.Attestor }).(pulumi.StringOutput)
}

func (o BinaryAuthorizationAttestorIamPolicyOutput) BinaryAuthorizationAttestorIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *BinaryAuthorizationAttestorIamPolicy) pulumi.StringOutput {
		return v.BinaryAuthorizationAttestorIamPolicyId
	}).(pulumi.StringOutput)
}

func (o BinaryAuthorizationAttestorIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *BinaryAuthorizationAttestorIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o BinaryAuthorizationAttestorIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *BinaryAuthorizationAttestorIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o BinaryAuthorizationAttestorIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *BinaryAuthorizationAttestorIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BinaryAuthorizationAttestorIamPolicyInput)(nil)).Elem(), &BinaryAuthorizationAttestorIamPolicy{})
	pulumi.RegisterOutputType(BinaryAuthorizationAttestorIamPolicyOutput{})
}
