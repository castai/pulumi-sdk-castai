// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GkeBackupBackupPlanIamMember struct {
	pulumi.CustomResourceState

	Condition                      GkeBackupBackupPlanIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                           pulumi.StringOutput                            `pulumi:"etag"`
	GkeBackupBackupPlanIamMemberId pulumi.StringOutput                            `pulumi:"gkeBackupBackupPlanIamMemberId"`
	Location                       pulumi.StringOutput                            `pulumi:"location"`
	Member                         pulumi.StringOutput                            `pulumi:"member"`
	Name                           pulumi.StringOutput                            `pulumi:"name"`
	Project                        pulumi.StringOutput                            `pulumi:"project"`
	Role                           pulumi.StringOutput                            `pulumi:"role"`
}

// NewGkeBackupBackupPlanIamMember registers a new resource with the given unique name, arguments, and options.
func NewGkeBackupBackupPlanIamMember(ctx *pulumi.Context,
	name string, args *GkeBackupBackupPlanIamMemberArgs, opts ...pulumi.ResourceOption) (*GkeBackupBackupPlanIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource GkeBackupBackupPlanIamMember
	err = ctx.RegisterPackageResource("google:index/gkeBackupBackupPlanIamMember:GkeBackupBackupPlanIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGkeBackupBackupPlanIamMember gets an existing GkeBackupBackupPlanIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGkeBackupBackupPlanIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GkeBackupBackupPlanIamMemberState, opts ...pulumi.ResourceOption) (*GkeBackupBackupPlanIamMember, error) {
	var resource GkeBackupBackupPlanIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/gkeBackupBackupPlanIamMember:GkeBackupBackupPlanIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GkeBackupBackupPlanIamMember resources.
type gkeBackupBackupPlanIamMemberState struct {
	Condition                      *GkeBackupBackupPlanIamMemberCondition `pulumi:"condition"`
	Etag                           *string                                `pulumi:"etag"`
	GkeBackupBackupPlanIamMemberId *string                                `pulumi:"gkeBackupBackupPlanIamMemberId"`
	Location                       *string                                `pulumi:"location"`
	Member                         *string                                `pulumi:"member"`
	Name                           *string                                `pulumi:"name"`
	Project                        *string                                `pulumi:"project"`
	Role                           *string                                `pulumi:"role"`
}

type GkeBackupBackupPlanIamMemberState struct {
	Condition                      GkeBackupBackupPlanIamMemberConditionPtrInput
	Etag                           pulumi.StringPtrInput
	GkeBackupBackupPlanIamMemberId pulumi.StringPtrInput
	Location                       pulumi.StringPtrInput
	Member                         pulumi.StringPtrInput
	Name                           pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
	Role                           pulumi.StringPtrInput
}

func (GkeBackupBackupPlanIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeBackupBackupPlanIamMemberState)(nil)).Elem()
}

type gkeBackupBackupPlanIamMemberArgs struct {
	Condition                      *GkeBackupBackupPlanIamMemberCondition `pulumi:"condition"`
	GkeBackupBackupPlanIamMemberId *string                                `pulumi:"gkeBackupBackupPlanIamMemberId"`
	Location                       *string                                `pulumi:"location"`
	Member                         string                                 `pulumi:"member"`
	Name                           *string                                `pulumi:"name"`
	Project                        *string                                `pulumi:"project"`
	Role                           string                                 `pulumi:"role"`
}

// The set of arguments for constructing a GkeBackupBackupPlanIamMember resource.
type GkeBackupBackupPlanIamMemberArgs struct {
	Condition                      GkeBackupBackupPlanIamMemberConditionPtrInput
	GkeBackupBackupPlanIamMemberId pulumi.StringPtrInput
	Location                       pulumi.StringPtrInput
	Member                         pulumi.StringInput
	Name                           pulumi.StringPtrInput
	Project                        pulumi.StringPtrInput
	Role                           pulumi.StringInput
}

func (GkeBackupBackupPlanIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gkeBackupBackupPlanIamMemberArgs)(nil)).Elem()
}

type GkeBackupBackupPlanIamMemberInput interface {
	pulumi.Input

	ToGkeBackupBackupPlanIamMemberOutput() GkeBackupBackupPlanIamMemberOutput
	ToGkeBackupBackupPlanIamMemberOutputWithContext(ctx context.Context) GkeBackupBackupPlanIamMemberOutput
}

func (*GkeBackupBackupPlanIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeBackupBackupPlanIamMember)(nil)).Elem()
}

func (i *GkeBackupBackupPlanIamMember) ToGkeBackupBackupPlanIamMemberOutput() GkeBackupBackupPlanIamMemberOutput {
	return i.ToGkeBackupBackupPlanIamMemberOutputWithContext(context.Background())
}

func (i *GkeBackupBackupPlanIamMember) ToGkeBackupBackupPlanIamMemberOutputWithContext(ctx context.Context) GkeBackupBackupPlanIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeBackupBackupPlanIamMemberOutput)
}

type GkeBackupBackupPlanIamMemberOutput struct{ *pulumi.OutputState }

func (GkeBackupBackupPlanIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeBackupBackupPlanIamMember)(nil)).Elem()
}

func (o GkeBackupBackupPlanIamMemberOutput) ToGkeBackupBackupPlanIamMemberOutput() GkeBackupBackupPlanIamMemberOutput {
	return o
}

func (o GkeBackupBackupPlanIamMemberOutput) ToGkeBackupBackupPlanIamMemberOutputWithContext(ctx context.Context) GkeBackupBackupPlanIamMemberOutput {
	return o
}

func (o GkeBackupBackupPlanIamMemberOutput) Condition() GkeBackupBackupPlanIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamMember) GkeBackupBackupPlanIamMemberConditionPtrOutput {
		return v.Condition
	}).(GkeBackupBackupPlanIamMemberConditionPtrOutput)
}

func (o GkeBackupBackupPlanIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamMemberOutput) GkeBackupBackupPlanIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamMember) pulumi.StringOutput { return v.GkeBackupBackupPlanIamMemberId }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamMemberOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamMember) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamMemberOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamMember) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o GkeBackupBackupPlanIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *GkeBackupBackupPlanIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GkeBackupBackupPlanIamMemberInput)(nil)).Elem(), &GkeBackupBackupPlanIamMember{})
	pulumi.RegisterOutputType(GkeBackupBackupPlanIamMemberOutput{})
}
