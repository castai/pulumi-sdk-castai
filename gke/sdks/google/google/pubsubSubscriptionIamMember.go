// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PubsubSubscriptionIamMember struct {
	pulumi.CustomResourceState

	Condition                     PubsubSubscriptionIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	Member                        pulumi.StringOutput                           `pulumi:"member"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	PubsubSubscriptionIamMemberId pulumi.StringOutput                           `pulumi:"pubsubSubscriptionIamMemberId"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
	Subscription                  pulumi.StringOutput                           `pulumi:"subscription"`
}

// NewPubsubSubscriptionIamMember registers a new resource with the given unique name, arguments, and options.
func NewPubsubSubscriptionIamMember(ctx *pulumi.Context,
	name string, args *PubsubSubscriptionIamMemberArgs, opts ...pulumi.ResourceOption) (*PubsubSubscriptionIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Subscription == nil {
		return nil, errors.New("invalid value for required argument 'Subscription'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource PubsubSubscriptionIamMember
	err = ctx.RegisterPackageResource("google:index/pubsubSubscriptionIamMember:PubsubSubscriptionIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPubsubSubscriptionIamMember gets an existing PubsubSubscriptionIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPubsubSubscriptionIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PubsubSubscriptionIamMemberState, opts ...pulumi.ResourceOption) (*PubsubSubscriptionIamMember, error) {
	var resource PubsubSubscriptionIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/pubsubSubscriptionIamMember:PubsubSubscriptionIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PubsubSubscriptionIamMember resources.
type pubsubSubscriptionIamMemberState struct {
	Condition                     *PubsubSubscriptionIamMemberCondition `pulumi:"condition"`
	Etag                          *string                               `pulumi:"etag"`
	Member                        *string                               `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	PubsubSubscriptionIamMemberId *string                               `pulumi:"pubsubSubscriptionIamMemberId"`
	Role                          *string                               `pulumi:"role"`
	Subscription                  *string                               `pulumi:"subscription"`
}

type PubsubSubscriptionIamMemberState struct {
	Condition                     PubsubSubscriptionIamMemberConditionPtrInput
	Etag                          pulumi.StringPtrInput
	Member                        pulumi.StringPtrInput
	Project                       pulumi.StringPtrInput
	PubsubSubscriptionIamMemberId pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
	Subscription                  pulumi.StringPtrInput
}

func (PubsubSubscriptionIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubSubscriptionIamMemberState)(nil)).Elem()
}

type pubsubSubscriptionIamMemberArgs struct {
	Condition                     *PubsubSubscriptionIamMemberCondition `pulumi:"condition"`
	Member                        string                                `pulumi:"member"`
	Project                       *string                               `pulumi:"project"`
	PubsubSubscriptionIamMemberId *string                               `pulumi:"pubsubSubscriptionIamMemberId"`
	Role                          string                                `pulumi:"role"`
	Subscription                  string                                `pulumi:"subscription"`
}

// The set of arguments for constructing a PubsubSubscriptionIamMember resource.
type PubsubSubscriptionIamMemberArgs struct {
	Condition                     PubsubSubscriptionIamMemberConditionPtrInput
	Member                        pulumi.StringInput
	Project                       pulumi.StringPtrInput
	PubsubSubscriptionIamMemberId pulumi.StringPtrInput
	Role                          pulumi.StringInput
	Subscription                  pulumi.StringInput
}

func (PubsubSubscriptionIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubSubscriptionIamMemberArgs)(nil)).Elem()
}

type PubsubSubscriptionIamMemberInput interface {
	pulumi.Input

	ToPubsubSubscriptionIamMemberOutput() PubsubSubscriptionIamMemberOutput
	ToPubsubSubscriptionIamMemberOutputWithContext(ctx context.Context) PubsubSubscriptionIamMemberOutput
}

func (*PubsubSubscriptionIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubSubscriptionIamMember)(nil)).Elem()
}

func (i *PubsubSubscriptionIamMember) ToPubsubSubscriptionIamMemberOutput() PubsubSubscriptionIamMemberOutput {
	return i.ToPubsubSubscriptionIamMemberOutputWithContext(context.Background())
}

func (i *PubsubSubscriptionIamMember) ToPubsubSubscriptionIamMemberOutputWithContext(ctx context.Context) PubsubSubscriptionIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PubsubSubscriptionIamMemberOutput)
}

type PubsubSubscriptionIamMemberOutput struct{ *pulumi.OutputState }

func (PubsubSubscriptionIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubSubscriptionIamMember)(nil)).Elem()
}

func (o PubsubSubscriptionIamMemberOutput) ToPubsubSubscriptionIamMemberOutput() PubsubSubscriptionIamMemberOutput {
	return o
}

func (o PubsubSubscriptionIamMemberOutput) ToPubsubSubscriptionIamMemberOutputWithContext(ctx context.Context) PubsubSubscriptionIamMemberOutput {
	return o
}

func (o PubsubSubscriptionIamMemberOutput) Condition() PubsubSubscriptionIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *PubsubSubscriptionIamMember) PubsubSubscriptionIamMemberConditionPtrOutput { return v.Condition }).(PubsubSubscriptionIamMemberConditionPtrOutput)
}

func (o PubsubSubscriptionIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubSubscriptionIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o PubsubSubscriptionIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubSubscriptionIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o PubsubSubscriptionIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubSubscriptionIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o PubsubSubscriptionIamMemberOutput) PubsubSubscriptionIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubSubscriptionIamMember) pulumi.StringOutput { return v.PubsubSubscriptionIamMemberId }).(pulumi.StringOutput)
}

func (o PubsubSubscriptionIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubSubscriptionIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o PubsubSubscriptionIamMemberOutput) Subscription() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubSubscriptionIamMember) pulumi.StringOutput { return v.Subscription }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PubsubSubscriptionIamMemberInput)(nil)).Elem(), &PubsubSubscriptionIamMember{})
	pulumi.RegisterOutputType(PubsubSubscriptionIamMemberOutput{})
}
