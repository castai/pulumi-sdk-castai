// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupIapWebTypeAppEngineIamPolicy(ctx *pulumi.Context, args *LookupIapWebTypeAppEngineIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupIapWebTypeAppEngineIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupIapWebTypeAppEngineIamPolicyResult
	err = ctx.InvokePackage("google:index/getIapWebTypeAppEngineIamPolicy:getIapWebTypeAppEngineIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIapWebTypeAppEngineIamPolicy.
type LookupIapWebTypeAppEngineIamPolicyArgs struct {
	AppId   string  `pulumi:"appId"`
	Id      *string `pulumi:"id"`
	Project *string `pulumi:"project"`
}

// A collection of values returned by getIapWebTypeAppEngineIamPolicy.
type LookupIapWebTypeAppEngineIamPolicyResult struct {
	AppId      string `pulumi:"appId"`
	Etag       string `pulumi:"etag"`
	Id         string `pulumi:"id"`
	PolicyData string `pulumi:"policyData"`
	Project    string `pulumi:"project"`
}

func LookupIapWebTypeAppEngineIamPolicyOutput(ctx *pulumi.Context, args LookupIapWebTypeAppEngineIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupIapWebTypeAppEngineIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIapWebTypeAppEngineIamPolicyResultOutput, error) {
			args := v.(LookupIapWebTypeAppEngineIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupIapWebTypeAppEngineIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getIapWebTypeAppEngineIamPolicy:getIapWebTypeAppEngineIamPolicy", args, LookupIapWebTypeAppEngineIamPolicyResultOutput{}, options).(LookupIapWebTypeAppEngineIamPolicyResultOutput), nil
		}).(LookupIapWebTypeAppEngineIamPolicyResultOutput)
}

// A collection of arguments for invoking getIapWebTypeAppEngineIamPolicy.
type LookupIapWebTypeAppEngineIamPolicyOutputArgs struct {
	AppId   pulumi.StringInput    `pulumi:"appId"`
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupIapWebTypeAppEngineIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIapWebTypeAppEngineIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getIapWebTypeAppEngineIamPolicy.
type LookupIapWebTypeAppEngineIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupIapWebTypeAppEngineIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIapWebTypeAppEngineIamPolicyResult)(nil)).Elem()
}

func (o LookupIapWebTypeAppEngineIamPolicyResultOutput) ToLookupIapWebTypeAppEngineIamPolicyResultOutput() LookupIapWebTypeAppEngineIamPolicyResultOutput {
	return o
}

func (o LookupIapWebTypeAppEngineIamPolicyResultOutput) ToLookupIapWebTypeAppEngineIamPolicyResultOutputWithContext(ctx context.Context) LookupIapWebTypeAppEngineIamPolicyResultOutput {
	return o
}

func (o LookupIapWebTypeAppEngineIamPolicyResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIapWebTypeAppEngineIamPolicyResult) string { return v.AppId }).(pulumi.StringOutput)
}

func (o LookupIapWebTypeAppEngineIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIapWebTypeAppEngineIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupIapWebTypeAppEngineIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIapWebTypeAppEngineIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIapWebTypeAppEngineIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIapWebTypeAppEngineIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func (o LookupIapWebTypeAppEngineIamPolicyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIapWebTypeAppEngineIamPolicyResult) string { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIapWebTypeAppEngineIamPolicyResultOutput{})
}
