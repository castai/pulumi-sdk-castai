// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataplexZoneIamBinding struct {
	pulumi.CustomResourceState

	Condition                DataplexZoneIamBindingConditionPtrOutput `pulumi:"condition"`
	DataplexZone             pulumi.StringOutput                      `pulumi:"dataplexZone"`
	DataplexZoneIamBindingId pulumi.StringOutput                      `pulumi:"dataplexZoneIamBindingId"`
	Etag                     pulumi.StringOutput                      `pulumi:"etag"`
	Lake                     pulumi.StringOutput                      `pulumi:"lake"`
	Location                 pulumi.StringOutput                      `pulumi:"location"`
	Members                  pulumi.StringArrayOutput                 `pulumi:"members"`
	Project                  pulumi.StringOutput                      `pulumi:"project"`
	Role                     pulumi.StringOutput                      `pulumi:"role"`
}

// NewDataplexZoneIamBinding registers a new resource with the given unique name, arguments, and options.
func NewDataplexZoneIamBinding(ctx *pulumi.Context,
	name string, args *DataplexZoneIamBindingArgs, opts ...pulumi.ResourceOption) (*DataplexZoneIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataplexZone == nil {
		return nil, errors.New("invalid value for required argument 'DataplexZone'")
	}
	if args.Lake == nil {
		return nil, errors.New("invalid value for required argument 'Lake'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataplexZoneIamBinding
	err = ctx.RegisterPackageResource("google:index/dataplexZoneIamBinding:DataplexZoneIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataplexZoneIamBinding gets an existing DataplexZoneIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataplexZoneIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataplexZoneIamBindingState, opts ...pulumi.ResourceOption) (*DataplexZoneIamBinding, error) {
	var resource DataplexZoneIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataplexZoneIamBinding:DataplexZoneIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataplexZoneIamBinding resources.
type dataplexZoneIamBindingState struct {
	Condition                *DataplexZoneIamBindingCondition `pulumi:"condition"`
	DataplexZone             *string                          `pulumi:"dataplexZone"`
	DataplexZoneIamBindingId *string                          `pulumi:"dataplexZoneIamBindingId"`
	Etag                     *string                          `pulumi:"etag"`
	Lake                     *string                          `pulumi:"lake"`
	Location                 *string                          `pulumi:"location"`
	Members                  []string                         `pulumi:"members"`
	Project                  *string                          `pulumi:"project"`
	Role                     *string                          `pulumi:"role"`
}

type DataplexZoneIamBindingState struct {
	Condition                DataplexZoneIamBindingConditionPtrInput
	DataplexZone             pulumi.StringPtrInput
	DataplexZoneIamBindingId pulumi.StringPtrInput
	Etag                     pulumi.StringPtrInput
	Lake                     pulumi.StringPtrInput
	Location                 pulumi.StringPtrInput
	Members                  pulumi.StringArrayInput
	Project                  pulumi.StringPtrInput
	Role                     pulumi.StringPtrInput
}

func (DataplexZoneIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexZoneIamBindingState)(nil)).Elem()
}

type dataplexZoneIamBindingArgs struct {
	Condition                *DataplexZoneIamBindingCondition `pulumi:"condition"`
	DataplexZone             string                           `pulumi:"dataplexZone"`
	DataplexZoneIamBindingId *string                          `pulumi:"dataplexZoneIamBindingId"`
	Lake                     string                           `pulumi:"lake"`
	Location                 *string                          `pulumi:"location"`
	Members                  []string                         `pulumi:"members"`
	Project                  *string                          `pulumi:"project"`
	Role                     string                           `pulumi:"role"`
}

// The set of arguments for constructing a DataplexZoneIamBinding resource.
type DataplexZoneIamBindingArgs struct {
	Condition                DataplexZoneIamBindingConditionPtrInput
	DataplexZone             pulumi.StringInput
	DataplexZoneIamBindingId pulumi.StringPtrInput
	Lake                     pulumi.StringInput
	Location                 pulumi.StringPtrInput
	Members                  pulumi.StringArrayInput
	Project                  pulumi.StringPtrInput
	Role                     pulumi.StringInput
}

func (DataplexZoneIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataplexZoneIamBindingArgs)(nil)).Elem()
}

type DataplexZoneIamBindingInput interface {
	pulumi.Input

	ToDataplexZoneIamBindingOutput() DataplexZoneIamBindingOutput
	ToDataplexZoneIamBindingOutputWithContext(ctx context.Context) DataplexZoneIamBindingOutput
}

func (*DataplexZoneIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexZoneIamBinding)(nil)).Elem()
}

func (i *DataplexZoneIamBinding) ToDataplexZoneIamBindingOutput() DataplexZoneIamBindingOutput {
	return i.ToDataplexZoneIamBindingOutputWithContext(context.Background())
}

func (i *DataplexZoneIamBinding) ToDataplexZoneIamBindingOutputWithContext(ctx context.Context) DataplexZoneIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataplexZoneIamBindingOutput)
}

type DataplexZoneIamBindingOutput struct{ *pulumi.OutputState }

func (DataplexZoneIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataplexZoneIamBinding)(nil)).Elem()
}

func (o DataplexZoneIamBindingOutput) ToDataplexZoneIamBindingOutput() DataplexZoneIamBindingOutput {
	return o
}

func (o DataplexZoneIamBindingOutput) ToDataplexZoneIamBindingOutputWithContext(ctx context.Context) DataplexZoneIamBindingOutput {
	return o
}

func (o DataplexZoneIamBindingOutput) Condition() DataplexZoneIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *DataplexZoneIamBinding) DataplexZoneIamBindingConditionPtrOutput { return v.Condition }).(DataplexZoneIamBindingConditionPtrOutput)
}

func (o DataplexZoneIamBindingOutput) DataplexZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamBinding) pulumi.StringOutput { return v.DataplexZone }).(pulumi.StringOutput)
}

func (o DataplexZoneIamBindingOutput) DataplexZoneIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamBinding) pulumi.StringOutput { return v.DataplexZoneIamBindingId }).(pulumi.StringOutput)
}

func (o DataplexZoneIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataplexZoneIamBindingOutput) Lake() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamBinding) pulumi.StringOutput { return v.Lake }).(pulumi.StringOutput)
}

func (o DataplexZoneIamBindingOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamBinding) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o DataplexZoneIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataplexZoneIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o DataplexZoneIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataplexZoneIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *DataplexZoneIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataplexZoneIamBindingInput)(nil)).Elem(), &DataplexZoneIamBinding{})
	pulumi.RegisterOutputType(DataplexZoneIamBindingOutput{})
}
