// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupHealthcareFhirStoreIamPolicy(ctx *pulumi.Context, args *LookupHealthcareFhirStoreIamPolicyArgs, opts ...pulumi.InvokeOption) (*LookupHealthcareFhirStoreIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupHealthcareFhirStoreIamPolicyResult
	err = ctx.InvokePackage("google:index/getHealthcareFhirStoreIamPolicy:getHealthcareFhirStoreIamPolicy", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHealthcareFhirStoreIamPolicy.
type LookupHealthcareFhirStoreIamPolicyArgs struct {
	FhirStoreId string  `pulumi:"fhirStoreId"`
	Id          *string `pulumi:"id"`
}

// A collection of values returned by getHealthcareFhirStoreIamPolicy.
type LookupHealthcareFhirStoreIamPolicyResult struct {
	Etag        string `pulumi:"etag"`
	FhirStoreId string `pulumi:"fhirStoreId"`
	Id          string `pulumi:"id"`
	PolicyData  string `pulumi:"policyData"`
}

func LookupHealthcareFhirStoreIamPolicyOutput(ctx *pulumi.Context, args LookupHealthcareFhirStoreIamPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupHealthcareFhirStoreIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupHealthcareFhirStoreIamPolicyResultOutput, error) {
			args := v.(LookupHealthcareFhirStoreIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupHealthcareFhirStoreIamPolicyResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getHealthcareFhirStoreIamPolicy:getHealthcareFhirStoreIamPolicy", args, LookupHealthcareFhirStoreIamPolicyResultOutput{}, options).(LookupHealthcareFhirStoreIamPolicyResultOutput), nil
		}).(LookupHealthcareFhirStoreIamPolicyResultOutput)
}

// A collection of arguments for invoking getHealthcareFhirStoreIamPolicy.
type LookupHealthcareFhirStoreIamPolicyOutputArgs struct {
	FhirStoreId pulumi.StringInput    `pulumi:"fhirStoreId"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
}

func (LookupHealthcareFhirStoreIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHealthcareFhirStoreIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getHealthcareFhirStoreIamPolicy.
type LookupHealthcareFhirStoreIamPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupHealthcareFhirStoreIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupHealthcareFhirStoreIamPolicyResult)(nil)).Elem()
}

func (o LookupHealthcareFhirStoreIamPolicyResultOutput) ToLookupHealthcareFhirStoreIamPolicyResultOutput() LookupHealthcareFhirStoreIamPolicyResultOutput {
	return o
}

func (o LookupHealthcareFhirStoreIamPolicyResultOutput) ToLookupHealthcareFhirStoreIamPolicyResultOutputWithContext(ctx context.Context) LookupHealthcareFhirStoreIamPolicyResultOutput {
	return o
}

func (o LookupHealthcareFhirStoreIamPolicyResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthcareFhirStoreIamPolicyResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupHealthcareFhirStoreIamPolicyResultOutput) FhirStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthcareFhirStoreIamPolicyResult) string { return v.FhirStoreId }).(pulumi.StringOutput)
}

func (o LookupHealthcareFhirStoreIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthcareFhirStoreIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupHealthcareFhirStoreIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupHealthcareFhirStoreIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupHealthcareFhirStoreIamPolicyResultOutput{})
}
