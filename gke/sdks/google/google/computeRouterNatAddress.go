// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeRouterNatAddress struct {
	pulumi.CustomResourceState

	ComputeRouterNatAddressId pulumi.StringOutput `pulumi:"computeRouterNatAddressId"`
	// A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to
	// the NAT.
	DrainNatIps pulumi.StringArrayOutput `pulumi:"drainNatIps"`
	// Self-links of NAT IPs to be used in a Nat service. Only valid if the referenced RouterNat natIpAllocateOption is set to
	// MANUAL_ONLY.
	NatIps  pulumi.StringArrayOutput `pulumi:"natIps"`
	Project pulumi.StringOutput      `pulumi:"project"`
	// Region where the NAT service reside.
	Region pulumi.StringOutput `pulumi:"region"`
	// The name of the Cloud Router in which the referenced NAT service is configured.
	Router pulumi.StringOutput `pulumi:"router"`
	// The name of the Nat service in which this address will be configured.
	RouterNat pulumi.StringOutput                      `pulumi:"routerNat"`
	Timeouts  ComputeRouterNatAddressTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewComputeRouterNatAddress registers a new resource with the given unique name, arguments, and options.
func NewComputeRouterNatAddress(ctx *pulumi.Context,
	name string, args *ComputeRouterNatAddressArgs, opts ...pulumi.ResourceOption) (*ComputeRouterNatAddress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NatIps == nil {
		return nil, errors.New("invalid value for required argument 'NatIps'")
	}
	if args.Router == nil {
		return nil, errors.New("invalid value for required argument 'Router'")
	}
	if args.RouterNat == nil {
		return nil, errors.New("invalid value for required argument 'RouterNat'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeRouterNatAddress
	err = ctx.RegisterPackageResource("google:index/computeRouterNatAddress:ComputeRouterNatAddress", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeRouterNatAddress gets an existing ComputeRouterNatAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeRouterNatAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeRouterNatAddressState, opts ...pulumi.ResourceOption) (*ComputeRouterNatAddress, error) {
	var resource ComputeRouterNatAddress
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeRouterNatAddress:ComputeRouterNatAddress", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeRouterNatAddress resources.
type computeRouterNatAddressState struct {
	ComputeRouterNatAddressId *string `pulumi:"computeRouterNatAddressId"`
	// A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to
	// the NAT.
	DrainNatIps []string `pulumi:"drainNatIps"`
	// Self-links of NAT IPs to be used in a Nat service. Only valid if the referenced RouterNat natIpAllocateOption is set to
	// MANUAL_ONLY.
	NatIps  []string `pulumi:"natIps"`
	Project *string  `pulumi:"project"`
	// Region where the NAT service reside.
	Region *string `pulumi:"region"`
	// The name of the Cloud Router in which the referenced NAT service is configured.
	Router *string `pulumi:"router"`
	// The name of the Nat service in which this address will be configured.
	RouterNat *string                          `pulumi:"routerNat"`
	Timeouts  *ComputeRouterNatAddressTimeouts `pulumi:"timeouts"`
}

type ComputeRouterNatAddressState struct {
	ComputeRouterNatAddressId pulumi.StringPtrInput
	// A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to
	// the NAT.
	DrainNatIps pulumi.StringArrayInput
	// Self-links of NAT IPs to be used in a Nat service. Only valid if the referenced RouterNat natIpAllocateOption is set to
	// MANUAL_ONLY.
	NatIps  pulumi.StringArrayInput
	Project pulumi.StringPtrInput
	// Region where the NAT service reside.
	Region pulumi.StringPtrInput
	// The name of the Cloud Router in which the referenced NAT service is configured.
	Router pulumi.StringPtrInput
	// The name of the Nat service in which this address will be configured.
	RouterNat pulumi.StringPtrInput
	Timeouts  ComputeRouterNatAddressTimeoutsPtrInput
}

func (ComputeRouterNatAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRouterNatAddressState)(nil)).Elem()
}

type computeRouterNatAddressArgs struct {
	ComputeRouterNatAddressId *string `pulumi:"computeRouterNatAddressId"`
	// A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to
	// the NAT.
	DrainNatIps []string `pulumi:"drainNatIps"`
	// Self-links of NAT IPs to be used in a Nat service. Only valid if the referenced RouterNat natIpAllocateOption is set to
	// MANUAL_ONLY.
	NatIps  []string `pulumi:"natIps"`
	Project *string  `pulumi:"project"`
	// Region where the NAT service reside.
	Region *string `pulumi:"region"`
	// The name of the Cloud Router in which the referenced NAT service is configured.
	Router string `pulumi:"router"`
	// The name of the Nat service in which this address will be configured.
	RouterNat string                           `pulumi:"routerNat"`
	Timeouts  *ComputeRouterNatAddressTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ComputeRouterNatAddress resource.
type ComputeRouterNatAddressArgs struct {
	ComputeRouterNatAddressId pulumi.StringPtrInput
	// A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to
	// the NAT.
	DrainNatIps pulumi.StringArrayInput
	// Self-links of NAT IPs to be used in a Nat service. Only valid if the referenced RouterNat natIpAllocateOption is set to
	// MANUAL_ONLY.
	NatIps  pulumi.StringArrayInput
	Project pulumi.StringPtrInput
	// Region where the NAT service reside.
	Region pulumi.StringPtrInput
	// The name of the Cloud Router in which the referenced NAT service is configured.
	Router pulumi.StringInput
	// The name of the Nat service in which this address will be configured.
	RouterNat pulumi.StringInput
	Timeouts  ComputeRouterNatAddressTimeoutsPtrInput
}

func (ComputeRouterNatAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeRouterNatAddressArgs)(nil)).Elem()
}

type ComputeRouterNatAddressInput interface {
	pulumi.Input

	ToComputeRouterNatAddressOutput() ComputeRouterNatAddressOutput
	ToComputeRouterNatAddressOutputWithContext(ctx context.Context) ComputeRouterNatAddressOutput
}

func (*ComputeRouterNatAddress) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRouterNatAddress)(nil)).Elem()
}

func (i *ComputeRouterNatAddress) ToComputeRouterNatAddressOutput() ComputeRouterNatAddressOutput {
	return i.ToComputeRouterNatAddressOutputWithContext(context.Background())
}

func (i *ComputeRouterNatAddress) ToComputeRouterNatAddressOutputWithContext(ctx context.Context) ComputeRouterNatAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeRouterNatAddressOutput)
}

type ComputeRouterNatAddressOutput struct{ *pulumi.OutputState }

func (ComputeRouterNatAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeRouterNatAddress)(nil)).Elem()
}

func (o ComputeRouterNatAddressOutput) ToComputeRouterNatAddressOutput() ComputeRouterNatAddressOutput {
	return o
}

func (o ComputeRouterNatAddressOutput) ToComputeRouterNatAddressOutputWithContext(ctx context.Context) ComputeRouterNatAddressOutput {
	return o
}

func (o ComputeRouterNatAddressOutput) ComputeRouterNatAddressId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterNatAddress) pulumi.StringOutput { return v.ComputeRouterNatAddressId }).(pulumi.StringOutput)
}

// A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to
// the NAT.
func (o ComputeRouterNatAddressOutput) DrainNatIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeRouterNatAddress) pulumi.StringArrayOutput { return v.DrainNatIps }).(pulumi.StringArrayOutput)
}

// Self-links of NAT IPs to be used in a Nat service. Only valid if the referenced RouterNat natIpAllocateOption is set to
// MANUAL_ONLY.
func (o ComputeRouterNatAddressOutput) NatIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeRouterNatAddress) pulumi.StringArrayOutput { return v.NatIps }).(pulumi.StringArrayOutput)
}

func (o ComputeRouterNatAddressOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterNatAddress) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Region where the NAT service reside.
func (o ComputeRouterNatAddressOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterNatAddress) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The name of the Cloud Router in which the referenced NAT service is configured.
func (o ComputeRouterNatAddressOutput) Router() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterNatAddress) pulumi.StringOutput { return v.Router }).(pulumi.StringOutput)
}

// The name of the Nat service in which this address will be configured.
func (o ComputeRouterNatAddressOutput) RouterNat() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeRouterNatAddress) pulumi.StringOutput { return v.RouterNat }).(pulumi.StringOutput)
}

func (o ComputeRouterNatAddressOutput) Timeouts() ComputeRouterNatAddressTimeoutsPtrOutput {
	return o.ApplyT(func(v *ComputeRouterNatAddress) ComputeRouterNatAddressTimeoutsPtrOutput { return v.Timeouts }).(ComputeRouterNatAddressTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeRouterNatAddressInput)(nil)).Elem(), &ComputeRouterNatAddress{})
	pulumi.RegisterOutputType(ComputeRouterNatAddressOutput{})
}
