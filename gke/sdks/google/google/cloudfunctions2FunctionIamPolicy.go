// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Cloudfunctions2FunctionIamPolicy struct {
	pulumi.CustomResourceState

	CloudFunction                      pulumi.StringOutput `pulumi:"cloudFunction"`
	Cloudfunctions2FunctionIamPolicyId pulumi.StringOutput `pulumi:"cloudfunctions2FunctionIamPolicyId"`
	Etag                               pulumi.StringOutput `pulumi:"etag"`
	Location                           pulumi.StringOutput `pulumi:"location"`
	PolicyData                         pulumi.StringOutput `pulumi:"policyData"`
	Project                            pulumi.StringOutput `pulumi:"project"`
}

// NewCloudfunctions2FunctionIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewCloudfunctions2FunctionIamPolicy(ctx *pulumi.Context,
	name string, args *Cloudfunctions2FunctionIamPolicyArgs, opts ...pulumi.ResourceOption) (*Cloudfunctions2FunctionIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudFunction == nil {
		return nil, errors.New("invalid value for required argument 'CloudFunction'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource Cloudfunctions2FunctionIamPolicy
	err = ctx.RegisterPackageResource("google:index/cloudfunctions2FunctionIamPolicy:Cloudfunctions2FunctionIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudfunctions2FunctionIamPolicy gets an existing Cloudfunctions2FunctionIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudfunctions2FunctionIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Cloudfunctions2FunctionIamPolicyState, opts ...pulumi.ResourceOption) (*Cloudfunctions2FunctionIamPolicy, error) {
	var resource Cloudfunctions2FunctionIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/cloudfunctions2FunctionIamPolicy:Cloudfunctions2FunctionIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cloudfunctions2FunctionIamPolicy resources.
type cloudfunctions2FunctionIamPolicyState struct {
	CloudFunction                      *string `pulumi:"cloudFunction"`
	Cloudfunctions2FunctionIamPolicyId *string `pulumi:"cloudfunctions2FunctionIamPolicyId"`
	Etag                               *string `pulumi:"etag"`
	Location                           *string `pulumi:"location"`
	PolicyData                         *string `pulumi:"policyData"`
	Project                            *string `pulumi:"project"`
}

type Cloudfunctions2FunctionIamPolicyState struct {
	CloudFunction                      pulumi.StringPtrInput
	Cloudfunctions2FunctionIamPolicyId pulumi.StringPtrInput
	Etag                               pulumi.StringPtrInput
	Location                           pulumi.StringPtrInput
	PolicyData                         pulumi.StringPtrInput
	Project                            pulumi.StringPtrInput
}

func (Cloudfunctions2FunctionIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfunctions2FunctionIamPolicyState)(nil)).Elem()
}

type cloudfunctions2FunctionIamPolicyArgs struct {
	CloudFunction                      string  `pulumi:"cloudFunction"`
	Cloudfunctions2FunctionIamPolicyId *string `pulumi:"cloudfunctions2FunctionIamPolicyId"`
	Location                           *string `pulumi:"location"`
	PolicyData                         string  `pulumi:"policyData"`
	Project                            *string `pulumi:"project"`
}

// The set of arguments for constructing a Cloudfunctions2FunctionIamPolicy resource.
type Cloudfunctions2FunctionIamPolicyArgs struct {
	CloudFunction                      pulumi.StringInput
	Cloudfunctions2FunctionIamPolicyId pulumi.StringPtrInput
	Location                           pulumi.StringPtrInput
	PolicyData                         pulumi.StringInput
	Project                            pulumi.StringPtrInput
}

func (Cloudfunctions2FunctionIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfunctions2FunctionIamPolicyArgs)(nil)).Elem()
}

type Cloudfunctions2FunctionIamPolicyInput interface {
	pulumi.Input

	ToCloudfunctions2FunctionIamPolicyOutput() Cloudfunctions2FunctionIamPolicyOutput
	ToCloudfunctions2FunctionIamPolicyOutputWithContext(ctx context.Context) Cloudfunctions2FunctionIamPolicyOutput
}

func (*Cloudfunctions2FunctionIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**Cloudfunctions2FunctionIamPolicy)(nil)).Elem()
}

func (i *Cloudfunctions2FunctionIamPolicy) ToCloudfunctions2FunctionIamPolicyOutput() Cloudfunctions2FunctionIamPolicyOutput {
	return i.ToCloudfunctions2FunctionIamPolicyOutputWithContext(context.Background())
}

func (i *Cloudfunctions2FunctionIamPolicy) ToCloudfunctions2FunctionIamPolicyOutputWithContext(ctx context.Context) Cloudfunctions2FunctionIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Cloudfunctions2FunctionIamPolicyOutput)
}

type Cloudfunctions2FunctionIamPolicyOutput struct{ *pulumi.OutputState }

func (Cloudfunctions2FunctionIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cloudfunctions2FunctionIamPolicy)(nil)).Elem()
}

func (o Cloudfunctions2FunctionIamPolicyOutput) ToCloudfunctions2FunctionIamPolicyOutput() Cloudfunctions2FunctionIamPolicyOutput {
	return o
}

func (o Cloudfunctions2FunctionIamPolicyOutput) ToCloudfunctions2FunctionIamPolicyOutputWithContext(ctx context.Context) Cloudfunctions2FunctionIamPolicyOutput {
	return o
}

func (o Cloudfunctions2FunctionIamPolicyOutput) CloudFunction() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudfunctions2FunctionIamPolicy) pulumi.StringOutput { return v.CloudFunction }).(pulumi.StringOutput)
}

func (o Cloudfunctions2FunctionIamPolicyOutput) Cloudfunctions2FunctionIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudfunctions2FunctionIamPolicy) pulumi.StringOutput {
		return v.Cloudfunctions2FunctionIamPolicyId
	}).(pulumi.StringOutput)
}

func (o Cloudfunctions2FunctionIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudfunctions2FunctionIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o Cloudfunctions2FunctionIamPolicyOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudfunctions2FunctionIamPolicy) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

func (o Cloudfunctions2FunctionIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudfunctions2FunctionIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o Cloudfunctions2FunctionIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Cloudfunctions2FunctionIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Cloudfunctions2FunctionIamPolicyInput)(nil)).Elem(), &Cloudfunctions2FunctionIamPolicy{})
	pulumi.RegisterOutputType(Cloudfunctions2FunctionIamPolicyOutput{})
}
