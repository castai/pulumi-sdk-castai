// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMonitoringNotificationChannel(ctx *pulumi.Context, args *LookupMonitoringNotificationChannelArgs, opts ...pulumi.InvokeOption) (*LookupMonitoringNotificationChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupMonitoringNotificationChannelResult
	err = ctx.InvokePackage("google:index/getMonitoringNotificationChannel:getMonitoringNotificationChannel", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitoringNotificationChannel.
type LookupMonitoringNotificationChannelArgs struct {
	DisplayName *string           `pulumi:"displayName"`
	Id          *string           `pulumi:"id"`
	Labels      map[string]string `pulumi:"labels"`
	Project     *string           `pulumi:"project"`
	Type        *string           `pulumi:"type"`
	UserLabels  map[string]string `pulumi:"userLabels"`
}

// A collection of values returned by getMonitoringNotificationChannel.
type LookupMonitoringNotificationChannelResult struct {
	Description        string                                           `pulumi:"description"`
	DisplayName        *string                                          `pulumi:"displayName"`
	Enabled            bool                                             `pulumi:"enabled"`
	ForceDelete        bool                                             `pulumi:"forceDelete"`
	Id                 string                                           `pulumi:"id"`
	Labels             map[string]string                                `pulumi:"labels"`
	Name               string                                           `pulumi:"name"`
	Project            *string                                          `pulumi:"project"`
	SensitiveLabels    []GetMonitoringNotificationChannelSensitiveLabel `pulumi:"sensitiveLabels"`
	Type               *string                                          `pulumi:"type"`
	UserLabels         map[string]string                                `pulumi:"userLabels"`
	VerificationStatus string                                           `pulumi:"verificationStatus"`
}

func LookupMonitoringNotificationChannelOutput(ctx *pulumi.Context, args LookupMonitoringNotificationChannelOutputArgs, opts ...pulumi.InvokeOption) LookupMonitoringNotificationChannelResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMonitoringNotificationChannelResultOutput, error) {
			args := v.(LookupMonitoringNotificationChannelArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupMonitoringNotificationChannelResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getMonitoringNotificationChannel:getMonitoringNotificationChannel", args, LookupMonitoringNotificationChannelResultOutput{}, options).(LookupMonitoringNotificationChannelResultOutput), nil
		}).(LookupMonitoringNotificationChannelResultOutput)
}

// A collection of arguments for invoking getMonitoringNotificationChannel.
type LookupMonitoringNotificationChannelOutputArgs struct {
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Labels      pulumi.StringMapInput `pulumi:"labels"`
	Project     pulumi.StringPtrInput `pulumi:"project"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
	UserLabels  pulumi.StringMapInput `pulumi:"userLabels"`
}

func (LookupMonitoringNotificationChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoringNotificationChannelArgs)(nil)).Elem()
}

// A collection of values returned by getMonitoringNotificationChannel.
type LookupMonitoringNotificationChannelResultOutput struct{ *pulumi.OutputState }

func (LookupMonitoringNotificationChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitoringNotificationChannelResult)(nil)).Elem()
}

func (o LookupMonitoringNotificationChannelResultOutput) ToLookupMonitoringNotificationChannelResultOutput() LookupMonitoringNotificationChannelResultOutput {
	return o
}

func (o LookupMonitoringNotificationChannelResultOutput) ToLookupMonitoringNotificationChannelResultOutputWithContext(ctx context.Context) LookupMonitoringNotificationChannelResultOutput {
	return o
}

func (o LookupMonitoringNotificationChannelResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) ForceDelete() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) bool { return v.ForceDelete }).(pulumi.BoolOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) SensitiveLabels() GetMonitoringNotificationChannelSensitiveLabelArrayOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) []GetMonitoringNotificationChannelSensitiveLabel {
		return v.SensitiveLabels
	}).(GetMonitoringNotificationChannelSensitiveLabelArrayOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) UserLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) map[string]string { return v.UserLabels }).(pulumi.StringMapOutput)
}

func (o LookupMonitoringNotificationChannelResultOutput) VerificationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitoringNotificationChannelResult) string { return v.VerificationStatus }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMonitoringNotificationChannelResultOutput{})
}
