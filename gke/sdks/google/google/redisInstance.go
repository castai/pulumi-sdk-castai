// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RedisInstance struct {
	pulumi.CustomResourceState

	// Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two
	// zones. If provided, it must be a different zone from the one provided in [locationId].
	AlternativeLocationId pulumi.StringOutput `pulumi:"alternativeLocationId"`
	// Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the
	// instance. Default value is "false" meaning AUTH is disabled.
	AuthEnabled pulumi.BoolPtrOutput `pulumi:"authEnabled"`
	// AUTH String set on the instance. This field will only be populated if auth_enabled is true.
	AuthString pulumi.StringOutput `pulumi:"authString"`
	// The full name of the Google Compute Engine network to which the instance is connected. If left unspecified, the default
	// network will be used.
	AuthorizedNetwork pulumi.StringOutput `pulumi:"authorizedNetwork"`
	// The connection mode of the Redis instance. Default value: "DIRECT_PEERING" Possible values: ["DIRECT_PEERING",
	// "PRIVATE_SERVICE_ACCESS"]
	ConnectMode pulumi.StringPtrOutput `pulumi:"connectMode"`
	// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The current zone where the Redis endpoint is placed. For Basic Tier instances, this will always be the same as the
	// [locationId] provided by the user at creation time. For Standard Tier instances, this can be either [locationId] or
	// [alternativeLocationId] and can change after a failover event.
	CurrentLocationId pulumi.StringOutput `pulumi:"currentLocationId"`
	// Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis instance. If this is
	// provided, CMEK is enabled.
	CustomerManagedKey pulumi.StringPtrOutput `pulumi:"customerManagedKey"`
	// An arbitrary and optional user-provided name for the instance.
	DisplayName     pulumi.StringPtrOutput `pulumi:"displayName"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
	Host pulumi.StringOutput `pulumi:"host"`
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For
	// STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If
	// [alternativeLocationId] is also provided, it must be different from [locationId].
	LocationId pulumi.StringOutput `pulumi:"locationId"`
	// Maintenance policy for an instance.
	MaintenancePolicy RedisInstanceMaintenancePolicyPtrOutput `pulumi:"maintenancePolicy"`
	// Upcoming maintenance schedule.
	MaintenanceSchedules RedisInstanceMaintenanceScheduleArrayOutput `pulumi:"maintenanceSchedules"`
	// The self service update maintenance version.
	MaintenanceVersion pulumi.StringOutput `pulumi:"maintenanceVersion"`
	// Redis memory size in GiB.
	MemorySizeGb pulumi.Float64Output `pulumi:"memorySizeGb"`
	// The ID of the instance or a fully qualified identifier for the instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// Output only. Info per node.
	Nodes RedisInstanceNodeArrayOutput `pulumi:"nodes"`
	// Persistence configuration for an instance.
	PersistenceConfig RedisInstancePersistenceConfigPtrOutput `pulumi:"persistenceConfig"`
	// Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is
	// "serviceAccount:". The value may change over time for a given instance so should be checked before each import/export
	// operation.
	PersistenceIamIdentity pulumi.StringOutput `pulumi:"persistenceIamIdentity"`
	// The port number of the exposed Redis endpoint.
	Port    pulumi.Float64Output `pulumi:"port"`
	Project pulumi.StringOutput  `pulumi:"project"`
	// Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy
	// replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write
	// requests must target 'host'.
	ReadEndpoint pulumi.StringOutput `pulumi:"readEndpoint"`
	// Output only. The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target
	// 'port'.
	ReadEndpointPort pulumi.Float64Output `pulumi:"readEndpointPort"`
	// Optional. Read replica mode. Can only be specified when trying to create the instance. If not set, Memorystore Redis
	// backend will default to READ_REPLICAS_DISABLED. - READ_REPLICAS_DISABLED: If disabled, read endpoint will not be
	// provided and the instance cannot scale up or down the number of replicas. - READ_REPLICAS_ENABLED: If enabled, read
	// endpoint will be provided and the instance can scale up and down the number of replicas. Possible values:
	// ["READ_REPLICAS_DISABLED", "READ_REPLICAS_ENABLED"]
	ReadReplicasMode pulumi.StringOutput `pulumi:"readReplicasMode"`
	// Redis configuration parameters, according to http://redis.io/topics/config. Please check Memorystore documentation for
	// the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
	RedisConfigs    pulumi.StringMapOutput `pulumi:"redisConfigs"`
	RedisInstanceId pulumi.StringOutput    `pulumi:"redisInstanceId"`
	// The version of Redis software. If not provided, latest supported version will be used. Please check the API
	// documentation linked at the top for the latest valid values.
	RedisVersion pulumi.StringOutput `pulumi:"redisVersion"`
	// The name of the Redis region of the instance.
	Region pulumi.StringOutput `pulumi:"region"`
	// Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and
	// defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default
	// is 1. The valid value for basic tier is 0 and the default is also 0.
	ReplicaCount pulumi.Float64Output `pulumi:"replicaCount"`
	// The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an
	// unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing
	// subnets in an authorized network.
	ReservedIpRange pulumi.StringOutput `pulumi:"reservedIpRange"`
	// Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For
	// DIRECT_PEERING mode value must be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode value must be the
	// name of an allocated address range associated with the private service access connection, or "auto".
	SecondaryIpRange pulumi.StringOutput `pulumi:"secondaryIpRange"`
	// List of server CA certificates for the instance.
	ServerCaCerts RedisInstanceServerCaCertArrayOutput `pulumi:"serverCaCerts"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput `pulumi:"terraformLabels"`
	// The service tier of the instance. Must be one of these values: - BASIC: standalone instance - STANDARD_HA: highly
	// available primary/replica instances Default value: "BASIC" Possible values: ["BASIC", "STANDARD_HA"]
	Tier     pulumi.StringPtrOutput         `pulumi:"tier"`
	Timeouts RedisInstanceTimeoutsPtrOutput `pulumi:"timeouts"`
	// The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance. - SERVER_AUTHENTICATION: Client
	// to Server traffic encryption enabled with server authentication Default value: "DISABLED" Possible values:
	// ["SERVER_AUTHENTICATION", "DISABLED"]
	TransitEncryptionMode pulumi.StringPtrOutput `pulumi:"transitEncryptionMode"`
}

// NewRedisInstance registers a new resource with the given unique name, arguments, and options.
func NewRedisInstance(ctx *pulumi.Context,
	name string, args *RedisInstanceArgs, opts ...pulumi.ResourceOption) (*RedisInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MemorySizeGb == nil {
		return nil, errors.New("invalid value for required argument 'MemorySizeGb'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"authString",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource RedisInstance
	err = ctx.RegisterPackageResource("google:index/redisInstance:RedisInstance", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRedisInstance gets an existing RedisInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRedisInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RedisInstanceState, opts ...pulumi.ResourceOption) (*RedisInstance, error) {
	var resource RedisInstance
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/redisInstance:RedisInstance", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RedisInstance resources.
type redisInstanceState struct {
	// Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two
	// zones. If provided, it must be a different zone from the one provided in [locationId].
	AlternativeLocationId *string `pulumi:"alternativeLocationId"`
	// Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the
	// instance. Default value is "false" meaning AUTH is disabled.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// AUTH String set on the instance. This field will only be populated if auth_enabled is true.
	AuthString *string `pulumi:"authString"`
	// The full name of the Google Compute Engine network to which the instance is connected. If left unspecified, the default
	// network will be used.
	AuthorizedNetwork *string `pulumi:"authorizedNetwork"`
	// The connection mode of the Redis instance. Default value: "DIRECT_PEERING" Possible values: ["DIRECT_PEERING",
	// "PRIVATE_SERVICE_ACCESS"]
	ConnectMode *string `pulumi:"connectMode"`
	// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	CreateTime *string `pulumi:"createTime"`
	// The current zone where the Redis endpoint is placed. For Basic Tier instances, this will always be the same as the
	// [locationId] provided by the user at creation time. For Standard Tier instances, this can be either [locationId] or
	// [alternativeLocationId] and can change after a failover event.
	CurrentLocationId *string `pulumi:"currentLocationId"`
	// Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis instance. If this is
	// provided, CMEK is enabled.
	CustomerManagedKey *string `pulumi:"customerManagedKey"`
	// An arbitrary and optional user-provided name for the instance.
	DisplayName     *string           `pulumi:"displayName"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
	Host *string `pulumi:"host"`
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For
	// STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If
	// [alternativeLocationId] is also provided, it must be different from [locationId].
	LocationId *string `pulumi:"locationId"`
	// Maintenance policy for an instance.
	MaintenancePolicy *RedisInstanceMaintenancePolicy `pulumi:"maintenancePolicy"`
	// Upcoming maintenance schedule.
	MaintenanceSchedules []RedisInstanceMaintenanceSchedule `pulumi:"maintenanceSchedules"`
	// The self service update maintenance version.
	MaintenanceVersion *string `pulumi:"maintenanceVersion"`
	// Redis memory size in GiB.
	MemorySizeGb *float64 `pulumi:"memorySizeGb"`
	// The ID of the instance or a fully qualified identifier for the instance.
	Name *string `pulumi:"name"`
	// Output only. Info per node.
	Nodes []RedisInstanceNode `pulumi:"nodes"`
	// Persistence configuration for an instance.
	PersistenceConfig *RedisInstancePersistenceConfig `pulumi:"persistenceConfig"`
	// Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is
	// "serviceAccount:". The value may change over time for a given instance so should be checked before each import/export
	// operation.
	PersistenceIamIdentity *string `pulumi:"persistenceIamIdentity"`
	// The port number of the exposed Redis endpoint.
	Port    *float64 `pulumi:"port"`
	Project *string  `pulumi:"project"`
	// Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy
	// replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write
	// requests must target 'host'.
	ReadEndpoint *string `pulumi:"readEndpoint"`
	// Output only. The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target
	// 'port'.
	ReadEndpointPort *float64 `pulumi:"readEndpointPort"`
	// Optional. Read replica mode. Can only be specified when trying to create the instance. If not set, Memorystore Redis
	// backend will default to READ_REPLICAS_DISABLED. - READ_REPLICAS_DISABLED: If disabled, read endpoint will not be
	// provided and the instance cannot scale up or down the number of replicas. - READ_REPLICAS_ENABLED: If enabled, read
	// endpoint will be provided and the instance can scale up and down the number of replicas. Possible values:
	// ["READ_REPLICAS_DISABLED", "READ_REPLICAS_ENABLED"]
	ReadReplicasMode *string `pulumi:"readReplicasMode"`
	// Redis configuration parameters, according to http://redis.io/topics/config. Please check Memorystore documentation for
	// the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
	RedisConfigs    map[string]string `pulumi:"redisConfigs"`
	RedisInstanceId *string           `pulumi:"redisInstanceId"`
	// The version of Redis software. If not provided, latest supported version will be used. Please check the API
	// documentation linked at the top for the latest valid values.
	RedisVersion *string `pulumi:"redisVersion"`
	// The name of the Redis region of the instance.
	Region *string `pulumi:"region"`
	// Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and
	// defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default
	// is 1. The valid value for basic tier is 0 and the default is also 0.
	ReplicaCount *float64 `pulumi:"replicaCount"`
	// The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an
	// unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing
	// subnets in an authorized network.
	ReservedIpRange *string `pulumi:"reservedIpRange"`
	// Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For
	// DIRECT_PEERING mode value must be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode value must be the
	// name of an allocated address range associated with the private service access connection, or "auto".
	SecondaryIpRange *string `pulumi:"secondaryIpRange"`
	// List of server CA certificates for the instance.
	ServerCaCerts []RedisInstanceServerCaCert `pulumi:"serverCaCerts"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string `pulumi:"terraformLabels"`
	// The service tier of the instance. Must be one of these values: - BASIC: standalone instance - STANDARD_HA: highly
	// available primary/replica instances Default value: "BASIC" Possible values: ["BASIC", "STANDARD_HA"]
	Tier     *string                `pulumi:"tier"`
	Timeouts *RedisInstanceTimeouts `pulumi:"timeouts"`
	// The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance. - SERVER_AUTHENTICATION: Client
	// to Server traffic encryption enabled with server authentication Default value: "DISABLED" Possible values:
	// ["SERVER_AUTHENTICATION", "DISABLED"]
	TransitEncryptionMode *string `pulumi:"transitEncryptionMode"`
}

type RedisInstanceState struct {
	// Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two
	// zones. If provided, it must be a different zone from the one provided in [locationId].
	AlternativeLocationId pulumi.StringPtrInput
	// Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the
	// instance. Default value is "false" meaning AUTH is disabled.
	AuthEnabled pulumi.BoolPtrInput
	// AUTH String set on the instance. This field will only be populated if auth_enabled is true.
	AuthString pulumi.StringPtrInput
	// The full name of the Google Compute Engine network to which the instance is connected. If left unspecified, the default
	// network will be used.
	AuthorizedNetwork pulumi.StringPtrInput
	// The connection mode of the Redis instance. Default value: "DIRECT_PEERING" Possible values: ["DIRECT_PEERING",
	// "PRIVATE_SERVICE_ACCESS"]
	ConnectMode pulumi.StringPtrInput
	// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
	CreateTime pulumi.StringPtrInput
	// The current zone where the Redis endpoint is placed. For Basic Tier instances, this will always be the same as the
	// [locationId] provided by the user at creation time. For Standard Tier instances, this can be either [locationId] or
	// [alternativeLocationId] and can change after a failover event.
	CurrentLocationId pulumi.StringPtrInput
	// Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis instance. If this is
	// provided, CMEK is enabled.
	CustomerManagedKey pulumi.StringPtrInput
	// An arbitrary and optional user-provided name for the instance.
	DisplayName     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
	Host pulumi.StringPtrInput
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For
	// STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If
	// [alternativeLocationId] is also provided, it must be different from [locationId].
	LocationId pulumi.StringPtrInput
	// Maintenance policy for an instance.
	MaintenancePolicy RedisInstanceMaintenancePolicyPtrInput
	// Upcoming maintenance schedule.
	MaintenanceSchedules RedisInstanceMaintenanceScheduleArrayInput
	// The self service update maintenance version.
	MaintenanceVersion pulumi.StringPtrInput
	// Redis memory size in GiB.
	MemorySizeGb pulumi.Float64PtrInput
	// The ID of the instance or a fully qualified identifier for the instance.
	Name pulumi.StringPtrInput
	// Output only. Info per node.
	Nodes RedisInstanceNodeArrayInput
	// Persistence configuration for an instance.
	PersistenceConfig RedisInstancePersistenceConfigPtrInput
	// Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is
	// "serviceAccount:". The value may change over time for a given instance so should be checked before each import/export
	// operation.
	PersistenceIamIdentity pulumi.StringPtrInput
	// The port number of the exposed Redis endpoint.
	Port    pulumi.Float64PtrInput
	Project pulumi.StringPtrInput
	// Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy
	// replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write
	// requests must target 'host'.
	ReadEndpoint pulumi.StringPtrInput
	// Output only. The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target
	// 'port'.
	ReadEndpointPort pulumi.Float64PtrInput
	// Optional. Read replica mode. Can only be specified when trying to create the instance. If not set, Memorystore Redis
	// backend will default to READ_REPLICAS_DISABLED. - READ_REPLICAS_DISABLED: If disabled, read endpoint will not be
	// provided and the instance cannot scale up or down the number of replicas. - READ_REPLICAS_ENABLED: If enabled, read
	// endpoint will be provided and the instance can scale up and down the number of replicas. Possible values:
	// ["READ_REPLICAS_DISABLED", "READ_REPLICAS_ENABLED"]
	ReadReplicasMode pulumi.StringPtrInput
	// Redis configuration parameters, according to http://redis.io/topics/config. Please check Memorystore documentation for
	// the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
	RedisConfigs    pulumi.StringMapInput
	RedisInstanceId pulumi.StringPtrInput
	// The version of Redis software. If not provided, latest supported version will be used. Please check the API
	// documentation linked at the top for the latest valid values.
	RedisVersion pulumi.StringPtrInput
	// The name of the Redis region of the instance.
	Region pulumi.StringPtrInput
	// Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and
	// defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default
	// is 1. The valid value for basic tier is 0 and the default is also 0.
	ReplicaCount pulumi.Float64PtrInput
	// The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an
	// unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing
	// subnets in an authorized network.
	ReservedIpRange pulumi.StringPtrInput
	// Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For
	// DIRECT_PEERING mode value must be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode value must be the
	// name of an allocated address range associated with the private service access connection, or "auto".
	SecondaryIpRange pulumi.StringPtrInput
	// List of server CA certificates for the instance.
	ServerCaCerts RedisInstanceServerCaCertArrayInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	// The service tier of the instance. Must be one of these values: - BASIC: standalone instance - STANDARD_HA: highly
	// available primary/replica instances Default value: "BASIC" Possible values: ["BASIC", "STANDARD_HA"]
	Tier     pulumi.StringPtrInput
	Timeouts RedisInstanceTimeoutsPtrInput
	// The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance. - SERVER_AUTHENTICATION: Client
	// to Server traffic encryption enabled with server authentication Default value: "DISABLED" Possible values:
	// ["SERVER_AUTHENTICATION", "DISABLED"]
	TransitEncryptionMode pulumi.StringPtrInput
}

func (RedisInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*redisInstanceState)(nil)).Elem()
}

type redisInstanceArgs struct {
	// Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two
	// zones. If provided, it must be a different zone from the one provided in [locationId].
	AlternativeLocationId *string `pulumi:"alternativeLocationId"`
	// Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the
	// instance. Default value is "false" meaning AUTH is disabled.
	AuthEnabled *bool `pulumi:"authEnabled"`
	// The full name of the Google Compute Engine network to which the instance is connected. If left unspecified, the default
	// network will be used.
	AuthorizedNetwork *string `pulumi:"authorizedNetwork"`
	// The connection mode of the Redis instance. Default value: "DIRECT_PEERING" Possible values: ["DIRECT_PEERING",
	// "PRIVATE_SERVICE_ACCESS"]
	ConnectMode *string `pulumi:"connectMode"`
	// Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis instance. If this is
	// provided, CMEK is enabled.
	CustomerManagedKey *string `pulumi:"customerManagedKey"`
	// An arbitrary and optional user-provided name for the instance.
	DisplayName *string `pulumi:"displayName"`
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels map[string]string `pulumi:"labels"`
	// The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For
	// STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If
	// [alternativeLocationId] is also provided, it must be different from [locationId].
	LocationId *string `pulumi:"locationId"`
	// Maintenance policy for an instance.
	MaintenancePolicy *RedisInstanceMaintenancePolicy `pulumi:"maintenancePolicy"`
	// The self service update maintenance version.
	MaintenanceVersion *string `pulumi:"maintenanceVersion"`
	// Redis memory size in GiB.
	MemorySizeGb float64 `pulumi:"memorySizeGb"`
	// The ID of the instance or a fully qualified identifier for the instance.
	Name *string `pulumi:"name"`
	// Persistence configuration for an instance.
	PersistenceConfig *RedisInstancePersistenceConfig `pulumi:"persistenceConfig"`
	Project           *string                         `pulumi:"project"`
	// Optional. Read replica mode. Can only be specified when trying to create the instance. If not set, Memorystore Redis
	// backend will default to READ_REPLICAS_DISABLED. - READ_REPLICAS_DISABLED: If disabled, read endpoint will not be
	// provided and the instance cannot scale up or down the number of replicas. - READ_REPLICAS_ENABLED: If enabled, read
	// endpoint will be provided and the instance can scale up and down the number of replicas. Possible values:
	// ["READ_REPLICAS_DISABLED", "READ_REPLICAS_ENABLED"]
	ReadReplicasMode *string `pulumi:"readReplicasMode"`
	// Redis configuration parameters, according to http://redis.io/topics/config. Please check Memorystore documentation for
	// the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
	RedisConfigs    map[string]string `pulumi:"redisConfigs"`
	RedisInstanceId *string           `pulumi:"redisInstanceId"`
	// The version of Redis software. If not provided, latest supported version will be used. Please check the API
	// documentation linked at the top for the latest valid values.
	RedisVersion *string `pulumi:"redisVersion"`
	// The name of the Redis region of the instance.
	Region *string `pulumi:"region"`
	// Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and
	// defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default
	// is 1. The valid value for basic tier is 0 and the default is also 0.
	ReplicaCount *float64 `pulumi:"replicaCount"`
	// The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an
	// unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing
	// subnets in an authorized network.
	ReservedIpRange *string `pulumi:"reservedIpRange"`
	// Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For
	// DIRECT_PEERING mode value must be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode value must be the
	// name of an allocated address range associated with the private service access connection, or "auto".
	SecondaryIpRange *string `pulumi:"secondaryIpRange"`
	// The service tier of the instance. Must be one of these values: - BASIC: standalone instance - STANDARD_HA: highly
	// available primary/replica instances Default value: "BASIC" Possible values: ["BASIC", "STANDARD_HA"]
	Tier     *string                `pulumi:"tier"`
	Timeouts *RedisInstanceTimeouts `pulumi:"timeouts"`
	// The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance. - SERVER_AUTHENTICATION: Client
	// to Server traffic encryption enabled with server authentication Default value: "DISABLED" Possible values:
	// ["SERVER_AUTHENTICATION", "DISABLED"]
	TransitEncryptionMode *string `pulumi:"transitEncryptionMode"`
}

// The set of arguments for constructing a RedisInstance resource.
type RedisInstanceArgs struct {
	// Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two
	// zones. If provided, it must be a different zone from the one provided in [locationId].
	AlternativeLocationId pulumi.StringPtrInput
	// Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the
	// instance. Default value is "false" meaning AUTH is disabled.
	AuthEnabled pulumi.BoolPtrInput
	// The full name of the Google Compute Engine network to which the instance is connected. If left unspecified, the default
	// network will be used.
	AuthorizedNetwork pulumi.StringPtrInput
	// The connection mode of the Redis instance. Default value: "DIRECT_PEERING" Possible values: ["DIRECT_PEERING",
	// "PRIVATE_SERVICE_ACCESS"]
	ConnectMode pulumi.StringPtrInput
	// Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis instance. If this is
	// provided, CMEK is enabled.
	CustomerManagedKey pulumi.StringPtrInput
	// An arbitrary and optional user-provided name for the instance.
	DisplayName pulumi.StringPtrInput
	// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
	// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
	// resource.
	Labels pulumi.StringMapInput
	// The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For
	// STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If
	// [alternativeLocationId] is also provided, it must be different from [locationId].
	LocationId pulumi.StringPtrInput
	// Maintenance policy for an instance.
	MaintenancePolicy RedisInstanceMaintenancePolicyPtrInput
	// The self service update maintenance version.
	MaintenanceVersion pulumi.StringPtrInput
	// Redis memory size in GiB.
	MemorySizeGb pulumi.Float64Input
	// The ID of the instance or a fully qualified identifier for the instance.
	Name pulumi.StringPtrInput
	// Persistence configuration for an instance.
	PersistenceConfig RedisInstancePersistenceConfigPtrInput
	Project           pulumi.StringPtrInput
	// Optional. Read replica mode. Can only be specified when trying to create the instance. If not set, Memorystore Redis
	// backend will default to READ_REPLICAS_DISABLED. - READ_REPLICAS_DISABLED: If disabled, read endpoint will not be
	// provided and the instance cannot scale up or down the number of replicas. - READ_REPLICAS_ENABLED: If enabled, read
	// endpoint will be provided and the instance can scale up and down the number of replicas. Possible values:
	// ["READ_REPLICAS_DISABLED", "READ_REPLICAS_ENABLED"]
	ReadReplicasMode pulumi.StringPtrInput
	// Redis configuration parameters, according to http://redis.io/topics/config. Please check Memorystore documentation for
	// the list of supported parameters:
	// https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
	RedisConfigs    pulumi.StringMapInput
	RedisInstanceId pulumi.StringPtrInput
	// The version of Redis software. If not provided, latest supported version will be used. Please check the API
	// documentation linked at the top for the latest valid values.
	RedisVersion pulumi.StringPtrInput
	// The name of the Redis region of the instance.
	Region pulumi.StringPtrInput
	// Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and
	// defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default
	// is 1. The valid value for basic tier is 0 and the default is also 0.
	ReplicaCount pulumi.Float64PtrInput
	// The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an
	// unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing
	// subnets in an authorized network.
	ReservedIpRange pulumi.StringPtrInput
	// Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For
	// DIRECT_PEERING mode value must be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode value must be the
	// name of an allocated address range associated with the private service access connection, or "auto".
	SecondaryIpRange pulumi.StringPtrInput
	// The service tier of the instance. Must be one of these values: - BASIC: standalone instance - STANDARD_HA: highly
	// available primary/replica instances Default value: "BASIC" Possible values: ["BASIC", "STANDARD_HA"]
	Tier     pulumi.StringPtrInput
	Timeouts RedisInstanceTimeoutsPtrInput
	// The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance. - SERVER_AUTHENTICATION: Client
	// to Server traffic encryption enabled with server authentication Default value: "DISABLED" Possible values:
	// ["SERVER_AUTHENTICATION", "DISABLED"]
	TransitEncryptionMode pulumi.StringPtrInput
}

func (RedisInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*redisInstanceArgs)(nil)).Elem()
}

type RedisInstanceInput interface {
	pulumi.Input

	ToRedisInstanceOutput() RedisInstanceOutput
	ToRedisInstanceOutputWithContext(ctx context.Context) RedisInstanceOutput
}

func (*RedisInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisInstance)(nil)).Elem()
}

func (i *RedisInstance) ToRedisInstanceOutput() RedisInstanceOutput {
	return i.ToRedisInstanceOutputWithContext(context.Background())
}

func (i *RedisInstance) ToRedisInstanceOutputWithContext(ctx context.Context) RedisInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedisInstanceOutput)
}

type RedisInstanceOutput struct{ *pulumi.OutputState }

func (RedisInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RedisInstance)(nil)).Elem()
}

func (o RedisInstanceOutput) ToRedisInstanceOutput() RedisInstanceOutput {
	return o
}

func (o RedisInstanceOutput) ToRedisInstanceOutputWithContext(ctx context.Context) RedisInstanceOutput {
	return o
}

// Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two
// zones. If provided, it must be a different zone from the one provided in [locationId].
func (o RedisInstanceOutput) AlternativeLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.AlternativeLocationId }).(pulumi.StringOutput)
}

// Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to "true" AUTH is enabled on the
// instance. Default value is "false" meaning AUTH is disabled.
func (o RedisInstanceOutput) AuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.BoolPtrOutput { return v.AuthEnabled }).(pulumi.BoolPtrOutput)
}

// AUTH String set on the instance. This field will only be populated if auth_enabled is true.
func (o RedisInstanceOutput) AuthString() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.AuthString }).(pulumi.StringOutput)
}

// The full name of the Google Compute Engine network to which the instance is connected. If left unspecified, the default
// network will be used.
func (o RedisInstanceOutput) AuthorizedNetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.AuthorizedNetwork }).(pulumi.StringOutput)
}

// The connection mode of the Redis instance. Default value: "DIRECT_PEERING" Possible values: ["DIRECT_PEERING",
// "PRIVATE_SERVICE_ACCESS"]
func (o RedisInstanceOutput) ConnectMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringPtrOutput { return v.ConnectMode }).(pulumi.StringPtrOutput)
}

// The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
func (o RedisInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The current zone where the Redis endpoint is placed. For Basic Tier instances, this will always be the same as the
// [locationId] provided by the user at creation time. For Standard Tier instances, this can be either [locationId] or
// [alternativeLocationId] and can change after a failover event.
func (o RedisInstanceOutput) CurrentLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.CurrentLocationId }).(pulumi.StringOutput)
}

// Optional. The KMS key reference that you want to use to encrypt the data at rest for this Redis instance. If this is
// provided, CMEK is enabled.
func (o RedisInstanceOutput) CustomerManagedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringPtrOutput { return v.CustomerManagedKey }).(pulumi.StringPtrOutput)
}

// An arbitrary and optional user-provided name for the instance.
func (o RedisInstanceOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o RedisInstanceOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// Hostname or IP address of the exposed Redis endpoint used by clients to connect to the service.
func (o RedisInstanceOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
// labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
// resource.
func (o RedisInstanceOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For
// STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If
// [alternativeLocationId] is also provided, it must be different from [locationId].
func (o RedisInstanceOutput) LocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.LocationId }).(pulumi.StringOutput)
}

// Maintenance policy for an instance.
func (o RedisInstanceOutput) MaintenancePolicy() RedisInstanceMaintenancePolicyPtrOutput {
	return o.ApplyT(func(v *RedisInstance) RedisInstanceMaintenancePolicyPtrOutput { return v.MaintenancePolicy }).(RedisInstanceMaintenancePolicyPtrOutput)
}

// Upcoming maintenance schedule.
func (o RedisInstanceOutput) MaintenanceSchedules() RedisInstanceMaintenanceScheduleArrayOutput {
	return o.ApplyT(func(v *RedisInstance) RedisInstanceMaintenanceScheduleArrayOutput { return v.MaintenanceSchedules }).(RedisInstanceMaintenanceScheduleArrayOutput)
}

// The self service update maintenance version.
func (o RedisInstanceOutput) MaintenanceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.MaintenanceVersion }).(pulumi.StringOutput)
}

// Redis memory size in GiB.
func (o RedisInstanceOutput) MemorySizeGb() pulumi.Float64Output {
	return o.ApplyT(func(v *RedisInstance) pulumi.Float64Output { return v.MemorySizeGb }).(pulumi.Float64Output)
}

// The ID of the instance or a fully qualified identifier for the instance.
func (o RedisInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Output only. Info per node.
func (o RedisInstanceOutput) Nodes() RedisInstanceNodeArrayOutput {
	return o.ApplyT(func(v *RedisInstance) RedisInstanceNodeArrayOutput { return v.Nodes }).(RedisInstanceNodeArrayOutput)
}

// Persistence configuration for an instance.
func (o RedisInstanceOutput) PersistenceConfig() RedisInstancePersistenceConfigPtrOutput {
	return o.ApplyT(func(v *RedisInstance) RedisInstancePersistenceConfigPtrOutput { return v.PersistenceConfig }).(RedisInstancePersistenceConfigPtrOutput)
}

// Output only. Cloud IAM identity used by import / export operations to transfer data to/from Cloud Storage. Format is
// "serviceAccount:". The value may change over time for a given instance so should be checked before each import/export
// operation.
func (o RedisInstanceOutput) PersistenceIamIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.PersistenceIamIdentity }).(pulumi.StringOutput)
}

// The port number of the exposed Redis endpoint.
func (o RedisInstanceOutput) Port() pulumi.Float64Output {
	return o.ApplyT(func(v *RedisInstance) pulumi.Float64Output { return v.Port }).(pulumi.Float64Output)
}

func (o RedisInstanceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. Hostname or IP address of the exposed readonly Redis endpoint. Standard tier only. Targets all healthy
// replica nodes in instance. Replication is asynchronous and replica nodes will exhibit some lag behind the primary. Write
// requests must target 'host'.
func (o RedisInstanceOutput) ReadEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.ReadEndpoint }).(pulumi.StringOutput)
}

// Output only. The port number of the exposed readonly redis endpoint. Standard tier only. Write requests should target
// 'port'.
func (o RedisInstanceOutput) ReadEndpointPort() pulumi.Float64Output {
	return o.ApplyT(func(v *RedisInstance) pulumi.Float64Output { return v.ReadEndpointPort }).(pulumi.Float64Output)
}

// Optional. Read replica mode. Can only be specified when trying to create the instance. If not set, Memorystore Redis
// backend will default to READ_REPLICAS_DISABLED. - READ_REPLICAS_DISABLED: If disabled, read endpoint will not be
// provided and the instance cannot scale up or down the number of replicas. - READ_REPLICAS_ENABLED: If enabled, read
// endpoint will be provided and the instance can scale up and down the number of replicas. Possible values:
// ["READ_REPLICAS_DISABLED", "READ_REPLICAS_ENABLED"]
func (o RedisInstanceOutput) ReadReplicasMode() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.ReadReplicasMode }).(pulumi.StringOutput)
}

// Redis configuration parameters, according to http://redis.io/topics/config. Please check Memorystore documentation for
// the list of supported parameters:
// https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs
func (o RedisInstanceOutput) RedisConfigs() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringMapOutput { return v.RedisConfigs }).(pulumi.StringMapOutput)
}

func (o RedisInstanceOutput) RedisInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.RedisInstanceId }).(pulumi.StringOutput)
}

// The version of Redis software. If not provided, latest supported version will be used. Please check the API
// documentation linked at the top for the latest valid values.
func (o RedisInstanceOutput) RedisVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.RedisVersion }).(pulumi.StringOutput)
}

// The name of the Redis region of the instance.
func (o RedisInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Optional. The number of replica nodes. The valid range for the Standard Tier with read replicas enabled is [1-5] and
// defaults to 2. If read replicas are not enabled for a Standard Tier instance, the only valid value is 1 and the default
// is 1. The valid value for basic tier is 0 and the default is also 0.
func (o RedisInstanceOutput) ReplicaCount() pulumi.Float64Output {
	return o.ApplyT(func(v *RedisInstance) pulumi.Float64Output { return v.ReplicaCount }).(pulumi.Float64Output)
}

// The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an
// unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing
// subnets in an authorized network.
func (o RedisInstanceOutput) ReservedIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.ReservedIpRange }).(pulumi.StringOutput)
}

// Optional. Additional IP range for node placement. Required when enabling read replicas on an existing instance. For
// DIRECT_PEERING mode value must be a CIDR range of size /28, or "auto". For PRIVATE_SERVICE_ACCESS mode value must be the
// name of an allocated address range associated with the private service access connection, or "auto".
func (o RedisInstanceOutput) SecondaryIpRange() pulumi.StringOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringOutput { return v.SecondaryIpRange }).(pulumi.StringOutput)
}

// List of server CA certificates for the instance.
func (o RedisInstanceOutput) ServerCaCerts() RedisInstanceServerCaCertArrayOutput {
	return o.ApplyT(func(v *RedisInstance) RedisInstanceServerCaCertArrayOutput { return v.ServerCaCerts }).(RedisInstanceServerCaCertArrayOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o RedisInstanceOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

// The service tier of the instance. Must be one of these values: - BASIC: standalone instance - STANDARD_HA: highly
// available primary/replica instances Default value: "BASIC" Possible values: ["BASIC", "STANDARD_HA"]
func (o RedisInstanceOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringPtrOutput { return v.Tier }).(pulumi.StringPtrOutput)
}

func (o RedisInstanceOutput) Timeouts() RedisInstanceTimeoutsPtrOutput {
	return o.ApplyT(func(v *RedisInstance) RedisInstanceTimeoutsPtrOutput { return v.Timeouts }).(RedisInstanceTimeoutsPtrOutput)
}

// The TLS mode of the Redis instance, If not provided, TLS is disabled for the instance. - SERVER_AUTHENTICATION: Client
// to Server traffic encryption enabled with server authentication Default value: "DISABLED" Possible values:
// ["SERVER_AUTHENTICATION", "DISABLED"]
func (o RedisInstanceOutput) TransitEncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RedisInstance) pulumi.StringPtrOutput { return v.TransitEncryptionMode }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RedisInstanceInput)(nil)).Elem(), &RedisInstance{})
	pulumi.RegisterOutputType(RedisInstanceOutput{})
}
