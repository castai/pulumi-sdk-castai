// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IapTunnelInstanceIamMember struct {
	pulumi.CustomResourceState

	Condition                    IapTunnelInstanceIamMemberConditionPtrOutput `pulumi:"condition"`
	Etag                         pulumi.StringOutput                          `pulumi:"etag"`
	IapTunnelInstanceIamMemberId pulumi.StringOutput                          `pulumi:"iapTunnelInstanceIamMemberId"`
	Instance                     pulumi.StringOutput                          `pulumi:"instance"`
	Member                       pulumi.StringOutput                          `pulumi:"member"`
	Project                      pulumi.StringOutput                          `pulumi:"project"`
	Role                         pulumi.StringOutput                          `pulumi:"role"`
	Zone                         pulumi.StringOutput                          `pulumi:"zone"`
}

// NewIapTunnelInstanceIamMember registers a new resource with the given unique name, arguments, and options.
func NewIapTunnelInstanceIamMember(ctx *pulumi.Context,
	name string, args *IapTunnelInstanceIamMemberArgs, opts ...pulumi.ResourceOption) (*IapTunnelInstanceIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Instance == nil {
		return nil, errors.New("invalid value for required argument 'Instance'")
	}
	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource IapTunnelInstanceIamMember
	err = ctx.RegisterPackageResource("google:index/iapTunnelInstanceIamMember:IapTunnelInstanceIamMember", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIapTunnelInstanceIamMember gets an existing IapTunnelInstanceIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIapTunnelInstanceIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IapTunnelInstanceIamMemberState, opts ...pulumi.ResourceOption) (*IapTunnelInstanceIamMember, error) {
	var resource IapTunnelInstanceIamMember
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/iapTunnelInstanceIamMember:IapTunnelInstanceIamMember", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IapTunnelInstanceIamMember resources.
type iapTunnelInstanceIamMemberState struct {
	Condition                    *IapTunnelInstanceIamMemberCondition `pulumi:"condition"`
	Etag                         *string                              `pulumi:"etag"`
	IapTunnelInstanceIamMemberId *string                              `pulumi:"iapTunnelInstanceIamMemberId"`
	Instance                     *string                              `pulumi:"instance"`
	Member                       *string                              `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Role                         *string                              `pulumi:"role"`
	Zone                         *string                              `pulumi:"zone"`
}

type IapTunnelInstanceIamMemberState struct {
	Condition                    IapTunnelInstanceIamMemberConditionPtrInput
	Etag                         pulumi.StringPtrInput
	IapTunnelInstanceIamMemberId pulumi.StringPtrInput
	Instance                     pulumi.StringPtrInput
	Member                       pulumi.StringPtrInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringPtrInput
	Zone                         pulumi.StringPtrInput
}

func (IapTunnelInstanceIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*iapTunnelInstanceIamMemberState)(nil)).Elem()
}

type iapTunnelInstanceIamMemberArgs struct {
	Condition                    *IapTunnelInstanceIamMemberCondition `pulumi:"condition"`
	IapTunnelInstanceIamMemberId *string                              `pulumi:"iapTunnelInstanceIamMemberId"`
	Instance                     string                               `pulumi:"instance"`
	Member                       string                               `pulumi:"member"`
	Project                      *string                              `pulumi:"project"`
	Role                         string                               `pulumi:"role"`
	Zone                         *string                              `pulumi:"zone"`
}

// The set of arguments for constructing a IapTunnelInstanceIamMember resource.
type IapTunnelInstanceIamMemberArgs struct {
	Condition                    IapTunnelInstanceIamMemberConditionPtrInput
	IapTunnelInstanceIamMemberId pulumi.StringPtrInput
	Instance                     pulumi.StringInput
	Member                       pulumi.StringInput
	Project                      pulumi.StringPtrInput
	Role                         pulumi.StringInput
	Zone                         pulumi.StringPtrInput
}

func (IapTunnelInstanceIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iapTunnelInstanceIamMemberArgs)(nil)).Elem()
}

type IapTunnelInstanceIamMemberInput interface {
	pulumi.Input

	ToIapTunnelInstanceIamMemberOutput() IapTunnelInstanceIamMemberOutput
	ToIapTunnelInstanceIamMemberOutputWithContext(ctx context.Context) IapTunnelInstanceIamMemberOutput
}

func (*IapTunnelInstanceIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((**IapTunnelInstanceIamMember)(nil)).Elem()
}

func (i *IapTunnelInstanceIamMember) ToIapTunnelInstanceIamMemberOutput() IapTunnelInstanceIamMemberOutput {
	return i.ToIapTunnelInstanceIamMemberOutputWithContext(context.Background())
}

func (i *IapTunnelInstanceIamMember) ToIapTunnelInstanceIamMemberOutputWithContext(ctx context.Context) IapTunnelInstanceIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IapTunnelInstanceIamMemberOutput)
}

type IapTunnelInstanceIamMemberOutput struct{ *pulumi.OutputState }

func (IapTunnelInstanceIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IapTunnelInstanceIamMember)(nil)).Elem()
}

func (o IapTunnelInstanceIamMemberOutput) ToIapTunnelInstanceIamMemberOutput() IapTunnelInstanceIamMemberOutput {
	return o
}

func (o IapTunnelInstanceIamMemberOutput) ToIapTunnelInstanceIamMemberOutputWithContext(ctx context.Context) IapTunnelInstanceIamMemberOutput {
	return o
}

func (o IapTunnelInstanceIamMemberOutput) Condition() IapTunnelInstanceIamMemberConditionPtrOutput {
	return o.ApplyT(func(v *IapTunnelInstanceIamMember) IapTunnelInstanceIamMemberConditionPtrOutput { return v.Condition }).(IapTunnelInstanceIamMemberConditionPtrOutput)
}

func (o IapTunnelInstanceIamMemberOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelInstanceIamMember) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o IapTunnelInstanceIamMemberOutput) IapTunnelInstanceIamMemberId() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelInstanceIamMember) pulumi.StringOutput { return v.IapTunnelInstanceIamMemberId }).(pulumi.StringOutput)
}

func (o IapTunnelInstanceIamMemberOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelInstanceIamMember) pulumi.StringOutput { return v.Instance }).(pulumi.StringOutput)
}

func (o IapTunnelInstanceIamMemberOutput) Member() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelInstanceIamMember) pulumi.StringOutput { return v.Member }).(pulumi.StringOutput)
}

func (o IapTunnelInstanceIamMemberOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelInstanceIamMember) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o IapTunnelInstanceIamMemberOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelInstanceIamMember) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o IapTunnelInstanceIamMemberOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *IapTunnelInstanceIamMember) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IapTunnelInstanceIamMemberInput)(nil)).Elem(), &IapTunnelInstanceIamMember{})
	pulumi.RegisterOutputType(IapTunnelInstanceIamMemberOutput{})
}
