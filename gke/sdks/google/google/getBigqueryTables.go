// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetBigqueryTables(ctx *pulumi.Context, args *GetBigqueryTablesArgs, opts ...pulumi.InvokeOption) (*GetBigqueryTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetBigqueryTablesResult
	err = ctx.InvokePackage("google:index/getBigqueryTables:getBigqueryTables", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBigqueryTables.
type GetBigqueryTablesArgs struct {
	DatasetId string  `pulumi:"datasetId"`
	Id        *string `pulumi:"id"`
	Project   *string `pulumi:"project"`
}

// A collection of values returned by getBigqueryTables.
type GetBigqueryTablesResult struct {
	DatasetId string                   `pulumi:"datasetId"`
	Id        string                   `pulumi:"id"`
	Project   *string                  `pulumi:"project"`
	Tables    []GetBigqueryTablesTable `pulumi:"tables"`
}

func GetBigqueryTablesOutput(ctx *pulumi.Context, args GetBigqueryTablesOutputArgs, opts ...pulumi.InvokeOption) GetBigqueryTablesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetBigqueryTablesResultOutput, error) {
			args := v.(GetBigqueryTablesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetBigqueryTablesResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getBigqueryTables:getBigqueryTables", args, GetBigqueryTablesResultOutput{}, options).(GetBigqueryTablesResultOutput), nil
		}).(GetBigqueryTablesResultOutput)
}

// A collection of arguments for invoking getBigqueryTables.
type GetBigqueryTablesOutputArgs struct {
	DatasetId pulumi.StringInput    `pulumi:"datasetId"`
	Id        pulumi.StringPtrInput `pulumi:"id"`
	Project   pulumi.StringPtrInput `pulumi:"project"`
}

func (GetBigqueryTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBigqueryTablesArgs)(nil)).Elem()
}

// A collection of values returned by getBigqueryTables.
type GetBigqueryTablesResultOutput struct{ *pulumi.OutputState }

func (GetBigqueryTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBigqueryTablesResult)(nil)).Elem()
}

func (o GetBigqueryTablesResultOutput) ToGetBigqueryTablesResultOutput() GetBigqueryTablesResultOutput {
	return o
}

func (o GetBigqueryTablesResultOutput) ToGetBigqueryTablesResultOutputWithContext(ctx context.Context) GetBigqueryTablesResultOutput {
	return o
}

func (o GetBigqueryTablesResultOutput) DatasetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBigqueryTablesResult) string { return v.DatasetId }).(pulumi.StringOutput)
}

func (o GetBigqueryTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBigqueryTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBigqueryTablesResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBigqueryTablesResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o GetBigqueryTablesResultOutput) Tables() GetBigqueryTablesTableArrayOutput {
	return o.ApplyT(func(v GetBigqueryTablesResult) []GetBigqueryTablesTable { return v.Tables }).(GetBigqueryTablesTableArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBigqueryTablesResultOutput{})
}
