// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WorkflowsWorkflow struct {
	pulumi.CustomResourceState

	// Describes the level of platform logging to apply to calls and call responses during executions of this workflow. If both
	// the workflow and the execution specify a logging level, the execution level takes precedence. Possible values:
	// ["CALL_LOG_LEVEL_UNSPECIFIED", "LOG_ALL_CALLS", "LOG_ERRORS_ONLY", "LOG_NONE"]
	CallLogLevel pulumi.StringPtrOutput `pulumi:"callLogLevel"`
	// The timestamp of when the workflow was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// The KMS key used to encrypt workflow and execution data. Format:
	// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	CryptoKeyName      pulumi.StringPtrOutput `pulumi:"cryptoKeyName"`
	DeletionProtection pulumi.BoolPtrOutput   `pulumi:"deletionProtection"`
	// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
	Description     pulumi.StringOutput    `pulumi:"description"`
	EffectiveLabels pulumi.StringMapOutput `pulumi:"effectiveLabels"`
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the Workflow.
	Name       pulumi.StringOutput `pulumi:"name"`
	NamePrefix pulumi.StringOutput `pulumi:"namePrefix"`
	Project    pulumi.StringOutput `pulumi:"project"`
	// The region of the workflow.
	Region pulumi.StringPtrOutput `pulumi:"region"`
	// The revision of the workflow. A new one is generated if the service account or source contents is changed.
	RevisionId pulumi.StringOutput `pulumi:"revisionId"`
	// Name of the service account associated with the latest workflow version. This service account represents the identity of
	// the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or
	// {account}. Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
	// The {account} value can be the email address or the unique_id of the service account. If not provided, workflow will use
	// the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// Workflow code to be executed. The size limit is 128KB.
	SourceContents pulumi.StringPtrOutput `pulumi:"sourceContents"`
	// State of the workflow deployment.
	State pulumi.StringOutput `pulumi:"state"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both
	// PUT & PATCH) when empty.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapOutput             `pulumi:"terraformLabels"`
	Timeouts        WorkflowsWorkflowTimeoutsPtrOutput `pulumi:"timeouts"`
	// The timestamp of when the workflow was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each
	// string can take up to 4KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
	UserEnvVars         pulumi.StringMapOutput `pulumi:"userEnvVars"`
	WorkflowsWorkflowId pulumi.StringOutput    `pulumi:"workflowsWorkflowId"`
}

// NewWorkflowsWorkflow registers a new resource with the given unique name, arguments, and options.
func NewWorkflowsWorkflow(ctx *pulumi.Context,
	name string, args *WorkflowsWorkflowArgs, opts ...pulumi.ResourceOption) (*WorkflowsWorkflow, error) {
	if args == nil {
		args = &WorkflowsWorkflowArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource WorkflowsWorkflow
	err = ctx.RegisterPackageResource("google:index/workflowsWorkflow:WorkflowsWorkflow", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkflowsWorkflow gets an existing WorkflowsWorkflow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkflowsWorkflow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkflowsWorkflowState, opts ...pulumi.ResourceOption) (*WorkflowsWorkflow, error) {
	var resource WorkflowsWorkflow
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/workflowsWorkflow:WorkflowsWorkflow", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WorkflowsWorkflow resources.
type workflowsWorkflowState struct {
	// Describes the level of platform logging to apply to calls and call responses during executions of this workflow. If both
	// the workflow and the execution specify a logging level, the execution level takes precedence. Possible values:
	// ["CALL_LOG_LEVEL_UNSPECIFIED", "LOG_ALL_CALLS", "LOG_ERRORS_ONLY", "LOG_NONE"]
	CallLogLevel *string `pulumi:"callLogLevel"`
	// The timestamp of when the workflow was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime *string `pulumi:"createTime"`
	// The KMS key used to encrypt workflow and execution data. Format:
	// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	CryptoKeyName      *string `pulumi:"cryptoKeyName"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
	Description     *string           `pulumi:"description"`
	EffectiveLabels map[string]string `pulumi:"effectiveLabels"`
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the Workflow.
	Name       *string `pulumi:"name"`
	NamePrefix *string `pulumi:"namePrefix"`
	Project    *string `pulumi:"project"`
	// The region of the workflow.
	Region *string `pulumi:"region"`
	// The revision of the workflow. A new one is generated if the service account or source contents is changed.
	RevisionId *string `pulumi:"revisionId"`
	// Name of the service account associated with the latest workflow version. This service account represents the identity of
	// the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or
	// {account}. Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
	// The {account} value can be the email address or the unique_id of the service account. If not provided, workflow will use
	// the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Workflow code to be executed. The size limit is 128KB.
	SourceContents *string `pulumi:"sourceContents"`
	// State of the workflow deployment.
	State *string `pulumi:"state"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both
	// PUT & PATCH) when empty.
	Tags map[string]string `pulumi:"tags"`
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels map[string]string          `pulumi:"terraformLabels"`
	Timeouts        *WorkflowsWorkflowTimeouts `pulumi:"timeouts"`
	// The timestamp of when the workflow was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	UpdateTime *string `pulumi:"updateTime"`
	// User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each
	// string can take up to 4KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
	UserEnvVars         map[string]string `pulumi:"userEnvVars"`
	WorkflowsWorkflowId *string           `pulumi:"workflowsWorkflowId"`
}

type WorkflowsWorkflowState struct {
	// Describes the level of platform logging to apply to calls and call responses during executions of this workflow. If both
	// the workflow and the execution specify a logging level, the execution level takes precedence. Possible values:
	// ["CALL_LOG_LEVEL_UNSPECIFIED", "LOG_ALL_CALLS", "LOG_ERRORS_ONLY", "LOG_NONE"]
	CallLogLevel pulumi.StringPtrInput
	// The timestamp of when the workflow was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
	// fractional digits.
	CreateTime pulumi.StringPtrInput
	// The KMS key used to encrypt workflow and execution data. Format:
	// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	CryptoKeyName      pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
	Description     pulumi.StringPtrInput
	EffectiveLabels pulumi.StringMapInput
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// Name of the Workflow.
	Name       pulumi.StringPtrInput
	NamePrefix pulumi.StringPtrInput
	Project    pulumi.StringPtrInput
	// The region of the workflow.
	Region pulumi.StringPtrInput
	// The revision of the workflow. A new one is generated if the service account or source contents is changed.
	RevisionId pulumi.StringPtrInput
	// Name of the service account associated with the latest workflow version. This service account represents the identity of
	// the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or
	// {account}. Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
	// The {account} value can be the email address or the unique_id of the service account. If not provided, workflow will use
	// the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
	ServiceAccount pulumi.StringPtrInput
	// Workflow code to be executed. The size limit is 128KB.
	SourceContents pulumi.StringPtrInput
	// State of the workflow deployment.
	State pulumi.StringPtrInput
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both
	// PUT & PATCH) when empty.
	Tags pulumi.StringMapInput
	// The combination of labels configured directly on the resource and default labels configured on the provider.
	TerraformLabels pulumi.StringMapInput
	Timeouts        WorkflowsWorkflowTimeoutsPtrInput
	// The timestamp of when the workflow was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
	// nine fractional digits.
	UpdateTime pulumi.StringPtrInput
	// User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each
	// string can take up to 4KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
	UserEnvVars         pulumi.StringMapInput
	WorkflowsWorkflowId pulumi.StringPtrInput
}

func (WorkflowsWorkflowState) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowsWorkflowState)(nil)).Elem()
}

type workflowsWorkflowArgs struct {
	// Describes the level of platform logging to apply to calls and call responses during executions of this workflow. If both
	// the workflow and the execution specify a logging level, the execution level takes precedence. Possible values:
	// ["CALL_LOG_LEVEL_UNSPECIFIED", "LOG_ALL_CALLS", "LOG_ERRORS_ONLY", "LOG_NONE"]
	CallLogLevel *string `pulumi:"callLogLevel"`
	// The KMS key used to encrypt workflow and execution data. Format:
	// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	CryptoKeyName      *string `pulumi:"cryptoKeyName"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
	Description *string `pulumi:"description"`
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels map[string]string `pulumi:"labels"`
	// Name of the Workflow.
	Name       *string `pulumi:"name"`
	NamePrefix *string `pulumi:"namePrefix"`
	Project    *string `pulumi:"project"`
	// The region of the workflow.
	Region *string `pulumi:"region"`
	// Name of the service account associated with the latest workflow version. This service account represents the identity of
	// the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or
	// {account}. Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
	// The {account} value can be the email address or the unique_id of the service account. If not provided, workflow will use
	// the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// Workflow code to be executed. The size limit is 128KB.
	SourceContents *string `pulumi:"sourceContents"`
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both
	// PUT & PATCH) when empty.
	Tags     map[string]string          `pulumi:"tags"`
	Timeouts *WorkflowsWorkflowTimeouts `pulumi:"timeouts"`
	// User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each
	// string can take up to 4KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
	UserEnvVars         map[string]string `pulumi:"userEnvVars"`
	WorkflowsWorkflowId *string           `pulumi:"workflowsWorkflowId"`
}

// The set of arguments for constructing a WorkflowsWorkflow resource.
type WorkflowsWorkflowArgs struct {
	// Describes the level of platform logging to apply to calls and call responses during executions of this workflow. If both
	// the workflow and the execution specify a logging level, the execution level takes precedence. Possible values:
	// ["CALL_LOG_LEVEL_UNSPECIFIED", "LOG_ALL_CALLS", "LOG_ERRORS_ONLY", "LOG_NONE"]
	CallLogLevel pulumi.StringPtrInput
	// The KMS key used to encrypt workflow and execution data. Format:
	// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
	CryptoKeyName      pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
	Description pulumi.StringPtrInput
	// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
	// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
	// present on the resource.
	Labels pulumi.StringMapInput
	// Name of the Workflow.
	Name       pulumi.StringPtrInput
	NamePrefix pulumi.StringPtrInput
	Project    pulumi.StringPtrInput
	// The region of the workflow.
	Region pulumi.StringPtrInput
	// Name of the service account associated with the latest workflow version. This service account represents the identity of
	// the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or
	// {account}. Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
	// The {account} value can be the email address or the unique_id of the service account. If not provided, workflow will use
	// the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
	ServiceAccount pulumi.StringPtrInput
	// Workflow code to be executed. The size limit is 128KB.
	SourceContents pulumi.StringPtrInput
	// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
	// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both
	// PUT & PATCH) when empty.
	Tags     pulumi.StringMapInput
	Timeouts WorkflowsWorkflowTimeoutsPtrInput
	// User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each
	// string can take up to 4KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
	UserEnvVars         pulumi.StringMapInput
	WorkflowsWorkflowId pulumi.StringPtrInput
}

func (WorkflowsWorkflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workflowsWorkflowArgs)(nil)).Elem()
}

type WorkflowsWorkflowInput interface {
	pulumi.Input

	ToWorkflowsWorkflowOutput() WorkflowsWorkflowOutput
	ToWorkflowsWorkflowOutputWithContext(ctx context.Context) WorkflowsWorkflowOutput
}

func (*WorkflowsWorkflow) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowsWorkflow)(nil)).Elem()
}

func (i *WorkflowsWorkflow) ToWorkflowsWorkflowOutput() WorkflowsWorkflowOutput {
	return i.ToWorkflowsWorkflowOutputWithContext(context.Background())
}

func (i *WorkflowsWorkflow) ToWorkflowsWorkflowOutputWithContext(ctx context.Context) WorkflowsWorkflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowsWorkflowOutput)
}

type WorkflowsWorkflowOutput struct{ *pulumi.OutputState }

func (WorkflowsWorkflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowsWorkflow)(nil)).Elem()
}

func (o WorkflowsWorkflowOutput) ToWorkflowsWorkflowOutput() WorkflowsWorkflowOutput {
	return o
}

func (o WorkflowsWorkflowOutput) ToWorkflowsWorkflowOutputWithContext(ctx context.Context) WorkflowsWorkflowOutput {
	return o
}

// Describes the level of platform logging to apply to calls and call responses during executions of this workflow. If both
// the workflow and the execution specify a logging level, the execution level takes precedence. Possible values:
// ["CALL_LOG_LEVEL_UNSPECIFIED", "LOG_ALL_CALLS", "LOG_ERRORS_ONLY", "LOG_NONE"]
func (o WorkflowsWorkflowOutput) CallLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringPtrOutput { return v.CallLogLevel }).(pulumi.StringPtrOutput)
}

// The timestamp of when the workflow was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
// fractional digits.
func (o WorkflowsWorkflowOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// The KMS key used to encrypt workflow and execution data. Format:
// projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
func (o WorkflowsWorkflowOutput) CryptoKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringPtrOutput { return v.CryptoKeyName }).(pulumi.StringPtrOutput)
}

func (o WorkflowsWorkflowOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
func (o WorkflowsWorkflowOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o WorkflowsWorkflowOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringMapOutput { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

// A set of key/value label pairs to assign to this Workflow. **Note**: This field is non-authoritative, and will only
// manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
// present on the resource.
func (o WorkflowsWorkflowOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the Workflow.
func (o WorkflowsWorkflowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o WorkflowsWorkflowOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.NamePrefix }).(pulumi.StringOutput)
}

func (o WorkflowsWorkflowOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The region of the workflow.
func (o WorkflowsWorkflowOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringPtrOutput { return v.Region }).(pulumi.StringPtrOutput)
}

// The revision of the workflow. A new one is generated if the service account or source contents is changed.
func (o WorkflowsWorkflowOutput) RevisionId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.RevisionId }).(pulumi.StringOutput)
}

// Name of the service account associated with the latest workflow version. This service account represents the identity of
// the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or
// {account}. Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
// The {account} value can be the email address or the unique_id of the service account. If not provided, workflow will use
// the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
func (o WorkflowsWorkflowOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.ServiceAccount }).(pulumi.StringOutput)
}

// Workflow code to be executed. The size limit is 128KB.
func (o WorkflowsWorkflowOutput) SourceContents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringPtrOutput { return v.SourceContents }).(pulumi.StringPtrOutput)
}

// State of the workflow deployment.
func (o WorkflowsWorkflowOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags.
// Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both
// PUT & PATCH) when empty.
func (o WorkflowsWorkflowOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The combination of labels configured directly on the resource and default labels configured on the provider.
func (o WorkflowsWorkflowOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringMapOutput { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o WorkflowsWorkflowOutput) Timeouts() WorkflowsWorkflowTimeoutsPtrOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) WorkflowsWorkflowTimeoutsPtrOutput { return v.Timeouts }).(WorkflowsWorkflowTimeoutsPtrOutput)
}

// The timestamp of when the workflow was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
// nine fractional digits.
func (o WorkflowsWorkflowOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each
// string can take up to 4KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
func (o WorkflowsWorkflowOutput) UserEnvVars() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringMapOutput { return v.UserEnvVars }).(pulumi.StringMapOutput)
}

func (o WorkflowsWorkflowOutput) WorkflowsWorkflowId() pulumi.StringOutput {
	return o.ApplyT(func(v *WorkflowsWorkflow) pulumi.StringOutput { return v.WorkflowsWorkflowId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowsWorkflowInput)(nil)).Elem(), &WorkflowsWorkflow{})
	pulumi.RegisterOutputType(WorkflowsWorkflowOutput{})
}
