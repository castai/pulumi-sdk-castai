// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OsLoginSshPublicKey struct {
	pulumi.CustomResourceState

	// An expiration time in microseconds since epoch.
	ExpirationTimeUsec pulumi.StringPtrOutput `pulumi:"expirationTimeUsec"`
	// The SHA-256 fingerprint of the SSH public key.
	Fingerprint pulumi.StringOutput `pulumi:"fingerprint"`
	// Public key text in SSH format, defined by RFC4253 section 6.6.
	Key                   pulumi.StringOutput `pulumi:"key"`
	OsLoginSshPublicKeyId pulumi.StringOutput `pulumi:"osLoginSshPublicKeyId"`
	// The project ID of the Google Cloud Platform project.
	Project  pulumi.StringPtrOutput               `pulumi:"project"`
	Timeouts OsLoginSshPublicKeyTimeoutsPtrOutput `pulumi:"timeouts"`
	// The user email.
	User pulumi.StringOutput `pulumi:"user"`
}

// NewOsLoginSshPublicKey registers a new resource with the given unique name, arguments, and options.
func NewOsLoginSshPublicKey(ctx *pulumi.Context,
	name string, args *OsLoginSshPublicKeyArgs, opts ...pulumi.ResourceOption) (*OsLoginSshPublicKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.User == nil {
		return nil, errors.New("invalid value for required argument 'User'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource OsLoginSshPublicKey
	err = ctx.RegisterPackageResource("google:index/osLoginSshPublicKey:OsLoginSshPublicKey", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOsLoginSshPublicKey gets an existing OsLoginSshPublicKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOsLoginSshPublicKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OsLoginSshPublicKeyState, opts ...pulumi.ResourceOption) (*OsLoginSshPublicKey, error) {
	var resource OsLoginSshPublicKey
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/osLoginSshPublicKey:OsLoginSshPublicKey", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OsLoginSshPublicKey resources.
type osLoginSshPublicKeyState struct {
	// An expiration time in microseconds since epoch.
	ExpirationTimeUsec *string `pulumi:"expirationTimeUsec"`
	// The SHA-256 fingerprint of the SSH public key.
	Fingerprint *string `pulumi:"fingerprint"`
	// Public key text in SSH format, defined by RFC4253 section 6.6.
	Key                   *string `pulumi:"key"`
	OsLoginSshPublicKeyId *string `pulumi:"osLoginSshPublicKeyId"`
	// The project ID of the Google Cloud Platform project.
	Project  *string                      `pulumi:"project"`
	Timeouts *OsLoginSshPublicKeyTimeouts `pulumi:"timeouts"`
	// The user email.
	User *string `pulumi:"user"`
}

type OsLoginSshPublicKeyState struct {
	// An expiration time in microseconds since epoch.
	ExpirationTimeUsec pulumi.StringPtrInput
	// The SHA-256 fingerprint of the SSH public key.
	Fingerprint pulumi.StringPtrInput
	// Public key text in SSH format, defined by RFC4253 section 6.6.
	Key                   pulumi.StringPtrInput
	OsLoginSshPublicKeyId pulumi.StringPtrInput
	// The project ID of the Google Cloud Platform project.
	Project  pulumi.StringPtrInput
	Timeouts OsLoginSshPublicKeyTimeoutsPtrInput
	// The user email.
	User pulumi.StringPtrInput
}

func (OsLoginSshPublicKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*osLoginSshPublicKeyState)(nil)).Elem()
}

type osLoginSshPublicKeyArgs struct {
	// An expiration time in microseconds since epoch.
	ExpirationTimeUsec *string `pulumi:"expirationTimeUsec"`
	// Public key text in SSH format, defined by RFC4253 section 6.6.
	Key                   string  `pulumi:"key"`
	OsLoginSshPublicKeyId *string `pulumi:"osLoginSshPublicKeyId"`
	// The project ID of the Google Cloud Platform project.
	Project  *string                      `pulumi:"project"`
	Timeouts *OsLoginSshPublicKeyTimeouts `pulumi:"timeouts"`
	// The user email.
	User string `pulumi:"user"`
}

// The set of arguments for constructing a OsLoginSshPublicKey resource.
type OsLoginSshPublicKeyArgs struct {
	// An expiration time in microseconds since epoch.
	ExpirationTimeUsec pulumi.StringPtrInput
	// Public key text in SSH format, defined by RFC4253 section 6.6.
	Key                   pulumi.StringInput
	OsLoginSshPublicKeyId pulumi.StringPtrInput
	// The project ID of the Google Cloud Platform project.
	Project  pulumi.StringPtrInput
	Timeouts OsLoginSshPublicKeyTimeoutsPtrInput
	// The user email.
	User pulumi.StringInput
}

func (OsLoginSshPublicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*osLoginSshPublicKeyArgs)(nil)).Elem()
}

type OsLoginSshPublicKeyInput interface {
	pulumi.Input

	ToOsLoginSshPublicKeyOutput() OsLoginSshPublicKeyOutput
	ToOsLoginSshPublicKeyOutputWithContext(ctx context.Context) OsLoginSshPublicKeyOutput
}

func (*OsLoginSshPublicKey) ElementType() reflect.Type {
	return reflect.TypeOf((**OsLoginSshPublicKey)(nil)).Elem()
}

func (i *OsLoginSshPublicKey) ToOsLoginSshPublicKeyOutput() OsLoginSshPublicKeyOutput {
	return i.ToOsLoginSshPublicKeyOutputWithContext(context.Background())
}

func (i *OsLoginSshPublicKey) ToOsLoginSshPublicKeyOutputWithContext(ctx context.Context) OsLoginSshPublicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OsLoginSshPublicKeyOutput)
}

type OsLoginSshPublicKeyOutput struct{ *pulumi.OutputState }

func (OsLoginSshPublicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OsLoginSshPublicKey)(nil)).Elem()
}

func (o OsLoginSshPublicKeyOutput) ToOsLoginSshPublicKeyOutput() OsLoginSshPublicKeyOutput {
	return o
}

func (o OsLoginSshPublicKeyOutput) ToOsLoginSshPublicKeyOutputWithContext(ctx context.Context) OsLoginSshPublicKeyOutput {
	return o
}

// An expiration time in microseconds since epoch.
func (o OsLoginSshPublicKeyOutput) ExpirationTimeUsec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsLoginSshPublicKey) pulumi.StringPtrOutput { return v.ExpirationTimeUsec }).(pulumi.StringPtrOutput)
}

// The SHA-256 fingerprint of the SSH public key.
func (o OsLoginSshPublicKeyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *OsLoginSshPublicKey) pulumi.StringOutput { return v.Fingerprint }).(pulumi.StringOutput)
}

// Public key text in SSH format, defined by RFC4253 section 6.6.
func (o OsLoginSshPublicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *OsLoginSshPublicKey) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

func (o OsLoginSshPublicKeyOutput) OsLoginSshPublicKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *OsLoginSshPublicKey) pulumi.StringOutput { return v.OsLoginSshPublicKeyId }).(pulumi.StringOutput)
}

// The project ID of the Google Cloud Platform project.
func (o OsLoginSshPublicKeyOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OsLoginSshPublicKey) pulumi.StringPtrOutput { return v.Project }).(pulumi.StringPtrOutput)
}

func (o OsLoginSshPublicKeyOutput) Timeouts() OsLoginSshPublicKeyTimeoutsPtrOutput {
	return o.ApplyT(func(v *OsLoginSshPublicKey) OsLoginSshPublicKeyTimeoutsPtrOutput { return v.Timeouts }).(OsLoginSshPublicKeyTimeoutsPtrOutput)
}

// The user email.
func (o OsLoginSshPublicKeyOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v *OsLoginSshPublicKey) pulumi.StringOutput { return v.User }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OsLoginSshPublicKeyInput)(nil)).Elem(), &OsLoginSshPublicKey{})
	pulumi.RegisterOutputType(OsLoginSshPublicKeyOutput{})
}
