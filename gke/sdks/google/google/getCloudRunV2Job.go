// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCloudRunV2Job(ctx *pulumi.Context, args *LookupCloudRunV2JobArgs, opts ...pulumi.InvokeOption) (*LookupCloudRunV2JobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv LookupCloudRunV2JobResult
	err = ctx.InvokePackage("google:index/getCloudRunV2Job:getCloudRunV2Job", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudRunV2Job.
type LookupCloudRunV2JobArgs struct {
	Id       *string `pulumi:"id"`
	Location *string `pulumi:"location"`
	Name     string  `pulumi:"name"`
	Project  *string `pulumi:"project"`
}

// A collection of values returned by getCloudRunV2Job.
type LookupCloudRunV2JobResult struct {
	Annotations             map[string]string                        `pulumi:"annotations"`
	BinaryAuthorizations    []GetCloudRunV2JobBinaryAuthorization    `pulumi:"binaryAuthorizations"`
	Client                  string                                   `pulumi:"client"`
	ClientVersion           string                                   `pulumi:"clientVersion"`
	Conditions              []GetCloudRunV2JobCondition              `pulumi:"conditions"`
	CreateTime              string                                   `pulumi:"createTime"`
	Creator                 string                                   `pulumi:"creator"`
	DeleteTime              string                                   `pulumi:"deleteTime"`
	DeletionProtection      bool                                     `pulumi:"deletionProtection"`
	EffectiveAnnotations    map[string]string                        `pulumi:"effectiveAnnotations"`
	EffectiveLabels         map[string]string                        `pulumi:"effectiveLabels"`
	Etag                    string                                   `pulumi:"etag"`
	ExecutionCount          float64                                  `pulumi:"executionCount"`
	ExpireTime              string                                   `pulumi:"expireTime"`
	Generation              string                                   `pulumi:"generation"`
	Id                      string                                   `pulumi:"id"`
	Labels                  map[string]string                        `pulumi:"labels"`
	LastModifier            string                                   `pulumi:"lastModifier"`
	LatestCreatedExecutions []GetCloudRunV2JobLatestCreatedExecution `pulumi:"latestCreatedExecutions"`
	LaunchStage             string                                   `pulumi:"launchStage"`
	Location                *string                                  `pulumi:"location"`
	Name                    string                                   `pulumi:"name"`
	ObservedGeneration      string                                   `pulumi:"observedGeneration"`
	Project                 *string                                  `pulumi:"project"`
	Reconciling             bool                                     `pulumi:"reconciling"`
	Templates               []GetCloudRunV2JobTemplate               `pulumi:"templates"`
	TerminalConditions      []GetCloudRunV2JobTerminalCondition      `pulumi:"terminalConditions"`
	TerraformLabels         map[string]string                        `pulumi:"terraformLabels"`
	Uid                     string                                   `pulumi:"uid"`
	UpdateTime              string                                   `pulumi:"updateTime"`
}

func LookupCloudRunV2JobOutput(ctx *pulumi.Context, args LookupCloudRunV2JobOutputArgs, opts ...pulumi.InvokeOption) LookupCloudRunV2JobResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCloudRunV2JobResultOutput, error) {
			args := v.(LookupCloudRunV2JobArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return LookupCloudRunV2JobResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getCloudRunV2Job:getCloudRunV2Job", args, LookupCloudRunV2JobResultOutput{}, options).(LookupCloudRunV2JobResultOutput), nil
		}).(LookupCloudRunV2JobResultOutput)
}

// A collection of arguments for invoking getCloudRunV2Job.
type LookupCloudRunV2JobOutputArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Location pulumi.StringPtrInput `pulumi:"location"`
	Name     pulumi.StringInput    `pulumi:"name"`
	Project  pulumi.StringPtrInput `pulumi:"project"`
}

func (LookupCloudRunV2JobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudRunV2JobArgs)(nil)).Elem()
}

// A collection of values returned by getCloudRunV2Job.
type LookupCloudRunV2JobResultOutput struct{ *pulumi.OutputState }

func (LookupCloudRunV2JobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudRunV2JobResult)(nil)).Elem()
}

func (o LookupCloudRunV2JobResultOutput) ToLookupCloudRunV2JobResultOutput() LookupCloudRunV2JobResultOutput {
	return o
}

func (o LookupCloudRunV2JobResultOutput) ToLookupCloudRunV2JobResultOutputWithContext(ctx context.Context) LookupCloudRunV2JobResultOutput {
	return o
}

func (o LookupCloudRunV2JobResultOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) map[string]string { return v.Annotations }).(pulumi.StringMapOutput)
}

func (o LookupCloudRunV2JobResultOutput) BinaryAuthorizations() GetCloudRunV2JobBinaryAuthorizationArrayOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) []GetCloudRunV2JobBinaryAuthorization { return v.BinaryAuthorizations }).(GetCloudRunV2JobBinaryAuthorizationArrayOutput)
}

func (o LookupCloudRunV2JobResultOutput) Client() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.Client }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) ClientVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.ClientVersion }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) Conditions() GetCloudRunV2JobConditionArrayOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) []GetCloudRunV2JobCondition { return v.Conditions }).(GetCloudRunV2JobConditionArrayOutput)
}

func (o LookupCloudRunV2JobResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) Creator() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.Creator }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) DeleteTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.DeleteTime }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

func (o LookupCloudRunV2JobResultOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) map[string]string { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

func (o LookupCloudRunV2JobResultOutput) EffectiveLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) map[string]string { return v.EffectiveLabels }).(pulumi.StringMapOutput)
}

func (o LookupCloudRunV2JobResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.Etag }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) ExecutionCount() pulumi.Float64Output {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) float64 { return v.ExecutionCount }).(pulumi.Float64Output)
}

func (o LookupCloudRunV2JobResultOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.ExpireTime }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.Generation }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupCloudRunV2JobResultOutput) LastModifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.LastModifier }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) LatestCreatedExecutions() GetCloudRunV2JobLatestCreatedExecutionArrayOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) []GetCloudRunV2JobLatestCreatedExecution {
		return v.LatestCreatedExecutions
	}).(GetCloudRunV2JobLatestCreatedExecutionArrayOutput)
}

func (o LookupCloudRunV2JobResultOutput) LaunchStage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.LaunchStage }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o LookupCloudRunV2JobResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) ObservedGeneration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.ObservedGeneration }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) *string { return v.Project }).(pulumi.StringPtrOutput)
}

func (o LookupCloudRunV2JobResultOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) bool { return v.Reconciling }).(pulumi.BoolOutput)
}

func (o LookupCloudRunV2JobResultOutput) Templates() GetCloudRunV2JobTemplateArrayOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) []GetCloudRunV2JobTemplate { return v.Templates }).(GetCloudRunV2JobTemplateArrayOutput)
}

func (o LookupCloudRunV2JobResultOutput) TerminalConditions() GetCloudRunV2JobTerminalConditionArrayOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) []GetCloudRunV2JobTerminalCondition { return v.TerminalConditions }).(GetCloudRunV2JobTerminalConditionArrayOutput)
}

func (o LookupCloudRunV2JobResultOutput) TerraformLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) map[string]string { return v.TerraformLabels }).(pulumi.StringMapOutput)
}

func (o LookupCloudRunV2JobResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.Uid }).(pulumi.StringOutput)
}

func (o LookupCloudRunV2JobResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudRunV2JobResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudRunV2JobResultOutput{})
}
