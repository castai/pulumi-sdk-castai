// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PubsubTopicIamBinding struct {
	pulumi.CustomResourceState

	Condition               PubsubTopicIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                    pulumi.StringOutput                     `pulumi:"etag"`
	Members                 pulumi.StringArrayOutput                `pulumi:"members"`
	Project                 pulumi.StringOutput                     `pulumi:"project"`
	PubsubTopicIamBindingId pulumi.StringOutput                     `pulumi:"pubsubTopicIamBindingId"`
	Role                    pulumi.StringOutput                     `pulumi:"role"`
	Topic                   pulumi.StringOutput                     `pulumi:"topic"`
}

// NewPubsubTopicIamBinding registers a new resource with the given unique name, arguments, and options.
func NewPubsubTopicIamBinding(ctx *pulumi.Context,
	name string, args *PubsubTopicIamBindingArgs, opts ...pulumi.ResourceOption) (*PubsubTopicIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Topic == nil {
		return nil, errors.New("invalid value for required argument 'Topic'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource PubsubTopicIamBinding
	err = ctx.RegisterPackageResource("google:index/pubsubTopicIamBinding:PubsubTopicIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPubsubTopicIamBinding gets an existing PubsubTopicIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPubsubTopicIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PubsubTopicIamBindingState, opts ...pulumi.ResourceOption) (*PubsubTopicIamBinding, error) {
	var resource PubsubTopicIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/pubsubTopicIamBinding:PubsubTopicIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PubsubTopicIamBinding resources.
type pubsubTopicIamBindingState struct {
	Condition               *PubsubTopicIamBindingCondition `pulumi:"condition"`
	Etag                    *string                         `pulumi:"etag"`
	Members                 []string                        `pulumi:"members"`
	Project                 *string                         `pulumi:"project"`
	PubsubTopicIamBindingId *string                         `pulumi:"pubsubTopicIamBindingId"`
	Role                    *string                         `pulumi:"role"`
	Topic                   *string                         `pulumi:"topic"`
}

type PubsubTopicIamBindingState struct {
	Condition               PubsubTopicIamBindingConditionPtrInput
	Etag                    pulumi.StringPtrInput
	Members                 pulumi.StringArrayInput
	Project                 pulumi.StringPtrInput
	PubsubTopicIamBindingId pulumi.StringPtrInput
	Role                    pulumi.StringPtrInput
	Topic                   pulumi.StringPtrInput
}

func (PubsubTopicIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubTopicIamBindingState)(nil)).Elem()
}

type pubsubTopicIamBindingArgs struct {
	Condition               *PubsubTopicIamBindingCondition `pulumi:"condition"`
	Members                 []string                        `pulumi:"members"`
	Project                 *string                         `pulumi:"project"`
	PubsubTopicIamBindingId *string                         `pulumi:"pubsubTopicIamBindingId"`
	Role                    string                          `pulumi:"role"`
	Topic                   string                          `pulumi:"topic"`
}

// The set of arguments for constructing a PubsubTopicIamBinding resource.
type PubsubTopicIamBindingArgs struct {
	Condition               PubsubTopicIamBindingConditionPtrInput
	Members                 pulumi.StringArrayInput
	Project                 pulumi.StringPtrInput
	PubsubTopicIamBindingId pulumi.StringPtrInput
	Role                    pulumi.StringInput
	Topic                   pulumi.StringInput
}

func (PubsubTopicIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*pubsubTopicIamBindingArgs)(nil)).Elem()
}

type PubsubTopicIamBindingInput interface {
	pulumi.Input

	ToPubsubTopicIamBindingOutput() PubsubTopicIamBindingOutput
	ToPubsubTopicIamBindingOutputWithContext(ctx context.Context) PubsubTopicIamBindingOutput
}

func (*PubsubTopicIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubTopicIamBinding)(nil)).Elem()
}

func (i *PubsubTopicIamBinding) ToPubsubTopicIamBindingOutput() PubsubTopicIamBindingOutput {
	return i.ToPubsubTopicIamBindingOutputWithContext(context.Background())
}

func (i *PubsubTopicIamBinding) ToPubsubTopicIamBindingOutputWithContext(ctx context.Context) PubsubTopicIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PubsubTopicIamBindingOutput)
}

type PubsubTopicIamBindingOutput struct{ *pulumi.OutputState }

func (PubsubTopicIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PubsubTopicIamBinding)(nil)).Elem()
}

func (o PubsubTopicIamBindingOutput) ToPubsubTopicIamBindingOutput() PubsubTopicIamBindingOutput {
	return o
}

func (o PubsubTopicIamBindingOutput) ToPubsubTopicIamBindingOutputWithContext(ctx context.Context) PubsubTopicIamBindingOutput {
	return o
}

func (o PubsubTopicIamBindingOutput) Condition() PubsubTopicIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *PubsubTopicIamBinding) PubsubTopicIamBindingConditionPtrOutput { return v.Condition }).(PubsubTopicIamBindingConditionPtrOutput)
}

func (o PubsubTopicIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubTopicIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o PubsubTopicIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PubsubTopicIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o PubsubTopicIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubTopicIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o PubsubTopicIamBindingOutput) PubsubTopicIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubTopicIamBinding) pulumi.StringOutput { return v.PubsubTopicIamBindingId }).(pulumi.StringOutput)
}

func (o PubsubTopicIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubTopicIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o PubsubTopicIamBindingOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v *PubsubTopicIamBinding) pulumi.StringOutput { return v.Topic }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PubsubTopicIamBindingInput)(nil)).Elem(), &PubsubTopicIamBinding{})
	pulumi.RegisterOutputType(PubsubTopicIamBindingOutput{})
}
