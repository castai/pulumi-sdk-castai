// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataCatalogEntryGroupIamPolicy struct {
	pulumi.CustomResourceState

	DataCatalogEntryGroupIamPolicyId pulumi.StringOutput `pulumi:"dataCatalogEntryGroupIamPolicyId"`
	EntryGroup                       pulumi.StringOutput `pulumi:"entryGroup"`
	Etag                             pulumi.StringOutput `pulumi:"etag"`
	PolicyData                       pulumi.StringOutput `pulumi:"policyData"`
	Project                          pulumi.StringOutput `pulumi:"project"`
	Region                           pulumi.StringOutput `pulumi:"region"`
}

// NewDataCatalogEntryGroupIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewDataCatalogEntryGroupIamPolicy(ctx *pulumi.Context,
	name string, args *DataCatalogEntryGroupIamPolicyArgs, opts ...pulumi.ResourceOption) (*DataCatalogEntryGroupIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntryGroup == nil {
		return nil, errors.New("invalid value for required argument 'EntryGroup'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource DataCatalogEntryGroupIamPolicy
	err = ctx.RegisterPackageResource("google:index/dataCatalogEntryGroupIamPolicy:DataCatalogEntryGroupIamPolicy", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataCatalogEntryGroupIamPolicy gets an existing DataCatalogEntryGroupIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataCatalogEntryGroupIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataCatalogEntryGroupIamPolicyState, opts ...pulumi.ResourceOption) (*DataCatalogEntryGroupIamPolicy, error) {
	var resource DataCatalogEntryGroupIamPolicy
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/dataCatalogEntryGroupIamPolicy:DataCatalogEntryGroupIamPolicy", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataCatalogEntryGroupIamPolicy resources.
type dataCatalogEntryGroupIamPolicyState struct {
	DataCatalogEntryGroupIamPolicyId *string `pulumi:"dataCatalogEntryGroupIamPolicyId"`
	EntryGroup                       *string `pulumi:"entryGroup"`
	Etag                             *string `pulumi:"etag"`
	PolicyData                       *string `pulumi:"policyData"`
	Project                          *string `pulumi:"project"`
	Region                           *string `pulumi:"region"`
}

type DataCatalogEntryGroupIamPolicyState struct {
	DataCatalogEntryGroupIamPolicyId pulumi.StringPtrInput
	EntryGroup                       pulumi.StringPtrInput
	Etag                             pulumi.StringPtrInput
	PolicyData                       pulumi.StringPtrInput
	Project                          pulumi.StringPtrInput
	Region                           pulumi.StringPtrInput
}

func (DataCatalogEntryGroupIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogEntryGroupIamPolicyState)(nil)).Elem()
}

type dataCatalogEntryGroupIamPolicyArgs struct {
	DataCatalogEntryGroupIamPolicyId *string `pulumi:"dataCatalogEntryGroupIamPolicyId"`
	EntryGroup                       string  `pulumi:"entryGroup"`
	PolicyData                       string  `pulumi:"policyData"`
	Project                          *string `pulumi:"project"`
	Region                           *string `pulumi:"region"`
}

// The set of arguments for constructing a DataCatalogEntryGroupIamPolicy resource.
type DataCatalogEntryGroupIamPolicyArgs struct {
	DataCatalogEntryGroupIamPolicyId pulumi.StringPtrInput
	EntryGroup                       pulumi.StringInput
	PolicyData                       pulumi.StringInput
	Project                          pulumi.StringPtrInput
	Region                           pulumi.StringPtrInput
}

func (DataCatalogEntryGroupIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataCatalogEntryGroupIamPolicyArgs)(nil)).Elem()
}

type DataCatalogEntryGroupIamPolicyInput interface {
	pulumi.Input

	ToDataCatalogEntryGroupIamPolicyOutput() DataCatalogEntryGroupIamPolicyOutput
	ToDataCatalogEntryGroupIamPolicyOutputWithContext(ctx context.Context) DataCatalogEntryGroupIamPolicyOutput
}

func (*DataCatalogEntryGroupIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogEntryGroupIamPolicy)(nil)).Elem()
}

func (i *DataCatalogEntryGroupIamPolicy) ToDataCatalogEntryGroupIamPolicyOutput() DataCatalogEntryGroupIamPolicyOutput {
	return i.ToDataCatalogEntryGroupIamPolicyOutputWithContext(context.Background())
}

func (i *DataCatalogEntryGroupIamPolicy) ToDataCatalogEntryGroupIamPolicyOutputWithContext(ctx context.Context) DataCatalogEntryGroupIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataCatalogEntryGroupIamPolicyOutput)
}

type DataCatalogEntryGroupIamPolicyOutput struct{ *pulumi.OutputState }

func (DataCatalogEntryGroupIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataCatalogEntryGroupIamPolicy)(nil)).Elem()
}

func (o DataCatalogEntryGroupIamPolicyOutput) ToDataCatalogEntryGroupIamPolicyOutput() DataCatalogEntryGroupIamPolicyOutput {
	return o
}

func (o DataCatalogEntryGroupIamPolicyOutput) ToDataCatalogEntryGroupIamPolicyOutputWithContext(ctx context.Context) DataCatalogEntryGroupIamPolicyOutput {
	return o
}

func (o DataCatalogEntryGroupIamPolicyOutput) DataCatalogEntryGroupIamPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroupIamPolicy) pulumi.StringOutput { return v.DataCatalogEntryGroupIamPolicyId }).(pulumi.StringOutput)
}

func (o DataCatalogEntryGroupIamPolicyOutput) EntryGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroupIamPolicy) pulumi.StringOutput { return v.EntryGroup }).(pulumi.StringOutput)
}

func (o DataCatalogEntryGroupIamPolicyOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroupIamPolicy) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o DataCatalogEntryGroupIamPolicyOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroupIamPolicy) pulumi.StringOutput { return v.PolicyData }).(pulumi.StringOutput)
}

func (o DataCatalogEntryGroupIamPolicyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroupIamPolicy) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o DataCatalogEntryGroupIamPolicyOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DataCatalogEntryGroupIamPolicy) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataCatalogEntryGroupIamPolicyInput)(nil)).Elem(), &DataCatalogEntryGroupIamPolicy{})
	pulumi.RegisterOutputType(DataCatalogEntryGroupIamPolicyOutput{})
}
