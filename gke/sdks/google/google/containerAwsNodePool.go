// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContainerAwsNodePool struct {
	pulumi.CustomResourceState

	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapOutput `pulumi:"annotations"`
	// Autoscaler configuration for this node pool.
	Autoscaling ContainerAwsNodePoolAutoscalingOutput `pulumi:"autoscaling"`
	// The awsCluster for the resource
	Cluster pulumi.StringOutput `pulumi:"cluster"`
	// The configuration of the node pool.
	Config                 ContainerAwsNodePoolConfigOutput `pulumi:"config"`
	ContainerAwsNodePoolId pulumi.StringOutput              `pulumi:"containerAwsNodePoolId"`
	// Output only. The time at which this node pool was created.
	CreateTime           pulumi.StringOutput    `pulumi:"createTime"`
	EffectiveAnnotations pulumi.StringMapOutput `pulumi:"effectiveAnnotations"`
	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
	// and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The kubelet configuration for the node pool.
	KubeletConfig ContainerAwsNodePoolKubeletConfigPtrOutput `pulumi:"kubeletConfig"`
	// The location for the resource
	Location pulumi.StringOutput `pulumi:"location"`
	// The Management configuration for this node pool.
	Management ContainerAwsNodePoolManagementPtrOutput `pulumi:"management"`
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint ContainerAwsNodePoolMaxPodsConstraintOutput `pulumi:"maxPodsConstraint"`
	// The name of this resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The project for the resource
	Project pulumi.StringOutput `pulumi:"project"`
	// Output only. If set, there are currently changes in flight to the node pool.
	Reconciling pulumi.BoolOutput `pulumi:"reconciling"`
	// Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING,
	// RECONCILING, STOPPING, ERROR, DEGRADED
	State pulumi.StringOutput `pulumi:"state"`
	// The subnet where the node pool node run.
	SubnetId pulumi.StringOutput                   `pulumi:"subnetId"`
	Timeouts ContainerAwsNodePoolTimeoutsPtrOutput `pulumi:"timeouts"`
	// Output only. A globally unique identifier for the node pool.
	Uid pulumi.StringOutput `pulumi:"uid"`
	// Optional. Update settings control the speed and disruption of the node pool update.
	UpdateSettings ContainerAwsNodePoolUpdateSettingsPtrOutput `pulumi:"updateSettings"`
	// Output only. The time at which this node pool was last updated.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a
	// given Google Cloud region by calling GetAwsServerConfig.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewContainerAwsNodePool registers a new resource with the given unique name, arguments, and options.
func NewContainerAwsNodePool(ctx *pulumi.Context,
	name string, args *ContainerAwsNodePoolArgs, opts ...pulumi.ResourceOption) (*ContainerAwsNodePool, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Autoscaling == nil {
		return nil, errors.New("invalid value for required argument 'Autoscaling'")
	}
	if args.Cluster == nil {
		return nil, errors.New("invalid value for required argument 'Cluster'")
	}
	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	if args.MaxPodsConstraint == nil {
		return nil, errors.New("invalid value for required argument 'MaxPodsConstraint'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ContainerAwsNodePool
	err = ctx.RegisterPackageResource("google:index/containerAwsNodePool:ContainerAwsNodePool", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerAwsNodePool gets an existing ContainerAwsNodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerAwsNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerAwsNodePoolState, opts ...pulumi.ResourceOption) (*ContainerAwsNodePool, error) {
	var resource ContainerAwsNodePool
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/containerAwsNodePool:ContainerAwsNodePool", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerAwsNodePool resources.
type containerAwsNodePoolState struct {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Autoscaler configuration for this node pool.
	Autoscaling *ContainerAwsNodePoolAutoscaling `pulumi:"autoscaling"`
	// The awsCluster for the resource
	Cluster *string `pulumi:"cluster"`
	// The configuration of the node pool.
	Config                 *ContainerAwsNodePoolConfig `pulumi:"config"`
	ContainerAwsNodePoolId *string                     `pulumi:"containerAwsNodePoolId"`
	// Output only. The time at which this node pool was created.
	CreateTime           *string           `pulumi:"createTime"`
	EffectiveAnnotations map[string]string `pulumi:"effectiveAnnotations"`
	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
	// and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `pulumi:"etag"`
	// The kubelet configuration for the node pool.
	KubeletConfig *ContainerAwsNodePoolKubeletConfig `pulumi:"kubeletConfig"`
	// The location for the resource
	Location *string `pulumi:"location"`
	// The Management configuration for this node pool.
	Management *ContainerAwsNodePoolManagement `pulumi:"management"`
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint *ContainerAwsNodePoolMaxPodsConstraint `pulumi:"maxPodsConstraint"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// Output only. If set, there are currently changes in flight to the node pool.
	Reconciling *bool `pulumi:"reconciling"`
	// Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING,
	// RECONCILING, STOPPING, ERROR, DEGRADED
	State *string `pulumi:"state"`
	// The subnet where the node pool node run.
	SubnetId *string                       `pulumi:"subnetId"`
	Timeouts *ContainerAwsNodePoolTimeouts `pulumi:"timeouts"`
	// Output only. A globally unique identifier for the node pool.
	Uid *string `pulumi:"uid"`
	// Optional. Update settings control the speed and disruption of the node pool update.
	UpdateSettings *ContainerAwsNodePoolUpdateSettings `pulumi:"updateSettings"`
	// Output only. The time at which this node pool was last updated.
	UpdateTime *string `pulumi:"updateTime"`
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a
	// given Google Cloud region by calling GetAwsServerConfig.
	Version *string `pulumi:"version"`
}

type ContainerAwsNodePoolState struct {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Autoscaler configuration for this node pool.
	Autoscaling ContainerAwsNodePoolAutoscalingPtrInput
	// The awsCluster for the resource
	Cluster pulumi.StringPtrInput
	// The configuration of the node pool.
	Config                 ContainerAwsNodePoolConfigPtrInput
	ContainerAwsNodePoolId pulumi.StringPtrInput
	// Output only. The time at which this node pool was created.
	CreateTime           pulumi.StringPtrInput
	EffectiveAnnotations pulumi.StringMapInput
	// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
	// and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag pulumi.StringPtrInput
	// The kubelet configuration for the node pool.
	KubeletConfig ContainerAwsNodePoolKubeletConfigPtrInput
	// The location for the resource
	Location pulumi.StringPtrInput
	// The Management configuration for this node pool.
	Management ContainerAwsNodePoolManagementPtrInput
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint ContainerAwsNodePoolMaxPodsConstraintPtrInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// Output only. If set, there are currently changes in flight to the node pool.
	Reconciling pulumi.BoolPtrInput
	// Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING,
	// RECONCILING, STOPPING, ERROR, DEGRADED
	State pulumi.StringPtrInput
	// The subnet where the node pool node run.
	SubnetId pulumi.StringPtrInput
	Timeouts ContainerAwsNodePoolTimeoutsPtrInput
	// Output only. A globally unique identifier for the node pool.
	Uid pulumi.StringPtrInput
	// Optional. Update settings control the speed and disruption of the node pool update.
	UpdateSettings ContainerAwsNodePoolUpdateSettingsPtrInput
	// Output only. The time at which this node pool was last updated.
	UpdateTime pulumi.StringPtrInput
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a
	// given Google Cloud region by calling GetAwsServerConfig.
	Version pulumi.StringPtrInput
}

func (ContainerAwsNodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAwsNodePoolState)(nil)).Elem()
}

type containerAwsNodePoolArgs struct {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations map[string]string `pulumi:"annotations"`
	// Autoscaler configuration for this node pool.
	Autoscaling ContainerAwsNodePoolAutoscaling `pulumi:"autoscaling"`
	// The awsCluster for the resource
	Cluster string `pulumi:"cluster"`
	// The configuration of the node pool.
	Config                 ContainerAwsNodePoolConfig `pulumi:"config"`
	ContainerAwsNodePoolId *string                    `pulumi:"containerAwsNodePoolId"`
	// The kubelet configuration for the node pool.
	KubeletConfig *ContainerAwsNodePoolKubeletConfig `pulumi:"kubeletConfig"`
	// The location for the resource
	Location string `pulumi:"location"`
	// The Management configuration for this node pool.
	Management *ContainerAwsNodePoolManagement `pulumi:"management"`
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint ContainerAwsNodePoolMaxPodsConstraint `pulumi:"maxPodsConstraint"`
	// The name of this resource.
	Name *string `pulumi:"name"`
	// The project for the resource
	Project *string `pulumi:"project"`
	// The subnet where the node pool node run.
	SubnetId string                        `pulumi:"subnetId"`
	Timeouts *ContainerAwsNodePoolTimeouts `pulumi:"timeouts"`
	// Optional. Update settings control the speed and disruption of the node pool update.
	UpdateSettings *ContainerAwsNodePoolUpdateSettings `pulumi:"updateSettings"`
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a
	// given Google Cloud region by calling GetAwsServerConfig.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a ContainerAwsNodePool resource.
type ContainerAwsNodePoolArgs struct {
	// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size
	// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
	// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
	// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
	// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
	// `effective_annotations` for all of the annotations present on the resource.
	Annotations pulumi.StringMapInput
	// Autoscaler configuration for this node pool.
	Autoscaling ContainerAwsNodePoolAutoscalingInput
	// The awsCluster for the resource
	Cluster pulumi.StringInput
	// The configuration of the node pool.
	Config                 ContainerAwsNodePoolConfigInput
	ContainerAwsNodePoolId pulumi.StringPtrInput
	// The kubelet configuration for the node pool.
	KubeletConfig ContainerAwsNodePoolKubeletConfigPtrInput
	// The location for the resource
	Location pulumi.StringInput
	// The Management configuration for this node pool.
	Management ContainerAwsNodePoolManagementPtrInput
	// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
	MaxPodsConstraint ContainerAwsNodePoolMaxPodsConstraintInput
	// The name of this resource.
	Name pulumi.StringPtrInput
	// The project for the resource
	Project pulumi.StringPtrInput
	// The subnet where the node pool node run.
	SubnetId pulumi.StringInput
	Timeouts ContainerAwsNodePoolTimeoutsPtrInput
	// Optional. Update settings control the speed and disruption of the node pool update.
	UpdateSettings ContainerAwsNodePoolUpdateSettingsPtrInput
	// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a
	// given Google Cloud region by calling GetAwsServerConfig.
	Version pulumi.StringInput
}

func (ContainerAwsNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerAwsNodePoolArgs)(nil)).Elem()
}

type ContainerAwsNodePoolInput interface {
	pulumi.Input

	ToContainerAwsNodePoolOutput() ContainerAwsNodePoolOutput
	ToContainerAwsNodePoolOutputWithContext(ctx context.Context) ContainerAwsNodePoolOutput
}

func (*ContainerAwsNodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerAwsNodePool)(nil)).Elem()
}

func (i *ContainerAwsNodePool) ToContainerAwsNodePoolOutput() ContainerAwsNodePoolOutput {
	return i.ToContainerAwsNodePoolOutputWithContext(context.Background())
}

func (i *ContainerAwsNodePool) ToContainerAwsNodePoolOutputWithContext(ctx context.Context) ContainerAwsNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerAwsNodePoolOutput)
}

type ContainerAwsNodePoolOutput struct{ *pulumi.OutputState }

func (ContainerAwsNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerAwsNodePool)(nil)).Elem()
}

func (o ContainerAwsNodePoolOutput) ToContainerAwsNodePoolOutput() ContainerAwsNodePoolOutput {
	return o
}

func (o ContainerAwsNodePoolOutput) ToContainerAwsNodePoolOutputWithContext(ctx context.Context) ContainerAwsNodePoolOutput {
	return o
}

// Optional. Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size
// of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required),
// separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with
// alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between. **Note**: This field is
// non-authoritative, and will only manage the annotations present in your configuration. Please refer to the field
// `effective_annotations` for all of the annotations present on the resource.
func (o ContainerAwsNodePoolOutput) Annotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringMapOutput { return v.Annotations }).(pulumi.StringMapOutput)
}

// Autoscaler configuration for this node pool.
func (o ContainerAwsNodePoolOutput) Autoscaling() ContainerAwsNodePoolAutoscalingOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) ContainerAwsNodePoolAutoscalingOutput { return v.Autoscaling }).(ContainerAwsNodePoolAutoscalingOutput)
}

// The awsCluster for the resource
func (o ContainerAwsNodePoolOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.Cluster }).(pulumi.StringOutput)
}

// The configuration of the node pool.
func (o ContainerAwsNodePoolOutput) Config() ContainerAwsNodePoolConfigOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) ContainerAwsNodePoolConfigOutput { return v.Config }).(ContainerAwsNodePoolConfigOutput)
}

func (o ContainerAwsNodePoolOutput) ContainerAwsNodePoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.ContainerAwsNodePoolId }).(pulumi.StringOutput)
}

// Output only. The time at which this node pool was created.
func (o ContainerAwsNodePoolOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

func (o ContainerAwsNodePoolOutput) EffectiveAnnotations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringMapOutput { return v.EffectiveAnnotations }).(pulumi.StringMapOutput)
}

// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
// and delete requests to ensure the client has an up-to-date value before proceeding.
func (o ContainerAwsNodePoolOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

// The kubelet configuration for the node pool.
func (o ContainerAwsNodePoolOutput) KubeletConfig() ContainerAwsNodePoolKubeletConfigPtrOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) ContainerAwsNodePoolKubeletConfigPtrOutput { return v.KubeletConfig }).(ContainerAwsNodePoolKubeletConfigPtrOutput)
}

// The location for the resource
func (o ContainerAwsNodePoolOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.Location }).(pulumi.StringOutput)
}

// The Management configuration for this node pool.
func (o ContainerAwsNodePoolOutput) Management() ContainerAwsNodePoolManagementPtrOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) ContainerAwsNodePoolManagementPtrOutput { return v.Management }).(ContainerAwsNodePoolManagementPtrOutput)
}

// The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.
func (o ContainerAwsNodePoolOutput) MaxPodsConstraint() ContainerAwsNodePoolMaxPodsConstraintOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) ContainerAwsNodePoolMaxPodsConstraintOutput { return v.MaxPodsConstraint }).(ContainerAwsNodePoolMaxPodsConstraintOutput)
}

// The name of this resource.
func (o ContainerAwsNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The project for the resource
func (o ContainerAwsNodePoolOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Output only. If set, there are currently changes in flight to the node pool.
func (o ContainerAwsNodePoolOutput) Reconciling() pulumi.BoolOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.BoolOutput { return v.Reconciling }).(pulumi.BoolOutput)
}

// Output only. The lifecycle state of the node pool. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING,
// RECONCILING, STOPPING, ERROR, DEGRADED
func (o ContainerAwsNodePoolOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The subnet where the node pool node run.
func (o ContainerAwsNodePoolOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o ContainerAwsNodePoolOutput) Timeouts() ContainerAwsNodePoolTimeoutsPtrOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) ContainerAwsNodePoolTimeoutsPtrOutput { return v.Timeouts }).(ContainerAwsNodePoolTimeoutsPtrOutput)
}

// Output only. A globally unique identifier for the node pool.
func (o ContainerAwsNodePoolOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.Uid }).(pulumi.StringOutput)
}

// Optional. Update settings control the speed and disruption of the node pool update.
func (o ContainerAwsNodePoolOutput) UpdateSettings() ContainerAwsNodePoolUpdateSettingsPtrOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) ContainerAwsNodePoolUpdateSettingsPtrOutput { return v.UpdateSettings }).(ContainerAwsNodePoolUpdateSettingsPtrOutput)
}

// Output only. The time at which this node pool was last updated.
func (o ContainerAwsNodePoolOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// The Kubernetes version to run on this node pool (e.g. `1.19.10-gke.1000`). You can list all supported versions on a
// given Google Cloud region by calling GetAwsServerConfig.
func (o ContainerAwsNodePoolOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerAwsNodePool) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerAwsNodePoolInput)(nil)).Elem(), &ContainerAwsNodePool{})
	pulumi.RegisterOutputType(ContainerAwsNodePoolOutput{})
}
