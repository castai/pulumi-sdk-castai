// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetContainerAttachedVersions(ctx *pulumi.Context, args *GetContainerAttachedVersionsArgs, opts ...pulumi.InvokeOption) (*GetContainerAttachedVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var rv GetContainerAttachedVersionsResult
	err = ctx.InvokePackage("google:index/getContainerAttachedVersions:getContainerAttachedVersions", args, &rv, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerAttachedVersions.
type GetContainerAttachedVersionsArgs struct {
	Id       *string `pulumi:"id"`
	Location string  `pulumi:"location"`
	Project  string  `pulumi:"project"`
}

// A collection of values returned by getContainerAttachedVersions.
type GetContainerAttachedVersionsResult struct {
	Id            string   `pulumi:"id"`
	Location      string   `pulumi:"location"`
	Project       string   `pulumi:"project"`
	ValidVersions []string `pulumi:"validVersions"`
}

func GetContainerAttachedVersionsOutput(ctx *pulumi.Context, args GetContainerAttachedVersionsOutputArgs, opts ...pulumi.InvokeOption) GetContainerAttachedVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetContainerAttachedVersionsResultOutput, error) {
			args := v.(GetContainerAttachedVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			ref, err := internal.PkgGetPackageRef(ctx)
			if err != nil {
				return GetContainerAttachedVersionsResultOutput{}, err
			}
			options.PackageRef = ref
			return ctx.InvokeOutput("google:index/getContainerAttachedVersions:getContainerAttachedVersions", args, GetContainerAttachedVersionsResultOutput{}, options).(GetContainerAttachedVersionsResultOutput), nil
		}).(GetContainerAttachedVersionsResultOutput)
}

// A collection of arguments for invoking getContainerAttachedVersions.
type GetContainerAttachedVersionsOutputArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Location pulumi.StringInput    `pulumi:"location"`
	Project  pulumi.StringInput    `pulumi:"project"`
}

func (GetContainerAttachedVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerAttachedVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getContainerAttachedVersions.
type GetContainerAttachedVersionsResultOutput struct{ *pulumi.OutputState }

func (GetContainerAttachedVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerAttachedVersionsResult)(nil)).Elem()
}

func (o GetContainerAttachedVersionsResultOutput) ToGetContainerAttachedVersionsResultOutput() GetContainerAttachedVersionsResultOutput {
	return o
}

func (o GetContainerAttachedVersionsResultOutput) ToGetContainerAttachedVersionsResultOutputWithContext(ctx context.Context) GetContainerAttachedVersionsResultOutput {
	return o
}

func (o GetContainerAttachedVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerAttachedVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetContainerAttachedVersionsResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerAttachedVersionsResult) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetContainerAttachedVersionsResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v GetContainerAttachedVersionsResult) string { return v.Project }).(pulumi.StringOutput)
}

func (o GetContainerAttachedVersionsResultOutput) ValidVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetContainerAttachedVersionsResult) []string { return v.ValidVersions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetContainerAttachedVersionsResultOutput{})
}
