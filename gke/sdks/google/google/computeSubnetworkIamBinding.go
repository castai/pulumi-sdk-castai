// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package google

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/google/v6/google/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComputeSubnetworkIamBinding struct {
	pulumi.CustomResourceState

	ComputeSubnetworkIamBindingId pulumi.StringOutput                           `pulumi:"computeSubnetworkIamBindingId"`
	Condition                     ComputeSubnetworkIamBindingConditionPtrOutput `pulumi:"condition"`
	Etag                          pulumi.StringOutput                           `pulumi:"etag"`
	Members                       pulumi.StringArrayOutput                      `pulumi:"members"`
	Project                       pulumi.StringOutput                           `pulumi:"project"`
	Region                        pulumi.StringOutput                           `pulumi:"region"`
	Role                          pulumi.StringOutput                           `pulumi:"role"`
	Subnetwork                    pulumi.StringOutput                           `pulumi:"subnetwork"`
}

// NewComputeSubnetworkIamBinding registers a new resource with the given unique name, arguments, and options.
func NewComputeSubnetworkIamBinding(ctx *pulumi.Context,
	name string, args *ComputeSubnetworkIamBindingArgs, opts ...pulumi.ResourceOption) (*ComputeSubnetworkIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Subnetwork == nil {
		return nil, errors.New("invalid value for required argument 'Subnetwork'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ComputeSubnetworkIamBinding
	err = ctx.RegisterPackageResource("google:index/computeSubnetworkIamBinding:ComputeSubnetworkIamBinding", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeSubnetworkIamBinding gets an existing ComputeSubnetworkIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeSubnetworkIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeSubnetworkIamBindingState, opts ...pulumi.ResourceOption) (*ComputeSubnetworkIamBinding, error) {
	var resource ComputeSubnetworkIamBinding
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("google:index/computeSubnetworkIamBinding:ComputeSubnetworkIamBinding", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeSubnetworkIamBinding resources.
type computeSubnetworkIamBindingState struct {
	ComputeSubnetworkIamBindingId *string                               `pulumi:"computeSubnetworkIamBindingId"`
	Condition                     *ComputeSubnetworkIamBindingCondition `pulumi:"condition"`
	Etag                          *string                               `pulumi:"etag"`
	Members                       []string                              `pulumi:"members"`
	Project                       *string                               `pulumi:"project"`
	Region                        *string                               `pulumi:"region"`
	Role                          *string                               `pulumi:"role"`
	Subnetwork                    *string                               `pulumi:"subnetwork"`
}

type ComputeSubnetworkIamBindingState struct {
	ComputeSubnetworkIamBindingId pulumi.StringPtrInput
	Condition                     ComputeSubnetworkIamBindingConditionPtrInput
	Etag                          pulumi.StringPtrInput
	Members                       pulumi.StringArrayInput
	Project                       pulumi.StringPtrInput
	Region                        pulumi.StringPtrInput
	Role                          pulumi.StringPtrInput
	Subnetwork                    pulumi.StringPtrInput
}

func (ComputeSubnetworkIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSubnetworkIamBindingState)(nil)).Elem()
}

type computeSubnetworkIamBindingArgs struct {
	ComputeSubnetworkIamBindingId *string                               `pulumi:"computeSubnetworkIamBindingId"`
	Condition                     *ComputeSubnetworkIamBindingCondition `pulumi:"condition"`
	Members                       []string                              `pulumi:"members"`
	Project                       *string                               `pulumi:"project"`
	Region                        *string                               `pulumi:"region"`
	Role                          string                                `pulumi:"role"`
	Subnetwork                    string                                `pulumi:"subnetwork"`
}

// The set of arguments for constructing a ComputeSubnetworkIamBinding resource.
type ComputeSubnetworkIamBindingArgs struct {
	ComputeSubnetworkIamBindingId pulumi.StringPtrInput
	Condition                     ComputeSubnetworkIamBindingConditionPtrInput
	Members                       pulumi.StringArrayInput
	Project                       pulumi.StringPtrInput
	Region                        pulumi.StringPtrInput
	Role                          pulumi.StringInput
	Subnetwork                    pulumi.StringInput
}

func (ComputeSubnetworkIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeSubnetworkIamBindingArgs)(nil)).Elem()
}

type ComputeSubnetworkIamBindingInput interface {
	pulumi.Input

	ToComputeSubnetworkIamBindingOutput() ComputeSubnetworkIamBindingOutput
	ToComputeSubnetworkIamBindingOutputWithContext(ctx context.Context) ComputeSubnetworkIamBindingOutput
}

func (*ComputeSubnetworkIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSubnetworkIamBinding)(nil)).Elem()
}

func (i *ComputeSubnetworkIamBinding) ToComputeSubnetworkIamBindingOutput() ComputeSubnetworkIamBindingOutput {
	return i.ToComputeSubnetworkIamBindingOutputWithContext(context.Background())
}

func (i *ComputeSubnetworkIamBinding) ToComputeSubnetworkIamBindingOutputWithContext(ctx context.Context) ComputeSubnetworkIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeSubnetworkIamBindingOutput)
}

type ComputeSubnetworkIamBindingOutput struct{ *pulumi.OutputState }

func (ComputeSubnetworkIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComputeSubnetworkIamBinding)(nil)).Elem()
}

func (o ComputeSubnetworkIamBindingOutput) ToComputeSubnetworkIamBindingOutput() ComputeSubnetworkIamBindingOutput {
	return o
}

func (o ComputeSubnetworkIamBindingOutput) ToComputeSubnetworkIamBindingOutputWithContext(ctx context.Context) ComputeSubnetworkIamBindingOutput {
	return o
}

func (o ComputeSubnetworkIamBindingOutput) ComputeSubnetworkIamBindingId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamBinding) pulumi.StringOutput { return v.ComputeSubnetworkIamBindingId }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamBindingOutput) Condition() ComputeSubnetworkIamBindingConditionPtrOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamBinding) ComputeSubnetworkIamBindingConditionPtrOutput { return v.Condition }).(ComputeSubnetworkIamBindingConditionPtrOutput)
}

func (o ComputeSubnetworkIamBindingOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamBinding) pulumi.StringOutput { return v.Etag }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

func (o ComputeSubnetworkIamBindingOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamBinding) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamBindingOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamBinding) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o ComputeSubnetworkIamBindingOutput) Subnetwork() pulumi.StringOutput {
	return o.ApplyT(func(v *ComputeSubnetworkIamBinding) pulumi.StringOutput { return v.Subnetwork }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComputeSubnetworkIamBindingInput)(nil)).Elem(), &ComputeSubnetworkIamBinding{})
	pulumi.RegisterOutputType(ComputeSubnetworkIamBindingOutput{})
}
