// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/helm/v2/helm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Experiments struct {
	// Enable full diff by storing the rendered manifest in the state. This has similar limitations as when using helm install --dry-run. See https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#install-a-crd-declaration-before-using-the-resource
	Manifest *bool `pulumi:"manifest"`
}

// ExperimentsInput is an input type that accepts ExperimentsArgs and ExperimentsOutput values.
// You can construct a concrete instance of `ExperimentsInput` via:
//
//	ExperimentsArgs{...}
type ExperimentsInput interface {
	pulumi.Input

	ToExperimentsOutput() ExperimentsOutput
	ToExperimentsOutputWithContext(context.Context) ExperimentsOutput
}

type ExperimentsArgs struct {
	// Enable full diff by storing the rendered manifest in the state. This has similar limitations as when using helm install --dry-run. See https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#install-a-crd-declaration-before-using-the-resource
	Manifest pulumi.BoolPtrInput `pulumi:"manifest"`
}

func (ExperimentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (i ExperimentsArgs) ToExperimentsOutput() ExperimentsOutput {
	return i.ToExperimentsOutputWithContext(context.Background())
}

func (i ExperimentsArgs) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExperimentsOutput)
}

type ExperimentsOutput struct{ *pulumi.OutputState }

func (ExperimentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Experiments)(nil)).Elem()
}

func (o ExperimentsOutput) ToExperimentsOutput() ExperimentsOutput {
	return o
}

func (o ExperimentsOutput) ToExperimentsOutputWithContext(ctx context.Context) ExperimentsOutput {
	return o
}

// Enable full diff by storing the rendered manifest in the state. This has similar limitations as when using helm install --dry-run. See https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#install-a-crd-declaration-before-using-the-resource
func (o ExperimentsOutput) Manifest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Experiments) *bool { return v.Manifest }).(pulumi.BoolPtrOutput)
}

type Kubernetes struct {
	// PEM-encoded client certificate for TLS authentication.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// PEM-encoded client certificate key for TLS authentication.
	ClientKey *string `pulumi:"clientKey"`
	// PEM-encoded root certificates bundle for TLS authentication.
	ClusterCaCertificate  *string `pulumi:"clusterCaCertificate"`
	ConfigContext         *string `pulumi:"configContext"`
	ConfigContextAuthInfo *string `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  *string `pulumi:"configContextCluster"`
	// Path to the kube config file. Can be set with KUBE_CONFIG_PATH.
	ConfigPath *string `pulumi:"configPath"`
	// A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.
	ConfigPaths []string        `pulumi:"configPaths"`
	Exec        *KubernetesExec `pulumi:"exec"`
	// The hostname (in form of URI) of Kubernetes master.
	Host *string `pulumi:"host"`
	// Whether server should be accessed without verifying the TLS certificate.
	Insecure *bool `pulumi:"insecure"`
	// The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
	Password *string `pulumi:"password"`
	// URL to the proxy to be used for all API requests
	ProxyUrl *string `pulumi:"proxyUrl"`
	// Server name passed to the server for SNI and is used in the client to check server certificates against.
	TlsServerName *string `pulumi:"tlsServerName"`
	// Token to authenticate an service account
	Token *string `pulumi:"token"`
	// The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
	Username *string `pulumi:"username"`
}

// KubernetesInput is an input type that accepts KubernetesArgs and KubernetesOutput values.
// You can construct a concrete instance of `KubernetesInput` via:
//
//	KubernetesArgs{...}
type KubernetesInput interface {
	pulumi.Input

	ToKubernetesOutput() KubernetesOutput
	ToKubernetesOutputWithContext(context.Context) KubernetesOutput
}

type KubernetesArgs struct {
	// PEM-encoded client certificate for TLS authentication.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// PEM-encoded client certificate key for TLS authentication.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// PEM-encoded root certificates bundle for TLS authentication.
	ClusterCaCertificate  pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	ConfigContext         pulumi.StringPtrInput `pulumi:"configContext"`
	ConfigContextAuthInfo pulumi.StringPtrInput `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  pulumi.StringPtrInput `pulumi:"configContextCluster"`
	// Path to the kube config file. Can be set with KUBE_CONFIG_PATH.
	ConfigPath pulumi.StringPtrInput `pulumi:"configPath"`
	// A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.
	ConfigPaths pulumi.StringArrayInput `pulumi:"configPaths"`
	Exec        KubernetesExecPtrInput  `pulumi:"exec"`
	// The hostname (in form of URI) of Kubernetes master.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Whether server should be accessed without verifying the TLS certificate.
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// URL to the proxy to be used for all API requests
	ProxyUrl pulumi.StringPtrInput `pulumi:"proxyUrl"`
	// Server name passed to the server for SNI and is used in the client to check server certificates against.
	TlsServerName pulumi.StringPtrInput `pulumi:"tlsServerName"`
	// Token to authenticate an service account
	Token pulumi.StringPtrInput `pulumi:"token"`
	// The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (KubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Kubernetes)(nil)).Elem()
}

func (i KubernetesArgs) ToKubernetesOutput() KubernetesOutput {
	return i.ToKubernetesOutputWithContext(context.Background())
}

func (i KubernetesArgs) ToKubernetesOutputWithContext(ctx context.Context) KubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesOutput)
}

type KubernetesOutput struct{ *pulumi.OutputState }

func (KubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Kubernetes)(nil)).Elem()
}

func (o KubernetesOutput) ToKubernetesOutput() KubernetesOutput {
	return o
}

func (o KubernetesOutput) ToKubernetesOutputWithContext(ctx context.Context) KubernetesOutput {
	return o
}

// PEM-encoded client certificate for TLS authentication.
func (o KubernetesOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM-encoded client certificate key for TLS authentication.
func (o KubernetesOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// PEM-encoded root certificates bundle for TLS authentication.
func (o KubernetesOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

func (o KubernetesOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ConfigContext }).(pulumi.StringPtrOutput)
}

func (o KubernetesOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ConfigContextAuthInfo }).(pulumi.StringPtrOutput)
}

func (o KubernetesOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ConfigContextCluster }).(pulumi.StringPtrOutput)
}

// Path to the kube config file. Can be set with KUBE_CONFIG_PATH.
func (o KubernetesOutput) ConfigPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ConfigPath }).(pulumi.StringPtrOutput)
}

// A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.
func (o KubernetesOutput) ConfigPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Kubernetes) []string { return v.ConfigPaths }).(pulumi.StringArrayOutput)
}

func (o KubernetesOutput) Exec() KubernetesExecPtrOutput {
	return o.ApplyT(func(v Kubernetes) *KubernetesExec { return v.Exec }).(KubernetesExecPtrOutput)
}

// The hostname (in form of URI) of Kubernetes master.
func (o KubernetesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Whether server should be accessed without verifying the TLS certificate.
func (o KubernetesOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Kubernetes) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o KubernetesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// URL to the proxy to be used for all API requests
func (o KubernetesOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.ProxyUrl }).(pulumi.StringPtrOutput)
}

// Server name passed to the server for SNI and is used in the client to check server certificates against.
func (o KubernetesOutput) TlsServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.TlsServerName }).(pulumi.StringPtrOutput)
}

// Token to authenticate an service account
func (o KubernetesOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o KubernetesOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Kubernetes) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type KubernetesExec struct {
	ApiVersion string            `pulumi:"apiVersion"`
	Args       []string          `pulumi:"args"`
	Command    string            `pulumi:"command"`
	Env        map[string]string `pulumi:"env"`
}

// KubernetesExecInput is an input type that accepts KubernetesExecArgs and KubernetesExecOutput values.
// You can construct a concrete instance of `KubernetesExecInput` via:
//
//	KubernetesExecArgs{...}
type KubernetesExecInput interface {
	pulumi.Input

	ToKubernetesExecOutput() KubernetesExecOutput
	ToKubernetesExecOutputWithContext(context.Context) KubernetesExecOutput
}

type KubernetesExecArgs struct {
	ApiVersion pulumi.StringInput      `pulumi:"apiVersion"`
	Args       pulumi.StringArrayInput `pulumi:"args"`
	Command    pulumi.StringInput      `pulumi:"command"`
	Env        pulumi.StringMapInput   `pulumi:"env"`
}

func (KubernetesExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesExec)(nil)).Elem()
}

func (i KubernetesExecArgs) ToKubernetesExecOutput() KubernetesExecOutput {
	return i.ToKubernetesExecOutputWithContext(context.Background())
}

func (i KubernetesExecArgs) ToKubernetesExecOutputWithContext(ctx context.Context) KubernetesExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesExecOutput)
}

func (i KubernetesExecArgs) ToKubernetesExecPtrOutput() KubernetesExecPtrOutput {
	return i.ToKubernetesExecPtrOutputWithContext(context.Background())
}

func (i KubernetesExecArgs) ToKubernetesExecPtrOutputWithContext(ctx context.Context) KubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesExecOutput).ToKubernetesExecPtrOutputWithContext(ctx)
}

// KubernetesExecPtrInput is an input type that accepts KubernetesExecArgs, KubernetesExecPtr and KubernetesExecPtrOutput values.
// You can construct a concrete instance of `KubernetesExecPtrInput` via:
//
//	        KubernetesExecArgs{...}
//
//	or:
//
//	        nil
type KubernetesExecPtrInput interface {
	pulumi.Input

	ToKubernetesExecPtrOutput() KubernetesExecPtrOutput
	ToKubernetesExecPtrOutputWithContext(context.Context) KubernetesExecPtrOutput
}

type kubernetesExecPtrType KubernetesExecArgs

func KubernetesExecPtr(v *KubernetesExecArgs) KubernetesExecPtrInput {
	return (*kubernetesExecPtrType)(v)
}

func (*kubernetesExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesExec)(nil)).Elem()
}

func (i *kubernetesExecPtrType) ToKubernetesExecPtrOutput() KubernetesExecPtrOutput {
	return i.ToKubernetesExecPtrOutputWithContext(context.Background())
}

func (i *kubernetesExecPtrType) ToKubernetesExecPtrOutputWithContext(ctx context.Context) KubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesExecPtrOutput)
}

type KubernetesExecOutput struct{ *pulumi.OutputState }

func (KubernetesExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesExec)(nil)).Elem()
}

func (o KubernetesExecOutput) ToKubernetesExecOutput() KubernetesExecOutput {
	return o
}

func (o KubernetesExecOutput) ToKubernetesExecOutputWithContext(ctx context.Context) KubernetesExecOutput {
	return o
}

func (o KubernetesExecOutput) ToKubernetesExecPtrOutput() KubernetesExecPtrOutput {
	return o.ToKubernetesExecPtrOutputWithContext(context.Background())
}

func (o KubernetesExecOutput) ToKubernetesExecPtrOutputWithContext(ctx context.Context) KubernetesExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesExec) *KubernetesExec {
		return &v
	}).(KubernetesExecPtrOutput)
}

func (o KubernetesExecOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesExec) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o KubernetesExecOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesExec) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o KubernetesExecOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesExec) string { return v.Command }).(pulumi.StringOutput)
}

func (o KubernetesExecOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesExec) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

type KubernetesExecPtrOutput struct{ *pulumi.OutputState }

func (KubernetesExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesExec)(nil)).Elem()
}

func (o KubernetesExecPtrOutput) ToKubernetesExecPtrOutput() KubernetesExecPtrOutput {
	return o
}

func (o KubernetesExecPtrOutput) ToKubernetesExecPtrOutputWithContext(ctx context.Context) KubernetesExecPtrOutput {
	return o
}

func (o KubernetesExecPtrOutput) Elem() KubernetesExecOutput {
	return o.ApplyT(func(v *KubernetesExec) KubernetesExec {
		if v != nil {
			return *v
		}
		var ret KubernetesExec
		return ret
	}).(KubernetesExecOutput)
}

func (o KubernetesExecPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o KubernetesExecPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesExec) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

func (o KubernetesExecPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

func (o KubernetesExecPtrOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesExec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Env
	}).(pulumi.StringMapOutput)
}

type Registries struct {
	// The password to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
	Password string `pulumi:"password"`
	// OCI URL in form of oci://host:port or oci://host
	Url string `pulumi:"url"`
	// The username to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
	Username string `pulumi:"username"`
}

// RegistriesInput is an input type that accepts RegistriesArgs and RegistriesOutput values.
// You can construct a concrete instance of `RegistriesInput` via:
//
//	RegistriesArgs{...}
type RegistriesInput interface {
	pulumi.Input

	ToRegistriesOutput() RegistriesOutput
	ToRegistriesOutputWithContext(context.Context) RegistriesOutput
}

type RegistriesArgs struct {
	// The password to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
	Password pulumi.StringInput `pulumi:"password"`
	// OCI URL in form of oci://host:port or oci://host
	Url pulumi.StringInput `pulumi:"url"`
	// The username to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
	Username pulumi.StringInput `pulumi:"username"`
}

func (RegistriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Registries)(nil)).Elem()
}

func (i RegistriesArgs) ToRegistriesOutput() RegistriesOutput {
	return i.ToRegistriesOutputWithContext(context.Background())
}

func (i RegistriesArgs) ToRegistriesOutputWithContext(ctx context.Context) RegistriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistriesOutput)
}

// RegistriesArrayInput is an input type that accepts RegistriesArray and RegistriesArrayOutput values.
// You can construct a concrete instance of `RegistriesArrayInput` via:
//
//	RegistriesArray{ RegistriesArgs{...} }
type RegistriesArrayInput interface {
	pulumi.Input

	ToRegistriesArrayOutput() RegistriesArrayOutput
	ToRegistriesArrayOutputWithContext(context.Context) RegistriesArrayOutput
}

type RegistriesArray []RegistriesInput

func (RegistriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Registries)(nil)).Elem()
}

func (i RegistriesArray) ToRegistriesArrayOutput() RegistriesArrayOutput {
	return i.ToRegistriesArrayOutputWithContext(context.Background())
}

func (i RegistriesArray) ToRegistriesArrayOutputWithContext(ctx context.Context) RegistriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistriesArrayOutput)
}

type RegistriesOutput struct{ *pulumi.OutputState }

func (RegistriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Registries)(nil)).Elem()
}

func (o RegistriesOutput) ToRegistriesOutput() RegistriesOutput {
	return o
}

func (o RegistriesOutput) ToRegistriesOutputWithContext(ctx context.Context) RegistriesOutput {
	return o
}

// The password to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o RegistriesOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v Registries) string { return v.Password }).(pulumi.StringOutput)
}

// OCI URL in form of oci://host:port or oci://host
func (o RegistriesOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v Registries) string { return v.Url }).(pulumi.StringOutput)
}

// The username to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o RegistriesOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v Registries) string { return v.Username }).(pulumi.StringOutput)
}

type RegistriesArrayOutput struct{ *pulumi.OutputState }

func (RegistriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Registries)(nil)).Elem()
}

func (o RegistriesArrayOutput) ToRegistriesArrayOutput() RegistriesArrayOutput {
	return o
}

func (o RegistriesArrayOutput) ToRegistriesArrayOutputWithContext(ctx context.Context) RegistriesArrayOutput {
	return o
}

func (o RegistriesArrayOutput) Index(i pulumi.IntInput) RegistriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Registries {
		return vs[0].([]Registries)[vs[1].(int)]
	}).(RegistriesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExperimentsInput)(nil)).Elem(), ExperimentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesInput)(nil)).Elem(), KubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesExecInput)(nil)).Elem(), KubernetesExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesExecPtrInput)(nil)).Elem(), KubernetesExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistriesInput)(nil)).Elem(), RegistriesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistriesArrayInput)(nil)).Elem(), RegistriesArray{})
	pulumi.RegisterOutputType(ExperimentsOutput{})
	pulumi.RegisterOutputType(KubernetesOutput{})
	pulumi.RegisterOutputType(KubernetesExecOutput{})
	pulumi.RegisterOutputType(KubernetesExecPtrOutput{})
	pulumi.RegisterOutputType(RegistriesOutput{})
	pulumi.RegisterOutputType(RegistriesArrayOutput{})
}
