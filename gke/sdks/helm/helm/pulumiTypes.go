// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package helm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/helm/v2/helm/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ProviderExperiments struct {
	// Enable full diff by storing the rendered manifest in the state. This has similar limitations as when using helm install --dry-run. See https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#install-a-crd-declaration-before-using-the-resource
	Manifest *bool `pulumi:"manifest"`
}

// ProviderExperimentsInput is an input type that accepts ProviderExperimentsArgs and ProviderExperimentsOutput values.
// You can construct a concrete instance of `ProviderExperimentsInput` via:
//
//	ProviderExperimentsArgs{...}
type ProviderExperimentsInput interface {
	pulumi.Input

	ToProviderExperimentsOutput() ProviderExperimentsOutput
	ToProviderExperimentsOutputWithContext(context.Context) ProviderExperimentsOutput
}

type ProviderExperimentsArgs struct {
	// Enable full diff by storing the rendered manifest in the state. This has similar limitations as when using helm install --dry-run. See https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#install-a-crd-declaration-before-using-the-resource
	Manifest pulumi.BoolPtrInput `pulumi:"manifest"`
}

func (ProviderExperimentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderExperiments)(nil)).Elem()
}

func (i ProviderExperimentsArgs) ToProviderExperimentsOutput() ProviderExperimentsOutput {
	return i.ToProviderExperimentsOutputWithContext(context.Background())
}

func (i ProviderExperimentsArgs) ToProviderExperimentsOutputWithContext(ctx context.Context) ProviderExperimentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderExperimentsOutput)
}

func (i ProviderExperimentsArgs) ToProviderExperimentsPtrOutput() ProviderExperimentsPtrOutput {
	return i.ToProviderExperimentsPtrOutputWithContext(context.Background())
}

func (i ProviderExperimentsArgs) ToProviderExperimentsPtrOutputWithContext(ctx context.Context) ProviderExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderExperimentsOutput).ToProviderExperimentsPtrOutputWithContext(ctx)
}

// ProviderExperimentsPtrInput is an input type that accepts ProviderExperimentsArgs, ProviderExperimentsPtr and ProviderExperimentsPtrOutput values.
// You can construct a concrete instance of `ProviderExperimentsPtrInput` via:
//
//	        ProviderExperimentsArgs{...}
//
//	or:
//
//	        nil
type ProviderExperimentsPtrInput interface {
	pulumi.Input

	ToProviderExperimentsPtrOutput() ProviderExperimentsPtrOutput
	ToProviderExperimentsPtrOutputWithContext(context.Context) ProviderExperimentsPtrOutput
}

type providerExperimentsPtrType ProviderExperimentsArgs

func ProviderExperimentsPtr(v *ProviderExperimentsArgs) ProviderExperimentsPtrInput {
	return (*providerExperimentsPtrType)(v)
}

func (*providerExperimentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderExperiments)(nil)).Elem()
}

func (i *providerExperimentsPtrType) ToProviderExperimentsPtrOutput() ProviderExperimentsPtrOutput {
	return i.ToProviderExperimentsPtrOutputWithContext(context.Background())
}

func (i *providerExperimentsPtrType) ToProviderExperimentsPtrOutputWithContext(ctx context.Context) ProviderExperimentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderExperimentsPtrOutput)
}

type ProviderExperimentsOutput struct{ *pulumi.OutputState }

func (ProviderExperimentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderExperiments)(nil)).Elem()
}

func (o ProviderExperimentsOutput) ToProviderExperimentsOutput() ProviderExperimentsOutput {
	return o
}

func (o ProviderExperimentsOutput) ToProviderExperimentsOutputWithContext(ctx context.Context) ProviderExperimentsOutput {
	return o
}

func (o ProviderExperimentsOutput) ToProviderExperimentsPtrOutput() ProviderExperimentsPtrOutput {
	return o.ToProviderExperimentsPtrOutputWithContext(context.Background())
}

func (o ProviderExperimentsOutput) ToProviderExperimentsPtrOutputWithContext(ctx context.Context) ProviderExperimentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderExperiments) *ProviderExperiments {
		return &v
	}).(ProviderExperimentsPtrOutput)
}

// Enable full diff by storing the rendered manifest in the state. This has similar limitations as when using helm install --dry-run. See https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#install-a-crd-declaration-before-using-the-resource
func (o ProviderExperimentsOutput) Manifest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderExperiments) *bool { return v.Manifest }).(pulumi.BoolPtrOutput)
}

type ProviderExperimentsPtrOutput struct{ *pulumi.OutputState }

func (ProviderExperimentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderExperiments)(nil)).Elem()
}

func (o ProviderExperimentsPtrOutput) ToProviderExperimentsPtrOutput() ProviderExperimentsPtrOutput {
	return o
}

func (o ProviderExperimentsPtrOutput) ToProviderExperimentsPtrOutputWithContext(ctx context.Context) ProviderExperimentsPtrOutput {
	return o
}

func (o ProviderExperimentsPtrOutput) Elem() ProviderExperimentsOutput {
	return o.ApplyT(func(v *ProviderExperiments) ProviderExperiments {
		if v != nil {
			return *v
		}
		var ret ProviderExperiments
		return ret
	}).(ProviderExperimentsOutput)
}

// Enable full diff by storing the rendered manifest in the state. This has similar limitations as when using helm install --dry-run. See https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#install-a-crd-declaration-before-using-the-resource
func (o ProviderExperimentsPtrOutput) Manifest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderExperiments) *bool {
		if v == nil {
			return nil
		}
		return v.Manifest
	}).(pulumi.BoolPtrOutput)
}

type ProviderKubernetes struct {
	// PEM-encoded client certificate for TLS authentication.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// PEM-encoded client certificate key for TLS authentication.
	ClientKey *string `pulumi:"clientKey"`
	// PEM-encoded root certificates bundle for TLS authentication.
	ClusterCaCertificate  *string `pulumi:"clusterCaCertificate"`
	ConfigContext         *string `pulumi:"configContext"`
	ConfigContextAuthInfo *string `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  *string `pulumi:"configContextCluster"`
	// Path to the kube config file. Can be set with KUBE_CONFIG_PATH.
	ConfigPath *string `pulumi:"configPath"`
	// A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.
	ConfigPaths []string                `pulumi:"configPaths"`
	Exec        *ProviderKubernetesExec `pulumi:"exec"`
	// The hostname (in form of URI) of Kubernetes master.
	Host *string `pulumi:"host"`
	// Whether server should be accessed without verifying the TLS certificate.
	Insecure *bool `pulumi:"insecure"`
	// The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
	Password *string `pulumi:"password"`
	// URL to the proxy to be used for all API requests
	ProxyUrl *string `pulumi:"proxyUrl"`
	// Server name passed to the server for SNI and is used in the client to check server certificates against.
	TlsServerName *string `pulumi:"tlsServerName"`
	// Token to authenticate an service account
	Token *string `pulumi:"token"`
	// The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
	Username *string `pulumi:"username"`
}

// ProviderKubernetesInput is an input type that accepts ProviderKubernetesArgs and ProviderKubernetesOutput values.
// You can construct a concrete instance of `ProviderKubernetesInput` via:
//
//	ProviderKubernetesArgs{...}
type ProviderKubernetesInput interface {
	pulumi.Input

	ToProviderKubernetesOutput() ProviderKubernetesOutput
	ToProviderKubernetesOutputWithContext(context.Context) ProviderKubernetesOutput
}

type ProviderKubernetesArgs struct {
	// PEM-encoded client certificate for TLS authentication.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// PEM-encoded client certificate key for TLS authentication.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// PEM-encoded root certificates bundle for TLS authentication.
	ClusterCaCertificate  pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	ConfigContext         pulumi.StringPtrInput `pulumi:"configContext"`
	ConfigContextAuthInfo pulumi.StringPtrInput `pulumi:"configContextAuthInfo"`
	ConfigContextCluster  pulumi.StringPtrInput `pulumi:"configContextCluster"`
	// Path to the kube config file. Can be set with KUBE_CONFIG_PATH.
	ConfigPath pulumi.StringPtrInput `pulumi:"configPath"`
	// A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.
	ConfigPaths pulumi.StringArrayInput        `pulumi:"configPaths"`
	Exec        ProviderKubernetesExecPtrInput `pulumi:"exec"`
	// The hostname (in form of URI) of Kubernetes master.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Whether server should be accessed without verifying the TLS certificate.
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// URL to the proxy to be used for all API requests
	ProxyUrl pulumi.StringPtrInput `pulumi:"proxyUrl"`
	// Server name passed to the server for SNI and is used in the client to check server certificates against.
	TlsServerName pulumi.StringPtrInput `pulumi:"tlsServerName"`
	// Token to authenticate an service account
	Token pulumi.StringPtrInput `pulumi:"token"`
	// The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ProviderKubernetesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetes)(nil)).Elem()
}

func (i ProviderKubernetesArgs) ToProviderKubernetesOutput() ProviderKubernetesOutput {
	return i.ToProviderKubernetesOutputWithContext(context.Background())
}

func (i ProviderKubernetesArgs) ToProviderKubernetesOutputWithContext(ctx context.Context) ProviderKubernetesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesOutput)
}

func (i ProviderKubernetesArgs) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return i.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i ProviderKubernetesArgs) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesOutput).ToProviderKubernetesPtrOutputWithContext(ctx)
}

// ProviderKubernetesPtrInput is an input type that accepts ProviderKubernetesArgs, ProviderKubernetesPtr and ProviderKubernetesPtrOutput values.
// You can construct a concrete instance of `ProviderKubernetesPtrInput` via:
//
//	        ProviderKubernetesArgs{...}
//
//	or:
//
//	        nil
type ProviderKubernetesPtrInput interface {
	pulumi.Input

	ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput
	ToProviderKubernetesPtrOutputWithContext(context.Context) ProviderKubernetesPtrOutput
}

type providerKubernetesPtrType ProviderKubernetesArgs

func ProviderKubernetesPtr(v *ProviderKubernetesArgs) ProviderKubernetesPtrInput {
	return (*providerKubernetesPtrType)(v)
}

func (*providerKubernetesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetes)(nil)).Elem()
}

func (i *providerKubernetesPtrType) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return i.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (i *providerKubernetesPtrType) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesPtrOutput)
}

type ProviderKubernetesOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetes)(nil)).Elem()
}

func (o ProviderKubernetesOutput) ToProviderKubernetesOutput() ProviderKubernetesOutput {
	return o
}

func (o ProviderKubernetesOutput) ToProviderKubernetesOutputWithContext(ctx context.Context) ProviderKubernetesOutput {
	return o
}

func (o ProviderKubernetesOutput) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return o.ToProviderKubernetesPtrOutputWithContext(context.Background())
}

func (o ProviderKubernetesOutput) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderKubernetes) *ProviderKubernetes {
		return &v
	}).(ProviderKubernetesPtrOutput)
}

// PEM-encoded client certificate for TLS authentication.
func (o ProviderKubernetesOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// PEM-encoded client certificate key for TLS authentication.
func (o ProviderKubernetesOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// PEM-encoded root certificates bundle for TLS authentication.
func (o ProviderKubernetesOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContext }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContextAuthInfo }).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigContextCluster }).(pulumi.StringPtrOutput)
}

// Path to the kube config file. Can be set with KUBE_CONFIG_PATH.
func (o ProviderKubernetesOutput) ConfigPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ConfigPath }).(pulumi.StringPtrOutput)
}

// A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.
func (o ProviderKubernetesOutput) ConfigPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderKubernetes) []string { return v.ConfigPaths }).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesOutput) Exec() ProviderKubernetesExecPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *ProviderKubernetesExec { return v.Exec }).(ProviderKubernetesExecPtrOutput)
}

// The hostname (in form of URI) of Kubernetes master.
func (o ProviderKubernetesOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Whether server should be accessed without verifying the TLS certificate.
func (o ProviderKubernetesOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o ProviderKubernetesOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// URL to the proxy to be used for all API requests
func (o ProviderKubernetesOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.ProxyUrl }).(pulumi.StringPtrOutput)
}

// Server name passed to the server for SNI and is used in the client to check server certificates against.
func (o ProviderKubernetesOutput) TlsServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.TlsServerName }).(pulumi.StringPtrOutput)
}

// Token to authenticate an service account
func (o ProviderKubernetesOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Token }).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o ProviderKubernetesOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderKubernetes) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderKubernetesPtrOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetes)(nil)).Elem()
}

func (o ProviderKubernetesPtrOutput) ToProviderKubernetesPtrOutput() ProviderKubernetesPtrOutput {
	return o
}

func (o ProviderKubernetesPtrOutput) ToProviderKubernetesPtrOutputWithContext(ctx context.Context) ProviderKubernetesPtrOutput {
	return o
}

func (o ProviderKubernetesPtrOutput) Elem() ProviderKubernetesOutput {
	return o.ApplyT(func(v *ProviderKubernetes) ProviderKubernetes {
		if v != nil {
			return *v
		}
		var ret ProviderKubernetes
		return ret
	}).(ProviderKubernetesOutput)
}

// PEM-encoded client certificate for TLS authentication.
func (o ProviderKubernetesPtrOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClientCertificate
	}).(pulumi.StringPtrOutput)
}

// PEM-encoded client certificate key for TLS authentication.
func (o ProviderKubernetesPtrOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClientKey
	}).(pulumi.StringPtrOutput)
}

// PEM-encoded root certificates bundle for TLS authentication.
func (o ProviderKubernetesPtrOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCaCertificate
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContext
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContextAuthInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContextAuthInfo
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesPtrOutput) ConfigContextCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigContextCluster
	}).(pulumi.StringPtrOutput)
}

// Path to the kube config file. Can be set with KUBE_CONFIG_PATH.
func (o ProviderKubernetesPtrOutput) ConfigPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ConfigPath
	}).(pulumi.StringPtrOutput)
}

// A list of paths to kube config files. Can be set with KUBE_CONFIG_PATHS environment variable.
func (o ProviderKubernetesPtrOutput) ConfigPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderKubernetes) []string {
		if v == nil {
			return nil
		}
		return v.ConfigPaths
	}).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesPtrOutput) Exec() ProviderKubernetesExecPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *ProviderKubernetesExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(ProviderKubernetesExecPtrOutput)
}

// The hostname (in form of URI) of Kubernetes master.
func (o ProviderKubernetesPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Whether server should be accessed without verifying the TLS certificate.
func (o ProviderKubernetesPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// The password to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o ProviderKubernetesPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// URL to the proxy to be used for all API requests
func (o ProviderKubernetesPtrOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.ProxyUrl
	}).(pulumi.StringPtrOutput)
}

// Server name passed to the server for SNI and is used in the client to check server certificates against.
func (o ProviderKubernetesPtrOutput) TlsServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.TlsServerName
	}).(pulumi.StringPtrOutput)
}

// Token to authenticate an service account
func (o ProviderKubernetesPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

// The username to use for HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o ProviderKubernetesPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetes) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ProviderKubernetesExec struct {
	ApiVersion string            `pulumi:"apiVersion"`
	Args       []string          `pulumi:"args"`
	Command    string            `pulumi:"command"`
	Env        map[string]string `pulumi:"env"`
}

// ProviderKubernetesExecInput is an input type that accepts ProviderKubernetesExecArgs and ProviderKubernetesExecOutput values.
// You can construct a concrete instance of `ProviderKubernetesExecInput` via:
//
//	ProviderKubernetesExecArgs{...}
type ProviderKubernetesExecInput interface {
	pulumi.Input

	ToProviderKubernetesExecOutput() ProviderKubernetesExecOutput
	ToProviderKubernetesExecOutputWithContext(context.Context) ProviderKubernetesExecOutput
}

type ProviderKubernetesExecArgs struct {
	ApiVersion pulumi.StringInput      `pulumi:"apiVersion"`
	Args       pulumi.StringArrayInput `pulumi:"args"`
	Command    pulumi.StringInput      `pulumi:"command"`
	Env        pulumi.StringMapInput   `pulumi:"env"`
}

func (ProviderKubernetesExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetesExec)(nil)).Elem()
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecOutput() ProviderKubernetesExecOutput {
	return i.ToProviderKubernetesExecOutputWithContext(context.Background())
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecOutputWithContext(ctx context.Context) ProviderKubernetesExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesExecOutput)
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return i.ToProviderKubernetesExecPtrOutputWithContext(context.Background())
}

func (i ProviderKubernetesExecArgs) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesExecOutput).ToProviderKubernetesExecPtrOutputWithContext(ctx)
}

// ProviderKubernetesExecPtrInput is an input type that accepts ProviderKubernetesExecArgs, ProviderKubernetesExecPtr and ProviderKubernetesExecPtrOutput values.
// You can construct a concrete instance of `ProviderKubernetesExecPtrInput` via:
//
//	        ProviderKubernetesExecArgs{...}
//
//	or:
//
//	        nil
type ProviderKubernetesExecPtrInput interface {
	pulumi.Input

	ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput
	ToProviderKubernetesExecPtrOutputWithContext(context.Context) ProviderKubernetesExecPtrOutput
}

type providerKubernetesExecPtrType ProviderKubernetesExecArgs

func ProviderKubernetesExecPtr(v *ProviderKubernetesExecArgs) ProviderKubernetesExecPtrInput {
	return (*providerKubernetesExecPtrType)(v)
}

func (*providerKubernetesExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetesExec)(nil)).Elem()
}

func (i *providerKubernetesExecPtrType) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return i.ToProviderKubernetesExecPtrOutputWithContext(context.Background())
}

func (i *providerKubernetesExecPtrType) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderKubernetesExecPtrOutput)
}

type ProviderKubernetesExecOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderKubernetesExec)(nil)).Elem()
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecOutput() ProviderKubernetesExecOutput {
	return o
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecOutputWithContext(ctx context.Context) ProviderKubernetesExecOutput {
	return o
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return o.ToProviderKubernetesExecPtrOutputWithContext(context.Background())
}

func (o ProviderKubernetesExecOutput) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderKubernetesExec) *ProviderKubernetesExec {
		return &v
	}).(ProviderKubernetesExecPtrOutput)
}

func (o ProviderKubernetesExecOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o ProviderKubernetesExecOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) []string { return v.Args }).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesExecOutput) Command() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) string { return v.Command }).(pulumi.StringOutput)
}

func (o ProviderKubernetesExecOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderKubernetesExec) map[string]string { return v.Env }).(pulumi.StringMapOutput)
}

type ProviderKubernetesExecPtrOutput struct{ *pulumi.OutputState }

func (ProviderKubernetesExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderKubernetesExec)(nil)).Elem()
}

func (o ProviderKubernetesExecPtrOutput) ToProviderKubernetesExecPtrOutput() ProviderKubernetesExecPtrOutput {
	return o
}

func (o ProviderKubernetesExecPtrOutput) ToProviderKubernetesExecPtrOutputWithContext(ctx context.Context) ProviderKubernetesExecPtrOutput {
	return o
}

func (o ProviderKubernetesExecPtrOutput) Elem() ProviderKubernetesExecOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) ProviderKubernetesExec {
		if v != nil {
			return *v
		}
		var ret ProviderKubernetesExec
		return ret
	}).(ProviderKubernetesExecOutput)
}

func (o ProviderKubernetesExecPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesExecPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

func (o ProviderKubernetesExecPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) *string {
		if v == nil {
			return nil
		}
		return &v.Command
	}).(pulumi.StringPtrOutput)
}

func (o ProviderKubernetesExecPtrOutput) Env() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderKubernetesExec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Env
	}).(pulumi.StringMapOutput)
}

type ProviderRegistry struct {
	// The password to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
	Password string `pulumi:"password"`
	// OCI URL in form of oci://host:port or oci://host
	Url string `pulumi:"url"`
	// The username to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
	Username string `pulumi:"username"`
}

// ProviderRegistryInput is an input type that accepts ProviderRegistryArgs and ProviderRegistryOutput values.
// You can construct a concrete instance of `ProviderRegistryInput` via:
//
//	ProviderRegistryArgs{...}
type ProviderRegistryInput interface {
	pulumi.Input

	ToProviderRegistryOutput() ProviderRegistryOutput
	ToProviderRegistryOutputWithContext(context.Context) ProviderRegistryOutput
}

type ProviderRegistryArgs struct {
	// The password to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
	Password pulumi.StringInput `pulumi:"password"`
	// OCI URL in form of oci://host:port or oci://host
	Url pulumi.StringInput `pulumi:"url"`
	// The username to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
	Username pulumi.StringInput `pulumi:"username"`
}

func (ProviderRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderRegistry)(nil)).Elem()
}

func (i ProviderRegistryArgs) ToProviderRegistryOutput() ProviderRegistryOutput {
	return i.ToProviderRegistryOutputWithContext(context.Background())
}

func (i ProviderRegistryArgs) ToProviderRegistryOutputWithContext(ctx context.Context) ProviderRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderRegistryOutput)
}

// ProviderRegistryArrayInput is an input type that accepts ProviderRegistryArray and ProviderRegistryArrayOutput values.
// You can construct a concrete instance of `ProviderRegistryArrayInput` via:
//
//	ProviderRegistryArray{ ProviderRegistryArgs{...} }
type ProviderRegistryArrayInput interface {
	pulumi.Input

	ToProviderRegistryArrayOutput() ProviderRegistryArrayOutput
	ToProviderRegistryArrayOutputWithContext(context.Context) ProviderRegistryArrayOutput
}

type ProviderRegistryArray []ProviderRegistryInput

func (ProviderRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderRegistry)(nil)).Elem()
}

func (i ProviderRegistryArray) ToProviderRegistryArrayOutput() ProviderRegistryArrayOutput {
	return i.ToProviderRegistryArrayOutputWithContext(context.Background())
}

func (i ProviderRegistryArray) ToProviderRegistryArrayOutputWithContext(ctx context.Context) ProviderRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderRegistryArrayOutput)
}

type ProviderRegistryOutput struct{ *pulumi.OutputState }

func (ProviderRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderRegistry)(nil)).Elem()
}

func (o ProviderRegistryOutput) ToProviderRegistryOutput() ProviderRegistryOutput {
	return o
}

func (o ProviderRegistryOutput) ToProviderRegistryOutputWithContext(ctx context.Context) ProviderRegistryOutput {
	return o
}

// The password to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o ProviderRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// OCI URL in form of oci://host:port or oci://host
func (o ProviderRegistryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderRegistry) string { return v.Url }).(pulumi.StringOutput)
}

// The username to use for the OCI HTTP basic authentication when accessing the Kubernetes master endpoint.
func (o ProviderRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ProviderRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type ProviderRegistryArrayOutput struct{ *pulumi.OutputState }

func (ProviderRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProviderRegistry)(nil)).Elem()
}

func (o ProviderRegistryArrayOutput) ToProviderRegistryArrayOutput() ProviderRegistryArrayOutput {
	return o
}

func (o ProviderRegistryArrayOutput) ToProviderRegistryArrayOutputWithContext(ctx context.Context) ProviderRegistryArrayOutput {
	return o
}

func (o ProviderRegistryArrayOutput) Index(i pulumi.IntInput) ProviderRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProviderRegistry {
		return vs[0].([]ProviderRegistry)[vs[1].(int)]
	}).(ProviderRegistryOutput)
}

type ReleaseMetadata struct {
	AppVersion    string  `pulumi:"appVersion"`
	Chart         string  `pulumi:"chart"`
	FirstDeployed float64 `pulumi:"firstDeployed"`
	LastDeployed  float64 `pulumi:"lastDeployed"`
	Name          string  `pulumi:"name"`
	Namespace     string  `pulumi:"namespace"`
	Notes         string  `pulumi:"notes"`
	Revision      float64 `pulumi:"revision"`
	Values        string  `pulumi:"values"`
	Version       string  `pulumi:"version"`
}

// ReleaseMetadataInput is an input type that accepts ReleaseMetadataArgs and ReleaseMetadataOutput values.
// You can construct a concrete instance of `ReleaseMetadataInput` via:
//
//	ReleaseMetadataArgs{...}
type ReleaseMetadataInput interface {
	pulumi.Input

	ToReleaseMetadataOutput() ReleaseMetadataOutput
	ToReleaseMetadataOutputWithContext(context.Context) ReleaseMetadataOutput
}

type ReleaseMetadataArgs struct {
	AppVersion    pulumi.StringInput  `pulumi:"appVersion"`
	Chart         pulumi.StringInput  `pulumi:"chart"`
	FirstDeployed pulumi.Float64Input `pulumi:"firstDeployed"`
	LastDeployed  pulumi.Float64Input `pulumi:"lastDeployed"`
	Name          pulumi.StringInput  `pulumi:"name"`
	Namespace     pulumi.StringInput  `pulumi:"namespace"`
	Notes         pulumi.StringInput  `pulumi:"notes"`
	Revision      pulumi.Float64Input `pulumi:"revision"`
	Values        pulumi.StringInput  `pulumi:"values"`
	Version       pulumi.StringInput  `pulumi:"version"`
}

func (ReleaseMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseMetadata)(nil)).Elem()
}

func (i ReleaseMetadataArgs) ToReleaseMetadataOutput() ReleaseMetadataOutput {
	return i.ToReleaseMetadataOutputWithContext(context.Background())
}

func (i ReleaseMetadataArgs) ToReleaseMetadataOutputWithContext(ctx context.Context) ReleaseMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseMetadataOutput)
}

// ReleaseMetadataArrayInput is an input type that accepts ReleaseMetadataArray and ReleaseMetadataArrayOutput values.
// You can construct a concrete instance of `ReleaseMetadataArrayInput` via:
//
//	ReleaseMetadataArray{ ReleaseMetadataArgs{...} }
type ReleaseMetadataArrayInput interface {
	pulumi.Input

	ToReleaseMetadataArrayOutput() ReleaseMetadataArrayOutput
	ToReleaseMetadataArrayOutputWithContext(context.Context) ReleaseMetadataArrayOutput
}

type ReleaseMetadataArray []ReleaseMetadataInput

func (ReleaseMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseMetadata)(nil)).Elem()
}

func (i ReleaseMetadataArray) ToReleaseMetadataArrayOutput() ReleaseMetadataArrayOutput {
	return i.ToReleaseMetadataArrayOutputWithContext(context.Background())
}

func (i ReleaseMetadataArray) ToReleaseMetadataArrayOutputWithContext(ctx context.Context) ReleaseMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseMetadataArrayOutput)
}

type ReleaseMetadataOutput struct{ *pulumi.OutputState }

func (ReleaseMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseMetadata)(nil)).Elem()
}

func (o ReleaseMetadataOutput) ToReleaseMetadataOutput() ReleaseMetadataOutput {
	return o
}

func (o ReleaseMetadataOutput) ToReleaseMetadataOutputWithContext(ctx context.Context) ReleaseMetadataOutput {
	return o
}

func (o ReleaseMetadataOutput) AppVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseMetadata) string { return v.AppVersion }).(pulumi.StringOutput)
}

func (o ReleaseMetadataOutput) Chart() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseMetadata) string { return v.Chart }).(pulumi.StringOutput)
}

func (o ReleaseMetadataOutput) FirstDeployed() pulumi.Float64Output {
	return o.ApplyT(func(v ReleaseMetadata) float64 { return v.FirstDeployed }).(pulumi.Float64Output)
}

func (o ReleaseMetadataOutput) LastDeployed() pulumi.Float64Output {
	return o.ApplyT(func(v ReleaseMetadata) float64 { return v.LastDeployed }).(pulumi.Float64Output)
}

func (o ReleaseMetadataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseMetadata) string { return v.Name }).(pulumi.StringOutput)
}

func (o ReleaseMetadataOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseMetadata) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o ReleaseMetadataOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseMetadata) string { return v.Notes }).(pulumi.StringOutput)
}

func (o ReleaseMetadataOutput) Revision() pulumi.Float64Output {
	return o.ApplyT(func(v ReleaseMetadata) float64 { return v.Revision }).(pulumi.Float64Output)
}

func (o ReleaseMetadataOutput) Values() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseMetadata) string { return v.Values }).(pulumi.StringOutput)
}

func (o ReleaseMetadataOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseMetadata) string { return v.Version }).(pulumi.StringOutput)
}

type ReleaseMetadataArrayOutput struct{ *pulumi.OutputState }

func (ReleaseMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseMetadata)(nil)).Elem()
}

func (o ReleaseMetadataArrayOutput) ToReleaseMetadataArrayOutput() ReleaseMetadataArrayOutput {
	return o
}

func (o ReleaseMetadataArrayOutput) ToReleaseMetadataArrayOutputWithContext(ctx context.Context) ReleaseMetadataArrayOutput {
	return o
}

func (o ReleaseMetadataArrayOutput) Index(i pulumi.IntInput) ReleaseMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReleaseMetadata {
		return vs[0].([]ReleaseMetadata)[vs[1].(int)]
	}).(ReleaseMetadataOutput)
}

type ReleasePostrender struct {
	// an argument to the post-renderer (can specify multiple)
	Args []string `pulumi:"args"`
	// The command binary path.
	BinaryPath string `pulumi:"binaryPath"`
}

// ReleasePostrenderInput is an input type that accepts ReleasePostrenderArgs and ReleasePostrenderOutput values.
// You can construct a concrete instance of `ReleasePostrenderInput` via:
//
//	ReleasePostrenderArgs{...}
type ReleasePostrenderInput interface {
	pulumi.Input

	ToReleasePostrenderOutput() ReleasePostrenderOutput
	ToReleasePostrenderOutputWithContext(context.Context) ReleasePostrenderOutput
}

type ReleasePostrenderArgs struct {
	// an argument to the post-renderer (can specify multiple)
	Args pulumi.StringArrayInput `pulumi:"args"`
	// The command binary path.
	BinaryPath pulumi.StringInput `pulumi:"binaryPath"`
}

func (ReleasePostrenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleasePostrender)(nil)).Elem()
}

func (i ReleasePostrenderArgs) ToReleasePostrenderOutput() ReleasePostrenderOutput {
	return i.ToReleasePostrenderOutputWithContext(context.Background())
}

func (i ReleasePostrenderArgs) ToReleasePostrenderOutputWithContext(ctx context.Context) ReleasePostrenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleasePostrenderOutput)
}

func (i ReleasePostrenderArgs) ToReleasePostrenderPtrOutput() ReleasePostrenderPtrOutput {
	return i.ToReleasePostrenderPtrOutputWithContext(context.Background())
}

func (i ReleasePostrenderArgs) ToReleasePostrenderPtrOutputWithContext(ctx context.Context) ReleasePostrenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleasePostrenderOutput).ToReleasePostrenderPtrOutputWithContext(ctx)
}

// ReleasePostrenderPtrInput is an input type that accepts ReleasePostrenderArgs, ReleasePostrenderPtr and ReleasePostrenderPtrOutput values.
// You can construct a concrete instance of `ReleasePostrenderPtrInput` via:
//
//	        ReleasePostrenderArgs{...}
//
//	or:
//
//	        nil
type ReleasePostrenderPtrInput interface {
	pulumi.Input

	ToReleasePostrenderPtrOutput() ReleasePostrenderPtrOutput
	ToReleasePostrenderPtrOutputWithContext(context.Context) ReleasePostrenderPtrOutput
}

type releasePostrenderPtrType ReleasePostrenderArgs

func ReleasePostrenderPtr(v *ReleasePostrenderArgs) ReleasePostrenderPtrInput {
	return (*releasePostrenderPtrType)(v)
}

func (*releasePostrenderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleasePostrender)(nil)).Elem()
}

func (i *releasePostrenderPtrType) ToReleasePostrenderPtrOutput() ReleasePostrenderPtrOutput {
	return i.ToReleasePostrenderPtrOutputWithContext(context.Background())
}

func (i *releasePostrenderPtrType) ToReleasePostrenderPtrOutputWithContext(ctx context.Context) ReleasePostrenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleasePostrenderPtrOutput)
}

type ReleasePostrenderOutput struct{ *pulumi.OutputState }

func (ReleasePostrenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleasePostrender)(nil)).Elem()
}

func (o ReleasePostrenderOutput) ToReleasePostrenderOutput() ReleasePostrenderOutput {
	return o
}

func (o ReleasePostrenderOutput) ToReleasePostrenderOutputWithContext(ctx context.Context) ReleasePostrenderOutput {
	return o
}

func (o ReleasePostrenderOutput) ToReleasePostrenderPtrOutput() ReleasePostrenderPtrOutput {
	return o.ToReleasePostrenderPtrOutputWithContext(context.Background())
}

func (o ReleasePostrenderOutput) ToReleasePostrenderPtrOutputWithContext(ctx context.Context) ReleasePostrenderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReleasePostrender) *ReleasePostrender {
		return &v
	}).(ReleasePostrenderPtrOutput)
}

// an argument to the post-renderer (can specify multiple)
func (o ReleasePostrenderOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReleasePostrender) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// The command binary path.
func (o ReleasePostrenderOutput) BinaryPath() pulumi.StringOutput {
	return o.ApplyT(func(v ReleasePostrender) string { return v.BinaryPath }).(pulumi.StringOutput)
}

type ReleasePostrenderPtrOutput struct{ *pulumi.OutputState }

func (ReleasePostrenderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReleasePostrender)(nil)).Elem()
}

func (o ReleasePostrenderPtrOutput) ToReleasePostrenderPtrOutput() ReleasePostrenderPtrOutput {
	return o
}

func (o ReleasePostrenderPtrOutput) ToReleasePostrenderPtrOutputWithContext(ctx context.Context) ReleasePostrenderPtrOutput {
	return o
}

func (o ReleasePostrenderPtrOutput) Elem() ReleasePostrenderOutput {
	return o.ApplyT(func(v *ReleasePostrender) ReleasePostrender {
		if v != nil {
			return *v
		}
		var ret ReleasePostrender
		return ret
	}).(ReleasePostrenderOutput)
}

// an argument to the post-renderer (can specify multiple)
func (o ReleasePostrenderPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReleasePostrender) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// The command binary path.
func (o ReleasePostrenderPtrOutput) BinaryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReleasePostrender) *string {
		if v == nil {
			return nil
		}
		return &v.BinaryPath
	}).(pulumi.StringPtrOutput)
}

type ReleaseSet struct {
	Name  string  `pulumi:"name"`
	Type  *string `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// ReleaseSetInput is an input type that accepts ReleaseSetArgs and ReleaseSetOutput values.
// You can construct a concrete instance of `ReleaseSetInput` via:
//
//	ReleaseSetArgs{...}
type ReleaseSetInput interface {
	pulumi.Input

	ToReleaseSetOutput() ReleaseSetOutput
	ToReleaseSetOutputWithContext(context.Context) ReleaseSetOutput
}

type ReleaseSetArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (ReleaseSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseSet)(nil)).Elem()
}

func (i ReleaseSetArgs) ToReleaseSetOutput() ReleaseSetOutput {
	return i.ToReleaseSetOutputWithContext(context.Background())
}

func (i ReleaseSetArgs) ToReleaseSetOutputWithContext(ctx context.Context) ReleaseSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseSetOutput)
}

// ReleaseSetArrayInput is an input type that accepts ReleaseSetArray and ReleaseSetArrayOutput values.
// You can construct a concrete instance of `ReleaseSetArrayInput` via:
//
//	ReleaseSetArray{ ReleaseSetArgs{...} }
type ReleaseSetArrayInput interface {
	pulumi.Input

	ToReleaseSetArrayOutput() ReleaseSetArrayOutput
	ToReleaseSetArrayOutputWithContext(context.Context) ReleaseSetArrayOutput
}

type ReleaseSetArray []ReleaseSetInput

func (ReleaseSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseSet)(nil)).Elem()
}

func (i ReleaseSetArray) ToReleaseSetArrayOutput() ReleaseSetArrayOutput {
	return i.ToReleaseSetArrayOutputWithContext(context.Background())
}

func (i ReleaseSetArray) ToReleaseSetArrayOutputWithContext(ctx context.Context) ReleaseSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseSetArrayOutput)
}

type ReleaseSetOutput struct{ *pulumi.OutputState }

func (ReleaseSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseSet)(nil)).Elem()
}

func (o ReleaseSetOutput) ToReleaseSetOutput() ReleaseSetOutput {
	return o
}

func (o ReleaseSetOutput) ToReleaseSetOutputWithContext(ctx context.Context) ReleaseSetOutput {
	return o
}

func (o ReleaseSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseSet) string { return v.Name }).(pulumi.StringOutput)
}

func (o ReleaseSetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseSet) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ReleaseSetOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseSet) string { return v.Value }).(pulumi.StringOutput)
}

type ReleaseSetArrayOutput struct{ *pulumi.OutputState }

func (ReleaseSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseSet)(nil)).Elem()
}

func (o ReleaseSetArrayOutput) ToReleaseSetArrayOutput() ReleaseSetArrayOutput {
	return o
}

func (o ReleaseSetArrayOutput) ToReleaseSetArrayOutputWithContext(ctx context.Context) ReleaseSetArrayOutput {
	return o
}

func (o ReleaseSetArrayOutput) Index(i pulumi.IntInput) ReleaseSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReleaseSet {
		return vs[0].([]ReleaseSet)[vs[1].(int)]
	}).(ReleaseSetOutput)
}

type ReleaseSetList struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// ReleaseSetListInput is an input type that accepts ReleaseSetListArgs and ReleaseSetListOutput values.
// You can construct a concrete instance of `ReleaseSetListInput` via:
//
//	ReleaseSetListArgs{...}
type ReleaseSetListInput interface {
	pulumi.Input

	ToReleaseSetListOutput() ReleaseSetListOutput
	ToReleaseSetListOutputWithContext(context.Context) ReleaseSetListOutput
}

type ReleaseSetListArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ReleaseSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseSetList)(nil)).Elem()
}

func (i ReleaseSetListArgs) ToReleaseSetListOutput() ReleaseSetListOutput {
	return i.ToReleaseSetListOutputWithContext(context.Background())
}

func (i ReleaseSetListArgs) ToReleaseSetListOutputWithContext(ctx context.Context) ReleaseSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseSetListOutput)
}

// ReleaseSetListArrayInput is an input type that accepts ReleaseSetListArray and ReleaseSetListArrayOutput values.
// You can construct a concrete instance of `ReleaseSetListArrayInput` via:
//
//	ReleaseSetListArray{ ReleaseSetListArgs{...} }
type ReleaseSetListArrayInput interface {
	pulumi.Input

	ToReleaseSetListArrayOutput() ReleaseSetListArrayOutput
	ToReleaseSetListArrayOutputWithContext(context.Context) ReleaseSetListArrayOutput
}

type ReleaseSetListArray []ReleaseSetListInput

func (ReleaseSetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseSetList)(nil)).Elem()
}

func (i ReleaseSetListArray) ToReleaseSetListArrayOutput() ReleaseSetListArrayOutput {
	return i.ToReleaseSetListArrayOutputWithContext(context.Background())
}

func (i ReleaseSetListArray) ToReleaseSetListArrayOutputWithContext(ctx context.Context) ReleaseSetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseSetListArrayOutput)
}

type ReleaseSetListOutput struct{ *pulumi.OutputState }

func (ReleaseSetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseSetList)(nil)).Elem()
}

func (o ReleaseSetListOutput) ToReleaseSetListOutput() ReleaseSetListOutput {
	return o
}

func (o ReleaseSetListOutput) ToReleaseSetListOutputWithContext(ctx context.Context) ReleaseSetListOutput {
	return o
}

func (o ReleaseSetListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseSetList) string { return v.Name }).(pulumi.StringOutput)
}

func (o ReleaseSetListOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReleaseSetList) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ReleaseSetListArrayOutput struct{ *pulumi.OutputState }

func (ReleaseSetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseSetList)(nil)).Elem()
}

func (o ReleaseSetListArrayOutput) ToReleaseSetListArrayOutput() ReleaseSetListArrayOutput {
	return o
}

func (o ReleaseSetListArrayOutput) ToReleaseSetListArrayOutputWithContext(ctx context.Context) ReleaseSetListArrayOutput {
	return o
}

func (o ReleaseSetListArrayOutput) Index(i pulumi.IntInput) ReleaseSetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReleaseSetList {
		return vs[0].([]ReleaseSetList)[vs[1].(int)]
	}).(ReleaseSetListOutput)
}

type ReleaseSetSensitive struct {
	Name  string  `pulumi:"name"`
	Type  *string `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// ReleaseSetSensitiveInput is an input type that accepts ReleaseSetSensitiveArgs and ReleaseSetSensitiveOutput values.
// You can construct a concrete instance of `ReleaseSetSensitiveInput` via:
//
//	ReleaseSetSensitiveArgs{...}
type ReleaseSetSensitiveInput interface {
	pulumi.Input

	ToReleaseSetSensitiveOutput() ReleaseSetSensitiveOutput
	ToReleaseSetSensitiveOutputWithContext(context.Context) ReleaseSetSensitiveOutput
}

type ReleaseSetSensitiveArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (ReleaseSetSensitiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseSetSensitive)(nil)).Elem()
}

func (i ReleaseSetSensitiveArgs) ToReleaseSetSensitiveOutput() ReleaseSetSensitiveOutput {
	return i.ToReleaseSetSensitiveOutputWithContext(context.Background())
}

func (i ReleaseSetSensitiveArgs) ToReleaseSetSensitiveOutputWithContext(ctx context.Context) ReleaseSetSensitiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseSetSensitiveOutput)
}

// ReleaseSetSensitiveArrayInput is an input type that accepts ReleaseSetSensitiveArray and ReleaseSetSensitiveArrayOutput values.
// You can construct a concrete instance of `ReleaseSetSensitiveArrayInput` via:
//
//	ReleaseSetSensitiveArray{ ReleaseSetSensitiveArgs{...} }
type ReleaseSetSensitiveArrayInput interface {
	pulumi.Input

	ToReleaseSetSensitiveArrayOutput() ReleaseSetSensitiveArrayOutput
	ToReleaseSetSensitiveArrayOutputWithContext(context.Context) ReleaseSetSensitiveArrayOutput
}

type ReleaseSetSensitiveArray []ReleaseSetSensitiveInput

func (ReleaseSetSensitiveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseSetSensitive)(nil)).Elem()
}

func (i ReleaseSetSensitiveArray) ToReleaseSetSensitiveArrayOutput() ReleaseSetSensitiveArrayOutput {
	return i.ToReleaseSetSensitiveArrayOutputWithContext(context.Background())
}

func (i ReleaseSetSensitiveArray) ToReleaseSetSensitiveArrayOutputWithContext(ctx context.Context) ReleaseSetSensitiveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReleaseSetSensitiveArrayOutput)
}

type ReleaseSetSensitiveOutput struct{ *pulumi.OutputState }

func (ReleaseSetSensitiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReleaseSetSensitive)(nil)).Elem()
}

func (o ReleaseSetSensitiveOutput) ToReleaseSetSensitiveOutput() ReleaseSetSensitiveOutput {
	return o
}

func (o ReleaseSetSensitiveOutput) ToReleaseSetSensitiveOutputWithContext(ctx context.Context) ReleaseSetSensitiveOutput {
	return o
}

func (o ReleaseSetSensitiveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseSetSensitive) string { return v.Name }).(pulumi.StringOutput)
}

func (o ReleaseSetSensitiveOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReleaseSetSensitive) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ReleaseSetSensitiveOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ReleaseSetSensitive) string { return v.Value }).(pulumi.StringOutput)
}

type ReleaseSetSensitiveArrayOutput struct{ *pulumi.OutputState }

func (ReleaseSetSensitiveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReleaseSetSensitive)(nil)).Elem()
}

func (o ReleaseSetSensitiveArrayOutput) ToReleaseSetSensitiveArrayOutput() ReleaseSetSensitiveArrayOutput {
	return o
}

func (o ReleaseSetSensitiveArrayOutput) ToReleaseSetSensitiveArrayOutputWithContext(ctx context.Context) ReleaseSetSensitiveArrayOutput {
	return o
}

func (o ReleaseSetSensitiveArrayOutput) Index(i pulumi.IntInput) ReleaseSetSensitiveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReleaseSetSensitive {
		return vs[0].([]ReleaseSetSensitive)[vs[1].(int)]
	}).(ReleaseSetSensitiveOutput)
}

type GetTemplatePostrender struct {
	// The command binary path.
	BinaryPath string `pulumi:"binaryPath"`
}

// GetTemplatePostrenderInput is an input type that accepts GetTemplatePostrenderArgs and GetTemplatePostrenderOutput values.
// You can construct a concrete instance of `GetTemplatePostrenderInput` via:
//
//	GetTemplatePostrenderArgs{...}
type GetTemplatePostrenderInput interface {
	pulumi.Input

	ToGetTemplatePostrenderOutput() GetTemplatePostrenderOutput
	ToGetTemplatePostrenderOutputWithContext(context.Context) GetTemplatePostrenderOutput
}

type GetTemplatePostrenderArgs struct {
	// The command binary path.
	BinaryPath pulumi.StringInput `pulumi:"binaryPath"`
}

func (GetTemplatePostrenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatePostrender)(nil)).Elem()
}

func (i GetTemplatePostrenderArgs) ToGetTemplatePostrenderOutput() GetTemplatePostrenderOutput {
	return i.ToGetTemplatePostrenderOutputWithContext(context.Background())
}

func (i GetTemplatePostrenderArgs) ToGetTemplatePostrenderOutputWithContext(ctx context.Context) GetTemplatePostrenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatePostrenderOutput)
}

func (i GetTemplatePostrenderArgs) ToGetTemplatePostrenderPtrOutput() GetTemplatePostrenderPtrOutput {
	return i.ToGetTemplatePostrenderPtrOutputWithContext(context.Background())
}

func (i GetTemplatePostrenderArgs) ToGetTemplatePostrenderPtrOutputWithContext(ctx context.Context) GetTemplatePostrenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatePostrenderOutput).ToGetTemplatePostrenderPtrOutputWithContext(ctx)
}

// GetTemplatePostrenderPtrInput is an input type that accepts GetTemplatePostrenderArgs, GetTemplatePostrenderPtr and GetTemplatePostrenderPtrOutput values.
// You can construct a concrete instance of `GetTemplatePostrenderPtrInput` via:
//
//	        GetTemplatePostrenderArgs{...}
//
//	or:
//
//	        nil
type GetTemplatePostrenderPtrInput interface {
	pulumi.Input

	ToGetTemplatePostrenderPtrOutput() GetTemplatePostrenderPtrOutput
	ToGetTemplatePostrenderPtrOutputWithContext(context.Context) GetTemplatePostrenderPtrOutput
}

type getTemplatePostrenderPtrType GetTemplatePostrenderArgs

func GetTemplatePostrenderPtr(v *GetTemplatePostrenderArgs) GetTemplatePostrenderPtrInput {
	return (*getTemplatePostrenderPtrType)(v)
}

func (*getTemplatePostrenderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTemplatePostrender)(nil)).Elem()
}

func (i *getTemplatePostrenderPtrType) ToGetTemplatePostrenderPtrOutput() GetTemplatePostrenderPtrOutput {
	return i.ToGetTemplatePostrenderPtrOutputWithContext(context.Background())
}

func (i *getTemplatePostrenderPtrType) ToGetTemplatePostrenderPtrOutputWithContext(ctx context.Context) GetTemplatePostrenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatePostrenderPtrOutput)
}

type GetTemplatePostrenderOutput struct{ *pulumi.OutputState }

func (GetTemplatePostrenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatePostrender)(nil)).Elem()
}

func (o GetTemplatePostrenderOutput) ToGetTemplatePostrenderOutput() GetTemplatePostrenderOutput {
	return o
}

func (o GetTemplatePostrenderOutput) ToGetTemplatePostrenderOutputWithContext(ctx context.Context) GetTemplatePostrenderOutput {
	return o
}

func (o GetTemplatePostrenderOutput) ToGetTemplatePostrenderPtrOutput() GetTemplatePostrenderPtrOutput {
	return o.ToGetTemplatePostrenderPtrOutputWithContext(context.Background())
}

func (o GetTemplatePostrenderOutput) ToGetTemplatePostrenderPtrOutputWithContext(ctx context.Context) GetTemplatePostrenderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTemplatePostrender) *GetTemplatePostrender {
		return &v
	}).(GetTemplatePostrenderPtrOutput)
}

// The command binary path.
func (o GetTemplatePostrenderOutput) BinaryPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatePostrender) string { return v.BinaryPath }).(pulumi.StringOutput)
}

type GetTemplatePostrenderPtrOutput struct{ *pulumi.OutputState }

func (GetTemplatePostrenderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTemplatePostrender)(nil)).Elem()
}

func (o GetTemplatePostrenderPtrOutput) ToGetTemplatePostrenderPtrOutput() GetTemplatePostrenderPtrOutput {
	return o
}

func (o GetTemplatePostrenderPtrOutput) ToGetTemplatePostrenderPtrOutputWithContext(ctx context.Context) GetTemplatePostrenderPtrOutput {
	return o
}

func (o GetTemplatePostrenderPtrOutput) Elem() GetTemplatePostrenderOutput {
	return o.ApplyT(func(v *GetTemplatePostrender) GetTemplatePostrender {
		if v != nil {
			return *v
		}
		var ret GetTemplatePostrender
		return ret
	}).(GetTemplatePostrenderOutput)
}

// The command binary path.
func (o GetTemplatePostrenderPtrOutput) BinaryPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTemplatePostrender) *string {
		if v == nil {
			return nil
		}
		return &v.BinaryPath
	}).(pulumi.StringPtrOutput)
}

type GetTemplateSet struct {
	Name  string  `pulumi:"name"`
	Type  *string `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// GetTemplateSetInput is an input type that accepts GetTemplateSetArgs and GetTemplateSetOutput values.
// You can construct a concrete instance of `GetTemplateSetInput` via:
//
//	GetTemplateSetArgs{...}
type GetTemplateSetInput interface {
	pulumi.Input

	ToGetTemplateSetOutput() GetTemplateSetOutput
	ToGetTemplateSetOutputWithContext(context.Context) GetTemplateSetOutput
}

type GetTemplateSetArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (GetTemplateSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSet)(nil)).Elem()
}

func (i GetTemplateSetArgs) ToGetTemplateSetOutput() GetTemplateSetOutput {
	return i.ToGetTemplateSetOutputWithContext(context.Background())
}

func (i GetTemplateSetArgs) ToGetTemplateSetOutputWithContext(ctx context.Context) GetTemplateSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSetOutput)
}

// GetTemplateSetArrayInput is an input type that accepts GetTemplateSetArray and GetTemplateSetArrayOutput values.
// You can construct a concrete instance of `GetTemplateSetArrayInput` via:
//
//	GetTemplateSetArray{ GetTemplateSetArgs{...} }
type GetTemplateSetArrayInput interface {
	pulumi.Input

	ToGetTemplateSetArrayOutput() GetTemplateSetArrayOutput
	ToGetTemplateSetArrayOutputWithContext(context.Context) GetTemplateSetArrayOutput
}

type GetTemplateSetArray []GetTemplateSetInput

func (GetTemplateSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSet)(nil)).Elem()
}

func (i GetTemplateSetArray) ToGetTemplateSetArrayOutput() GetTemplateSetArrayOutput {
	return i.ToGetTemplateSetArrayOutputWithContext(context.Background())
}

func (i GetTemplateSetArray) ToGetTemplateSetArrayOutputWithContext(ctx context.Context) GetTemplateSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSetArrayOutput)
}

type GetTemplateSetOutput struct{ *pulumi.OutputState }

func (GetTemplateSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSet)(nil)).Elem()
}

func (o GetTemplateSetOutput) ToGetTemplateSetOutput() GetTemplateSetOutput {
	return o
}

func (o GetTemplateSetOutput) ToGetTemplateSetOutputWithContext(ctx context.Context) GetTemplateSetOutput {
	return o
}

func (o GetTemplateSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateSet) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTemplateSetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateSet) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetTemplateSetOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateSet) string { return v.Value }).(pulumi.StringOutput)
}

type GetTemplateSetArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSet)(nil)).Elem()
}

func (o GetTemplateSetArrayOutput) ToGetTemplateSetArrayOutput() GetTemplateSetArrayOutput {
	return o
}

func (o GetTemplateSetArrayOutput) ToGetTemplateSetArrayOutputWithContext(ctx context.Context) GetTemplateSetArrayOutput {
	return o
}

func (o GetTemplateSetArrayOutput) Index(i pulumi.IntInput) GetTemplateSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateSet {
		return vs[0].([]GetTemplateSet)[vs[1].(int)]
	}).(GetTemplateSetOutput)
}

type GetTemplateSetList struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetTemplateSetListInput is an input type that accepts GetTemplateSetListArgs and GetTemplateSetListOutput values.
// You can construct a concrete instance of `GetTemplateSetListInput` via:
//
//	GetTemplateSetListArgs{...}
type GetTemplateSetListInput interface {
	pulumi.Input

	ToGetTemplateSetListOutput() GetTemplateSetListOutput
	ToGetTemplateSetListOutputWithContext(context.Context) GetTemplateSetListOutput
}

type GetTemplateSetListArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTemplateSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSetList)(nil)).Elem()
}

func (i GetTemplateSetListArgs) ToGetTemplateSetListOutput() GetTemplateSetListOutput {
	return i.ToGetTemplateSetListOutputWithContext(context.Background())
}

func (i GetTemplateSetListArgs) ToGetTemplateSetListOutputWithContext(ctx context.Context) GetTemplateSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSetListOutput)
}

// GetTemplateSetListArrayInput is an input type that accepts GetTemplateSetListArray and GetTemplateSetListArrayOutput values.
// You can construct a concrete instance of `GetTemplateSetListArrayInput` via:
//
//	GetTemplateSetListArray{ GetTemplateSetListArgs{...} }
type GetTemplateSetListArrayInput interface {
	pulumi.Input

	ToGetTemplateSetListArrayOutput() GetTemplateSetListArrayOutput
	ToGetTemplateSetListArrayOutputWithContext(context.Context) GetTemplateSetListArrayOutput
}

type GetTemplateSetListArray []GetTemplateSetListInput

func (GetTemplateSetListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSetList)(nil)).Elem()
}

func (i GetTemplateSetListArray) ToGetTemplateSetListArrayOutput() GetTemplateSetListArrayOutput {
	return i.ToGetTemplateSetListArrayOutputWithContext(context.Background())
}

func (i GetTemplateSetListArray) ToGetTemplateSetListArrayOutputWithContext(ctx context.Context) GetTemplateSetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSetListArrayOutput)
}

type GetTemplateSetListOutput struct{ *pulumi.OutputState }

func (GetTemplateSetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSetList)(nil)).Elem()
}

func (o GetTemplateSetListOutput) ToGetTemplateSetListOutput() GetTemplateSetListOutput {
	return o
}

func (o GetTemplateSetListOutput) ToGetTemplateSetListOutputWithContext(ctx context.Context) GetTemplateSetListOutput {
	return o
}

func (o GetTemplateSetListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateSetList) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTemplateSetListOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTemplateSetList) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTemplateSetListArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateSetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSetList)(nil)).Elem()
}

func (o GetTemplateSetListArrayOutput) ToGetTemplateSetListArrayOutput() GetTemplateSetListArrayOutput {
	return o
}

func (o GetTemplateSetListArrayOutput) ToGetTemplateSetListArrayOutputWithContext(ctx context.Context) GetTemplateSetListArrayOutput {
	return o
}

func (o GetTemplateSetListArrayOutput) Index(i pulumi.IntInput) GetTemplateSetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateSetList {
		return vs[0].([]GetTemplateSetList)[vs[1].(int)]
	}).(GetTemplateSetListOutput)
}

type GetTemplateSetSensitive struct {
	Name  string  `pulumi:"name"`
	Type  *string `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// GetTemplateSetSensitiveInput is an input type that accepts GetTemplateSetSensitiveArgs and GetTemplateSetSensitiveOutput values.
// You can construct a concrete instance of `GetTemplateSetSensitiveInput` via:
//
//	GetTemplateSetSensitiveArgs{...}
type GetTemplateSetSensitiveInput interface {
	pulumi.Input

	ToGetTemplateSetSensitiveOutput() GetTemplateSetSensitiveOutput
	ToGetTemplateSetSensitiveOutputWithContext(context.Context) GetTemplateSetSensitiveOutput
}

type GetTemplateSetSensitiveArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (GetTemplateSetSensitiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSetSensitive)(nil)).Elem()
}

func (i GetTemplateSetSensitiveArgs) ToGetTemplateSetSensitiveOutput() GetTemplateSetSensitiveOutput {
	return i.ToGetTemplateSetSensitiveOutputWithContext(context.Background())
}

func (i GetTemplateSetSensitiveArgs) ToGetTemplateSetSensitiveOutputWithContext(ctx context.Context) GetTemplateSetSensitiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSetSensitiveOutput)
}

// GetTemplateSetSensitiveArrayInput is an input type that accepts GetTemplateSetSensitiveArray and GetTemplateSetSensitiveArrayOutput values.
// You can construct a concrete instance of `GetTemplateSetSensitiveArrayInput` via:
//
//	GetTemplateSetSensitiveArray{ GetTemplateSetSensitiveArgs{...} }
type GetTemplateSetSensitiveArrayInput interface {
	pulumi.Input

	ToGetTemplateSetSensitiveArrayOutput() GetTemplateSetSensitiveArrayOutput
	ToGetTemplateSetSensitiveArrayOutputWithContext(context.Context) GetTemplateSetSensitiveArrayOutput
}

type GetTemplateSetSensitiveArray []GetTemplateSetSensitiveInput

func (GetTemplateSetSensitiveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSetSensitive)(nil)).Elem()
}

func (i GetTemplateSetSensitiveArray) ToGetTemplateSetSensitiveArrayOutput() GetTemplateSetSensitiveArrayOutput {
	return i.ToGetTemplateSetSensitiveArrayOutputWithContext(context.Background())
}

func (i GetTemplateSetSensitiveArray) ToGetTemplateSetSensitiveArrayOutputWithContext(ctx context.Context) GetTemplateSetSensitiveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSetSensitiveArrayOutput)
}

type GetTemplateSetSensitiveOutput struct{ *pulumi.OutputState }

func (GetTemplateSetSensitiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSetSensitive)(nil)).Elem()
}

func (o GetTemplateSetSensitiveOutput) ToGetTemplateSetSensitiveOutput() GetTemplateSetSensitiveOutput {
	return o
}

func (o GetTemplateSetSensitiveOutput) ToGetTemplateSetSensitiveOutputWithContext(ctx context.Context) GetTemplateSetSensitiveOutput {
	return o
}

func (o GetTemplateSetSensitiveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateSetSensitive) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTemplateSetSensitiveOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTemplateSetSensitive) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o GetTemplateSetSensitiveOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateSetSensitive) string { return v.Value }).(pulumi.StringOutput)
}

type GetTemplateSetSensitiveArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateSetSensitiveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSetSensitive)(nil)).Elem()
}

func (o GetTemplateSetSensitiveArrayOutput) ToGetTemplateSetSensitiveArrayOutput() GetTemplateSetSensitiveArrayOutput {
	return o
}

func (o GetTemplateSetSensitiveArrayOutput) ToGetTemplateSetSensitiveArrayOutputWithContext(ctx context.Context) GetTemplateSetSensitiveArrayOutput {
	return o
}

func (o GetTemplateSetSensitiveArrayOutput) Index(i pulumi.IntInput) GetTemplateSetSensitiveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateSetSensitive {
		return vs[0].([]GetTemplateSetSensitive)[vs[1].(int)]
	}).(GetTemplateSetSensitiveOutput)
}

type GetTemplateSetString struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetTemplateSetStringInput is an input type that accepts GetTemplateSetStringArgs and GetTemplateSetStringOutput values.
// You can construct a concrete instance of `GetTemplateSetStringInput` via:
//
//	GetTemplateSetStringArgs{...}
type GetTemplateSetStringInput interface {
	pulumi.Input

	ToGetTemplateSetStringOutput() GetTemplateSetStringOutput
	ToGetTemplateSetStringOutputWithContext(context.Context) GetTemplateSetStringOutput
}

type GetTemplateSetStringArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTemplateSetStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSetString)(nil)).Elem()
}

func (i GetTemplateSetStringArgs) ToGetTemplateSetStringOutput() GetTemplateSetStringOutput {
	return i.ToGetTemplateSetStringOutputWithContext(context.Background())
}

func (i GetTemplateSetStringArgs) ToGetTemplateSetStringOutputWithContext(ctx context.Context) GetTemplateSetStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSetStringOutput)
}

// GetTemplateSetStringArrayInput is an input type that accepts GetTemplateSetStringArray and GetTemplateSetStringArrayOutput values.
// You can construct a concrete instance of `GetTemplateSetStringArrayInput` via:
//
//	GetTemplateSetStringArray{ GetTemplateSetStringArgs{...} }
type GetTemplateSetStringArrayInput interface {
	pulumi.Input

	ToGetTemplateSetStringArrayOutput() GetTemplateSetStringArrayOutput
	ToGetTemplateSetStringArrayOutputWithContext(context.Context) GetTemplateSetStringArrayOutput
}

type GetTemplateSetStringArray []GetTemplateSetStringInput

func (GetTemplateSetStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSetString)(nil)).Elem()
}

func (i GetTemplateSetStringArray) ToGetTemplateSetStringArrayOutput() GetTemplateSetStringArrayOutput {
	return i.ToGetTemplateSetStringArrayOutputWithContext(context.Background())
}

func (i GetTemplateSetStringArray) ToGetTemplateSetStringArrayOutputWithContext(ctx context.Context) GetTemplateSetStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplateSetStringArrayOutput)
}

type GetTemplateSetStringOutput struct{ *pulumi.OutputState }

func (GetTemplateSetStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplateSetString)(nil)).Elem()
}

func (o GetTemplateSetStringOutput) ToGetTemplateSetStringOutput() GetTemplateSetStringOutput {
	return o
}

func (o GetTemplateSetStringOutput) ToGetTemplateSetStringOutputWithContext(ctx context.Context) GetTemplateSetStringOutput {
	return o
}

func (o GetTemplateSetStringOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateSetString) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTemplateSetStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplateSetString) string { return v.Value }).(pulumi.StringOutput)
}

type GetTemplateSetStringArrayOutput struct{ *pulumi.OutputState }

func (GetTemplateSetStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplateSetString)(nil)).Elem()
}

func (o GetTemplateSetStringArrayOutput) ToGetTemplateSetStringArrayOutput() GetTemplateSetStringArrayOutput {
	return o
}

func (o GetTemplateSetStringArrayOutput) ToGetTemplateSetStringArrayOutputWithContext(ctx context.Context) GetTemplateSetStringArrayOutput {
	return o
}

func (o GetTemplateSetStringArrayOutput) Index(i pulumi.IntInput) GetTemplateSetStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplateSetString {
		return vs[0].([]GetTemplateSetString)[vs[1].(int)]
	}).(GetTemplateSetStringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderExperimentsInput)(nil)).Elem(), ProviderExperimentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderExperimentsPtrInput)(nil)).Elem(), ProviderExperimentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesInput)(nil)).Elem(), ProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesPtrInput)(nil)).Elem(), ProviderKubernetesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesExecInput)(nil)).Elem(), ProviderKubernetesExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderKubernetesExecPtrInput)(nil)).Elem(), ProviderKubernetesExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderRegistryInput)(nil)).Elem(), ProviderRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderRegistryArrayInput)(nil)).Elem(), ProviderRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseMetadataInput)(nil)).Elem(), ReleaseMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseMetadataArrayInput)(nil)).Elem(), ReleaseMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleasePostrenderInput)(nil)).Elem(), ReleasePostrenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleasePostrenderPtrInput)(nil)).Elem(), ReleasePostrenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseSetInput)(nil)).Elem(), ReleaseSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseSetArrayInput)(nil)).Elem(), ReleaseSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseSetListInput)(nil)).Elem(), ReleaseSetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseSetListArrayInput)(nil)).Elem(), ReleaseSetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseSetSensitiveInput)(nil)).Elem(), ReleaseSetSensitiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReleaseSetSensitiveArrayInput)(nil)).Elem(), ReleaseSetSensitiveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplatePostrenderInput)(nil)).Elem(), GetTemplatePostrenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplatePostrenderPtrInput)(nil)).Elem(), GetTemplatePostrenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateSetInput)(nil)).Elem(), GetTemplateSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateSetArrayInput)(nil)).Elem(), GetTemplateSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateSetListInput)(nil)).Elem(), GetTemplateSetListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateSetListArrayInput)(nil)).Elem(), GetTemplateSetListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateSetSensitiveInput)(nil)).Elem(), GetTemplateSetSensitiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateSetSensitiveArrayInput)(nil)).Elem(), GetTemplateSetSensitiveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateSetStringInput)(nil)).Elem(), GetTemplateSetStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTemplateSetStringArrayInput)(nil)).Elem(), GetTemplateSetStringArray{})
	pulumi.RegisterOutputType(ProviderExperimentsOutput{})
	pulumi.RegisterOutputType(ProviderExperimentsPtrOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesPtrOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesExecOutput{})
	pulumi.RegisterOutputType(ProviderKubernetesExecPtrOutput{})
	pulumi.RegisterOutputType(ProviderRegistryOutput{})
	pulumi.RegisterOutputType(ProviderRegistryArrayOutput{})
	pulumi.RegisterOutputType(ReleaseMetadataOutput{})
	pulumi.RegisterOutputType(ReleaseMetadataArrayOutput{})
	pulumi.RegisterOutputType(ReleasePostrenderOutput{})
	pulumi.RegisterOutputType(ReleasePostrenderPtrOutput{})
	pulumi.RegisterOutputType(ReleaseSetOutput{})
	pulumi.RegisterOutputType(ReleaseSetArrayOutput{})
	pulumi.RegisterOutputType(ReleaseSetListOutput{})
	pulumi.RegisterOutputType(ReleaseSetListArrayOutput{})
	pulumi.RegisterOutputType(ReleaseSetSensitiveOutput{})
	pulumi.RegisterOutputType(ReleaseSetSensitiveArrayOutput{})
	pulumi.RegisterOutputType(GetTemplatePostrenderOutput{})
	pulumi.RegisterOutputType(GetTemplatePostrenderPtrOutput{})
	pulumi.RegisterOutputType(GetTemplateSetOutput{})
	pulumi.RegisterOutputType(GetTemplateSetArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateSetListOutput{})
	pulumi.RegisterOutputType(GetTemplateSetListArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateSetSensitiveOutput{})
	pulumi.RegisterOutputType(GetTemplateSetSensitiveArrayOutput{})
	pulumi.RegisterOutputType(GetTemplateSetStringOutput{})
	pulumi.RegisterOutputType(GetTemplateSetStringArrayOutput{})
}
