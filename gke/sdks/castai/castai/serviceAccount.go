// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package castai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/castai/v7/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceAccount struct {
	pulumi.CustomResourceState

	// Author of the service account.
	Authors ServiceAccountAuthorArrayOutput `pulumi:"authors"`
	// Description of the service account.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Email of the service account.
	Email pulumi.StringOutput `pulumi:"email"`
	// Name of the service account.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of the organization.
	OrganizationId   pulumi.StringOutput             `pulumi:"organizationId"`
	ServiceAccountId pulumi.StringOutput             `pulumi:"serviceAccountId"`
	Timeouts         ServiceAccountTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewServiceAccount registers a new resource with the given unique name, arguments, and options.
func NewServiceAccount(ctx *pulumi.Context,
	name string, args *ServiceAccountArgs, opts ...pulumi.ResourceOption) (*ServiceAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource ServiceAccount
	err = ctx.RegisterPackageResource("castai:index/serviceAccount:ServiceAccount", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAccount gets an existing ServiceAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceAccountState, opts ...pulumi.ResourceOption) (*ServiceAccount, error) {
	var resource ServiceAccount
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("castai:index/serviceAccount:ServiceAccount", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceAccount resources.
type serviceAccountState struct {
	// Author of the service account.
	Authors []ServiceAccountAuthor `pulumi:"authors"`
	// Description of the service account.
	Description *string `pulumi:"description"`
	// Email of the service account.
	Email *string `pulumi:"email"`
	// Name of the service account.
	Name *string `pulumi:"name"`
	// ID of the organization.
	OrganizationId   *string                 `pulumi:"organizationId"`
	ServiceAccountId *string                 `pulumi:"serviceAccountId"`
	Timeouts         *ServiceAccountTimeouts `pulumi:"timeouts"`
}

type ServiceAccountState struct {
	// Author of the service account.
	Authors ServiceAccountAuthorArrayInput
	// Description of the service account.
	Description pulumi.StringPtrInput
	// Email of the service account.
	Email pulumi.StringPtrInput
	// Name of the service account.
	Name pulumi.StringPtrInput
	// ID of the organization.
	OrganizationId   pulumi.StringPtrInput
	ServiceAccountId pulumi.StringPtrInput
	Timeouts         ServiceAccountTimeoutsPtrInput
}

func (ServiceAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountState)(nil)).Elem()
}

type serviceAccountArgs struct {
	// Description of the service account.
	Description *string `pulumi:"description"`
	// Name of the service account.
	Name *string `pulumi:"name"`
	// ID of the organization.
	OrganizationId   string                  `pulumi:"organizationId"`
	ServiceAccountId *string                 `pulumi:"serviceAccountId"`
	Timeouts         *ServiceAccountTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a ServiceAccount resource.
type ServiceAccountArgs struct {
	// Description of the service account.
	Description pulumi.StringPtrInput
	// Name of the service account.
	Name pulumi.StringPtrInput
	// ID of the organization.
	OrganizationId   pulumi.StringInput
	ServiceAccountId pulumi.StringPtrInput
	Timeouts         ServiceAccountTimeoutsPtrInput
}

func (ServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountArgs)(nil)).Elem()
}

type ServiceAccountInput interface {
	pulumi.Input

	ToServiceAccountOutput() ServiceAccountOutput
	ToServiceAccountOutputWithContext(ctx context.Context) ServiceAccountOutput
}

func (*ServiceAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccount)(nil)).Elem()
}

func (i *ServiceAccount) ToServiceAccountOutput() ServiceAccountOutput {
	return i.ToServiceAccountOutputWithContext(context.Background())
}

func (i *ServiceAccount) ToServiceAccountOutputWithContext(ctx context.Context) ServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountOutput)
}

type ServiceAccountOutput struct{ *pulumi.OutputState }

func (ServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccount)(nil)).Elem()
}

func (o ServiceAccountOutput) ToServiceAccountOutput() ServiceAccountOutput {
	return o
}

func (o ServiceAccountOutput) ToServiceAccountOutputWithContext(ctx context.Context) ServiceAccountOutput {
	return o
}

// Author of the service account.
func (o ServiceAccountOutput) Authors() ServiceAccountAuthorArrayOutput {
	return o.ApplyT(func(v *ServiceAccount) ServiceAccountAuthorArrayOutput { return v.Authors }).(ServiceAccountAuthorArrayOutput)
}

// Description of the service account.
func (o ServiceAccountOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Email of the service account.
func (o ServiceAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// Name of the service account.
func (o ServiceAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of the organization.
func (o ServiceAccountOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o ServiceAccountOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceAccount) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

func (o ServiceAccountOutput) Timeouts() ServiceAccountTimeoutsPtrOutput {
	return o.ApplyT(func(v *ServiceAccount) ServiceAccountTimeoutsPtrOutput { return v.Timeouts }).(ServiceAccountTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountInput)(nil)).Elem(), &ServiceAccount{})
	pulumi.RegisterOutputType(ServiceAccountOutput{})
}
