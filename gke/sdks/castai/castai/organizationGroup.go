// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package castai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/castai/v7/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationGroup struct {
	pulumi.CustomResourceState

	// Description of the group.
	Description pulumi.StringPtrOutput             `pulumi:"description"`
	Members     OrganizationGroupMemberArrayOutput `pulumi:"members"`
	// Name of the group.
	Name                pulumi.StringOutput `pulumi:"name"`
	OrganizationGroupId pulumi.StringOutput `pulumi:"organizationGroupId"`
	// CAST AI organization ID.
	OrganizationId pulumi.StringOutput                `pulumi:"organizationId"`
	Timeouts       OrganizationGroupTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewOrganizationGroup registers a new resource with the given unique name, arguments, and options.
func NewOrganizationGroup(ctx *pulumi.Context,
	name string, args *OrganizationGroupArgs, opts ...pulumi.ResourceOption) (*OrganizationGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource OrganizationGroup
	err = ctx.RegisterPackageResource("castai:index/organizationGroup:OrganizationGroup", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationGroup gets an existing OrganizationGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationGroupState, opts ...pulumi.ResourceOption) (*OrganizationGroup, error) {
	var resource OrganizationGroup
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("castai:index/organizationGroup:OrganizationGroup", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationGroup resources.
type organizationGroupState struct {
	// Description of the group.
	Description *string                   `pulumi:"description"`
	Members     []OrganizationGroupMember `pulumi:"members"`
	// Name of the group.
	Name                *string `pulumi:"name"`
	OrganizationGroupId *string `pulumi:"organizationGroupId"`
	// CAST AI organization ID.
	OrganizationId *string                    `pulumi:"organizationId"`
	Timeouts       *OrganizationGroupTimeouts `pulumi:"timeouts"`
}

type OrganizationGroupState struct {
	// Description of the group.
	Description pulumi.StringPtrInput
	Members     OrganizationGroupMemberArrayInput
	// Name of the group.
	Name                pulumi.StringPtrInput
	OrganizationGroupId pulumi.StringPtrInput
	// CAST AI organization ID.
	OrganizationId pulumi.StringPtrInput
	Timeouts       OrganizationGroupTimeoutsPtrInput
}

func (OrganizationGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationGroupState)(nil)).Elem()
}

type organizationGroupArgs struct {
	// Description of the group.
	Description *string                   `pulumi:"description"`
	Members     []OrganizationGroupMember `pulumi:"members"`
	// Name of the group.
	Name                *string `pulumi:"name"`
	OrganizationGroupId *string `pulumi:"organizationGroupId"`
	// CAST AI organization ID.
	OrganizationId string                     `pulumi:"organizationId"`
	Timeouts       *OrganizationGroupTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a OrganizationGroup resource.
type OrganizationGroupArgs struct {
	// Description of the group.
	Description pulumi.StringPtrInput
	Members     OrganizationGroupMemberArrayInput
	// Name of the group.
	Name                pulumi.StringPtrInput
	OrganizationGroupId pulumi.StringPtrInput
	// CAST AI organization ID.
	OrganizationId pulumi.StringInput
	Timeouts       OrganizationGroupTimeoutsPtrInput
}

func (OrganizationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationGroupArgs)(nil)).Elem()
}

type OrganizationGroupInput interface {
	pulumi.Input

	ToOrganizationGroupOutput() OrganizationGroupOutput
	ToOrganizationGroupOutputWithContext(ctx context.Context) OrganizationGroupOutput
}

func (*OrganizationGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationGroup)(nil)).Elem()
}

func (i *OrganizationGroup) ToOrganizationGroupOutput() OrganizationGroupOutput {
	return i.ToOrganizationGroupOutputWithContext(context.Background())
}

func (i *OrganizationGroup) ToOrganizationGroupOutputWithContext(ctx context.Context) OrganizationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupOutput)
}

type OrganizationGroupOutput struct{ *pulumi.OutputState }

func (OrganizationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationGroup)(nil)).Elem()
}

func (o OrganizationGroupOutput) ToOrganizationGroupOutput() OrganizationGroupOutput {
	return o
}

func (o OrganizationGroupOutput) ToOrganizationGroupOutputWithContext(ctx context.Context) OrganizationGroupOutput {
	return o
}

// Description of the group.
func (o OrganizationGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o OrganizationGroupOutput) Members() OrganizationGroupMemberArrayOutput {
	return o.ApplyT(func(v *OrganizationGroup) OrganizationGroupMemberArrayOutput { return v.Members }).(OrganizationGroupMemberArrayOutput)
}

// Name of the group.
func (o OrganizationGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o OrganizationGroupOutput) OrganizationGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationGroup) pulumi.StringOutput { return v.OrganizationGroupId }).(pulumi.StringOutput)
}

// CAST AI organization ID.
func (o OrganizationGroupOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationGroup) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

func (o OrganizationGroupOutput) Timeouts() OrganizationGroupTimeoutsPtrOutput {
	return o.ApplyT(func(v *OrganizationGroup) OrganizationGroupTimeoutsPtrOutput { return v.Timeouts }).(OrganizationGroupTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupInput)(nil)).Elem(), &OrganizationGroup{})
	pulumi.RegisterOutputType(OrganizationGroupOutput{})
}
