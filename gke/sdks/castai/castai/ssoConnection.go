// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package castai

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-terraform-provider/sdks/go/castai/v7/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SsoConnection struct {
	pulumi.CustomResourceState

	// Azure AD connector
	Aad SsoConnectionAadPtrOutput `pulumi:"aad"`
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains pulumi.StringArrayOutput `pulumi:"additionalEmailDomains"`
	// Email domain of the connection
	EmailDomain pulumi.StringOutput `pulumi:"emailDomain"`
	// Connection name
	Name pulumi.StringOutput `pulumi:"name"`
	// Okta connector
	Okta            SsoConnectionOktaPtrOutput     `pulumi:"okta"`
	SsoConnectionId pulumi.StringOutput            `pulumi:"ssoConnectionId"`
	Timeouts        SsoConnectionTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewSsoConnection registers a new resource with the given unique name, arguments, and options.
func NewSsoConnection(ctx *pulumi.Context,
	name string, args *SsoConnectionArgs, opts ...pulumi.ResourceOption) (*SsoConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EmailDomain == nil {
		return nil, errors.New("invalid value for required argument 'EmailDomain'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	var resource SsoConnection
	err = ctx.RegisterPackageResource("castai:index/ssoConnection:SsoConnection", name, args, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSsoConnection gets an existing SsoConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSsoConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SsoConnectionState, opts ...pulumi.ResourceOption) (*SsoConnection, error) {
	var resource SsoConnection
	ref, err := internal.PkgGetPackageRef(ctx)
	if err != nil {
		return nil, err
	}
	err = ctx.ReadPackageResource("castai:index/ssoConnection:SsoConnection", name, id, state, &resource, ref, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SsoConnection resources.
type ssoConnectionState struct {
	// Azure AD connector
	Aad *SsoConnectionAad `pulumi:"aad"`
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains []string `pulumi:"additionalEmailDomains"`
	// Email domain of the connection
	EmailDomain *string `pulumi:"emailDomain"`
	// Connection name
	Name *string `pulumi:"name"`
	// Okta connector
	Okta            *SsoConnectionOkta     `pulumi:"okta"`
	SsoConnectionId *string                `pulumi:"ssoConnectionId"`
	Timeouts        *SsoConnectionTimeouts `pulumi:"timeouts"`
}

type SsoConnectionState struct {
	// Azure AD connector
	Aad SsoConnectionAadPtrInput
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains pulumi.StringArrayInput
	// Email domain of the connection
	EmailDomain pulumi.StringPtrInput
	// Connection name
	Name pulumi.StringPtrInput
	// Okta connector
	Okta            SsoConnectionOktaPtrInput
	SsoConnectionId pulumi.StringPtrInput
	Timeouts        SsoConnectionTimeoutsPtrInput
}

func (SsoConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ssoConnectionState)(nil)).Elem()
}

type ssoConnectionArgs struct {
	// Azure AD connector
	Aad *SsoConnectionAad `pulumi:"aad"`
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains []string `pulumi:"additionalEmailDomains"`
	// Email domain of the connection
	EmailDomain string `pulumi:"emailDomain"`
	// Connection name
	Name *string `pulumi:"name"`
	// Okta connector
	Okta            *SsoConnectionOkta     `pulumi:"okta"`
	SsoConnectionId *string                `pulumi:"ssoConnectionId"`
	Timeouts        *SsoConnectionTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SsoConnection resource.
type SsoConnectionArgs struct {
	// Azure AD connector
	Aad SsoConnectionAadPtrInput
	// Additional email domains that will be allowed to sign in via the connection
	AdditionalEmailDomains pulumi.StringArrayInput
	// Email domain of the connection
	EmailDomain pulumi.StringInput
	// Connection name
	Name pulumi.StringPtrInput
	// Okta connector
	Okta            SsoConnectionOktaPtrInput
	SsoConnectionId pulumi.StringPtrInput
	Timeouts        SsoConnectionTimeoutsPtrInput
}

func (SsoConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ssoConnectionArgs)(nil)).Elem()
}

type SsoConnectionInput interface {
	pulumi.Input

	ToSsoConnectionOutput() SsoConnectionOutput
	ToSsoConnectionOutputWithContext(ctx context.Context) SsoConnectionOutput
}

func (*SsoConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoConnection)(nil)).Elem()
}

func (i *SsoConnection) ToSsoConnectionOutput() SsoConnectionOutput {
	return i.ToSsoConnectionOutputWithContext(context.Background())
}

func (i *SsoConnection) ToSsoConnectionOutputWithContext(ctx context.Context) SsoConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionOutput)
}

type SsoConnectionOutput struct{ *pulumi.OutputState }

func (SsoConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoConnection)(nil)).Elem()
}

func (o SsoConnectionOutput) ToSsoConnectionOutput() SsoConnectionOutput {
	return o
}

func (o SsoConnectionOutput) ToSsoConnectionOutputWithContext(ctx context.Context) SsoConnectionOutput {
	return o
}

// Azure AD connector
func (o SsoConnectionOutput) Aad() SsoConnectionAadPtrOutput {
	return o.ApplyT(func(v *SsoConnection) SsoConnectionAadPtrOutput { return v.Aad }).(SsoConnectionAadPtrOutput)
}

// Additional email domains that will be allowed to sign in via the connection
func (o SsoConnectionOutput) AdditionalEmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SsoConnection) pulumi.StringArrayOutput { return v.AdditionalEmailDomains }).(pulumi.StringArrayOutput)
}

// Email domain of the connection
func (o SsoConnectionOutput) EmailDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *SsoConnection) pulumi.StringOutput { return v.EmailDomain }).(pulumi.StringOutput)
}

// Connection name
func (o SsoConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SsoConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Okta connector
func (o SsoConnectionOutput) Okta() SsoConnectionOktaPtrOutput {
	return o.ApplyT(func(v *SsoConnection) SsoConnectionOktaPtrOutput { return v.Okta }).(SsoConnectionOktaPtrOutput)
}

func (o SsoConnectionOutput) SsoConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *SsoConnection) pulumi.StringOutput { return v.SsoConnectionId }).(pulumi.StringOutput)
}

func (o SsoConnectionOutput) Timeouts() SsoConnectionTimeoutsPtrOutput {
	return o.ApplyT(func(v *SsoConnection) SsoConnectionTimeoutsPtrOutput { return v.Timeouts }).(SsoConnectionTimeoutsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SsoConnectionInput)(nil)).Elem(), &SsoConnection{})
	pulumi.RegisterOutputType(SsoConnectionOutput{})
}
