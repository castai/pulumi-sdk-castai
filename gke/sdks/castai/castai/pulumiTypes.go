// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package castai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-terraform-provider/sdks/go/castai/v7/castai/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AksClusterHttpProxyConfig struct {
	// Address to use for proxying HTTP requests.
	HttpProxy *string `pulumi:"httpProxy"`
	// Address to use for proxying HTTPS/TLS requests.
	HttpsProxy *string `pulumi:"httpsProxy"`
	// List of destinations that should not go through proxy.
	NoProxies []string `pulumi:"noProxies"`
}

// AksClusterHttpProxyConfigInput is an input type that accepts AksClusterHttpProxyConfigArgs and AksClusterHttpProxyConfigOutput values.
// You can construct a concrete instance of `AksClusterHttpProxyConfigInput` via:
//
//	AksClusterHttpProxyConfigArgs{...}
type AksClusterHttpProxyConfigInput interface {
	pulumi.Input

	ToAksClusterHttpProxyConfigOutput() AksClusterHttpProxyConfigOutput
	ToAksClusterHttpProxyConfigOutputWithContext(context.Context) AksClusterHttpProxyConfigOutput
}

type AksClusterHttpProxyConfigArgs struct {
	// Address to use for proxying HTTP requests.
	HttpProxy pulumi.StringPtrInput `pulumi:"httpProxy"`
	// Address to use for proxying HTTPS/TLS requests.
	HttpsProxy pulumi.StringPtrInput `pulumi:"httpsProxy"`
	// List of destinations that should not go through proxy.
	NoProxies pulumi.StringArrayInput `pulumi:"noProxies"`
}

func (AksClusterHttpProxyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AksClusterHttpProxyConfig)(nil)).Elem()
}

func (i AksClusterHttpProxyConfigArgs) ToAksClusterHttpProxyConfigOutput() AksClusterHttpProxyConfigOutput {
	return i.ToAksClusterHttpProxyConfigOutputWithContext(context.Background())
}

func (i AksClusterHttpProxyConfigArgs) ToAksClusterHttpProxyConfigOutputWithContext(ctx context.Context) AksClusterHttpProxyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksClusterHttpProxyConfigOutput)
}

func (i AksClusterHttpProxyConfigArgs) ToAksClusterHttpProxyConfigPtrOutput() AksClusterHttpProxyConfigPtrOutput {
	return i.ToAksClusterHttpProxyConfigPtrOutputWithContext(context.Background())
}

func (i AksClusterHttpProxyConfigArgs) ToAksClusterHttpProxyConfigPtrOutputWithContext(ctx context.Context) AksClusterHttpProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksClusterHttpProxyConfigOutput).ToAksClusterHttpProxyConfigPtrOutputWithContext(ctx)
}

// AksClusterHttpProxyConfigPtrInput is an input type that accepts AksClusterHttpProxyConfigArgs, AksClusterHttpProxyConfigPtr and AksClusterHttpProxyConfigPtrOutput values.
// You can construct a concrete instance of `AksClusterHttpProxyConfigPtrInput` via:
//
//	        AksClusterHttpProxyConfigArgs{...}
//
//	or:
//
//	        nil
type AksClusterHttpProxyConfigPtrInput interface {
	pulumi.Input

	ToAksClusterHttpProxyConfigPtrOutput() AksClusterHttpProxyConfigPtrOutput
	ToAksClusterHttpProxyConfigPtrOutputWithContext(context.Context) AksClusterHttpProxyConfigPtrOutput
}

type aksClusterHttpProxyConfigPtrType AksClusterHttpProxyConfigArgs

func AksClusterHttpProxyConfigPtr(v *AksClusterHttpProxyConfigArgs) AksClusterHttpProxyConfigPtrInput {
	return (*aksClusterHttpProxyConfigPtrType)(v)
}

func (*aksClusterHttpProxyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AksClusterHttpProxyConfig)(nil)).Elem()
}

func (i *aksClusterHttpProxyConfigPtrType) ToAksClusterHttpProxyConfigPtrOutput() AksClusterHttpProxyConfigPtrOutput {
	return i.ToAksClusterHttpProxyConfigPtrOutputWithContext(context.Background())
}

func (i *aksClusterHttpProxyConfigPtrType) ToAksClusterHttpProxyConfigPtrOutputWithContext(ctx context.Context) AksClusterHttpProxyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksClusterHttpProxyConfigPtrOutput)
}

type AksClusterHttpProxyConfigOutput struct{ *pulumi.OutputState }

func (AksClusterHttpProxyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AksClusterHttpProxyConfig)(nil)).Elem()
}

func (o AksClusterHttpProxyConfigOutput) ToAksClusterHttpProxyConfigOutput() AksClusterHttpProxyConfigOutput {
	return o
}

func (o AksClusterHttpProxyConfigOutput) ToAksClusterHttpProxyConfigOutputWithContext(ctx context.Context) AksClusterHttpProxyConfigOutput {
	return o
}

func (o AksClusterHttpProxyConfigOutput) ToAksClusterHttpProxyConfigPtrOutput() AksClusterHttpProxyConfigPtrOutput {
	return o.ToAksClusterHttpProxyConfigPtrOutputWithContext(context.Background())
}

func (o AksClusterHttpProxyConfigOutput) ToAksClusterHttpProxyConfigPtrOutputWithContext(ctx context.Context) AksClusterHttpProxyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AksClusterHttpProxyConfig) *AksClusterHttpProxyConfig {
		return &v
	}).(AksClusterHttpProxyConfigPtrOutput)
}

// Address to use for proxying HTTP requests.
func (o AksClusterHttpProxyConfigOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksClusterHttpProxyConfig) *string { return v.HttpProxy }).(pulumi.StringPtrOutput)
}

// Address to use for proxying HTTPS/TLS requests.
func (o AksClusterHttpProxyConfigOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksClusterHttpProxyConfig) *string { return v.HttpsProxy }).(pulumi.StringPtrOutput)
}

// List of destinations that should not go through proxy.
func (o AksClusterHttpProxyConfigOutput) NoProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AksClusterHttpProxyConfig) []string { return v.NoProxies }).(pulumi.StringArrayOutput)
}

type AksClusterHttpProxyConfigPtrOutput struct{ *pulumi.OutputState }

func (AksClusterHttpProxyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AksClusterHttpProxyConfig)(nil)).Elem()
}

func (o AksClusterHttpProxyConfigPtrOutput) ToAksClusterHttpProxyConfigPtrOutput() AksClusterHttpProxyConfigPtrOutput {
	return o
}

func (o AksClusterHttpProxyConfigPtrOutput) ToAksClusterHttpProxyConfigPtrOutputWithContext(ctx context.Context) AksClusterHttpProxyConfigPtrOutput {
	return o
}

func (o AksClusterHttpProxyConfigPtrOutput) Elem() AksClusterHttpProxyConfigOutput {
	return o.ApplyT(func(v *AksClusterHttpProxyConfig) AksClusterHttpProxyConfig {
		if v != nil {
			return *v
		}
		var ret AksClusterHttpProxyConfig
		return ret
	}).(AksClusterHttpProxyConfigOutput)
}

// Address to use for proxying HTTP requests.
func (o AksClusterHttpProxyConfigPtrOutput) HttpProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksClusterHttpProxyConfig) *string {
		if v == nil {
			return nil
		}
		return v.HttpProxy
	}).(pulumi.StringPtrOutput)
}

// Address to use for proxying HTTPS/TLS requests.
func (o AksClusterHttpProxyConfigPtrOutput) HttpsProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksClusterHttpProxyConfig) *string {
		if v == nil {
			return nil
		}
		return v.HttpsProxy
	}).(pulumi.StringPtrOutput)
}

// List of destinations that should not go through proxy.
func (o AksClusterHttpProxyConfigPtrOutput) NoProxies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AksClusterHttpProxyConfig) []string {
		if v == nil {
			return nil
		}
		return v.NoProxies
	}).(pulumi.StringArrayOutput)
}

type AksClusterTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

// AksClusterTimeoutsInput is an input type that accepts AksClusterTimeoutsArgs and AksClusterTimeoutsOutput values.
// You can construct a concrete instance of `AksClusterTimeoutsInput` via:
//
//	AksClusterTimeoutsArgs{...}
type AksClusterTimeoutsInput interface {
	pulumi.Input

	ToAksClusterTimeoutsOutput() AksClusterTimeoutsOutput
	ToAksClusterTimeoutsOutputWithContext(context.Context) AksClusterTimeoutsOutput
}

type AksClusterTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (AksClusterTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AksClusterTimeouts)(nil)).Elem()
}

func (i AksClusterTimeoutsArgs) ToAksClusterTimeoutsOutput() AksClusterTimeoutsOutput {
	return i.ToAksClusterTimeoutsOutputWithContext(context.Background())
}

func (i AksClusterTimeoutsArgs) ToAksClusterTimeoutsOutputWithContext(ctx context.Context) AksClusterTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksClusterTimeoutsOutput)
}

func (i AksClusterTimeoutsArgs) ToAksClusterTimeoutsPtrOutput() AksClusterTimeoutsPtrOutput {
	return i.ToAksClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (i AksClusterTimeoutsArgs) ToAksClusterTimeoutsPtrOutputWithContext(ctx context.Context) AksClusterTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksClusterTimeoutsOutput).ToAksClusterTimeoutsPtrOutputWithContext(ctx)
}

// AksClusterTimeoutsPtrInput is an input type that accepts AksClusterTimeoutsArgs, AksClusterTimeoutsPtr and AksClusterTimeoutsPtrOutput values.
// You can construct a concrete instance of `AksClusterTimeoutsPtrInput` via:
//
//	        AksClusterTimeoutsArgs{...}
//
//	or:
//
//	        nil
type AksClusterTimeoutsPtrInput interface {
	pulumi.Input

	ToAksClusterTimeoutsPtrOutput() AksClusterTimeoutsPtrOutput
	ToAksClusterTimeoutsPtrOutputWithContext(context.Context) AksClusterTimeoutsPtrOutput
}

type aksClusterTimeoutsPtrType AksClusterTimeoutsArgs

func AksClusterTimeoutsPtr(v *AksClusterTimeoutsArgs) AksClusterTimeoutsPtrInput {
	return (*aksClusterTimeoutsPtrType)(v)
}

func (*aksClusterTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AksClusterTimeouts)(nil)).Elem()
}

func (i *aksClusterTimeoutsPtrType) ToAksClusterTimeoutsPtrOutput() AksClusterTimeoutsPtrOutput {
	return i.ToAksClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (i *aksClusterTimeoutsPtrType) ToAksClusterTimeoutsPtrOutputWithContext(ctx context.Context) AksClusterTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AksClusterTimeoutsPtrOutput)
}

type AksClusterTimeoutsOutput struct{ *pulumi.OutputState }

func (AksClusterTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AksClusterTimeouts)(nil)).Elem()
}

func (o AksClusterTimeoutsOutput) ToAksClusterTimeoutsOutput() AksClusterTimeoutsOutput {
	return o
}

func (o AksClusterTimeoutsOutput) ToAksClusterTimeoutsOutputWithContext(ctx context.Context) AksClusterTimeoutsOutput {
	return o
}

func (o AksClusterTimeoutsOutput) ToAksClusterTimeoutsPtrOutput() AksClusterTimeoutsPtrOutput {
	return o.ToAksClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (o AksClusterTimeoutsOutput) ToAksClusterTimeoutsPtrOutputWithContext(ctx context.Context) AksClusterTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AksClusterTimeouts) *AksClusterTimeouts {
		return &v
	}).(AksClusterTimeoutsPtrOutput)
}

func (o AksClusterTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksClusterTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o AksClusterTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksClusterTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o AksClusterTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AksClusterTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type AksClusterTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (AksClusterTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AksClusterTimeouts)(nil)).Elem()
}

func (o AksClusterTimeoutsPtrOutput) ToAksClusterTimeoutsPtrOutput() AksClusterTimeoutsPtrOutput {
	return o
}

func (o AksClusterTimeoutsPtrOutput) ToAksClusterTimeoutsPtrOutputWithContext(ctx context.Context) AksClusterTimeoutsPtrOutput {
	return o
}

func (o AksClusterTimeoutsPtrOutput) Elem() AksClusterTimeoutsOutput {
	return o.ApplyT(func(v *AksClusterTimeouts) AksClusterTimeouts {
		if v != nil {
			return *v
		}
		var ret AksClusterTimeouts
		return ret
	}).(AksClusterTimeoutsOutput)
}

func (o AksClusterTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o AksClusterTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o AksClusterTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AksClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type AutoscalerAutoscalerSettings struct {
	// defines minimum and maximum amount of CPU the cluster can have.
	ClusterLimits *AutoscalerAutoscalerSettingsClusterLimits `pulumi:"clusterLimits"`
	// enable/disable autoscaler policies
	Enabled *bool `pulumi:"enabled"`
	// run autoscaler in scoped mode. Only marked pods and nodes will be considered.
	IsScopedMode *bool `pulumi:"isScopedMode"`
	// node downscaler defines policies for removing nodes based on the configured conditions.
	NodeDownscaler *AutoscalerAutoscalerSettingsNodeDownscaler `pulumi:"nodeDownscaler"`
	// marks whether partial matching should be used when deciding which custom node template to select.
	NodeTemplatesPartialMatchingEnabled *bool `pulumi:"nodeTemplatesPartialMatchingEnabled"`
	// policy defining whether autoscaler can use spot instances for provisioning additional workloads.
	SpotInstances *AutoscalerAutoscalerSettingsSpotInstances `pulumi:"spotInstances"`
	// policy defining autoscaler's behavior when unschedulable pods were detected.
	UnschedulablePods *AutoscalerAutoscalerSettingsUnschedulablePods `pulumi:"unschedulablePods"`
}

// AutoscalerAutoscalerSettingsInput is an input type that accepts AutoscalerAutoscalerSettingsArgs and AutoscalerAutoscalerSettingsOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsInput` via:
//
//	AutoscalerAutoscalerSettingsArgs{...}
type AutoscalerAutoscalerSettingsInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsOutput() AutoscalerAutoscalerSettingsOutput
	ToAutoscalerAutoscalerSettingsOutputWithContext(context.Context) AutoscalerAutoscalerSettingsOutput
}

type AutoscalerAutoscalerSettingsArgs struct {
	// defines minimum and maximum amount of CPU the cluster can have.
	ClusterLimits AutoscalerAutoscalerSettingsClusterLimitsPtrInput `pulumi:"clusterLimits"`
	// enable/disable autoscaler policies
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// run autoscaler in scoped mode. Only marked pods and nodes will be considered.
	IsScopedMode pulumi.BoolPtrInput `pulumi:"isScopedMode"`
	// node downscaler defines policies for removing nodes based on the configured conditions.
	NodeDownscaler AutoscalerAutoscalerSettingsNodeDownscalerPtrInput `pulumi:"nodeDownscaler"`
	// marks whether partial matching should be used when deciding which custom node template to select.
	NodeTemplatesPartialMatchingEnabled pulumi.BoolPtrInput `pulumi:"nodeTemplatesPartialMatchingEnabled"`
	// policy defining whether autoscaler can use spot instances for provisioning additional workloads.
	SpotInstances AutoscalerAutoscalerSettingsSpotInstancesPtrInput `pulumi:"spotInstances"`
	// policy defining autoscaler's behavior when unschedulable pods were detected.
	UnschedulablePods AutoscalerAutoscalerSettingsUnschedulablePodsPtrInput `pulumi:"unschedulablePods"`
}

func (AutoscalerAutoscalerSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettings)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsArgs) ToAutoscalerAutoscalerSettingsOutput() AutoscalerAutoscalerSettingsOutput {
	return i.ToAutoscalerAutoscalerSettingsOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsArgs) ToAutoscalerAutoscalerSettingsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsOutput)
}

func (i AutoscalerAutoscalerSettingsArgs) ToAutoscalerAutoscalerSettingsPtrOutput() AutoscalerAutoscalerSettingsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsArgs) ToAutoscalerAutoscalerSettingsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsOutput).ToAutoscalerAutoscalerSettingsPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsPtrInput is an input type that accepts AutoscalerAutoscalerSettingsArgs, AutoscalerAutoscalerSettingsPtr and AutoscalerAutoscalerSettingsPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsPtrOutput() AutoscalerAutoscalerSettingsPtrOutput
	ToAutoscalerAutoscalerSettingsPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsPtrOutput
}

type autoscalerAutoscalerSettingsPtrType AutoscalerAutoscalerSettingsArgs

func AutoscalerAutoscalerSettingsPtr(v *AutoscalerAutoscalerSettingsArgs) AutoscalerAutoscalerSettingsPtrInput {
	return (*autoscalerAutoscalerSettingsPtrType)(v)
}

func (*autoscalerAutoscalerSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettings)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsPtrType) ToAutoscalerAutoscalerSettingsPtrOutput() AutoscalerAutoscalerSettingsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsPtrType) ToAutoscalerAutoscalerSettingsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsPtrOutput)
}

type AutoscalerAutoscalerSettingsOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettings)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsOutput) ToAutoscalerAutoscalerSettingsOutput() AutoscalerAutoscalerSettingsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsOutput) ToAutoscalerAutoscalerSettingsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsOutput) ToAutoscalerAutoscalerSettingsPtrOutput() AutoscalerAutoscalerSettingsPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsOutput) ToAutoscalerAutoscalerSettingsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettings) *AutoscalerAutoscalerSettings {
		return &v
	}).(AutoscalerAutoscalerSettingsPtrOutput)
}

// defines minimum and maximum amount of CPU the cluster can have.
func (o AutoscalerAutoscalerSettingsOutput) ClusterLimits() AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettings) *AutoscalerAutoscalerSettingsClusterLimits {
		return v.ClusterLimits
	}).(AutoscalerAutoscalerSettingsClusterLimitsPtrOutput)
}

// enable/disable autoscaler policies
func (o AutoscalerAutoscalerSettingsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettings) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// run autoscaler in scoped mode. Only marked pods and nodes will be considered.
func (o AutoscalerAutoscalerSettingsOutput) IsScopedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettings) *bool { return v.IsScopedMode }).(pulumi.BoolPtrOutput)
}

// node downscaler defines policies for removing nodes based on the configured conditions.
func (o AutoscalerAutoscalerSettingsOutput) NodeDownscaler() AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettings) *AutoscalerAutoscalerSettingsNodeDownscaler {
		return v.NodeDownscaler
	}).(AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput)
}

// marks whether partial matching should be used when deciding which custom node template to select.
func (o AutoscalerAutoscalerSettingsOutput) NodeTemplatesPartialMatchingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettings) *bool { return v.NodeTemplatesPartialMatchingEnabled }).(pulumi.BoolPtrOutput)
}

// policy defining whether autoscaler can use spot instances for provisioning additional workloads.
func (o AutoscalerAutoscalerSettingsOutput) SpotInstances() AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettings) *AutoscalerAutoscalerSettingsSpotInstances {
		return v.SpotInstances
	}).(AutoscalerAutoscalerSettingsSpotInstancesPtrOutput)
}

// policy defining autoscaler's behavior when unschedulable pods were detected.
func (o AutoscalerAutoscalerSettingsOutput) UnschedulablePods() AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettings) *AutoscalerAutoscalerSettingsUnschedulablePods {
		return v.UnschedulablePods
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput)
}

type AutoscalerAutoscalerSettingsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettings)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsPtrOutput) ToAutoscalerAutoscalerSettingsPtrOutput() AutoscalerAutoscalerSettingsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsPtrOutput) ToAutoscalerAutoscalerSettingsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsPtrOutput) Elem() AutoscalerAutoscalerSettingsOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettings) AutoscalerAutoscalerSettings {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettings
		return ret
	}).(AutoscalerAutoscalerSettingsOutput)
}

// defines minimum and maximum amount of CPU the cluster can have.
func (o AutoscalerAutoscalerSettingsPtrOutput) ClusterLimits() AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettings) *AutoscalerAutoscalerSettingsClusterLimits {
		if v == nil {
			return nil
		}
		return v.ClusterLimits
	}).(AutoscalerAutoscalerSettingsClusterLimitsPtrOutput)
}

// enable/disable autoscaler policies
func (o AutoscalerAutoscalerSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// run autoscaler in scoped mode. Only marked pods and nodes will be considered.
func (o AutoscalerAutoscalerSettingsPtrOutput) IsScopedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IsScopedMode
	}).(pulumi.BoolPtrOutput)
}

// node downscaler defines policies for removing nodes based on the configured conditions.
func (o AutoscalerAutoscalerSettingsPtrOutput) NodeDownscaler() AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettings) *AutoscalerAutoscalerSettingsNodeDownscaler {
		if v == nil {
			return nil
		}
		return v.NodeDownscaler
	}).(AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput)
}

// marks whether partial matching should be used when deciding which custom node template to select.
func (o AutoscalerAutoscalerSettingsPtrOutput) NodeTemplatesPartialMatchingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettings) *bool {
		if v == nil {
			return nil
		}
		return v.NodeTemplatesPartialMatchingEnabled
	}).(pulumi.BoolPtrOutput)
}

// policy defining whether autoscaler can use spot instances for provisioning additional workloads.
func (o AutoscalerAutoscalerSettingsPtrOutput) SpotInstances() AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettings) *AutoscalerAutoscalerSettingsSpotInstances {
		if v == nil {
			return nil
		}
		return v.SpotInstances
	}).(AutoscalerAutoscalerSettingsSpotInstancesPtrOutput)
}

// policy defining autoscaler's behavior when unschedulable pods were detected.
func (o AutoscalerAutoscalerSettingsPtrOutput) UnschedulablePods() AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettings) *AutoscalerAutoscalerSettingsUnschedulablePods {
		if v == nil {
			return nil
		}
		return v.UnschedulablePods
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput)
}

type AutoscalerAutoscalerSettingsClusterLimits struct {
	// defines the minimum and maximum amount of CPUs for cluster's worker nodes.
	Cpu *AutoscalerAutoscalerSettingsClusterLimitsCpu `pulumi:"cpu"`
	// enable/disable cluster size limits policy.
	Enabled *bool `pulumi:"enabled"`
}

// AutoscalerAutoscalerSettingsClusterLimitsInput is an input type that accepts AutoscalerAutoscalerSettingsClusterLimitsArgs and AutoscalerAutoscalerSettingsClusterLimitsOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsClusterLimitsInput` via:
//
//	AutoscalerAutoscalerSettingsClusterLimitsArgs{...}
type AutoscalerAutoscalerSettingsClusterLimitsInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsClusterLimitsOutput() AutoscalerAutoscalerSettingsClusterLimitsOutput
	ToAutoscalerAutoscalerSettingsClusterLimitsOutputWithContext(context.Context) AutoscalerAutoscalerSettingsClusterLimitsOutput
}

type AutoscalerAutoscalerSettingsClusterLimitsArgs struct {
	// defines the minimum and maximum amount of CPUs for cluster's worker nodes.
	Cpu AutoscalerAutoscalerSettingsClusterLimitsCpuPtrInput `pulumi:"cpu"`
	// enable/disable cluster size limits policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AutoscalerAutoscalerSettingsClusterLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsClusterLimits)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsClusterLimitsArgs) ToAutoscalerAutoscalerSettingsClusterLimitsOutput() AutoscalerAutoscalerSettingsClusterLimitsOutput {
	return i.ToAutoscalerAutoscalerSettingsClusterLimitsOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsClusterLimitsArgs) ToAutoscalerAutoscalerSettingsClusterLimitsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsClusterLimitsOutput)
}

func (i AutoscalerAutoscalerSettingsClusterLimitsArgs) ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsClusterLimitsArgs) ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsClusterLimitsOutput).ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsClusterLimitsPtrInput is an input type that accepts AutoscalerAutoscalerSettingsClusterLimitsArgs, AutoscalerAutoscalerSettingsClusterLimitsPtr and AutoscalerAutoscalerSettingsClusterLimitsPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsClusterLimitsPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsClusterLimitsArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsClusterLimitsPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsPtrOutput
	ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsClusterLimitsPtrOutput
}

type autoscalerAutoscalerSettingsClusterLimitsPtrType AutoscalerAutoscalerSettingsClusterLimitsArgs

func AutoscalerAutoscalerSettingsClusterLimitsPtr(v *AutoscalerAutoscalerSettingsClusterLimitsArgs) AutoscalerAutoscalerSettingsClusterLimitsPtrInput {
	return (*autoscalerAutoscalerSettingsClusterLimitsPtrType)(v)
}

func (*autoscalerAutoscalerSettingsClusterLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsClusterLimits)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsClusterLimitsPtrType) ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsClusterLimitsPtrType) ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsClusterLimitsPtrOutput)
}

type AutoscalerAutoscalerSettingsClusterLimitsOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsClusterLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsClusterLimits)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsClusterLimitsOutput) ToAutoscalerAutoscalerSettingsClusterLimitsOutput() AutoscalerAutoscalerSettingsClusterLimitsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsClusterLimitsOutput) ToAutoscalerAutoscalerSettingsClusterLimitsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsClusterLimitsOutput) ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsClusterLimitsOutput) ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsClusterLimits) *AutoscalerAutoscalerSettingsClusterLimits {
		return &v
	}).(AutoscalerAutoscalerSettingsClusterLimitsPtrOutput)
}

// defines the minimum and maximum amount of CPUs for cluster's worker nodes.
func (o AutoscalerAutoscalerSettingsClusterLimitsOutput) Cpu() AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsClusterLimits) *AutoscalerAutoscalerSettingsClusterLimitsCpu {
		return v.Cpu
	}).(AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput)
}

// enable/disable cluster size limits policy.
func (o AutoscalerAutoscalerSettingsClusterLimitsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsClusterLimits) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AutoscalerAutoscalerSettingsClusterLimitsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsClusterLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsClusterLimits)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsClusterLimitsPtrOutput) ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsClusterLimitsPtrOutput) ToAutoscalerAutoscalerSettingsClusterLimitsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsClusterLimitsPtrOutput) Elem() AutoscalerAutoscalerSettingsClusterLimitsOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsClusterLimits) AutoscalerAutoscalerSettingsClusterLimits {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsClusterLimits
		return ret
	}).(AutoscalerAutoscalerSettingsClusterLimitsOutput)
}

// defines the minimum and maximum amount of CPUs for cluster's worker nodes.
func (o AutoscalerAutoscalerSettingsClusterLimitsPtrOutput) Cpu() AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsClusterLimits) *AutoscalerAutoscalerSettingsClusterLimitsCpu {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput)
}

// enable/disable cluster size limits policy.
func (o AutoscalerAutoscalerSettingsClusterLimitsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsClusterLimits) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type AutoscalerAutoscalerSettingsClusterLimitsCpu struct {
	// defines the maximum allowed amount of vCPUs in the whole cluster.
	MaxCores *float64 `pulumi:"maxCores"`
	// defines the minimum allowed amount of CPUs in the whole cluster.
	MinCores *float64 `pulumi:"minCores"`
}

// AutoscalerAutoscalerSettingsClusterLimitsCpuInput is an input type that accepts AutoscalerAutoscalerSettingsClusterLimitsCpuArgs and AutoscalerAutoscalerSettingsClusterLimitsCpuOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsClusterLimitsCpuInput` via:
//
//	AutoscalerAutoscalerSettingsClusterLimitsCpuArgs{...}
type AutoscalerAutoscalerSettingsClusterLimitsCpuInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsClusterLimitsCpuOutput() AutoscalerAutoscalerSettingsClusterLimitsCpuOutput
	ToAutoscalerAutoscalerSettingsClusterLimitsCpuOutputWithContext(context.Context) AutoscalerAutoscalerSettingsClusterLimitsCpuOutput
}

type AutoscalerAutoscalerSettingsClusterLimitsCpuArgs struct {
	// defines the maximum allowed amount of vCPUs in the whole cluster.
	MaxCores pulumi.Float64PtrInput `pulumi:"maxCores"`
	// defines the minimum allowed amount of CPUs in the whole cluster.
	MinCores pulumi.Float64PtrInput `pulumi:"minCores"`
}

func (AutoscalerAutoscalerSettingsClusterLimitsCpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsClusterLimitsCpu)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsClusterLimitsCpuArgs) ToAutoscalerAutoscalerSettingsClusterLimitsCpuOutput() AutoscalerAutoscalerSettingsClusterLimitsCpuOutput {
	return i.ToAutoscalerAutoscalerSettingsClusterLimitsCpuOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsClusterLimitsCpuArgs) ToAutoscalerAutoscalerSettingsClusterLimitsCpuOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsCpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsClusterLimitsCpuOutput)
}

func (i AutoscalerAutoscalerSettingsClusterLimitsCpuArgs) ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsClusterLimitsCpuArgs) ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsClusterLimitsCpuOutput).ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsClusterLimitsCpuPtrInput is an input type that accepts AutoscalerAutoscalerSettingsClusterLimitsCpuArgs, AutoscalerAutoscalerSettingsClusterLimitsCpuPtr and AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsClusterLimitsCpuPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsClusterLimitsCpuArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsClusterLimitsCpuPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput
	ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput
}

type autoscalerAutoscalerSettingsClusterLimitsCpuPtrType AutoscalerAutoscalerSettingsClusterLimitsCpuArgs

func AutoscalerAutoscalerSettingsClusterLimitsCpuPtr(v *AutoscalerAutoscalerSettingsClusterLimitsCpuArgs) AutoscalerAutoscalerSettingsClusterLimitsCpuPtrInput {
	return (*autoscalerAutoscalerSettingsClusterLimitsCpuPtrType)(v)
}

func (*autoscalerAutoscalerSettingsClusterLimitsCpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsClusterLimitsCpu)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsClusterLimitsCpuPtrType) ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsClusterLimitsCpuPtrType) ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput)
}

type AutoscalerAutoscalerSettingsClusterLimitsCpuOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsClusterLimitsCpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsClusterLimitsCpu)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsClusterLimitsCpuOutput) ToAutoscalerAutoscalerSettingsClusterLimitsCpuOutput() AutoscalerAutoscalerSettingsClusterLimitsCpuOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsClusterLimitsCpuOutput) ToAutoscalerAutoscalerSettingsClusterLimitsCpuOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsCpuOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsClusterLimitsCpuOutput) ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsClusterLimitsCpuOutput) ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsClusterLimitsCpu) *AutoscalerAutoscalerSettingsClusterLimitsCpu {
		return &v
	}).(AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput)
}

// defines the maximum allowed amount of vCPUs in the whole cluster.
func (o AutoscalerAutoscalerSettingsClusterLimitsCpuOutput) MaxCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsClusterLimitsCpu) *float64 { return v.MaxCores }).(pulumi.Float64PtrOutput)
}

// defines the minimum allowed amount of CPUs in the whole cluster.
func (o AutoscalerAutoscalerSettingsClusterLimitsCpuOutput) MinCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsClusterLimitsCpu) *float64 { return v.MinCores }).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsClusterLimitsCpu)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput) ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput() AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput) ToAutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput) Elem() AutoscalerAutoscalerSettingsClusterLimitsCpuOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsClusterLimitsCpu) AutoscalerAutoscalerSettingsClusterLimitsCpu {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsClusterLimitsCpu
		return ret
	}).(AutoscalerAutoscalerSettingsClusterLimitsCpuOutput)
}

// defines the maximum allowed amount of vCPUs in the whole cluster.
func (o AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput) MaxCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsClusterLimitsCpu) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxCores
	}).(pulumi.Float64PtrOutput)
}

// defines the minimum allowed amount of CPUs in the whole cluster.
func (o AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput) MinCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsClusterLimitsCpu) *float64 {
		if v == nil {
			return nil
		}
		return v.MinCores
	}).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsNodeDownscaler struct {
	// defines whether Node Downscaler should opt in for removing empty worker nodes when possible.
	EmptyNodes *AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes `pulumi:"emptyNodes"`
	// enable/disable node downscaler policy.
	Enabled *bool `pulumi:"enabled"`
	// defines the CAST AI Evictor component settings. Evictor watches the pods running in your cluster and looks for ways to compact them into fewer nodes, making nodes empty, which will be removed by the empty worker nodes policy.
	Evictor *AutoscalerAutoscalerSettingsNodeDownscalerEvictor `pulumi:"evictor"`
}

// AutoscalerAutoscalerSettingsNodeDownscalerInput is an input type that accepts AutoscalerAutoscalerSettingsNodeDownscalerArgs and AutoscalerAutoscalerSettingsNodeDownscalerOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsNodeDownscalerInput` via:
//
//	AutoscalerAutoscalerSettingsNodeDownscalerArgs{...}
type AutoscalerAutoscalerSettingsNodeDownscalerInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsNodeDownscalerOutput() AutoscalerAutoscalerSettingsNodeDownscalerOutput
	ToAutoscalerAutoscalerSettingsNodeDownscalerOutputWithContext(context.Context) AutoscalerAutoscalerSettingsNodeDownscalerOutput
}

type AutoscalerAutoscalerSettingsNodeDownscalerArgs struct {
	// defines whether Node Downscaler should opt in for removing empty worker nodes when possible.
	EmptyNodes AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrInput `pulumi:"emptyNodes"`
	// enable/disable node downscaler policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// defines the CAST AI Evictor component settings. Evictor watches the pods running in your cluster and looks for ways to compact them into fewer nodes, making nodes empty, which will be removed by the empty worker nodes policy.
	Evictor AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrInput `pulumi:"evictor"`
}

func (AutoscalerAutoscalerSettingsNodeDownscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscaler)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerOutput() AutoscalerAutoscalerSettingsNodeDownscalerOutput {
	return i.ToAutoscalerAutoscalerSettingsNodeDownscalerOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsNodeDownscalerOutput)
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsNodeDownscalerOutput).ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsNodeDownscalerPtrInput is an input type that accepts AutoscalerAutoscalerSettingsNodeDownscalerArgs, AutoscalerAutoscalerSettingsNodeDownscalerPtr and AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsNodeDownscalerPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsNodeDownscalerArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsNodeDownscalerPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput
	ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput
}

type autoscalerAutoscalerSettingsNodeDownscalerPtrType AutoscalerAutoscalerSettingsNodeDownscalerArgs

func AutoscalerAutoscalerSettingsNodeDownscalerPtr(v *AutoscalerAutoscalerSettingsNodeDownscalerArgs) AutoscalerAutoscalerSettingsNodeDownscalerPtrInput {
	return (*autoscalerAutoscalerSettingsNodeDownscalerPtrType)(v)
}

func (*autoscalerAutoscalerSettingsNodeDownscalerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsNodeDownscaler)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsNodeDownscalerPtrType) ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsNodeDownscalerPtrType) ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput)
}

type AutoscalerAutoscalerSettingsNodeDownscalerOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsNodeDownscalerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscaler)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerOutput() AutoscalerAutoscalerSettingsNodeDownscalerOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsNodeDownscaler) *AutoscalerAutoscalerSettingsNodeDownscaler {
		return &v
	}).(AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput)
}

// defines whether Node Downscaler should opt in for removing empty worker nodes when possible.
func (o AutoscalerAutoscalerSettingsNodeDownscalerOutput) EmptyNodes() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscaler) *AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes {
		return v.EmptyNodes
	}).(AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput)
}

// enable/disable node downscaler policy.
func (o AutoscalerAutoscalerSettingsNodeDownscalerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscaler) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// defines the CAST AI Evictor component settings. Evictor watches the pods running in your cluster and looks for ways to compact them into fewer nodes, making nodes empty, which will be removed by the empty worker nodes policy.
func (o AutoscalerAutoscalerSettingsNodeDownscalerOutput) Evictor() AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscaler) *AutoscalerAutoscalerSettingsNodeDownscalerEvictor {
		return v.Evictor
	}).(AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput)
}

type AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsNodeDownscaler)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput) Elem() AutoscalerAutoscalerSettingsNodeDownscalerOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscaler) AutoscalerAutoscalerSettingsNodeDownscaler {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsNodeDownscaler
		return ret
	}).(AutoscalerAutoscalerSettingsNodeDownscalerOutput)
}

// defines whether Node Downscaler should opt in for removing empty worker nodes when possible.
func (o AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput) EmptyNodes() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscaler) *AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes {
		if v == nil {
			return nil
		}
		return v.EmptyNodes
	}).(AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput)
}

// enable/disable node downscaler policy.
func (o AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscaler) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// defines the CAST AI Evictor component settings. Evictor watches the pods running in your cluster and looks for ways to compact them into fewer nodes, making nodes empty, which will be removed by the empty worker nodes policy.
func (o AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput) Evictor() AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscaler) *AutoscalerAutoscalerSettingsNodeDownscalerEvictor {
		if v == nil {
			return nil
		}
		return v.Evictor
	}).(AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput)
}

type AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes struct {
	// period (in seconds) to wait before removing the node. Might be useful to control the aggressiveness of the downscaler.
	DelaySeconds *float64 `pulumi:"delaySeconds"`
	// enable/disable the empty worker nodes policy.
	Enabled *bool `pulumi:"enabled"`
}

// AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesInput is an input type that accepts AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs and AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesInput` via:
//
//	AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs{...}
type AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput
	ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutputWithContext(context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput
}

type AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs struct {
	// period (in seconds) to wait before removing the node. Might be useful to control the aggressiveness of the downscaler.
	DelaySeconds pulumi.Float64PtrInput `pulumi:"delaySeconds"`
	// enable/disable the empty worker nodes policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput {
	return i.ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput)
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput).ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrInput is an input type that accepts AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs, AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtr and AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput
	ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput
}

type autoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrType AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs

func AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtr(v *AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrInput {
	return (*autoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrType)(v)
}

func (*autoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrType) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrType) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput)
}

type AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes) *AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes {
		return &v
	}).(AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput)
}

// period (in seconds) to wait before removing the node. Might be useful to control the aggressiveness of the downscaler.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput) DelaySeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes) *float64 { return v.DelaySeconds }).(pulumi.Float64PtrOutput)
}

// enable/disable the empty worker nodes policy.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput) Elem() AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes) AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes
		return ret
	}).(AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput)
}

// period (in seconds) to wait before removing the node. Might be useful to control the aggressiveness of the downscaler.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput) DelaySeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes) *float64 {
		if v == nil {
			return nil
		}
		return v.DelaySeconds
	}).(pulumi.Float64PtrOutput)
}

// enable/disable the empty worker nodes policy.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodes) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type AutoscalerAutoscalerSettingsNodeDownscalerEvictor struct {
	// enable/disable aggressive mode. By default, Evictor does not target nodes that are running unreplicated pods. This mode will make the Evictor start considering application with just a single replica.
	AggressiveMode *bool `pulumi:"aggressiveMode"`
	// configure the interval duration between Evictor operations. This property can be used to lower or raise the frequency of the Evictor's find-and-drain operations.
	CycleInterval *string `pulumi:"cycleInterval"`
	// enable/disable dry-run. This property allows you to prevent the Evictor from carrying any operations out and preview the actions it would take.
	DryRun *bool `pulumi:"dryRun"`
	// enable/disable the Evictor policy. This will either install or uninstall the Evictor component in your cluster.
	Enabled *bool `pulumi:"enabled"`
	// if enabled then Evictor will attempt to evict pods that have pod disruption budgets configured.
	IgnorePodDisruptionBudgets *bool `pulumi:"ignorePodDisruptionBudgets"`
	// configure the node grace period which controls the duration which must pass after a node has been created before Evictor starts considering that node.
	NodeGracePeriodMinutes *float64 `pulumi:"nodeGracePeriodMinutes"`
	// configure the pod eviction failure back off interval. If pod eviction fails then Evictor will attempt to evict it again after the amount of time specified here.
	PodEvictionFailureBackOffInterval *string `pulumi:"podEvictionFailureBackOffInterval"`
	// enable/disable scoped mode. By default, Evictor targets all nodes in the cluster. This mode will constrain it to just the nodes which were created by CAST AI.
	ScopedMode *bool `pulumi:"scopedMode"`
}

// AutoscalerAutoscalerSettingsNodeDownscalerEvictorInput is an input type that accepts AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs and AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsNodeDownscalerEvictorInput` via:
//
//	AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs{...}
type AutoscalerAutoscalerSettingsNodeDownscalerEvictorInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput() AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput
	ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorOutputWithContext(context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput
}

type AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs struct {
	// enable/disable aggressive mode. By default, Evictor does not target nodes that are running unreplicated pods. This mode will make the Evictor start considering application with just a single replica.
	AggressiveMode pulumi.BoolPtrInput `pulumi:"aggressiveMode"`
	// configure the interval duration between Evictor operations. This property can be used to lower or raise the frequency of the Evictor's find-and-drain operations.
	CycleInterval pulumi.StringPtrInput `pulumi:"cycleInterval"`
	// enable/disable dry-run. This property allows you to prevent the Evictor from carrying any operations out and preview the actions it would take.
	DryRun pulumi.BoolPtrInput `pulumi:"dryRun"`
	// enable/disable the Evictor policy. This will either install or uninstall the Evictor component in your cluster.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// if enabled then Evictor will attempt to evict pods that have pod disruption budgets configured.
	IgnorePodDisruptionBudgets pulumi.BoolPtrInput `pulumi:"ignorePodDisruptionBudgets"`
	// configure the node grace period which controls the duration which must pass after a node has been created before Evictor starts considering that node.
	NodeGracePeriodMinutes pulumi.Float64PtrInput `pulumi:"nodeGracePeriodMinutes"`
	// configure the pod eviction failure back off interval. If pod eviction fails then Evictor will attempt to evict it again after the amount of time specified here.
	PodEvictionFailureBackOffInterval pulumi.StringPtrInput `pulumi:"podEvictionFailureBackOffInterval"`
	// enable/disable scoped mode. By default, Evictor targets all nodes in the cluster. This mode will constrain it to just the nodes which were created by CAST AI.
	ScopedMode pulumi.BoolPtrInput `pulumi:"scopedMode"`
}

func (AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerEvictor)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput() AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput {
	return i.ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput)
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput).ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrInput is an input type that accepts AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs, AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtr and AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput
	ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput
}

type autoscalerAutoscalerSettingsNodeDownscalerEvictorPtrType AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs

func AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtr(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs) AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrInput {
	return (*autoscalerAutoscalerSettingsNodeDownscalerEvictorPtrType)(v)
}

func (*autoscalerAutoscalerSettingsNodeDownscalerEvictorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsNodeDownscalerEvictor)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsNodeDownscalerEvictorPtrType) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsNodeDownscalerEvictorPtrType) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput)
}

type AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerEvictor)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput() AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *AutoscalerAutoscalerSettingsNodeDownscalerEvictor {
		return &v
	}).(AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput)
}

// enable/disable aggressive mode. By default, Evictor does not target nodes that are running unreplicated pods. This mode will make the Evictor start considering application with just a single replica.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) AggressiveMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool { return v.AggressiveMode }).(pulumi.BoolPtrOutput)
}

// configure the interval duration between Evictor operations. This property can be used to lower or raise the frequency of the Evictor's find-and-drain operations.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) CycleInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *string { return v.CycleInterval }).(pulumi.StringPtrOutput)
}

// enable/disable dry-run. This property allows you to prevent the Evictor from carrying any operations out and preview the actions it would take.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool { return v.DryRun }).(pulumi.BoolPtrOutput)
}

// enable/disable the Evictor policy. This will either install or uninstall the Evictor component in your cluster.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// if enabled then Evictor will attempt to evict pods that have pod disruption budgets configured.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) IgnorePodDisruptionBudgets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool { return v.IgnorePodDisruptionBudgets }).(pulumi.BoolPtrOutput)
}

// configure the node grace period which controls the duration which must pass after a node has been created before Evictor starts considering that node.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) NodeGracePeriodMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *float64 { return v.NodeGracePeriodMinutes }).(pulumi.Float64PtrOutput)
}

// configure the pod eviction failure back off interval. If pod eviction fails then Evictor will attempt to evict it again after the amount of time specified here.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) PodEvictionFailureBackOffInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *string {
		return v.PodEvictionFailureBackOffInterval
	}).(pulumi.StringPtrOutput)
}

// enable/disable scoped mode. By default, Evictor targets all nodes in the cluster. This mode will constrain it to just the nodes which were created by CAST AI.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput) ScopedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool { return v.ScopedMode }).(pulumi.BoolPtrOutput)
}

type AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsNodeDownscalerEvictor)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput() AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) ToAutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) Elem() AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictor) AutoscalerAutoscalerSettingsNodeDownscalerEvictor {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsNodeDownscalerEvictor
		return ret
	}).(AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput)
}

// enable/disable aggressive mode. By default, Evictor does not target nodes that are running unreplicated pods. This mode will make the Evictor start considering application with just a single replica.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) AggressiveMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool {
		if v == nil {
			return nil
		}
		return v.AggressiveMode
	}).(pulumi.BoolPtrOutput)
}

// configure the interval duration between Evictor operations. This property can be used to lower or raise the frequency of the Evictor's find-and-drain operations.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) CycleInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *string {
		if v == nil {
			return nil
		}
		return v.CycleInterval
	}).(pulumi.StringPtrOutput)
}

// enable/disable dry-run. This property allows you to prevent the Evictor from carrying any operations out and preview the actions it would take.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) DryRun() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool {
		if v == nil {
			return nil
		}
		return v.DryRun
	}).(pulumi.BoolPtrOutput)
}

// enable/disable the Evictor policy. This will either install or uninstall the Evictor component in your cluster.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// if enabled then Evictor will attempt to evict pods that have pod disruption budgets configured.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) IgnorePodDisruptionBudgets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool {
		if v == nil {
			return nil
		}
		return v.IgnorePodDisruptionBudgets
	}).(pulumi.BoolPtrOutput)
}

// configure the node grace period which controls the duration which must pass after a node has been created before Evictor starts considering that node.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) NodeGracePeriodMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *float64 {
		if v == nil {
			return nil
		}
		return v.NodeGracePeriodMinutes
	}).(pulumi.Float64PtrOutput)
}

// configure the pod eviction failure back off interval. If pod eviction fails then Evictor will attempt to evict it again after the amount of time specified here.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) PodEvictionFailureBackOffInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *string {
		if v == nil {
			return nil
		}
		return v.PodEvictionFailureBackOffInterval
	}).(pulumi.StringPtrOutput)
}

// enable/disable scoped mode. By default, Evictor targets all nodes in the cluster. This mode will constrain it to just the nodes which were created by CAST AI.
func (o AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput) ScopedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsNodeDownscalerEvictor) *bool {
		if v == nil {
			return nil
		}
		return v.ScopedMode
	}).(pulumi.BoolPtrOutput)
}

type AutoscalerAutoscalerSettingsSpotInstances struct {
	// enable/disable spot instances policy.
	Enabled *bool `pulumi:"enabled"`
	// max allowed reclaim rate when choosing spot instance type. E.g. if the value is 10%, instance types having 10% or higher reclaim rate will not be considered. Set to zero to use all instance types regardless of reclaim rate.
	MaxReclaimRate *float64 `pulumi:"maxReclaimRate"`
	// policy defining whether autoscaler can use spot backups instead of spot instances when spot instances are not available.
	SpotBackups *AutoscalerAutoscalerSettingsSpotInstancesSpotBackups `pulumi:"spotBackups"`
	// enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
	SpotDiversityEnabled *bool `pulumi:"spotDiversityEnabled"`
	// allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
	SpotDiversityPriceIncreaseLimit *float64 `pulumi:"spotDiversityPriceIncreaseLimit"`
	// configure the handling of SPOT interruption predictions.
	SpotInterruptionPredictions *AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions `pulumi:"spotInterruptionPredictions"`
}

// AutoscalerAutoscalerSettingsSpotInstancesInput is an input type that accepts AutoscalerAutoscalerSettingsSpotInstancesArgs and AutoscalerAutoscalerSettingsSpotInstancesOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsSpotInstancesInput` via:
//
//	AutoscalerAutoscalerSettingsSpotInstancesArgs{...}
type AutoscalerAutoscalerSettingsSpotInstancesInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsSpotInstancesOutput() AutoscalerAutoscalerSettingsSpotInstancesOutput
	ToAutoscalerAutoscalerSettingsSpotInstancesOutputWithContext(context.Context) AutoscalerAutoscalerSettingsSpotInstancesOutput
}

type AutoscalerAutoscalerSettingsSpotInstancesArgs struct {
	// enable/disable spot instances policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// max allowed reclaim rate when choosing spot instance type. E.g. if the value is 10%, instance types having 10% or higher reclaim rate will not be considered. Set to zero to use all instance types regardless of reclaim rate.
	MaxReclaimRate pulumi.Float64PtrInput `pulumi:"maxReclaimRate"`
	// policy defining whether autoscaler can use spot backups instead of spot instances when spot instances are not available.
	SpotBackups AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrInput `pulumi:"spotBackups"`
	// enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
	SpotDiversityEnabled pulumi.BoolPtrInput `pulumi:"spotDiversityEnabled"`
	// allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
	SpotDiversityPriceIncreaseLimit pulumi.Float64PtrInput `pulumi:"spotDiversityPriceIncreaseLimit"`
	// configure the handling of SPOT interruption predictions.
	SpotInterruptionPredictions AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrInput `pulumi:"spotInterruptionPredictions"`
}

func (AutoscalerAutoscalerSettingsSpotInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstances)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsSpotInstancesArgs) ToAutoscalerAutoscalerSettingsSpotInstancesOutput() AutoscalerAutoscalerSettingsSpotInstancesOutput {
	return i.ToAutoscalerAutoscalerSettingsSpotInstancesOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsSpotInstancesArgs) ToAutoscalerAutoscalerSettingsSpotInstancesOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsSpotInstancesOutput)
}

func (i AutoscalerAutoscalerSettingsSpotInstancesArgs) ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsSpotInstancesArgs) ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsSpotInstancesOutput).ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsSpotInstancesPtrInput is an input type that accepts AutoscalerAutoscalerSettingsSpotInstancesArgs, AutoscalerAutoscalerSettingsSpotInstancesPtr and AutoscalerAutoscalerSettingsSpotInstancesPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsSpotInstancesPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsSpotInstancesArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsSpotInstancesPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesPtrOutput
	ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsSpotInstancesPtrOutput
}

type autoscalerAutoscalerSettingsSpotInstancesPtrType AutoscalerAutoscalerSettingsSpotInstancesArgs

func AutoscalerAutoscalerSettingsSpotInstancesPtr(v *AutoscalerAutoscalerSettingsSpotInstancesArgs) AutoscalerAutoscalerSettingsSpotInstancesPtrInput {
	return (*autoscalerAutoscalerSettingsSpotInstancesPtrType)(v)
}

func (*autoscalerAutoscalerSettingsSpotInstancesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsSpotInstances)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsSpotInstancesPtrType) ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsSpotInstancesPtrType) ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsSpotInstancesPtrOutput)
}

type AutoscalerAutoscalerSettingsSpotInstancesOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsSpotInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstances)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) ToAutoscalerAutoscalerSettingsSpotInstancesOutput() AutoscalerAutoscalerSettingsSpotInstancesOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) ToAutoscalerAutoscalerSettingsSpotInstancesOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsSpotInstances) *AutoscalerAutoscalerSettingsSpotInstances {
		return &v
	}).(AutoscalerAutoscalerSettingsSpotInstancesPtrOutput)
}

// enable/disable spot instances policy.
func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstances) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// max allowed reclaim rate when choosing spot instance type. E.g. if the value is 10%, instance types having 10% or higher reclaim rate will not be considered. Set to zero to use all instance types regardless of reclaim rate.
func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) MaxReclaimRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstances) *float64 { return v.MaxReclaimRate }).(pulumi.Float64PtrOutput)
}

// policy defining whether autoscaler can use spot backups instead of spot instances when spot instances are not available.
func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) SpotBackups() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstances) *AutoscalerAutoscalerSettingsSpotInstancesSpotBackups {
		return v.SpotBackups
	}).(AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput)
}

// enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) SpotDiversityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstances) *bool { return v.SpotDiversityEnabled }).(pulumi.BoolPtrOutput)
}

// allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) SpotDiversityPriceIncreaseLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstances) *float64 { return v.SpotDiversityPriceIncreaseLimit }).(pulumi.Float64PtrOutput)
}

// configure the handling of SPOT interruption predictions.
func (o AutoscalerAutoscalerSettingsSpotInstancesOutput) SpotInterruptionPredictions() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstances) *AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions {
		return v.SpotInterruptionPredictions
	}).(AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput)
}

type AutoscalerAutoscalerSettingsSpotInstancesPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsSpotInstances)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) ToAutoscalerAutoscalerSettingsSpotInstancesPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) Elem() AutoscalerAutoscalerSettingsSpotInstancesOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstances) AutoscalerAutoscalerSettingsSpotInstances {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsSpotInstances
		return ret
	}).(AutoscalerAutoscalerSettingsSpotInstancesOutput)
}

// enable/disable spot instances policy.
func (o AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstances) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// max allowed reclaim rate when choosing spot instance type. E.g. if the value is 10%, instance types having 10% or higher reclaim rate will not be considered. Set to zero to use all instance types regardless of reclaim rate.
func (o AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) MaxReclaimRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstances) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxReclaimRate
	}).(pulumi.Float64PtrOutput)
}

// policy defining whether autoscaler can use spot backups instead of spot instances when spot instances are not available.
func (o AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) SpotBackups() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstances) *AutoscalerAutoscalerSettingsSpotInstancesSpotBackups {
		if v == nil {
			return nil
		}
		return v.SpotBackups
	}).(AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput)
}

// enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
func (o AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) SpotDiversityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstances) *bool {
		if v == nil {
			return nil
		}
		return v.SpotDiversityEnabled
	}).(pulumi.BoolPtrOutput)
}

// allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
func (o AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) SpotDiversityPriceIncreaseLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstances) *float64 {
		if v == nil {
			return nil
		}
		return v.SpotDiversityPriceIncreaseLimit
	}).(pulumi.Float64PtrOutput)
}

// configure the handling of SPOT interruption predictions.
func (o AutoscalerAutoscalerSettingsSpotInstancesPtrOutput) SpotInterruptionPredictions() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstances) *AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions {
		if v == nil {
			return nil
		}
		return v.SpotInterruptionPredictions
	}).(AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput)
}

type AutoscalerAutoscalerSettingsSpotInstancesSpotBackups struct {
	// enable/disable spot backups policy.
	Enabled *bool `pulumi:"enabled"`
	// defines interval on how often spot backups restore to real spot should occur.
	SpotBackupRestoreRateSeconds *float64 `pulumi:"spotBackupRestoreRateSeconds"`
}

// AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsInput is an input type that accepts AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs and AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsInput` via:
//
//	AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs{...}
type AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput
	ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutputWithContext(context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput
}

type AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs struct {
	// enable/disable spot backups policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// defines interval on how often spot backups restore to real spot should occur.
	SpotBackupRestoreRateSeconds pulumi.Float64PtrInput `pulumi:"spotBackupRestoreRateSeconds"`
}

func (AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesSpotBackups)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput {
	return i.ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput)
}

func (i AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput).ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrInput is an input type that accepts AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs, AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtr and AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput
	ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput
}

type autoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrType AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs

func AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtr(v *AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs) AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrInput {
	return (*autoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrType)(v)
}

func (*autoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsSpotInstancesSpotBackups)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrType) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrType) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput)
}

type AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesSpotBackups)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsSpotInstancesSpotBackups) *AutoscalerAutoscalerSettingsSpotInstancesSpotBackups {
		return &v
	}).(AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput)
}

// enable/disable spot backups policy.
func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstancesSpotBackups) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// defines interval on how often spot backups restore to real spot should occur.
func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput) SpotBackupRestoreRateSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstancesSpotBackups) *float64 {
		return v.SpotBackupRestoreRateSeconds
	}).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsSpotInstancesSpotBackups)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput) Elem() AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstancesSpotBackups) AutoscalerAutoscalerSettingsSpotInstancesSpotBackups {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsSpotInstancesSpotBackups
		return ret
	}).(AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput)
}

// enable/disable spot backups policy.
func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstancesSpotBackups) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// defines interval on how often spot backups restore to real spot should occur.
func (o AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput) SpotBackupRestoreRateSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstancesSpotBackups) *float64 {
		if v == nil {
			return nil
		}
		return v.SpotBackupRestoreRateSeconds
	}).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions struct {
	// enable/disable spot interruption predictions.
	Enabled *bool `pulumi:"enabled"`
	// define the type of the spot interruption prediction to handle. Allowed values are AWSRebalanceRecommendations, CASTAIInterruptionPredictions.
	SpotInterruptionPredictionsType *string `pulumi:"spotInterruptionPredictionsType"`
}

// AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsInput is an input type that accepts AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs and AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsInput` via:
//
//	AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs{...}
type AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput
	ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutputWithContext(context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput
}

type AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs struct {
	// enable/disable spot interruption predictions.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// define the type of the spot interruption prediction to handle. Allowed values are AWSRebalanceRecommendations, CASTAIInterruptionPredictions.
	SpotInterruptionPredictionsType pulumi.StringPtrInput `pulumi:"spotInterruptionPredictionsType"`
}

func (AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput {
	return i.ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput)
}

func (i AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput).ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrInput is an input type that accepts AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs, AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtr and AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput
	ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput
}

type autoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrType AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs

func AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtr(v *AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrInput {
	return (*autoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrType)(v)
}

func (*autoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrType) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrType) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput)
}

type AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions) *AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions {
		return &v
	}).(AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput)
}

// enable/disable spot interruption predictions.
func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// define the type of the spot interruption prediction to handle. Allowed values are AWSRebalanceRecommendations, CASTAIInterruptionPredictions.
func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput) SpotInterruptionPredictionsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions) *string {
		return v.SpotInterruptionPredictionsType
	}).(pulumi.StringPtrOutput)
}

type AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput) ToAutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput) Elem() AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions) AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions
		return ret
	}).(AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput)
}

// enable/disable spot interruption predictions.
func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// define the type of the spot interruption prediction to handle. Allowed values are AWSRebalanceRecommendations, CASTAIInterruptionPredictions.
func (o AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput) SpotInterruptionPredictionsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictions) *string {
		if v == nil {
			return nil
		}
		return v.SpotInterruptionPredictionsType
	}).(pulumi.StringPtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePods struct {
	// enable/disable custom instances policy.
	CustomInstancesEnabled *bool `pulumi:"customInstancesEnabled"`
	// enable/disable unschedulable pods detection policy.
	Enabled *bool `pulumi:"enabled"`
	// additional headroom based on cluster's total available capacity for on-demand nodes.
	Headroom *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom `pulumi:"headroom"`
	// additional headroom based on cluster's total available capacity for spot nodes.
	HeadroomSpot *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot `pulumi:"headroomSpot"`
	// defines the node constraints that will be applied when autoscaling with Unschedulable Pods policy.
	NodeConstraints *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints `pulumi:"nodeConstraints"`
	// defines the Cast AI Pod Pinner components settings.
	PodPinner *AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner `pulumi:"podPinner"`
}

// AutoscalerAutoscalerSettingsUnschedulablePodsInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsArgs and AutoscalerAutoscalerSettingsUnschedulablePodsOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsInput` via:
//
//	AutoscalerAutoscalerSettingsUnschedulablePodsArgs{...}
type AutoscalerAutoscalerSettingsUnschedulablePodsInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsOutput() AutoscalerAutoscalerSettingsUnschedulablePodsOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsOutput
}

type AutoscalerAutoscalerSettingsUnschedulablePodsArgs struct {
	// enable/disable custom instances policy.
	CustomInstancesEnabled pulumi.BoolPtrInput `pulumi:"customInstancesEnabled"`
	// enable/disable unschedulable pods detection policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// additional headroom based on cluster's total available capacity for on-demand nodes.
	Headroom AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrInput `pulumi:"headroom"`
	// additional headroom based on cluster's total available capacity for spot nodes.
	HeadroomSpot AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrInput `pulumi:"headroomSpot"`
	// defines the node constraints that will be applied when autoscaling with Unschedulable Pods policy.
	NodeConstraints AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrInput `pulumi:"nodeConstraints"`
	// defines the Cast AI Pod Pinner components settings.
	PodPinner AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrInput `pulumi:"podPinner"`
}

func (AutoscalerAutoscalerSettingsUnschedulablePodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePods)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsOutput() AutoscalerAutoscalerSettingsUnschedulablePodsOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsOutput)
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsOutput).ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsUnschedulablePodsPtrInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsArgs, AutoscalerAutoscalerSettingsUnschedulablePodsPtr and AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsUnschedulablePodsArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsUnschedulablePodsPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput
}

type autoscalerAutoscalerSettingsUnschedulablePodsPtrType AutoscalerAutoscalerSettingsUnschedulablePodsArgs

func AutoscalerAutoscalerSettingsUnschedulablePodsPtr(v *AutoscalerAutoscalerSettingsUnschedulablePodsArgs) AutoscalerAutoscalerSettingsUnschedulablePodsPtrInput {
	return (*autoscalerAutoscalerSettingsUnschedulablePodsPtrType)(v)
}

func (*autoscalerAutoscalerSettingsUnschedulablePodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePods)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePods)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsOutput() AutoscalerAutoscalerSettingsUnschedulablePodsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsUnschedulablePods) *AutoscalerAutoscalerSettingsUnschedulablePods {
		return &v
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput)
}

// enable/disable custom instances policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) CustomInstancesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePods) *bool { return v.CustomInstancesEnabled }).(pulumi.BoolPtrOutput)
}

// enable/disable unschedulable pods detection policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePods) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// additional headroom based on cluster's total available capacity for on-demand nodes.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) Headroom() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePods) *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom {
		return v.Headroom
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput)
}

// additional headroom based on cluster's total available capacity for spot nodes.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) HeadroomSpot() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePods) *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot {
		return v.HeadroomSpot
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput)
}

// defines the node constraints that will be applied when autoscaling with Unschedulable Pods policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) NodeConstraints() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePods) *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints {
		return v.NodeConstraints
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput)
}

// defines the Cast AI Pod Pinner components settings.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsOutput) PodPinner() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePods) *AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner {
		return v.PodPinner
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePods)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) Elem() AutoscalerAutoscalerSettingsUnschedulablePodsOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePods) AutoscalerAutoscalerSettingsUnschedulablePods {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsUnschedulablePods
		return ret
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsOutput)
}

// enable/disable custom instances policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) CustomInstancesEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePods) *bool {
		if v == nil {
			return nil
		}
		return v.CustomInstancesEnabled
	}).(pulumi.BoolPtrOutput)
}

// enable/disable unschedulable pods detection policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePods) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// additional headroom based on cluster's total available capacity for on-demand nodes.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) Headroom() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePods) *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom {
		if v == nil {
			return nil
		}
		return v.Headroom
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput)
}

// additional headroom based on cluster's total available capacity for spot nodes.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) HeadroomSpot() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePods) *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot {
		if v == nil {
			return nil
		}
		return v.HeadroomSpot
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput)
}

// defines the node constraints that will be applied when autoscaling with Unschedulable Pods policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) NodeConstraints() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePods) *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints {
		if v == nil {
			return nil
		}
		return v.NodeConstraints
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput)
}

// defines the Cast AI Pod Pinner components settings.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput) PodPinner() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePods) *AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner {
		if v == nil {
			return nil
		}
		return v.PodPinner
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom struct {
	// defines percentage of additional CPU capacity to be added.
	CpuPercentage *float64 `pulumi:"cpuPercentage"`
	// enable/disable headroom policy.
	Enabled *bool `pulumi:"enabled"`
	// defines percentage of additional memory capacity to be added.
	MemoryPercentage *float64 `pulumi:"memoryPercentage"`
}

// AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs and AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomInput` via:
//
//	AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs{...}
type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput
}

type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs struct {
	// defines percentage of additional CPU capacity to be added.
	CpuPercentage pulumi.Float64PtrInput `pulumi:"cpuPercentage"`
	// enable/disable headroom policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// defines percentage of additional memory capacity to be added.
	MemoryPercentage pulumi.Float64PtrInput `pulumi:"memoryPercentage"`
}

func (AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput)
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput).ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs, AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtr and AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput
}

type autoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrType AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs

func AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtr(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrInput {
	return (*autoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrType)(v)
}

func (*autoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom) *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom {
		return &v
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput)
}

// defines percentage of additional CPU capacity to be added.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput) CpuPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom) *float64 { return v.CpuPercentage }).(pulumi.Float64PtrOutput)
}

// enable/disable headroom policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// defines percentage of additional memory capacity to be added.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput) MemoryPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom) *float64 { return v.MemoryPercentage }).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput) Elem() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom
		return ret
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput)
}

// defines percentage of additional CPU capacity to be added.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput) CpuPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuPercentage
	}).(pulumi.Float64PtrOutput)
}

// enable/disable headroom policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// defines percentage of additional memory capacity to be added.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput) MemoryPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroom) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryPercentage
	}).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot struct {
	// defines percentage of additional CPU capacity to be added.
	CpuPercentage *float64 `pulumi:"cpuPercentage"`
	// enable/disable headroom_spot policy.
	Enabled *bool `pulumi:"enabled"`
	// defines percentage of additional memory capacity to be added.
	MemoryPercentage *float64 `pulumi:"memoryPercentage"`
}

// AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs and AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotInput` via:
//
//	AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs{...}
type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput
}

type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs struct {
	// defines percentage of additional CPU capacity to be added.
	CpuPercentage pulumi.Float64PtrInput `pulumi:"cpuPercentage"`
	// enable/disable headroom_spot policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// defines percentage of additional memory capacity to be added.
	MemoryPercentage pulumi.Float64PtrInput `pulumi:"memoryPercentage"`
}

func (AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput)
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput).ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs, AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtr and AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput
}

type autoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrType AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs

func AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtr(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrInput {
	return (*autoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrType)(v)
}

func (*autoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot) *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot {
		return &v
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput)
}

// defines percentage of additional CPU capacity to be added.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput) CpuPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot) *float64 { return v.CpuPercentage }).(pulumi.Float64PtrOutput)
}

// enable/disable headroom_spot policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// defines percentage of additional memory capacity to be added.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput) MemoryPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot) *float64 { return v.MemoryPercentage }).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput) Elem() AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot) AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot
		return ret
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput)
}

// defines percentage of additional CPU capacity to be added.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput) CpuPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuPercentage
	}).(pulumi.Float64PtrOutput)
}

// enable/disable headroom_spot policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// defines percentage of additional memory capacity to be added.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput) MemoryPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpot) *float64 {
		if v == nil {
			return nil
		}
		return v.MemoryPercentage
	}).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints struct {
	// enable/disable node constraints policy.
	Enabled *bool `pulumi:"enabled"`
	// defines max CPU cores for the node to pick.
	MaxCpuCores *float64 `pulumi:"maxCpuCores"`
	// defines max RAM in MiB for the node to pick.
	MaxRamMib *float64 `pulumi:"maxRamMib"`
	// defines min CPU cores for the node to pick.
	MinCpuCores *float64 `pulumi:"minCpuCores"`
	// defines min RAM in MiB for the node to pick.
	MinRamMib *float64 `pulumi:"minRamMib"`
}

// AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs and AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsInput` via:
//
//	AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs{...}
type AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput
}

type AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs struct {
	// enable/disable node constraints policy.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// defines max CPU cores for the node to pick.
	MaxCpuCores pulumi.Float64PtrInput `pulumi:"maxCpuCores"`
	// defines max RAM in MiB for the node to pick.
	MaxRamMib pulumi.Float64PtrInput `pulumi:"maxRamMib"`
	// defines min CPU cores for the node to pick.
	MinCpuCores pulumi.Float64PtrInput `pulumi:"minCpuCores"`
	// defines min RAM in MiB for the node to pick.
	MinRamMib pulumi.Float64PtrInput `pulumi:"minRamMib"`
}

func (AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput)
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput).ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs, AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtr and AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput
}

type autoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrType AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs

func AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtr(v *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrInput {
	return (*autoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrType)(v)
}

func (*autoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints {
		return &v
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput)
}

// enable/disable node constraints policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// defines max CPU cores for the node to pick.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) MaxCpuCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *float64 { return v.MaxCpuCores }).(pulumi.Float64PtrOutput)
}

// defines max RAM in MiB for the node to pick.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) MaxRamMib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *float64 { return v.MaxRamMib }).(pulumi.Float64PtrOutput)
}

// defines min CPU cores for the node to pick.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) MinCpuCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *float64 { return v.MinCpuCores }).(pulumi.Float64PtrOutput)
}

// defines min RAM in MiB for the node to pick.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput) MinRamMib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *float64 { return v.MinRamMib }).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput) Elem() AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints
		return ret
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput)
}

// enable/disable node constraints policy.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// defines max CPU cores for the node to pick.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput) MaxCpuCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxCpuCores
	}).(pulumi.Float64PtrOutput)
}

// defines max RAM in MiB for the node to pick.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput) MaxRamMib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxRamMib
	}).(pulumi.Float64PtrOutput)
}

// defines min CPU cores for the node to pick.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput) MinCpuCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.MinCpuCores
	}).(pulumi.Float64PtrOutput)
}

// defines min RAM in MiB for the node to pick.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput) MinRamMib() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.MinRamMib
	}).(pulumi.Float64PtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner struct {
	// enable/disable the Pod Pinner component's automatic management in your cluster. Default: enabled.
	Enabled *bool `pulumi:"enabled"`
}

// AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs and AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerInput` via:
//
//	AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs{...}
type AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput
}

type AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs struct {
	// enable/disable the Pod Pinner component's automatic management in your cluster. Default: enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner)(nil)).Elem()
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput)
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutputWithContext(context.Background())
}

func (i AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput).ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutputWithContext(ctx)
}

// AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrInput is an input type that accepts AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs, AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtr and AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput values.
// You can construct a concrete instance of `AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrInput` via:
//
//	        AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs{...}
//
//	or:
//
//	        nil
type AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrInput interface {
	pulumi.Input

	ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput
	ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutputWithContext(context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput
}

type autoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrType AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs

func AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtr(v *AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrInput {
	return (*autoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrType)(v)
}

func (*autoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner)(nil)).Elem()
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return i.ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutputWithContext(context.Background())
}

func (i *autoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrType) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return o.ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutputWithContext(context.Background())
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner) *AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner {
		return &v
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput)
}

// enable/disable the Pod Pinner component's automatic management in your cluster. Default: enabled.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner)(nil)).Elem()
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput) ToAutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutputWithContext(ctx context.Context) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput {
	return o
}

func (o AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput) Elem() AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner) AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner {
		if v != nil {
			return *v
		}
		var ret AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner
		return ret
	}).(AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput)
}

// enable/disable the Pod Pinner component's automatic management in your cluster. Default: enabled.
func (o AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AutoscalerAutoscalerSettingsUnschedulablePodsPodPinner) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type AutoscalerTimeouts struct {
	Create *string `pulumi:"create"`
	Update *string `pulumi:"update"`
}

// AutoscalerTimeoutsInput is an input type that accepts AutoscalerTimeoutsArgs and AutoscalerTimeoutsOutput values.
// You can construct a concrete instance of `AutoscalerTimeoutsInput` via:
//
//	AutoscalerTimeoutsArgs{...}
type AutoscalerTimeoutsInput interface {
	pulumi.Input

	ToAutoscalerTimeoutsOutput() AutoscalerTimeoutsOutput
	ToAutoscalerTimeoutsOutputWithContext(context.Context) AutoscalerTimeoutsOutput
}

type AutoscalerTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (AutoscalerTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerTimeouts)(nil)).Elem()
}

func (i AutoscalerTimeoutsArgs) ToAutoscalerTimeoutsOutput() AutoscalerTimeoutsOutput {
	return i.ToAutoscalerTimeoutsOutputWithContext(context.Background())
}

func (i AutoscalerTimeoutsArgs) ToAutoscalerTimeoutsOutputWithContext(ctx context.Context) AutoscalerTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerTimeoutsOutput)
}

func (i AutoscalerTimeoutsArgs) ToAutoscalerTimeoutsPtrOutput() AutoscalerTimeoutsPtrOutput {
	return i.ToAutoscalerTimeoutsPtrOutputWithContext(context.Background())
}

func (i AutoscalerTimeoutsArgs) ToAutoscalerTimeoutsPtrOutputWithContext(ctx context.Context) AutoscalerTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerTimeoutsOutput).ToAutoscalerTimeoutsPtrOutputWithContext(ctx)
}

// AutoscalerTimeoutsPtrInput is an input type that accepts AutoscalerTimeoutsArgs, AutoscalerTimeoutsPtr and AutoscalerTimeoutsPtrOutput values.
// You can construct a concrete instance of `AutoscalerTimeoutsPtrInput` via:
//
//	        AutoscalerTimeoutsArgs{...}
//
//	or:
//
//	        nil
type AutoscalerTimeoutsPtrInput interface {
	pulumi.Input

	ToAutoscalerTimeoutsPtrOutput() AutoscalerTimeoutsPtrOutput
	ToAutoscalerTimeoutsPtrOutputWithContext(context.Context) AutoscalerTimeoutsPtrOutput
}

type autoscalerTimeoutsPtrType AutoscalerTimeoutsArgs

func AutoscalerTimeoutsPtr(v *AutoscalerTimeoutsArgs) AutoscalerTimeoutsPtrInput {
	return (*autoscalerTimeoutsPtrType)(v)
}

func (*autoscalerTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerTimeouts)(nil)).Elem()
}

func (i *autoscalerTimeoutsPtrType) ToAutoscalerTimeoutsPtrOutput() AutoscalerTimeoutsPtrOutput {
	return i.ToAutoscalerTimeoutsPtrOutputWithContext(context.Background())
}

func (i *autoscalerTimeoutsPtrType) ToAutoscalerTimeoutsPtrOutputWithContext(ctx context.Context) AutoscalerTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalerTimeoutsPtrOutput)
}

type AutoscalerTimeoutsOutput struct{ *pulumi.OutputState }

func (AutoscalerTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalerTimeouts)(nil)).Elem()
}

func (o AutoscalerTimeoutsOutput) ToAutoscalerTimeoutsOutput() AutoscalerTimeoutsOutput {
	return o
}

func (o AutoscalerTimeoutsOutput) ToAutoscalerTimeoutsOutputWithContext(ctx context.Context) AutoscalerTimeoutsOutput {
	return o
}

func (o AutoscalerTimeoutsOutput) ToAutoscalerTimeoutsPtrOutput() AutoscalerTimeoutsPtrOutput {
	return o.ToAutoscalerTimeoutsPtrOutputWithContext(context.Background())
}

func (o AutoscalerTimeoutsOutput) ToAutoscalerTimeoutsPtrOutputWithContext(ctx context.Context) AutoscalerTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AutoscalerTimeouts) *AutoscalerTimeouts {
		return &v
	}).(AutoscalerTimeoutsPtrOutput)
}

func (o AutoscalerTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalerTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o AutoscalerTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AutoscalerTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type AutoscalerTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (AutoscalerTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalerTimeouts)(nil)).Elem()
}

func (o AutoscalerTimeoutsPtrOutput) ToAutoscalerTimeoutsPtrOutput() AutoscalerTimeoutsPtrOutput {
	return o
}

func (o AutoscalerTimeoutsPtrOutput) ToAutoscalerTimeoutsPtrOutputWithContext(ctx context.Context) AutoscalerTimeoutsPtrOutput {
	return o
}

func (o AutoscalerTimeoutsPtrOutput) Elem() AutoscalerTimeoutsOutput {
	return o.ApplyT(func(v *AutoscalerTimeouts) AutoscalerTimeouts {
		if v != nil {
			return *v
		}
		var ret AutoscalerTimeouts
		return ret
	}).(AutoscalerTimeoutsOutput)
}

func (o AutoscalerTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalerTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o AutoscalerTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutoscalerTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type CommitmentsAzureReservation struct {
	AllowedUsage       float64                                 `pulumi:"allowedUsage"`
	Assignments        []CommitmentsAzureReservationAssignment `pulumi:"assignments"`
	Count              float64                                 `pulumi:"count"`
	EndTimestamp       string                                  `pulumi:"endTimestamp"`
	Id                 string                                  `pulumi:"id"`
	InstanceType       string                                  `pulumi:"instanceType"`
	Name               string                                  `pulumi:"name"`
	Plan               string                                  `pulumi:"plan"`
	Prioritization     bool                                    `pulumi:"prioritization"`
	Region             string                                  `pulumi:"region"`
	ReservationId      string                                  `pulumi:"reservationId"`
	ReservationStatus  string                                  `pulumi:"reservationStatus"`
	ScalingStrategy    string                                  `pulumi:"scalingStrategy"`
	Scope              string                                  `pulumi:"scope"`
	ScopeResourceGroup string                                  `pulumi:"scopeResourceGroup"`
	ScopeSubscription  string                                  `pulumi:"scopeSubscription"`
	StartTimestamp     string                                  `pulumi:"startTimestamp"`
	Status             string                                  `pulumi:"status"`
}

// CommitmentsAzureReservationInput is an input type that accepts CommitmentsAzureReservationArgs and CommitmentsAzureReservationOutput values.
// You can construct a concrete instance of `CommitmentsAzureReservationInput` via:
//
//	CommitmentsAzureReservationArgs{...}
type CommitmentsAzureReservationInput interface {
	pulumi.Input

	ToCommitmentsAzureReservationOutput() CommitmentsAzureReservationOutput
	ToCommitmentsAzureReservationOutputWithContext(context.Context) CommitmentsAzureReservationOutput
}

type CommitmentsAzureReservationArgs struct {
	AllowedUsage       pulumi.Float64Input                             `pulumi:"allowedUsage"`
	Assignments        CommitmentsAzureReservationAssignmentArrayInput `pulumi:"assignments"`
	Count              pulumi.Float64Input                             `pulumi:"count"`
	EndTimestamp       pulumi.StringInput                              `pulumi:"endTimestamp"`
	Id                 pulumi.StringInput                              `pulumi:"id"`
	InstanceType       pulumi.StringInput                              `pulumi:"instanceType"`
	Name               pulumi.StringInput                              `pulumi:"name"`
	Plan               pulumi.StringInput                              `pulumi:"plan"`
	Prioritization     pulumi.BoolInput                                `pulumi:"prioritization"`
	Region             pulumi.StringInput                              `pulumi:"region"`
	ReservationId      pulumi.StringInput                              `pulumi:"reservationId"`
	ReservationStatus  pulumi.StringInput                              `pulumi:"reservationStatus"`
	ScalingStrategy    pulumi.StringInput                              `pulumi:"scalingStrategy"`
	Scope              pulumi.StringInput                              `pulumi:"scope"`
	ScopeResourceGroup pulumi.StringInput                              `pulumi:"scopeResourceGroup"`
	ScopeSubscription  pulumi.StringInput                              `pulumi:"scopeSubscription"`
	StartTimestamp     pulumi.StringInput                              `pulumi:"startTimestamp"`
	Status             pulumi.StringInput                              `pulumi:"status"`
}

func (CommitmentsAzureReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsAzureReservation)(nil)).Elem()
}

func (i CommitmentsAzureReservationArgs) ToCommitmentsAzureReservationOutput() CommitmentsAzureReservationOutput {
	return i.ToCommitmentsAzureReservationOutputWithContext(context.Background())
}

func (i CommitmentsAzureReservationArgs) ToCommitmentsAzureReservationOutputWithContext(ctx context.Context) CommitmentsAzureReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsAzureReservationOutput)
}

// CommitmentsAzureReservationArrayInput is an input type that accepts CommitmentsAzureReservationArray and CommitmentsAzureReservationArrayOutput values.
// You can construct a concrete instance of `CommitmentsAzureReservationArrayInput` via:
//
//	CommitmentsAzureReservationArray{ CommitmentsAzureReservationArgs{...} }
type CommitmentsAzureReservationArrayInput interface {
	pulumi.Input

	ToCommitmentsAzureReservationArrayOutput() CommitmentsAzureReservationArrayOutput
	ToCommitmentsAzureReservationArrayOutputWithContext(context.Context) CommitmentsAzureReservationArrayOutput
}

type CommitmentsAzureReservationArray []CommitmentsAzureReservationInput

func (CommitmentsAzureReservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsAzureReservation)(nil)).Elem()
}

func (i CommitmentsAzureReservationArray) ToCommitmentsAzureReservationArrayOutput() CommitmentsAzureReservationArrayOutput {
	return i.ToCommitmentsAzureReservationArrayOutputWithContext(context.Background())
}

func (i CommitmentsAzureReservationArray) ToCommitmentsAzureReservationArrayOutputWithContext(ctx context.Context) CommitmentsAzureReservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsAzureReservationArrayOutput)
}

type CommitmentsAzureReservationOutput struct{ *pulumi.OutputState }

func (CommitmentsAzureReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsAzureReservation)(nil)).Elem()
}

func (o CommitmentsAzureReservationOutput) ToCommitmentsAzureReservationOutput() CommitmentsAzureReservationOutput {
	return o
}

func (o CommitmentsAzureReservationOutput) ToCommitmentsAzureReservationOutputWithContext(ctx context.Context) CommitmentsAzureReservationOutput {
	return o
}

func (o CommitmentsAzureReservationOutput) AllowedUsage() pulumi.Float64Output {
	return o.ApplyT(func(v CommitmentsAzureReservation) float64 { return v.AllowedUsage }).(pulumi.Float64Output)
}

func (o CommitmentsAzureReservationOutput) Assignments() CommitmentsAzureReservationAssignmentArrayOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) []CommitmentsAzureReservationAssignment { return v.Assignments }).(CommitmentsAzureReservationAssignmentArrayOutput)
}

func (o CommitmentsAzureReservationOutput) Count() pulumi.Float64Output {
	return o.ApplyT(func(v CommitmentsAzureReservation) float64 { return v.Count }).(pulumi.Float64Output)
}

func (o CommitmentsAzureReservationOutput) EndTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.EndTimestamp }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.Id }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.Name }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.Plan }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) Prioritization() pulumi.BoolOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) bool { return v.Prioritization }).(pulumi.BoolOutput)
}

func (o CommitmentsAzureReservationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.Region }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) ReservationId() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.ReservationId }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) ReservationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.ReservationStatus }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) ScalingStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.ScalingStrategy }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.Scope }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) ScopeResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.ScopeResourceGroup }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) ScopeSubscription() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.ScopeSubscription }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) StartTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.StartTimestamp }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservation) string { return v.Status }).(pulumi.StringOutput)
}

type CommitmentsAzureReservationArrayOutput struct{ *pulumi.OutputState }

func (CommitmentsAzureReservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsAzureReservation)(nil)).Elem()
}

func (o CommitmentsAzureReservationArrayOutput) ToCommitmentsAzureReservationArrayOutput() CommitmentsAzureReservationArrayOutput {
	return o
}

func (o CommitmentsAzureReservationArrayOutput) ToCommitmentsAzureReservationArrayOutputWithContext(ctx context.Context) CommitmentsAzureReservationArrayOutput {
	return o
}

func (o CommitmentsAzureReservationArrayOutput) Index(i pulumi.IntInput) CommitmentsAzureReservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommitmentsAzureReservation {
		return vs[0].([]CommitmentsAzureReservation)[vs[1].(int)]
	}).(CommitmentsAzureReservationOutput)
}

type CommitmentsAzureReservationAssignment struct {
	ClusterId string  `pulumi:"clusterId"`
	Priority  float64 `pulumi:"priority"`
}

// CommitmentsAzureReservationAssignmentInput is an input type that accepts CommitmentsAzureReservationAssignmentArgs and CommitmentsAzureReservationAssignmentOutput values.
// You can construct a concrete instance of `CommitmentsAzureReservationAssignmentInput` via:
//
//	CommitmentsAzureReservationAssignmentArgs{...}
type CommitmentsAzureReservationAssignmentInput interface {
	pulumi.Input

	ToCommitmentsAzureReservationAssignmentOutput() CommitmentsAzureReservationAssignmentOutput
	ToCommitmentsAzureReservationAssignmentOutputWithContext(context.Context) CommitmentsAzureReservationAssignmentOutput
}

type CommitmentsAzureReservationAssignmentArgs struct {
	ClusterId pulumi.StringInput  `pulumi:"clusterId"`
	Priority  pulumi.Float64Input `pulumi:"priority"`
}

func (CommitmentsAzureReservationAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsAzureReservationAssignment)(nil)).Elem()
}

func (i CommitmentsAzureReservationAssignmentArgs) ToCommitmentsAzureReservationAssignmentOutput() CommitmentsAzureReservationAssignmentOutput {
	return i.ToCommitmentsAzureReservationAssignmentOutputWithContext(context.Background())
}

func (i CommitmentsAzureReservationAssignmentArgs) ToCommitmentsAzureReservationAssignmentOutputWithContext(ctx context.Context) CommitmentsAzureReservationAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsAzureReservationAssignmentOutput)
}

// CommitmentsAzureReservationAssignmentArrayInput is an input type that accepts CommitmentsAzureReservationAssignmentArray and CommitmentsAzureReservationAssignmentArrayOutput values.
// You can construct a concrete instance of `CommitmentsAzureReservationAssignmentArrayInput` via:
//
//	CommitmentsAzureReservationAssignmentArray{ CommitmentsAzureReservationAssignmentArgs{...} }
type CommitmentsAzureReservationAssignmentArrayInput interface {
	pulumi.Input

	ToCommitmentsAzureReservationAssignmentArrayOutput() CommitmentsAzureReservationAssignmentArrayOutput
	ToCommitmentsAzureReservationAssignmentArrayOutputWithContext(context.Context) CommitmentsAzureReservationAssignmentArrayOutput
}

type CommitmentsAzureReservationAssignmentArray []CommitmentsAzureReservationAssignmentInput

func (CommitmentsAzureReservationAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsAzureReservationAssignment)(nil)).Elem()
}

func (i CommitmentsAzureReservationAssignmentArray) ToCommitmentsAzureReservationAssignmentArrayOutput() CommitmentsAzureReservationAssignmentArrayOutput {
	return i.ToCommitmentsAzureReservationAssignmentArrayOutputWithContext(context.Background())
}

func (i CommitmentsAzureReservationAssignmentArray) ToCommitmentsAzureReservationAssignmentArrayOutputWithContext(ctx context.Context) CommitmentsAzureReservationAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsAzureReservationAssignmentArrayOutput)
}

type CommitmentsAzureReservationAssignmentOutput struct{ *pulumi.OutputState }

func (CommitmentsAzureReservationAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsAzureReservationAssignment)(nil)).Elem()
}

func (o CommitmentsAzureReservationAssignmentOutput) ToCommitmentsAzureReservationAssignmentOutput() CommitmentsAzureReservationAssignmentOutput {
	return o
}

func (o CommitmentsAzureReservationAssignmentOutput) ToCommitmentsAzureReservationAssignmentOutputWithContext(ctx context.Context) CommitmentsAzureReservationAssignmentOutput {
	return o
}

func (o CommitmentsAzureReservationAssignmentOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsAzureReservationAssignment) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o CommitmentsAzureReservationAssignmentOutput) Priority() pulumi.Float64Output {
	return o.ApplyT(func(v CommitmentsAzureReservationAssignment) float64 { return v.Priority }).(pulumi.Float64Output)
}

type CommitmentsAzureReservationAssignmentArrayOutput struct{ *pulumi.OutputState }

func (CommitmentsAzureReservationAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsAzureReservationAssignment)(nil)).Elem()
}

func (o CommitmentsAzureReservationAssignmentArrayOutput) ToCommitmentsAzureReservationAssignmentArrayOutput() CommitmentsAzureReservationAssignmentArrayOutput {
	return o
}

func (o CommitmentsAzureReservationAssignmentArrayOutput) ToCommitmentsAzureReservationAssignmentArrayOutputWithContext(ctx context.Context) CommitmentsAzureReservationAssignmentArrayOutput {
	return o
}

func (o CommitmentsAzureReservationAssignmentArrayOutput) Index(i pulumi.IntInput) CommitmentsAzureReservationAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommitmentsAzureReservationAssignment {
		return vs[0].([]CommitmentsAzureReservationAssignment)[vs[1].(int)]
	}).(CommitmentsAzureReservationAssignmentOutput)
}

type CommitmentsCommitmentConfig struct {
	// Allowed usage of the commitment. The value is between 0 (0%) and 1 (100%).
	AllowedUsage *float64 `pulumi:"allowedUsage"`
	// List of assigned clusters for the commitment. If prioritization is enabled, the order of the assignments indicates the priority. The first assignment has the highest priority.
	Assignments []CommitmentsCommitmentConfigAssignment `pulumi:"assignments"`
	// Matcher used to map config to a commitment.
	Matcher CommitmentsCommitmentConfigMatcher `pulumi:"matcher"`
	// If enabled, it's possible to assign priorities to the assigned clusters.
	Prioritization *bool `pulumi:"prioritization"`
	// Scaling strategy of the commitment in CAST AI. One of: Default, CPUBased, RamBased
	ScalingStrategy *string `pulumi:"scalingStrategy"`
	// Status of the commitment in CAST AI.
	Status *string `pulumi:"status"`
}

// CommitmentsCommitmentConfigInput is an input type that accepts CommitmentsCommitmentConfigArgs and CommitmentsCommitmentConfigOutput values.
// You can construct a concrete instance of `CommitmentsCommitmentConfigInput` via:
//
//	CommitmentsCommitmentConfigArgs{...}
type CommitmentsCommitmentConfigInput interface {
	pulumi.Input

	ToCommitmentsCommitmentConfigOutput() CommitmentsCommitmentConfigOutput
	ToCommitmentsCommitmentConfigOutputWithContext(context.Context) CommitmentsCommitmentConfigOutput
}

type CommitmentsCommitmentConfigArgs struct {
	// Allowed usage of the commitment. The value is between 0 (0%) and 1 (100%).
	AllowedUsage pulumi.Float64PtrInput `pulumi:"allowedUsage"`
	// List of assigned clusters for the commitment. If prioritization is enabled, the order of the assignments indicates the priority. The first assignment has the highest priority.
	Assignments CommitmentsCommitmentConfigAssignmentArrayInput `pulumi:"assignments"`
	// Matcher used to map config to a commitment.
	Matcher CommitmentsCommitmentConfigMatcherInput `pulumi:"matcher"`
	// If enabled, it's possible to assign priorities to the assigned clusters.
	Prioritization pulumi.BoolPtrInput `pulumi:"prioritization"`
	// Scaling strategy of the commitment in CAST AI. One of: Default, CPUBased, RamBased
	ScalingStrategy pulumi.StringPtrInput `pulumi:"scalingStrategy"`
	// Status of the commitment in CAST AI.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (CommitmentsCommitmentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsCommitmentConfig)(nil)).Elem()
}

func (i CommitmentsCommitmentConfigArgs) ToCommitmentsCommitmentConfigOutput() CommitmentsCommitmentConfigOutput {
	return i.ToCommitmentsCommitmentConfigOutputWithContext(context.Background())
}

func (i CommitmentsCommitmentConfigArgs) ToCommitmentsCommitmentConfigOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsCommitmentConfigOutput)
}

// CommitmentsCommitmentConfigArrayInput is an input type that accepts CommitmentsCommitmentConfigArray and CommitmentsCommitmentConfigArrayOutput values.
// You can construct a concrete instance of `CommitmentsCommitmentConfigArrayInput` via:
//
//	CommitmentsCommitmentConfigArray{ CommitmentsCommitmentConfigArgs{...} }
type CommitmentsCommitmentConfigArrayInput interface {
	pulumi.Input

	ToCommitmentsCommitmentConfigArrayOutput() CommitmentsCommitmentConfigArrayOutput
	ToCommitmentsCommitmentConfigArrayOutputWithContext(context.Context) CommitmentsCommitmentConfigArrayOutput
}

type CommitmentsCommitmentConfigArray []CommitmentsCommitmentConfigInput

func (CommitmentsCommitmentConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsCommitmentConfig)(nil)).Elem()
}

func (i CommitmentsCommitmentConfigArray) ToCommitmentsCommitmentConfigArrayOutput() CommitmentsCommitmentConfigArrayOutput {
	return i.ToCommitmentsCommitmentConfigArrayOutputWithContext(context.Background())
}

func (i CommitmentsCommitmentConfigArray) ToCommitmentsCommitmentConfigArrayOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsCommitmentConfigArrayOutput)
}

type CommitmentsCommitmentConfigOutput struct{ *pulumi.OutputState }

func (CommitmentsCommitmentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsCommitmentConfig)(nil)).Elem()
}

func (o CommitmentsCommitmentConfigOutput) ToCommitmentsCommitmentConfigOutput() CommitmentsCommitmentConfigOutput {
	return o
}

func (o CommitmentsCommitmentConfigOutput) ToCommitmentsCommitmentConfigOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigOutput {
	return o
}

// Allowed usage of the commitment. The value is between 0 (0%) and 1 (100%).
func (o CommitmentsCommitmentConfigOutput) AllowedUsage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfig) *float64 { return v.AllowedUsage }).(pulumi.Float64PtrOutput)
}

// List of assigned clusters for the commitment. If prioritization is enabled, the order of the assignments indicates the priority. The first assignment has the highest priority.
func (o CommitmentsCommitmentConfigOutput) Assignments() CommitmentsCommitmentConfigAssignmentArrayOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfig) []CommitmentsCommitmentConfigAssignment { return v.Assignments }).(CommitmentsCommitmentConfigAssignmentArrayOutput)
}

// Matcher used to map config to a commitment.
func (o CommitmentsCommitmentConfigOutput) Matcher() CommitmentsCommitmentConfigMatcherOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfig) CommitmentsCommitmentConfigMatcher { return v.Matcher }).(CommitmentsCommitmentConfigMatcherOutput)
}

// If enabled, it's possible to assign priorities to the assigned clusters.
func (o CommitmentsCommitmentConfigOutput) Prioritization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfig) *bool { return v.Prioritization }).(pulumi.BoolPtrOutput)
}

// Scaling strategy of the commitment in CAST AI. One of: Default, CPUBased, RamBased
func (o CommitmentsCommitmentConfigOutput) ScalingStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfig) *string { return v.ScalingStrategy }).(pulumi.StringPtrOutput)
}

// Status of the commitment in CAST AI.
func (o CommitmentsCommitmentConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type CommitmentsCommitmentConfigArrayOutput struct{ *pulumi.OutputState }

func (CommitmentsCommitmentConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsCommitmentConfig)(nil)).Elem()
}

func (o CommitmentsCommitmentConfigArrayOutput) ToCommitmentsCommitmentConfigArrayOutput() CommitmentsCommitmentConfigArrayOutput {
	return o
}

func (o CommitmentsCommitmentConfigArrayOutput) ToCommitmentsCommitmentConfigArrayOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigArrayOutput {
	return o
}

func (o CommitmentsCommitmentConfigArrayOutput) Index(i pulumi.IntInput) CommitmentsCommitmentConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommitmentsCommitmentConfig {
		return vs[0].([]CommitmentsCommitmentConfig)[vs[1].(int)]
	}).(CommitmentsCommitmentConfigOutput)
}

type CommitmentsCommitmentConfigAssignment struct {
	// ID of the cluster to assign the commitment to.
	ClusterId string `pulumi:"clusterId"`
	// Priority of the assignment. The lower the value, the higher the priority. 1 is the highest priority.
	Priority *float64 `pulumi:"priority"`
}

// CommitmentsCommitmentConfigAssignmentInput is an input type that accepts CommitmentsCommitmentConfigAssignmentArgs and CommitmentsCommitmentConfigAssignmentOutput values.
// You can construct a concrete instance of `CommitmentsCommitmentConfigAssignmentInput` via:
//
//	CommitmentsCommitmentConfigAssignmentArgs{...}
type CommitmentsCommitmentConfigAssignmentInput interface {
	pulumi.Input

	ToCommitmentsCommitmentConfigAssignmentOutput() CommitmentsCommitmentConfigAssignmentOutput
	ToCommitmentsCommitmentConfigAssignmentOutputWithContext(context.Context) CommitmentsCommitmentConfigAssignmentOutput
}

type CommitmentsCommitmentConfigAssignmentArgs struct {
	// ID of the cluster to assign the commitment to.
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Priority of the assignment. The lower the value, the higher the priority. 1 is the highest priority.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
}

func (CommitmentsCommitmentConfigAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsCommitmentConfigAssignment)(nil)).Elem()
}

func (i CommitmentsCommitmentConfigAssignmentArgs) ToCommitmentsCommitmentConfigAssignmentOutput() CommitmentsCommitmentConfigAssignmentOutput {
	return i.ToCommitmentsCommitmentConfigAssignmentOutputWithContext(context.Background())
}

func (i CommitmentsCommitmentConfigAssignmentArgs) ToCommitmentsCommitmentConfigAssignmentOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsCommitmentConfigAssignmentOutput)
}

// CommitmentsCommitmentConfigAssignmentArrayInput is an input type that accepts CommitmentsCommitmentConfigAssignmentArray and CommitmentsCommitmentConfigAssignmentArrayOutput values.
// You can construct a concrete instance of `CommitmentsCommitmentConfigAssignmentArrayInput` via:
//
//	CommitmentsCommitmentConfigAssignmentArray{ CommitmentsCommitmentConfigAssignmentArgs{...} }
type CommitmentsCommitmentConfigAssignmentArrayInput interface {
	pulumi.Input

	ToCommitmentsCommitmentConfigAssignmentArrayOutput() CommitmentsCommitmentConfigAssignmentArrayOutput
	ToCommitmentsCommitmentConfigAssignmentArrayOutputWithContext(context.Context) CommitmentsCommitmentConfigAssignmentArrayOutput
}

type CommitmentsCommitmentConfigAssignmentArray []CommitmentsCommitmentConfigAssignmentInput

func (CommitmentsCommitmentConfigAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsCommitmentConfigAssignment)(nil)).Elem()
}

func (i CommitmentsCommitmentConfigAssignmentArray) ToCommitmentsCommitmentConfigAssignmentArrayOutput() CommitmentsCommitmentConfigAssignmentArrayOutput {
	return i.ToCommitmentsCommitmentConfigAssignmentArrayOutputWithContext(context.Background())
}

func (i CommitmentsCommitmentConfigAssignmentArray) ToCommitmentsCommitmentConfigAssignmentArrayOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsCommitmentConfigAssignmentArrayOutput)
}

type CommitmentsCommitmentConfigAssignmentOutput struct{ *pulumi.OutputState }

func (CommitmentsCommitmentConfigAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsCommitmentConfigAssignment)(nil)).Elem()
}

func (o CommitmentsCommitmentConfigAssignmentOutput) ToCommitmentsCommitmentConfigAssignmentOutput() CommitmentsCommitmentConfigAssignmentOutput {
	return o
}

func (o CommitmentsCommitmentConfigAssignmentOutput) ToCommitmentsCommitmentConfigAssignmentOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigAssignmentOutput {
	return o
}

// ID of the cluster to assign the commitment to.
func (o CommitmentsCommitmentConfigAssignmentOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfigAssignment) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Priority of the assignment. The lower the value, the higher the priority. 1 is the highest priority.
func (o CommitmentsCommitmentConfigAssignmentOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfigAssignment) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

type CommitmentsCommitmentConfigAssignmentArrayOutput struct{ *pulumi.OutputState }

func (CommitmentsCommitmentConfigAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsCommitmentConfigAssignment)(nil)).Elem()
}

func (o CommitmentsCommitmentConfigAssignmentArrayOutput) ToCommitmentsCommitmentConfigAssignmentArrayOutput() CommitmentsCommitmentConfigAssignmentArrayOutput {
	return o
}

func (o CommitmentsCommitmentConfigAssignmentArrayOutput) ToCommitmentsCommitmentConfigAssignmentArrayOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigAssignmentArrayOutput {
	return o
}

func (o CommitmentsCommitmentConfigAssignmentArrayOutput) Index(i pulumi.IntInput) CommitmentsCommitmentConfigAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommitmentsCommitmentConfigAssignment {
		return vs[0].([]CommitmentsCommitmentConfigAssignment)[vs[1].(int)]
	}).(CommitmentsCommitmentConfigAssignmentOutput)
}

type CommitmentsCommitmentConfigMatcher struct {
	// Name of the commitment to match.
	Name string `pulumi:"name"`
	// Region of the commitment to match.
	Region string `pulumi:"region"`
	// Type of the commitment to match. For compute resources, it's the type of the machine.
	Type *string `pulumi:"type"`
}

// CommitmentsCommitmentConfigMatcherInput is an input type that accepts CommitmentsCommitmentConfigMatcherArgs and CommitmentsCommitmentConfigMatcherOutput values.
// You can construct a concrete instance of `CommitmentsCommitmentConfigMatcherInput` via:
//
//	CommitmentsCommitmentConfigMatcherArgs{...}
type CommitmentsCommitmentConfigMatcherInput interface {
	pulumi.Input

	ToCommitmentsCommitmentConfigMatcherOutput() CommitmentsCommitmentConfigMatcherOutput
	ToCommitmentsCommitmentConfigMatcherOutputWithContext(context.Context) CommitmentsCommitmentConfigMatcherOutput
}

type CommitmentsCommitmentConfigMatcherArgs struct {
	// Name of the commitment to match.
	Name pulumi.StringInput `pulumi:"name"`
	// Region of the commitment to match.
	Region pulumi.StringInput `pulumi:"region"`
	// Type of the commitment to match. For compute resources, it's the type of the machine.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CommitmentsCommitmentConfigMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsCommitmentConfigMatcher)(nil)).Elem()
}

func (i CommitmentsCommitmentConfigMatcherArgs) ToCommitmentsCommitmentConfigMatcherOutput() CommitmentsCommitmentConfigMatcherOutput {
	return i.ToCommitmentsCommitmentConfigMatcherOutputWithContext(context.Background())
}

func (i CommitmentsCommitmentConfigMatcherArgs) ToCommitmentsCommitmentConfigMatcherOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsCommitmentConfigMatcherOutput)
}

type CommitmentsCommitmentConfigMatcherOutput struct{ *pulumi.OutputState }

func (CommitmentsCommitmentConfigMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsCommitmentConfigMatcher)(nil)).Elem()
}

func (o CommitmentsCommitmentConfigMatcherOutput) ToCommitmentsCommitmentConfigMatcherOutput() CommitmentsCommitmentConfigMatcherOutput {
	return o
}

func (o CommitmentsCommitmentConfigMatcherOutput) ToCommitmentsCommitmentConfigMatcherOutputWithContext(ctx context.Context) CommitmentsCommitmentConfigMatcherOutput {
	return o
}

// Name of the commitment to match.
func (o CommitmentsCommitmentConfigMatcherOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfigMatcher) string { return v.Name }).(pulumi.StringOutput)
}

// Region of the commitment to match.
func (o CommitmentsCommitmentConfigMatcherOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfigMatcher) string { return v.Region }).(pulumi.StringOutput)
}

// Type of the commitment to match. For compute resources, it's the type of the machine.
func (o CommitmentsCommitmentConfigMatcherOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentsCommitmentConfigMatcher) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CommitmentsGcpCud struct {
	AllowedUsage    float64                       `pulumi:"allowedUsage"`
	Assignments     []CommitmentsGcpCudAssignment `pulumi:"assignments"`
	Cpu             float64                       `pulumi:"cpu"`
	CudId           string                        `pulumi:"cudId"`
	CudStatus       string                        `pulumi:"cudStatus"`
	EndTimestamp    string                        `pulumi:"endTimestamp"`
	Id              string                        `pulumi:"id"`
	MemoryMb        float64                       `pulumi:"memoryMb"`
	Name            string                        `pulumi:"name"`
	Plan            string                        `pulumi:"plan"`
	Prioritization  bool                          `pulumi:"prioritization"`
	Region          string                        `pulumi:"region"`
	ScalingStrategy string                        `pulumi:"scalingStrategy"`
	StartTimestamp  string                        `pulumi:"startTimestamp"`
	Status          string                        `pulumi:"status"`
	Type            string                        `pulumi:"type"`
}

// CommitmentsGcpCudInput is an input type that accepts CommitmentsGcpCudArgs and CommitmentsGcpCudOutput values.
// You can construct a concrete instance of `CommitmentsGcpCudInput` via:
//
//	CommitmentsGcpCudArgs{...}
type CommitmentsGcpCudInput interface {
	pulumi.Input

	ToCommitmentsGcpCudOutput() CommitmentsGcpCudOutput
	ToCommitmentsGcpCudOutputWithContext(context.Context) CommitmentsGcpCudOutput
}

type CommitmentsGcpCudArgs struct {
	AllowedUsage    pulumi.Float64Input                   `pulumi:"allowedUsage"`
	Assignments     CommitmentsGcpCudAssignmentArrayInput `pulumi:"assignments"`
	Cpu             pulumi.Float64Input                   `pulumi:"cpu"`
	CudId           pulumi.StringInput                    `pulumi:"cudId"`
	CudStatus       pulumi.StringInput                    `pulumi:"cudStatus"`
	EndTimestamp    pulumi.StringInput                    `pulumi:"endTimestamp"`
	Id              pulumi.StringInput                    `pulumi:"id"`
	MemoryMb        pulumi.Float64Input                   `pulumi:"memoryMb"`
	Name            pulumi.StringInput                    `pulumi:"name"`
	Plan            pulumi.StringInput                    `pulumi:"plan"`
	Prioritization  pulumi.BoolInput                      `pulumi:"prioritization"`
	Region          pulumi.StringInput                    `pulumi:"region"`
	ScalingStrategy pulumi.StringInput                    `pulumi:"scalingStrategy"`
	StartTimestamp  pulumi.StringInput                    `pulumi:"startTimestamp"`
	Status          pulumi.StringInput                    `pulumi:"status"`
	Type            pulumi.StringInput                    `pulumi:"type"`
}

func (CommitmentsGcpCudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsGcpCud)(nil)).Elem()
}

func (i CommitmentsGcpCudArgs) ToCommitmentsGcpCudOutput() CommitmentsGcpCudOutput {
	return i.ToCommitmentsGcpCudOutputWithContext(context.Background())
}

func (i CommitmentsGcpCudArgs) ToCommitmentsGcpCudOutputWithContext(ctx context.Context) CommitmentsGcpCudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsGcpCudOutput)
}

// CommitmentsGcpCudArrayInput is an input type that accepts CommitmentsGcpCudArray and CommitmentsGcpCudArrayOutput values.
// You can construct a concrete instance of `CommitmentsGcpCudArrayInput` via:
//
//	CommitmentsGcpCudArray{ CommitmentsGcpCudArgs{...} }
type CommitmentsGcpCudArrayInput interface {
	pulumi.Input

	ToCommitmentsGcpCudArrayOutput() CommitmentsGcpCudArrayOutput
	ToCommitmentsGcpCudArrayOutputWithContext(context.Context) CommitmentsGcpCudArrayOutput
}

type CommitmentsGcpCudArray []CommitmentsGcpCudInput

func (CommitmentsGcpCudArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsGcpCud)(nil)).Elem()
}

func (i CommitmentsGcpCudArray) ToCommitmentsGcpCudArrayOutput() CommitmentsGcpCudArrayOutput {
	return i.ToCommitmentsGcpCudArrayOutputWithContext(context.Background())
}

func (i CommitmentsGcpCudArray) ToCommitmentsGcpCudArrayOutputWithContext(ctx context.Context) CommitmentsGcpCudArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsGcpCudArrayOutput)
}

type CommitmentsGcpCudOutput struct{ *pulumi.OutputState }

func (CommitmentsGcpCudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsGcpCud)(nil)).Elem()
}

func (o CommitmentsGcpCudOutput) ToCommitmentsGcpCudOutput() CommitmentsGcpCudOutput {
	return o
}

func (o CommitmentsGcpCudOutput) ToCommitmentsGcpCudOutputWithContext(ctx context.Context) CommitmentsGcpCudOutput {
	return o
}

func (o CommitmentsGcpCudOutput) AllowedUsage() pulumi.Float64Output {
	return o.ApplyT(func(v CommitmentsGcpCud) float64 { return v.AllowedUsage }).(pulumi.Float64Output)
}

func (o CommitmentsGcpCudOutput) Assignments() CommitmentsGcpCudAssignmentArrayOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) []CommitmentsGcpCudAssignment { return v.Assignments }).(CommitmentsGcpCudAssignmentArrayOutput)
}

func (o CommitmentsGcpCudOutput) Cpu() pulumi.Float64Output {
	return o.ApplyT(func(v CommitmentsGcpCud) float64 { return v.Cpu }).(pulumi.Float64Output)
}

func (o CommitmentsGcpCudOutput) CudId() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.CudId }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) CudStatus() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.CudStatus }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) EndTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.EndTimestamp }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.Id }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) MemoryMb() pulumi.Float64Output {
	return o.ApplyT(func(v CommitmentsGcpCud) float64 { return v.MemoryMb }).(pulumi.Float64Output)
}

func (o CommitmentsGcpCudOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.Name }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.Plan }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) Prioritization() pulumi.BoolOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) bool { return v.Prioritization }).(pulumi.BoolOutput)
}

func (o CommitmentsGcpCudOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.Region }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) ScalingStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.ScalingStrategy }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) StartTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.StartTimestamp }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.Status }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCud) string { return v.Type }).(pulumi.StringOutput)
}

type CommitmentsGcpCudArrayOutput struct{ *pulumi.OutputState }

func (CommitmentsGcpCudArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsGcpCud)(nil)).Elem()
}

func (o CommitmentsGcpCudArrayOutput) ToCommitmentsGcpCudArrayOutput() CommitmentsGcpCudArrayOutput {
	return o
}

func (o CommitmentsGcpCudArrayOutput) ToCommitmentsGcpCudArrayOutputWithContext(ctx context.Context) CommitmentsGcpCudArrayOutput {
	return o
}

func (o CommitmentsGcpCudArrayOutput) Index(i pulumi.IntInput) CommitmentsGcpCudOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommitmentsGcpCud {
		return vs[0].([]CommitmentsGcpCud)[vs[1].(int)]
	}).(CommitmentsGcpCudOutput)
}

type CommitmentsGcpCudAssignment struct {
	ClusterId string  `pulumi:"clusterId"`
	Priority  float64 `pulumi:"priority"`
}

// CommitmentsGcpCudAssignmentInput is an input type that accepts CommitmentsGcpCudAssignmentArgs and CommitmentsGcpCudAssignmentOutput values.
// You can construct a concrete instance of `CommitmentsGcpCudAssignmentInput` via:
//
//	CommitmentsGcpCudAssignmentArgs{...}
type CommitmentsGcpCudAssignmentInput interface {
	pulumi.Input

	ToCommitmentsGcpCudAssignmentOutput() CommitmentsGcpCudAssignmentOutput
	ToCommitmentsGcpCudAssignmentOutputWithContext(context.Context) CommitmentsGcpCudAssignmentOutput
}

type CommitmentsGcpCudAssignmentArgs struct {
	ClusterId pulumi.StringInput  `pulumi:"clusterId"`
	Priority  pulumi.Float64Input `pulumi:"priority"`
}

func (CommitmentsGcpCudAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsGcpCudAssignment)(nil)).Elem()
}

func (i CommitmentsGcpCudAssignmentArgs) ToCommitmentsGcpCudAssignmentOutput() CommitmentsGcpCudAssignmentOutput {
	return i.ToCommitmentsGcpCudAssignmentOutputWithContext(context.Background())
}

func (i CommitmentsGcpCudAssignmentArgs) ToCommitmentsGcpCudAssignmentOutputWithContext(ctx context.Context) CommitmentsGcpCudAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsGcpCudAssignmentOutput)
}

// CommitmentsGcpCudAssignmentArrayInput is an input type that accepts CommitmentsGcpCudAssignmentArray and CommitmentsGcpCudAssignmentArrayOutput values.
// You can construct a concrete instance of `CommitmentsGcpCudAssignmentArrayInput` via:
//
//	CommitmentsGcpCudAssignmentArray{ CommitmentsGcpCudAssignmentArgs{...} }
type CommitmentsGcpCudAssignmentArrayInput interface {
	pulumi.Input

	ToCommitmentsGcpCudAssignmentArrayOutput() CommitmentsGcpCudAssignmentArrayOutput
	ToCommitmentsGcpCudAssignmentArrayOutputWithContext(context.Context) CommitmentsGcpCudAssignmentArrayOutput
}

type CommitmentsGcpCudAssignmentArray []CommitmentsGcpCudAssignmentInput

func (CommitmentsGcpCudAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsGcpCudAssignment)(nil)).Elem()
}

func (i CommitmentsGcpCudAssignmentArray) ToCommitmentsGcpCudAssignmentArrayOutput() CommitmentsGcpCudAssignmentArrayOutput {
	return i.ToCommitmentsGcpCudAssignmentArrayOutputWithContext(context.Background())
}

func (i CommitmentsGcpCudAssignmentArray) ToCommitmentsGcpCudAssignmentArrayOutputWithContext(ctx context.Context) CommitmentsGcpCudAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsGcpCudAssignmentArrayOutput)
}

type CommitmentsGcpCudAssignmentOutput struct{ *pulumi.OutputState }

func (CommitmentsGcpCudAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsGcpCudAssignment)(nil)).Elem()
}

func (o CommitmentsGcpCudAssignmentOutput) ToCommitmentsGcpCudAssignmentOutput() CommitmentsGcpCudAssignmentOutput {
	return o
}

func (o CommitmentsGcpCudAssignmentOutput) ToCommitmentsGcpCudAssignmentOutputWithContext(ctx context.Context) CommitmentsGcpCudAssignmentOutput {
	return o
}

func (o CommitmentsGcpCudAssignmentOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v CommitmentsGcpCudAssignment) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o CommitmentsGcpCudAssignmentOutput) Priority() pulumi.Float64Output {
	return o.ApplyT(func(v CommitmentsGcpCudAssignment) float64 { return v.Priority }).(pulumi.Float64Output)
}

type CommitmentsGcpCudAssignmentArrayOutput struct{ *pulumi.OutputState }

func (CommitmentsGcpCudAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CommitmentsGcpCudAssignment)(nil)).Elem()
}

func (o CommitmentsGcpCudAssignmentArrayOutput) ToCommitmentsGcpCudAssignmentArrayOutput() CommitmentsGcpCudAssignmentArrayOutput {
	return o
}

func (o CommitmentsGcpCudAssignmentArrayOutput) ToCommitmentsGcpCudAssignmentArrayOutputWithContext(ctx context.Context) CommitmentsGcpCudAssignmentArrayOutput {
	return o
}

func (o CommitmentsGcpCudAssignmentArrayOutput) Index(i pulumi.IntInput) CommitmentsGcpCudAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CommitmentsGcpCudAssignment {
		return vs[0].([]CommitmentsGcpCudAssignment)[vs[1].(int)]
	}).(CommitmentsGcpCudAssignmentOutput)
}

type CommitmentsTimeouts struct {
	Create *string `pulumi:"create"`
	Update *string `pulumi:"update"`
}

// CommitmentsTimeoutsInput is an input type that accepts CommitmentsTimeoutsArgs and CommitmentsTimeoutsOutput values.
// You can construct a concrete instance of `CommitmentsTimeoutsInput` via:
//
//	CommitmentsTimeoutsArgs{...}
type CommitmentsTimeoutsInput interface {
	pulumi.Input

	ToCommitmentsTimeoutsOutput() CommitmentsTimeoutsOutput
	ToCommitmentsTimeoutsOutputWithContext(context.Context) CommitmentsTimeoutsOutput
}

type CommitmentsTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (CommitmentsTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsTimeouts)(nil)).Elem()
}

func (i CommitmentsTimeoutsArgs) ToCommitmentsTimeoutsOutput() CommitmentsTimeoutsOutput {
	return i.ToCommitmentsTimeoutsOutputWithContext(context.Background())
}

func (i CommitmentsTimeoutsArgs) ToCommitmentsTimeoutsOutputWithContext(ctx context.Context) CommitmentsTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsTimeoutsOutput)
}

func (i CommitmentsTimeoutsArgs) ToCommitmentsTimeoutsPtrOutput() CommitmentsTimeoutsPtrOutput {
	return i.ToCommitmentsTimeoutsPtrOutputWithContext(context.Background())
}

func (i CommitmentsTimeoutsArgs) ToCommitmentsTimeoutsPtrOutputWithContext(ctx context.Context) CommitmentsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsTimeoutsOutput).ToCommitmentsTimeoutsPtrOutputWithContext(ctx)
}

// CommitmentsTimeoutsPtrInput is an input type that accepts CommitmentsTimeoutsArgs, CommitmentsTimeoutsPtr and CommitmentsTimeoutsPtrOutput values.
// You can construct a concrete instance of `CommitmentsTimeoutsPtrInput` via:
//
//	        CommitmentsTimeoutsArgs{...}
//
//	or:
//
//	        nil
type CommitmentsTimeoutsPtrInput interface {
	pulumi.Input

	ToCommitmentsTimeoutsPtrOutput() CommitmentsTimeoutsPtrOutput
	ToCommitmentsTimeoutsPtrOutputWithContext(context.Context) CommitmentsTimeoutsPtrOutput
}

type commitmentsTimeoutsPtrType CommitmentsTimeoutsArgs

func CommitmentsTimeoutsPtr(v *CommitmentsTimeoutsArgs) CommitmentsTimeoutsPtrInput {
	return (*commitmentsTimeoutsPtrType)(v)
}

func (*commitmentsTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentsTimeouts)(nil)).Elem()
}

func (i *commitmentsTimeoutsPtrType) ToCommitmentsTimeoutsPtrOutput() CommitmentsTimeoutsPtrOutput {
	return i.ToCommitmentsTimeoutsPtrOutputWithContext(context.Background())
}

func (i *commitmentsTimeoutsPtrType) ToCommitmentsTimeoutsPtrOutputWithContext(ctx context.Context) CommitmentsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CommitmentsTimeoutsPtrOutput)
}

type CommitmentsTimeoutsOutput struct{ *pulumi.OutputState }

func (CommitmentsTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CommitmentsTimeouts)(nil)).Elem()
}

func (o CommitmentsTimeoutsOutput) ToCommitmentsTimeoutsOutput() CommitmentsTimeoutsOutput {
	return o
}

func (o CommitmentsTimeoutsOutput) ToCommitmentsTimeoutsOutputWithContext(ctx context.Context) CommitmentsTimeoutsOutput {
	return o
}

func (o CommitmentsTimeoutsOutput) ToCommitmentsTimeoutsPtrOutput() CommitmentsTimeoutsPtrOutput {
	return o.ToCommitmentsTimeoutsPtrOutputWithContext(context.Background())
}

func (o CommitmentsTimeoutsOutput) ToCommitmentsTimeoutsPtrOutputWithContext(ctx context.Context) CommitmentsTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CommitmentsTimeouts) *CommitmentsTimeouts {
		return &v
	}).(CommitmentsTimeoutsPtrOutput)
}

func (o CommitmentsTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentsTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o CommitmentsTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CommitmentsTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type CommitmentsTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (CommitmentsTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CommitmentsTimeouts)(nil)).Elem()
}

func (o CommitmentsTimeoutsPtrOutput) ToCommitmentsTimeoutsPtrOutput() CommitmentsTimeoutsPtrOutput {
	return o
}

func (o CommitmentsTimeoutsPtrOutput) ToCommitmentsTimeoutsPtrOutputWithContext(ctx context.Context) CommitmentsTimeoutsPtrOutput {
	return o
}

func (o CommitmentsTimeoutsPtrOutput) Elem() CommitmentsTimeoutsOutput {
	return o.ApplyT(func(v *CommitmentsTimeouts) CommitmentsTimeouts {
		if v != nil {
			return *v
		}
		var ret CommitmentsTimeouts
		return ret
	}).(CommitmentsTimeoutsOutput)
}

func (o CommitmentsTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o CommitmentsTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CommitmentsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type EksClusterTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

// EksClusterTimeoutsInput is an input type that accepts EksClusterTimeoutsArgs and EksClusterTimeoutsOutput values.
// You can construct a concrete instance of `EksClusterTimeoutsInput` via:
//
//	EksClusterTimeoutsArgs{...}
type EksClusterTimeoutsInput interface {
	pulumi.Input

	ToEksClusterTimeoutsOutput() EksClusterTimeoutsOutput
	ToEksClusterTimeoutsOutputWithContext(context.Context) EksClusterTimeoutsOutput
}

type EksClusterTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (EksClusterTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EksClusterTimeouts)(nil)).Elem()
}

func (i EksClusterTimeoutsArgs) ToEksClusterTimeoutsOutput() EksClusterTimeoutsOutput {
	return i.ToEksClusterTimeoutsOutputWithContext(context.Background())
}

func (i EksClusterTimeoutsArgs) ToEksClusterTimeoutsOutputWithContext(ctx context.Context) EksClusterTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EksClusterTimeoutsOutput)
}

func (i EksClusterTimeoutsArgs) ToEksClusterTimeoutsPtrOutput() EksClusterTimeoutsPtrOutput {
	return i.ToEksClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (i EksClusterTimeoutsArgs) ToEksClusterTimeoutsPtrOutputWithContext(ctx context.Context) EksClusterTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EksClusterTimeoutsOutput).ToEksClusterTimeoutsPtrOutputWithContext(ctx)
}

// EksClusterTimeoutsPtrInput is an input type that accepts EksClusterTimeoutsArgs, EksClusterTimeoutsPtr and EksClusterTimeoutsPtrOutput values.
// You can construct a concrete instance of `EksClusterTimeoutsPtrInput` via:
//
//	        EksClusterTimeoutsArgs{...}
//
//	or:
//
//	        nil
type EksClusterTimeoutsPtrInput interface {
	pulumi.Input

	ToEksClusterTimeoutsPtrOutput() EksClusterTimeoutsPtrOutput
	ToEksClusterTimeoutsPtrOutputWithContext(context.Context) EksClusterTimeoutsPtrOutput
}

type eksClusterTimeoutsPtrType EksClusterTimeoutsArgs

func EksClusterTimeoutsPtr(v *EksClusterTimeoutsArgs) EksClusterTimeoutsPtrInput {
	return (*eksClusterTimeoutsPtrType)(v)
}

func (*eksClusterTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EksClusterTimeouts)(nil)).Elem()
}

func (i *eksClusterTimeoutsPtrType) ToEksClusterTimeoutsPtrOutput() EksClusterTimeoutsPtrOutput {
	return i.ToEksClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (i *eksClusterTimeoutsPtrType) ToEksClusterTimeoutsPtrOutputWithContext(ctx context.Context) EksClusterTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EksClusterTimeoutsPtrOutput)
}

type EksClusterTimeoutsOutput struct{ *pulumi.OutputState }

func (EksClusterTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EksClusterTimeouts)(nil)).Elem()
}

func (o EksClusterTimeoutsOutput) ToEksClusterTimeoutsOutput() EksClusterTimeoutsOutput {
	return o
}

func (o EksClusterTimeoutsOutput) ToEksClusterTimeoutsOutputWithContext(ctx context.Context) EksClusterTimeoutsOutput {
	return o
}

func (o EksClusterTimeoutsOutput) ToEksClusterTimeoutsPtrOutput() EksClusterTimeoutsPtrOutput {
	return o.ToEksClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (o EksClusterTimeoutsOutput) ToEksClusterTimeoutsPtrOutputWithContext(ctx context.Context) EksClusterTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EksClusterTimeouts) *EksClusterTimeouts {
		return &v
	}).(EksClusterTimeoutsPtrOutput)
}

func (o EksClusterTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EksClusterTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o EksClusterTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EksClusterTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o EksClusterTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EksClusterTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type EksClusterTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (EksClusterTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EksClusterTimeouts)(nil)).Elem()
}

func (o EksClusterTimeoutsPtrOutput) ToEksClusterTimeoutsPtrOutput() EksClusterTimeoutsPtrOutput {
	return o
}

func (o EksClusterTimeoutsPtrOutput) ToEksClusterTimeoutsPtrOutputWithContext(ctx context.Context) EksClusterTimeoutsPtrOutput {
	return o
}

func (o EksClusterTimeoutsPtrOutput) Elem() EksClusterTimeoutsOutput {
	return o.ApplyT(func(v *EksClusterTimeouts) EksClusterTimeouts {
		if v != nil {
			return *v
		}
		var ret EksClusterTimeouts
		return ret
	}).(EksClusterTimeoutsOutput)
}

func (o EksClusterTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EksClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o EksClusterTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EksClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o EksClusterTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EksClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfig struct {
	// Apply Aggressive mode to Evictor
	Aggressive *bool `pulumi:"aggressive"`
	// Mark node as disposable
	Disposable *bool `pulumi:"disposable"`
	// node selector
	NodeSelectors []EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector `pulumi:"nodeSelectors"`
	// pod selector
	PodSelectors []EvictorAdvancedConfigEvictorAdvancedConfigPodSelector `pulumi:"podSelectors"`
	// Mark pods as removal disabled
	RemovalDisabled *bool `pulumi:"removalDisabled"`
}

// EvictorAdvancedConfigEvictorAdvancedConfigInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigArgs and EvictorAdvancedConfigEvictorAdvancedConfigOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigArgs{...}
type EvictorAdvancedConfigEvictorAdvancedConfigInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigOutput() EvictorAdvancedConfigEvictorAdvancedConfigOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigArgs struct {
	// Apply Aggressive mode to Evictor
	Aggressive pulumi.BoolPtrInput `pulumi:"aggressive"`
	// Mark node as disposable
	Disposable pulumi.BoolPtrInput `pulumi:"disposable"`
	// node selector
	NodeSelectors EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayInput `pulumi:"nodeSelectors"`
	// pod selector
	PodSelectors EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayInput `pulumi:"podSelectors"`
	// Mark pods as removal disabled
	RemovalDisabled pulumi.BoolPtrInput `pulumi:"removalDisabled"`
}

func (EvictorAdvancedConfigEvictorAdvancedConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfig)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigOutput() EvictorAdvancedConfigEvictorAdvancedConfigOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigOutput)
}

// EvictorAdvancedConfigEvictorAdvancedConfigArrayInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigArray and EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigArrayInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigArray{ EvictorAdvancedConfigEvictorAdvancedConfigArgs{...} }
type EvictorAdvancedConfigEvictorAdvancedConfigArrayInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigArrayOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigArray []EvictorAdvancedConfigEvictorAdvancedConfigInput

func (EvictorAdvancedConfigEvictorAdvancedConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfig)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigArray) ToEvictorAdvancedConfigEvictorAdvancedConfigArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigArrayOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigArray) ToEvictorAdvancedConfigEvictorAdvancedConfigArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfig)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigOutput() EvictorAdvancedConfigEvictorAdvancedConfigOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigOutput {
	return o
}

// Apply Aggressive mode to Evictor
func (o EvictorAdvancedConfigEvictorAdvancedConfigOutput) Aggressive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfig) *bool { return v.Aggressive }).(pulumi.BoolPtrOutput)
}

// Mark node as disposable
func (o EvictorAdvancedConfigEvictorAdvancedConfigOutput) Disposable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfig) *bool { return v.Disposable }).(pulumi.BoolPtrOutput)
}

// node selector
func (o EvictorAdvancedConfigEvictorAdvancedConfigOutput) NodeSelectors() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfig) []EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector {
		return v.NodeSelectors
	}).(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput)
}

// pod selector
func (o EvictorAdvancedConfigEvictorAdvancedConfigOutput) PodSelectors() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfig) []EvictorAdvancedConfigEvictorAdvancedConfigPodSelector {
		return v.PodSelectors
	}).(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput)
}

// Mark pods as removal disabled
func (o EvictorAdvancedConfigEvictorAdvancedConfigOutput) RemovalDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfig) *bool { return v.RemovalDisabled }).(pulumi.BoolPtrOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfig)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput) Index(i pulumi.IntInput) EvictorAdvancedConfigEvictorAdvancedConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvictorAdvancedConfigEvictorAdvancedConfig {
		return vs[0].([]EvictorAdvancedConfigEvictorAdvancedConfig)[vs[1].(int)]
	}).(EvictorAdvancedConfigEvictorAdvancedConfigOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector struct {
	MatchExpressions []EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                       `pulumi:"matchLabels"`
}

// EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArgs and EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArgs{...}
type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArgs struct {
	MatchExpressions EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                           `pulumi:"matchLabels"`
}

func (EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput)
}

// EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArray and EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArray{ EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArgs{...} }
type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArray []EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorInput

func (EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArray) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArray) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput) MatchExpressions() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector) []EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression {
		return v.MatchExpressions
	}).(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput)
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput) Index(i pulumi.IntInput) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector {
		return vs[0].([]EvictorAdvancedConfigEvictorAdvancedConfigNodeSelector)[vs[1].(int)]
	}).(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression struct {
	Key      string   `pulumi:"key"`
	Operator string   `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArgs and EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArgs{...}
type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArgs struct {
	Key      pulumi.StringInput      `pulumi:"key"`
	Operator pulumi.StringInput      `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput)
}

// EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArray and EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArray{ EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArgs{...} }
type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArray []EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionInput

func (EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArray) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArray) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression) string { return v.Key }).(pulumi.StringOutput)
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput) Index(i pulumi.IntInput) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression {
		return vs[0].([]EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpression)[vs[1].(int)]
	}).(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelector struct {
	Kind             *string                                                                `pulumi:"kind"`
	MatchExpressions []EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression `pulumi:"matchExpressions"`
	MatchLabels      map[string]string                                                      `pulumi:"matchLabels"`
	Namespace        *string                                                                `pulumi:"namespace"`
}

// EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArgs and EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArgs{...}
type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArgs struct {
	Kind             pulumi.StringPtrInput                                                          `pulumi:"kind"`
	MatchExpressions EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayInput `pulumi:"matchExpressions"`
	MatchLabels      pulumi.StringMapInput                                                          `pulumi:"matchLabels"`
	Namespace        pulumi.StringPtrInput                                                          `pulumi:"namespace"`
}

func (EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigPodSelector)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput)
}

// EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArray and EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArray{ EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArgs{...} }
type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArray []EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorInput

func (EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfigPodSelector)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArray) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArray) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigPodSelector)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigPodSelector) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput) MatchExpressions() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigPodSelector) []EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression {
		return v.MatchExpressions
	}).(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput)
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigPodSelector) map[string]string { return v.MatchLabels }).(pulumi.StringMapOutput)
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigPodSelector) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfigPodSelector)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput) Index(i pulumi.IntInput) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvictorAdvancedConfigEvictorAdvancedConfigPodSelector {
		return vs[0].([]EvictorAdvancedConfigEvictorAdvancedConfigPodSelector)[vs[1].(int)]
	}).(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression struct {
	Key      string   `pulumi:"key"`
	Operator string   `pulumi:"operator"`
	Values   []string `pulumi:"values"`
}

// EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArgs and EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArgs{...}
type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArgs struct {
	Key      pulumi.StringInput      `pulumi:"key"`
	Operator pulumi.StringInput      `pulumi:"operator"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
}

func (EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArgs) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput)
}

// EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayInput is an input type that accepts EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArray and EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayInput` via:
//
//	EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArray{ EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArgs{...} }
type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput
	ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutputWithContext(context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArray []EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionInput

func (EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression)(nil)).Elem()
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArray) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput {
	return i.ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArray) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression) string { return v.Key }).(pulumi.StringOutput)
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression) string { return v.Operator }).(pulumi.StringOutput)
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression)(nil)).Elem()
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput() EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput) ToEvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutputWithContext(ctx context.Context) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput {
	return o
}

func (o EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput) Index(i pulumi.IntInput) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression {
		return vs[0].([]EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpression)[vs[1].(int)]
	}).(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput)
}

type EvictorAdvancedConfigTimeouts struct {
	Create *string `pulumi:"create"`
	Update *string `pulumi:"update"`
}

// EvictorAdvancedConfigTimeoutsInput is an input type that accepts EvictorAdvancedConfigTimeoutsArgs and EvictorAdvancedConfigTimeoutsOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigTimeoutsInput` via:
//
//	EvictorAdvancedConfigTimeoutsArgs{...}
type EvictorAdvancedConfigTimeoutsInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigTimeoutsOutput() EvictorAdvancedConfigTimeoutsOutput
	ToEvictorAdvancedConfigTimeoutsOutputWithContext(context.Context) EvictorAdvancedConfigTimeoutsOutput
}

type EvictorAdvancedConfigTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (EvictorAdvancedConfigTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigTimeouts)(nil)).Elem()
}

func (i EvictorAdvancedConfigTimeoutsArgs) ToEvictorAdvancedConfigTimeoutsOutput() EvictorAdvancedConfigTimeoutsOutput {
	return i.ToEvictorAdvancedConfigTimeoutsOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigTimeoutsArgs) ToEvictorAdvancedConfigTimeoutsOutputWithContext(ctx context.Context) EvictorAdvancedConfigTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigTimeoutsOutput)
}

func (i EvictorAdvancedConfigTimeoutsArgs) ToEvictorAdvancedConfigTimeoutsPtrOutput() EvictorAdvancedConfigTimeoutsPtrOutput {
	return i.ToEvictorAdvancedConfigTimeoutsPtrOutputWithContext(context.Background())
}

func (i EvictorAdvancedConfigTimeoutsArgs) ToEvictorAdvancedConfigTimeoutsPtrOutputWithContext(ctx context.Context) EvictorAdvancedConfigTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigTimeoutsOutput).ToEvictorAdvancedConfigTimeoutsPtrOutputWithContext(ctx)
}

// EvictorAdvancedConfigTimeoutsPtrInput is an input type that accepts EvictorAdvancedConfigTimeoutsArgs, EvictorAdvancedConfigTimeoutsPtr and EvictorAdvancedConfigTimeoutsPtrOutput values.
// You can construct a concrete instance of `EvictorAdvancedConfigTimeoutsPtrInput` via:
//
//	        EvictorAdvancedConfigTimeoutsArgs{...}
//
//	or:
//
//	        nil
type EvictorAdvancedConfigTimeoutsPtrInput interface {
	pulumi.Input

	ToEvictorAdvancedConfigTimeoutsPtrOutput() EvictorAdvancedConfigTimeoutsPtrOutput
	ToEvictorAdvancedConfigTimeoutsPtrOutputWithContext(context.Context) EvictorAdvancedConfigTimeoutsPtrOutput
}

type evictorAdvancedConfigTimeoutsPtrType EvictorAdvancedConfigTimeoutsArgs

func EvictorAdvancedConfigTimeoutsPtr(v *EvictorAdvancedConfigTimeoutsArgs) EvictorAdvancedConfigTimeoutsPtrInput {
	return (*evictorAdvancedConfigTimeoutsPtrType)(v)
}

func (*evictorAdvancedConfigTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EvictorAdvancedConfigTimeouts)(nil)).Elem()
}

func (i *evictorAdvancedConfigTimeoutsPtrType) ToEvictorAdvancedConfigTimeoutsPtrOutput() EvictorAdvancedConfigTimeoutsPtrOutput {
	return i.ToEvictorAdvancedConfigTimeoutsPtrOutputWithContext(context.Background())
}

func (i *evictorAdvancedConfigTimeoutsPtrType) ToEvictorAdvancedConfigTimeoutsPtrOutputWithContext(ctx context.Context) EvictorAdvancedConfigTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EvictorAdvancedConfigTimeoutsPtrOutput)
}

type EvictorAdvancedConfigTimeoutsOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EvictorAdvancedConfigTimeouts)(nil)).Elem()
}

func (o EvictorAdvancedConfigTimeoutsOutput) ToEvictorAdvancedConfigTimeoutsOutput() EvictorAdvancedConfigTimeoutsOutput {
	return o
}

func (o EvictorAdvancedConfigTimeoutsOutput) ToEvictorAdvancedConfigTimeoutsOutputWithContext(ctx context.Context) EvictorAdvancedConfigTimeoutsOutput {
	return o
}

func (o EvictorAdvancedConfigTimeoutsOutput) ToEvictorAdvancedConfigTimeoutsPtrOutput() EvictorAdvancedConfigTimeoutsPtrOutput {
	return o.ToEvictorAdvancedConfigTimeoutsPtrOutputWithContext(context.Background())
}

func (o EvictorAdvancedConfigTimeoutsOutput) ToEvictorAdvancedConfigTimeoutsPtrOutputWithContext(ctx context.Context) EvictorAdvancedConfigTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EvictorAdvancedConfigTimeouts) *EvictorAdvancedConfigTimeouts {
		return &v
	}).(EvictorAdvancedConfigTimeoutsPtrOutput)
}

func (o EvictorAdvancedConfigTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o EvictorAdvancedConfigTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EvictorAdvancedConfigTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type EvictorAdvancedConfigTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (EvictorAdvancedConfigTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EvictorAdvancedConfigTimeouts)(nil)).Elem()
}

func (o EvictorAdvancedConfigTimeoutsPtrOutput) ToEvictorAdvancedConfigTimeoutsPtrOutput() EvictorAdvancedConfigTimeoutsPtrOutput {
	return o
}

func (o EvictorAdvancedConfigTimeoutsPtrOutput) ToEvictorAdvancedConfigTimeoutsPtrOutputWithContext(ctx context.Context) EvictorAdvancedConfigTimeoutsPtrOutput {
	return o
}

func (o EvictorAdvancedConfigTimeoutsPtrOutput) Elem() EvictorAdvancedConfigTimeoutsOutput {
	return o.ApplyT(func(v *EvictorAdvancedConfigTimeouts) EvictorAdvancedConfigTimeouts {
		if v != nil {
			return *v
		}
		var ret EvictorAdvancedConfigTimeouts
		return ret
	}).(EvictorAdvancedConfigTimeoutsOutput)
}

func (o EvictorAdvancedConfigTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvictorAdvancedConfigTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o EvictorAdvancedConfigTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EvictorAdvancedConfigTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type GkeClusterIdTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

// GkeClusterIdTimeoutsInput is an input type that accepts GkeClusterIdTimeoutsArgs and GkeClusterIdTimeoutsOutput values.
// You can construct a concrete instance of `GkeClusterIdTimeoutsInput` via:
//
//	GkeClusterIdTimeoutsArgs{...}
type GkeClusterIdTimeoutsInput interface {
	pulumi.Input

	ToGkeClusterIdTimeoutsOutput() GkeClusterIdTimeoutsOutput
	ToGkeClusterIdTimeoutsOutputWithContext(context.Context) GkeClusterIdTimeoutsOutput
}

type GkeClusterIdTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (GkeClusterIdTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterIdTimeouts)(nil)).Elem()
}

func (i GkeClusterIdTimeoutsArgs) ToGkeClusterIdTimeoutsOutput() GkeClusterIdTimeoutsOutput {
	return i.ToGkeClusterIdTimeoutsOutputWithContext(context.Background())
}

func (i GkeClusterIdTimeoutsArgs) ToGkeClusterIdTimeoutsOutputWithContext(ctx context.Context) GkeClusterIdTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterIdTimeoutsOutput)
}

func (i GkeClusterIdTimeoutsArgs) ToGkeClusterIdTimeoutsPtrOutput() GkeClusterIdTimeoutsPtrOutput {
	return i.ToGkeClusterIdTimeoutsPtrOutputWithContext(context.Background())
}

func (i GkeClusterIdTimeoutsArgs) ToGkeClusterIdTimeoutsPtrOutputWithContext(ctx context.Context) GkeClusterIdTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterIdTimeoutsOutput).ToGkeClusterIdTimeoutsPtrOutputWithContext(ctx)
}

// GkeClusterIdTimeoutsPtrInput is an input type that accepts GkeClusterIdTimeoutsArgs, GkeClusterIdTimeoutsPtr and GkeClusterIdTimeoutsPtrOutput values.
// You can construct a concrete instance of `GkeClusterIdTimeoutsPtrInput` via:
//
//	        GkeClusterIdTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GkeClusterIdTimeoutsPtrInput interface {
	pulumi.Input

	ToGkeClusterIdTimeoutsPtrOutput() GkeClusterIdTimeoutsPtrOutput
	ToGkeClusterIdTimeoutsPtrOutputWithContext(context.Context) GkeClusterIdTimeoutsPtrOutput
}

type gkeClusterIdTimeoutsPtrType GkeClusterIdTimeoutsArgs

func GkeClusterIdTimeoutsPtr(v *GkeClusterIdTimeoutsArgs) GkeClusterIdTimeoutsPtrInput {
	return (*gkeClusterIdTimeoutsPtrType)(v)
}

func (*gkeClusterIdTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterIdTimeouts)(nil)).Elem()
}

func (i *gkeClusterIdTimeoutsPtrType) ToGkeClusterIdTimeoutsPtrOutput() GkeClusterIdTimeoutsPtrOutput {
	return i.ToGkeClusterIdTimeoutsPtrOutputWithContext(context.Background())
}

func (i *gkeClusterIdTimeoutsPtrType) ToGkeClusterIdTimeoutsPtrOutputWithContext(ctx context.Context) GkeClusterIdTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterIdTimeoutsPtrOutput)
}

type GkeClusterIdTimeoutsOutput struct{ *pulumi.OutputState }

func (GkeClusterIdTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterIdTimeouts)(nil)).Elem()
}

func (o GkeClusterIdTimeoutsOutput) ToGkeClusterIdTimeoutsOutput() GkeClusterIdTimeoutsOutput {
	return o
}

func (o GkeClusterIdTimeoutsOutput) ToGkeClusterIdTimeoutsOutputWithContext(ctx context.Context) GkeClusterIdTimeoutsOutput {
	return o
}

func (o GkeClusterIdTimeoutsOutput) ToGkeClusterIdTimeoutsPtrOutput() GkeClusterIdTimeoutsPtrOutput {
	return o.ToGkeClusterIdTimeoutsPtrOutputWithContext(context.Background())
}

func (o GkeClusterIdTimeoutsOutput) ToGkeClusterIdTimeoutsPtrOutputWithContext(ctx context.Context) GkeClusterIdTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GkeClusterIdTimeouts) *GkeClusterIdTimeouts {
		return &v
	}).(GkeClusterIdTimeoutsPtrOutput)
}

func (o GkeClusterIdTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GkeClusterIdTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o GkeClusterIdTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GkeClusterIdTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o GkeClusterIdTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GkeClusterIdTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type GkeClusterIdTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GkeClusterIdTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterIdTimeouts)(nil)).Elem()
}

func (o GkeClusterIdTimeoutsPtrOutput) ToGkeClusterIdTimeoutsPtrOutput() GkeClusterIdTimeoutsPtrOutput {
	return o
}

func (o GkeClusterIdTimeoutsPtrOutput) ToGkeClusterIdTimeoutsPtrOutputWithContext(ctx context.Context) GkeClusterIdTimeoutsPtrOutput {
	return o
}

func (o GkeClusterIdTimeoutsPtrOutput) Elem() GkeClusterIdTimeoutsOutput {
	return o.ApplyT(func(v *GkeClusterIdTimeouts) GkeClusterIdTimeouts {
		if v != nil {
			return *v
		}
		var ret GkeClusterIdTimeouts
		return ret
	}).(GkeClusterIdTimeoutsOutput)
}

func (o GkeClusterIdTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeClusterIdTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o GkeClusterIdTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeClusterIdTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o GkeClusterIdTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeClusterIdTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type GkeClusterTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

// GkeClusterTimeoutsInput is an input type that accepts GkeClusterTimeoutsArgs and GkeClusterTimeoutsOutput values.
// You can construct a concrete instance of `GkeClusterTimeoutsInput` via:
//
//	GkeClusterTimeoutsArgs{...}
type GkeClusterTimeoutsInput interface {
	pulumi.Input

	ToGkeClusterTimeoutsOutput() GkeClusterTimeoutsOutput
	ToGkeClusterTimeoutsOutputWithContext(context.Context) GkeClusterTimeoutsOutput
}

type GkeClusterTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (GkeClusterTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterTimeouts)(nil)).Elem()
}

func (i GkeClusterTimeoutsArgs) ToGkeClusterTimeoutsOutput() GkeClusterTimeoutsOutput {
	return i.ToGkeClusterTimeoutsOutputWithContext(context.Background())
}

func (i GkeClusterTimeoutsArgs) ToGkeClusterTimeoutsOutputWithContext(ctx context.Context) GkeClusterTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterTimeoutsOutput)
}

func (i GkeClusterTimeoutsArgs) ToGkeClusterTimeoutsPtrOutput() GkeClusterTimeoutsPtrOutput {
	return i.ToGkeClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (i GkeClusterTimeoutsArgs) ToGkeClusterTimeoutsPtrOutputWithContext(ctx context.Context) GkeClusterTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterTimeoutsOutput).ToGkeClusterTimeoutsPtrOutputWithContext(ctx)
}

// GkeClusterTimeoutsPtrInput is an input type that accepts GkeClusterTimeoutsArgs, GkeClusterTimeoutsPtr and GkeClusterTimeoutsPtrOutput values.
// You can construct a concrete instance of `GkeClusterTimeoutsPtrInput` via:
//
//	        GkeClusterTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GkeClusterTimeoutsPtrInput interface {
	pulumi.Input

	ToGkeClusterTimeoutsPtrOutput() GkeClusterTimeoutsPtrOutput
	ToGkeClusterTimeoutsPtrOutputWithContext(context.Context) GkeClusterTimeoutsPtrOutput
}

type gkeClusterTimeoutsPtrType GkeClusterTimeoutsArgs

func GkeClusterTimeoutsPtr(v *GkeClusterTimeoutsArgs) GkeClusterTimeoutsPtrInput {
	return (*gkeClusterTimeoutsPtrType)(v)
}

func (*gkeClusterTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterTimeouts)(nil)).Elem()
}

func (i *gkeClusterTimeoutsPtrType) ToGkeClusterTimeoutsPtrOutput() GkeClusterTimeoutsPtrOutput {
	return i.ToGkeClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (i *gkeClusterTimeoutsPtrType) ToGkeClusterTimeoutsPtrOutputWithContext(ctx context.Context) GkeClusterTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GkeClusterTimeoutsPtrOutput)
}

type GkeClusterTimeoutsOutput struct{ *pulumi.OutputState }

func (GkeClusterTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GkeClusterTimeouts)(nil)).Elem()
}

func (o GkeClusterTimeoutsOutput) ToGkeClusterTimeoutsOutput() GkeClusterTimeoutsOutput {
	return o
}

func (o GkeClusterTimeoutsOutput) ToGkeClusterTimeoutsOutputWithContext(ctx context.Context) GkeClusterTimeoutsOutput {
	return o
}

func (o GkeClusterTimeoutsOutput) ToGkeClusterTimeoutsPtrOutput() GkeClusterTimeoutsPtrOutput {
	return o.ToGkeClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (o GkeClusterTimeoutsOutput) ToGkeClusterTimeoutsPtrOutputWithContext(ctx context.Context) GkeClusterTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GkeClusterTimeouts) *GkeClusterTimeouts {
		return &v
	}).(GkeClusterTimeoutsPtrOutput)
}

func (o GkeClusterTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GkeClusterTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o GkeClusterTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GkeClusterTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o GkeClusterTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GkeClusterTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type GkeClusterTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GkeClusterTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GkeClusterTimeouts)(nil)).Elem()
}

func (o GkeClusterTimeoutsPtrOutput) ToGkeClusterTimeoutsPtrOutput() GkeClusterTimeoutsPtrOutput {
	return o
}

func (o GkeClusterTimeoutsPtrOutput) ToGkeClusterTimeoutsPtrOutputWithContext(ctx context.Context) GkeClusterTimeoutsPtrOutput {
	return o
}

func (o GkeClusterTimeoutsPtrOutput) Elem() GkeClusterTimeoutsOutput {
	return o.ApplyT(func(v *GkeClusterTimeouts) GkeClusterTimeouts {
		if v != nil {
			return *v
		}
		var ret GkeClusterTimeouts
		return ret
	}).(GkeClusterTimeoutsOutput)
}

func (o GkeClusterTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o GkeClusterTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o GkeClusterTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GkeClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type NodeConfigurationAks struct {
	// Image OS Family to use when provisioning node in AKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (ubuntu,azure-linux)
	AksImageFamily *string `pulumi:"aksImageFamily"`
	// Ephemeral OS disk configuration for CAST provisioned nodes
	EphemeralOsDisk *NodeConfigurationAksEphemeralOsDisk `pulumi:"ephemeralOsDisk"`
	// Load balancer configuration for CAST provisioned nodes
	Loadbalancers []NodeConfigurationAksLoadbalancer `pulumi:"loadbalancers"`
	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
	MaxPodsPerNode *float64 `pulumi:"maxPodsPerNode"`
	// Type of managed os disk attached to the node. (See [disk types](https://learn.microsoft.com/en-us/azure/virtual-machines/disks-types)). One of: standard, standard-ssd, premium-ssd (ultra and premium-ssd-v2 are not supported for os disk)
	OsDiskType *string `pulumi:"osDiskType"`
}

// NodeConfigurationAksInput is an input type that accepts NodeConfigurationAksArgs and NodeConfigurationAksOutput values.
// You can construct a concrete instance of `NodeConfigurationAksInput` via:
//
//	NodeConfigurationAksArgs{...}
type NodeConfigurationAksInput interface {
	pulumi.Input

	ToNodeConfigurationAksOutput() NodeConfigurationAksOutput
	ToNodeConfigurationAksOutputWithContext(context.Context) NodeConfigurationAksOutput
}

type NodeConfigurationAksArgs struct {
	// Image OS Family to use when provisioning node in AKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (ubuntu,azure-linux)
	AksImageFamily pulumi.StringPtrInput `pulumi:"aksImageFamily"`
	// Ephemeral OS disk configuration for CAST provisioned nodes
	EphemeralOsDisk NodeConfigurationAksEphemeralOsDiskPtrInput `pulumi:"ephemeralOsDisk"`
	// Load balancer configuration for CAST provisioned nodes
	Loadbalancers NodeConfigurationAksLoadbalancerArrayInput `pulumi:"loadbalancers"`
	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
	MaxPodsPerNode pulumi.Float64PtrInput `pulumi:"maxPodsPerNode"`
	// Type of managed os disk attached to the node. (See [disk types](https://learn.microsoft.com/en-us/azure/virtual-machines/disks-types)). One of: standard, standard-ssd, premium-ssd (ultra and premium-ssd-v2 are not supported for os disk)
	OsDiskType pulumi.StringPtrInput `pulumi:"osDiskType"`
}

func (NodeConfigurationAksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAks)(nil)).Elem()
}

func (i NodeConfigurationAksArgs) ToNodeConfigurationAksOutput() NodeConfigurationAksOutput {
	return i.ToNodeConfigurationAksOutputWithContext(context.Background())
}

func (i NodeConfigurationAksArgs) ToNodeConfigurationAksOutputWithContext(ctx context.Context) NodeConfigurationAksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksOutput)
}

func (i NodeConfigurationAksArgs) ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput {
	return i.ToNodeConfigurationAksPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationAksArgs) ToNodeConfigurationAksPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksOutput).ToNodeConfigurationAksPtrOutputWithContext(ctx)
}

// NodeConfigurationAksPtrInput is an input type that accepts NodeConfigurationAksArgs, NodeConfigurationAksPtr and NodeConfigurationAksPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationAksPtrInput` via:
//
//	        NodeConfigurationAksArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationAksPtrInput interface {
	pulumi.Input

	ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput
	ToNodeConfigurationAksPtrOutputWithContext(context.Context) NodeConfigurationAksPtrOutput
}

type nodeConfigurationAksPtrType NodeConfigurationAksArgs

func NodeConfigurationAksPtr(v *NodeConfigurationAksArgs) NodeConfigurationAksPtrInput {
	return (*nodeConfigurationAksPtrType)(v)
}

func (*nodeConfigurationAksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAks)(nil)).Elem()
}

func (i *nodeConfigurationAksPtrType) ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput {
	return i.ToNodeConfigurationAksPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationAksPtrType) ToNodeConfigurationAksPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksPtrOutput)
}

type NodeConfigurationAksOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAks)(nil)).Elem()
}

func (o NodeConfigurationAksOutput) ToNodeConfigurationAksOutput() NodeConfigurationAksOutput {
	return o
}

func (o NodeConfigurationAksOutput) ToNodeConfigurationAksOutputWithContext(ctx context.Context) NodeConfigurationAksOutput {
	return o
}

func (o NodeConfigurationAksOutput) ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput {
	return o.ToNodeConfigurationAksPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationAksOutput) ToNodeConfigurationAksPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationAks) *NodeConfigurationAks {
		return &v
	}).(NodeConfigurationAksPtrOutput)
}

// Image OS Family to use when provisioning node in AKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (ubuntu,azure-linux)
func (o NodeConfigurationAksOutput) AksImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *string { return v.AksImageFamily }).(pulumi.StringPtrOutput)
}

// Ephemeral OS disk configuration for CAST provisioned nodes
func (o NodeConfigurationAksOutput) EphemeralOsDisk() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *NodeConfigurationAksEphemeralOsDisk { return v.EphemeralOsDisk }).(NodeConfigurationAksEphemeralOsDiskPtrOutput)
}

// Load balancer configuration for CAST provisioned nodes
func (o NodeConfigurationAksOutput) Loadbalancers() NodeConfigurationAksLoadbalancerArrayOutput {
	return o.ApplyT(func(v NodeConfigurationAks) []NodeConfigurationAksLoadbalancer { return v.Loadbalancers }).(NodeConfigurationAksLoadbalancerArrayOutput)
}

// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
func (o NodeConfigurationAksOutput) MaxPodsPerNode() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *float64 { return v.MaxPodsPerNode }).(pulumi.Float64PtrOutput)
}

// Type of managed os disk attached to the node. (See [disk types](https://learn.microsoft.com/en-us/azure/virtual-machines/disks-types)). One of: standard, standard-ssd, premium-ssd (ultra and premium-ssd-v2 are not supported for os disk)
func (o NodeConfigurationAksOutput) OsDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAks) *string { return v.OsDiskType }).(pulumi.StringPtrOutput)
}

type NodeConfigurationAksPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAks)(nil)).Elem()
}

func (o NodeConfigurationAksPtrOutput) ToNodeConfigurationAksPtrOutput() NodeConfigurationAksPtrOutput {
	return o
}

func (o NodeConfigurationAksPtrOutput) ToNodeConfigurationAksPtrOutputWithContext(ctx context.Context) NodeConfigurationAksPtrOutput {
	return o
}

func (o NodeConfigurationAksPtrOutput) Elem() NodeConfigurationAksOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) NodeConfigurationAks {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationAks
		return ret
	}).(NodeConfigurationAksOutput)
}

// Image OS Family to use when provisioning node in AKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (ubuntu,azure-linux)
func (o NodeConfigurationAksPtrOutput) AksImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *string {
		if v == nil {
			return nil
		}
		return v.AksImageFamily
	}).(pulumi.StringPtrOutput)
}

// Ephemeral OS disk configuration for CAST provisioned nodes
func (o NodeConfigurationAksPtrOutput) EphemeralOsDisk() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *NodeConfigurationAksEphemeralOsDisk {
		if v == nil {
			return nil
		}
		return v.EphemeralOsDisk
	}).(NodeConfigurationAksEphemeralOsDiskPtrOutput)
}

// Load balancer configuration for CAST provisioned nodes
func (o NodeConfigurationAksPtrOutput) Loadbalancers() NodeConfigurationAksLoadbalancerArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) []NodeConfigurationAksLoadbalancer {
		if v == nil {
			return nil
		}
		return v.Loadbalancers
	}).(NodeConfigurationAksLoadbalancerArrayOutput)
}

// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 30
func (o NodeConfigurationAksPtrOutput) MaxPodsPerNode() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNode
	}).(pulumi.Float64PtrOutput)
}

// Type of managed os disk attached to the node. (See [disk types](https://learn.microsoft.com/en-us/azure/virtual-machines/disks-types)). One of: standard, standard-ssd, premium-ssd (ultra and premium-ssd-v2 are not supported for os disk)
func (o NodeConfigurationAksPtrOutput) OsDiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAks) *string {
		if v == nil {
			return nil
		}
		return v.OsDiskType
	}).(pulumi.StringPtrOutput)
}

type NodeConfigurationAksEphemeralOsDisk struct {
	// Cache type for the ephemeral OS disk. One of: ReadOnly, ReadWrite
	Cache *string `pulumi:"cache"`
	// Placement of the ephemeral OS disk. One of: cacheDisk, resourceDisk
	Placement string `pulumi:"placement"`
}

// NodeConfigurationAksEphemeralOsDiskInput is an input type that accepts NodeConfigurationAksEphemeralOsDiskArgs and NodeConfigurationAksEphemeralOsDiskOutput values.
// You can construct a concrete instance of `NodeConfigurationAksEphemeralOsDiskInput` via:
//
//	NodeConfigurationAksEphemeralOsDiskArgs{...}
type NodeConfigurationAksEphemeralOsDiskInput interface {
	pulumi.Input

	ToNodeConfigurationAksEphemeralOsDiskOutput() NodeConfigurationAksEphemeralOsDiskOutput
	ToNodeConfigurationAksEphemeralOsDiskOutputWithContext(context.Context) NodeConfigurationAksEphemeralOsDiskOutput
}

type NodeConfigurationAksEphemeralOsDiskArgs struct {
	// Cache type for the ephemeral OS disk. One of: ReadOnly, ReadWrite
	Cache pulumi.StringPtrInput `pulumi:"cache"`
	// Placement of the ephemeral OS disk. One of: cacheDisk, resourceDisk
	Placement pulumi.StringInput `pulumi:"placement"`
}

func (NodeConfigurationAksEphemeralOsDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksEphemeralOsDisk)(nil)).Elem()
}

func (i NodeConfigurationAksEphemeralOsDiskArgs) ToNodeConfigurationAksEphemeralOsDiskOutput() NodeConfigurationAksEphemeralOsDiskOutput {
	return i.ToNodeConfigurationAksEphemeralOsDiskOutputWithContext(context.Background())
}

func (i NodeConfigurationAksEphemeralOsDiskArgs) ToNodeConfigurationAksEphemeralOsDiskOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksEphemeralOsDiskOutput)
}

func (i NodeConfigurationAksEphemeralOsDiskArgs) ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return i.ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationAksEphemeralOsDiskArgs) ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksEphemeralOsDiskOutput).ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx)
}

// NodeConfigurationAksEphemeralOsDiskPtrInput is an input type that accepts NodeConfigurationAksEphemeralOsDiskArgs, NodeConfigurationAksEphemeralOsDiskPtr and NodeConfigurationAksEphemeralOsDiskPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationAksEphemeralOsDiskPtrInput` via:
//
//	        NodeConfigurationAksEphemeralOsDiskArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationAksEphemeralOsDiskPtrInput interface {
	pulumi.Input

	ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput
	ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput
}

type nodeConfigurationAksEphemeralOsDiskPtrType NodeConfigurationAksEphemeralOsDiskArgs

func NodeConfigurationAksEphemeralOsDiskPtr(v *NodeConfigurationAksEphemeralOsDiskArgs) NodeConfigurationAksEphemeralOsDiskPtrInput {
	return (*nodeConfigurationAksEphemeralOsDiskPtrType)(v)
}

func (*nodeConfigurationAksEphemeralOsDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAksEphemeralOsDisk)(nil)).Elem()
}

func (i *nodeConfigurationAksEphemeralOsDiskPtrType) ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return i.ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationAksEphemeralOsDiskPtrType) ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksEphemeralOsDiskPtrOutput)
}

type NodeConfigurationAksEphemeralOsDiskOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksEphemeralOsDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksEphemeralOsDisk)(nil)).Elem()
}

func (o NodeConfigurationAksEphemeralOsDiskOutput) ToNodeConfigurationAksEphemeralOsDiskOutput() NodeConfigurationAksEphemeralOsDiskOutput {
	return o
}

func (o NodeConfigurationAksEphemeralOsDiskOutput) ToNodeConfigurationAksEphemeralOsDiskOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskOutput {
	return o
}

func (o NodeConfigurationAksEphemeralOsDiskOutput) ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o.ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationAksEphemeralOsDiskOutput) ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationAksEphemeralOsDisk) *NodeConfigurationAksEphemeralOsDisk {
		return &v
	}).(NodeConfigurationAksEphemeralOsDiskPtrOutput)
}

// Cache type for the ephemeral OS disk. One of: ReadOnly, ReadWrite
func (o NodeConfigurationAksEphemeralOsDiskOutput) Cache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAksEphemeralOsDisk) *string { return v.Cache }).(pulumi.StringPtrOutput)
}

// Placement of the ephemeral OS disk. One of: cacheDisk, resourceDisk
func (o NodeConfigurationAksEphemeralOsDiskOutput) Placement() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationAksEphemeralOsDisk) string { return v.Placement }).(pulumi.StringOutput)
}

type NodeConfigurationAksEphemeralOsDiskPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksEphemeralOsDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationAksEphemeralOsDisk)(nil)).Elem()
}

func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) ToNodeConfigurationAksEphemeralOsDiskPtrOutput() NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o
}

func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) ToNodeConfigurationAksEphemeralOsDiskPtrOutputWithContext(ctx context.Context) NodeConfigurationAksEphemeralOsDiskPtrOutput {
	return o
}

func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) Elem() NodeConfigurationAksEphemeralOsDiskOutput {
	return o.ApplyT(func(v *NodeConfigurationAksEphemeralOsDisk) NodeConfigurationAksEphemeralOsDisk {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationAksEphemeralOsDisk
		return ret
	}).(NodeConfigurationAksEphemeralOsDiskOutput)
}

// Cache type for the ephemeral OS disk. One of: ReadOnly, ReadWrite
func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) Cache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAksEphemeralOsDisk) *string {
		if v == nil {
			return nil
		}
		return v.Cache
	}).(pulumi.StringPtrOutput)
}

// Placement of the ephemeral OS disk. One of: cacheDisk, resourceDisk
func (o NodeConfigurationAksEphemeralOsDiskPtrOutput) Placement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationAksEphemeralOsDisk) *string {
		if v == nil {
			return nil
		}
		return &v.Placement
	}).(pulumi.StringPtrOutput)
}

type NodeConfigurationAksLoadbalancer struct {
	// The full ID of the load balancer in azure.
	Id *string `pulumi:"id"`
	// IP based backend pools configuration for CAST provisioned nodes
	IpBasedBackendPools []NodeConfigurationAksLoadbalancerIpBasedBackendPool `pulumi:"ipBasedBackendPools"`
	// Name of load balancer
	//
	// Deprecated: Deprecated
	Name *string `pulumi:"name"`
	// NIC based backend pools configuration for CAST provisioned nodes.
	NicBasedBackendPools []NodeConfigurationAksLoadbalancerNicBasedBackendPool `pulumi:"nicBasedBackendPools"`
}

// NodeConfigurationAksLoadbalancerInput is an input type that accepts NodeConfigurationAksLoadbalancerArgs and NodeConfigurationAksLoadbalancerOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerInput` via:
//
//	NodeConfigurationAksLoadbalancerArgs{...}
type NodeConfigurationAksLoadbalancerInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerOutput() NodeConfigurationAksLoadbalancerOutput
	ToNodeConfigurationAksLoadbalancerOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerOutput
}

type NodeConfigurationAksLoadbalancerArgs struct {
	// The full ID of the load balancer in azure.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP based backend pools configuration for CAST provisioned nodes
	IpBasedBackendPools NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput `pulumi:"ipBasedBackendPools"`
	// Name of load balancer
	//
	// Deprecated: Deprecated
	Name pulumi.StringPtrInput `pulumi:"name"`
	// NIC based backend pools configuration for CAST provisioned nodes.
	NicBasedBackendPools NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput `pulumi:"nicBasedBackendPools"`
}

func (NodeConfigurationAksLoadbalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancer)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerArgs) ToNodeConfigurationAksLoadbalancerOutput() NodeConfigurationAksLoadbalancerOutput {
	return i.ToNodeConfigurationAksLoadbalancerOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerArgs) ToNodeConfigurationAksLoadbalancerOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerOutput)
}

// NodeConfigurationAksLoadbalancerArrayInput is an input type that accepts NodeConfigurationAksLoadbalancerArray and NodeConfigurationAksLoadbalancerArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerArrayInput` via:
//
//	NodeConfigurationAksLoadbalancerArray{ NodeConfigurationAksLoadbalancerArgs{...} }
type NodeConfigurationAksLoadbalancerArrayInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerArrayOutput() NodeConfigurationAksLoadbalancerArrayOutput
	ToNodeConfigurationAksLoadbalancerArrayOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerArrayOutput
}

type NodeConfigurationAksLoadbalancerArray []NodeConfigurationAksLoadbalancerInput

func (NodeConfigurationAksLoadbalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancer)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerArray) ToNodeConfigurationAksLoadbalancerArrayOutput() NodeConfigurationAksLoadbalancerArrayOutput {
	return i.ToNodeConfigurationAksLoadbalancerArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerArray) ToNodeConfigurationAksLoadbalancerArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerArrayOutput)
}

type NodeConfigurationAksLoadbalancerOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancer)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerOutput) ToNodeConfigurationAksLoadbalancerOutput() NodeConfigurationAksLoadbalancerOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerOutput) ToNodeConfigurationAksLoadbalancerOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerOutput {
	return o
}

// The full ID of the load balancer in azure.
func (o NodeConfigurationAksLoadbalancerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancer) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP based backend pools configuration for CAST provisioned nodes
func (o NodeConfigurationAksLoadbalancerOutput) IpBasedBackendPools() NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancer) []NodeConfigurationAksLoadbalancerIpBasedBackendPool {
		return v.IpBasedBackendPools
	}).(NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput)
}

// Name of load balancer
//
// Deprecated: Deprecated
func (o NodeConfigurationAksLoadbalancerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancer) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// NIC based backend pools configuration for CAST provisioned nodes.
func (o NodeConfigurationAksLoadbalancerOutput) NicBasedBackendPools() NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancer) []NodeConfigurationAksLoadbalancerNicBasedBackendPool {
		return v.NicBasedBackendPools
	}).(NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput)
}

type NodeConfigurationAksLoadbalancerArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancer)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerArrayOutput) ToNodeConfigurationAksLoadbalancerArrayOutput() NodeConfigurationAksLoadbalancerArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerArrayOutput) ToNodeConfigurationAksLoadbalancerArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerArrayOutput) Index(i pulumi.IntInput) NodeConfigurationAksLoadbalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationAksLoadbalancer {
		return vs[0].([]NodeConfigurationAksLoadbalancer)[vs[1].(int)]
	}).(NodeConfigurationAksLoadbalancerOutput)
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPool struct {
	// Name of the ip based backend pool
	Name string `pulumi:"name"`
}

// NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput is an input type that accepts NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs and NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput` via:
//
//	NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs{...}
type NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput
	ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs struct {
	// Name of the ip based backend pool
	Name pulumi.StringInput `pulumi:"name"`
}

func (NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancerIpBasedBackendPool)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return i.ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput)
}

// NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput is an input type that accepts NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray and NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput` via:
//
//	NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray{ NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs{...} }
type NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput
	ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray []NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput

func (NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancerIpBasedBackendPool)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return i.ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput)
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancerIpBasedBackendPool)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return o
}

// Name of the ip based backend pool
func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancerIpBasedBackendPool) string { return v.Name }).(pulumi.StringOutput)
}

type NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancerIpBasedBackendPool)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput) ToNodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput) Index(i pulumi.IntInput) NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationAksLoadbalancerIpBasedBackendPool {
		return vs[0].([]NodeConfigurationAksLoadbalancerIpBasedBackendPool)[vs[1].(int)]
	}).(NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput)
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPool struct {
	// Name of the NIC based backend pool
	Name string `pulumi:"name"`
}

// NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput is an input type that accepts NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs and NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput` via:
//
//	NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs{...}
type NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput
	ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs struct {
	// Name of the NIC based backend pool
	Name pulumi.StringInput `pulumi:"name"`
}

func (NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancerNicBasedBackendPool)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return i.ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput)
}

// NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput is an input type that accepts NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray and NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput` via:
//
//	NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray{ NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs{...} }
type NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput interface {
	pulumi.Input

	ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput
	ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutputWithContext(context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray []NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput

func (NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancerNicBasedBackendPool)(nil)).Elem()
}

func (i NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return i.ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput)
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationAksLoadbalancerNicBasedBackendPool)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return o
}

// Name of the NIC based backend pool
func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationAksLoadbalancerNicBasedBackendPool) string { return v.Name }).(pulumi.StringOutput)
}

type NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationAksLoadbalancerNicBasedBackendPool)(nil)).Elem()
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput() NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput) ToNodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput) Index(i pulumi.IntInput) NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationAksLoadbalancerNicBasedBackendPool {
		return vs[0].([]NodeConfigurationAksLoadbalancerNicBasedBackendPool)[vs[1].(int)]
	}).(NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput)
}

type NodeConfigurationDefaultTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Read   *string `pulumi:"read"`
}

// NodeConfigurationDefaultTimeoutsInput is an input type that accepts NodeConfigurationDefaultTimeoutsArgs and NodeConfigurationDefaultTimeoutsOutput values.
// You can construct a concrete instance of `NodeConfigurationDefaultTimeoutsInput` via:
//
//	NodeConfigurationDefaultTimeoutsArgs{...}
type NodeConfigurationDefaultTimeoutsInput interface {
	pulumi.Input

	ToNodeConfigurationDefaultTimeoutsOutput() NodeConfigurationDefaultTimeoutsOutput
	ToNodeConfigurationDefaultTimeoutsOutputWithContext(context.Context) NodeConfigurationDefaultTimeoutsOutput
}

type NodeConfigurationDefaultTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Read   pulumi.StringPtrInput `pulumi:"read"`
}

func (NodeConfigurationDefaultTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationDefaultTimeouts)(nil)).Elem()
}

func (i NodeConfigurationDefaultTimeoutsArgs) ToNodeConfigurationDefaultTimeoutsOutput() NodeConfigurationDefaultTimeoutsOutput {
	return i.ToNodeConfigurationDefaultTimeoutsOutputWithContext(context.Background())
}

func (i NodeConfigurationDefaultTimeoutsArgs) ToNodeConfigurationDefaultTimeoutsOutputWithContext(ctx context.Context) NodeConfigurationDefaultTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationDefaultTimeoutsOutput)
}

func (i NodeConfigurationDefaultTimeoutsArgs) ToNodeConfigurationDefaultTimeoutsPtrOutput() NodeConfigurationDefaultTimeoutsPtrOutput {
	return i.ToNodeConfigurationDefaultTimeoutsPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationDefaultTimeoutsArgs) ToNodeConfigurationDefaultTimeoutsPtrOutputWithContext(ctx context.Context) NodeConfigurationDefaultTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationDefaultTimeoutsOutput).ToNodeConfigurationDefaultTimeoutsPtrOutputWithContext(ctx)
}

// NodeConfigurationDefaultTimeoutsPtrInput is an input type that accepts NodeConfigurationDefaultTimeoutsArgs, NodeConfigurationDefaultTimeoutsPtr and NodeConfigurationDefaultTimeoutsPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationDefaultTimeoutsPtrInput` via:
//
//	        NodeConfigurationDefaultTimeoutsArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationDefaultTimeoutsPtrInput interface {
	pulumi.Input

	ToNodeConfigurationDefaultTimeoutsPtrOutput() NodeConfigurationDefaultTimeoutsPtrOutput
	ToNodeConfigurationDefaultTimeoutsPtrOutputWithContext(context.Context) NodeConfigurationDefaultTimeoutsPtrOutput
}

type nodeConfigurationDefaultTimeoutsPtrType NodeConfigurationDefaultTimeoutsArgs

func NodeConfigurationDefaultTimeoutsPtr(v *NodeConfigurationDefaultTimeoutsArgs) NodeConfigurationDefaultTimeoutsPtrInput {
	return (*nodeConfigurationDefaultTimeoutsPtrType)(v)
}

func (*nodeConfigurationDefaultTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationDefaultTimeouts)(nil)).Elem()
}

func (i *nodeConfigurationDefaultTimeoutsPtrType) ToNodeConfigurationDefaultTimeoutsPtrOutput() NodeConfigurationDefaultTimeoutsPtrOutput {
	return i.ToNodeConfigurationDefaultTimeoutsPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationDefaultTimeoutsPtrType) ToNodeConfigurationDefaultTimeoutsPtrOutputWithContext(ctx context.Context) NodeConfigurationDefaultTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationDefaultTimeoutsPtrOutput)
}

type NodeConfigurationDefaultTimeoutsOutput struct{ *pulumi.OutputState }

func (NodeConfigurationDefaultTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationDefaultTimeouts)(nil)).Elem()
}

func (o NodeConfigurationDefaultTimeoutsOutput) ToNodeConfigurationDefaultTimeoutsOutput() NodeConfigurationDefaultTimeoutsOutput {
	return o
}

func (o NodeConfigurationDefaultTimeoutsOutput) ToNodeConfigurationDefaultTimeoutsOutputWithContext(ctx context.Context) NodeConfigurationDefaultTimeoutsOutput {
	return o
}

func (o NodeConfigurationDefaultTimeoutsOutput) ToNodeConfigurationDefaultTimeoutsPtrOutput() NodeConfigurationDefaultTimeoutsPtrOutput {
	return o.ToNodeConfigurationDefaultTimeoutsPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationDefaultTimeoutsOutput) ToNodeConfigurationDefaultTimeoutsPtrOutputWithContext(ctx context.Context) NodeConfigurationDefaultTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationDefaultTimeouts) *NodeConfigurationDefaultTimeouts {
		return &v
	}).(NodeConfigurationDefaultTimeoutsPtrOutput)
}

func (o NodeConfigurationDefaultTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationDefaultTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationDefaultTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationDefaultTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationDefaultTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationDefaultTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

type NodeConfigurationDefaultTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationDefaultTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationDefaultTimeouts)(nil)).Elem()
}

func (o NodeConfigurationDefaultTimeoutsPtrOutput) ToNodeConfigurationDefaultTimeoutsPtrOutput() NodeConfigurationDefaultTimeoutsPtrOutput {
	return o
}

func (o NodeConfigurationDefaultTimeoutsPtrOutput) ToNodeConfigurationDefaultTimeoutsPtrOutputWithContext(ctx context.Context) NodeConfigurationDefaultTimeoutsPtrOutput {
	return o
}

func (o NodeConfigurationDefaultTimeoutsPtrOutput) Elem() NodeConfigurationDefaultTimeoutsOutput {
	return o.ApplyT(func(v *NodeConfigurationDefaultTimeouts) NodeConfigurationDefaultTimeouts {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationDefaultTimeouts
		return ret
	}).(NodeConfigurationDefaultTimeoutsOutput)
}

func (o NodeConfigurationDefaultTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationDefaultTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationDefaultTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationDefaultTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationDefaultTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationDefaultTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

type NodeConfigurationEks struct {
	// IP address to use for DNS queries within the cluster
	DnsClusterIp *string `pulumi:"dnsClusterIp"`
	// Image OS Family to use when provisioning node in EKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (al2,al2023,bottlerocket)
	EksImageFamily *string `pulumi:"eksImageFamily"`
	// Allow configure the IMDSv2 hop limit, the default is 2
	ImdsHopLimit *float64 `pulumi:"imdsHopLimit"`
	// When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
	ImdsV1 *bool `pulumi:"imdsV1"`
	// Cluster's instance profile ARN used for CAST provisioned nodes
	InstanceProfileArn string `pulumi:"instanceProfileArn"`
	// Number of IPs per prefix to be used for calculating max pods.
	IpsPerPrefix *float64 `pulumi:"ipsPerPrefix"`
	// AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
	KeyPairId *string `pulumi:"keyPairId"`
	// Formula to calculate the maximum number of pods that can be run on a node. The following list of variables will be bound to a number before evaluating and can be used in the formula: NUM_MAX_NET_INTERFACES, NUM_IP_PER_INTERFACE, NUM_IP_PER_PREFIX, NUM_CPU, NUM_RAM_GB .
	MaxPodsPerNodeFormula *string `pulumi:"maxPodsPerNodeFormula"`
	// Cluster's node group ARN used for CAST provisioned node pools. Required for hibernate/resume functionality
	NodeGroupArn *string `pulumi:"nodeGroupArn"`
	// Cluster's security groups configuration for CAST provisioned nodes
	SecurityGroups []string `pulumi:"securityGroups"`
	// AWS target groups configuration for CAST provisioned nodes
	TargetGroups []NodeConfigurationEksTargetGroup `pulumi:"targetGroups"`
	// AWS EBS volume IOPS to be used for CAST provisioned nodes
	VolumeIops *float64 `pulumi:"volumeIops"`
	// AWS KMS key ARN for encrypting EBS volume attached to the node
	VolumeKmsKeyArn *string `pulumi:"volumeKmsKeyArn"`
	// AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
	VolumeThroughput *float64 `pulumi:"volumeThroughput"`
	// AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, gp2, io1, io2
	VolumeType *string `pulumi:"volumeType"`
}

// NodeConfigurationEksInput is an input type that accepts NodeConfigurationEksArgs and NodeConfigurationEksOutput values.
// You can construct a concrete instance of `NodeConfigurationEksInput` via:
//
//	NodeConfigurationEksArgs{...}
type NodeConfigurationEksInput interface {
	pulumi.Input

	ToNodeConfigurationEksOutput() NodeConfigurationEksOutput
	ToNodeConfigurationEksOutputWithContext(context.Context) NodeConfigurationEksOutput
}

type NodeConfigurationEksArgs struct {
	// IP address to use for DNS queries within the cluster
	DnsClusterIp pulumi.StringPtrInput `pulumi:"dnsClusterIp"`
	// Image OS Family to use when provisioning node in EKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (al2,al2023,bottlerocket)
	EksImageFamily pulumi.StringPtrInput `pulumi:"eksImageFamily"`
	// Allow configure the IMDSv2 hop limit, the default is 2
	ImdsHopLimit pulumi.Float64PtrInput `pulumi:"imdsHopLimit"`
	// When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
	ImdsV1 pulumi.BoolPtrInput `pulumi:"imdsV1"`
	// Cluster's instance profile ARN used for CAST provisioned nodes
	InstanceProfileArn pulumi.StringInput `pulumi:"instanceProfileArn"`
	// Number of IPs per prefix to be used for calculating max pods.
	IpsPerPrefix pulumi.Float64PtrInput `pulumi:"ipsPerPrefix"`
	// AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
	KeyPairId pulumi.StringPtrInput `pulumi:"keyPairId"`
	// Formula to calculate the maximum number of pods that can be run on a node. The following list of variables will be bound to a number before evaluating and can be used in the formula: NUM_MAX_NET_INTERFACES, NUM_IP_PER_INTERFACE, NUM_IP_PER_PREFIX, NUM_CPU, NUM_RAM_GB .
	MaxPodsPerNodeFormula pulumi.StringPtrInput `pulumi:"maxPodsPerNodeFormula"`
	// Cluster's node group ARN used for CAST provisioned node pools. Required for hibernate/resume functionality
	NodeGroupArn pulumi.StringPtrInput `pulumi:"nodeGroupArn"`
	// Cluster's security groups configuration for CAST provisioned nodes
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// AWS target groups configuration for CAST provisioned nodes
	TargetGroups NodeConfigurationEksTargetGroupArrayInput `pulumi:"targetGroups"`
	// AWS EBS volume IOPS to be used for CAST provisioned nodes
	VolumeIops pulumi.Float64PtrInput `pulumi:"volumeIops"`
	// AWS KMS key ARN for encrypting EBS volume attached to the node
	VolumeKmsKeyArn pulumi.StringPtrInput `pulumi:"volumeKmsKeyArn"`
	// AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
	VolumeThroughput pulumi.Float64PtrInput `pulumi:"volumeThroughput"`
	// AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, gp2, io1, io2
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (NodeConfigurationEksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationEks)(nil)).Elem()
}

func (i NodeConfigurationEksArgs) ToNodeConfigurationEksOutput() NodeConfigurationEksOutput {
	return i.ToNodeConfigurationEksOutputWithContext(context.Background())
}

func (i NodeConfigurationEksArgs) ToNodeConfigurationEksOutputWithContext(ctx context.Context) NodeConfigurationEksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksOutput)
}

func (i NodeConfigurationEksArgs) ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput {
	return i.ToNodeConfigurationEksPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationEksArgs) ToNodeConfigurationEksPtrOutputWithContext(ctx context.Context) NodeConfigurationEksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksOutput).ToNodeConfigurationEksPtrOutputWithContext(ctx)
}

// NodeConfigurationEksPtrInput is an input type that accepts NodeConfigurationEksArgs, NodeConfigurationEksPtr and NodeConfigurationEksPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationEksPtrInput` via:
//
//	        NodeConfigurationEksArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationEksPtrInput interface {
	pulumi.Input

	ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput
	ToNodeConfigurationEksPtrOutputWithContext(context.Context) NodeConfigurationEksPtrOutput
}

type nodeConfigurationEksPtrType NodeConfigurationEksArgs

func NodeConfigurationEksPtr(v *NodeConfigurationEksArgs) NodeConfigurationEksPtrInput {
	return (*nodeConfigurationEksPtrType)(v)
}

func (*nodeConfigurationEksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationEks)(nil)).Elem()
}

func (i *nodeConfigurationEksPtrType) ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput {
	return i.ToNodeConfigurationEksPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationEksPtrType) ToNodeConfigurationEksPtrOutputWithContext(ctx context.Context) NodeConfigurationEksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksPtrOutput)
}

type NodeConfigurationEksOutput struct{ *pulumi.OutputState }

func (NodeConfigurationEksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationEks)(nil)).Elem()
}

func (o NodeConfigurationEksOutput) ToNodeConfigurationEksOutput() NodeConfigurationEksOutput {
	return o
}

func (o NodeConfigurationEksOutput) ToNodeConfigurationEksOutputWithContext(ctx context.Context) NodeConfigurationEksOutput {
	return o
}

func (o NodeConfigurationEksOutput) ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput {
	return o.ToNodeConfigurationEksPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationEksOutput) ToNodeConfigurationEksPtrOutputWithContext(ctx context.Context) NodeConfigurationEksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationEks) *NodeConfigurationEks {
		return &v
	}).(NodeConfigurationEksPtrOutput)
}

// IP address to use for DNS queries within the cluster
func (o NodeConfigurationEksOutput) DnsClusterIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.DnsClusterIp }).(pulumi.StringPtrOutput)
}

// Image OS Family to use when provisioning node in EKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (al2,al2023,bottlerocket)
func (o NodeConfigurationEksOutput) EksImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.EksImageFamily }).(pulumi.StringPtrOutput)
}

// Allow configure the IMDSv2 hop limit, the default is 2
func (o NodeConfigurationEksOutput) ImdsHopLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *float64 { return v.ImdsHopLimit }).(pulumi.Float64PtrOutput)
}

// When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
func (o NodeConfigurationEksOutput) ImdsV1() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *bool { return v.ImdsV1 }).(pulumi.BoolPtrOutput)
}

// Cluster's instance profile ARN used for CAST provisioned nodes
func (o NodeConfigurationEksOutput) InstanceProfileArn() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationEks) string { return v.InstanceProfileArn }).(pulumi.StringOutput)
}

// Number of IPs per prefix to be used for calculating max pods.
func (o NodeConfigurationEksOutput) IpsPerPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *float64 { return v.IpsPerPrefix }).(pulumi.Float64PtrOutput)
}

// AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
func (o NodeConfigurationEksOutput) KeyPairId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.KeyPairId }).(pulumi.StringPtrOutput)
}

// Formula to calculate the maximum number of pods that can be run on a node. The following list of variables will be bound to a number before evaluating and can be used in the formula: NUM_MAX_NET_INTERFACES, NUM_IP_PER_INTERFACE, NUM_IP_PER_PREFIX, NUM_CPU, NUM_RAM_GB .
func (o NodeConfigurationEksOutput) MaxPodsPerNodeFormula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.MaxPodsPerNodeFormula }).(pulumi.StringPtrOutput)
}

// Cluster's node group ARN used for CAST provisioned node pools. Required for hibernate/resume functionality
func (o NodeConfigurationEksOutput) NodeGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.NodeGroupArn }).(pulumi.StringPtrOutput)
}

// Cluster's security groups configuration for CAST provisioned nodes
func (o NodeConfigurationEksOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeConfigurationEks) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// AWS target groups configuration for CAST provisioned nodes
func (o NodeConfigurationEksOutput) TargetGroups() NodeConfigurationEksTargetGroupArrayOutput {
	return o.ApplyT(func(v NodeConfigurationEks) []NodeConfigurationEksTargetGroup { return v.TargetGroups }).(NodeConfigurationEksTargetGroupArrayOutput)
}

// AWS EBS volume IOPS to be used for CAST provisioned nodes
func (o NodeConfigurationEksOutput) VolumeIops() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *float64 { return v.VolumeIops }).(pulumi.Float64PtrOutput)
}

// AWS KMS key ARN for encrypting EBS volume attached to the node
func (o NodeConfigurationEksOutput) VolumeKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.VolumeKmsKeyArn }).(pulumi.StringPtrOutput)
}

// AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
func (o NodeConfigurationEksOutput) VolumeThroughput() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *float64 { return v.VolumeThroughput }).(pulumi.Float64PtrOutput)
}

// AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, gp2, io1, io2
func (o NodeConfigurationEksOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationEks) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type NodeConfigurationEksPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationEksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationEks)(nil)).Elem()
}

func (o NodeConfigurationEksPtrOutput) ToNodeConfigurationEksPtrOutput() NodeConfigurationEksPtrOutput {
	return o
}

func (o NodeConfigurationEksPtrOutput) ToNodeConfigurationEksPtrOutputWithContext(ctx context.Context) NodeConfigurationEksPtrOutput {
	return o
}

func (o NodeConfigurationEksPtrOutput) Elem() NodeConfigurationEksOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) NodeConfigurationEks {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationEks
		return ret
	}).(NodeConfigurationEksOutput)
}

// IP address to use for DNS queries within the cluster
func (o NodeConfigurationEksPtrOutput) DnsClusterIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.DnsClusterIp
	}).(pulumi.StringPtrOutput)
}

// Image OS Family to use when provisioning node in EKS. If both image and family are provided, the system will use provided image and provisioning logic for given family. If only image family is provided, the system will attempt to resolve the latest image from that family based on kubernetes version and node architecture. If image family is omitted, a default family (based on cloud provider) will be used. See Cast.ai documentation for details. Possible values: (al2,al2023,bottlerocket)
func (o NodeConfigurationEksPtrOutput) EksImageFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.EksImageFamily
	}).(pulumi.StringPtrOutput)
}

// Allow configure the IMDSv2 hop limit, the default is 2
func (o NodeConfigurationEksPtrOutput) ImdsHopLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *float64 {
		if v == nil {
			return nil
		}
		return v.ImdsHopLimit
	}).(pulumi.Float64PtrOutput)
}

// When the value is true both IMDSv1 and IMDSv2 are enabled. Setting the value to false disables permanently IMDSv1 and might affect legacy workloads running on the node created with this configuration. The default is true if the flag isn't provided
func (o NodeConfigurationEksPtrOutput) ImdsV1() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *bool {
		if v == nil {
			return nil
		}
		return v.ImdsV1
	}).(pulumi.BoolPtrOutput)
}

// Cluster's instance profile ARN used for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) InstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceProfileArn
	}).(pulumi.StringPtrOutput)
}

// Number of IPs per prefix to be used for calculating max pods.
func (o NodeConfigurationEksPtrOutput) IpsPerPrefix() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *float64 {
		if v == nil {
			return nil
		}
		return v.IpsPerPrefix
	}).(pulumi.Float64PtrOutput)
}

// AWS key pair ID to be used for CAST provisioned nodes. Has priority over ssh_public_key
func (o NodeConfigurationEksPtrOutput) KeyPairId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.KeyPairId
	}).(pulumi.StringPtrOutput)
}

// Formula to calculate the maximum number of pods that can be run on a node. The following list of variables will be bound to a number before evaluating and can be used in the formula: NUM_MAX_NET_INTERFACES, NUM_IP_PER_INTERFACE, NUM_IP_PER_PREFIX, NUM_CPU, NUM_RAM_GB .
func (o NodeConfigurationEksPtrOutput) MaxPodsPerNodeFormula() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNodeFormula
	}).(pulumi.StringPtrOutput)
}

// Cluster's node group ARN used for CAST provisioned node pools. Required for hibernate/resume functionality
func (o NodeConfigurationEksPtrOutput) NodeGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.NodeGroupArn
	}).(pulumi.StringPtrOutput)
}

// Cluster's security groups configuration for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// AWS target groups configuration for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) TargetGroups() NodeConfigurationEksTargetGroupArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) []NodeConfigurationEksTargetGroup {
		if v == nil {
			return nil
		}
		return v.TargetGroups
	}).(NodeConfigurationEksTargetGroupArrayOutput)
}

// AWS EBS volume IOPS to be used for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) VolumeIops() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *float64 {
		if v == nil {
			return nil
		}
		return v.VolumeIops
	}).(pulumi.Float64PtrOutput)
}

// AWS KMS key ARN for encrypting EBS volume attached to the node
func (o NodeConfigurationEksPtrOutput) VolumeKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.VolumeKmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// AWS EBS volume throughput in MiB/s to be used for CAST provisioned nodes
func (o NodeConfigurationEksPtrOutput) VolumeThroughput() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *float64 {
		if v == nil {
			return nil
		}
		return v.VolumeThroughput
	}).(pulumi.Float64PtrOutput)
}

// AWS EBS volume type to be used for CAST provisioned nodes. One of: gp3, gp2, io1, io2
func (o NodeConfigurationEksPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationEks) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type NodeConfigurationEksTargetGroup struct {
	// AWS target group ARN for CAST provisioned nodes
	Arn string `pulumi:"arn"`
	// Port for AWS target group for CAST provisioned nodes
	Port *float64 `pulumi:"port"`
}

// NodeConfigurationEksTargetGroupInput is an input type that accepts NodeConfigurationEksTargetGroupArgs and NodeConfigurationEksTargetGroupOutput values.
// You can construct a concrete instance of `NodeConfigurationEksTargetGroupInput` via:
//
//	NodeConfigurationEksTargetGroupArgs{...}
type NodeConfigurationEksTargetGroupInput interface {
	pulumi.Input

	ToNodeConfigurationEksTargetGroupOutput() NodeConfigurationEksTargetGroupOutput
	ToNodeConfigurationEksTargetGroupOutputWithContext(context.Context) NodeConfigurationEksTargetGroupOutput
}

type NodeConfigurationEksTargetGroupArgs struct {
	// AWS target group ARN for CAST provisioned nodes
	Arn pulumi.StringInput `pulumi:"arn"`
	// Port for AWS target group for CAST provisioned nodes
	Port pulumi.Float64PtrInput `pulumi:"port"`
}

func (NodeConfigurationEksTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationEksTargetGroup)(nil)).Elem()
}

func (i NodeConfigurationEksTargetGroupArgs) ToNodeConfigurationEksTargetGroupOutput() NodeConfigurationEksTargetGroupOutput {
	return i.ToNodeConfigurationEksTargetGroupOutputWithContext(context.Background())
}

func (i NodeConfigurationEksTargetGroupArgs) ToNodeConfigurationEksTargetGroupOutputWithContext(ctx context.Context) NodeConfigurationEksTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksTargetGroupOutput)
}

// NodeConfigurationEksTargetGroupArrayInput is an input type that accepts NodeConfigurationEksTargetGroupArray and NodeConfigurationEksTargetGroupArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationEksTargetGroupArrayInput` via:
//
//	NodeConfigurationEksTargetGroupArray{ NodeConfigurationEksTargetGroupArgs{...} }
type NodeConfigurationEksTargetGroupArrayInput interface {
	pulumi.Input

	ToNodeConfigurationEksTargetGroupArrayOutput() NodeConfigurationEksTargetGroupArrayOutput
	ToNodeConfigurationEksTargetGroupArrayOutputWithContext(context.Context) NodeConfigurationEksTargetGroupArrayOutput
}

type NodeConfigurationEksTargetGroupArray []NodeConfigurationEksTargetGroupInput

func (NodeConfigurationEksTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationEksTargetGroup)(nil)).Elem()
}

func (i NodeConfigurationEksTargetGroupArray) ToNodeConfigurationEksTargetGroupArrayOutput() NodeConfigurationEksTargetGroupArrayOutput {
	return i.ToNodeConfigurationEksTargetGroupArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationEksTargetGroupArray) ToNodeConfigurationEksTargetGroupArrayOutputWithContext(ctx context.Context) NodeConfigurationEksTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationEksTargetGroupArrayOutput)
}

type NodeConfigurationEksTargetGroupOutput struct{ *pulumi.OutputState }

func (NodeConfigurationEksTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationEksTargetGroup)(nil)).Elem()
}

func (o NodeConfigurationEksTargetGroupOutput) ToNodeConfigurationEksTargetGroupOutput() NodeConfigurationEksTargetGroupOutput {
	return o
}

func (o NodeConfigurationEksTargetGroupOutput) ToNodeConfigurationEksTargetGroupOutputWithContext(ctx context.Context) NodeConfigurationEksTargetGroupOutput {
	return o
}

// AWS target group ARN for CAST provisioned nodes
func (o NodeConfigurationEksTargetGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationEksTargetGroup) string { return v.Arn }).(pulumi.StringOutput)
}

// Port for AWS target group for CAST provisioned nodes
func (o NodeConfigurationEksTargetGroupOutput) Port() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeConfigurationEksTargetGroup) *float64 { return v.Port }).(pulumi.Float64PtrOutput)
}

type NodeConfigurationEksTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationEksTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationEksTargetGroup)(nil)).Elem()
}

func (o NodeConfigurationEksTargetGroupArrayOutput) ToNodeConfigurationEksTargetGroupArrayOutput() NodeConfigurationEksTargetGroupArrayOutput {
	return o
}

func (o NodeConfigurationEksTargetGroupArrayOutput) ToNodeConfigurationEksTargetGroupArrayOutputWithContext(ctx context.Context) NodeConfigurationEksTargetGroupArrayOutput {
	return o
}

func (o NodeConfigurationEksTargetGroupArrayOutput) Index(i pulumi.IntInput) NodeConfigurationEksTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationEksTargetGroup {
		return vs[0].([]NodeConfigurationEksTargetGroup)[vs[1].(int)]
	}).(NodeConfigurationEksTargetGroupOutput)
}

type NodeConfigurationGke struct {
	// Type of boot disk attached to the node. (See [disk types](https://cloud.google.com/compute/docs/disks#pdspecs)). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme
	DiskType *string `pulumi:"diskType"`
	// Loadboalancer configuration for CAST provisioned nodes
	Loadbalancers []NodeConfigurationGkeLoadbalancer `pulumi:"loadbalancers"`
	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 110
	MaxPodsPerNode *float64 `pulumi:"maxPodsPerNode"`
	// Network tags to be added on a VM. (See [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags))
	NetworkTags []string `pulumi:"networkTags"`
	// Use ephemeral storage local SSD. Defaults to false
	UseEphemeralStorageLocalSsd *bool `pulumi:"useEphemeralStorageLocalSsd"`
	// List of preferred availability zones to choose from when provisioning new nodes.
	//
	// Deprecated: Deprecated
	Zones []string `pulumi:"zones"`
}

// NodeConfigurationGkeInput is an input type that accepts NodeConfigurationGkeArgs and NodeConfigurationGkeOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeInput` via:
//
//	NodeConfigurationGkeArgs{...}
type NodeConfigurationGkeInput interface {
	pulumi.Input

	ToNodeConfigurationGkeOutput() NodeConfigurationGkeOutput
	ToNodeConfigurationGkeOutputWithContext(context.Context) NodeConfigurationGkeOutput
}

type NodeConfigurationGkeArgs struct {
	// Type of boot disk attached to the node. (See [disk types](https://cloud.google.com/compute/docs/disks#pdspecs)). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	// Loadboalancer configuration for CAST provisioned nodes
	Loadbalancers NodeConfigurationGkeLoadbalancerArrayInput `pulumi:"loadbalancers"`
	// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 110
	MaxPodsPerNode pulumi.Float64PtrInput `pulumi:"maxPodsPerNode"`
	// Network tags to be added on a VM. (See [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags))
	NetworkTags pulumi.StringArrayInput `pulumi:"networkTags"`
	// Use ephemeral storage local SSD. Defaults to false
	UseEphemeralStorageLocalSsd pulumi.BoolPtrInput `pulumi:"useEphemeralStorageLocalSsd"`
	// List of preferred availability zones to choose from when provisioning new nodes.
	//
	// Deprecated: Deprecated
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (NodeConfigurationGkeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGke)(nil)).Elem()
}

func (i NodeConfigurationGkeArgs) ToNodeConfigurationGkeOutput() NodeConfigurationGkeOutput {
	return i.ToNodeConfigurationGkeOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeArgs) ToNodeConfigurationGkeOutputWithContext(ctx context.Context) NodeConfigurationGkeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeOutput)
}

func (i NodeConfigurationGkeArgs) ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput {
	return i.ToNodeConfigurationGkePtrOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeArgs) ToNodeConfigurationGkePtrOutputWithContext(ctx context.Context) NodeConfigurationGkePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeOutput).ToNodeConfigurationGkePtrOutputWithContext(ctx)
}

// NodeConfigurationGkePtrInput is an input type that accepts NodeConfigurationGkeArgs, NodeConfigurationGkePtr and NodeConfigurationGkePtrOutput values.
// You can construct a concrete instance of `NodeConfigurationGkePtrInput` via:
//
//	        NodeConfigurationGkeArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationGkePtrInput interface {
	pulumi.Input

	ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput
	ToNodeConfigurationGkePtrOutputWithContext(context.Context) NodeConfigurationGkePtrOutput
}

type nodeConfigurationGkePtrType NodeConfigurationGkeArgs

func NodeConfigurationGkePtr(v *NodeConfigurationGkeArgs) NodeConfigurationGkePtrInput {
	return (*nodeConfigurationGkePtrType)(v)
}

func (*nodeConfigurationGkePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationGke)(nil)).Elem()
}

func (i *nodeConfigurationGkePtrType) ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput {
	return i.ToNodeConfigurationGkePtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationGkePtrType) ToNodeConfigurationGkePtrOutputWithContext(ctx context.Context) NodeConfigurationGkePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkePtrOutput)
}

type NodeConfigurationGkeOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGke)(nil)).Elem()
}

func (o NodeConfigurationGkeOutput) ToNodeConfigurationGkeOutput() NodeConfigurationGkeOutput {
	return o
}

func (o NodeConfigurationGkeOutput) ToNodeConfigurationGkeOutputWithContext(ctx context.Context) NodeConfigurationGkeOutput {
	return o
}

func (o NodeConfigurationGkeOutput) ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput {
	return o.ToNodeConfigurationGkePtrOutputWithContext(context.Background())
}

func (o NodeConfigurationGkeOutput) ToNodeConfigurationGkePtrOutputWithContext(ctx context.Context) NodeConfigurationGkePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationGke) *NodeConfigurationGke {
		return &v
	}).(NodeConfigurationGkePtrOutput)
}

// Type of boot disk attached to the node. (See [disk types](https://cloud.google.com/compute/docs/disks#pdspecs)). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme
func (o NodeConfigurationGkeOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationGke) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

// Loadboalancer configuration for CAST provisioned nodes
func (o NodeConfigurationGkeOutput) Loadbalancers() NodeConfigurationGkeLoadbalancerArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGke) []NodeConfigurationGkeLoadbalancer { return v.Loadbalancers }).(NodeConfigurationGkeLoadbalancerArrayOutput)
}

// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 110
func (o NodeConfigurationGkeOutput) MaxPodsPerNode() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeConfigurationGke) *float64 { return v.MaxPodsPerNode }).(pulumi.Float64PtrOutput)
}

// Network tags to be added on a VM. (See [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags))
func (o NodeConfigurationGkeOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGke) []string { return v.NetworkTags }).(pulumi.StringArrayOutput)
}

// Use ephemeral storage local SSD. Defaults to false
func (o NodeConfigurationGkeOutput) UseEphemeralStorageLocalSsd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeConfigurationGke) *bool { return v.UseEphemeralStorageLocalSsd }).(pulumi.BoolPtrOutput)
}

// List of preferred availability zones to choose from when provisioning new nodes.
//
// Deprecated: Deprecated
func (o NodeConfigurationGkeOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGke) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type NodeConfigurationGkePtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationGke)(nil)).Elem()
}

func (o NodeConfigurationGkePtrOutput) ToNodeConfigurationGkePtrOutput() NodeConfigurationGkePtrOutput {
	return o
}

func (o NodeConfigurationGkePtrOutput) ToNodeConfigurationGkePtrOutputWithContext(ctx context.Context) NodeConfigurationGkePtrOutput {
	return o
}

func (o NodeConfigurationGkePtrOutput) Elem() NodeConfigurationGkeOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) NodeConfigurationGke {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationGke
		return ret
	}).(NodeConfigurationGkeOutput)
}

// Type of boot disk attached to the node. (See [disk types](https://cloud.google.com/compute/docs/disks#pdspecs)). One of: pd-standard, pd-balanced, pd-ssd, pd-extreme
func (o NodeConfigurationGkePtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

// Loadboalancer configuration for CAST provisioned nodes
func (o NodeConfigurationGkePtrOutput) Loadbalancers() NodeConfigurationGkeLoadbalancerArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) []NodeConfigurationGkeLoadbalancer {
		if v == nil {
			return nil
		}
		return v.Loadbalancers
	}).(NodeConfigurationGkeLoadbalancerArrayOutput)
}

// Maximum number of pods that can be run on a node, which affects how many IP addresses you will need for each node. Defaults to 110
func (o NodeConfigurationGkePtrOutput) MaxPodsPerNode() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxPodsPerNode
	}).(pulumi.Float64PtrOutput)
}

// Network tags to be added on a VM. (See [network tags](https://cloud.google.com/vpc/docs/add-remove-network-tags))
func (o NodeConfigurationGkePtrOutput) NetworkTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) []string {
		if v == nil {
			return nil
		}
		return v.NetworkTags
	}).(pulumi.StringArrayOutput)
}

// Use ephemeral storage local SSD. Defaults to false
func (o NodeConfigurationGkePtrOutput) UseEphemeralStorageLocalSsd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) *bool {
		if v == nil {
			return nil
		}
		return v.UseEphemeralStorageLocalSsd
	}).(pulumi.BoolPtrOutput)
}

// List of preferred availability zones to choose from when provisioning new nodes.
//
// Deprecated: Deprecated
func (o NodeConfigurationGkePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeConfigurationGke) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type NodeConfigurationGkeLoadbalancer struct {
	// Target backend pools configuration for CAST provisioned nodes
	TargetBackendPools []NodeConfigurationGkeLoadbalancerTargetBackendPool `pulumi:"targetBackendPools"`
	// Unmanaged instance groups configuration for CAST provisioned nodes
	UnmanagedInstanceGroups []NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup `pulumi:"unmanagedInstanceGroups"`
}

// NodeConfigurationGkeLoadbalancerInput is an input type that accepts NodeConfigurationGkeLoadbalancerArgs and NodeConfigurationGkeLoadbalancerOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerInput` via:
//
//	NodeConfigurationGkeLoadbalancerArgs{...}
type NodeConfigurationGkeLoadbalancerInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerOutput() NodeConfigurationGkeLoadbalancerOutput
	ToNodeConfigurationGkeLoadbalancerOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerOutput
}

type NodeConfigurationGkeLoadbalancerArgs struct {
	// Target backend pools configuration for CAST provisioned nodes
	TargetBackendPools NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput `pulumi:"targetBackendPools"`
	// Unmanaged instance groups configuration for CAST provisioned nodes
	UnmanagedInstanceGroups NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput `pulumi:"unmanagedInstanceGroups"`
}

func (NodeConfigurationGkeLoadbalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancer)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerArgs) ToNodeConfigurationGkeLoadbalancerOutput() NodeConfigurationGkeLoadbalancerOutput {
	return i.ToNodeConfigurationGkeLoadbalancerOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerArgs) ToNodeConfigurationGkeLoadbalancerOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerOutput)
}

// NodeConfigurationGkeLoadbalancerArrayInput is an input type that accepts NodeConfigurationGkeLoadbalancerArray and NodeConfigurationGkeLoadbalancerArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerArrayInput` via:
//
//	NodeConfigurationGkeLoadbalancerArray{ NodeConfigurationGkeLoadbalancerArgs{...} }
type NodeConfigurationGkeLoadbalancerArrayInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerArrayOutput() NodeConfigurationGkeLoadbalancerArrayOutput
	ToNodeConfigurationGkeLoadbalancerArrayOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerArrayOutput
}

type NodeConfigurationGkeLoadbalancerArray []NodeConfigurationGkeLoadbalancerInput

func (NodeConfigurationGkeLoadbalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancer)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerArray) ToNodeConfigurationGkeLoadbalancerArrayOutput() NodeConfigurationGkeLoadbalancerArrayOutput {
	return i.ToNodeConfigurationGkeLoadbalancerArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerArray) ToNodeConfigurationGkeLoadbalancerArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerArrayOutput)
}

type NodeConfigurationGkeLoadbalancerOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancer)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerOutput) ToNodeConfigurationGkeLoadbalancerOutput() NodeConfigurationGkeLoadbalancerOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerOutput) ToNodeConfigurationGkeLoadbalancerOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerOutput {
	return o
}

// Target backend pools configuration for CAST provisioned nodes
func (o NodeConfigurationGkeLoadbalancerOutput) TargetBackendPools() NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancer) []NodeConfigurationGkeLoadbalancerTargetBackendPool {
		return v.TargetBackendPools
	}).(NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput)
}

// Unmanaged instance groups configuration for CAST provisioned nodes
func (o NodeConfigurationGkeLoadbalancerOutput) UnmanagedInstanceGroups() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancer) []NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup {
		return v.UnmanagedInstanceGroups
	}).(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput)
}

type NodeConfigurationGkeLoadbalancerArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancer)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerArrayOutput) ToNodeConfigurationGkeLoadbalancerArrayOutput() NodeConfigurationGkeLoadbalancerArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerArrayOutput) ToNodeConfigurationGkeLoadbalancerArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerArrayOutput) Index(i pulumi.IntInput) NodeConfigurationGkeLoadbalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationGkeLoadbalancer {
		return vs[0].([]NodeConfigurationGkeLoadbalancer)[vs[1].(int)]
	}).(NodeConfigurationGkeLoadbalancerOutput)
}

type NodeConfigurationGkeLoadbalancerTargetBackendPool struct {
	// Name of the target group
	Name string `pulumi:"name"`
}

// NodeConfigurationGkeLoadbalancerTargetBackendPoolInput is an input type that accepts NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs and NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerTargetBackendPoolInput` via:
//
//	NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs{...}
type NodeConfigurationGkeLoadbalancerTargetBackendPoolInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput
	ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput
}

type NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs struct {
	// Name of the target group
	Name pulumi.StringInput `pulumi:"name"`
}

func (NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancerTargetBackendPool)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return i.ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput)
}

// NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput is an input type that accepts NodeConfigurationGkeLoadbalancerTargetBackendPoolArray and NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput` via:
//
//	NodeConfigurationGkeLoadbalancerTargetBackendPoolArray{ NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs{...} }
type NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput
	ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput
}

type NodeConfigurationGkeLoadbalancerTargetBackendPoolArray []NodeConfigurationGkeLoadbalancerTargetBackendPoolInput

func (NodeConfigurationGkeLoadbalancerTargetBackendPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancerTargetBackendPool)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerTargetBackendPoolArray) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return i.ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerTargetBackendPoolArray) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput)
}

type NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancerTargetBackendPool)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return o
}

// Name of the target group
func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancerTargetBackendPool) string { return v.Name }).(pulumi.StringOutput)
}

type NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancerTargetBackendPool)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput() NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput) ToNodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput) Index(i pulumi.IntInput) NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationGkeLoadbalancerTargetBackendPool {
		return vs[0].([]NodeConfigurationGkeLoadbalancerTargetBackendPool)[vs[1].(int)]
	}).(NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput)
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup struct {
	// Name of the instance group
	Name string `pulumi:"name"`
	// Zone of the instance group
	Zone string `pulumi:"zone"`
}

// NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput is an input type that accepts NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs and NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput` via:
//
//	NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs{...}
type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput
	ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs struct {
	// Name of the instance group
	Name pulumi.StringInput `pulumi:"name"`
	// Zone of the instance group
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return i.ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput)
}

// NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput is an input type that accepts NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray and NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput values.
// You can construct a concrete instance of `NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput` via:
//
//	NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray{ NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs{...} }
type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput interface {
	pulumi.Input

	ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput
	ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutputWithContext(context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray []NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput

func (NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)(nil)).Elem()
}

func (i NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return i.ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutputWithContext(context.Background())
}

func (i NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput)
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return o
}

// Name of the instance group
func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup) string { return v.Name }).(pulumi.StringOutput)
}

// Zone of the instance group
func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup) string { return v.Zone }).(pulumi.StringOutput)
}

type NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput struct{ *pulumi.OutputState }

func (NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)(nil)).Elem()
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput() NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput) ToNodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutputWithContext(ctx context.Context) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput {
	return o
}

func (o NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput) Index(i pulumi.IntInput) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup {
		return vs[0].([]NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroup)[vs[1].(int)]
	}).(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput)
}

type NodeConfigurationKops struct {
	// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey
	KeyPairId *string `pulumi:"keyPairId"`
}

// NodeConfigurationKopsInput is an input type that accepts NodeConfigurationKopsArgs and NodeConfigurationKopsOutput values.
// You can construct a concrete instance of `NodeConfigurationKopsInput` via:
//
//	NodeConfigurationKopsArgs{...}
type NodeConfigurationKopsInput interface {
	pulumi.Input

	ToNodeConfigurationKopsOutput() NodeConfigurationKopsOutput
	ToNodeConfigurationKopsOutputWithContext(context.Context) NodeConfigurationKopsOutput
}

type NodeConfigurationKopsArgs struct {
	// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey
	KeyPairId pulumi.StringPtrInput `pulumi:"keyPairId"`
}

func (NodeConfigurationKopsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationKops)(nil)).Elem()
}

func (i NodeConfigurationKopsArgs) ToNodeConfigurationKopsOutput() NodeConfigurationKopsOutput {
	return i.ToNodeConfigurationKopsOutputWithContext(context.Background())
}

func (i NodeConfigurationKopsArgs) ToNodeConfigurationKopsOutputWithContext(ctx context.Context) NodeConfigurationKopsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationKopsOutput)
}

func (i NodeConfigurationKopsArgs) ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput {
	return i.ToNodeConfigurationKopsPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationKopsArgs) ToNodeConfigurationKopsPtrOutputWithContext(ctx context.Context) NodeConfigurationKopsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationKopsOutput).ToNodeConfigurationKopsPtrOutputWithContext(ctx)
}

// NodeConfigurationKopsPtrInput is an input type that accepts NodeConfigurationKopsArgs, NodeConfigurationKopsPtr and NodeConfigurationKopsPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationKopsPtrInput` via:
//
//	        NodeConfigurationKopsArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationKopsPtrInput interface {
	pulumi.Input

	ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput
	ToNodeConfigurationKopsPtrOutputWithContext(context.Context) NodeConfigurationKopsPtrOutput
}

type nodeConfigurationKopsPtrType NodeConfigurationKopsArgs

func NodeConfigurationKopsPtr(v *NodeConfigurationKopsArgs) NodeConfigurationKopsPtrInput {
	return (*nodeConfigurationKopsPtrType)(v)
}

func (*nodeConfigurationKopsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationKops)(nil)).Elem()
}

func (i *nodeConfigurationKopsPtrType) ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput {
	return i.ToNodeConfigurationKopsPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationKopsPtrType) ToNodeConfigurationKopsPtrOutputWithContext(ctx context.Context) NodeConfigurationKopsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationKopsPtrOutput)
}

type NodeConfigurationKopsOutput struct{ *pulumi.OutputState }

func (NodeConfigurationKopsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationKops)(nil)).Elem()
}

func (o NodeConfigurationKopsOutput) ToNodeConfigurationKopsOutput() NodeConfigurationKopsOutput {
	return o
}

func (o NodeConfigurationKopsOutput) ToNodeConfigurationKopsOutputWithContext(ctx context.Context) NodeConfigurationKopsOutput {
	return o
}

func (o NodeConfigurationKopsOutput) ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput {
	return o.ToNodeConfigurationKopsPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationKopsOutput) ToNodeConfigurationKopsPtrOutputWithContext(ctx context.Context) NodeConfigurationKopsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationKops) *NodeConfigurationKops {
		return &v
	}).(NodeConfigurationKopsPtrOutput)
}

// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey
func (o NodeConfigurationKopsOutput) KeyPairId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationKops) *string { return v.KeyPairId }).(pulumi.StringPtrOutput)
}

type NodeConfigurationKopsPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationKopsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationKops)(nil)).Elem()
}

func (o NodeConfigurationKopsPtrOutput) ToNodeConfigurationKopsPtrOutput() NodeConfigurationKopsPtrOutput {
	return o
}

func (o NodeConfigurationKopsPtrOutput) ToNodeConfigurationKopsPtrOutputWithContext(ctx context.Context) NodeConfigurationKopsPtrOutput {
	return o
}

func (o NodeConfigurationKopsPtrOutput) Elem() NodeConfigurationKopsOutput {
	return o.ApplyT(func(v *NodeConfigurationKops) NodeConfigurationKops {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationKops
		return ret
	}).(NodeConfigurationKopsOutput)
}

// AWS key pair ID to be used for provisioned nodes. Has priority over sshPublicKey
func (o NodeConfigurationKopsPtrOutput) KeyPairId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationKops) *string {
		if v == nil {
			return nil
		}
		return v.KeyPairId
	}).(pulumi.StringPtrOutput)
}

type NodeConfigurationTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Read   *string `pulumi:"read"`
	Update *string `pulumi:"update"`
}

// NodeConfigurationTimeoutsInput is an input type that accepts NodeConfigurationTimeoutsArgs and NodeConfigurationTimeoutsOutput values.
// You can construct a concrete instance of `NodeConfigurationTimeoutsInput` via:
//
//	NodeConfigurationTimeoutsArgs{...}
type NodeConfigurationTimeoutsInput interface {
	pulumi.Input

	ToNodeConfigurationTimeoutsOutput() NodeConfigurationTimeoutsOutput
	ToNodeConfigurationTimeoutsOutputWithContext(context.Context) NodeConfigurationTimeoutsOutput
}

type NodeConfigurationTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Read   pulumi.StringPtrInput `pulumi:"read"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (NodeConfigurationTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationTimeouts)(nil)).Elem()
}

func (i NodeConfigurationTimeoutsArgs) ToNodeConfigurationTimeoutsOutput() NodeConfigurationTimeoutsOutput {
	return i.ToNodeConfigurationTimeoutsOutputWithContext(context.Background())
}

func (i NodeConfigurationTimeoutsArgs) ToNodeConfigurationTimeoutsOutputWithContext(ctx context.Context) NodeConfigurationTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationTimeoutsOutput)
}

func (i NodeConfigurationTimeoutsArgs) ToNodeConfigurationTimeoutsPtrOutput() NodeConfigurationTimeoutsPtrOutput {
	return i.ToNodeConfigurationTimeoutsPtrOutputWithContext(context.Background())
}

func (i NodeConfigurationTimeoutsArgs) ToNodeConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) NodeConfigurationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationTimeoutsOutput).ToNodeConfigurationTimeoutsPtrOutputWithContext(ctx)
}

// NodeConfigurationTimeoutsPtrInput is an input type that accepts NodeConfigurationTimeoutsArgs, NodeConfigurationTimeoutsPtr and NodeConfigurationTimeoutsPtrOutput values.
// You can construct a concrete instance of `NodeConfigurationTimeoutsPtrInput` via:
//
//	        NodeConfigurationTimeoutsArgs{...}
//
//	or:
//
//	        nil
type NodeConfigurationTimeoutsPtrInput interface {
	pulumi.Input

	ToNodeConfigurationTimeoutsPtrOutput() NodeConfigurationTimeoutsPtrOutput
	ToNodeConfigurationTimeoutsPtrOutputWithContext(context.Context) NodeConfigurationTimeoutsPtrOutput
}

type nodeConfigurationTimeoutsPtrType NodeConfigurationTimeoutsArgs

func NodeConfigurationTimeoutsPtr(v *NodeConfigurationTimeoutsArgs) NodeConfigurationTimeoutsPtrInput {
	return (*nodeConfigurationTimeoutsPtrType)(v)
}

func (*nodeConfigurationTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationTimeouts)(nil)).Elem()
}

func (i *nodeConfigurationTimeoutsPtrType) ToNodeConfigurationTimeoutsPtrOutput() NodeConfigurationTimeoutsPtrOutput {
	return i.ToNodeConfigurationTimeoutsPtrOutputWithContext(context.Background())
}

func (i *nodeConfigurationTimeoutsPtrType) ToNodeConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) NodeConfigurationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeConfigurationTimeoutsPtrOutput)
}

type NodeConfigurationTimeoutsOutput struct{ *pulumi.OutputState }

func (NodeConfigurationTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeConfigurationTimeouts)(nil)).Elem()
}

func (o NodeConfigurationTimeoutsOutput) ToNodeConfigurationTimeoutsOutput() NodeConfigurationTimeoutsOutput {
	return o
}

func (o NodeConfigurationTimeoutsOutput) ToNodeConfigurationTimeoutsOutputWithContext(ctx context.Context) NodeConfigurationTimeoutsOutput {
	return o
}

func (o NodeConfigurationTimeoutsOutput) ToNodeConfigurationTimeoutsPtrOutput() NodeConfigurationTimeoutsPtrOutput {
	return o.ToNodeConfigurationTimeoutsPtrOutputWithContext(context.Background())
}

func (o NodeConfigurationTimeoutsOutput) ToNodeConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) NodeConfigurationTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeConfigurationTimeouts) *NodeConfigurationTimeouts {
		return &v
	}).(NodeConfigurationTimeoutsPtrOutput)
}

func (o NodeConfigurationTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeConfigurationTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type NodeConfigurationTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (NodeConfigurationTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeConfigurationTimeouts)(nil)).Elem()
}

func (o NodeConfigurationTimeoutsPtrOutput) ToNodeConfigurationTimeoutsPtrOutput() NodeConfigurationTimeoutsPtrOutput {
	return o
}

func (o NodeConfigurationTimeoutsPtrOutput) ToNodeConfigurationTimeoutsPtrOutputWithContext(ctx context.Context) NodeConfigurationTimeoutsPtrOutput {
	return o
}

func (o NodeConfigurationTimeoutsPtrOutput) Elem() NodeConfigurationTimeoutsOutput {
	return o.ApplyT(func(v *NodeConfigurationTimeouts) NodeConfigurationTimeouts {
		if v != nil {
			return *v
		}
		var ret NodeConfigurationTimeouts
		return ret
	}).(NodeConfigurationTimeoutsOutput)
}

func (o NodeConfigurationTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func (o NodeConfigurationTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeConfigurationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type NodeTemplateConstraints struct {
	// Priority ordering of architectures, specifying no priority will pick cheapest. Allowed values: amd64, arm64.
	ArchitecturePriorities []string `pulumi:"architecturePriorities"`
	// List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.
	Architectures []string `pulumi:"architectures"`
	// The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
	Azs []string `pulumi:"azs"`
	// Will include burstable instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or ``.
	BurstableInstances *string `pulumi:"burstableInstances"`
	// Compute optimized instance constraint (deprecated).
	ComputeOptimized *bool `pulumi:"computeOptimized"`
	// Will only include compute optimized nodes when enabled and exclude compute optimized nodes when disabled. Empty value won't have effect on instances filter. Supported values: `enabled`, `disabled` or empty string.
	ComputeOptimizedState *string `pulumi:"computeOptimizedState"`
	// List of acceptable CPU manufacturers. Allowed values: AMD, AMPERE, APPLE, AWS, INTEL.
	CpuManufacturers []string                                `pulumi:"cpuManufacturers"`
	CustomPriorities []NodeTemplateConstraintsCustomPriority `pulumi:"customPriorities"`
	// Will include customer specific (preview) instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or ``.
	CustomerSpecific *string `pulumi:"customerSpecific"`
	// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
	//  feature is only available for GCP clusters and sole tenancy nodes with local
	//  SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
	//  type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
	//  Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
	//  the sole tenancy or dedicated node (example: setting min CPU to 16).
	DedicatedNodeAffinities []NodeTemplateConstraintsDedicatedNodeAffinity `pulumi:"dedicatedNodeAffinities"`
	// Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
	EnableSpotDiversity *bool `pulumi:"enableSpotDiversity"`
	// Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.
	FallbackRestoreRateSeconds *float64                                 `pulumi:"fallbackRestoreRateSeconds"`
	Gpu                        *NodeTemplateConstraintsGpu              `pulumi:"gpu"`
	InstanceFamilies           *NodeTemplateConstraintsInstanceFamilies `pulumi:"instanceFamilies"`
	// GPU instance constraint - will only pick nodes with GPU if true
	IsGpuOnly *bool `pulumi:"isGpuOnly"`
	// Max CPU cores per node.
	MaxCpu *float64 `pulumi:"maxCpu"`
	// Max Memory (Mib) per node.
	MaxMemory *float64 `pulumi:"maxMemory"`
	// Min CPU cores per node.
	MinCpu *float64 `pulumi:"minCpu"`
	// Min Memory (Mib) per node.
	MinMemory *float64 `pulumi:"minMemory"`
	// Should include on-demand instances in the considered pool.
	OnDemand *bool `pulumi:"onDemand"`
	// List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.
	Os             []string                               `pulumi:"os"`
	ResourceLimits *NodeTemplateConstraintsResourceLimits `pulumi:"resourceLimits"`
	// Should include spot instances in the considered pool.
	Spot *bool `pulumi:"spot"`
	// Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
	SpotDiversityPriceIncreaseLimitPercent *float64 `pulumi:"spotDiversityPriceIncreaseLimitPercent"`
	// Enable/disable spot interruption predictions.
	SpotInterruptionPredictionsEnabled *bool `pulumi:"spotInterruptionPredictionsEnabled"`
	// Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
	SpotInterruptionPredictionsType *string `pulumi:"spotInterruptionPredictionsType"`
	// Storage optimized instance constraint (deprecated).
	StorageOptimized *bool `pulumi:"storageOptimized"`
	// Storage optimized instance constraint - will only pick storage optimized nodes if enabled and won't pick if disabled. Empty value will have no effect. Supported values: `enabled`, `disabled` or empty string.
	StorageOptimizedState *string `pulumi:"storageOptimizedState"`
	// Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
	UseSpotFallbacks *bool `pulumi:"useSpotFallbacks"`
}

// NodeTemplateConstraintsInput is an input type that accepts NodeTemplateConstraintsArgs and NodeTemplateConstraintsOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsInput` via:
//
//	NodeTemplateConstraintsArgs{...}
type NodeTemplateConstraintsInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsOutput() NodeTemplateConstraintsOutput
	ToNodeTemplateConstraintsOutputWithContext(context.Context) NodeTemplateConstraintsOutput
}

type NodeTemplateConstraintsArgs struct {
	// Priority ordering of architectures, specifying no priority will pick cheapest. Allowed values: amd64, arm64.
	ArchitecturePriorities pulumi.StringArrayInput `pulumi:"architecturePriorities"`
	// List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.
	Architectures pulumi.StringArrayInput `pulumi:"architectures"`
	// The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
	Azs pulumi.StringArrayInput `pulumi:"azs"`
	// Will include burstable instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or ``.
	BurstableInstances pulumi.StringPtrInput `pulumi:"burstableInstances"`
	// Compute optimized instance constraint (deprecated).
	ComputeOptimized pulumi.BoolPtrInput `pulumi:"computeOptimized"`
	// Will only include compute optimized nodes when enabled and exclude compute optimized nodes when disabled. Empty value won't have effect on instances filter. Supported values: `enabled`, `disabled` or empty string.
	ComputeOptimizedState pulumi.StringPtrInput `pulumi:"computeOptimizedState"`
	// List of acceptable CPU manufacturers. Allowed values: AMD, AMPERE, APPLE, AWS, INTEL.
	CpuManufacturers pulumi.StringArrayInput                         `pulumi:"cpuManufacturers"`
	CustomPriorities NodeTemplateConstraintsCustomPriorityArrayInput `pulumi:"customPriorities"`
	// Will include customer specific (preview) instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or ``.
	CustomerSpecific pulumi.StringPtrInput `pulumi:"customerSpecific"`
	// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
	//  feature is only available for GCP clusters and sole tenancy nodes with local
	//  SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
	//  type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
	//  Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
	//  the sole tenancy or dedicated node (example: setting min CPU to 16).
	DedicatedNodeAffinities NodeTemplateConstraintsDedicatedNodeAffinityArrayInput `pulumi:"dedicatedNodeAffinities"`
	// Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
	EnableSpotDiversity pulumi.BoolPtrInput `pulumi:"enableSpotDiversity"`
	// Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.
	FallbackRestoreRateSeconds pulumi.Float64PtrInput                          `pulumi:"fallbackRestoreRateSeconds"`
	Gpu                        NodeTemplateConstraintsGpuPtrInput              `pulumi:"gpu"`
	InstanceFamilies           NodeTemplateConstraintsInstanceFamiliesPtrInput `pulumi:"instanceFamilies"`
	// GPU instance constraint - will only pick nodes with GPU if true
	IsGpuOnly pulumi.BoolPtrInput `pulumi:"isGpuOnly"`
	// Max CPU cores per node.
	MaxCpu pulumi.Float64PtrInput `pulumi:"maxCpu"`
	// Max Memory (Mib) per node.
	MaxMemory pulumi.Float64PtrInput `pulumi:"maxMemory"`
	// Min CPU cores per node.
	MinCpu pulumi.Float64PtrInput `pulumi:"minCpu"`
	// Min Memory (Mib) per node.
	MinMemory pulumi.Float64PtrInput `pulumi:"minMemory"`
	// Should include on-demand instances in the considered pool.
	OnDemand pulumi.BoolPtrInput `pulumi:"onDemand"`
	// List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.
	Os             pulumi.StringArrayInput                       `pulumi:"os"`
	ResourceLimits NodeTemplateConstraintsResourceLimitsPtrInput `pulumi:"resourceLimits"`
	// Should include spot instances in the considered pool.
	Spot pulumi.BoolPtrInput `pulumi:"spot"`
	// Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
	SpotDiversityPriceIncreaseLimitPercent pulumi.Float64PtrInput `pulumi:"spotDiversityPriceIncreaseLimitPercent"`
	// Enable/disable spot interruption predictions.
	SpotInterruptionPredictionsEnabled pulumi.BoolPtrInput `pulumi:"spotInterruptionPredictionsEnabled"`
	// Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
	SpotInterruptionPredictionsType pulumi.StringPtrInput `pulumi:"spotInterruptionPredictionsType"`
	// Storage optimized instance constraint (deprecated).
	StorageOptimized pulumi.BoolPtrInput `pulumi:"storageOptimized"`
	// Storage optimized instance constraint - will only pick storage optimized nodes if enabled and won't pick if disabled. Empty value will have no effect. Supported values: `enabled`, `disabled` or empty string.
	StorageOptimizedState pulumi.StringPtrInput `pulumi:"storageOptimizedState"`
	// Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
	UseSpotFallbacks pulumi.BoolPtrInput `pulumi:"useSpotFallbacks"`
}

func (NodeTemplateConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraints)(nil)).Elem()
}

func (i NodeTemplateConstraintsArgs) ToNodeTemplateConstraintsOutput() NodeTemplateConstraintsOutput {
	return i.ToNodeTemplateConstraintsOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsArgs) ToNodeTemplateConstraintsOutputWithContext(ctx context.Context) NodeTemplateConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsOutput)
}

func (i NodeTemplateConstraintsArgs) ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput {
	return i.ToNodeTemplateConstraintsPtrOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsArgs) ToNodeTemplateConstraintsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsOutput).ToNodeTemplateConstraintsPtrOutputWithContext(ctx)
}

// NodeTemplateConstraintsPtrInput is an input type that accepts NodeTemplateConstraintsArgs, NodeTemplateConstraintsPtr and NodeTemplateConstraintsPtrOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsPtrInput` via:
//
//	        NodeTemplateConstraintsArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateConstraintsPtrInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput
	ToNodeTemplateConstraintsPtrOutputWithContext(context.Context) NodeTemplateConstraintsPtrOutput
}

type nodeTemplateConstraintsPtrType NodeTemplateConstraintsArgs

func NodeTemplateConstraintsPtr(v *NodeTemplateConstraintsArgs) NodeTemplateConstraintsPtrInput {
	return (*nodeTemplateConstraintsPtrType)(v)
}

func (*nodeTemplateConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraints)(nil)).Elem()
}

func (i *nodeTemplateConstraintsPtrType) ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput {
	return i.ToNodeTemplateConstraintsPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateConstraintsPtrType) ToNodeTemplateConstraintsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsPtrOutput)
}

type NodeTemplateConstraintsOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraints)(nil)).Elem()
}

func (o NodeTemplateConstraintsOutput) ToNodeTemplateConstraintsOutput() NodeTemplateConstraintsOutput {
	return o
}

func (o NodeTemplateConstraintsOutput) ToNodeTemplateConstraintsOutputWithContext(ctx context.Context) NodeTemplateConstraintsOutput {
	return o
}

func (o NodeTemplateConstraintsOutput) ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput {
	return o.ToNodeTemplateConstraintsPtrOutputWithContext(context.Background())
}

func (o NodeTemplateConstraintsOutput) ToNodeTemplateConstraintsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateConstraints) *NodeTemplateConstraints {
		return &v
	}).(NodeTemplateConstraintsPtrOutput)
}

// Priority ordering of architectures, specifying no priority will pick cheapest. Allowed values: amd64, arm64.
func (o NodeTemplateConstraintsOutput) ArchitecturePriorities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.ArchitecturePriorities }).(pulumi.StringArrayOutput)
}

// List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.
func (o NodeTemplateConstraintsOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.Architectures }).(pulumi.StringArrayOutput)
}

// The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
func (o NodeTemplateConstraintsOutput) Azs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.Azs }).(pulumi.StringArrayOutput)
}

// Will include burstable instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or “.
func (o NodeTemplateConstraintsOutput) BurstableInstances() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.BurstableInstances }).(pulumi.StringPtrOutput)
}

// Compute optimized instance constraint (deprecated).
func (o NodeTemplateConstraintsOutput) ComputeOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.ComputeOptimized }).(pulumi.BoolPtrOutput)
}

// Will only include compute optimized nodes when enabled and exclude compute optimized nodes when disabled. Empty value won't have effect on instances filter. Supported values: `enabled`, `disabled` or empty string.
func (o NodeTemplateConstraintsOutput) ComputeOptimizedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.ComputeOptimizedState }).(pulumi.StringPtrOutput)
}

// List of acceptable CPU manufacturers. Allowed values: AMD, AMPERE, APPLE, AWS, INTEL.
func (o NodeTemplateConstraintsOutput) CpuManufacturers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.CpuManufacturers }).(pulumi.StringArrayOutput)
}

func (o NodeTemplateConstraintsOutput) CustomPriorities() NodeTemplateConstraintsCustomPriorityArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []NodeTemplateConstraintsCustomPriority { return v.CustomPriorities }).(NodeTemplateConstraintsCustomPriorityArrayOutput)
}

// Will include customer specific (preview) instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or “.
func (o NodeTemplateConstraintsOutput) CustomerSpecific() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.CustomerSpecific }).(pulumi.StringPtrOutput)
}

// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
//
//	feature is only available for GCP clusters and sole tenancy nodes with local
//	SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
//	type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
//	Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
//	the sole tenancy or dedicated node (example: setting min CPU to 16).
func (o NodeTemplateConstraintsOutput) DedicatedNodeAffinities() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []NodeTemplateConstraintsDedicatedNodeAffinity {
		return v.DedicatedNodeAffinities
	}).(NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput)
}

// Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
func (o NodeTemplateConstraintsOutput) EnableSpotDiversity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.EnableSpotDiversity }).(pulumi.BoolPtrOutput)
}

// Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.
func (o NodeTemplateConstraintsOutput) FallbackRestoreRateSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *float64 { return v.FallbackRestoreRateSeconds }).(pulumi.Float64PtrOutput)
}

func (o NodeTemplateConstraintsOutput) Gpu() NodeTemplateConstraintsGpuPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *NodeTemplateConstraintsGpu { return v.Gpu }).(NodeTemplateConstraintsGpuPtrOutput)
}

func (o NodeTemplateConstraintsOutput) InstanceFamilies() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *NodeTemplateConstraintsInstanceFamilies { return v.InstanceFamilies }).(NodeTemplateConstraintsInstanceFamiliesPtrOutput)
}

// GPU instance constraint - will only pick nodes with GPU if true
func (o NodeTemplateConstraintsOutput) IsGpuOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.IsGpuOnly }).(pulumi.BoolPtrOutput)
}

// Max CPU cores per node.
func (o NodeTemplateConstraintsOutput) MaxCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *float64 { return v.MaxCpu }).(pulumi.Float64PtrOutput)
}

// Max Memory (Mib) per node.
func (o NodeTemplateConstraintsOutput) MaxMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *float64 { return v.MaxMemory }).(pulumi.Float64PtrOutput)
}

// Min CPU cores per node.
func (o NodeTemplateConstraintsOutput) MinCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *float64 { return v.MinCpu }).(pulumi.Float64PtrOutput)
}

// Min Memory (Mib) per node.
func (o NodeTemplateConstraintsOutput) MinMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *float64 { return v.MinMemory }).(pulumi.Float64PtrOutput)
}

// Should include on-demand instances in the considered pool.
func (o NodeTemplateConstraintsOutput) OnDemand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.OnDemand }).(pulumi.BoolPtrOutput)
}

// List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.
func (o NodeTemplateConstraintsOutput) Os() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) []string { return v.Os }).(pulumi.StringArrayOutput)
}

func (o NodeTemplateConstraintsOutput) ResourceLimits() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *NodeTemplateConstraintsResourceLimits { return v.ResourceLimits }).(NodeTemplateConstraintsResourceLimitsPtrOutput)
}

// Should include spot instances in the considered pool.
func (o NodeTemplateConstraintsOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.Spot }).(pulumi.BoolPtrOutput)
}

// Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
func (o NodeTemplateConstraintsOutput) SpotDiversityPriceIncreaseLimitPercent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *float64 { return v.SpotDiversityPriceIncreaseLimitPercent }).(pulumi.Float64PtrOutput)
}

// Enable/disable spot interruption predictions.
func (o NodeTemplateConstraintsOutput) SpotInterruptionPredictionsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.SpotInterruptionPredictionsEnabled }).(pulumi.BoolPtrOutput)
}

// Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
func (o NodeTemplateConstraintsOutput) SpotInterruptionPredictionsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.SpotInterruptionPredictionsType }).(pulumi.StringPtrOutput)
}

// Storage optimized instance constraint (deprecated).
func (o NodeTemplateConstraintsOutput) StorageOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.StorageOptimized }).(pulumi.BoolPtrOutput)
}

// Storage optimized instance constraint - will only pick storage optimized nodes if enabled and won't pick if disabled. Empty value will have no effect. Supported values: `enabled`, `disabled` or empty string.
func (o NodeTemplateConstraintsOutput) StorageOptimizedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *string { return v.StorageOptimizedState }).(pulumi.StringPtrOutput)
}

// Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
func (o NodeTemplateConstraintsOutput) UseSpotFallbacks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraints) *bool { return v.UseSpotFallbacks }).(pulumi.BoolPtrOutput)
}

type NodeTemplateConstraintsPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraints)(nil)).Elem()
}

func (o NodeTemplateConstraintsPtrOutput) ToNodeTemplateConstraintsPtrOutput() NodeTemplateConstraintsPtrOutput {
	return o
}

func (o NodeTemplateConstraintsPtrOutput) ToNodeTemplateConstraintsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsPtrOutput {
	return o
}

func (o NodeTemplateConstraintsPtrOutput) Elem() NodeTemplateConstraintsOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) NodeTemplateConstraints {
		if v != nil {
			return *v
		}
		var ret NodeTemplateConstraints
		return ret
	}).(NodeTemplateConstraintsOutput)
}

// Priority ordering of architectures, specifying no priority will pick cheapest. Allowed values: amd64, arm64.
func (o NodeTemplateConstraintsPtrOutput) ArchitecturePriorities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.ArchitecturePriorities
	}).(pulumi.StringArrayOutput)
}

// List of acceptable instance CPU architectures, the default is amd64. Allowed values: amd64, arm64.
func (o NodeTemplateConstraintsPtrOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.Architectures
	}).(pulumi.StringArrayOutput)
}

// The list of AZ names to consider for the node template, if empty or not set all AZs are considered.
func (o NodeTemplateConstraintsPtrOutput) Azs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.Azs
	}).(pulumi.StringArrayOutput)
}

// Will include burstable instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or “.
func (o NodeTemplateConstraintsPtrOutput) BurstableInstances() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.BurstableInstances
	}).(pulumi.StringPtrOutput)
}

// Compute optimized instance constraint (deprecated).
func (o NodeTemplateConstraintsPtrOutput) ComputeOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.ComputeOptimized
	}).(pulumi.BoolPtrOutput)
}

// Will only include compute optimized nodes when enabled and exclude compute optimized nodes when disabled. Empty value won't have effect on instances filter. Supported values: `enabled`, `disabled` or empty string.
func (o NodeTemplateConstraintsPtrOutput) ComputeOptimizedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.ComputeOptimizedState
	}).(pulumi.StringPtrOutput)
}

// List of acceptable CPU manufacturers. Allowed values: AMD, AMPERE, APPLE, AWS, INTEL.
func (o NodeTemplateConstraintsPtrOutput) CpuManufacturers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.CpuManufacturers
	}).(pulumi.StringArrayOutput)
}

func (o NodeTemplateConstraintsPtrOutput) CustomPriorities() NodeTemplateConstraintsCustomPriorityArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []NodeTemplateConstraintsCustomPriority {
		if v == nil {
			return nil
		}
		return v.CustomPriorities
	}).(NodeTemplateConstraintsCustomPriorityArrayOutput)
}

// Will include customer specific (preview) instances when enabled otherwise they will be excluded. Supported values: `enabled`, `disabled` or “.
func (o NodeTemplateConstraintsPtrOutput) CustomerSpecific() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.CustomerSpecific
	}).(pulumi.StringPtrOutput)
}

// Dedicated node affinity - creates preference for instances to be created on sole tenancy or dedicated nodes. This
//
//	feature is only available for GCP clusters and sole tenancy nodes with local
//	SSDs or GPUs are not supported. If the sole tenancy or dedicated nodes don't have capacity for selected instance
//	type, the Autoscaler will fall back to multi-tenant instance types available for this Node Template.
//	Other instance constraints are applied when the Autoscaler picks available instance types that can be created on
//	the sole tenancy or dedicated node (example: setting min CPU to 16).
func (o NodeTemplateConstraintsPtrOutput) DedicatedNodeAffinities() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []NodeTemplateConstraintsDedicatedNodeAffinity {
		if v == nil {
			return nil
		}
		return v.DedicatedNodeAffinities
	}).(NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput)
}

// Enable/disable spot diversity policy. When enabled, autoscaler will try to balance between diverse and cost optimal instance types.
func (o NodeTemplateConstraintsPtrOutput) EnableSpotDiversity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.EnableSpotDiversity
	}).(pulumi.BoolPtrOutput)
}

// Fallback restore rate in seconds: defines how much time should pass before spot fallback should be attempted to be restored to real spot.
func (o NodeTemplateConstraintsPtrOutput) FallbackRestoreRateSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.FallbackRestoreRateSeconds
	}).(pulumi.Float64PtrOutput)
}

func (o NodeTemplateConstraintsPtrOutput) Gpu() NodeTemplateConstraintsGpuPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *NodeTemplateConstraintsGpu {
		if v == nil {
			return nil
		}
		return v.Gpu
	}).(NodeTemplateConstraintsGpuPtrOutput)
}

func (o NodeTemplateConstraintsPtrOutput) InstanceFamilies() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *NodeTemplateConstraintsInstanceFamilies {
		if v == nil {
			return nil
		}
		return v.InstanceFamilies
	}).(NodeTemplateConstraintsInstanceFamiliesPtrOutput)
}

// GPU instance constraint - will only pick nodes with GPU if true
func (o NodeTemplateConstraintsPtrOutput) IsGpuOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.IsGpuOnly
	}).(pulumi.BoolPtrOutput)
}

// Max CPU cores per node.
func (o NodeTemplateConstraintsPtrOutput) MaxCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxCpu
	}).(pulumi.Float64PtrOutput)
}

// Max Memory (Mib) per node.
func (o NodeTemplateConstraintsPtrOutput) MaxMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxMemory
	}).(pulumi.Float64PtrOutput)
}

// Min CPU cores per node.
func (o NodeTemplateConstraintsPtrOutput) MinCpu() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.MinCpu
	}).(pulumi.Float64PtrOutput)
}

// Min Memory (Mib) per node.
func (o NodeTemplateConstraintsPtrOutput) MinMemory() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.MinMemory
	}).(pulumi.Float64PtrOutput)
}

// Should include on-demand instances in the considered pool.
func (o NodeTemplateConstraintsPtrOutput) OnDemand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.OnDemand
	}).(pulumi.BoolPtrOutput)
}

// List of acceptable instance Operating Systems, the default is linux. Allowed values: linux, windows.
func (o NodeTemplateConstraintsPtrOutput) Os() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) []string {
		if v == nil {
			return nil
		}
		return v.Os
	}).(pulumi.StringArrayOutput)
}

func (o NodeTemplateConstraintsPtrOutput) ResourceLimits() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *NodeTemplateConstraintsResourceLimits {
		if v == nil {
			return nil
		}
		return v.ResourceLimits
	}).(NodeTemplateConstraintsResourceLimitsPtrOutput)
}

// Should include spot instances in the considered pool.
func (o NodeTemplateConstraintsPtrOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.Spot
	}).(pulumi.BoolPtrOutput)
}

// Allowed node configuration price increase when diversifying instance types. E.g. if the value is 10%, then the overall price of diversified instance types can be 10% higher than the price of the optimal configuration.
func (o NodeTemplateConstraintsPtrOutput) SpotDiversityPriceIncreaseLimitPercent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *float64 {
		if v == nil {
			return nil
		}
		return v.SpotDiversityPriceIncreaseLimitPercent
	}).(pulumi.Float64PtrOutput)
}

// Enable/disable spot interruption predictions.
func (o NodeTemplateConstraintsPtrOutput) SpotInterruptionPredictionsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.SpotInterruptionPredictionsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Spot interruption predictions type. Can be either "aws-rebalance-recommendations" or "interruption-predictions".
func (o NodeTemplateConstraintsPtrOutput) SpotInterruptionPredictionsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.SpotInterruptionPredictionsType
	}).(pulumi.StringPtrOutput)
}

// Storage optimized instance constraint (deprecated).
func (o NodeTemplateConstraintsPtrOutput) StorageOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.StorageOptimized
	}).(pulumi.BoolPtrOutput)
}

// Storage optimized instance constraint - will only pick storage optimized nodes if enabled and won't pick if disabled. Empty value will have no effect. Supported values: `enabled`, `disabled` or empty string.
func (o NodeTemplateConstraintsPtrOutput) StorageOptimizedState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *string {
		if v == nil {
			return nil
		}
		return v.StorageOptimizedState
	}).(pulumi.StringPtrOutput)
}

// Spot instance fallback constraint - when true, on-demand instances will be created, when spots are unavailable.
func (o NodeTemplateConstraintsPtrOutput) UseSpotFallbacks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraints) *bool {
		if v == nil {
			return nil
		}
		return v.UseSpotFallbacks
	}).(pulumi.BoolPtrOutput)
}

type NodeTemplateConstraintsCustomPriority struct {
	// Instance families to prioritize in this tier.
	InstanceFamilies []string `pulumi:"instanceFamilies"`
	// If true, this tier will apply to on-demand instances.
	OnDemand *bool `pulumi:"onDemand"`
	// If true, this tier will apply to spot instances.
	Spot *bool `pulumi:"spot"`
}

// NodeTemplateConstraintsCustomPriorityInput is an input type that accepts NodeTemplateConstraintsCustomPriorityArgs and NodeTemplateConstraintsCustomPriorityOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsCustomPriorityInput` via:
//
//	NodeTemplateConstraintsCustomPriorityArgs{...}
type NodeTemplateConstraintsCustomPriorityInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsCustomPriorityOutput() NodeTemplateConstraintsCustomPriorityOutput
	ToNodeTemplateConstraintsCustomPriorityOutputWithContext(context.Context) NodeTemplateConstraintsCustomPriorityOutput
}

type NodeTemplateConstraintsCustomPriorityArgs struct {
	// Instance families to prioritize in this tier.
	InstanceFamilies pulumi.StringArrayInput `pulumi:"instanceFamilies"`
	// If true, this tier will apply to on-demand instances.
	OnDemand pulumi.BoolPtrInput `pulumi:"onDemand"`
	// If true, this tier will apply to spot instances.
	Spot pulumi.BoolPtrInput `pulumi:"spot"`
}

func (NodeTemplateConstraintsCustomPriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsCustomPriority)(nil)).Elem()
}

func (i NodeTemplateConstraintsCustomPriorityArgs) ToNodeTemplateConstraintsCustomPriorityOutput() NodeTemplateConstraintsCustomPriorityOutput {
	return i.ToNodeTemplateConstraintsCustomPriorityOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsCustomPriorityArgs) ToNodeTemplateConstraintsCustomPriorityOutputWithContext(ctx context.Context) NodeTemplateConstraintsCustomPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsCustomPriorityOutput)
}

// NodeTemplateConstraintsCustomPriorityArrayInput is an input type that accepts NodeTemplateConstraintsCustomPriorityArray and NodeTemplateConstraintsCustomPriorityArrayOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsCustomPriorityArrayInput` via:
//
//	NodeTemplateConstraintsCustomPriorityArray{ NodeTemplateConstraintsCustomPriorityArgs{...} }
type NodeTemplateConstraintsCustomPriorityArrayInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsCustomPriorityArrayOutput() NodeTemplateConstraintsCustomPriorityArrayOutput
	ToNodeTemplateConstraintsCustomPriorityArrayOutputWithContext(context.Context) NodeTemplateConstraintsCustomPriorityArrayOutput
}

type NodeTemplateConstraintsCustomPriorityArray []NodeTemplateConstraintsCustomPriorityInput

func (NodeTemplateConstraintsCustomPriorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsCustomPriority)(nil)).Elem()
}

func (i NodeTemplateConstraintsCustomPriorityArray) ToNodeTemplateConstraintsCustomPriorityArrayOutput() NodeTemplateConstraintsCustomPriorityArrayOutput {
	return i.ToNodeTemplateConstraintsCustomPriorityArrayOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsCustomPriorityArray) ToNodeTemplateConstraintsCustomPriorityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsCustomPriorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsCustomPriorityArrayOutput)
}

type NodeTemplateConstraintsCustomPriorityOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsCustomPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsCustomPriority)(nil)).Elem()
}

func (o NodeTemplateConstraintsCustomPriorityOutput) ToNodeTemplateConstraintsCustomPriorityOutput() NodeTemplateConstraintsCustomPriorityOutput {
	return o
}

func (o NodeTemplateConstraintsCustomPriorityOutput) ToNodeTemplateConstraintsCustomPriorityOutputWithContext(ctx context.Context) NodeTemplateConstraintsCustomPriorityOutput {
	return o
}

// Instance families to prioritize in this tier.
func (o NodeTemplateConstraintsCustomPriorityOutput) InstanceFamilies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsCustomPriority) []string { return v.InstanceFamilies }).(pulumi.StringArrayOutput)
}

// If true, this tier will apply to on-demand instances.
func (o NodeTemplateConstraintsCustomPriorityOutput) OnDemand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsCustomPriority) *bool { return v.OnDemand }).(pulumi.BoolPtrOutput)
}

// If true, this tier will apply to spot instances.
func (o NodeTemplateConstraintsCustomPriorityOutput) Spot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsCustomPriority) *bool { return v.Spot }).(pulumi.BoolPtrOutput)
}

type NodeTemplateConstraintsCustomPriorityArrayOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsCustomPriorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsCustomPriority)(nil)).Elem()
}

func (o NodeTemplateConstraintsCustomPriorityArrayOutput) ToNodeTemplateConstraintsCustomPriorityArrayOutput() NodeTemplateConstraintsCustomPriorityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsCustomPriorityArrayOutput) ToNodeTemplateConstraintsCustomPriorityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsCustomPriorityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsCustomPriorityArrayOutput) Index(i pulumi.IntInput) NodeTemplateConstraintsCustomPriorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeTemplateConstraintsCustomPriority {
		return vs[0].([]NodeTemplateConstraintsCustomPriority)[vs[1].(int)]
	}).(NodeTemplateConstraintsCustomPriorityOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinity struct {
	Affinities []NodeTemplateConstraintsDedicatedNodeAffinityAffinity `pulumi:"affinities"`
	// Availability zone name.
	AzName string `pulumi:"azName"`
	// Instance/node types in this node group.
	InstanceTypes []string `pulumi:"instanceTypes"`
	// Name of node group.
	Name string `pulumi:"name"`
}

// NodeTemplateConstraintsDedicatedNodeAffinityInput is an input type that accepts NodeTemplateConstraintsDedicatedNodeAffinityArgs and NodeTemplateConstraintsDedicatedNodeAffinityOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsDedicatedNodeAffinityInput` via:
//
//	NodeTemplateConstraintsDedicatedNodeAffinityArgs{...}
type NodeTemplateConstraintsDedicatedNodeAffinityInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsDedicatedNodeAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityOutput
	ToNodeTemplateConstraintsDedicatedNodeAffinityOutputWithContext(context.Context) NodeTemplateConstraintsDedicatedNodeAffinityOutput
}

type NodeTemplateConstraintsDedicatedNodeAffinityArgs struct {
	Affinities NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput `pulumi:"affinities"`
	// Availability zone name.
	AzName pulumi.StringInput `pulumi:"azName"`
	// Instance/node types in this node group.
	InstanceTypes pulumi.StringArrayInput `pulumi:"instanceTypes"`
	// Name of node group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (NodeTemplateConstraintsDedicatedNodeAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinity)(nil)).Elem()
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityArgs) ToNodeTemplateConstraintsDedicatedNodeAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return i.ToNodeTemplateConstraintsDedicatedNodeAffinityOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityArgs) ToNodeTemplateConstraintsDedicatedNodeAffinityOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsDedicatedNodeAffinityOutput)
}

// NodeTemplateConstraintsDedicatedNodeAffinityArrayInput is an input type that accepts NodeTemplateConstraintsDedicatedNodeAffinityArray and NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsDedicatedNodeAffinityArrayInput` via:
//
//	NodeTemplateConstraintsDedicatedNodeAffinityArray{ NodeTemplateConstraintsDedicatedNodeAffinityArgs{...} }
type NodeTemplateConstraintsDedicatedNodeAffinityArrayInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput
	ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutputWithContext(context.Context) NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput
}

type NodeTemplateConstraintsDedicatedNodeAffinityArray []NodeTemplateConstraintsDedicatedNodeAffinityInput

func (NodeTemplateConstraintsDedicatedNodeAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsDedicatedNodeAffinity)(nil)).Elem()
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityArray) ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return i.ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityArray) ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsDedicatedNodeAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinity)(nil)).Elem()
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) Affinities() NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinity) []NodeTemplateConstraintsDedicatedNodeAffinityAffinity {
		return v.Affinities
	}).(NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput)
}

// Availability zone name.
func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) AzName() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinity) string { return v.AzName }).(pulumi.StringOutput)
}

// Instance/node types in this node group.
func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) InstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinity) []string { return v.InstanceTypes }).(pulumi.StringArrayOutput)
}

// Name of node group.
func (o NodeTemplateConstraintsDedicatedNodeAffinityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinity) string { return v.Name }).(pulumi.StringOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsDedicatedNodeAffinity)(nil)).Elem()
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput) Index(i pulumi.IntInput) NodeTemplateConstraintsDedicatedNodeAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeTemplateConstraintsDedicatedNodeAffinity {
		return vs[0].([]NodeTemplateConstraintsDedicatedNodeAffinity)[vs[1].(int)]
	}).(NodeTemplateConstraintsDedicatedNodeAffinityOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinity struct {
	// Key of the node affinity selector.
	Key string `pulumi:"key"`
	// Operator of the node affinity selector. Allowed values: In, NotIn, Exists, DoesNotExist, Gt, Lt.
	Operator string `pulumi:"operator"`
	// Values of the node affinity selector.
	Values []string `pulumi:"values"`
}

// NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput is an input type that accepts NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs and NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput` via:
//
//	NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs{...}
type NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput
	ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutputWithContext(context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs struct {
	// Key of the node affinity selector.
	Key pulumi.StringInput `pulumi:"key"`
	// Operator of the node affinity selector. Allowed values: In, NotIn, Exists, DoesNotExist, Gt, Lt.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Values of the node affinity selector.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityAffinity)(nil)).Elem()
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return i.ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput)
}

// NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput is an input type that accepts NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray and NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput` via:
//
//	NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray{ NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs{...} }
type NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput
	ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutputWithContext(context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray []NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput

func (NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsDedicatedNodeAffinityAffinity)(nil)).Elem()
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return i.ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityAffinity)(nil)).Elem()
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return o
}

// Key of the node affinity selector.
func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinityAffinity) string { return v.Key }).(pulumi.StringOutput)
}

// Operator of the node affinity selector. Allowed values: In, NotIn, Exists, DoesNotExist, Gt, Lt.
func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinityAffinity) string { return v.Operator }).(pulumi.StringOutput)
}

// Values of the node affinity selector.
func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsDedicatedNodeAffinityAffinity) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateConstraintsDedicatedNodeAffinityAffinity)(nil)).Elem()
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput() NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput) ToNodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutputWithContext(ctx context.Context) NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput {
	return o
}

func (o NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput) Index(i pulumi.IntInput) NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeTemplateConstraintsDedicatedNodeAffinityAffinity {
		return vs[0].([]NodeTemplateConstraintsDedicatedNodeAffinityAffinity)[vs[1].(int)]
	}).(NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput)
}

type NodeTemplateConstraintsGpu struct {
	// Names of the GPUs to exclude.
	ExcludeNames []string `pulumi:"excludeNames"`
	// Instance families to include when filtering (excludes all other families).
	IncludeNames []string `pulumi:"includeNames"`
	// Manufacturers of the gpus to select - NVIDIA, AMD.
	Manufacturers []string `pulumi:"manufacturers"`
	// Max GPU count for the instance type to have.
	MaxCount *float64 `pulumi:"maxCount"`
	// Min GPU count for the instance type to have.
	MinCount *float64 `pulumi:"minCount"`
}

// NodeTemplateConstraintsGpuInput is an input type that accepts NodeTemplateConstraintsGpuArgs and NodeTemplateConstraintsGpuOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsGpuInput` via:
//
//	NodeTemplateConstraintsGpuArgs{...}
type NodeTemplateConstraintsGpuInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsGpuOutput() NodeTemplateConstraintsGpuOutput
	ToNodeTemplateConstraintsGpuOutputWithContext(context.Context) NodeTemplateConstraintsGpuOutput
}

type NodeTemplateConstraintsGpuArgs struct {
	// Names of the GPUs to exclude.
	ExcludeNames pulumi.StringArrayInput `pulumi:"excludeNames"`
	// Instance families to include when filtering (excludes all other families).
	IncludeNames pulumi.StringArrayInput `pulumi:"includeNames"`
	// Manufacturers of the gpus to select - NVIDIA, AMD.
	Manufacturers pulumi.StringArrayInput `pulumi:"manufacturers"`
	// Max GPU count for the instance type to have.
	MaxCount pulumi.Float64PtrInput `pulumi:"maxCount"`
	// Min GPU count for the instance type to have.
	MinCount pulumi.Float64PtrInput `pulumi:"minCount"`
}

func (NodeTemplateConstraintsGpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsGpu)(nil)).Elem()
}

func (i NodeTemplateConstraintsGpuArgs) ToNodeTemplateConstraintsGpuOutput() NodeTemplateConstraintsGpuOutput {
	return i.ToNodeTemplateConstraintsGpuOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsGpuArgs) ToNodeTemplateConstraintsGpuOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsGpuOutput)
}

func (i NodeTemplateConstraintsGpuArgs) ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput {
	return i.ToNodeTemplateConstraintsGpuPtrOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsGpuArgs) ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsGpuOutput).ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx)
}

// NodeTemplateConstraintsGpuPtrInput is an input type that accepts NodeTemplateConstraintsGpuArgs, NodeTemplateConstraintsGpuPtr and NodeTemplateConstraintsGpuPtrOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsGpuPtrInput` via:
//
//	        NodeTemplateConstraintsGpuArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateConstraintsGpuPtrInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput
	ToNodeTemplateConstraintsGpuPtrOutputWithContext(context.Context) NodeTemplateConstraintsGpuPtrOutput
}

type nodeTemplateConstraintsGpuPtrType NodeTemplateConstraintsGpuArgs

func NodeTemplateConstraintsGpuPtr(v *NodeTemplateConstraintsGpuArgs) NodeTemplateConstraintsGpuPtrInput {
	return (*nodeTemplateConstraintsGpuPtrType)(v)
}

func (*nodeTemplateConstraintsGpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsGpu)(nil)).Elem()
}

func (i *nodeTemplateConstraintsGpuPtrType) ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput {
	return i.ToNodeTemplateConstraintsGpuPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateConstraintsGpuPtrType) ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsGpuPtrOutput)
}

type NodeTemplateConstraintsGpuOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsGpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsGpu)(nil)).Elem()
}

func (o NodeTemplateConstraintsGpuOutput) ToNodeTemplateConstraintsGpuOutput() NodeTemplateConstraintsGpuOutput {
	return o
}

func (o NodeTemplateConstraintsGpuOutput) ToNodeTemplateConstraintsGpuOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuOutput {
	return o
}

func (o NodeTemplateConstraintsGpuOutput) ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput {
	return o.ToNodeTemplateConstraintsGpuPtrOutputWithContext(context.Background())
}

func (o NodeTemplateConstraintsGpuOutput) ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateConstraintsGpu) *NodeTemplateConstraintsGpu {
		return &v
	}).(NodeTemplateConstraintsGpuPtrOutput)
}

// Names of the GPUs to exclude.
func (o NodeTemplateConstraintsGpuOutput) ExcludeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) []string { return v.ExcludeNames }).(pulumi.StringArrayOutput)
}

// Instance families to include when filtering (excludes all other families).
func (o NodeTemplateConstraintsGpuOutput) IncludeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) []string { return v.IncludeNames }).(pulumi.StringArrayOutput)
}

// Manufacturers of the gpus to select - NVIDIA, AMD.
func (o NodeTemplateConstraintsGpuOutput) Manufacturers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) []string { return v.Manufacturers }).(pulumi.StringArrayOutput)
}

// Max GPU count for the instance type to have.
func (o NodeTemplateConstraintsGpuOutput) MaxCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) *float64 { return v.MaxCount }).(pulumi.Float64PtrOutput)
}

// Min GPU count for the instance type to have.
func (o NodeTemplateConstraintsGpuOutput) MinCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsGpu) *float64 { return v.MinCount }).(pulumi.Float64PtrOutput)
}

type NodeTemplateConstraintsGpuPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsGpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsGpu)(nil)).Elem()
}

func (o NodeTemplateConstraintsGpuPtrOutput) ToNodeTemplateConstraintsGpuPtrOutput() NodeTemplateConstraintsGpuPtrOutput {
	return o
}

func (o NodeTemplateConstraintsGpuPtrOutput) ToNodeTemplateConstraintsGpuPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsGpuPtrOutput {
	return o
}

func (o NodeTemplateConstraintsGpuPtrOutput) Elem() NodeTemplateConstraintsGpuOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) NodeTemplateConstraintsGpu {
		if v != nil {
			return *v
		}
		var ret NodeTemplateConstraintsGpu
		return ret
	}).(NodeTemplateConstraintsGpuOutput)
}

// Names of the GPUs to exclude.
func (o NodeTemplateConstraintsGpuPtrOutput) ExcludeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeNames
	}).(pulumi.StringArrayOutput)
}

// Instance families to include when filtering (excludes all other families).
func (o NodeTemplateConstraintsGpuPtrOutput) IncludeNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) []string {
		if v == nil {
			return nil
		}
		return v.IncludeNames
	}).(pulumi.StringArrayOutput)
}

// Manufacturers of the gpus to select - NVIDIA, AMD.
func (o NodeTemplateConstraintsGpuPtrOutput) Manufacturers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) []string {
		if v == nil {
			return nil
		}
		return v.Manufacturers
	}).(pulumi.StringArrayOutput)
}

// Max GPU count for the instance type to have.
func (o NodeTemplateConstraintsGpuPtrOutput) MaxCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.Float64PtrOutput)
}

// Min GPU count for the instance type to have.
func (o NodeTemplateConstraintsGpuPtrOutput) MinCount() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsGpu) *float64 {
		if v == nil {
			return nil
		}
		return v.MinCount
	}).(pulumi.Float64PtrOutput)
}

type NodeTemplateConstraintsInstanceFamilies struct {
	// Instance families to include when filtering (excludes all other families).
	Excludes []string `pulumi:"excludes"`
	// Instance families to exclude when filtering (includes all other families).
	Includes []string `pulumi:"includes"`
}

// NodeTemplateConstraintsInstanceFamiliesInput is an input type that accepts NodeTemplateConstraintsInstanceFamiliesArgs and NodeTemplateConstraintsInstanceFamiliesOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsInstanceFamiliesInput` via:
//
//	NodeTemplateConstraintsInstanceFamiliesArgs{...}
type NodeTemplateConstraintsInstanceFamiliesInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsInstanceFamiliesOutput() NodeTemplateConstraintsInstanceFamiliesOutput
	ToNodeTemplateConstraintsInstanceFamiliesOutputWithContext(context.Context) NodeTemplateConstraintsInstanceFamiliesOutput
}

type NodeTemplateConstraintsInstanceFamiliesArgs struct {
	// Instance families to include when filtering (excludes all other families).
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// Instance families to exclude when filtering (includes all other families).
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (NodeTemplateConstraintsInstanceFamiliesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsInstanceFamilies)(nil)).Elem()
}

func (i NodeTemplateConstraintsInstanceFamiliesArgs) ToNodeTemplateConstraintsInstanceFamiliesOutput() NodeTemplateConstraintsInstanceFamiliesOutput {
	return i.ToNodeTemplateConstraintsInstanceFamiliesOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsInstanceFamiliesArgs) ToNodeTemplateConstraintsInstanceFamiliesOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsInstanceFamiliesOutput)
}

func (i NodeTemplateConstraintsInstanceFamiliesArgs) ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return i.ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsInstanceFamiliesArgs) ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsInstanceFamiliesOutput).ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx)
}

// NodeTemplateConstraintsInstanceFamiliesPtrInput is an input type that accepts NodeTemplateConstraintsInstanceFamiliesArgs, NodeTemplateConstraintsInstanceFamiliesPtr and NodeTemplateConstraintsInstanceFamiliesPtrOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsInstanceFamiliesPtrInput` via:
//
//	        NodeTemplateConstraintsInstanceFamiliesArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateConstraintsInstanceFamiliesPtrInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput
	ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput
}

type nodeTemplateConstraintsInstanceFamiliesPtrType NodeTemplateConstraintsInstanceFamiliesArgs

func NodeTemplateConstraintsInstanceFamiliesPtr(v *NodeTemplateConstraintsInstanceFamiliesArgs) NodeTemplateConstraintsInstanceFamiliesPtrInput {
	return (*nodeTemplateConstraintsInstanceFamiliesPtrType)(v)
}

func (*nodeTemplateConstraintsInstanceFamiliesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsInstanceFamilies)(nil)).Elem()
}

func (i *nodeTemplateConstraintsInstanceFamiliesPtrType) ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return i.ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateConstraintsInstanceFamiliesPtrType) ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsInstanceFamiliesPtrOutput)
}

type NodeTemplateConstraintsInstanceFamiliesOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsInstanceFamiliesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsInstanceFamilies)(nil)).Elem()
}

func (o NodeTemplateConstraintsInstanceFamiliesOutput) ToNodeTemplateConstraintsInstanceFamiliesOutput() NodeTemplateConstraintsInstanceFamiliesOutput {
	return o
}

func (o NodeTemplateConstraintsInstanceFamiliesOutput) ToNodeTemplateConstraintsInstanceFamiliesOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesOutput {
	return o
}

func (o NodeTemplateConstraintsInstanceFamiliesOutput) ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o.ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(context.Background())
}

func (o NodeTemplateConstraintsInstanceFamiliesOutput) ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateConstraintsInstanceFamilies) *NodeTemplateConstraintsInstanceFamilies {
		return &v
	}).(NodeTemplateConstraintsInstanceFamiliesPtrOutput)
}

// Instance families to include when filtering (excludes all other families).
func (o NodeTemplateConstraintsInstanceFamiliesOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsInstanceFamilies) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// Instance families to exclude when filtering (includes all other families).
func (o NodeTemplateConstraintsInstanceFamiliesOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsInstanceFamilies) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type NodeTemplateConstraintsInstanceFamiliesPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsInstanceFamiliesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsInstanceFamilies)(nil)).Elem()
}

func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) ToNodeTemplateConstraintsInstanceFamiliesPtrOutput() NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o
}

func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) ToNodeTemplateConstraintsInstanceFamiliesPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsInstanceFamiliesPtrOutput {
	return o
}

func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) Elem() NodeTemplateConstraintsInstanceFamiliesOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsInstanceFamilies) NodeTemplateConstraintsInstanceFamilies {
		if v != nil {
			return *v
		}
		var ret NodeTemplateConstraintsInstanceFamilies
		return ret
	}).(NodeTemplateConstraintsInstanceFamiliesOutput)
}

// Instance families to include when filtering (excludes all other families).
func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsInstanceFamilies) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

// Instance families to exclude when filtering (includes all other families).
func (o NodeTemplateConstraintsInstanceFamiliesPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsInstanceFamilies) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type NodeTemplateConstraintsResourceLimits struct {
	// Controls CPU limit enforcement for the node template.
	CpuLimitEnabled *bool `pulumi:"cpuLimitEnabled"`
	// Specifies the maximum number of CPU cores that the nodes provisioned from this template can collectively have.
	CpuLimitMaxCores *float64 `pulumi:"cpuLimitMaxCores"`
}

// NodeTemplateConstraintsResourceLimitsInput is an input type that accepts NodeTemplateConstraintsResourceLimitsArgs and NodeTemplateConstraintsResourceLimitsOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsResourceLimitsInput` via:
//
//	NodeTemplateConstraintsResourceLimitsArgs{...}
type NodeTemplateConstraintsResourceLimitsInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsResourceLimitsOutput() NodeTemplateConstraintsResourceLimitsOutput
	ToNodeTemplateConstraintsResourceLimitsOutputWithContext(context.Context) NodeTemplateConstraintsResourceLimitsOutput
}

type NodeTemplateConstraintsResourceLimitsArgs struct {
	// Controls CPU limit enforcement for the node template.
	CpuLimitEnabled pulumi.BoolPtrInput `pulumi:"cpuLimitEnabled"`
	// Specifies the maximum number of CPU cores that the nodes provisioned from this template can collectively have.
	CpuLimitMaxCores pulumi.Float64PtrInput `pulumi:"cpuLimitMaxCores"`
}

func (NodeTemplateConstraintsResourceLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsResourceLimits)(nil)).Elem()
}

func (i NodeTemplateConstraintsResourceLimitsArgs) ToNodeTemplateConstraintsResourceLimitsOutput() NodeTemplateConstraintsResourceLimitsOutput {
	return i.ToNodeTemplateConstraintsResourceLimitsOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsResourceLimitsArgs) ToNodeTemplateConstraintsResourceLimitsOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsResourceLimitsOutput)
}

func (i NodeTemplateConstraintsResourceLimitsArgs) ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return i.ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(context.Background())
}

func (i NodeTemplateConstraintsResourceLimitsArgs) ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsResourceLimitsOutput).ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx)
}

// NodeTemplateConstraintsResourceLimitsPtrInput is an input type that accepts NodeTemplateConstraintsResourceLimitsArgs, NodeTemplateConstraintsResourceLimitsPtr and NodeTemplateConstraintsResourceLimitsPtrOutput values.
// You can construct a concrete instance of `NodeTemplateConstraintsResourceLimitsPtrInput` via:
//
//	        NodeTemplateConstraintsResourceLimitsArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateConstraintsResourceLimitsPtrInput interface {
	pulumi.Input

	ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput
	ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput
}

type nodeTemplateConstraintsResourceLimitsPtrType NodeTemplateConstraintsResourceLimitsArgs

func NodeTemplateConstraintsResourceLimitsPtr(v *NodeTemplateConstraintsResourceLimitsArgs) NodeTemplateConstraintsResourceLimitsPtrInput {
	return (*nodeTemplateConstraintsResourceLimitsPtrType)(v)
}

func (*nodeTemplateConstraintsResourceLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsResourceLimits)(nil)).Elem()
}

func (i *nodeTemplateConstraintsResourceLimitsPtrType) ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return i.ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateConstraintsResourceLimitsPtrType) ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateConstraintsResourceLimitsPtrOutput)
}

type NodeTemplateConstraintsResourceLimitsOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsResourceLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateConstraintsResourceLimits)(nil)).Elem()
}

func (o NodeTemplateConstraintsResourceLimitsOutput) ToNodeTemplateConstraintsResourceLimitsOutput() NodeTemplateConstraintsResourceLimitsOutput {
	return o
}

func (o NodeTemplateConstraintsResourceLimitsOutput) ToNodeTemplateConstraintsResourceLimitsOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsOutput {
	return o
}

func (o NodeTemplateConstraintsResourceLimitsOutput) ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o.ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(context.Background())
}

func (o NodeTemplateConstraintsResourceLimitsOutput) ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateConstraintsResourceLimits) *NodeTemplateConstraintsResourceLimits {
		return &v
	}).(NodeTemplateConstraintsResourceLimitsPtrOutput)
}

// Controls CPU limit enforcement for the node template.
func (o NodeTemplateConstraintsResourceLimitsOutput) CpuLimitEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsResourceLimits) *bool { return v.CpuLimitEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the maximum number of CPU cores that the nodes provisioned from this template can collectively have.
func (o NodeTemplateConstraintsResourceLimitsOutput) CpuLimitMaxCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v NodeTemplateConstraintsResourceLimits) *float64 { return v.CpuLimitMaxCores }).(pulumi.Float64PtrOutput)
}

type NodeTemplateConstraintsResourceLimitsPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateConstraintsResourceLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateConstraintsResourceLimits)(nil)).Elem()
}

func (o NodeTemplateConstraintsResourceLimitsPtrOutput) ToNodeTemplateConstraintsResourceLimitsPtrOutput() NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o
}

func (o NodeTemplateConstraintsResourceLimitsPtrOutput) ToNodeTemplateConstraintsResourceLimitsPtrOutputWithContext(ctx context.Context) NodeTemplateConstraintsResourceLimitsPtrOutput {
	return o
}

func (o NodeTemplateConstraintsResourceLimitsPtrOutput) Elem() NodeTemplateConstraintsResourceLimitsOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsResourceLimits) NodeTemplateConstraintsResourceLimits {
		if v != nil {
			return *v
		}
		var ret NodeTemplateConstraintsResourceLimits
		return ret
	}).(NodeTemplateConstraintsResourceLimitsOutput)
}

// Controls CPU limit enforcement for the node template.
func (o NodeTemplateConstraintsResourceLimitsPtrOutput) CpuLimitEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsResourceLimits) *bool {
		if v == nil {
			return nil
		}
		return v.CpuLimitEnabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the maximum number of CPU cores that the nodes provisioned from this template can collectively have.
func (o NodeTemplateConstraintsResourceLimitsPtrOutput) CpuLimitMaxCores() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NodeTemplateConstraintsResourceLimits) *float64 {
		if v == nil {
			return nil
		}
		return v.CpuLimitMaxCores
	}).(pulumi.Float64PtrOutput)
}

type NodeTemplateCustomTaint struct {
	// Effect of a taint to be added to nodes created from this template, the default is NoSchedule. Allowed values: NoSchedule, NoExecute.
	Effect *string `pulumi:"effect"`
	// Key of a taint to be added to nodes created from this template.
	Key string `pulumi:"key"`
	// Value of a taint to be added to nodes created from this template.
	Value *string `pulumi:"value"`
}

// NodeTemplateCustomTaintInput is an input type that accepts NodeTemplateCustomTaintArgs and NodeTemplateCustomTaintOutput values.
// You can construct a concrete instance of `NodeTemplateCustomTaintInput` via:
//
//	NodeTemplateCustomTaintArgs{...}
type NodeTemplateCustomTaintInput interface {
	pulumi.Input

	ToNodeTemplateCustomTaintOutput() NodeTemplateCustomTaintOutput
	ToNodeTemplateCustomTaintOutputWithContext(context.Context) NodeTemplateCustomTaintOutput
}

type NodeTemplateCustomTaintArgs struct {
	// Effect of a taint to be added to nodes created from this template, the default is NoSchedule. Allowed values: NoSchedule, NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key of a taint to be added to nodes created from this template.
	Key pulumi.StringInput `pulumi:"key"`
	// Value of a taint to be added to nodes created from this template.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (NodeTemplateCustomTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateCustomTaint)(nil)).Elem()
}

func (i NodeTemplateCustomTaintArgs) ToNodeTemplateCustomTaintOutput() NodeTemplateCustomTaintOutput {
	return i.ToNodeTemplateCustomTaintOutputWithContext(context.Background())
}

func (i NodeTemplateCustomTaintArgs) ToNodeTemplateCustomTaintOutputWithContext(ctx context.Context) NodeTemplateCustomTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateCustomTaintOutput)
}

// NodeTemplateCustomTaintArrayInput is an input type that accepts NodeTemplateCustomTaintArray and NodeTemplateCustomTaintArrayOutput values.
// You can construct a concrete instance of `NodeTemplateCustomTaintArrayInput` via:
//
//	NodeTemplateCustomTaintArray{ NodeTemplateCustomTaintArgs{...} }
type NodeTemplateCustomTaintArrayInput interface {
	pulumi.Input

	ToNodeTemplateCustomTaintArrayOutput() NodeTemplateCustomTaintArrayOutput
	ToNodeTemplateCustomTaintArrayOutputWithContext(context.Context) NodeTemplateCustomTaintArrayOutput
}

type NodeTemplateCustomTaintArray []NodeTemplateCustomTaintInput

func (NodeTemplateCustomTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateCustomTaint)(nil)).Elem()
}

func (i NodeTemplateCustomTaintArray) ToNodeTemplateCustomTaintArrayOutput() NodeTemplateCustomTaintArrayOutput {
	return i.ToNodeTemplateCustomTaintArrayOutputWithContext(context.Background())
}

func (i NodeTemplateCustomTaintArray) ToNodeTemplateCustomTaintArrayOutputWithContext(ctx context.Context) NodeTemplateCustomTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateCustomTaintArrayOutput)
}

type NodeTemplateCustomTaintOutput struct{ *pulumi.OutputState }

func (NodeTemplateCustomTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateCustomTaint)(nil)).Elem()
}

func (o NodeTemplateCustomTaintOutput) ToNodeTemplateCustomTaintOutput() NodeTemplateCustomTaintOutput {
	return o
}

func (o NodeTemplateCustomTaintOutput) ToNodeTemplateCustomTaintOutputWithContext(ctx context.Context) NodeTemplateCustomTaintOutput {
	return o
}

// Effect of a taint to be added to nodes created from this template, the default is NoSchedule. Allowed values: NoSchedule, NoExecute.
func (o NodeTemplateCustomTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateCustomTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key of a taint to be added to nodes created from this template.
func (o NodeTemplateCustomTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NodeTemplateCustomTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Value of a taint to be added to nodes created from this template.
func (o NodeTemplateCustomTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateCustomTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type NodeTemplateCustomTaintArrayOutput struct{ *pulumi.OutputState }

func (NodeTemplateCustomTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeTemplateCustomTaint)(nil)).Elem()
}

func (o NodeTemplateCustomTaintArrayOutput) ToNodeTemplateCustomTaintArrayOutput() NodeTemplateCustomTaintArrayOutput {
	return o
}

func (o NodeTemplateCustomTaintArrayOutput) ToNodeTemplateCustomTaintArrayOutputWithContext(ctx context.Context) NodeTemplateCustomTaintArrayOutput {
	return o
}

func (o NodeTemplateCustomTaintArrayOutput) Index(i pulumi.IntInput) NodeTemplateCustomTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeTemplateCustomTaint {
		return vs[0].([]NodeTemplateCustomTaint)[vs[1].(int)]
	}).(NodeTemplateCustomTaintOutput)
}

type NodeTemplateTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Read   *string `pulumi:"read"`
	Update *string `pulumi:"update"`
}

// NodeTemplateTimeoutsInput is an input type that accepts NodeTemplateTimeoutsArgs and NodeTemplateTimeoutsOutput values.
// You can construct a concrete instance of `NodeTemplateTimeoutsInput` via:
//
//	NodeTemplateTimeoutsArgs{...}
type NodeTemplateTimeoutsInput interface {
	pulumi.Input

	ToNodeTemplateTimeoutsOutput() NodeTemplateTimeoutsOutput
	ToNodeTemplateTimeoutsOutputWithContext(context.Context) NodeTemplateTimeoutsOutput
}

type NodeTemplateTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Read   pulumi.StringPtrInput `pulumi:"read"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (NodeTemplateTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateTimeouts)(nil)).Elem()
}

func (i NodeTemplateTimeoutsArgs) ToNodeTemplateTimeoutsOutput() NodeTemplateTimeoutsOutput {
	return i.ToNodeTemplateTimeoutsOutputWithContext(context.Background())
}

func (i NodeTemplateTimeoutsArgs) ToNodeTemplateTimeoutsOutputWithContext(ctx context.Context) NodeTemplateTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateTimeoutsOutput)
}

func (i NodeTemplateTimeoutsArgs) ToNodeTemplateTimeoutsPtrOutput() NodeTemplateTimeoutsPtrOutput {
	return i.ToNodeTemplateTimeoutsPtrOutputWithContext(context.Background())
}

func (i NodeTemplateTimeoutsArgs) ToNodeTemplateTimeoutsPtrOutputWithContext(ctx context.Context) NodeTemplateTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateTimeoutsOutput).ToNodeTemplateTimeoutsPtrOutputWithContext(ctx)
}

// NodeTemplateTimeoutsPtrInput is an input type that accepts NodeTemplateTimeoutsArgs, NodeTemplateTimeoutsPtr and NodeTemplateTimeoutsPtrOutput values.
// You can construct a concrete instance of `NodeTemplateTimeoutsPtrInput` via:
//
//	        NodeTemplateTimeoutsArgs{...}
//
//	or:
//
//	        nil
type NodeTemplateTimeoutsPtrInput interface {
	pulumi.Input

	ToNodeTemplateTimeoutsPtrOutput() NodeTemplateTimeoutsPtrOutput
	ToNodeTemplateTimeoutsPtrOutputWithContext(context.Context) NodeTemplateTimeoutsPtrOutput
}

type nodeTemplateTimeoutsPtrType NodeTemplateTimeoutsArgs

func NodeTemplateTimeoutsPtr(v *NodeTemplateTimeoutsArgs) NodeTemplateTimeoutsPtrInput {
	return (*nodeTemplateTimeoutsPtrType)(v)
}

func (*nodeTemplateTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateTimeouts)(nil)).Elem()
}

func (i *nodeTemplateTimeoutsPtrType) ToNodeTemplateTimeoutsPtrOutput() NodeTemplateTimeoutsPtrOutput {
	return i.ToNodeTemplateTimeoutsPtrOutputWithContext(context.Background())
}

func (i *nodeTemplateTimeoutsPtrType) ToNodeTemplateTimeoutsPtrOutputWithContext(ctx context.Context) NodeTemplateTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTemplateTimeoutsPtrOutput)
}

type NodeTemplateTimeoutsOutput struct{ *pulumi.OutputState }

func (NodeTemplateTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeTemplateTimeouts)(nil)).Elem()
}

func (o NodeTemplateTimeoutsOutput) ToNodeTemplateTimeoutsOutput() NodeTemplateTimeoutsOutput {
	return o
}

func (o NodeTemplateTimeoutsOutput) ToNodeTemplateTimeoutsOutputWithContext(ctx context.Context) NodeTemplateTimeoutsOutput {
	return o
}

func (o NodeTemplateTimeoutsOutput) ToNodeTemplateTimeoutsPtrOutput() NodeTemplateTimeoutsPtrOutput {
	return o.ToNodeTemplateTimeoutsPtrOutputWithContext(context.Background())
}

func (o NodeTemplateTimeoutsOutput) ToNodeTemplateTimeoutsPtrOutputWithContext(ctx context.Context) NodeTemplateTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeTemplateTimeouts) *NodeTemplateTimeouts {
		return &v
	}).(NodeTemplateTimeoutsPtrOutput)
}

func (o NodeTemplateTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o NodeTemplateTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o NodeTemplateTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

func (o NodeTemplateTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeTemplateTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type NodeTemplateTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (NodeTemplateTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeTemplateTimeouts)(nil)).Elem()
}

func (o NodeTemplateTimeoutsPtrOutput) ToNodeTemplateTimeoutsPtrOutput() NodeTemplateTimeoutsPtrOutput {
	return o
}

func (o NodeTemplateTimeoutsPtrOutput) ToNodeTemplateTimeoutsPtrOutputWithContext(ctx context.Context) NodeTemplateTimeoutsPtrOutput {
	return o
}

func (o NodeTemplateTimeoutsPtrOutput) Elem() NodeTemplateTimeoutsOutput {
	return o.ApplyT(func(v *NodeTemplateTimeouts) NodeTemplateTimeouts {
		if v != nil {
			return *v
		}
		var ret NodeTemplateTimeouts
		return ret
	}).(NodeTemplateTimeoutsOutput)
}

func (o NodeTemplateTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o NodeTemplateTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o NodeTemplateTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func (o NodeTemplateTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodeTemplateTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type OrganizationGroupMember struct {
	Members []OrganizationGroupMemberMember `pulumi:"members"`
}

// OrganizationGroupMemberInput is an input type that accepts OrganizationGroupMemberArgs and OrganizationGroupMemberOutput values.
// You can construct a concrete instance of `OrganizationGroupMemberInput` via:
//
//	OrganizationGroupMemberArgs{...}
type OrganizationGroupMemberInput interface {
	pulumi.Input

	ToOrganizationGroupMemberOutput() OrganizationGroupMemberOutput
	ToOrganizationGroupMemberOutputWithContext(context.Context) OrganizationGroupMemberOutput
}

type OrganizationGroupMemberArgs struct {
	Members OrganizationGroupMemberMemberArrayInput `pulumi:"members"`
}

func (OrganizationGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupMember)(nil)).Elem()
}

func (i OrganizationGroupMemberArgs) ToOrganizationGroupMemberOutput() OrganizationGroupMemberOutput {
	return i.ToOrganizationGroupMemberOutputWithContext(context.Background())
}

func (i OrganizationGroupMemberArgs) ToOrganizationGroupMemberOutputWithContext(ctx context.Context) OrganizationGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupMemberOutput)
}

// OrganizationGroupMemberArrayInput is an input type that accepts OrganizationGroupMemberArray and OrganizationGroupMemberArrayOutput values.
// You can construct a concrete instance of `OrganizationGroupMemberArrayInput` via:
//
//	OrganizationGroupMemberArray{ OrganizationGroupMemberArgs{...} }
type OrganizationGroupMemberArrayInput interface {
	pulumi.Input

	ToOrganizationGroupMemberArrayOutput() OrganizationGroupMemberArrayOutput
	ToOrganizationGroupMemberArrayOutputWithContext(context.Context) OrganizationGroupMemberArrayOutput
}

type OrganizationGroupMemberArray []OrganizationGroupMemberInput

func (OrganizationGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationGroupMember)(nil)).Elem()
}

func (i OrganizationGroupMemberArray) ToOrganizationGroupMemberArrayOutput() OrganizationGroupMemberArrayOutput {
	return i.ToOrganizationGroupMemberArrayOutputWithContext(context.Background())
}

func (i OrganizationGroupMemberArray) ToOrganizationGroupMemberArrayOutputWithContext(ctx context.Context) OrganizationGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupMemberArrayOutput)
}

type OrganizationGroupMemberOutput struct{ *pulumi.OutputState }

func (OrganizationGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupMember)(nil)).Elem()
}

func (o OrganizationGroupMemberOutput) ToOrganizationGroupMemberOutput() OrganizationGroupMemberOutput {
	return o
}

func (o OrganizationGroupMemberOutput) ToOrganizationGroupMemberOutputWithContext(ctx context.Context) OrganizationGroupMemberOutput {
	return o
}

func (o OrganizationGroupMemberOutput) Members() OrganizationGroupMemberMemberArrayOutput {
	return o.ApplyT(func(v OrganizationGroupMember) []OrganizationGroupMemberMember { return v.Members }).(OrganizationGroupMemberMemberArrayOutput)
}

type OrganizationGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (OrganizationGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationGroupMember)(nil)).Elem()
}

func (o OrganizationGroupMemberArrayOutput) ToOrganizationGroupMemberArrayOutput() OrganizationGroupMemberArrayOutput {
	return o
}

func (o OrganizationGroupMemberArrayOutput) ToOrganizationGroupMemberArrayOutputWithContext(ctx context.Context) OrganizationGroupMemberArrayOutput {
	return o
}

func (o OrganizationGroupMemberArrayOutput) Index(i pulumi.IntInput) OrganizationGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationGroupMember {
		return vs[0].([]OrganizationGroupMember)[vs[1].(int)]
	}).(OrganizationGroupMemberOutput)
}

type OrganizationGroupMemberMember struct {
	Email string `pulumi:"email"`
	Id    string `pulumi:"id"`
	// Kind of the member. Supported values include: user, service_account.
	Kind string `pulumi:"kind"`
}

// OrganizationGroupMemberMemberInput is an input type that accepts OrganizationGroupMemberMemberArgs and OrganizationGroupMemberMemberOutput values.
// You can construct a concrete instance of `OrganizationGroupMemberMemberInput` via:
//
//	OrganizationGroupMemberMemberArgs{...}
type OrganizationGroupMemberMemberInput interface {
	pulumi.Input

	ToOrganizationGroupMemberMemberOutput() OrganizationGroupMemberMemberOutput
	ToOrganizationGroupMemberMemberOutputWithContext(context.Context) OrganizationGroupMemberMemberOutput
}

type OrganizationGroupMemberMemberArgs struct {
	Email pulumi.StringInput `pulumi:"email"`
	Id    pulumi.StringInput `pulumi:"id"`
	// Kind of the member. Supported values include: user, service_account.
	Kind pulumi.StringInput `pulumi:"kind"`
}

func (OrganizationGroupMemberMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupMemberMember)(nil)).Elem()
}

func (i OrganizationGroupMemberMemberArgs) ToOrganizationGroupMemberMemberOutput() OrganizationGroupMemberMemberOutput {
	return i.ToOrganizationGroupMemberMemberOutputWithContext(context.Background())
}

func (i OrganizationGroupMemberMemberArgs) ToOrganizationGroupMemberMemberOutputWithContext(ctx context.Context) OrganizationGroupMemberMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupMemberMemberOutput)
}

// OrganizationGroupMemberMemberArrayInput is an input type that accepts OrganizationGroupMemberMemberArray and OrganizationGroupMemberMemberArrayOutput values.
// You can construct a concrete instance of `OrganizationGroupMemberMemberArrayInput` via:
//
//	OrganizationGroupMemberMemberArray{ OrganizationGroupMemberMemberArgs{...} }
type OrganizationGroupMemberMemberArrayInput interface {
	pulumi.Input

	ToOrganizationGroupMemberMemberArrayOutput() OrganizationGroupMemberMemberArrayOutput
	ToOrganizationGroupMemberMemberArrayOutputWithContext(context.Context) OrganizationGroupMemberMemberArrayOutput
}

type OrganizationGroupMemberMemberArray []OrganizationGroupMemberMemberInput

func (OrganizationGroupMemberMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationGroupMemberMember)(nil)).Elem()
}

func (i OrganizationGroupMemberMemberArray) ToOrganizationGroupMemberMemberArrayOutput() OrganizationGroupMemberMemberArrayOutput {
	return i.ToOrganizationGroupMemberMemberArrayOutputWithContext(context.Background())
}

func (i OrganizationGroupMemberMemberArray) ToOrganizationGroupMemberMemberArrayOutputWithContext(ctx context.Context) OrganizationGroupMemberMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupMemberMemberArrayOutput)
}

type OrganizationGroupMemberMemberOutput struct{ *pulumi.OutputState }

func (OrganizationGroupMemberMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupMemberMember)(nil)).Elem()
}

func (o OrganizationGroupMemberMemberOutput) ToOrganizationGroupMemberMemberOutput() OrganizationGroupMemberMemberOutput {
	return o
}

func (o OrganizationGroupMemberMemberOutput) ToOrganizationGroupMemberMemberOutputWithContext(ctx context.Context) OrganizationGroupMemberMemberOutput {
	return o
}

func (o OrganizationGroupMemberMemberOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationGroupMemberMember) string { return v.Email }).(pulumi.StringOutput)
}

func (o OrganizationGroupMemberMemberOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationGroupMemberMember) string { return v.Id }).(pulumi.StringOutput)
}

// Kind of the member. Supported values include: user, service_account.
func (o OrganizationGroupMemberMemberOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationGroupMemberMember) string { return v.Kind }).(pulumi.StringOutput)
}

type OrganizationGroupMemberMemberArrayOutput struct{ *pulumi.OutputState }

func (OrganizationGroupMemberMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationGroupMemberMember)(nil)).Elem()
}

func (o OrganizationGroupMemberMemberArrayOutput) ToOrganizationGroupMemberMemberArrayOutput() OrganizationGroupMemberMemberArrayOutput {
	return o
}

func (o OrganizationGroupMemberMemberArrayOutput) ToOrganizationGroupMemberMemberArrayOutputWithContext(ctx context.Context) OrganizationGroupMemberMemberArrayOutput {
	return o
}

func (o OrganizationGroupMemberMemberArrayOutput) Index(i pulumi.IntInput) OrganizationGroupMemberMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationGroupMemberMember {
		return vs[0].([]OrganizationGroupMemberMember)[vs[1].(int)]
	}).(OrganizationGroupMemberMemberOutput)
}

type OrganizationGroupTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

// OrganizationGroupTimeoutsInput is an input type that accepts OrganizationGroupTimeoutsArgs and OrganizationGroupTimeoutsOutput values.
// You can construct a concrete instance of `OrganizationGroupTimeoutsInput` via:
//
//	OrganizationGroupTimeoutsArgs{...}
type OrganizationGroupTimeoutsInput interface {
	pulumi.Input

	ToOrganizationGroupTimeoutsOutput() OrganizationGroupTimeoutsOutput
	ToOrganizationGroupTimeoutsOutputWithContext(context.Context) OrganizationGroupTimeoutsOutput
}

type OrganizationGroupTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (OrganizationGroupTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupTimeouts)(nil)).Elem()
}

func (i OrganizationGroupTimeoutsArgs) ToOrganizationGroupTimeoutsOutput() OrganizationGroupTimeoutsOutput {
	return i.ToOrganizationGroupTimeoutsOutputWithContext(context.Background())
}

func (i OrganizationGroupTimeoutsArgs) ToOrganizationGroupTimeoutsOutputWithContext(ctx context.Context) OrganizationGroupTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupTimeoutsOutput)
}

func (i OrganizationGroupTimeoutsArgs) ToOrganizationGroupTimeoutsPtrOutput() OrganizationGroupTimeoutsPtrOutput {
	return i.ToOrganizationGroupTimeoutsPtrOutputWithContext(context.Background())
}

func (i OrganizationGroupTimeoutsArgs) ToOrganizationGroupTimeoutsPtrOutputWithContext(ctx context.Context) OrganizationGroupTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupTimeoutsOutput).ToOrganizationGroupTimeoutsPtrOutputWithContext(ctx)
}

// OrganizationGroupTimeoutsPtrInput is an input type that accepts OrganizationGroupTimeoutsArgs, OrganizationGroupTimeoutsPtr and OrganizationGroupTimeoutsPtrOutput values.
// You can construct a concrete instance of `OrganizationGroupTimeoutsPtrInput` via:
//
//	        OrganizationGroupTimeoutsArgs{...}
//
//	or:
//
//	        nil
type OrganizationGroupTimeoutsPtrInput interface {
	pulumi.Input

	ToOrganizationGroupTimeoutsPtrOutput() OrganizationGroupTimeoutsPtrOutput
	ToOrganizationGroupTimeoutsPtrOutputWithContext(context.Context) OrganizationGroupTimeoutsPtrOutput
}

type organizationGroupTimeoutsPtrType OrganizationGroupTimeoutsArgs

func OrganizationGroupTimeoutsPtr(v *OrganizationGroupTimeoutsArgs) OrganizationGroupTimeoutsPtrInput {
	return (*organizationGroupTimeoutsPtrType)(v)
}

func (*organizationGroupTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationGroupTimeouts)(nil)).Elem()
}

func (i *organizationGroupTimeoutsPtrType) ToOrganizationGroupTimeoutsPtrOutput() OrganizationGroupTimeoutsPtrOutput {
	return i.ToOrganizationGroupTimeoutsPtrOutputWithContext(context.Background())
}

func (i *organizationGroupTimeoutsPtrType) ToOrganizationGroupTimeoutsPtrOutputWithContext(ctx context.Context) OrganizationGroupTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationGroupTimeoutsPtrOutput)
}

type OrganizationGroupTimeoutsOutput struct{ *pulumi.OutputState }

func (OrganizationGroupTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationGroupTimeouts)(nil)).Elem()
}

func (o OrganizationGroupTimeoutsOutput) ToOrganizationGroupTimeoutsOutput() OrganizationGroupTimeoutsOutput {
	return o
}

func (o OrganizationGroupTimeoutsOutput) ToOrganizationGroupTimeoutsOutputWithContext(ctx context.Context) OrganizationGroupTimeoutsOutput {
	return o
}

func (o OrganizationGroupTimeoutsOutput) ToOrganizationGroupTimeoutsPtrOutput() OrganizationGroupTimeoutsPtrOutput {
	return o.ToOrganizationGroupTimeoutsPtrOutputWithContext(context.Background())
}

func (o OrganizationGroupTimeoutsOutput) ToOrganizationGroupTimeoutsPtrOutputWithContext(ctx context.Context) OrganizationGroupTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationGroupTimeouts) *OrganizationGroupTimeouts {
		return &v
	}).(OrganizationGroupTimeoutsPtrOutput)
}

func (o OrganizationGroupTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationGroupTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o OrganizationGroupTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationGroupTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o OrganizationGroupTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationGroupTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type OrganizationGroupTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (OrganizationGroupTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationGroupTimeouts)(nil)).Elem()
}

func (o OrganizationGroupTimeoutsPtrOutput) ToOrganizationGroupTimeoutsPtrOutput() OrganizationGroupTimeoutsPtrOutput {
	return o
}

func (o OrganizationGroupTimeoutsPtrOutput) ToOrganizationGroupTimeoutsPtrOutputWithContext(ctx context.Context) OrganizationGroupTimeoutsPtrOutput {
	return o
}

func (o OrganizationGroupTimeoutsPtrOutput) Elem() OrganizationGroupTimeoutsOutput {
	return o.ApplyT(func(v *OrganizationGroupTimeouts) OrganizationGroupTimeouts {
		if v != nil {
			return *v
		}
		var ret OrganizationGroupTimeouts
		return ret
	}).(OrganizationGroupTimeoutsOutput)
}

func (o OrganizationGroupTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationGroupTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationGroupTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationGroupTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationGroupTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationGroupTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type OrganizationMembersTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

// OrganizationMembersTimeoutsInput is an input type that accepts OrganizationMembersTimeoutsArgs and OrganizationMembersTimeoutsOutput values.
// You can construct a concrete instance of `OrganizationMembersTimeoutsInput` via:
//
//	OrganizationMembersTimeoutsArgs{...}
type OrganizationMembersTimeoutsInput interface {
	pulumi.Input

	ToOrganizationMembersTimeoutsOutput() OrganizationMembersTimeoutsOutput
	ToOrganizationMembersTimeoutsOutputWithContext(context.Context) OrganizationMembersTimeoutsOutput
}

type OrganizationMembersTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (OrganizationMembersTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationMembersTimeouts)(nil)).Elem()
}

func (i OrganizationMembersTimeoutsArgs) ToOrganizationMembersTimeoutsOutput() OrganizationMembersTimeoutsOutput {
	return i.ToOrganizationMembersTimeoutsOutputWithContext(context.Background())
}

func (i OrganizationMembersTimeoutsArgs) ToOrganizationMembersTimeoutsOutputWithContext(ctx context.Context) OrganizationMembersTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationMembersTimeoutsOutput)
}

func (i OrganizationMembersTimeoutsArgs) ToOrganizationMembersTimeoutsPtrOutput() OrganizationMembersTimeoutsPtrOutput {
	return i.ToOrganizationMembersTimeoutsPtrOutputWithContext(context.Background())
}

func (i OrganizationMembersTimeoutsArgs) ToOrganizationMembersTimeoutsPtrOutputWithContext(ctx context.Context) OrganizationMembersTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationMembersTimeoutsOutput).ToOrganizationMembersTimeoutsPtrOutputWithContext(ctx)
}

// OrganizationMembersTimeoutsPtrInput is an input type that accepts OrganizationMembersTimeoutsArgs, OrganizationMembersTimeoutsPtr and OrganizationMembersTimeoutsPtrOutput values.
// You can construct a concrete instance of `OrganizationMembersTimeoutsPtrInput` via:
//
//	        OrganizationMembersTimeoutsArgs{...}
//
//	or:
//
//	        nil
type OrganizationMembersTimeoutsPtrInput interface {
	pulumi.Input

	ToOrganizationMembersTimeoutsPtrOutput() OrganizationMembersTimeoutsPtrOutput
	ToOrganizationMembersTimeoutsPtrOutputWithContext(context.Context) OrganizationMembersTimeoutsPtrOutput
}

type organizationMembersTimeoutsPtrType OrganizationMembersTimeoutsArgs

func OrganizationMembersTimeoutsPtr(v *OrganizationMembersTimeoutsArgs) OrganizationMembersTimeoutsPtrInput {
	return (*organizationMembersTimeoutsPtrType)(v)
}

func (*organizationMembersTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationMembersTimeouts)(nil)).Elem()
}

func (i *organizationMembersTimeoutsPtrType) ToOrganizationMembersTimeoutsPtrOutput() OrganizationMembersTimeoutsPtrOutput {
	return i.ToOrganizationMembersTimeoutsPtrOutputWithContext(context.Background())
}

func (i *organizationMembersTimeoutsPtrType) ToOrganizationMembersTimeoutsPtrOutputWithContext(ctx context.Context) OrganizationMembersTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationMembersTimeoutsPtrOutput)
}

type OrganizationMembersTimeoutsOutput struct{ *pulumi.OutputState }

func (OrganizationMembersTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationMembersTimeouts)(nil)).Elem()
}

func (o OrganizationMembersTimeoutsOutput) ToOrganizationMembersTimeoutsOutput() OrganizationMembersTimeoutsOutput {
	return o
}

func (o OrganizationMembersTimeoutsOutput) ToOrganizationMembersTimeoutsOutputWithContext(ctx context.Context) OrganizationMembersTimeoutsOutput {
	return o
}

func (o OrganizationMembersTimeoutsOutput) ToOrganizationMembersTimeoutsPtrOutput() OrganizationMembersTimeoutsPtrOutput {
	return o.ToOrganizationMembersTimeoutsPtrOutputWithContext(context.Background())
}

func (o OrganizationMembersTimeoutsOutput) ToOrganizationMembersTimeoutsPtrOutputWithContext(ctx context.Context) OrganizationMembersTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationMembersTimeouts) *OrganizationMembersTimeouts {
		return &v
	}).(OrganizationMembersTimeoutsPtrOutput)
}

func (o OrganizationMembersTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationMembersTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o OrganizationMembersTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationMembersTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o OrganizationMembersTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationMembersTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type OrganizationMembersTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (OrganizationMembersTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationMembersTimeouts)(nil)).Elem()
}

func (o OrganizationMembersTimeoutsPtrOutput) ToOrganizationMembersTimeoutsPtrOutput() OrganizationMembersTimeoutsPtrOutput {
	return o
}

func (o OrganizationMembersTimeoutsPtrOutput) ToOrganizationMembersTimeoutsPtrOutputWithContext(ctx context.Context) OrganizationMembersTimeoutsPtrOutput {
	return o
}

func (o OrganizationMembersTimeoutsPtrOutput) Elem() OrganizationMembersTimeoutsOutput {
	return o.ApplyT(func(v *OrganizationMembersTimeouts) OrganizationMembersTimeouts {
		if v != nil {
			return *v
		}
		var ret OrganizationMembersTimeouts
		return ret
	}).(OrganizationMembersTimeoutsOutput)
}

func (o OrganizationMembersTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationMembersTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationMembersTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationMembersTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o OrganizationMembersTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationMembersTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type RebalancingJobTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Read   *string `pulumi:"read"`
	Update *string `pulumi:"update"`
}

// RebalancingJobTimeoutsInput is an input type that accepts RebalancingJobTimeoutsArgs and RebalancingJobTimeoutsOutput values.
// You can construct a concrete instance of `RebalancingJobTimeoutsInput` via:
//
//	RebalancingJobTimeoutsArgs{...}
type RebalancingJobTimeoutsInput interface {
	pulumi.Input

	ToRebalancingJobTimeoutsOutput() RebalancingJobTimeoutsOutput
	ToRebalancingJobTimeoutsOutputWithContext(context.Context) RebalancingJobTimeoutsOutput
}

type RebalancingJobTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Read   pulumi.StringPtrInput `pulumi:"read"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (RebalancingJobTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingJobTimeouts)(nil)).Elem()
}

func (i RebalancingJobTimeoutsArgs) ToRebalancingJobTimeoutsOutput() RebalancingJobTimeoutsOutput {
	return i.ToRebalancingJobTimeoutsOutputWithContext(context.Background())
}

func (i RebalancingJobTimeoutsArgs) ToRebalancingJobTimeoutsOutputWithContext(ctx context.Context) RebalancingJobTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingJobTimeoutsOutput)
}

func (i RebalancingJobTimeoutsArgs) ToRebalancingJobTimeoutsPtrOutput() RebalancingJobTimeoutsPtrOutput {
	return i.ToRebalancingJobTimeoutsPtrOutputWithContext(context.Background())
}

func (i RebalancingJobTimeoutsArgs) ToRebalancingJobTimeoutsPtrOutputWithContext(ctx context.Context) RebalancingJobTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingJobTimeoutsOutput).ToRebalancingJobTimeoutsPtrOutputWithContext(ctx)
}

// RebalancingJobTimeoutsPtrInput is an input type that accepts RebalancingJobTimeoutsArgs, RebalancingJobTimeoutsPtr and RebalancingJobTimeoutsPtrOutput values.
// You can construct a concrete instance of `RebalancingJobTimeoutsPtrInput` via:
//
//	        RebalancingJobTimeoutsArgs{...}
//
//	or:
//
//	        nil
type RebalancingJobTimeoutsPtrInput interface {
	pulumi.Input

	ToRebalancingJobTimeoutsPtrOutput() RebalancingJobTimeoutsPtrOutput
	ToRebalancingJobTimeoutsPtrOutputWithContext(context.Context) RebalancingJobTimeoutsPtrOutput
}

type rebalancingJobTimeoutsPtrType RebalancingJobTimeoutsArgs

func RebalancingJobTimeoutsPtr(v *RebalancingJobTimeoutsArgs) RebalancingJobTimeoutsPtrInput {
	return (*rebalancingJobTimeoutsPtrType)(v)
}

func (*rebalancingJobTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingJobTimeouts)(nil)).Elem()
}

func (i *rebalancingJobTimeoutsPtrType) ToRebalancingJobTimeoutsPtrOutput() RebalancingJobTimeoutsPtrOutput {
	return i.ToRebalancingJobTimeoutsPtrOutputWithContext(context.Background())
}

func (i *rebalancingJobTimeoutsPtrType) ToRebalancingJobTimeoutsPtrOutputWithContext(ctx context.Context) RebalancingJobTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingJobTimeoutsPtrOutput)
}

type RebalancingJobTimeoutsOutput struct{ *pulumi.OutputState }

func (RebalancingJobTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingJobTimeouts)(nil)).Elem()
}

func (o RebalancingJobTimeoutsOutput) ToRebalancingJobTimeoutsOutput() RebalancingJobTimeoutsOutput {
	return o
}

func (o RebalancingJobTimeoutsOutput) ToRebalancingJobTimeoutsOutputWithContext(ctx context.Context) RebalancingJobTimeoutsOutput {
	return o
}

func (o RebalancingJobTimeoutsOutput) ToRebalancingJobTimeoutsPtrOutput() RebalancingJobTimeoutsPtrOutput {
	return o.ToRebalancingJobTimeoutsPtrOutputWithContext(context.Background())
}

func (o RebalancingJobTimeoutsOutput) ToRebalancingJobTimeoutsPtrOutputWithContext(ctx context.Context) RebalancingJobTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RebalancingJobTimeouts) *RebalancingJobTimeouts {
		return &v
	}).(RebalancingJobTimeoutsPtrOutput)
}

func (o RebalancingJobTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingJobTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o RebalancingJobTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingJobTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o RebalancingJobTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingJobTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

func (o RebalancingJobTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingJobTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type RebalancingJobTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (RebalancingJobTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingJobTimeouts)(nil)).Elem()
}

func (o RebalancingJobTimeoutsPtrOutput) ToRebalancingJobTimeoutsPtrOutput() RebalancingJobTimeoutsPtrOutput {
	return o
}

func (o RebalancingJobTimeoutsPtrOutput) ToRebalancingJobTimeoutsPtrOutputWithContext(ctx context.Context) RebalancingJobTimeoutsPtrOutput {
	return o
}

func (o RebalancingJobTimeoutsPtrOutput) Elem() RebalancingJobTimeoutsOutput {
	return o.ApplyT(func(v *RebalancingJobTimeouts) RebalancingJobTimeouts {
		if v != nil {
			return *v
		}
		var ret RebalancingJobTimeouts
		return ret
	}).(RebalancingJobTimeoutsOutput)
}

func (o RebalancingJobTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingJobTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o RebalancingJobTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingJobTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o RebalancingJobTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingJobTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func (o RebalancingJobTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingJobTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type RebalancingScheduleLaunchConfiguration struct {
	// When enabled rebalancing will also consider problematic pods (pods without controller, job pods, pods with removal-disabled annotation) as not-problematic.
	AggressiveMode *bool `pulumi:"aggressiveMode"`
	// Advanced configuration for aggressive rebalancing mode.
	AggressiveModeConfig *RebalancingScheduleLaunchConfigurationAggressiveModeConfig `pulumi:"aggressiveModeConfig"`
	ExecutionConditions  *RebalancingScheduleLaunchConfigurationExecutionConditions  `pulumi:"executionConditions"`
	// Defines whether the nodes that failed to get drained until a predefined timeout, will be kept with a rebalancing.cast.ai/status=drain-failed annotation instead of forcefully drained.
	KeepDrainTimeoutNodes *bool `pulumi:"keepDrainTimeoutNodes"`
	// Specifies amount of time since node creation before the node is allowed to be considered for automated rebalancing.
	NodeTtlSeconds *float64 `pulumi:"nodeTtlSeconds"`
	// Maximum number of nodes that will be selected for rebalancing.
	NumTargetedNodes *float64 `pulumi:"numTargetedNodes"`
	// Minimum number of nodes that should be kept in the cluster after rebalancing.
	RebalancingMinNodes *float64 `pulumi:"rebalancingMinNodes"`
	// Node selector in JSON format.
	Selector *string `pulumi:"selector"`
	// Defines the algorithm used to select the target nodes for rebalancing.
	TargetNodeSelectionAlgorithm *string `pulumi:"targetNodeSelectionAlgorithm"`
}

// RebalancingScheduleLaunchConfigurationInput is an input type that accepts RebalancingScheduleLaunchConfigurationArgs and RebalancingScheduleLaunchConfigurationOutput values.
// You can construct a concrete instance of `RebalancingScheduleLaunchConfigurationInput` via:
//
//	RebalancingScheduleLaunchConfigurationArgs{...}
type RebalancingScheduleLaunchConfigurationInput interface {
	pulumi.Input

	ToRebalancingScheduleLaunchConfigurationOutput() RebalancingScheduleLaunchConfigurationOutput
	ToRebalancingScheduleLaunchConfigurationOutputWithContext(context.Context) RebalancingScheduleLaunchConfigurationOutput
}

type RebalancingScheduleLaunchConfigurationArgs struct {
	// When enabled rebalancing will also consider problematic pods (pods without controller, job pods, pods with removal-disabled annotation) as not-problematic.
	AggressiveMode pulumi.BoolPtrInput `pulumi:"aggressiveMode"`
	// Advanced configuration for aggressive rebalancing mode.
	AggressiveModeConfig RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrInput `pulumi:"aggressiveModeConfig"`
	ExecutionConditions  RebalancingScheduleLaunchConfigurationExecutionConditionsPtrInput  `pulumi:"executionConditions"`
	// Defines whether the nodes that failed to get drained until a predefined timeout, will be kept with a rebalancing.cast.ai/status=drain-failed annotation instead of forcefully drained.
	KeepDrainTimeoutNodes pulumi.BoolPtrInput `pulumi:"keepDrainTimeoutNodes"`
	// Specifies amount of time since node creation before the node is allowed to be considered for automated rebalancing.
	NodeTtlSeconds pulumi.Float64PtrInput `pulumi:"nodeTtlSeconds"`
	// Maximum number of nodes that will be selected for rebalancing.
	NumTargetedNodes pulumi.Float64PtrInput `pulumi:"numTargetedNodes"`
	// Minimum number of nodes that should be kept in the cluster after rebalancing.
	RebalancingMinNodes pulumi.Float64PtrInput `pulumi:"rebalancingMinNodes"`
	// Node selector in JSON format.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// Defines the algorithm used to select the target nodes for rebalancing.
	TargetNodeSelectionAlgorithm pulumi.StringPtrInput `pulumi:"targetNodeSelectionAlgorithm"`
}

func (RebalancingScheduleLaunchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleLaunchConfiguration)(nil)).Elem()
}

func (i RebalancingScheduleLaunchConfigurationArgs) ToRebalancingScheduleLaunchConfigurationOutput() RebalancingScheduleLaunchConfigurationOutput {
	return i.ToRebalancingScheduleLaunchConfigurationOutputWithContext(context.Background())
}

func (i RebalancingScheduleLaunchConfigurationArgs) ToRebalancingScheduleLaunchConfigurationOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleLaunchConfigurationOutput)
}

func (i RebalancingScheduleLaunchConfigurationArgs) ToRebalancingScheduleLaunchConfigurationPtrOutput() RebalancingScheduleLaunchConfigurationPtrOutput {
	return i.ToRebalancingScheduleLaunchConfigurationPtrOutputWithContext(context.Background())
}

func (i RebalancingScheduleLaunchConfigurationArgs) ToRebalancingScheduleLaunchConfigurationPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleLaunchConfigurationOutput).ToRebalancingScheduleLaunchConfigurationPtrOutputWithContext(ctx)
}

// RebalancingScheduleLaunchConfigurationPtrInput is an input type that accepts RebalancingScheduleLaunchConfigurationArgs, RebalancingScheduleLaunchConfigurationPtr and RebalancingScheduleLaunchConfigurationPtrOutput values.
// You can construct a concrete instance of `RebalancingScheduleLaunchConfigurationPtrInput` via:
//
//	        RebalancingScheduleLaunchConfigurationArgs{...}
//
//	or:
//
//	        nil
type RebalancingScheduleLaunchConfigurationPtrInput interface {
	pulumi.Input

	ToRebalancingScheduleLaunchConfigurationPtrOutput() RebalancingScheduleLaunchConfigurationPtrOutput
	ToRebalancingScheduleLaunchConfigurationPtrOutputWithContext(context.Context) RebalancingScheduleLaunchConfigurationPtrOutput
}

type rebalancingScheduleLaunchConfigurationPtrType RebalancingScheduleLaunchConfigurationArgs

func RebalancingScheduleLaunchConfigurationPtr(v *RebalancingScheduleLaunchConfigurationArgs) RebalancingScheduleLaunchConfigurationPtrInput {
	return (*rebalancingScheduleLaunchConfigurationPtrType)(v)
}

func (*rebalancingScheduleLaunchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleLaunchConfiguration)(nil)).Elem()
}

func (i *rebalancingScheduleLaunchConfigurationPtrType) ToRebalancingScheduleLaunchConfigurationPtrOutput() RebalancingScheduleLaunchConfigurationPtrOutput {
	return i.ToRebalancingScheduleLaunchConfigurationPtrOutputWithContext(context.Background())
}

func (i *rebalancingScheduleLaunchConfigurationPtrType) ToRebalancingScheduleLaunchConfigurationPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleLaunchConfigurationPtrOutput)
}

type RebalancingScheduleLaunchConfigurationOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleLaunchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleLaunchConfiguration)(nil)).Elem()
}

func (o RebalancingScheduleLaunchConfigurationOutput) ToRebalancingScheduleLaunchConfigurationOutput() RebalancingScheduleLaunchConfigurationOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationOutput) ToRebalancingScheduleLaunchConfigurationOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationOutput) ToRebalancingScheduleLaunchConfigurationPtrOutput() RebalancingScheduleLaunchConfigurationPtrOutput {
	return o.ToRebalancingScheduleLaunchConfigurationPtrOutputWithContext(context.Background())
}

func (o RebalancingScheduleLaunchConfigurationOutput) ToRebalancingScheduleLaunchConfigurationPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RebalancingScheduleLaunchConfiguration) *RebalancingScheduleLaunchConfiguration {
		return &v
	}).(RebalancingScheduleLaunchConfigurationPtrOutput)
}

// When enabled rebalancing will also consider problematic pods (pods without controller, job pods, pods with removal-disabled annotation) as not-problematic.
func (o RebalancingScheduleLaunchConfigurationOutput) AggressiveMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfiguration) *bool { return v.AggressiveMode }).(pulumi.BoolPtrOutput)
}

// Advanced configuration for aggressive rebalancing mode.
func (o RebalancingScheduleLaunchConfigurationOutput) AggressiveModeConfig() RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfiguration) *RebalancingScheduleLaunchConfigurationAggressiveModeConfig {
		return v.AggressiveModeConfig
	}).(RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput)
}

func (o RebalancingScheduleLaunchConfigurationOutput) ExecutionConditions() RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfiguration) *RebalancingScheduleLaunchConfigurationExecutionConditions {
		return v.ExecutionConditions
	}).(RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput)
}

// Defines whether the nodes that failed to get drained until a predefined timeout, will be kept with a rebalancing.cast.ai/status=drain-failed annotation instead of forcefully drained.
func (o RebalancingScheduleLaunchConfigurationOutput) KeepDrainTimeoutNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfiguration) *bool { return v.KeepDrainTimeoutNodes }).(pulumi.BoolPtrOutput)
}

// Specifies amount of time since node creation before the node is allowed to be considered for automated rebalancing.
func (o RebalancingScheduleLaunchConfigurationOutput) NodeTtlSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfiguration) *float64 { return v.NodeTtlSeconds }).(pulumi.Float64PtrOutput)
}

// Maximum number of nodes that will be selected for rebalancing.
func (o RebalancingScheduleLaunchConfigurationOutput) NumTargetedNodes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfiguration) *float64 { return v.NumTargetedNodes }).(pulumi.Float64PtrOutput)
}

// Minimum number of nodes that should be kept in the cluster after rebalancing.
func (o RebalancingScheduleLaunchConfigurationOutput) RebalancingMinNodes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfiguration) *float64 { return v.RebalancingMinNodes }).(pulumi.Float64PtrOutput)
}

// Node selector in JSON format.
func (o RebalancingScheduleLaunchConfigurationOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfiguration) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// Defines the algorithm used to select the target nodes for rebalancing.
func (o RebalancingScheduleLaunchConfigurationOutput) TargetNodeSelectionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfiguration) *string { return v.TargetNodeSelectionAlgorithm }).(pulumi.StringPtrOutput)
}

type RebalancingScheduleLaunchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleLaunchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleLaunchConfiguration)(nil)).Elem()
}

func (o RebalancingScheduleLaunchConfigurationPtrOutput) ToRebalancingScheduleLaunchConfigurationPtrOutput() RebalancingScheduleLaunchConfigurationPtrOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationPtrOutput) ToRebalancingScheduleLaunchConfigurationPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationPtrOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationPtrOutput) Elem() RebalancingScheduleLaunchConfigurationOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) RebalancingScheduleLaunchConfiguration {
		if v != nil {
			return *v
		}
		var ret RebalancingScheduleLaunchConfiguration
		return ret
	}).(RebalancingScheduleLaunchConfigurationOutput)
}

// When enabled rebalancing will also consider problematic pods (pods without controller, job pods, pods with removal-disabled annotation) as not-problematic.
func (o RebalancingScheduleLaunchConfigurationPtrOutput) AggressiveMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AggressiveMode
	}).(pulumi.BoolPtrOutput)
}

// Advanced configuration for aggressive rebalancing mode.
func (o RebalancingScheduleLaunchConfigurationPtrOutput) AggressiveModeConfig() RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) *RebalancingScheduleLaunchConfigurationAggressiveModeConfig {
		if v == nil {
			return nil
		}
		return v.AggressiveModeConfig
	}).(RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput)
}

func (o RebalancingScheduleLaunchConfigurationPtrOutput) ExecutionConditions() RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) *RebalancingScheduleLaunchConfigurationExecutionConditions {
		if v == nil {
			return nil
		}
		return v.ExecutionConditions
	}).(RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput)
}

// Defines whether the nodes that failed to get drained until a predefined timeout, will be kept with a rebalancing.cast.ai/status=drain-failed annotation instead of forcefully drained.
func (o RebalancingScheduleLaunchConfigurationPtrOutput) KeepDrainTimeoutNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.KeepDrainTimeoutNodes
	}).(pulumi.BoolPtrOutput)
}

// Specifies amount of time since node creation before the node is allowed to be considered for automated rebalancing.
func (o RebalancingScheduleLaunchConfigurationPtrOutput) NodeTtlSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.NodeTtlSeconds
	}).(pulumi.Float64PtrOutput)
}

// Maximum number of nodes that will be selected for rebalancing.
func (o RebalancingScheduleLaunchConfigurationPtrOutput) NumTargetedNodes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.NumTargetedNodes
	}).(pulumi.Float64PtrOutput)
}

// Minimum number of nodes that should be kept in the cluster after rebalancing.
func (o RebalancingScheduleLaunchConfigurationPtrOutput) RebalancingMinNodes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.RebalancingMinNodes
	}).(pulumi.Float64PtrOutput)
}

// Node selector in JSON format.
func (o RebalancingScheduleLaunchConfigurationPtrOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(pulumi.StringPtrOutput)
}

// Defines the algorithm used to select the target nodes for rebalancing.
func (o RebalancingScheduleLaunchConfigurationPtrOutput) TargetNodeSelectionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TargetNodeSelectionAlgorithm
	}).(pulumi.StringPtrOutput)
}

type RebalancingScheduleLaunchConfigurationAggressiveModeConfig struct {
	// Rebalance workloads using local-path Persistent Volumes. THIS WILL RESULT IN DATA LOSS.
	IgnoreLocalPersistentVolumes bool `pulumi:"ignoreLocalPersistentVolumes"`
}

// RebalancingScheduleLaunchConfigurationAggressiveModeConfigInput is an input type that accepts RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs and RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput values.
// You can construct a concrete instance of `RebalancingScheduleLaunchConfigurationAggressiveModeConfigInput` via:
//
//	RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs{...}
type RebalancingScheduleLaunchConfigurationAggressiveModeConfigInput interface {
	pulumi.Input

	ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput() RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput
	ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutputWithContext(context.Context) RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput
}

type RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs struct {
	// Rebalance workloads using local-path Persistent Volumes. THIS WILL RESULT IN DATA LOSS.
	IgnoreLocalPersistentVolumes pulumi.BoolInput `pulumi:"ignoreLocalPersistentVolumes"`
}

func (RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleLaunchConfigurationAggressiveModeConfig)(nil)).Elem()
}

func (i RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput() RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return i.ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutputWithContext(context.Background())
}

func (i RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput)
}

func (i RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput() RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return i.ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutputWithContext(context.Background())
}

func (i RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput).ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutputWithContext(ctx)
}

// RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrInput is an input type that accepts RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs, RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtr and RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput values.
// You can construct a concrete instance of `RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrInput` via:
//
//	        RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs{...}
//
//	or:
//
//	        nil
type RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrInput interface {
	pulumi.Input

	ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput() RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput
	ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutputWithContext(context.Context) RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput
}

type rebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrType RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs

func RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtr(v *RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs) RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrInput {
	return (*rebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrType)(v)
}

func (*rebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleLaunchConfigurationAggressiveModeConfig)(nil)).Elem()
}

func (i *rebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrType) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput() RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return i.ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutputWithContext(context.Background())
}

func (i *rebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrType) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput)
}

type RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleLaunchConfigurationAggressiveModeConfig)(nil)).Elem()
}

func (o RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput() RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput() RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return o.ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutputWithContext(context.Background())
}

func (o RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RebalancingScheduleLaunchConfigurationAggressiveModeConfig) *RebalancingScheduleLaunchConfigurationAggressiveModeConfig {
		return &v
	}).(RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput)
}

// Rebalance workloads using local-path Persistent Volumes. THIS WILL RESULT IN DATA LOSS.
func (o RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) IgnoreLocalPersistentVolumes() pulumi.BoolOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfigurationAggressiveModeConfig) bool {
		return v.IgnoreLocalPersistentVolumes
	}).(pulumi.BoolOutput)
}

type RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleLaunchConfigurationAggressiveModeConfig)(nil)).Elem()
}

func (o RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput() RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput) ToRebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput) Elem() RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfigurationAggressiveModeConfig) RebalancingScheduleLaunchConfigurationAggressiveModeConfig {
		if v != nil {
			return *v
		}
		var ret RebalancingScheduleLaunchConfigurationAggressiveModeConfig
		return ret
	}).(RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput)
}

// Rebalance workloads using local-path Persistent Volumes. THIS WILL RESULT IN DATA LOSS.
func (o RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput) IgnoreLocalPersistentVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfigurationAggressiveModeConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.IgnoreLocalPersistentVolumes
	}).(pulumi.BoolPtrOutput)
}

type RebalancingScheduleLaunchConfigurationExecutionConditions struct {
	// The percentage of the predicted savings that must be achieved in order to fully execute the plan.If the savings are not achieved after creating the new nodes, the plan will fail and delete the created nodes.
	AchievedSavingsPercentage *float64 `pulumi:"achievedSavingsPercentage"`
	// Enables or disables the execution conditions.
	Enabled bool `pulumi:"enabled"`
}

// RebalancingScheduleLaunchConfigurationExecutionConditionsInput is an input type that accepts RebalancingScheduleLaunchConfigurationExecutionConditionsArgs and RebalancingScheduleLaunchConfigurationExecutionConditionsOutput values.
// You can construct a concrete instance of `RebalancingScheduleLaunchConfigurationExecutionConditionsInput` via:
//
//	RebalancingScheduleLaunchConfigurationExecutionConditionsArgs{...}
type RebalancingScheduleLaunchConfigurationExecutionConditionsInput interface {
	pulumi.Input

	ToRebalancingScheduleLaunchConfigurationExecutionConditionsOutput() RebalancingScheduleLaunchConfigurationExecutionConditionsOutput
	ToRebalancingScheduleLaunchConfigurationExecutionConditionsOutputWithContext(context.Context) RebalancingScheduleLaunchConfigurationExecutionConditionsOutput
}

type RebalancingScheduleLaunchConfigurationExecutionConditionsArgs struct {
	// The percentage of the predicted savings that must be achieved in order to fully execute the plan.If the savings are not achieved after creating the new nodes, the plan will fail and delete the created nodes.
	AchievedSavingsPercentage pulumi.Float64PtrInput `pulumi:"achievedSavingsPercentage"`
	// Enables or disables the execution conditions.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (RebalancingScheduleLaunchConfigurationExecutionConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleLaunchConfigurationExecutionConditions)(nil)).Elem()
}

func (i RebalancingScheduleLaunchConfigurationExecutionConditionsArgs) ToRebalancingScheduleLaunchConfigurationExecutionConditionsOutput() RebalancingScheduleLaunchConfigurationExecutionConditionsOutput {
	return i.ToRebalancingScheduleLaunchConfigurationExecutionConditionsOutputWithContext(context.Background())
}

func (i RebalancingScheduleLaunchConfigurationExecutionConditionsArgs) ToRebalancingScheduleLaunchConfigurationExecutionConditionsOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationExecutionConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleLaunchConfigurationExecutionConditionsOutput)
}

func (i RebalancingScheduleLaunchConfigurationExecutionConditionsArgs) ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput() RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return i.ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutputWithContext(context.Background())
}

func (i RebalancingScheduleLaunchConfigurationExecutionConditionsArgs) ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleLaunchConfigurationExecutionConditionsOutput).ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutputWithContext(ctx)
}

// RebalancingScheduleLaunchConfigurationExecutionConditionsPtrInput is an input type that accepts RebalancingScheduleLaunchConfigurationExecutionConditionsArgs, RebalancingScheduleLaunchConfigurationExecutionConditionsPtr and RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput values.
// You can construct a concrete instance of `RebalancingScheduleLaunchConfigurationExecutionConditionsPtrInput` via:
//
//	        RebalancingScheduleLaunchConfigurationExecutionConditionsArgs{...}
//
//	or:
//
//	        nil
type RebalancingScheduleLaunchConfigurationExecutionConditionsPtrInput interface {
	pulumi.Input

	ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput() RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput
	ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutputWithContext(context.Context) RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput
}

type rebalancingScheduleLaunchConfigurationExecutionConditionsPtrType RebalancingScheduleLaunchConfigurationExecutionConditionsArgs

func RebalancingScheduleLaunchConfigurationExecutionConditionsPtr(v *RebalancingScheduleLaunchConfigurationExecutionConditionsArgs) RebalancingScheduleLaunchConfigurationExecutionConditionsPtrInput {
	return (*rebalancingScheduleLaunchConfigurationExecutionConditionsPtrType)(v)
}

func (*rebalancingScheduleLaunchConfigurationExecutionConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleLaunchConfigurationExecutionConditions)(nil)).Elem()
}

func (i *rebalancingScheduleLaunchConfigurationExecutionConditionsPtrType) ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput() RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return i.ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutputWithContext(context.Background())
}

func (i *rebalancingScheduleLaunchConfigurationExecutionConditionsPtrType) ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput)
}

type RebalancingScheduleLaunchConfigurationExecutionConditionsOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleLaunchConfigurationExecutionConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleLaunchConfigurationExecutionConditions)(nil)).Elem()
}

func (o RebalancingScheduleLaunchConfigurationExecutionConditionsOutput) ToRebalancingScheduleLaunchConfigurationExecutionConditionsOutput() RebalancingScheduleLaunchConfigurationExecutionConditionsOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationExecutionConditionsOutput) ToRebalancingScheduleLaunchConfigurationExecutionConditionsOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationExecutionConditionsOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationExecutionConditionsOutput) ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput() RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return o.ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutputWithContext(context.Background())
}

func (o RebalancingScheduleLaunchConfigurationExecutionConditionsOutput) ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RebalancingScheduleLaunchConfigurationExecutionConditions) *RebalancingScheduleLaunchConfigurationExecutionConditions {
		return &v
	}).(RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput)
}

// The percentage of the predicted savings that must be achieved in order to fully execute the plan.If the savings are not achieved after creating the new nodes, the plan will fail and delete the created nodes.
func (o RebalancingScheduleLaunchConfigurationExecutionConditionsOutput) AchievedSavingsPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfigurationExecutionConditions) *float64 {
		return v.AchievedSavingsPercentage
	}).(pulumi.Float64PtrOutput)
}

// Enables or disables the execution conditions.
func (o RebalancingScheduleLaunchConfigurationExecutionConditionsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RebalancingScheduleLaunchConfigurationExecutionConditions) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleLaunchConfigurationExecutionConditions)(nil)).Elem()
}

func (o RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput) ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput() RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput) ToRebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutputWithContext(ctx context.Context) RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput {
	return o
}

func (o RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput) Elem() RebalancingScheduleLaunchConfigurationExecutionConditionsOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfigurationExecutionConditions) RebalancingScheduleLaunchConfigurationExecutionConditions {
		if v != nil {
			return *v
		}
		var ret RebalancingScheduleLaunchConfigurationExecutionConditions
		return ret
	}).(RebalancingScheduleLaunchConfigurationExecutionConditionsOutput)
}

// The percentage of the predicted savings that must be achieved in order to fully execute the plan.If the savings are not achieved after creating the new nodes, the plan will fail and delete the created nodes.
func (o RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput) AchievedSavingsPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfigurationExecutionConditions) *float64 {
		if v == nil {
			return nil
		}
		return v.AchievedSavingsPercentage
	}).(pulumi.Float64PtrOutput)
}

// Enables or disables the execution conditions.
func (o RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleLaunchConfigurationExecutionConditions) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type RebalancingScheduleSchedule struct {
	// Cron expression defining when the schedule should trigger.
	//
	//   The `cron` expression can optionally include the `CRON_TZ` variable at the beginning to specify the timezone in which the schedule should be interpreted.
	//
	//   Example:
	//
	//   In the example above, the `CRON_TZ` variable is set to "America/New_York" indicating that the cron expression should be interpreted in the Eastern Time (ET) timezone.
	//
	//   To retrieve a list of available timezone values, you can use the following API endpoint:
	//
	//   GET https://api.cast.ai/v1/time-zones
	//
	//   When using the `CRON_TZ` variable, ensure that the specified timezone is valid and supported by checking the list of available timezones from the API endpoint.  If the `CRON_TZ` variable is not specified, the cron expression will be interpreted in the UTC timezone.
	Cron string `pulumi:"cron"`
}

// RebalancingScheduleScheduleInput is an input type that accepts RebalancingScheduleScheduleArgs and RebalancingScheduleScheduleOutput values.
// You can construct a concrete instance of `RebalancingScheduleScheduleInput` via:
//
//	RebalancingScheduleScheduleArgs{...}
type RebalancingScheduleScheduleInput interface {
	pulumi.Input

	ToRebalancingScheduleScheduleOutput() RebalancingScheduleScheduleOutput
	ToRebalancingScheduleScheduleOutputWithContext(context.Context) RebalancingScheduleScheduleOutput
}

type RebalancingScheduleScheduleArgs struct {
	// Cron expression defining when the schedule should trigger.
	//
	//   The `cron` expression can optionally include the `CRON_TZ` variable at the beginning to specify the timezone in which the schedule should be interpreted.
	//
	//   Example:
	//
	//   In the example above, the `CRON_TZ` variable is set to "America/New_York" indicating that the cron expression should be interpreted in the Eastern Time (ET) timezone.
	//
	//   To retrieve a list of available timezone values, you can use the following API endpoint:
	//
	//   GET https://api.cast.ai/v1/time-zones
	//
	//   When using the `CRON_TZ` variable, ensure that the specified timezone is valid and supported by checking the list of available timezones from the API endpoint.  If the `CRON_TZ` variable is not specified, the cron expression will be interpreted in the UTC timezone.
	Cron pulumi.StringInput `pulumi:"cron"`
}

func (RebalancingScheduleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleSchedule)(nil)).Elem()
}

func (i RebalancingScheduleScheduleArgs) ToRebalancingScheduleScheduleOutput() RebalancingScheduleScheduleOutput {
	return i.ToRebalancingScheduleScheduleOutputWithContext(context.Background())
}

func (i RebalancingScheduleScheduleArgs) ToRebalancingScheduleScheduleOutputWithContext(ctx context.Context) RebalancingScheduleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleScheduleOutput)
}

func (i RebalancingScheduleScheduleArgs) ToRebalancingScheduleSchedulePtrOutput() RebalancingScheduleSchedulePtrOutput {
	return i.ToRebalancingScheduleSchedulePtrOutputWithContext(context.Background())
}

func (i RebalancingScheduleScheduleArgs) ToRebalancingScheduleSchedulePtrOutputWithContext(ctx context.Context) RebalancingScheduleSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleScheduleOutput).ToRebalancingScheduleSchedulePtrOutputWithContext(ctx)
}

// RebalancingScheduleSchedulePtrInput is an input type that accepts RebalancingScheduleScheduleArgs, RebalancingScheduleSchedulePtr and RebalancingScheduleSchedulePtrOutput values.
// You can construct a concrete instance of `RebalancingScheduleSchedulePtrInput` via:
//
//	        RebalancingScheduleScheduleArgs{...}
//
//	or:
//
//	        nil
type RebalancingScheduleSchedulePtrInput interface {
	pulumi.Input

	ToRebalancingScheduleSchedulePtrOutput() RebalancingScheduleSchedulePtrOutput
	ToRebalancingScheduleSchedulePtrOutputWithContext(context.Context) RebalancingScheduleSchedulePtrOutput
}

type rebalancingScheduleSchedulePtrType RebalancingScheduleScheduleArgs

func RebalancingScheduleSchedulePtr(v *RebalancingScheduleScheduleArgs) RebalancingScheduleSchedulePtrInput {
	return (*rebalancingScheduleSchedulePtrType)(v)
}

func (*rebalancingScheduleSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleSchedule)(nil)).Elem()
}

func (i *rebalancingScheduleSchedulePtrType) ToRebalancingScheduleSchedulePtrOutput() RebalancingScheduleSchedulePtrOutput {
	return i.ToRebalancingScheduleSchedulePtrOutputWithContext(context.Background())
}

func (i *rebalancingScheduleSchedulePtrType) ToRebalancingScheduleSchedulePtrOutputWithContext(ctx context.Context) RebalancingScheduleSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleSchedulePtrOutput)
}

type RebalancingScheduleScheduleOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleSchedule)(nil)).Elem()
}

func (o RebalancingScheduleScheduleOutput) ToRebalancingScheduleScheduleOutput() RebalancingScheduleScheduleOutput {
	return o
}

func (o RebalancingScheduleScheduleOutput) ToRebalancingScheduleScheduleOutputWithContext(ctx context.Context) RebalancingScheduleScheduleOutput {
	return o
}

func (o RebalancingScheduleScheduleOutput) ToRebalancingScheduleSchedulePtrOutput() RebalancingScheduleSchedulePtrOutput {
	return o.ToRebalancingScheduleSchedulePtrOutputWithContext(context.Background())
}

func (o RebalancingScheduleScheduleOutput) ToRebalancingScheduleSchedulePtrOutputWithContext(ctx context.Context) RebalancingScheduleSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RebalancingScheduleSchedule) *RebalancingScheduleSchedule {
		return &v
	}).(RebalancingScheduleSchedulePtrOutput)
}

// Cron expression defining when the schedule should trigger.
//
//	The `cron` expression can optionally include the `CRON_TZ` variable at the beginning to specify the timezone in which the schedule should be interpreted.
//
//	Example:
//
//	In the example above, the `CRON_TZ` variable is set to "America/New_York" indicating that the cron expression should be interpreted in the Eastern Time (ET) timezone.
//
//	To retrieve a list of available timezone values, you can use the following API endpoint:
//
//	GET https://api.cast.ai/v1/time-zones
//
//	When using the `CRON_TZ` variable, ensure that the specified timezone is valid and supported by checking the list of available timezones from the API endpoint.  If the `CRON_TZ` variable is not specified, the cron expression will be interpreted in the UTC timezone.
func (o RebalancingScheduleScheduleOutput) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v RebalancingScheduleSchedule) string { return v.Cron }).(pulumi.StringOutput)
}

type RebalancingScheduleSchedulePtrOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleSchedule)(nil)).Elem()
}

func (o RebalancingScheduleSchedulePtrOutput) ToRebalancingScheduleSchedulePtrOutput() RebalancingScheduleSchedulePtrOutput {
	return o
}

func (o RebalancingScheduleSchedulePtrOutput) ToRebalancingScheduleSchedulePtrOutputWithContext(ctx context.Context) RebalancingScheduleSchedulePtrOutput {
	return o
}

func (o RebalancingScheduleSchedulePtrOutput) Elem() RebalancingScheduleScheduleOutput {
	return o.ApplyT(func(v *RebalancingScheduleSchedule) RebalancingScheduleSchedule {
		if v != nil {
			return *v
		}
		var ret RebalancingScheduleSchedule
		return ret
	}).(RebalancingScheduleScheduleOutput)
}

// Cron expression defining when the schedule should trigger.
//
//	The `cron` expression can optionally include the `CRON_TZ` variable at the beginning to specify the timezone in which the schedule should be interpreted.
//
//	Example:
//
//	In the example above, the `CRON_TZ` variable is set to "America/New_York" indicating that the cron expression should be interpreted in the Eastern Time (ET) timezone.
//
//	To retrieve a list of available timezone values, you can use the following API endpoint:
//
//	GET https://api.cast.ai/v1/time-zones
//
//	When using the `CRON_TZ` variable, ensure that the specified timezone is valid and supported by checking the list of available timezones from the API endpoint.  If the `CRON_TZ` variable is not specified, the cron expression will be interpreted in the UTC timezone.
func (o RebalancingScheduleSchedulePtrOutput) Cron() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Cron
	}).(pulumi.StringPtrOutput)
}

type RebalancingScheduleTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Read   *string `pulumi:"read"`
	Update *string `pulumi:"update"`
}

// RebalancingScheduleTimeoutsInput is an input type that accepts RebalancingScheduleTimeoutsArgs and RebalancingScheduleTimeoutsOutput values.
// You can construct a concrete instance of `RebalancingScheduleTimeoutsInput` via:
//
//	RebalancingScheduleTimeoutsArgs{...}
type RebalancingScheduleTimeoutsInput interface {
	pulumi.Input

	ToRebalancingScheduleTimeoutsOutput() RebalancingScheduleTimeoutsOutput
	ToRebalancingScheduleTimeoutsOutputWithContext(context.Context) RebalancingScheduleTimeoutsOutput
}

type RebalancingScheduleTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Read   pulumi.StringPtrInput `pulumi:"read"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (RebalancingScheduleTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleTimeouts)(nil)).Elem()
}

func (i RebalancingScheduleTimeoutsArgs) ToRebalancingScheduleTimeoutsOutput() RebalancingScheduleTimeoutsOutput {
	return i.ToRebalancingScheduleTimeoutsOutputWithContext(context.Background())
}

func (i RebalancingScheduleTimeoutsArgs) ToRebalancingScheduleTimeoutsOutputWithContext(ctx context.Context) RebalancingScheduleTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleTimeoutsOutput)
}

func (i RebalancingScheduleTimeoutsArgs) ToRebalancingScheduleTimeoutsPtrOutput() RebalancingScheduleTimeoutsPtrOutput {
	return i.ToRebalancingScheduleTimeoutsPtrOutputWithContext(context.Background())
}

func (i RebalancingScheduleTimeoutsArgs) ToRebalancingScheduleTimeoutsPtrOutputWithContext(ctx context.Context) RebalancingScheduleTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleTimeoutsOutput).ToRebalancingScheduleTimeoutsPtrOutputWithContext(ctx)
}

// RebalancingScheduleTimeoutsPtrInput is an input type that accepts RebalancingScheduleTimeoutsArgs, RebalancingScheduleTimeoutsPtr and RebalancingScheduleTimeoutsPtrOutput values.
// You can construct a concrete instance of `RebalancingScheduleTimeoutsPtrInput` via:
//
//	        RebalancingScheduleTimeoutsArgs{...}
//
//	or:
//
//	        nil
type RebalancingScheduleTimeoutsPtrInput interface {
	pulumi.Input

	ToRebalancingScheduleTimeoutsPtrOutput() RebalancingScheduleTimeoutsPtrOutput
	ToRebalancingScheduleTimeoutsPtrOutputWithContext(context.Context) RebalancingScheduleTimeoutsPtrOutput
}

type rebalancingScheduleTimeoutsPtrType RebalancingScheduleTimeoutsArgs

func RebalancingScheduleTimeoutsPtr(v *RebalancingScheduleTimeoutsArgs) RebalancingScheduleTimeoutsPtrInput {
	return (*rebalancingScheduleTimeoutsPtrType)(v)
}

func (*rebalancingScheduleTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleTimeouts)(nil)).Elem()
}

func (i *rebalancingScheduleTimeoutsPtrType) ToRebalancingScheduleTimeoutsPtrOutput() RebalancingScheduleTimeoutsPtrOutput {
	return i.ToRebalancingScheduleTimeoutsPtrOutputWithContext(context.Background())
}

func (i *rebalancingScheduleTimeoutsPtrType) ToRebalancingScheduleTimeoutsPtrOutputWithContext(ctx context.Context) RebalancingScheduleTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleTimeoutsPtrOutput)
}

type RebalancingScheduleTimeoutsOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleTimeouts)(nil)).Elem()
}

func (o RebalancingScheduleTimeoutsOutput) ToRebalancingScheduleTimeoutsOutput() RebalancingScheduleTimeoutsOutput {
	return o
}

func (o RebalancingScheduleTimeoutsOutput) ToRebalancingScheduleTimeoutsOutputWithContext(ctx context.Context) RebalancingScheduleTimeoutsOutput {
	return o
}

func (o RebalancingScheduleTimeoutsOutput) ToRebalancingScheduleTimeoutsPtrOutput() RebalancingScheduleTimeoutsPtrOutput {
	return o.ToRebalancingScheduleTimeoutsPtrOutputWithContext(context.Background())
}

func (o RebalancingScheduleTimeoutsOutput) ToRebalancingScheduleTimeoutsPtrOutputWithContext(ctx context.Context) RebalancingScheduleTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RebalancingScheduleTimeouts) *RebalancingScheduleTimeouts {
		return &v
	}).(RebalancingScheduleTimeoutsPtrOutput)
}

func (o RebalancingScheduleTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o RebalancingScheduleTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o RebalancingScheduleTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

func (o RebalancingScheduleTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type RebalancingScheduleTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleTimeouts)(nil)).Elem()
}

func (o RebalancingScheduleTimeoutsPtrOutput) ToRebalancingScheduleTimeoutsPtrOutput() RebalancingScheduleTimeoutsPtrOutput {
	return o
}

func (o RebalancingScheduleTimeoutsPtrOutput) ToRebalancingScheduleTimeoutsPtrOutputWithContext(ctx context.Context) RebalancingScheduleTimeoutsPtrOutput {
	return o
}

func (o RebalancingScheduleTimeoutsPtrOutput) Elem() RebalancingScheduleTimeoutsOutput {
	return o.ApplyT(func(v *RebalancingScheduleTimeouts) RebalancingScheduleTimeouts {
		if v != nil {
			return *v
		}
		var ret RebalancingScheduleTimeouts
		return ret
	}).(RebalancingScheduleTimeoutsOutput)
}

func (o RebalancingScheduleTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o RebalancingScheduleTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o RebalancingScheduleTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func (o RebalancingScheduleTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type RebalancingScheduleTriggerConditions struct {
	// If true, the savings percentage will be ignored and the rebalancing will be triggered regardless of the savings percentage.
	IgnoreSavings *bool `pulumi:"ignoreSavings"`
	// Defines the minimum percentage of savings expected.
	SavingsPercentage float64 `pulumi:"savingsPercentage"`
}

// RebalancingScheduleTriggerConditionsInput is an input type that accepts RebalancingScheduleTriggerConditionsArgs and RebalancingScheduleTriggerConditionsOutput values.
// You can construct a concrete instance of `RebalancingScheduleTriggerConditionsInput` via:
//
//	RebalancingScheduleTriggerConditionsArgs{...}
type RebalancingScheduleTriggerConditionsInput interface {
	pulumi.Input

	ToRebalancingScheduleTriggerConditionsOutput() RebalancingScheduleTriggerConditionsOutput
	ToRebalancingScheduleTriggerConditionsOutputWithContext(context.Context) RebalancingScheduleTriggerConditionsOutput
}

type RebalancingScheduleTriggerConditionsArgs struct {
	// If true, the savings percentage will be ignored and the rebalancing will be triggered regardless of the savings percentage.
	IgnoreSavings pulumi.BoolPtrInput `pulumi:"ignoreSavings"`
	// Defines the minimum percentage of savings expected.
	SavingsPercentage pulumi.Float64Input `pulumi:"savingsPercentage"`
}

func (RebalancingScheduleTriggerConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleTriggerConditions)(nil)).Elem()
}

func (i RebalancingScheduleTriggerConditionsArgs) ToRebalancingScheduleTriggerConditionsOutput() RebalancingScheduleTriggerConditionsOutput {
	return i.ToRebalancingScheduleTriggerConditionsOutputWithContext(context.Background())
}

func (i RebalancingScheduleTriggerConditionsArgs) ToRebalancingScheduleTriggerConditionsOutputWithContext(ctx context.Context) RebalancingScheduleTriggerConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleTriggerConditionsOutput)
}

func (i RebalancingScheduleTriggerConditionsArgs) ToRebalancingScheduleTriggerConditionsPtrOutput() RebalancingScheduleTriggerConditionsPtrOutput {
	return i.ToRebalancingScheduleTriggerConditionsPtrOutputWithContext(context.Background())
}

func (i RebalancingScheduleTriggerConditionsArgs) ToRebalancingScheduleTriggerConditionsPtrOutputWithContext(ctx context.Context) RebalancingScheduleTriggerConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleTriggerConditionsOutput).ToRebalancingScheduleTriggerConditionsPtrOutputWithContext(ctx)
}

// RebalancingScheduleTriggerConditionsPtrInput is an input type that accepts RebalancingScheduleTriggerConditionsArgs, RebalancingScheduleTriggerConditionsPtr and RebalancingScheduleTriggerConditionsPtrOutput values.
// You can construct a concrete instance of `RebalancingScheduleTriggerConditionsPtrInput` via:
//
//	        RebalancingScheduleTriggerConditionsArgs{...}
//
//	or:
//
//	        nil
type RebalancingScheduleTriggerConditionsPtrInput interface {
	pulumi.Input

	ToRebalancingScheduleTriggerConditionsPtrOutput() RebalancingScheduleTriggerConditionsPtrOutput
	ToRebalancingScheduleTriggerConditionsPtrOutputWithContext(context.Context) RebalancingScheduleTriggerConditionsPtrOutput
}

type rebalancingScheduleTriggerConditionsPtrType RebalancingScheduleTriggerConditionsArgs

func RebalancingScheduleTriggerConditionsPtr(v *RebalancingScheduleTriggerConditionsArgs) RebalancingScheduleTriggerConditionsPtrInput {
	return (*rebalancingScheduleTriggerConditionsPtrType)(v)
}

func (*rebalancingScheduleTriggerConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleTriggerConditions)(nil)).Elem()
}

func (i *rebalancingScheduleTriggerConditionsPtrType) ToRebalancingScheduleTriggerConditionsPtrOutput() RebalancingScheduleTriggerConditionsPtrOutput {
	return i.ToRebalancingScheduleTriggerConditionsPtrOutputWithContext(context.Background())
}

func (i *rebalancingScheduleTriggerConditionsPtrType) ToRebalancingScheduleTriggerConditionsPtrOutputWithContext(ctx context.Context) RebalancingScheduleTriggerConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebalancingScheduleTriggerConditionsPtrOutput)
}

type RebalancingScheduleTriggerConditionsOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleTriggerConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RebalancingScheduleTriggerConditions)(nil)).Elem()
}

func (o RebalancingScheduleTriggerConditionsOutput) ToRebalancingScheduleTriggerConditionsOutput() RebalancingScheduleTriggerConditionsOutput {
	return o
}

func (o RebalancingScheduleTriggerConditionsOutput) ToRebalancingScheduleTriggerConditionsOutputWithContext(ctx context.Context) RebalancingScheduleTriggerConditionsOutput {
	return o
}

func (o RebalancingScheduleTriggerConditionsOutput) ToRebalancingScheduleTriggerConditionsPtrOutput() RebalancingScheduleTriggerConditionsPtrOutput {
	return o.ToRebalancingScheduleTriggerConditionsPtrOutputWithContext(context.Background())
}

func (o RebalancingScheduleTriggerConditionsOutput) ToRebalancingScheduleTriggerConditionsPtrOutputWithContext(ctx context.Context) RebalancingScheduleTriggerConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RebalancingScheduleTriggerConditions) *RebalancingScheduleTriggerConditions {
		return &v
	}).(RebalancingScheduleTriggerConditionsPtrOutput)
}

// If true, the savings percentage will be ignored and the rebalancing will be triggered regardless of the savings percentage.
func (o RebalancingScheduleTriggerConditionsOutput) IgnoreSavings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RebalancingScheduleTriggerConditions) *bool { return v.IgnoreSavings }).(pulumi.BoolPtrOutput)
}

// Defines the minimum percentage of savings expected.
func (o RebalancingScheduleTriggerConditionsOutput) SavingsPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v RebalancingScheduleTriggerConditions) float64 { return v.SavingsPercentage }).(pulumi.Float64Output)
}

type RebalancingScheduleTriggerConditionsPtrOutput struct{ *pulumi.OutputState }

func (RebalancingScheduleTriggerConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RebalancingScheduleTriggerConditions)(nil)).Elem()
}

func (o RebalancingScheduleTriggerConditionsPtrOutput) ToRebalancingScheduleTriggerConditionsPtrOutput() RebalancingScheduleTriggerConditionsPtrOutput {
	return o
}

func (o RebalancingScheduleTriggerConditionsPtrOutput) ToRebalancingScheduleTriggerConditionsPtrOutputWithContext(ctx context.Context) RebalancingScheduleTriggerConditionsPtrOutput {
	return o
}

func (o RebalancingScheduleTriggerConditionsPtrOutput) Elem() RebalancingScheduleTriggerConditionsOutput {
	return o.ApplyT(func(v *RebalancingScheduleTriggerConditions) RebalancingScheduleTriggerConditions {
		if v != nil {
			return *v
		}
		var ret RebalancingScheduleTriggerConditions
		return ret
	}).(RebalancingScheduleTriggerConditionsOutput)
}

// If true, the savings percentage will be ignored and the rebalancing will be triggered regardless of the savings percentage.
func (o RebalancingScheduleTriggerConditionsPtrOutput) IgnoreSavings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleTriggerConditions) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreSavings
	}).(pulumi.BoolPtrOutput)
}

// Defines the minimum percentage of savings expected.
func (o RebalancingScheduleTriggerConditionsPtrOutput) SavingsPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RebalancingScheduleTriggerConditions) *float64 {
		if v == nil {
			return nil
		}
		return &v.SavingsPercentage
	}).(pulumi.Float64PtrOutput)
}

type ReservationsReservation struct {
	Count        string `pulumi:"count"`
	EndDate      string `pulumi:"endDate"`
	InstanceType string `pulumi:"instanceType"`
	Name         string `pulumi:"name"`
	Price        string `pulumi:"price"`
	Provider     string `pulumi:"provider"`
	Region       string `pulumi:"region"`
	StartDate    string `pulumi:"startDate"`
	ZoneId       string `pulumi:"zoneId"`
	ZoneName     string `pulumi:"zoneName"`
}

// ReservationsReservationInput is an input type that accepts ReservationsReservationArgs and ReservationsReservationOutput values.
// You can construct a concrete instance of `ReservationsReservationInput` via:
//
//	ReservationsReservationArgs{...}
type ReservationsReservationInput interface {
	pulumi.Input

	ToReservationsReservationOutput() ReservationsReservationOutput
	ToReservationsReservationOutputWithContext(context.Context) ReservationsReservationOutput
}

type ReservationsReservationArgs struct {
	Count        pulumi.StringInput `pulumi:"count"`
	EndDate      pulumi.StringInput `pulumi:"endDate"`
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	Name         pulumi.StringInput `pulumi:"name"`
	Price        pulumi.StringInput `pulumi:"price"`
	Provider     pulumi.StringInput `pulumi:"provider"`
	Region       pulumi.StringInput `pulumi:"region"`
	StartDate    pulumi.StringInput `pulumi:"startDate"`
	ZoneId       pulumi.StringInput `pulumi:"zoneId"`
	ZoneName     pulumi.StringInput `pulumi:"zoneName"`
}

func (ReservationsReservationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationsReservation)(nil)).Elem()
}

func (i ReservationsReservationArgs) ToReservationsReservationOutput() ReservationsReservationOutput {
	return i.ToReservationsReservationOutputWithContext(context.Background())
}

func (i ReservationsReservationArgs) ToReservationsReservationOutputWithContext(ctx context.Context) ReservationsReservationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationsReservationOutput)
}

// ReservationsReservationArrayInput is an input type that accepts ReservationsReservationArray and ReservationsReservationArrayOutput values.
// You can construct a concrete instance of `ReservationsReservationArrayInput` via:
//
//	ReservationsReservationArray{ ReservationsReservationArgs{...} }
type ReservationsReservationArrayInput interface {
	pulumi.Input

	ToReservationsReservationArrayOutput() ReservationsReservationArrayOutput
	ToReservationsReservationArrayOutputWithContext(context.Context) ReservationsReservationArrayOutput
}

type ReservationsReservationArray []ReservationsReservationInput

func (ReservationsReservationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReservationsReservation)(nil)).Elem()
}

func (i ReservationsReservationArray) ToReservationsReservationArrayOutput() ReservationsReservationArrayOutput {
	return i.ToReservationsReservationArrayOutputWithContext(context.Background())
}

func (i ReservationsReservationArray) ToReservationsReservationArrayOutputWithContext(ctx context.Context) ReservationsReservationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationsReservationArrayOutput)
}

type ReservationsReservationOutput struct{ *pulumi.OutputState }

func (ReservationsReservationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationsReservation)(nil)).Elem()
}

func (o ReservationsReservationOutput) ToReservationsReservationOutput() ReservationsReservationOutput {
	return o
}

func (o ReservationsReservationOutput) ToReservationsReservationOutputWithContext(ctx context.Context) ReservationsReservationOutput {
	return o
}

func (o ReservationsReservationOutput) Count() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.Count }).(pulumi.StringOutput)
}

func (o ReservationsReservationOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.EndDate }).(pulumi.StringOutput)
}

func (o ReservationsReservationOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o ReservationsReservationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.Name }).(pulumi.StringOutput)
}

func (o ReservationsReservationOutput) Price() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.Price }).(pulumi.StringOutput)
}

func (o ReservationsReservationOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.Provider }).(pulumi.StringOutput)
}

func (o ReservationsReservationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.Region }).(pulumi.StringOutput)
}

func (o ReservationsReservationOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.StartDate }).(pulumi.StringOutput)
}

func (o ReservationsReservationOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.ZoneId }).(pulumi.StringOutput)
}

func (o ReservationsReservationOutput) ZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v ReservationsReservation) string { return v.ZoneName }).(pulumi.StringOutput)
}

type ReservationsReservationArrayOutput struct{ *pulumi.OutputState }

func (ReservationsReservationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReservationsReservation)(nil)).Elem()
}

func (o ReservationsReservationArrayOutput) ToReservationsReservationArrayOutput() ReservationsReservationArrayOutput {
	return o
}

func (o ReservationsReservationArrayOutput) ToReservationsReservationArrayOutputWithContext(ctx context.Context) ReservationsReservationArrayOutput {
	return o
}

func (o ReservationsReservationArrayOutput) Index(i pulumi.IntInput) ReservationsReservationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReservationsReservation {
		return vs[0].([]ReservationsReservation)[vs[1].(int)]
	}).(ReservationsReservationOutput)
}

type ReservationsTimeouts struct {
	Create *string `pulumi:"create"`
	Update *string `pulumi:"update"`
}

// ReservationsTimeoutsInput is an input type that accepts ReservationsTimeoutsArgs and ReservationsTimeoutsOutput values.
// You can construct a concrete instance of `ReservationsTimeoutsInput` via:
//
//	ReservationsTimeoutsArgs{...}
type ReservationsTimeoutsInput interface {
	pulumi.Input

	ToReservationsTimeoutsOutput() ReservationsTimeoutsOutput
	ToReservationsTimeoutsOutputWithContext(context.Context) ReservationsTimeoutsOutput
}

type ReservationsTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ReservationsTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationsTimeouts)(nil)).Elem()
}

func (i ReservationsTimeoutsArgs) ToReservationsTimeoutsOutput() ReservationsTimeoutsOutput {
	return i.ToReservationsTimeoutsOutputWithContext(context.Background())
}

func (i ReservationsTimeoutsArgs) ToReservationsTimeoutsOutputWithContext(ctx context.Context) ReservationsTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationsTimeoutsOutput)
}

func (i ReservationsTimeoutsArgs) ToReservationsTimeoutsPtrOutput() ReservationsTimeoutsPtrOutput {
	return i.ToReservationsTimeoutsPtrOutputWithContext(context.Background())
}

func (i ReservationsTimeoutsArgs) ToReservationsTimeoutsPtrOutputWithContext(ctx context.Context) ReservationsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationsTimeoutsOutput).ToReservationsTimeoutsPtrOutputWithContext(ctx)
}

// ReservationsTimeoutsPtrInput is an input type that accepts ReservationsTimeoutsArgs, ReservationsTimeoutsPtr and ReservationsTimeoutsPtrOutput values.
// You can construct a concrete instance of `ReservationsTimeoutsPtrInput` via:
//
//	        ReservationsTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ReservationsTimeoutsPtrInput interface {
	pulumi.Input

	ToReservationsTimeoutsPtrOutput() ReservationsTimeoutsPtrOutput
	ToReservationsTimeoutsPtrOutputWithContext(context.Context) ReservationsTimeoutsPtrOutput
}

type reservationsTimeoutsPtrType ReservationsTimeoutsArgs

func ReservationsTimeoutsPtr(v *ReservationsTimeoutsArgs) ReservationsTimeoutsPtrInput {
	return (*reservationsTimeoutsPtrType)(v)
}

func (*reservationsTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservationsTimeouts)(nil)).Elem()
}

func (i *reservationsTimeoutsPtrType) ToReservationsTimeoutsPtrOutput() ReservationsTimeoutsPtrOutput {
	return i.ToReservationsTimeoutsPtrOutputWithContext(context.Background())
}

func (i *reservationsTimeoutsPtrType) ToReservationsTimeoutsPtrOutputWithContext(ctx context.Context) ReservationsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservationsTimeoutsPtrOutput)
}

type ReservationsTimeoutsOutput struct{ *pulumi.OutputState }

func (ReservationsTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservationsTimeouts)(nil)).Elem()
}

func (o ReservationsTimeoutsOutput) ToReservationsTimeoutsOutput() ReservationsTimeoutsOutput {
	return o
}

func (o ReservationsTimeoutsOutput) ToReservationsTimeoutsOutputWithContext(ctx context.Context) ReservationsTimeoutsOutput {
	return o
}

func (o ReservationsTimeoutsOutput) ToReservationsTimeoutsPtrOutput() ReservationsTimeoutsPtrOutput {
	return o.ToReservationsTimeoutsPtrOutputWithContext(context.Background())
}

func (o ReservationsTimeoutsOutput) ToReservationsTimeoutsPtrOutputWithContext(ctx context.Context) ReservationsTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReservationsTimeouts) *ReservationsTimeouts {
		return &v
	}).(ReservationsTimeoutsPtrOutput)
}

func (o ReservationsTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReservationsTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o ReservationsTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReservationsTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ReservationsTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ReservationsTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservationsTimeouts)(nil)).Elem()
}

func (o ReservationsTimeoutsPtrOutput) ToReservationsTimeoutsPtrOutput() ReservationsTimeoutsPtrOutput {
	return o
}

func (o ReservationsTimeoutsPtrOutput) ToReservationsTimeoutsPtrOutputWithContext(ctx context.Context) ReservationsTimeoutsPtrOutput {
	return o
}

func (o ReservationsTimeoutsPtrOutput) Elem() ReservationsTimeoutsOutput {
	return o.ApplyT(func(v *ReservationsTimeouts) ReservationsTimeouts {
		if v != nil {
			return *v
		}
		var ret ReservationsTimeouts
		return ret
	}).(ReservationsTimeoutsOutput)
}

func (o ReservationsTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReservationsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o ReservationsTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReservationsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type RoleBindingsScope struct {
	// Scope of the role binding Supported values include: organization, cluster.
	Kind string `pulumi:"kind"`
	// ID of the scope resource.
	ResourceId string `pulumi:"resourceId"`
}

// RoleBindingsScopeInput is an input type that accepts RoleBindingsScopeArgs and RoleBindingsScopeOutput values.
// You can construct a concrete instance of `RoleBindingsScopeInput` via:
//
//	RoleBindingsScopeArgs{...}
type RoleBindingsScopeInput interface {
	pulumi.Input

	ToRoleBindingsScopeOutput() RoleBindingsScopeOutput
	ToRoleBindingsScopeOutputWithContext(context.Context) RoleBindingsScopeOutput
}

type RoleBindingsScopeArgs struct {
	// Scope of the role binding Supported values include: organization, cluster.
	Kind pulumi.StringInput `pulumi:"kind"`
	// ID of the scope resource.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (RoleBindingsScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleBindingsScope)(nil)).Elem()
}

func (i RoleBindingsScopeArgs) ToRoleBindingsScopeOutput() RoleBindingsScopeOutput {
	return i.ToRoleBindingsScopeOutputWithContext(context.Background())
}

func (i RoleBindingsScopeArgs) ToRoleBindingsScopeOutputWithContext(ctx context.Context) RoleBindingsScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsScopeOutput)
}

func (i RoleBindingsScopeArgs) ToRoleBindingsScopePtrOutput() RoleBindingsScopePtrOutput {
	return i.ToRoleBindingsScopePtrOutputWithContext(context.Background())
}

func (i RoleBindingsScopeArgs) ToRoleBindingsScopePtrOutputWithContext(ctx context.Context) RoleBindingsScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsScopeOutput).ToRoleBindingsScopePtrOutputWithContext(ctx)
}

// RoleBindingsScopePtrInput is an input type that accepts RoleBindingsScopeArgs, RoleBindingsScopePtr and RoleBindingsScopePtrOutput values.
// You can construct a concrete instance of `RoleBindingsScopePtrInput` via:
//
//	        RoleBindingsScopeArgs{...}
//
//	or:
//
//	        nil
type RoleBindingsScopePtrInput interface {
	pulumi.Input

	ToRoleBindingsScopePtrOutput() RoleBindingsScopePtrOutput
	ToRoleBindingsScopePtrOutputWithContext(context.Context) RoleBindingsScopePtrOutput
}

type roleBindingsScopePtrType RoleBindingsScopeArgs

func RoleBindingsScopePtr(v *RoleBindingsScopeArgs) RoleBindingsScopePtrInput {
	return (*roleBindingsScopePtrType)(v)
}

func (*roleBindingsScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleBindingsScope)(nil)).Elem()
}

func (i *roleBindingsScopePtrType) ToRoleBindingsScopePtrOutput() RoleBindingsScopePtrOutput {
	return i.ToRoleBindingsScopePtrOutputWithContext(context.Background())
}

func (i *roleBindingsScopePtrType) ToRoleBindingsScopePtrOutputWithContext(ctx context.Context) RoleBindingsScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsScopePtrOutput)
}

type RoleBindingsScopeOutput struct{ *pulumi.OutputState }

func (RoleBindingsScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleBindingsScope)(nil)).Elem()
}

func (o RoleBindingsScopeOutput) ToRoleBindingsScopeOutput() RoleBindingsScopeOutput {
	return o
}

func (o RoleBindingsScopeOutput) ToRoleBindingsScopeOutputWithContext(ctx context.Context) RoleBindingsScopeOutput {
	return o
}

func (o RoleBindingsScopeOutput) ToRoleBindingsScopePtrOutput() RoleBindingsScopePtrOutput {
	return o.ToRoleBindingsScopePtrOutputWithContext(context.Background())
}

func (o RoleBindingsScopeOutput) ToRoleBindingsScopePtrOutputWithContext(ctx context.Context) RoleBindingsScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoleBindingsScope) *RoleBindingsScope {
		return &v
	}).(RoleBindingsScopePtrOutput)
}

// Scope of the role binding Supported values include: organization, cluster.
func (o RoleBindingsScopeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RoleBindingsScope) string { return v.Kind }).(pulumi.StringOutput)
}

// ID of the scope resource.
func (o RoleBindingsScopeOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v RoleBindingsScope) string { return v.ResourceId }).(pulumi.StringOutput)
}

type RoleBindingsScopePtrOutput struct{ *pulumi.OutputState }

func (RoleBindingsScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleBindingsScope)(nil)).Elem()
}

func (o RoleBindingsScopePtrOutput) ToRoleBindingsScopePtrOutput() RoleBindingsScopePtrOutput {
	return o
}

func (o RoleBindingsScopePtrOutput) ToRoleBindingsScopePtrOutputWithContext(ctx context.Context) RoleBindingsScopePtrOutput {
	return o
}

func (o RoleBindingsScopePtrOutput) Elem() RoleBindingsScopeOutput {
	return o.ApplyT(func(v *RoleBindingsScope) RoleBindingsScope {
		if v != nil {
			return *v
		}
		var ret RoleBindingsScope
		return ret
	}).(RoleBindingsScopeOutput)
}

// Scope of the role binding Supported values include: organization, cluster.
func (o RoleBindingsScopePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleBindingsScope) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// ID of the scope resource.
func (o RoleBindingsScopePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleBindingsScope) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

type RoleBindingsSubject struct {
	Subjects []RoleBindingsSubjectSubject `pulumi:"subjects"`
}

// RoleBindingsSubjectInput is an input type that accepts RoleBindingsSubjectArgs and RoleBindingsSubjectOutput values.
// You can construct a concrete instance of `RoleBindingsSubjectInput` via:
//
//	RoleBindingsSubjectArgs{...}
type RoleBindingsSubjectInput interface {
	pulumi.Input

	ToRoleBindingsSubjectOutput() RoleBindingsSubjectOutput
	ToRoleBindingsSubjectOutputWithContext(context.Context) RoleBindingsSubjectOutput
}

type RoleBindingsSubjectArgs struct {
	Subjects RoleBindingsSubjectSubjectArrayInput `pulumi:"subjects"`
}

func (RoleBindingsSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleBindingsSubject)(nil)).Elem()
}

func (i RoleBindingsSubjectArgs) ToRoleBindingsSubjectOutput() RoleBindingsSubjectOutput {
	return i.ToRoleBindingsSubjectOutputWithContext(context.Background())
}

func (i RoleBindingsSubjectArgs) ToRoleBindingsSubjectOutputWithContext(ctx context.Context) RoleBindingsSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsSubjectOutput)
}

// RoleBindingsSubjectArrayInput is an input type that accepts RoleBindingsSubjectArray and RoleBindingsSubjectArrayOutput values.
// You can construct a concrete instance of `RoleBindingsSubjectArrayInput` via:
//
//	RoleBindingsSubjectArray{ RoleBindingsSubjectArgs{...} }
type RoleBindingsSubjectArrayInput interface {
	pulumi.Input

	ToRoleBindingsSubjectArrayOutput() RoleBindingsSubjectArrayOutput
	ToRoleBindingsSubjectArrayOutputWithContext(context.Context) RoleBindingsSubjectArrayOutput
}

type RoleBindingsSubjectArray []RoleBindingsSubjectInput

func (RoleBindingsSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleBindingsSubject)(nil)).Elem()
}

func (i RoleBindingsSubjectArray) ToRoleBindingsSubjectArrayOutput() RoleBindingsSubjectArrayOutput {
	return i.ToRoleBindingsSubjectArrayOutputWithContext(context.Background())
}

func (i RoleBindingsSubjectArray) ToRoleBindingsSubjectArrayOutputWithContext(ctx context.Context) RoleBindingsSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsSubjectArrayOutput)
}

type RoleBindingsSubjectOutput struct{ *pulumi.OutputState }

func (RoleBindingsSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleBindingsSubject)(nil)).Elem()
}

func (o RoleBindingsSubjectOutput) ToRoleBindingsSubjectOutput() RoleBindingsSubjectOutput {
	return o
}

func (o RoleBindingsSubjectOutput) ToRoleBindingsSubjectOutputWithContext(ctx context.Context) RoleBindingsSubjectOutput {
	return o
}

func (o RoleBindingsSubjectOutput) Subjects() RoleBindingsSubjectSubjectArrayOutput {
	return o.ApplyT(func(v RoleBindingsSubject) []RoleBindingsSubjectSubject { return v.Subjects }).(RoleBindingsSubjectSubjectArrayOutput)
}

type RoleBindingsSubjectArrayOutput struct{ *pulumi.OutputState }

func (RoleBindingsSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleBindingsSubject)(nil)).Elem()
}

func (o RoleBindingsSubjectArrayOutput) ToRoleBindingsSubjectArrayOutput() RoleBindingsSubjectArrayOutput {
	return o
}

func (o RoleBindingsSubjectArrayOutput) ToRoleBindingsSubjectArrayOutputWithContext(ctx context.Context) RoleBindingsSubjectArrayOutput {
	return o
}

func (o RoleBindingsSubjectArrayOutput) Index(i pulumi.IntInput) RoleBindingsSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleBindingsSubject {
		return vs[0].([]RoleBindingsSubject)[vs[1].(int)]
	}).(RoleBindingsSubjectOutput)
}

type RoleBindingsSubjectSubject struct {
	// Optional, required only if `kind` is `group`.
	GroupId *string `pulumi:"groupId"`
	// Kind of the subject. Supported values include: user, service_account, group.
	Kind string `pulumi:"kind"`
	// Optional, required only if `kind` is `service_account`.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// Optional, required only if `kind` is `user`.
	UserId *string `pulumi:"userId"`
}

// RoleBindingsSubjectSubjectInput is an input type that accepts RoleBindingsSubjectSubjectArgs and RoleBindingsSubjectSubjectOutput values.
// You can construct a concrete instance of `RoleBindingsSubjectSubjectInput` via:
//
//	RoleBindingsSubjectSubjectArgs{...}
type RoleBindingsSubjectSubjectInput interface {
	pulumi.Input

	ToRoleBindingsSubjectSubjectOutput() RoleBindingsSubjectSubjectOutput
	ToRoleBindingsSubjectSubjectOutputWithContext(context.Context) RoleBindingsSubjectSubjectOutput
}

type RoleBindingsSubjectSubjectArgs struct {
	// Optional, required only if `kind` is `group`.
	GroupId pulumi.StringPtrInput `pulumi:"groupId"`
	// Kind of the subject. Supported values include: user, service_account, group.
	Kind pulumi.StringInput `pulumi:"kind"`
	// Optional, required only if `kind` is `service_account`.
	ServiceAccountId pulumi.StringPtrInput `pulumi:"serviceAccountId"`
	// Optional, required only if `kind` is `user`.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (RoleBindingsSubjectSubjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleBindingsSubjectSubject)(nil)).Elem()
}

func (i RoleBindingsSubjectSubjectArgs) ToRoleBindingsSubjectSubjectOutput() RoleBindingsSubjectSubjectOutput {
	return i.ToRoleBindingsSubjectSubjectOutputWithContext(context.Background())
}

func (i RoleBindingsSubjectSubjectArgs) ToRoleBindingsSubjectSubjectOutputWithContext(ctx context.Context) RoleBindingsSubjectSubjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsSubjectSubjectOutput)
}

// RoleBindingsSubjectSubjectArrayInput is an input type that accepts RoleBindingsSubjectSubjectArray and RoleBindingsSubjectSubjectArrayOutput values.
// You can construct a concrete instance of `RoleBindingsSubjectSubjectArrayInput` via:
//
//	RoleBindingsSubjectSubjectArray{ RoleBindingsSubjectSubjectArgs{...} }
type RoleBindingsSubjectSubjectArrayInput interface {
	pulumi.Input

	ToRoleBindingsSubjectSubjectArrayOutput() RoleBindingsSubjectSubjectArrayOutput
	ToRoleBindingsSubjectSubjectArrayOutputWithContext(context.Context) RoleBindingsSubjectSubjectArrayOutput
}

type RoleBindingsSubjectSubjectArray []RoleBindingsSubjectSubjectInput

func (RoleBindingsSubjectSubjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleBindingsSubjectSubject)(nil)).Elem()
}

func (i RoleBindingsSubjectSubjectArray) ToRoleBindingsSubjectSubjectArrayOutput() RoleBindingsSubjectSubjectArrayOutput {
	return i.ToRoleBindingsSubjectSubjectArrayOutputWithContext(context.Background())
}

func (i RoleBindingsSubjectSubjectArray) ToRoleBindingsSubjectSubjectArrayOutputWithContext(ctx context.Context) RoleBindingsSubjectSubjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsSubjectSubjectArrayOutput)
}

type RoleBindingsSubjectSubjectOutput struct{ *pulumi.OutputState }

func (RoleBindingsSubjectSubjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleBindingsSubjectSubject)(nil)).Elem()
}

func (o RoleBindingsSubjectSubjectOutput) ToRoleBindingsSubjectSubjectOutput() RoleBindingsSubjectSubjectOutput {
	return o
}

func (o RoleBindingsSubjectSubjectOutput) ToRoleBindingsSubjectSubjectOutputWithContext(ctx context.Context) RoleBindingsSubjectSubjectOutput {
	return o
}

// Optional, required only if `kind` is `group`.
func (o RoleBindingsSubjectSubjectOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleBindingsSubjectSubject) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Kind of the subject. Supported values include: user, service_account, group.
func (o RoleBindingsSubjectSubjectOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v RoleBindingsSubjectSubject) string { return v.Kind }).(pulumi.StringOutput)
}

// Optional, required only if `kind` is `service_account`.
func (o RoleBindingsSubjectSubjectOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleBindingsSubjectSubject) *string { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

// Optional, required only if `kind` is `user`.
func (o RoleBindingsSubjectSubjectOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleBindingsSubjectSubject) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type RoleBindingsSubjectSubjectArrayOutput struct{ *pulumi.OutputState }

func (RoleBindingsSubjectSubjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleBindingsSubjectSubject)(nil)).Elem()
}

func (o RoleBindingsSubjectSubjectArrayOutput) ToRoleBindingsSubjectSubjectArrayOutput() RoleBindingsSubjectSubjectArrayOutput {
	return o
}

func (o RoleBindingsSubjectSubjectArrayOutput) ToRoleBindingsSubjectSubjectArrayOutputWithContext(ctx context.Context) RoleBindingsSubjectSubjectArrayOutput {
	return o
}

func (o RoleBindingsSubjectSubjectArrayOutput) Index(i pulumi.IntInput) RoleBindingsSubjectSubjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleBindingsSubjectSubject {
		return vs[0].([]RoleBindingsSubjectSubject)[vs[1].(int)]
	}).(RoleBindingsSubjectSubjectOutput)
}

type RoleBindingsTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

// RoleBindingsTimeoutsInput is an input type that accepts RoleBindingsTimeoutsArgs and RoleBindingsTimeoutsOutput values.
// You can construct a concrete instance of `RoleBindingsTimeoutsInput` via:
//
//	RoleBindingsTimeoutsArgs{...}
type RoleBindingsTimeoutsInput interface {
	pulumi.Input

	ToRoleBindingsTimeoutsOutput() RoleBindingsTimeoutsOutput
	ToRoleBindingsTimeoutsOutputWithContext(context.Context) RoleBindingsTimeoutsOutput
}

type RoleBindingsTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (RoleBindingsTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleBindingsTimeouts)(nil)).Elem()
}

func (i RoleBindingsTimeoutsArgs) ToRoleBindingsTimeoutsOutput() RoleBindingsTimeoutsOutput {
	return i.ToRoleBindingsTimeoutsOutputWithContext(context.Background())
}

func (i RoleBindingsTimeoutsArgs) ToRoleBindingsTimeoutsOutputWithContext(ctx context.Context) RoleBindingsTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsTimeoutsOutput)
}

func (i RoleBindingsTimeoutsArgs) ToRoleBindingsTimeoutsPtrOutput() RoleBindingsTimeoutsPtrOutput {
	return i.ToRoleBindingsTimeoutsPtrOutputWithContext(context.Background())
}

func (i RoleBindingsTimeoutsArgs) ToRoleBindingsTimeoutsPtrOutputWithContext(ctx context.Context) RoleBindingsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsTimeoutsOutput).ToRoleBindingsTimeoutsPtrOutputWithContext(ctx)
}

// RoleBindingsTimeoutsPtrInput is an input type that accepts RoleBindingsTimeoutsArgs, RoleBindingsTimeoutsPtr and RoleBindingsTimeoutsPtrOutput values.
// You can construct a concrete instance of `RoleBindingsTimeoutsPtrInput` via:
//
//	        RoleBindingsTimeoutsArgs{...}
//
//	or:
//
//	        nil
type RoleBindingsTimeoutsPtrInput interface {
	pulumi.Input

	ToRoleBindingsTimeoutsPtrOutput() RoleBindingsTimeoutsPtrOutput
	ToRoleBindingsTimeoutsPtrOutputWithContext(context.Context) RoleBindingsTimeoutsPtrOutput
}

type roleBindingsTimeoutsPtrType RoleBindingsTimeoutsArgs

func RoleBindingsTimeoutsPtr(v *RoleBindingsTimeoutsArgs) RoleBindingsTimeoutsPtrInput {
	return (*roleBindingsTimeoutsPtrType)(v)
}

func (*roleBindingsTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleBindingsTimeouts)(nil)).Elem()
}

func (i *roleBindingsTimeoutsPtrType) ToRoleBindingsTimeoutsPtrOutput() RoleBindingsTimeoutsPtrOutput {
	return i.ToRoleBindingsTimeoutsPtrOutputWithContext(context.Background())
}

func (i *roleBindingsTimeoutsPtrType) ToRoleBindingsTimeoutsPtrOutputWithContext(ctx context.Context) RoleBindingsTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleBindingsTimeoutsPtrOutput)
}

type RoleBindingsTimeoutsOutput struct{ *pulumi.OutputState }

func (RoleBindingsTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleBindingsTimeouts)(nil)).Elem()
}

func (o RoleBindingsTimeoutsOutput) ToRoleBindingsTimeoutsOutput() RoleBindingsTimeoutsOutput {
	return o
}

func (o RoleBindingsTimeoutsOutput) ToRoleBindingsTimeoutsOutputWithContext(ctx context.Context) RoleBindingsTimeoutsOutput {
	return o
}

func (o RoleBindingsTimeoutsOutput) ToRoleBindingsTimeoutsPtrOutput() RoleBindingsTimeoutsPtrOutput {
	return o.ToRoleBindingsTimeoutsPtrOutputWithContext(context.Background())
}

func (o RoleBindingsTimeoutsOutput) ToRoleBindingsTimeoutsPtrOutputWithContext(ctx context.Context) RoleBindingsTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RoleBindingsTimeouts) *RoleBindingsTimeouts {
		return &v
	}).(RoleBindingsTimeoutsPtrOutput)
}

func (o RoleBindingsTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleBindingsTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o RoleBindingsTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleBindingsTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o RoleBindingsTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleBindingsTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type RoleBindingsTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (RoleBindingsTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoleBindingsTimeouts)(nil)).Elem()
}

func (o RoleBindingsTimeoutsPtrOutput) ToRoleBindingsTimeoutsPtrOutput() RoleBindingsTimeoutsPtrOutput {
	return o
}

func (o RoleBindingsTimeoutsPtrOutput) ToRoleBindingsTimeoutsPtrOutputWithContext(ctx context.Context) RoleBindingsTimeoutsPtrOutput {
	return o
}

func (o RoleBindingsTimeoutsPtrOutput) Elem() RoleBindingsTimeoutsOutput {
	return o.ApplyT(func(v *RoleBindingsTimeouts) RoleBindingsTimeouts {
		if v != nil {
			return *v
		}
		var ret RoleBindingsTimeouts
		return ret
	}).(RoleBindingsTimeoutsOutput)
}

func (o RoleBindingsTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleBindingsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o RoleBindingsTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleBindingsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o RoleBindingsTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoleBindingsTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type ServiceAccountAuthor struct {
	Email string `pulumi:"email"`
	Id    string `pulumi:"id"`
	Kind  string `pulumi:"kind"`
}

// ServiceAccountAuthorInput is an input type that accepts ServiceAccountAuthorArgs and ServiceAccountAuthorOutput values.
// You can construct a concrete instance of `ServiceAccountAuthorInput` via:
//
//	ServiceAccountAuthorArgs{...}
type ServiceAccountAuthorInput interface {
	pulumi.Input

	ToServiceAccountAuthorOutput() ServiceAccountAuthorOutput
	ToServiceAccountAuthorOutputWithContext(context.Context) ServiceAccountAuthorOutput
}

type ServiceAccountAuthorArgs struct {
	Email pulumi.StringInput `pulumi:"email"`
	Id    pulumi.StringInput `pulumi:"id"`
	Kind  pulumi.StringInput `pulumi:"kind"`
}

func (ServiceAccountAuthorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountAuthor)(nil)).Elem()
}

func (i ServiceAccountAuthorArgs) ToServiceAccountAuthorOutput() ServiceAccountAuthorOutput {
	return i.ToServiceAccountAuthorOutputWithContext(context.Background())
}

func (i ServiceAccountAuthorArgs) ToServiceAccountAuthorOutputWithContext(ctx context.Context) ServiceAccountAuthorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountAuthorOutput)
}

// ServiceAccountAuthorArrayInput is an input type that accepts ServiceAccountAuthorArray and ServiceAccountAuthorArrayOutput values.
// You can construct a concrete instance of `ServiceAccountAuthorArrayInput` via:
//
//	ServiceAccountAuthorArray{ ServiceAccountAuthorArgs{...} }
type ServiceAccountAuthorArrayInput interface {
	pulumi.Input

	ToServiceAccountAuthorArrayOutput() ServiceAccountAuthorArrayOutput
	ToServiceAccountAuthorArrayOutputWithContext(context.Context) ServiceAccountAuthorArrayOutput
}

type ServiceAccountAuthorArray []ServiceAccountAuthorInput

func (ServiceAccountAuthorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAccountAuthor)(nil)).Elem()
}

func (i ServiceAccountAuthorArray) ToServiceAccountAuthorArrayOutput() ServiceAccountAuthorArrayOutput {
	return i.ToServiceAccountAuthorArrayOutputWithContext(context.Background())
}

func (i ServiceAccountAuthorArray) ToServiceAccountAuthorArrayOutputWithContext(ctx context.Context) ServiceAccountAuthorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountAuthorArrayOutput)
}

type ServiceAccountAuthorOutput struct{ *pulumi.OutputState }

func (ServiceAccountAuthorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountAuthor)(nil)).Elem()
}

func (o ServiceAccountAuthorOutput) ToServiceAccountAuthorOutput() ServiceAccountAuthorOutput {
	return o
}

func (o ServiceAccountAuthorOutput) ToServiceAccountAuthorOutputWithContext(ctx context.Context) ServiceAccountAuthorOutput {
	return o
}

func (o ServiceAccountAuthorOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAccountAuthor) string { return v.Email }).(pulumi.StringOutput)
}

func (o ServiceAccountAuthorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAccountAuthor) string { return v.Id }).(pulumi.StringOutput)
}

func (o ServiceAccountAuthorOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAccountAuthor) string { return v.Kind }).(pulumi.StringOutput)
}

type ServiceAccountAuthorArrayOutput struct{ *pulumi.OutputState }

func (ServiceAccountAuthorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAccountAuthor)(nil)).Elem()
}

func (o ServiceAccountAuthorArrayOutput) ToServiceAccountAuthorArrayOutput() ServiceAccountAuthorArrayOutput {
	return o
}

func (o ServiceAccountAuthorArrayOutput) ToServiceAccountAuthorArrayOutputWithContext(ctx context.Context) ServiceAccountAuthorArrayOutput {
	return o
}

func (o ServiceAccountAuthorArrayOutput) Index(i pulumi.IntInput) ServiceAccountAuthorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAccountAuthor {
		return vs[0].([]ServiceAccountAuthor)[vs[1].(int)]
	}).(ServiceAccountAuthorOutput)
}

type ServiceAccountKeyTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Read   *string `pulumi:"read"`
	Update *string `pulumi:"update"`
}

// ServiceAccountKeyTimeoutsInput is an input type that accepts ServiceAccountKeyTimeoutsArgs and ServiceAccountKeyTimeoutsOutput values.
// You can construct a concrete instance of `ServiceAccountKeyTimeoutsInput` via:
//
//	ServiceAccountKeyTimeoutsArgs{...}
type ServiceAccountKeyTimeoutsInput interface {
	pulumi.Input

	ToServiceAccountKeyTimeoutsOutput() ServiceAccountKeyTimeoutsOutput
	ToServiceAccountKeyTimeoutsOutputWithContext(context.Context) ServiceAccountKeyTimeoutsOutput
}

type ServiceAccountKeyTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Read   pulumi.StringPtrInput `pulumi:"read"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ServiceAccountKeyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountKeyTimeouts)(nil)).Elem()
}

func (i ServiceAccountKeyTimeoutsArgs) ToServiceAccountKeyTimeoutsOutput() ServiceAccountKeyTimeoutsOutput {
	return i.ToServiceAccountKeyTimeoutsOutputWithContext(context.Background())
}

func (i ServiceAccountKeyTimeoutsArgs) ToServiceAccountKeyTimeoutsOutputWithContext(ctx context.Context) ServiceAccountKeyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountKeyTimeoutsOutput)
}

func (i ServiceAccountKeyTimeoutsArgs) ToServiceAccountKeyTimeoutsPtrOutput() ServiceAccountKeyTimeoutsPtrOutput {
	return i.ToServiceAccountKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (i ServiceAccountKeyTimeoutsArgs) ToServiceAccountKeyTimeoutsPtrOutputWithContext(ctx context.Context) ServiceAccountKeyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountKeyTimeoutsOutput).ToServiceAccountKeyTimeoutsPtrOutputWithContext(ctx)
}

// ServiceAccountKeyTimeoutsPtrInput is an input type that accepts ServiceAccountKeyTimeoutsArgs, ServiceAccountKeyTimeoutsPtr and ServiceAccountKeyTimeoutsPtrOutput values.
// You can construct a concrete instance of `ServiceAccountKeyTimeoutsPtrInput` via:
//
//	        ServiceAccountKeyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ServiceAccountKeyTimeoutsPtrInput interface {
	pulumi.Input

	ToServiceAccountKeyTimeoutsPtrOutput() ServiceAccountKeyTimeoutsPtrOutput
	ToServiceAccountKeyTimeoutsPtrOutputWithContext(context.Context) ServiceAccountKeyTimeoutsPtrOutput
}

type serviceAccountKeyTimeoutsPtrType ServiceAccountKeyTimeoutsArgs

func ServiceAccountKeyTimeoutsPtr(v *ServiceAccountKeyTimeoutsArgs) ServiceAccountKeyTimeoutsPtrInput {
	return (*serviceAccountKeyTimeoutsPtrType)(v)
}

func (*serviceAccountKeyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountKeyTimeouts)(nil)).Elem()
}

func (i *serviceAccountKeyTimeoutsPtrType) ToServiceAccountKeyTimeoutsPtrOutput() ServiceAccountKeyTimeoutsPtrOutput {
	return i.ToServiceAccountKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *serviceAccountKeyTimeoutsPtrType) ToServiceAccountKeyTimeoutsPtrOutputWithContext(ctx context.Context) ServiceAccountKeyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountKeyTimeoutsPtrOutput)
}

type ServiceAccountKeyTimeoutsOutput struct{ *pulumi.OutputState }

func (ServiceAccountKeyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountKeyTimeouts)(nil)).Elem()
}

func (o ServiceAccountKeyTimeoutsOutput) ToServiceAccountKeyTimeoutsOutput() ServiceAccountKeyTimeoutsOutput {
	return o
}

func (o ServiceAccountKeyTimeoutsOutput) ToServiceAccountKeyTimeoutsOutputWithContext(ctx context.Context) ServiceAccountKeyTimeoutsOutput {
	return o
}

func (o ServiceAccountKeyTimeoutsOutput) ToServiceAccountKeyTimeoutsPtrOutput() ServiceAccountKeyTimeoutsPtrOutput {
	return o.ToServiceAccountKeyTimeoutsPtrOutputWithContext(context.Background())
}

func (o ServiceAccountKeyTimeoutsOutput) ToServiceAccountKeyTimeoutsPtrOutputWithContext(ctx context.Context) ServiceAccountKeyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAccountKeyTimeouts) *ServiceAccountKeyTimeouts {
		return &v
	}).(ServiceAccountKeyTimeoutsPtrOutput)
}

func (o ServiceAccountKeyTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountKeyTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o ServiceAccountKeyTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountKeyTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o ServiceAccountKeyTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountKeyTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

func (o ServiceAccountKeyTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountKeyTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ServiceAccountKeyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ServiceAccountKeyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountKeyTimeouts)(nil)).Elem()
}

func (o ServiceAccountKeyTimeoutsPtrOutput) ToServiceAccountKeyTimeoutsPtrOutput() ServiceAccountKeyTimeoutsPtrOutput {
	return o
}

func (o ServiceAccountKeyTimeoutsPtrOutput) ToServiceAccountKeyTimeoutsPtrOutputWithContext(ctx context.Context) ServiceAccountKeyTimeoutsPtrOutput {
	return o
}

func (o ServiceAccountKeyTimeoutsPtrOutput) Elem() ServiceAccountKeyTimeoutsOutput {
	return o.ApplyT(func(v *ServiceAccountKeyTimeouts) ServiceAccountKeyTimeouts {
		if v != nil {
			return *v
		}
		var ret ServiceAccountKeyTimeouts
		return ret
	}).(ServiceAccountKeyTimeoutsOutput)
}

func (o ServiceAccountKeyTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAccountKeyTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAccountKeyTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAccountKeyTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountKeyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type ServiceAccountTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Read   *string `pulumi:"read"`
	Update *string `pulumi:"update"`
}

// ServiceAccountTimeoutsInput is an input type that accepts ServiceAccountTimeoutsArgs and ServiceAccountTimeoutsOutput values.
// You can construct a concrete instance of `ServiceAccountTimeoutsInput` via:
//
//	ServiceAccountTimeoutsArgs{...}
type ServiceAccountTimeoutsInput interface {
	pulumi.Input

	ToServiceAccountTimeoutsOutput() ServiceAccountTimeoutsOutput
	ToServiceAccountTimeoutsOutputWithContext(context.Context) ServiceAccountTimeoutsOutput
}

type ServiceAccountTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Read   pulumi.StringPtrInput `pulumi:"read"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ServiceAccountTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountTimeouts)(nil)).Elem()
}

func (i ServiceAccountTimeoutsArgs) ToServiceAccountTimeoutsOutput() ServiceAccountTimeoutsOutput {
	return i.ToServiceAccountTimeoutsOutputWithContext(context.Background())
}

func (i ServiceAccountTimeoutsArgs) ToServiceAccountTimeoutsOutputWithContext(ctx context.Context) ServiceAccountTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountTimeoutsOutput)
}

func (i ServiceAccountTimeoutsArgs) ToServiceAccountTimeoutsPtrOutput() ServiceAccountTimeoutsPtrOutput {
	return i.ToServiceAccountTimeoutsPtrOutputWithContext(context.Background())
}

func (i ServiceAccountTimeoutsArgs) ToServiceAccountTimeoutsPtrOutputWithContext(ctx context.Context) ServiceAccountTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountTimeoutsOutput).ToServiceAccountTimeoutsPtrOutputWithContext(ctx)
}

// ServiceAccountTimeoutsPtrInput is an input type that accepts ServiceAccountTimeoutsArgs, ServiceAccountTimeoutsPtr and ServiceAccountTimeoutsPtrOutput values.
// You can construct a concrete instance of `ServiceAccountTimeoutsPtrInput` via:
//
//	        ServiceAccountTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ServiceAccountTimeoutsPtrInput interface {
	pulumi.Input

	ToServiceAccountTimeoutsPtrOutput() ServiceAccountTimeoutsPtrOutput
	ToServiceAccountTimeoutsPtrOutputWithContext(context.Context) ServiceAccountTimeoutsPtrOutput
}

type serviceAccountTimeoutsPtrType ServiceAccountTimeoutsArgs

func ServiceAccountTimeoutsPtr(v *ServiceAccountTimeoutsArgs) ServiceAccountTimeoutsPtrInput {
	return (*serviceAccountTimeoutsPtrType)(v)
}

func (*serviceAccountTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountTimeouts)(nil)).Elem()
}

func (i *serviceAccountTimeoutsPtrType) ToServiceAccountTimeoutsPtrOutput() ServiceAccountTimeoutsPtrOutput {
	return i.ToServiceAccountTimeoutsPtrOutputWithContext(context.Background())
}

func (i *serviceAccountTimeoutsPtrType) ToServiceAccountTimeoutsPtrOutputWithContext(ctx context.Context) ServiceAccountTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountTimeoutsPtrOutput)
}

type ServiceAccountTimeoutsOutput struct{ *pulumi.OutputState }

func (ServiceAccountTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountTimeouts)(nil)).Elem()
}

func (o ServiceAccountTimeoutsOutput) ToServiceAccountTimeoutsOutput() ServiceAccountTimeoutsOutput {
	return o
}

func (o ServiceAccountTimeoutsOutput) ToServiceAccountTimeoutsOutputWithContext(ctx context.Context) ServiceAccountTimeoutsOutput {
	return o
}

func (o ServiceAccountTimeoutsOutput) ToServiceAccountTimeoutsPtrOutput() ServiceAccountTimeoutsPtrOutput {
	return o.ToServiceAccountTimeoutsPtrOutputWithContext(context.Background())
}

func (o ServiceAccountTimeoutsOutput) ToServiceAccountTimeoutsPtrOutputWithContext(ctx context.Context) ServiceAccountTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAccountTimeouts) *ServiceAccountTimeouts {
		return &v
	}).(ServiceAccountTimeoutsPtrOutput)
}

func (o ServiceAccountTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o ServiceAccountTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o ServiceAccountTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

func (o ServiceAccountTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAccountTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ServiceAccountTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ServiceAccountTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountTimeouts)(nil)).Elem()
}

func (o ServiceAccountTimeoutsPtrOutput) ToServiceAccountTimeoutsPtrOutput() ServiceAccountTimeoutsPtrOutput {
	return o
}

func (o ServiceAccountTimeoutsPtrOutput) ToServiceAccountTimeoutsPtrOutputWithContext(ctx context.Context) ServiceAccountTimeoutsPtrOutput {
	return o
}

func (o ServiceAccountTimeoutsPtrOutput) Elem() ServiceAccountTimeoutsOutput {
	return o.ApplyT(func(v *ServiceAccountTimeouts) ServiceAccountTimeouts {
		if v != nil {
			return *v
		}
		var ret ServiceAccountTimeouts
		return ret
	}).(ServiceAccountTimeoutsOutput)
}

func (o ServiceAccountTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAccountTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAccountTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func (o ServiceAccountTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type SsoConnectionAad struct {
	// Azure AD domain
	AdDomain string `pulumi:"adDomain"`
	// Azure AD client ID
	ClientId string `pulumi:"clientId"`
	// Azure AD client secret
	ClientSecret string `pulumi:"clientSecret"`
}

// SsoConnectionAadInput is an input type that accepts SsoConnectionAadArgs and SsoConnectionAadOutput values.
// You can construct a concrete instance of `SsoConnectionAadInput` via:
//
//	SsoConnectionAadArgs{...}
type SsoConnectionAadInput interface {
	pulumi.Input

	ToSsoConnectionAadOutput() SsoConnectionAadOutput
	ToSsoConnectionAadOutputWithContext(context.Context) SsoConnectionAadOutput
}

type SsoConnectionAadArgs struct {
	// Azure AD domain
	AdDomain pulumi.StringInput `pulumi:"adDomain"`
	// Azure AD client ID
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Azure AD client secret
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (SsoConnectionAadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoConnectionAad)(nil)).Elem()
}

func (i SsoConnectionAadArgs) ToSsoConnectionAadOutput() SsoConnectionAadOutput {
	return i.ToSsoConnectionAadOutputWithContext(context.Background())
}

func (i SsoConnectionAadArgs) ToSsoConnectionAadOutputWithContext(ctx context.Context) SsoConnectionAadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionAadOutput)
}

func (i SsoConnectionAadArgs) ToSsoConnectionAadPtrOutput() SsoConnectionAadPtrOutput {
	return i.ToSsoConnectionAadPtrOutputWithContext(context.Background())
}

func (i SsoConnectionAadArgs) ToSsoConnectionAadPtrOutputWithContext(ctx context.Context) SsoConnectionAadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionAadOutput).ToSsoConnectionAadPtrOutputWithContext(ctx)
}

// SsoConnectionAadPtrInput is an input type that accepts SsoConnectionAadArgs, SsoConnectionAadPtr and SsoConnectionAadPtrOutput values.
// You can construct a concrete instance of `SsoConnectionAadPtrInput` via:
//
//	        SsoConnectionAadArgs{...}
//
//	or:
//
//	        nil
type SsoConnectionAadPtrInput interface {
	pulumi.Input

	ToSsoConnectionAadPtrOutput() SsoConnectionAadPtrOutput
	ToSsoConnectionAadPtrOutputWithContext(context.Context) SsoConnectionAadPtrOutput
}

type ssoConnectionAadPtrType SsoConnectionAadArgs

func SsoConnectionAadPtr(v *SsoConnectionAadArgs) SsoConnectionAadPtrInput {
	return (*ssoConnectionAadPtrType)(v)
}

func (*ssoConnectionAadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoConnectionAad)(nil)).Elem()
}

func (i *ssoConnectionAadPtrType) ToSsoConnectionAadPtrOutput() SsoConnectionAadPtrOutput {
	return i.ToSsoConnectionAadPtrOutputWithContext(context.Background())
}

func (i *ssoConnectionAadPtrType) ToSsoConnectionAadPtrOutputWithContext(ctx context.Context) SsoConnectionAadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionAadPtrOutput)
}

type SsoConnectionAadOutput struct{ *pulumi.OutputState }

func (SsoConnectionAadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoConnectionAad)(nil)).Elem()
}

func (o SsoConnectionAadOutput) ToSsoConnectionAadOutput() SsoConnectionAadOutput {
	return o
}

func (o SsoConnectionAadOutput) ToSsoConnectionAadOutputWithContext(ctx context.Context) SsoConnectionAadOutput {
	return o
}

func (o SsoConnectionAadOutput) ToSsoConnectionAadPtrOutput() SsoConnectionAadPtrOutput {
	return o.ToSsoConnectionAadPtrOutputWithContext(context.Background())
}

func (o SsoConnectionAadOutput) ToSsoConnectionAadPtrOutputWithContext(ctx context.Context) SsoConnectionAadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsoConnectionAad) *SsoConnectionAad {
		return &v
	}).(SsoConnectionAadPtrOutput)
}

// Azure AD domain
func (o SsoConnectionAadOutput) AdDomain() pulumi.StringOutput {
	return o.ApplyT(func(v SsoConnectionAad) string { return v.AdDomain }).(pulumi.StringOutput)
}

// Azure AD client ID
func (o SsoConnectionAadOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SsoConnectionAad) string { return v.ClientId }).(pulumi.StringOutput)
}

// Azure AD client secret
func (o SsoConnectionAadOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SsoConnectionAad) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type SsoConnectionAadPtrOutput struct{ *pulumi.OutputState }

func (SsoConnectionAadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoConnectionAad)(nil)).Elem()
}

func (o SsoConnectionAadPtrOutput) ToSsoConnectionAadPtrOutput() SsoConnectionAadPtrOutput {
	return o
}

func (o SsoConnectionAadPtrOutput) ToSsoConnectionAadPtrOutputWithContext(ctx context.Context) SsoConnectionAadPtrOutput {
	return o
}

func (o SsoConnectionAadPtrOutput) Elem() SsoConnectionAadOutput {
	return o.ApplyT(func(v *SsoConnectionAad) SsoConnectionAad {
		if v != nil {
			return *v
		}
		var ret SsoConnectionAad
		return ret
	}).(SsoConnectionAadOutput)
}

// Azure AD domain
func (o SsoConnectionAadPtrOutput) AdDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoConnectionAad) *string {
		if v == nil {
			return nil
		}
		return &v.AdDomain
	}).(pulumi.StringPtrOutput)
}

// Azure AD client ID
func (o SsoConnectionAadPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoConnectionAad) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Azure AD client secret
func (o SsoConnectionAadPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoConnectionAad) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type SsoConnectionOkta struct {
	// Okta client ID
	ClientId string `pulumi:"clientId"`
	// Okta client secret
	ClientSecret string `pulumi:"clientSecret"`
	// Okta domain
	OktaDomain string `pulumi:"oktaDomain"`
}

// SsoConnectionOktaInput is an input type that accepts SsoConnectionOktaArgs and SsoConnectionOktaOutput values.
// You can construct a concrete instance of `SsoConnectionOktaInput` via:
//
//	SsoConnectionOktaArgs{...}
type SsoConnectionOktaInput interface {
	pulumi.Input

	ToSsoConnectionOktaOutput() SsoConnectionOktaOutput
	ToSsoConnectionOktaOutputWithContext(context.Context) SsoConnectionOktaOutput
}

type SsoConnectionOktaArgs struct {
	// Okta client ID
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Okta client secret
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// Okta domain
	OktaDomain pulumi.StringInput `pulumi:"oktaDomain"`
}

func (SsoConnectionOktaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoConnectionOkta)(nil)).Elem()
}

func (i SsoConnectionOktaArgs) ToSsoConnectionOktaOutput() SsoConnectionOktaOutput {
	return i.ToSsoConnectionOktaOutputWithContext(context.Background())
}

func (i SsoConnectionOktaArgs) ToSsoConnectionOktaOutputWithContext(ctx context.Context) SsoConnectionOktaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionOktaOutput)
}

func (i SsoConnectionOktaArgs) ToSsoConnectionOktaPtrOutput() SsoConnectionOktaPtrOutput {
	return i.ToSsoConnectionOktaPtrOutputWithContext(context.Background())
}

func (i SsoConnectionOktaArgs) ToSsoConnectionOktaPtrOutputWithContext(ctx context.Context) SsoConnectionOktaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionOktaOutput).ToSsoConnectionOktaPtrOutputWithContext(ctx)
}

// SsoConnectionOktaPtrInput is an input type that accepts SsoConnectionOktaArgs, SsoConnectionOktaPtr and SsoConnectionOktaPtrOutput values.
// You can construct a concrete instance of `SsoConnectionOktaPtrInput` via:
//
//	        SsoConnectionOktaArgs{...}
//
//	or:
//
//	        nil
type SsoConnectionOktaPtrInput interface {
	pulumi.Input

	ToSsoConnectionOktaPtrOutput() SsoConnectionOktaPtrOutput
	ToSsoConnectionOktaPtrOutputWithContext(context.Context) SsoConnectionOktaPtrOutput
}

type ssoConnectionOktaPtrType SsoConnectionOktaArgs

func SsoConnectionOktaPtr(v *SsoConnectionOktaArgs) SsoConnectionOktaPtrInput {
	return (*ssoConnectionOktaPtrType)(v)
}

func (*ssoConnectionOktaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoConnectionOkta)(nil)).Elem()
}

func (i *ssoConnectionOktaPtrType) ToSsoConnectionOktaPtrOutput() SsoConnectionOktaPtrOutput {
	return i.ToSsoConnectionOktaPtrOutputWithContext(context.Background())
}

func (i *ssoConnectionOktaPtrType) ToSsoConnectionOktaPtrOutputWithContext(ctx context.Context) SsoConnectionOktaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionOktaPtrOutput)
}

type SsoConnectionOktaOutput struct{ *pulumi.OutputState }

func (SsoConnectionOktaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoConnectionOkta)(nil)).Elem()
}

func (o SsoConnectionOktaOutput) ToSsoConnectionOktaOutput() SsoConnectionOktaOutput {
	return o
}

func (o SsoConnectionOktaOutput) ToSsoConnectionOktaOutputWithContext(ctx context.Context) SsoConnectionOktaOutput {
	return o
}

func (o SsoConnectionOktaOutput) ToSsoConnectionOktaPtrOutput() SsoConnectionOktaPtrOutput {
	return o.ToSsoConnectionOktaPtrOutputWithContext(context.Background())
}

func (o SsoConnectionOktaOutput) ToSsoConnectionOktaPtrOutputWithContext(ctx context.Context) SsoConnectionOktaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsoConnectionOkta) *SsoConnectionOkta {
		return &v
	}).(SsoConnectionOktaPtrOutput)
}

// Okta client ID
func (o SsoConnectionOktaOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v SsoConnectionOkta) string { return v.ClientId }).(pulumi.StringOutput)
}

// Okta client secret
func (o SsoConnectionOktaOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v SsoConnectionOkta) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// Okta domain
func (o SsoConnectionOktaOutput) OktaDomain() pulumi.StringOutput {
	return o.ApplyT(func(v SsoConnectionOkta) string { return v.OktaDomain }).(pulumi.StringOutput)
}

type SsoConnectionOktaPtrOutput struct{ *pulumi.OutputState }

func (SsoConnectionOktaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoConnectionOkta)(nil)).Elem()
}

func (o SsoConnectionOktaPtrOutput) ToSsoConnectionOktaPtrOutput() SsoConnectionOktaPtrOutput {
	return o
}

func (o SsoConnectionOktaPtrOutput) ToSsoConnectionOktaPtrOutputWithContext(ctx context.Context) SsoConnectionOktaPtrOutput {
	return o
}

func (o SsoConnectionOktaPtrOutput) Elem() SsoConnectionOktaOutput {
	return o.ApplyT(func(v *SsoConnectionOkta) SsoConnectionOkta {
		if v != nil {
			return *v
		}
		var ret SsoConnectionOkta
		return ret
	}).(SsoConnectionOktaOutput)
}

// Okta client ID
func (o SsoConnectionOktaPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoConnectionOkta) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Okta client secret
func (o SsoConnectionOktaPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoConnectionOkta) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Okta domain
func (o SsoConnectionOktaPtrOutput) OktaDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoConnectionOkta) *string {
		if v == nil {
			return nil
		}
		return &v.OktaDomain
	}).(pulumi.StringPtrOutput)
}

type SsoConnectionTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

// SsoConnectionTimeoutsInput is an input type that accepts SsoConnectionTimeoutsArgs and SsoConnectionTimeoutsOutput values.
// You can construct a concrete instance of `SsoConnectionTimeoutsInput` via:
//
//	SsoConnectionTimeoutsArgs{...}
type SsoConnectionTimeoutsInput interface {
	pulumi.Input

	ToSsoConnectionTimeoutsOutput() SsoConnectionTimeoutsOutput
	ToSsoConnectionTimeoutsOutputWithContext(context.Context) SsoConnectionTimeoutsOutput
}

type SsoConnectionTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (SsoConnectionTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoConnectionTimeouts)(nil)).Elem()
}

func (i SsoConnectionTimeoutsArgs) ToSsoConnectionTimeoutsOutput() SsoConnectionTimeoutsOutput {
	return i.ToSsoConnectionTimeoutsOutputWithContext(context.Background())
}

func (i SsoConnectionTimeoutsArgs) ToSsoConnectionTimeoutsOutputWithContext(ctx context.Context) SsoConnectionTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionTimeoutsOutput)
}

func (i SsoConnectionTimeoutsArgs) ToSsoConnectionTimeoutsPtrOutput() SsoConnectionTimeoutsPtrOutput {
	return i.ToSsoConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (i SsoConnectionTimeoutsArgs) ToSsoConnectionTimeoutsPtrOutputWithContext(ctx context.Context) SsoConnectionTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionTimeoutsOutput).ToSsoConnectionTimeoutsPtrOutputWithContext(ctx)
}

// SsoConnectionTimeoutsPtrInput is an input type that accepts SsoConnectionTimeoutsArgs, SsoConnectionTimeoutsPtr and SsoConnectionTimeoutsPtrOutput values.
// You can construct a concrete instance of `SsoConnectionTimeoutsPtrInput` via:
//
//	        SsoConnectionTimeoutsArgs{...}
//
//	or:
//
//	        nil
type SsoConnectionTimeoutsPtrInput interface {
	pulumi.Input

	ToSsoConnectionTimeoutsPtrOutput() SsoConnectionTimeoutsPtrOutput
	ToSsoConnectionTimeoutsPtrOutputWithContext(context.Context) SsoConnectionTimeoutsPtrOutput
}

type ssoConnectionTimeoutsPtrType SsoConnectionTimeoutsArgs

func SsoConnectionTimeoutsPtr(v *SsoConnectionTimeoutsArgs) SsoConnectionTimeoutsPtrInput {
	return (*ssoConnectionTimeoutsPtrType)(v)
}

func (*ssoConnectionTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoConnectionTimeouts)(nil)).Elem()
}

func (i *ssoConnectionTimeoutsPtrType) ToSsoConnectionTimeoutsPtrOutput() SsoConnectionTimeoutsPtrOutput {
	return i.ToSsoConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (i *ssoConnectionTimeoutsPtrType) ToSsoConnectionTimeoutsPtrOutputWithContext(ctx context.Context) SsoConnectionTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SsoConnectionTimeoutsPtrOutput)
}

type SsoConnectionTimeoutsOutput struct{ *pulumi.OutputState }

func (SsoConnectionTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SsoConnectionTimeouts)(nil)).Elem()
}

func (o SsoConnectionTimeoutsOutput) ToSsoConnectionTimeoutsOutput() SsoConnectionTimeoutsOutput {
	return o
}

func (o SsoConnectionTimeoutsOutput) ToSsoConnectionTimeoutsOutputWithContext(ctx context.Context) SsoConnectionTimeoutsOutput {
	return o
}

func (o SsoConnectionTimeoutsOutput) ToSsoConnectionTimeoutsPtrOutput() SsoConnectionTimeoutsPtrOutput {
	return o.ToSsoConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (o SsoConnectionTimeoutsOutput) ToSsoConnectionTimeoutsPtrOutputWithContext(ctx context.Context) SsoConnectionTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SsoConnectionTimeouts) *SsoConnectionTimeouts {
		return &v
	}).(SsoConnectionTimeoutsPtrOutput)
}

func (o SsoConnectionTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoConnectionTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o SsoConnectionTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoConnectionTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o SsoConnectionTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SsoConnectionTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type SsoConnectionTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (SsoConnectionTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SsoConnectionTimeouts)(nil)).Elem()
}

func (o SsoConnectionTimeoutsPtrOutput) ToSsoConnectionTimeoutsPtrOutput() SsoConnectionTimeoutsPtrOutput {
	return o
}

func (o SsoConnectionTimeoutsPtrOutput) ToSsoConnectionTimeoutsPtrOutputWithContext(ctx context.Context) SsoConnectionTimeoutsPtrOutput {
	return o
}

func (o SsoConnectionTimeoutsPtrOutput) Elem() SsoConnectionTimeoutsOutput {
	return o.ApplyT(func(v *SsoConnectionTimeouts) SsoConnectionTimeouts {
		if v != nil {
			return *v
		}
		var ret SsoConnectionTimeouts
		return ret
	}).(SsoConnectionTimeoutsOutput)
}

func (o SsoConnectionTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoConnectionTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o SsoConnectionTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoConnectionTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o SsoConnectionTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SsoConnectionTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyAntiAffinity struct {
	// Defines if anti-affinity should be considered when scaling the workload.
	// 	If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
	ConsiderAntiAffinity *bool `pulumi:"considerAntiAffinity"`
}

// WorkloadScalingPolicyAntiAffinityInput is an input type that accepts WorkloadScalingPolicyAntiAffinityArgs and WorkloadScalingPolicyAntiAffinityOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyAntiAffinityInput` via:
//
//	WorkloadScalingPolicyAntiAffinityArgs{...}
type WorkloadScalingPolicyAntiAffinityInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyAntiAffinityOutput() WorkloadScalingPolicyAntiAffinityOutput
	ToWorkloadScalingPolicyAntiAffinityOutputWithContext(context.Context) WorkloadScalingPolicyAntiAffinityOutput
}

type WorkloadScalingPolicyAntiAffinityArgs struct {
	// Defines if anti-affinity should be considered when scaling the workload.
	// 	If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
	ConsiderAntiAffinity pulumi.BoolPtrInput `pulumi:"considerAntiAffinity"`
}

func (WorkloadScalingPolicyAntiAffinityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyAntiAffinity)(nil)).Elem()
}

func (i WorkloadScalingPolicyAntiAffinityArgs) ToWorkloadScalingPolicyAntiAffinityOutput() WorkloadScalingPolicyAntiAffinityOutput {
	return i.ToWorkloadScalingPolicyAntiAffinityOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyAntiAffinityArgs) ToWorkloadScalingPolicyAntiAffinityOutputWithContext(ctx context.Context) WorkloadScalingPolicyAntiAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyAntiAffinityOutput)
}

func (i WorkloadScalingPolicyAntiAffinityArgs) ToWorkloadScalingPolicyAntiAffinityPtrOutput() WorkloadScalingPolicyAntiAffinityPtrOutput {
	return i.ToWorkloadScalingPolicyAntiAffinityPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyAntiAffinityArgs) ToWorkloadScalingPolicyAntiAffinityPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyAntiAffinityOutput).ToWorkloadScalingPolicyAntiAffinityPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyAntiAffinityPtrInput is an input type that accepts WorkloadScalingPolicyAntiAffinityArgs, WorkloadScalingPolicyAntiAffinityPtr and WorkloadScalingPolicyAntiAffinityPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyAntiAffinityPtrInput` via:
//
//	        WorkloadScalingPolicyAntiAffinityArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyAntiAffinityPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyAntiAffinityPtrOutput() WorkloadScalingPolicyAntiAffinityPtrOutput
	ToWorkloadScalingPolicyAntiAffinityPtrOutputWithContext(context.Context) WorkloadScalingPolicyAntiAffinityPtrOutput
}

type workloadScalingPolicyAntiAffinityPtrType WorkloadScalingPolicyAntiAffinityArgs

func WorkloadScalingPolicyAntiAffinityPtr(v *WorkloadScalingPolicyAntiAffinityArgs) WorkloadScalingPolicyAntiAffinityPtrInput {
	return (*workloadScalingPolicyAntiAffinityPtrType)(v)
}

func (*workloadScalingPolicyAntiAffinityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyAntiAffinity)(nil)).Elem()
}

func (i *workloadScalingPolicyAntiAffinityPtrType) ToWorkloadScalingPolicyAntiAffinityPtrOutput() WorkloadScalingPolicyAntiAffinityPtrOutput {
	return i.ToWorkloadScalingPolicyAntiAffinityPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyAntiAffinityPtrType) ToWorkloadScalingPolicyAntiAffinityPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyAntiAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyAntiAffinityPtrOutput)
}

type WorkloadScalingPolicyAntiAffinityOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyAntiAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyAntiAffinity)(nil)).Elem()
}

func (o WorkloadScalingPolicyAntiAffinityOutput) ToWorkloadScalingPolicyAntiAffinityOutput() WorkloadScalingPolicyAntiAffinityOutput {
	return o
}

func (o WorkloadScalingPolicyAntiAffinityOutput) ToWorkloadScalingPolicyAntiAffinityOutputWithContext(ctx context.Context) WorkloadScalingPolicyAntiAffinityOutput {
	return o
}

func (o WorkloadScalingPolicyAntiAffinityOutput) ToWorkloadScalingPolicyAntiAffinityPtrOutput() WorkloadScalingPolicyAntiAffinityPtrOutput {
	return o.ToWorkloadScalingPolicyAntiAffinityPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyAntiAffinityOutput) ToWorkloadScalingPolicyAntiAffinityPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyAntiAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyAntiAffinity) *WorkloadScalingPolicyAntiAffinity {
		return &v
	}).(WorkloadScalingPolicyAntiAffinityPtrOutput)
}

// Defines if anti-affinity should be considered when scaling the workload.
//
//	If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
func (o WorkloadScalingPolicyAntiAffinityOutput) ConsiderAntiAffinity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyAntiAffinity) *bool { return v.ConsiderAntiAffinity }).(pulumi.BoolPtrOutput)
}

type WorkloadScalingPolicyAntiAffinityPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyAntiAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyAntiAffinity)(nil)).Elem()
}

func (o WorkloadScalingPolicyAntiAffinityPtrOutput) ToWorkloadScalingPolicyAntiAffinityPtrOutput() WorkloadScalingPolicyAntiAffinityPtrOutput {
	return o
}

func (o WorkloadScalingPolicyAntiAffinityPtrOutput) ToWorkloadScalingPolicyAntiAffinityPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyAntiAffinityPtrOutput {
	return o
}

func (o WorkloadScalingPolicyAntiAffinityPtrOutput) Elem() WorkloadScalingPolicyAntiAffinityOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyAntiAffinity) WorkloadScalingPolicyAntiAffinity {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyAntiAffinity
		return ret
	}).(WorkloadScalingPolicyAntiAffinityOutput)
}

// Defines if anti-affinity should be considered when scaling the workload.
//
//	If enabled, requiring host ports, or having anti-affinity on hostname will force all recommendations to be deferred.
func (o WorkloadScalingPolicyAntiAffinityPtrOutput) ConsiderAntiAffinity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyAntiAffinity) *bool {
		if v == nil {
			return nil
		}
		return v.ConsiderAntiAffinity
	}).(pulumi.BoolPtrOutput)
}

type WorkloadScalingPolicyCpu struct {
	// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
	//
	// Deprecated: Deprecated
	ApplyThreshold *float64 `pulumi:"applyThreshold"`
	// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
	ApplyThresholdStrategy *WorkloadScalingPolicyCpuApplyThresholdStrategy `pulumi:"applyThresholdStrategy"`
	// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
	Args []string `pulumi:"args"`
	// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
	Function *string `pulumi:"function"`
	// Resource limit settings
	Limit *WorkloadScalingPolicyCpuLimit `pulumi:"limit"`
	// The look back period in seconds for the recommendation.
	LookBackPeriodSeconds *float64 `pulumi:"lookBackPeriodSeconds"`
	// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
	ManagementOption *string `pulumi:"managementOption"`
	// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
	Max *float64 `pulumi:"max"`
	// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
	Min *float64 `pulumi:"min"`
	// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
	Overhead *float64 `pulumi:"overhead"`
}

// WorkloadScalingPolicyCpuInput is an input type that accepts WorkloadScalingPolicyCpuArgs and WorkloadScalingPolicyCpuOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyCpuInput` via:
//
//	WorkloadScalingPolicyCpuArgs{...}
type WorkloadScalingPolicyCpuInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyCpuOutput() WorkloadScalingPolicyCpuOutput
	ToWorkloadScalingPolicyCpuOutputWithContext(context.Context) WorkloadScalingPolicyCpuOutput
}

type WorkloadScalingPolicyCpuArgs struct {
	// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
	//
	// Deprecated: Deprecated
	ApplyThreshold pulumi.Float64PtrInput `pulumi:"applyThreshold"`
	// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
	ApplyThresholdStrategy WorkloadScalingPolicyCpuApplyThresholdStrategyPtrInput `pulumi:"applyThresholdStrategy"`
	// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
	Args pulumi.StringArrayInput `pulumi:"args"`
	// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
	Function pulumi.StringPtrInput `pulumi:"function"`
	// Resource limit settings
	Limit WorkloadScalingPolicyCpuLimitPtrInput `pulumi:"limit"`
	// The look back period in seconds for the recommendation.
	LookBackPeriodSeconds pulumi.Float64PtrInput `pulumi:"lookBackPeriodSeconds"`
	// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
	ManagementOption pulumi.StringPtrInput `pulumi:"managementOption"`
	// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
	Max pulumi.Float64PtrInput `pulumi:"max"`
	// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
	Min pulumi.Float64PtrInput `pulumi:"min"`
	// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
	Overhead pulumi.Float64PtrInput `pulumi:"overhead"`
}

func (WorkloadScalingPolicyCpuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyCpu)(nil)).Elem()
}

func (i WorkloadScalingPolicyCpuArgs) ToWorkloadScalingPolicyCpuOutput() WorkloadScalingPolicyCpuOutput {
	return i.ToWorkloadScalingPolicyCpuOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyCpuArgs) ToWorkloadScalingPolicyCpuOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyCpuOutput)
}

func (i WorkloadScalingPolicyCpuArgs) ToWorkloadScalingPolicyCpuPtrOutput() WorkloadScalingPolicyCpuPtrOutput {
	return i.ToWorkloadScalingPolicyCpuPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyCpuArgs) ToWorkloadScalingPolicyCpuPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyCpuOutput).ToWorkloadScalingPolicyCpuPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyCpuPtrInput is an input type that accepts WorkloadScalingPolicyCpuArgs, WorkloadScalingPolicyCpuPtr and WorkloadScalingPolicyCpuPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyCpuPtrInput` via:
//
//	        WorkloadScalingPolicyCpuArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyCpuPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyCpuPtrOutput() WorkloadScalingPolicyCpuPtrOutput
	ToWorkloadScalingPolicyCpuPtrOutputWithContext(context.Context) WorkloadScalingPolicyCpuPtrOutput
}

type workloadScalingPolicyCpuPtrType WorkloadScalingPolicyCpuArgs

func WorkloadScalingPolicyCpuPtr(v *WorkloadScalingPolicyCpuArgs) WorkloadScalingPolicyCpuPtrInput {
	return (*workloadScalingPolicyCpuPtrType)(v)
}

func (*workloadScalingPolicyCpuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyCpu)(nil)).Elem()
}

func (i *workloadScalingPolicyCpuPtrType) ToWorkloadScalingPolicyCpuPtrOutput() WorkloadScalingPolicyCpuPtrOutput {
	return i.ToWorkloadScalingPolicyCpuPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyCpuPtrType) ToWorkloadScalingPolicyCpuPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyCpuPtrOutput)
}

type WorkloadScalingPolicyCpuOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyCpuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyCpu)(nil)).Elem()
}

func (o WorkloadScalingPolicyCpuOutput) ToWorkloadScalingPolicyCpuOutput() WorkloadScalingPolicyCpuOutput {
	return o
}

func (o WorkloadScalingPolicyCpuOutput) ToWorkloadScalingPolicyCpuOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuOutput {
	return o
}

func (o WorkloadScalingPolicyCpuOutput) ToWorkloadScalingPolicyCpuPtrOutput() WorkloadScalingPolicyCpuPtrOutput {
	return o.ToWorkloadScalingPolicyCpuPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyCpuOutput) ToWorkloadScalingPolicyCpuPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyCpu) *WorkloadScalingPolicyCpu {
		return &v
	}).(WorkloadScalingPolicyCpuPtrOutput)
}

// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
//
// Deprecated: Deprecated
func (o WorkloadScalingPolicyCpuOutput) ApplyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) *float64 { return v.ApplyThreshold }).(pulumi.Float64PtrOutput)
}

// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
func (o WorkloadScalingPolicyCpuOutput) ApplyThresholdStrategy() WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) *WorkloadScalingPolicyCpuApplyThresholdStrategy {
		return v.ApplyThresholdStrategy
	}).(WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput)
}

// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
func (o WorkloadScalingPolicyCpuOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
func (o WorkloadScalingPolicyCpuOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) *string { return v.Function }).(pulumi.StringPtrOutput)
}

// Resource limit settings
func (o WorkloadScalingPolicyCpuOutput) Limit() WorkloadScalingPolicyCpuLimitPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) *WorkloadScalingPolicyCpuLimit { return v.Limit }).(WorkloadScalingPolicyCpuLimitPtrOutput)
}

// The look back period in seconds for the recommendation.
func (o WorkloadScalingPolicyCpuOutput) LookBackPeriodSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) *float64 { return v.LookBackPeriodSeconds }).(pulumi.Float64PtrOutput)
}

// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
func (o WorkloadScalingPolicyCpuOutput) ManagementOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) *string { return v.ManagementOption }).(pulumi.StringPtrOutput)
}

// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
func (o WorkloadScalingPolicyCpuOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
func (o WorkloadScalingPolicyCpuOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
func (o WorkloadScalingPolicyCpuOutput) Overhead() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpu) *float64 { return v.Overhead }).(pulumi.Float64PtrOutput)
}

type WorkloadScalingPolicyCpuPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyCpuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyCpu)(nil)).Elem()
}

func (o WorkloadScalingPolicyCpuPtrOutput) ToWorkloadScalingPolicyCpuPtrOutput() WorkloadScalingPolicyCpuPtrOutput {
	return o
}

func (o WorkloadScalingPolicyCpuPtrOutput) ToWorkloadScalingPolicyCpuPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuPtrOutput {
	return o
}

func (o WorkloadScalingPolicyCpuPtrOutput) Elem() WorkloadScalingPolicyCpuOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) WorkloadScalingPolicyCpu {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyCpu
		return ret
	}).(WorkloadScalingPolicyCpuOutput)
}

// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
//
// Deprecated: Deprecated
func (o WorkloadScalingPolicyCpuPtrOutput) ApplyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) *float64 {
		if v == nil {
			return nil
		}
		return v.ApplyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
func (o WorkloadScalingPolicyCpuPtrOutput) ApplyThresholdStrategy() WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) *WorkloadScalingPolicyCpuApplyThresholdStrategy {
		if v == nil {
			return nil
		}
		return v.ApplyThresholdStrategy
	}).(WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput)
}

// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
func (o WorkloadScalingPolicyCpuPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
func (o WorkloadScalingPolicyCpuPtrOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.Function
	}).(pulumi.StringPtrOutput)
}

// Resource limit settings
func (o WorkloadScalingPolicyCpuPtrOutput) Limit() WorkloadScalingPolicyCpuLimitPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) *WorkloadScalingPolicyCpuLimit {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(WorkloadScalingPolicyCpuLimitPtrOutput)
}

// The look back period in seconds for the recommendation.
func (o WorkloadScalingPolicyCpuPtrOutput) LookBackPeriodSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) *float64 {
		if v == nil {
			return nil
		}
		return v.LookBackPeriodSeconds
	}).(pulumi.Float64PtrOutput)
}

// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
func (o WorkloadScalingPolicyCpuPtrOutput) ManagementOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) *string {
		if v == nil {
			return nil
		}
		return v.ManagementOption
	}).(pulumi.StringPtrOutput)
}

// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
func (o WorkloadScalingPolicyCpuPtrOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) *float64 {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.Float64PtrOutput)
}

// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
func (o WorkloadScalingPolicyCpuPtrOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) *float64 {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.Float64PtrOutput)
}

// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
func (o WorkloadScalingPolicyCpuPtrOutput) Overhead() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpu) *float64 {
		if v == nil {
			return nil
		}
		return v.Overhead
	}).(pulumi.Float64PtrOutput)
}

type WorkloadScalingPolicyCpuApplyThresholdStrategy struct {
	// If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
	Denominator *string `pulumi:"denominator"`
	// The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
	// 	- if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
	// 	- if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
	// 	It must be defined for the CUSTOM_ADAPTIVE strategy.
	Exponent *float64 `pulumi:"exponent"`
	// The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
	Numerator *float64 `pulumi:"numerator"`
	// Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
	Percentage *float64 `pulumi:"percentage"`
	// Defines apply theshold strategy type.
	// 	- PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
	//     - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
	//     - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
	Type string `pulumi:"type"`
}

// WorkloadScalingPolicyCpuApplyThresholdStrategyInput is an input type that accepts WorkloadScalingPolicyCpuApplyThresholdStrategyArgs and WorkloadScalingPolicyCpuApplyThresholdStrategyOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyCpuApplyThresholdStrategyInput` via:
//
//	WorkloadScalingPolicyCpuApplyThresholdStrategyArgs{...}
type WorkloadScalingPolicyCpuApplyThresholdStrategyInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyCpuApplyThresholdStrategyOutput() WorkloadScalingPolicyCpuApplyThresholdStrategyOutput
	ToWorkloadScalingPolicyCpuApplyThresholdStrategyOutputWithContext(context.Context) WorkloadScalingPolicyCpuApplyThresholdStrategyOutput
}

type WorkloadScalingPolicyCpuApplyThresholdStrategyArgs struct {
	// If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
	Denominator pulumi.StringPtrInput `pulumi:"denominator"`
	// The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
	// 	- if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
	// 	- if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
	// 	It must be defined for the CUSTOM_ADAPTIVE strategy.
	Exponent pulumi.Float64PtrInput `pulumi:"exponent"`
	// The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
	Numerator pulumi.Float64PtrInput `pulumi:"numerator"`
	// Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
	Percentage pulumi.Float64PtrInput `pulumi:"percentage"`
	// Defines apply theshold strategy type.
	// 	- PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
	//     - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
	//     - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkloadScalingPolicyCpuApplyThresholdStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyCpuApplyThresholdStrategy)(nil)).Elem()
}

func (i WorkloadScalingPolicyCpuApplyThresholdStrategyArgs) ToWorkloadScalingPolicyCpuApplyThresholdStrategyOutput() WorkloadScalingPolicyCpuApplyThresholdStrategyOutput {
	return i.ToWorkloadScalingPolicyCpuApplyThresholdStrategyOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyCpuApplyThresholdStrategyArgs) ToWorkloadScalingPolicyCpuApplyThresholdStrategyOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuApplyThresholdStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyCpuApplyThresholdStrategyOutput)
}

func (i WorkloadScalingPolicyCpuApplyThresholdStrategyArgs) ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return i.ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyCpuApplyThresholdStrategyArgs) ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyCpuApplyThresholdStrategyOutput).ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyCpuApplyThresholdStrategyPtrInput is an input type that accepts WorkloadScalingPolicyCpuApplyThresholdStrategyArgs, WorkloadScalingPolicyCpuApplyThresholdStrategyPtr and WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyCpuApplyThresholdStrategyPtrInput` via:
//
//	        WorkloadScalingPolicyCpuApplyThresholdStrategyArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyCpuApplyThresholdStrategyPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput
	ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutputWithContext(context.Context) WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput
}

type workloadScalingPolicyCpuApplyThresholdStrategyPtrType WorkloadScalingPolicyCpuApplyThresholdStrategyArgs

func WorkloadScalingPolicyCpuApplyThresholdStrategyPtr(v *WorkloadScalingPolicyCpuApplyThresholdStrategyArgs) WorkloadScalingPolicyCpuApplyThresholdStrategyPtrInput {
	return (*workloadScalingPolicyCpuApplyThresholdStrategyPtrType)(v)
}

func (*workloadScalingPolicyCpuApplyThresholdStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyCpuApplyThresholdStrategy)(nil)).Elem()
}

func (i *workloadScalingPolicyCpuApplyThresholdStrategyPtrType) ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return i.ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyCpuApplyThresholdStrategyPtrType) ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput)
}

type WorkloadScalingPolicyCpuApplyThresholdStrategyOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyCpuApplyThresholdStrategy)(nil)).Elem()
}

func (o WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) ToWorkloadScalingPolicyCpuApplyThresholdStrategyOutput() WorkloadScalingPolicyCpuApplyThresholdStrategyOutput {
	return o
}

func (o WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) ToWorkloadScalingPolicyCpuApplyThresholdStrategyOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuApplyThresholdStrategyOutput {
	return o
}

func (o WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return o.ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyCpuApplyThresholdStrategy) *WorkloadScalingPolicyCpuApplyThresholdStrategy {
		return &v
	}).(WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput)
}

// If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) Denominator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpuApplyThresholdStrategy) *string { return v.Denominator }).(pulumi.StringPtrOutput)
}

// The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
//   - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
//   - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
//     It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) Exponent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpuApplyThresholdStrategy) *float64 { return v.Exponent }).(pulumi.Float64PtrOutput)
}

// The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) Numerator() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpuApplyThresholdStrategy) *float64 { return v.Numerator }).(pulumi.Float64PtrOutput)
}

// Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpuApplyThresholdStrategy) *float64 { return v.Percentage }).(pulumi.Float64PtrOutput)
}

// Defines apply theshold strategy type.
//   - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
//   - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
//   - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpuApplyThresholdStrategy) string { return v.Type }).(pulumi.StringOutput)
}

type WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyCpuApplyThresholdStrategy)(nil)).Elem()
}

func (o WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput) ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return o
}

func (o WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput) ToWorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput {
	return o
}

func (o WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput) Elem() WorkloadScalingPolicyCpuApplyThresholdStrategyOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpuApplyThresholdStrategy) WorkloadScalingPolicyCpuApplyThresholdStrategy {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyCpuApplyThresholdStrategy
		return ret
	}).(WorkloadScalingPolicyCpuApplyThresholdStrategyOutput)
}

// If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput) Denominator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpuApplyThresholdStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Denominator
	}).(pulumi.StringPtrOutput)
}

// The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
//   - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
//   - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
//     It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput) Exponent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpuApplyThresholdStrategy) *float64 {
		if v == nil {
			return nil
		}
		return v.Exponent
	}).(pulumi.Float64PtrOutput)
}

// The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput) Numerator() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpuApplyThresholdStrategy) *float64 {
		if v == nil {
			return nil
		}
		return v.Numerator
	}).(pulumi.Float64PtrOutput)
}

// Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpuApplyThresholdStrategy) *float64 {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.Float64PtrOutput)
}

// Defines apply theshold strategy type.
//   - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
//   - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
//   - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
func (o WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpuApplyThresholdStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyCpuLimit struct {
	// Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
	Multiplier *float64 `pulumi:"multiplier"`
	// Defines limit strategy type.
	// 	- NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
	// 	- MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
	Type string `pulumi:"type"`
}

// WorkloadScalingPolicyCpuLimitInput is an input type that accepts WorkloadScalingPolicyCpuLimitArgs and WorkloadScalingPolicyCpuLimitOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyCpuLimitInput` via:
//
//	WorkloadScalingPolicyCpuLimitArgs{...}
type WorkloadScalingPolicyCpuLimitInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyCpuLimitOutput() WorkloadScalingPolicyCpuLimitOutput
	ToWorkloadScalingPolicyCpuLimitOutputWithContext(context.Context) WorkloadScalingPolicyCpuLimitOutput
}

type WorkloadScalingPolicyCpuLimitArgs struct {
	// Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
	Multiplier pulumi.Float64PtrInput `pulumi:"multiplier"`
	// Defines limit strategy type.
	// 	- NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
	// 	- MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkloadScalingPolicyCpuLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyCpuLimit)(nil)).Elem()
}

func (i WorkloadScalingPolicyCpuLimitArgs) ToWorkloadScalingPolicyCpuLimitOutput() WorkloadScalingPolicyCpuLimitOutput {
	return i.ToWorkloadScalingPolicyCpuLimitOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyCpuLimitArgs) ToWorkloadScalingPolicyCpuLimitOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyCpuLimitOutput)
}

func (i WorkloadScalingPolicyCpuLimitArgs) ToWorkloadScalingPolicyCpuLimitPtrOutput() WorkloadScalingPolicyCpuLimitPtrOutput {
	return i.ToWorkloadScalingPolicyCpuLimitPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyCpuLimitArgs) ToWorkloadScalingPolicyCpuLimitPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyCpuLimitOutput).ToWorkloadScalingPolicyCpuLimitPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyCpuLimitPtrInput is an input type that accepts WorkloadScalingPolicyCpuLimitArgs, WorkloadScalingPolicyCpuLimitPtr and WorkloadScalingPolicyCpuLimitPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyCpuLimitPtrInput` via:
//
//	        WorkloadScalingPolicyCpuLimitArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyCpuLimitPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyCpuLimitPtrOutput() WorkloadScalingPolicyCpuLimitPtrOutput
	ToWorkloadScalingPolicyCpuLimitPtrOutputWithContext(context.Context) WorkloadScalingPolicyCpuLimitPtrOutput
}

type workloadScalingPolicyCpuLimitPtrType WorkloadScalingPolicyCpuLimitArgs

func WorkloadScalingPolicyCpuLimitPtr(v *WorkloadScalingPolicyCpuLimitArgs) WorkloadScalingPolicyCpuLimitPtrInput {
	return (*workloadScalingPolicyCpuLimitPtrType)(v)
}

func (*workloadScalingPolicyCpuLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyCpuLimit)(nil)).Elem()
}

func (i *workloadScalingPolicyCpuLimitPtrType) ToWorkloadScalingPolicyCpuLimitPtrOutput() WorkloadScalingPolicyCpuLimitPtrOutput {
	return i.ToWorkloadScalingPolicyCpuLimitPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyCpuLimitPtrType) ToWorkloadScalingPolicyCpuLimitPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyCpuLimitPtrOutput)
}

type WorkloadScalingPolicyCpuLimitOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyCpuLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyCpuLimit)(nil)).Elem()
}

func (o WorkloadScalingPolicyCpuLimitOutput) ToWorkloadScalingPolicyCpuLimitOutput() WorkloadScalingPolicyCpuLimitOutput {
	return o
}

func (o WorkloadScalingPolicyCpuLimitOutput) ToWorkloadScalingPolicyCpuLimitOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuLimitOutput {
	return o
}

func (o WorkloadScalingPolicyCpuLimitOutput) ToWorkloadScalingPolicyCpuLimitPtrOutput() WorkloadScalingPolicyCpuLimitPtrOutput {
	return o.ToWorkloadScalingPolicyCpuLimitPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyCpuLimitOutput) ToWorkloadScalingPolicyCpuLimitPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyCpuLimit) *WorkloadScalingPolicyCpuLimit {
		return &v
	}).(WorkloadScalingPolicyCpuLimitPtrOutput)
}

// Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
func (o WorkloadScalingPolicyCpuLimitOutput) Multiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpuLimit) *float64 { return v.Multiplier }).(pulumi.Float64PtrOutput)
}

// Defines limit strategy type.
//   - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
//   - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
func (o WorkloadScalingPolicyCpuLimitOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyCpuLimit) string { return v.Type }).(pulumi.StringOutput)
}

type WorkloadScalingPolicyCpuLimitPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyCpuLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyCpuLimit)(nil)).Elem()
}

func (o WorkloadScalingPolicyCpuLimitPtrOutput) ToWorkloadScalingPolicyCpuLimitPtrOutput() WorkloadScalingPolicyCpuLimitPtrOutput {
	return o
}

func (o WorkloadScalingPolicyCpuLimitPtrOutput) ToWorkloadScalingPolicyCpuLimitPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyCpuLimitPtrOutput {
	return o
}

func (o WorkloadScalingPolicyCpuLimitPtrOutput) Elem() WorkloadScalingPolicyCpuLimitOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpuLimit) WorkloadScalingPolicyCpuLimit {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyCpuLimit
		return ret
	}).(WorkloadScalingPolicyCpuLimitOutput)
}

// Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
func (o WorkloadScalingPolicyCpuLimitPtrOutput) Multiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpuLimit) *float64 {
		if v == nil {
			return nil
		}
		return v.Multiplier
	}).(pulumi.Float64PtrOutput)
}

// Defines limit strategy type.
//   - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
//   - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
func (o WorkloadScalingPolicyCpuLimitPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyCpuLimit) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyDownscaling struct {
	// Defines the apply type to be used when downscaling.
	// 	- IMMEDIATE - pods are restarted immediately when new recommendation is generated.
	// 	- DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
	ApplyType *string `pulumi:"applyType"`
}

// WorkloadScalingPolicyDownscalingInput is an input type that accepts WorkloadScalingPolicyDownscalingArgs and WorkloadScalingPolicyDownscalingOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyDownscalingInput` via:
//
//	WorkloadScalingPolicyDownscalingArgs{...}
type WorkloadScalingPolicyDownscalingInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyDownscalingOutput() WorkloadScalingPolicyDownscalingOutput
	ToWorkloadScalingPolicyDownscalingOutputWithContext(context.Context) WorkloadScalingPolicyDownscalingOutput
}

type WorkloadScalingPolicyDownscalingArgs struct {
	// Defines the apply type to be used when downscaling.
	// 	- IMMEDIATE - pods are restarted immediately when new recommendation is generated.
	// 	- DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
	ApplyType pulumi.StringPtrInput `pulumi:"applyType"`
}

func (WorkloadScalingPolicyDownscalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyDownscaling)(nil)).Elem()
}

func (i WorkloadScalingPolicyDownscalingArgs) ToWorkloadScalingPolicyDownscalingOutput() WorkloadScalingPolicyDownscalingOutput {
	return i.ToWorkloadScalingPolicyDownscalingOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyDownscalingArgs) ToWorkloadScalingPolicyDownscalingOutputWithContext(ctx context.Context) WorkloadScalingPolicyDownscalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyDownscalingOutput)
}

func (i WorkloadScalingPolicyDownscalingArgs) ToWorkloadScalingPolicyDownscalingPtrOutput() WorkloadScalingPolicyDownscalingPtrOutput {
	return i.ToWorkloadScalingPolicyDownscalingPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyDownscalingArgs) ToWorkloadScalingPolicyDownscalingPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyDownscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyDownscalingOutput).ToWorkloadScalingPolicyDownscalingPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyDownscalingPtrInput is an input type that accepts WorkloadScalingPolicyDownscalingArgs, WorkloadScalingPolicyDownscalingPtr and WorkloadScalingPolicyDownscalingPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyDownscalingPtrInput` via:
//
//	        WorkloadScalingPolicyDownscalingArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyDownscalingPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyDownscalingPtrOutput() WorkloadScalingPolicyDownscalingPtrOutput
	ToWorkloadScalingPolicyDownscalingPtrOutputWithContext(context.Context) WorkloadScalingPolicyDownscalingPtrOutput
}

type workloadScalingPolicyDownscalingPtrType WorkloadScalingPolicyDownscalingArgs

func WorkloadScalingPolicyDownscalingPtr(v *WorkloadScalingPolicyDownscalingArgs) WorkloadScalingPolicyDownscalingPtrInput {
	return (*workloadScalingPolicyDownscalingPtrType)(v)
}

func (*workloadScalingPolicyDownscalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyDownscaling)(nil)).Elem()
}

func (i *workloadScalingPolicyDownscalingPtrType) ToWorkloadScalingPolicyDownscalingPtrOutput() WorkloadScalingPolicyDownscalingPtrOutput {
	return i.ToWorkloadScalingPolicyDownscalingPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyDownscalingPtrType) ToWorkloadScalingPolicyDownscalingPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyDownscalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyDownscalingPtrOutput)
}

type WorkloadScalingPolicyDownscalingOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyDownscalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyDownscaling)(nil)).Elem()
}

func (o WorkloadScalingPolicyDownscalingOutput) ToWorkloadScalingPolicyDownscalingOutput() WorkloadScalingPolicyDownscalingOutput {
	return o
}

func (o WorkloadScalingPolicyDownscalingOutput) ToWorkloadScalingPolicyDownscalingOutputWithContext(ctx context.Context) WorkloadScalingPolicyDownscalingOutput {
	return o
}

func (o WorkloadScalingPolicyDownscalingOutput) ToWorkloadScalingPolicyDownscalingPtrOutput() WorkloadScalingPolicyDownscalingPtrOutput {
	return o.ToWorkloadScalingPolicyDownscalingPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyDownscalingOutput) ToWorkloadScalingPolicyDownscalingPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyDownscalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyDownscaling) *WorkloadScalingPolicyDownscaling {
		return &v
	}).(WorkloadScalingPolicyDownscalingPtrOutput)
}

// Defines the apply type to be used when downscaling.
//   - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
//   - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
func (o WorkloadScalingPolicyDownscalingOutput) ApplyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyDownscaling) *string { return v.ApplyType }).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyDownscalingPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyDownscalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyDownscaling)(nil)).Elem()
}

func (o WorkloadScalingPolicyDownscalingPtrOutput) ToWorkloadScalingPolicyDownscalingPtrOutput() WorkloadScalingPolicyDownscalingPtrOutput {
	return o
}

func (o WorkloadScalingPolicyDownscalingPtrOutput) ToWorkloadScalingPolicyDownscalingPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyDownscalingPtrOutput {
	return o
}

func (o WorkloadScalingPolicyDownscalingPtrOutput) Elem() WorkloadScalingPolicyDownscalingOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyDownscaling) WorkloadScalingPolicyDownscaling {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyDownscaling
		return ret
	}).(WorkloadScalingPolicyDownscalingOutput)
}

// Defines the apply type to be used when downscaling.
//   - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
//   - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
func (o WorkloadScalingPolicyDownscalingPtrOutput) ApplyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyDownscaling) *string {
		if v == nil {
			return nil
		}
		return v.ApplyType
	}).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyMemory struct {
	// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
	//
	// Deprecated: Deprecated
	ApplyThreshold *float64 `pulumi:"applyThreshold"`
	// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
	ApplyThresholdStrategy *WorkloadScalingPolicyMemoryApplyThresholdStrategy `pulumi:"applyThresholdStrategy"`
	// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
	Args []string `pulumi:"args"`
	// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
	Function *string `pulumi:"function"`
	// Resource limit settings
	Limit *WorkloadScalingPolicyMemoryLimit `pulumi:"limit"`
	// The look back period in seconds for the recommendation.
	LookBackPeriodSeconds *float64 `pulumi:"lookBackPeriodSeconds"`
	// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
	ManagementOption *string `pulumi:"managementOption"`
	// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
	Max *float64 `pulumi:"max"`
	// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
	Min *float64 `pulumi:"min"`
	// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
	Overhead *float64 `pulumi:"overhead"`
}

// WorkloadScalingPolicyMemoryInput is an input type that accepts WorkloadScalingPolicyMemoryArgs and WorkloadScalingPolicyMemoryOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyMemoryInput` via:
//
//	WorkloadScalingPolicyMemoryArgs{...}
type WorkloadScalingPolicyMemoryInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyMemoryOutput() WorkloadScalingPolicyMemoryOutput
	ToWorkloadScalingPolicyMemoryOutputWithContext(context.Context) WorkloadScalingPolicyMemoryOutput
}

type WorkloadScalingPolicyMemoryArgs struct {
	// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
	//
	// Deprecated: Deprecated
	ApplyThreshold pulumi.Float64PtrInput `pulumi:"applyThreshold"`
	// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
	ApplyThresholdStrategy WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrInput `pulumi:"applyThresholdStrategy"`
	// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
	Args pulumi.StringArrayInput `pulumi:"args"`
	// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
	Function pulumi.StringPtrInput `pulumi:"function"`
	// Resource limit settings
	Limit WorkloadScalingPolicyMemoryLimitPtrInput `pulumi:"limit"`
	// The look back period in seconds for the recommendation.
	LookBackPeriodSeconds pulumi.Float64PtrInput `pulumi:"lookBackPeriodSeconds"`
	// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
	ManagementOption pulumi.StringPtrInput `pulumi:"managementOption"`
	// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
	Max pulumi.Float64PtrInput `pulumi:"max"`
	// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
	Min pulumi.Float64PtrInput `pulumi:"min"`
	// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
	Overhead pulumi.Float64PtrInput `pulumi:"overhead"`
}

func (WorkloadScalingPolicyMemoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyMemory)(nil)).Elem()
}

func (i WorkloadScalingPolicyMemoryArgs) ToWorkloadScalingPolicyMemoryOutput() WorkloadScalingPolicyMemoryOutput {
	return i.ToWorkloadScalingPolicyMemoryOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyMemoryArgs) ToWorkloadScalingPolicyMemoryOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryOutput)
}

func (i WorkloadScalingPolicyMemoryArgs) ToWorkloadScalingPolicyMemoryPtrOutput() WorkloadScalingPolicyMemoryPtrOutput {
	return i.ToWorkloadScalingPolicyMemoryPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyMemoryArgs) ToWorkloadScalingPolicyMemoryPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryOutput).ToWorkloadScalingPolicyMemoryPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyMemoryPtrInput is an input type that accepts WorkloadScalingPolicyMemoryArgs, WorkloadScalingPolicyMemoryPtr and WorkloadScalingPolicyMemoryPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyMemoryPtrInput` via:
//
//	        WorkloadScalingPolicyMemoryArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyMemoryPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyMemoryPtrOutput() WorkloadScalingPolicyMemoryPtrOutput
	ToWorkloadScalingPolicyMemoryPtrOutputWithContext(context.Context) WorkloadScalingPolicyMemoryPtrOutput
}

type workloadScalingPolicyMemoryPtrType WorkloadScalingPolicyMemoryArgs

func WorkloadScalingPolicyMemoryPtr(v *WorkloadScalingPolicyMemoryArgs) WorkloadScalingPolicyMemoryPtrInput {
	return (*workloadScalingPolicyMemoryPtrType)(v)
}

func (*workloadScalingPolicyMemoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyMemory)(nil)).Elem()
}

func (i *workloadScalingPolicyMemoryPtrType) ToWorkloadScalingPolicyMemoryPtrOutput() WorkloadScalingPolicyMemoryPtrOutput {
	return i.ToWorkloadScalingPolicyMemoryPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyMemoryPtrType) ToWorkloadScalingPolicyMemoryPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryPtrOutput)
}

type WorkloadScalingPolicyMemoryOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyMemoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyMemory)(nil)).Elem()
}

func (o WorkloadScalingPolicyMemoryOutput) ToWorkloadScalingPolicyMemoryOutput() WorkloadScalingPolicyMemoryOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryOutput) ToWorkloadScalingPolicyMemoryOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryOutput) ToWorkloadScalingPolicyMemoryPtrOutput() WorkloadScalingPolicyMemoryPtrOutput {
	return o.ToWorkloadScalingPolicyMemoryPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyMemoryOutput) ToWorkloadScalingPolicyMemoryPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyMemory) *WorkloadScalingPolicyMemory {
		return &v
	}).(WorkloadScalingPolicyMemoryPtrOutput)
}

// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
//
// Deprecated: Deprecated
func (o WorkloadScalingPolicyMemoryOutput) ApplyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) *float64 { return v.ApplyThreshold }).(pulumi.Float64PtrOutput)
}

// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
func (o WorkloadScalingPolicyMemoryOutput) ApplyThresholdStrategy() WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) *WorkloadScalingPolicyMemoryApplyThresholdStrategy {
		return v.ApplyThresholdStrategy
	}).(WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput)
}

// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
func (o WorkloadScalingPolicyMemoryOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
func (o WorkloadScalingPolicyMemoryOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) *string { return v.Function }).(pulumi.StringPtrOutput)
}

// Resource limit settings
func (o WorkloadScalingPolicyMemoryOutput) Limit() WorkloadScalingPolicyMemoryLimitPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) *WorkloadScalingPolicyMemoryLimit { return v.Limit }).(WorkloadScalingPolicyMemoryLimitPtrOutput)
}

// The look back period in seconds for the recommendation.
func (o WorkloadScalingPolicyMemoryOutput) LookBackPeriodSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) *float64 { return v.LookBackPeriodSeconds }).(pulumi.Float64PtrOutput)
}

// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
func (o WorkloadScalingPolicyMemoryOutput) ManagementOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) *string { return v.ManagementOption }).(pulumi.StringPtrOutput)
}

// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
func (o WorkloadScalingPolicyMemoryOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
func (o WorkloadScalingPolicyMemoryOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) *float64 { return v.Min }).(pulumi.Float64PtrOutput)
}

// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
func (o WorkloadScalingPolicyMemoryOutput) Overhead() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemory) *float64 { return v.Overhead }).(pulumi.Float64PtrOutput)
}

type WorkloadScalingPolicyMemoryPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyMemoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyMemory)(nil)).Elem()
}

func (o WorkloadScalingPolicyMemoryPtrOutput) ToWorkloadScalingPolicyMemoryPtrOutput() WorkloadScalingPolicyMemoryPtrOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryPtrOutput) ToWorkloadScalingPolicyMemoryPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryPtrOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryPtrOutput) Elem() WorkloadScalingPolicyMemoryOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) WorkloadScalingPolicyMemory {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyMemory
		return ret
	}).(WorkloadScalingPolicyMemoryOutput)
}

// The threshold of when to apply the recommendation. Recommendation will be applied when diff of current requests and new recommendation is greater than set value
//
// Deprecated: Deprecated
func (o WorkloadScalingPolicyMemoryPtrOutput) ApplyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) *float64 {
		if v == nil {
			return nil
		}
		return v.ApplyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Resource apply threshold strategy settings. The default strategy is `PERCENTAGE` with percentage value set to 0.1.
func (o WorkloadScalingPolicyMemoryPtrOutput) ApplyThresholdStrategy() WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) *WorkloadScalingPolicyMemoryApplyThresholdStrategy {
		if v == nil {
			return nil
		}
		return v.ApplyThresholdStrategy
	}).(WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput)
}

// The arguments for the function - i.e. for `QUANTILE` this should be a [0, 1] float. `MAX` doesn't accept any args
func (o WorkloadScalingPolicyMemoryPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// The function used to calculate the resource recommendation. Supported values: `QUANTILE`, `MAX`
func (o WorkloadScalingPolicyMemoryPtrOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.Function
	}).(pulumi.StringPtrOutput)
}

// Resource limit settings
func (o WorkloadScalingPolicyMemoryPtrOutput) Limit() WorkloadScalingPolicyMemoryLimitPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) *WorkloadScalingPolicyMemoryLimit {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(WorkloadScalingPolicyMemoryLimitPtrOutput)
}

// The look back period in seconds for the recommendation.
func (o WorkloadScalingPolicyMemoryPtrOutput) LookBackPeriodSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) *float64 {
		if v == nil {
			return nil
		}
		return v.LookBackPeriodSeconds
	}).(pulumi.Float64PtrOutput)
}

// Disables management for a single resource when set to `READ_ONLY`. The resource will use its original workload template requests and limits. Supported value: `READ_ONLY`. Minimum required workload-autoscaler version: `v0.23.1`.
func (o WorkloadScalingPolicyMemoryPtrOutput) ManagementOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) *string {
		if v == nil {
			return nil
		}
		return v.ManagementOption
	}).(pulumi.StringPtrOutput)
}

// Max values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
func (o WorkloadScalingPolicyMemoryPtrOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) *float64 {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.Float64PtrOutput)
}

// Min values for the recommendation, applies to every container. For memory - this is in MiB, for CPU - this is in cores.
func (o WorkloadScalingPolicyMemoryPtrOutput) Min() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) *float64 {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.Float64PtrOutput)
}

// Overhead for the recommendation, e.g. `0.1` will result in 10% higher recommendation
func (o WorkloadScalingPolicyMemoryPtrOutput) Overhead() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemory) *float64 {
		if v == nil {
			return nil
		}
		return v.Overhead
	}).(pulumi.Float64PtrOutput)
}

type WorkloadScalingPolicyMemoryApplyThresholdStrategy struct {
	// If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
	Denominator *string `pulumi:"denominator"`
	// The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
	// 	- if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
	// 	- if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
	// 	It must be defined for the CUSTOM_ADAPTIVE strategy.
	Exponent *float64 `pulumi:"exponent"`
	// The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
	Numerator *float64 `pulumi:"numerator"`
	// Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
	Percentage *float64 `pulumi:"percentage"`
	// Defines apply theshold strategy type.
	// 	- PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
	//     - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
	//     - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
	Type string `pulumi:"type"`
}

// WorkloadScalingPolicyMemoryApplyThresholdStrategyInput is an input type that accepts WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs and WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyMemoryApplyThresholdStrategyInput` via:
//
//	WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs{...}
type WorkloadScalingPolicyMemoryApplyThresholdStrategyInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyMemoryApplyThresholdStrategyOutput() WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput
	ToWorkloadScalingPolicyMemoryApplyThresholdStrategyOutputWithContext(context.Context) WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput
}

type WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs struct {
	// If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
	Denominator pulumi.StringPtrInput `pulumi:"denominator"`
	// The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
	// 	- if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
	// 	- if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
	// 	It must be defined for the CUSTOM_ADAPTIVE strategy.
	Exponent pulumi.Float64PtrInput `pulumi:"exponent"`
	// The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
	Numerator pulumi.Float64PtrInput `pulumi:"numerator"`
	// Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
	Percentage pulumi.Float64PtrInput `pulumi:"percentage"`
	// Defines apply theshold strategy type.
	// 	- PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
	//     - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
	//     - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyMemoryApplyThresholdStrategy)(nil)).Elem()
}

func (i WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyOutput() WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput {
	return i.ToWorkloadScalingPolicyMemoryApplyThresholdStrategyOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput)
}

func (i WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return i.ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput).ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrInput is an input type that accepts WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs, WorkloadScalingPolicyMemoryApplyThresholdStrategyPtr and WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrInput` via:
//
//	        WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput
	ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutputWithContext(context.Context) WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput
}

type workloadScalingPolicyMemoryApplyThresholdStrategyPtrType WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs

func WorkloadScalingPolicyMemoryApplyThresholdStrategyPtr(v *WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs) WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrInput {
	return (*workloadScalingPolicyMemoryApplyThresholdStrategyPtrType)(v)
}

func (*workloadScalingPolicyMemoryApplyThresholdStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyMemoryApplyThresholdStrategy)(nil)).Elem()
}

func (i *workloadScalingPolicyMemoryApplyThresholdStrategyPtrType) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return i.ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyMemoryApplyThresholdStrategyPtrType) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput)
}

type WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyMemoryApplyThresholdStrategy)(nil)).Elem()
}

func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyOutput() WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return o.ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyMemoryApplyThresholdStrategy) *WorkloadScalingPolicyMemoryApplyThresholdStrategy {
		return &v
	}).(WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput)
}

// If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) Denominator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemoryApplyThresholdStrategy) *string { return v.Denominator }).(pulumi.StringPtrOutput)
}

// The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
//   - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
//   - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
//     It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) Exponent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemoryApplyThresholdStrategy) *float64 { return v.Exponent }).(pulumi.Float64PtrOutput)
}

// The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) Numerator() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemoryApplyThresholdStrategy) *float64 { return v.Numerator }).(pulumi.Float64PtrOutput)
}

// Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemoryApplyThresholdStrategy) *float64 { return v.Percentage }).(pulumi.Float64PtrOutput)
}

// Defines apply theshold strategy type.
//   - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
//   - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
//   - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemoryApplyThresholdStrategy) string { return v.Type }).(pulumi.StringOutput)
}

type WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyMemoryApplyThresholdStrategy)(nil)).Elem()
}

func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput() WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput) ToWorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput) Elem() WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryApplyThresholdStrategy) WorkloadScalingPolicyMemoryApplyThresholdStrategy {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyMemoryApplyThresholdStrategy
		return ret
	}).(WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput)
}

// If denominator is close or equal to 0, the threshold will be much bigger for small values.For example when numerator, exponent is 1 and denominator is 0 the threshold for 0.5 req. CPU will be 200%.It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput) Denominator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryApplyThresholdStrategy) *string {
		if v == nil {
			return nil
		}
		return v.Denominator
	}).(pulumi.StringPtrOutput)
}

// The exponent changes how fast the curve is going down. The smaller value will cause that we won’t pick extremely small number for big resources, for example:
//   - if numerator is 0, denominator is 1, and exponent is 1, for 50 CPU we will pick 2% threshold
//   - if numerator is 0, denominator is 1, and exponent is 0.8, for 50 CPU we will pick 4.3% threshold
//     It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput) Exponent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryApplyThresholdStrategy) *float64 {
		if v == nil {
			return nil
		}
		return v.Exponent
	}).(pulumi.Float64PtrOutput)
}

// The numerator affects vertical stretch of function used in adaptive threshold - smaller number will create smaller threshold.It must be defined for the CUSTOM_ADAPTIVE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput) Numerator() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryApplyThresholdStrategy) *float64 {
		if v == nil {
			return nil
		}
		return v.Numerator
	}).(pulumi.Float64PtrOutput)
}

// Percentage of a how much difference should there be between the current pod requests and the new recommendation. It must be defined for the PERCENTAGE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput) Percentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryApplyThresholdStrategy) *float64 {
		if v == nil {
			return nil
		}
		return v.Percentage
	}).(pulumi.Float64PtrOutput)
}

// Defines apply theshold strategy type.
//   - PERCENTAGE - recommendation will be applied when diff of current requests and new recommendation is greater than set value
//   - DEFAULT_ADAPTIVE - will pick larger threshold percentage for small workloads and smaller percentage for large workloads.
//   - CUSTOM_ADAPTIVE - works in same way as DEFAULT_ADAPTIVE, but it allows to tweak parameters of adaptive threshold formula: percentage = numerator/(currentRequest + denominator)^exponent. This strategy is for advance use cases, we recommend to use DEFAULT_ADAPTIVE strategy.
func (o WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryApplyThresholdStrategy) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyMemoryEvent struct {
	// Defines the apply type to be used when applying recommendation for memory related event.
	// 	- IMMEDIATE - pods are restarted immediately when new recommendation is generated.
	// 	- DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
	ApplyType *string `pulumi:"applyType"`
}

// WorkloadScalingPolicyMemoryEventInput is an input type that accepts WorkloadScalingPolicyMemoryEventArgs and WorkloadScalingPolicyMemoryEventOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyMemoryEventInput` via:
//
//	WorkloadScalingPolicyMemoryEventArgs{...}
type WorkloadScalingPolicyMemoryEventInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyMemoryEventOutput() WorkloadScalingPolicyMemoryEventOutput
	ToWorkloadScalingPolicyMemoryEventOutputWithContext(context.Context) WorkloadScalingPolicyMemoryEventOutput
}

type WorkloadScalingPolicyMemoryEventArgs struct {
	// Defines the apply type to be used when applying recommendation for memory related event.
	// 	- IMMEDIATE - pods are restarted immediately when new recommendation is generated.
	// 	- DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
	ApplyType pulumi.StringPtrInput `pulumi:"applyType"`
}

func (WorkloadScalingPolicyMemoryEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyMemoryEvent)(nil)).Elem()
}

func (i WorkloadScalingPolicyMemoryEventArgs) ToWorkloadScalingPolicyMemoryEventOutput() WorkloadScalingPolicyMemoryEventOutput {
	return i.ToWorkloadScalingPolicyMemoryEventOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyMemoryEventArgs) ToWorkloadScalingPolicyMemoryEventOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryEventOutput)
}

func (i WorkloadScalingPolicyMemoryEventArgs) ToWorkloadScalingPolicyMemoryEventPtrOutput() WorkloadScalingPolicyMemoryEventPtrOutput {
	return i.ToWorkloadScalingPolicyMemoryEventPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyMemoryEventArgs) ToWorkloadScalingPolicyMemoryEventPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryEventPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryEventOutput).ToWorkloadScalingPolicyMemoryEventPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyMemoryEventPtrInput is an input type that accepts WorkloadScalingPolicyMemoryEventArgs, WorkloadScalingPolicyMemoryEventPtr and WorkloadScalingPolicyMemoryEventPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyMemoryEventPtrInput` via:
//
//	        WorkloadScalingPolicyMemoryEventArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyMemoryEventPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyMemoryEventPtrOutput() WorkloadScalingPolicyMemoryEventPtrOutput
	ToWorkloadScalingPolicyMemoryEventPtrOutputWithContext(context.Context) WorkloadScalingPolicyMemoryEventPtrOutput
}

type workloadScalingPolicyMemoryEventPtrType WorkloadScalingPolicyMemoryEventArgs

func WorkloadScalingPolicyMemoryEventPtr(v *WorkloadScalingPolicyMemoryEventArgs) WorkloadScalingPolicyMemoryEventPtrInput {
	return (*workloadScalingPolicyMemoryEventPtrType)(v)
}

func (*workloadScalingPolicyMemoryEventPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyMemoryEvent)(nil)).Elem()
}

func (i *workloadScalingPolicyMemoryEventPtrType) ToWorkloadScalingPolicyMemoryEventPtrOutput() WorkloadScalingPolicyMemoryEventPtrOutput {
	return i.ToWorkloadScalingPolicyMemoryEventPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyMemoryEventPtrType) ToWorkloadScalingPolicyMemoryEventPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryEventPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryEventPtrOutput)
}

type WorkloadScalingPolicyMemoryEventOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyMemoryEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyMemoryEvent)(nil)).Elem()
}

func (o WorkloadScalingPolicyMemoryEventOutput) ToWorkloadScalingPolicyMemoryEventOutput() WorkloadScalingPolicyMemoryEventOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryEventOutput) ToWorkloadScalingPolicyMemoryEventOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryEventOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryEventOutput) ToWorkloadScalingPolicyMemoryEventPtrOutput() WorkloadScalingPolicyMemoryEventPtrOutput {
	return o.ToWorkloadScalingPolicyMemoryEventPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyMemoryEventOutput) ToWorkloadScalingPolicyMemoryEventPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryEventPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyMemoryEvent) *WorkloadScalingPolicyMemoryEvent {
		return &v
	}).(WorkloadScalingPolicyMemoryEventPtrOutput)
}

// Defines the apply type to be used when applying recommendation for memory related event.
//   - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
//   - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
func (o WorkloadScalingPolicyMemoryEventOutput) ApplyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemoryEvent) *string { return v.ApplyType }).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyMemoryEventPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyMemoryEventPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyMemoryEvent)(nil)).Elem()
}

func (o WorkloadScalingPolicyMemoryEventPtrOutput) ToWorkloadScalingPolicyMemoryEventPtrOutput() WorkloadScalingPolicyMemoryEventPtrOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryEventPtrOutput) ToWorkloadScalingPolicyMemoryEventPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryEventPtrOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryEventPtrOutput) Elem() WorkloadScalingPolicyMemoryEventOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryEvent) WorkloadScalingPolicyMemoryEvent {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyMemoryEvent
		return ret
	}).(WorkloadScalingPolicyMemoryEventOutput)
}

// Defines the apply type to be used when applying recommendation for memory related event.
//   - IMMEDIATE - pods are restarted immediately when new recommendation is generated.
//   - DEFERRED - pods are not restarted and recommendation values are applied during natural restarts only (new deployment, etc.)
func (o WorkloadScalingPolicyMemoryEventPtrOutput) ApplyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryEvent) *string {
		if v == nil {
			return nil
		}
		return v.ApplyType
	}).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyMemoryLimit struct {
	// Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
	Multiplier *float64 `pulumi:"multiplier"`
	// Defines limit strategy type.
	// 	- NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
	// 	- MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
	Type string `pulumi:"type"`
}

// WorkloadScalingPolicyMemoryLimitInput is an input type that accepts WorkloadScalingPolicyMemoryLimitArgs and WorkloadScalingPolicyMemoryLimitOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyMemoryLimitInput` via:
//
//	WorkloadScalingPolicyMemoryLimitArgs{...}
type WorkloadScalingPolicyMemoryLimitInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyMemoryLimitOutput() WorkloadScalingPolicyMemoryLimitOutput
	ToWorkloadScalingPolicyMemoryLimitOutputWithContext(context.Context) WorkloadScalingPolicyMemoryLimitOutput
}

type WorkloadScalingPolicyMemoryLimitArgs struct {
	// Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
	Multiplier pulumi.Float64PtrInput `pulumi:"multiplier"`
	// Defines limit strategy type.
	// 	- NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
	// 	- MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkloadScalingPolicyMemoryLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyMemoryLimit)(nil)).Elem()
}

func (i WorkloadScalingPolicyMemoryLimitArgs) ToWorkloadScalingPolicyMemoryLimitOutput() WorkloadScalingPolicyMemoryLimitOutput {
	return i.ToWorkloadScalingPolicyMemoryLimitOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyMemoryLimitArgs) ToWorkloadScalingPolicyMemoryLimitOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryLimitOutput)
}

func (i WorkloadScalingPolicyMemoryLimitArgs) ToWorkloadScalingPolicyMemoryLimitPtrOutput() WorkloadScalingPolicyMemoryLimitPtrOutput {
	return i.ToWorkloadScalingPolicyMemoryLimitPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyMemoryLimitArgs) ToWorkloadScalingPolicyMemoryLimitPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryLimitOutput).ToWorkloadScalingPolicyMemoryLimitPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyMemoryLimitPtrInput is an input type that accepts WorkloadScalingPolicyMemoryLimitArgs, WorkloadScalingPolicyMemoryLimitPtr and WorkloadScalingPolicyMemoryLimitPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyMemoryLimitPtrInput` via:
//
//	        WorkloadScalingPolicyMemoryLimitArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyMemoryLimitPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyMemoryLimitPtrOutput() WorkloadScalingPolicyMemoryLimitPtrOutput
	ToWorkloadScalingPolicyMemoryLimitPtrOutputWithContext(context.Context) WorkloadScalingPolicyMemoryLimitPtrOutput
}

type workloadScalingPolicyMemoryLimitPtrType WorkloadScalingPolicyMemoryLimitArgs

func WorkloadScalingPolicyMemoryLimitPtr(v *WorkloadScalingPolicyMemoryLimitArgs) WorkloadScalingPolicyMemoryLimitPtrInput {
	return (*workloadScalingPolicyMemoryLimitPtrType)(v)
}

func (*workloadScalingPolicyMemoryLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyMemoryLimit)(nil)).Elem()
}

func (i *workloadScalingPolicyMemoryLimitPtrType) ToWorkloadScalingPolicyMemoryLimitPtrOutput() WorkloadScalingPolicyMemoryLimitPtrOutput {
	return i.ToWorkloadScalingPolicyMemoryLimitPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyMemoryLimitPtrType) ToWorkloadScalingPolicyMemoryLimitPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyMemoryLimitPtrOutput)
}

type WorkloadScalingPolicyMemoryLimitOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyMemoryLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyMemoryLimit)(nil)).Elem()
}

func (o WorkloadScalingPolicyMemoryLimitOutput) ToWorkloadScalingPolicyMemoryLimitOutput() WorkloadScalingPolicyMemoryLimitOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryLimitOutput) ToWorkloadScalingPolicyMemoryLimitOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryLimitOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryLimitOutput) ToWorkloadScalingPolicyMemoryLimitPtrOutput() WorkloadScalingPolicyMemoryLimitPtrOutput {
	return o.ToWorkloadScalingPolicyMemoryLimitPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyMemoryLimitOutput) ToWorkloadScalingPolicyMemoryLimitPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyMemoryLimit) *WorkloadScalingPolicyMemoryLimit {
		return &v
	}).(WorkloadScalingPolicyMemoryLimitPtrOutput)
}

// Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
func (o WorkloadScalingPolicyMemoryLimitOutput) Multiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemoryLimit) *float64 { return v.Multiplier }).(pulumi.Float64PtrOutput)
}

// Defines limit strategy type.
//   - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
//   - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
func (o WorkloadScalingPolicyMemoryLimitOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyMemoryLimit) string { return v.Type }).(pulumi.StringOutput)
}

type WorkloadScalingPolicyMemoryLimitPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyMemoryLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyMemoryLimit)(nil)).Elem()
}

func (o WorkloadScalingPolicyMemoryLimitPtrOutput) ToWorkloadScalingPolicyMemoryLimitPtrOutput() WorkloadScalingPolicyMemoryLimitPtrOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryLimitPtrOutput) ToWorkloadScalingPolicyMemoryLimitPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyMemoryLimitPtrOutput {
	return o
}

func (o WorkloadScalingPolicyMemoryLimitPtrOutput) Elem() WorkloadScalingPolicyMemoryLimitOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryLimit) WorkloadScalingPolicyMemoryLimit {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyMemoryLimit
		return ret
	}).(WorkloadScalingPolicyMemoryLimitOutput)
}

// Multiplier used to calculate the resource limit. It must be defined for the MULTIPLIER strategy.
func (o WorkloadScalingPolicyMemoryLimitPtrOutput) Multiplier() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryLimit) *float64 {
		if v == nil {
			return nil
		}
		return v.Multiplier
	}).(pulumi.Float64PtrOutput)
}

// Defines limit strategy type.
//   - NO_LIMIT - removes the resource limit even if it was specified in the workload spec.
//   - MULTIPLIER - used to calculate the resource limit. The final value is determined by multiplying the resource request by the specified factor.
func (o WorkloadScalingPolicyMemoryLimitPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyMemoryLimit) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyStartup struct {
	// Defines the duration (in seconds) during which elevated resource usage is expected at startup.
	// When set, recommendations will be adjusted to disregard resource spikes within this period.
	// If not specified, the workload will receive standard recommendations without startup considerations.
	PeriodSeconds *float64 `pulumi:"periodSeconds"`
}

// WorkloadScalingPolicyStartupInput is an input type that accepts WorkloadScalingPolicyStartupArgs and WorkloadScalingPolicyStartupOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyStartupInput` via:
//
//	WorkloadScalingPolicyStartupArgs{...}
type WorkloadScalingPolicyStartupInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyStartupOutput() WorkloadScalingPolicyStartupOutput
	ToWorkloadScalingPolicyStartupOutputWithContext(context.Context) WorkloadScalingPolicyStartupOutput
}

type WorkloadScalingPolicyStartupArgs struct {
	// Defines the duration (in seconds) during which elevated resource usage is expected at startup.
	// When set, recommendations will be adjusted to disregard resource spikes within this period.
	// If not specified, the workload will receive standard recommendations without startup considerations.
	PeriodSeconds pulumi.Float64PtrInput `pulumi:"periodSeconds"`
}

func (WorkloadScalingPolicyStartupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyStartup)(nil)).Elem()
}

func (i WorkloadScalingPolicyStartupArgs) ToWorkloadScalingPolicyStartupOutput() WorkloadScalingPolicyStartupOutput {
	return i.ToWorkloadScalingPolicyStartupOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyStartupArgs) ToWorkloadScalingPolicyStartupOutputWithContext(ctx context.Context) WorkloadScalingPolicyStartupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyStartupOutput)
}

func (i WorkloadScalingPolicyStartupArgs) ToWorkloadScalingPolicyStartupPtrOutput() WorkloadScalingPolicyStartupPtrOutput {
	return i.ToWorkloadScalingPolicyStartupPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyStartupArgs) ToWorkloadScalingPolicyStartupPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyStartupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyStartupOutput).ToWorkloadScalingPolicyStartupPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyStartupPtrInput is an input type that accepts WorkloadScalingPolicyStartupArgs, WorkloadScalingPolicyStartupPtr and WorkloadScalingPolicyStartupPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyStartupPtrInput` via:
//
//	        WorkloadScalingPolicyStartupArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyStartupPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyStartupPtrOutput() WorkloadScalingPolicyStartupPtrOutput
	ToWorkloadScalingPolicyStartupPtrOutputWithContext(context.Context) WorkloadScalingPolicyStartupPtrOutput
}

type workloadScalingPolicyStartupPtrType WorkloadScalingPolicyStartupArgs

func WorkloadScalingPolicyStartupPtr(v *WorkloadScalingPolicyStartupArgs) WorkloadScalingPolicyStartupPtrInput {
	return (*workloadScalingPolicyStartupPtrType)(v)
}

func (*workloadScalingPolicyStartupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyStartup)(nil)).Elem()
}

func (i *workloadScalingPolicyStartupPtrType) ToWorkloadScalingPolicyStartupPtrOutput() WorkloadScalingPolicyStartupPtrOutput {
	return i.ToWorkloadScalingPolicyStartupPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyStartupPtrType) ToWorkloadScalingPolicyStartupPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyStartupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyStartupPtrOutput)
}

type WorkloadScalingPolicyStartupOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyStartupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyStartup)(nil)).Elem()
}

func (o WorkloadScalingPolicyStartupOutput) ToWorkloadScalingPolicyStartupOutput() WorkloadScalingPolicyStartupOutput {
	return o
}

func (o WorkloadScalingPolicyStartupOutput) ToWorkloadScalingPolicyStartupOutputWithContext(ctx context.Context) WorkloadScalingPolicyStartupOutput {
	return o
}

func (o WorkloadScalingPolicyStartupOutput) ToWorkloadScalingPolicyStartupPtrOutput() WorkloadScalingPolicyStartupPtrOutput {
	return o.ToWorkloadScalingPolicyStartupPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyStartupOutput) ToWorkloadScalingPolicyStartupPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyStartupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyStartup) *WorkloadScalingPolicyStartup {
		return &v
	}).(WorkloadScalingPolicyStartupPtrOutput)
}

// Defines the duration (in seconds) during which elevated resource usage is expected at startup.
// When set, recommendations will be adjusted to disregard resource spikes within this period.
// If not specified, the workload will receive standard recommendations without startup considerations.
func (o WorkloadScalingPolicyStartupOutput) PeriodSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyStartup) *float64 { return v.PeriodSeconds }).(pulumi.Float64PtrOutput)
}

type WorkloadScalingPolicyStartupPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyStartupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyStartup)(nil)).Elem()
}

func (o WorkloadScalingPolicyStartupPtrOutput) ToWorkloadScalingPolicyStartupPtrOutput() WorkloadScalingPolicyStartupPtrOutput {
	return o
}

func (o WorkloadScalingPolicyStartupPtrOutput) ToWorkloadScalingPolicyStartupPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyStartupPtrOutput {
	return o
}

func (o WorkloadScalingPolicyStartupPtrOutput) Elem() WorkloadScalingPolicyStartupOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyStartup) WorkloadScalingPolicyStartup {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyStartup
		return ret
	}).(WorkloadScalingPolicyStartupOutput)
}

// Defines the duration (in seconds) during which elevated resource usage is expected at startup.
// When set, recommendations will be adjusted to disregard resource spikes within this period.
// If not specified, the workload will receive standard recommendations without startup considerations.
func (o WorkloadScalingPolicyStartupPtrOutput) PeriodSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyStartup) *float64 {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.Float64PtrOutput)
}

type WorkloadScalingPolicyTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Read   *string `pulumi:"read"`
	Update *string `pulumi:"update"`
}

// WorkloadScalingPolicyTimeoutsInput is an input type that accepts WorkloadScalingPolicyTimeoutsArgs and WorkloadScalingPolicyTimeoutsOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyTimeoutsInput` via:
//
//	WorkloadScalingPolicyTimeoutsArgs{...}
type WorkloadScalingPolicyTimeoutsInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyTimeoutsOutput() WorkloadScalingPolicyTimeoutsOutput
	ToWorkloadScalingPolicyTimeoutsOutputWithContext(context.Context) WorkloadScalingPolicyTimeoutsOutput
}

type WorkloadScalingPolicyTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Read   pulumi.StringPtrInput `pulumi:"read"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (WorkloadScalingPolicyTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyTimeouts)(nil)).Elem()
}

func (i WorkloadScalingPolicyTimeoutsArgs) ToWorkloadScalingPolicyTimeoutsOutput() WorkloadScalingPolicyTimeoutsOutput {
	return i.ToWorkloadScalingPolicyTimeoutsOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyTimeoutsArgs) ToWorkloadScalingPolicyTimeoutsOutputWithContext(ctx context.Context) WorkloadScalingPolicyTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyTimeoutsOutput)
}

func (i WorkloadScalingPolicyTimeoutsArgs) ToWorkloadScalingPolicyTimeoutsPtrOutput() WorkloadScalingPolicyTimeoutsPtrOutput {
	return i.ToWorkloadScalingPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i WorkloadScalingPolicyTimeoutsArgs) ToWorkloadScalingPolicyTimeoutsPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyTimeoutsOutput).ToWorkloadScalingPolicyTimeoutsPtrOutputWithContext(ctx)
}

// WorkloadScalingPolicyTimeoutsPtrInput is an input type that accepts WorkloadScalingPolicyTimeoutsArgs, WorkloadScalingPolicyTimeoutsPtr and WorkloadScalingPolicyTimeoutsPtrOutput values.
// You can construct a concrete instance of `WorkloadScalingPolicyTimeoutsPtrInput` via:
//
//	        WorkloadScalingPolicyTimeoutsArgs{...}
//
//	or:
//
//	        nil
type WorkloadScalingPolicyTimeoutsPtrInput interface {
	pulumi.Input

	ToWorkloadScalingPolicyTimeoutsPtrOutput() WorkloadScalingPolicyTimeoutsPtrOutput
	ToWorkloadScalingPolicyTimeoutsPtrOutputWithContext(context.Context) WorkloadScalingPolicyTimeoutsPtrOutput
}

type workloadScalingPolicyTimeoutsPtrType WorkloadScalingPolicyTimeoutsArgs

func WorkloadScalingPolicyTimeoutsPtr(v *WorkloadScalingPolicyTimeoutsArgs) WorkloadScalingPolicyTimeoutsPtrInput {
	return (*workloadScalingPolicyTimeoutsPtrType)(v)
}

func (*workloadScalingPolicyTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyTimeouts)(nil)).Elem()
}

func (i *workloadScalingPolicyTimeoutsPtrType) ToWorkloadScalingPolicyTimeoutsPtrOutput() WorkloadScalingPolicyTimeoutsPtrOutput {
	return i.ToWorkloadScalingPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (i *workloadScalingPolicyTimeoutsPtrType) ToWorkloadScalingPolicyTimeoutsPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadScalingPolicyTimeoutsPtrOutput)
}

type WorkloadScalingPolicyTimeoutsOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadScalingPolicyTimeouts)(nil)).Elem()
}

func (o WorkloadScalingPolicyTimeoutsOutput) ToWorkloadScalingPolicyTimeoutsOutput() WorkloadScalingPolicyTimeoutsOutput {
	return o
}

func (o WorkloadScalingPolicyTimeoutsOutput) ToWorkloadScalingPolicyTimeoutsOutputWithContext(ctx context.Context) WorkloadScalingPolicyTimeoutsOutput {
	return o
}

func (o WorkloadScalingPolicyTimeoutsOutput) ToWorkloadScalingPolicyTimeoutsPtrOutput() WorkloadScalingPolicyTimeoutsPtrOutput {
	return o.ToWorkloadScalingPolicyTimeoutsPtrOutputWithContext(context.Background())
}

func (o WorkloadScalingPolicyTimeoutsOutput) ToWorkloadScalingPolicyTimeoutsPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadScalingPolicyTimeouts) *WorkloadScalingPolicyTimeouts {
		return &v
	}).(WorkloadScalingPolicyTimeoutsPtrOutput)
}

func (o WorkloadScalingPolicyTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o WorkloadScalingPolicyTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o WorkloadScalingPolicyTimeoutsOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyTimeouts) *string { return v.Read }).(pulumi.StringPtrOutput)
}

func (o WorkloadScalingPolicyTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadScalingPolicyTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type WorkloadScalingPolicyTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (WorkloadScalingPolicyTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadScalingPolicyTimeouts)(nil)).Elem()
}

func (o WorkloadScalingPolicyTimeoutsPtrOutput) ToWorkloadScalingPolicyTimeoutsPtrOutput() WorkloadScalingPolicyTimeoutsPtrOutput {
	return o
}

func (o WorkloadScalingPolicyTimeoutsPtrOutput) ToWorkloadScalingPolicyTimeoutsPtrOutputWithContext(ctx context.Context) WorkloadScalingPolicyTimeoutsPtrOutput {
	return o
}

func (o WorkloadScalingPolicyTimeoutsPtrOutput) Elem() WorkloadScalingPolicyTimeoutsOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyTimeouts) WorkloadScalingPolicyTimeouts {
		if v != nil {
			return *v
		}
		var ret WorkloadScalingPolicyTimeouts
		return ret
	}).(WorkloadScalingPolicyTimeoutsOutput)
}

func (o WorkloadScalingPolicyTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadScalingPolicyTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadScalingPolicyTimeoutsPtrOutput) Read() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Read
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadScalingPolicyTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadScalingPolicyTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type GetRebalancingScheduleLaunchConfiguration struct {
	AggressiveMode               bool                                                            `pulumi:"aggressiveMode"`
	AggressiveModeConfigs        []GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig `pulumi:"aggressiveModeConfigs"`
	ExecutionConditions          []GetRebalancingScheduleLaunchConfigurationExecutionCondition   `pulumi:"executionConditions"`
	KeepDrainTimeoutNodes        bool                                                            `pulumi:"keepDrainTimeoutNodes"`
	NodeTtlSeconds               float64                                                         `pulumi:"nodeTtlSeconds"`
	NumTargetedNodes             float64                                                         `pulumi:"numTargetedNodes"`
	RebalancingMinNodes          float64                                                         `pulumi:"rebalancingMinNodes"`
	Selector                     string                                                          `pulumi:"selector"`
	TargetNodeSelectionAlgorithm string                                                          `pulumi:"targetNodeSelectionAlgorithm"`
}

// GetRebalancingScheduleLaunchConfigurationInput is an input type that accepts GetRebalancingScheduleLaunchConfigurationArgs and GetRebalancingScheduleLaunchConfigurationOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleLaunchConfigurationInput` via:
//
//	GetRebalancingScheduleLaunchConfigurationArgs{...}
type GetRebalancingScheduleLaunchConfigurationInput interface {
	pulumi.Input

	ToGetRebalancingScheduleLaunchConfigurationOutput() GetRebalancingScheduleLaunchConfigurationOutput
	ToGetRebalancingScheduleLaunchConfigurationOutputWithContext(context.Context) GetRebalancingScheduleLaunchConfigurationOutput
}

type GetRebalancingScheduleLaunchConfigurationArgs struct {
	AggressiveMode               pulumi.BoolInput                                                        `pulumi:"aggressiveMode"`
	AggressiveModeConfigs        GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayInput `pulumi:"aggressiveModeConfigs"`
	ExecutionConditions          GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayInput   `pulumi:"executionConditions"`
	KeepDrainTimeoutNodes        pulumi.BoolInput                                                        `pulumi:"keepDrainTimeoutNodes"`
	NodeTtlSeconds               pulumi.Float64Input                                                     `pulumi:"nodeTtlSeconds"`
	NumTargetedNodes             pulumi.Float64Input                                                     `pulumi:"numTargetedNodes"`
	RebalancingMinNodes          pulumi.Float64Input                                                     `pulumi:"rebalancingMinNodes"`
	Selector                     pulumi.StringInput                                                      `pulumi:"selector"`
	TargetNodeSelectionAlgorithm pulumi.StringInput                                                      `pulumi:"targetNodeSelectionAlgorithm"`
}

func (GetRebalancingScheduleLaunchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleLaunchConfiguration)(nil)).Elem()
}

func (i GetRebalancingScheduleLaunchConfigurationArgs) ToGetRebalancingScheduleLaunchConfigurationOutput() GetRebalancingScheduleLaunchConfigurationOutput {
	return i.ToGetRebalancingScheduleLaunchConfigurationOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleLaunchConfigurationArgs) ToGetRebalancingScheduleLaunchConfigurationOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleLaunchConfigurationOutput)
}

// GetRebalancingScheduleLaunchConfigurationArrayInput is an input type that accepts GetRebalancingScheduleLaunchConfigurationArray and GetRebalancingScheduleLaunchConfigurationArrayOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleLaunchConfigurationArrayInput` via:
//
//	GetRebalancingScheduleLaunchConfigurationArray{ GetRebalancingScheduleLaunchConfigurationArgs{...} }
type GetRebalancingScheduleLaunchConfigurationArrayInput interface {
	pulumi.Input

	ToGetRebalancingScheduleLaunchConfigurationArrayOutput() GetRebalancingScheduleLaunchConfigurationArrayOutput
	ToGetRebalancingScheduleLaunchConfigurationArrayOutputWithContext(context.Context) GetRebalancingScheduleLaunchConfigurationArrayOutput
}

type GetRebalancingScheduleLaunchConfigurationArray []GetRebalancingScheduleLaunchConfigurationInput

func (GetRebalancingScheduleLaunchConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleLaunchConfiguration)(nil)).Elem()
}

func (i GetRebalancingScheduleLaunchConfigurationArray) ToGetRebalancingScheduleLaunchConfigurationArrayOutput() GetRebalancingScheduleLaunchConfigurationArrayOutput {
	return i.ToGetRebalancingScheduleLaunchConfigurationArrayOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleLaunchConfigurationArray) ToGetRebalancingScheduleLaunchConfigurationArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleLaunchConfigurationArrayOutput)
}

type GetRebalancingScheduleLaunchConfigurationOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleLaunchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleLaunchConfiguration)(nil)).Elem()
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) ToGetRebalancingScheduleLaunchConfigurationOutput() GetRebalancingScheduleLaunchConfigurationOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) ToGetRebalancingScheduleLaunchConfigurationOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) AggressiveMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfiguration) bool { return v.AggressiveMode }).(pulumi.BoolOutput)
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) AggressiveModeConfigs() GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfiguration) []GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig {
		return v.AggressiveModeConfigs
	}).(GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput)
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) ExecutionConditions() GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfiguration) []GetRebalancingScheduleLaunchConfigurationExecutionCondition {
		return v.ExecutionConditions
	}).(GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput)
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) KeepDrainTimeoutNodes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfiguration) bool { return v.KeepDrainTimeoutNodes }).(pulumi.BoolOutput)
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) NodeTtlSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfiguration) float64 { return v.NodeTtlSeconds }).(pulumi.Float64Output)
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) NumTargetedNodes() pulumi.Float64Output {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfiguration) float64 { return v.NumTargetedNodes }).(pulumi.Float64Output)
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) RebalancingMinNodes() pulumi.Float64Output {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfiguration) float64 { return v.RebalancingMinNodes }).(pulumi.Float64Output)
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfiguration) string { return v.Selector }).(pulumi.StringOutput)
}

func (o GetRebalancingScheduleLaunchConfigurationOutput) TargetNodeSelectionAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfiguration) string { return v.TargetNodeSelectionAlgorithm }).(pulumi.StringOutput)
}

type GetRebalancingScheduleLaunchConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleLaunchConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleLaunchConfiguration)(nil)).Elem()
}

func (o GetRebalancingScheduleLaunchConfigurationArrayOutput) ToGetRebalancingScheduleLaunchConfigurationArrayOutput() GetRebalancingScheduleLaunchConfigurationArrayOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationArrayOutput) ToGetRebalancingScheduleLaunchConfigurationArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationArrayOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationArrayOutput) Index(i pulumi.IntInput) GetRebalancingScheduleLaunchConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRebalancingScheduleLaunchConfiguration {
		return vs[0].([]GetRebalancingScheduleLaunchConfiguration)[vs[1].(int)]
	}).(GetRebalancingScheduleLaunchConfigurationOutput)
}

type GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig struct {
	IgnoreLocalPersistentVolumes bool `pulumi:"ignoreLocalPersistentVolumes"`
}

// GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigInput is an input type that accepts GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs and GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigInput` via:
//
//	GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs{...}
type GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigInput interface {
	pulumi.Input

	ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput() GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput
	ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutputWithContext(context.Context) GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput
}

type GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs struct {
	IgnoreLocalPersistentVolumes pulumi.BoolInput `pulumi:"ignoreLocalPersistentVolumes"`
}

func (GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig)(nil)).Elem()
}

func (i GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs) ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput() GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return i.ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs) ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput)
}

// GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayInput is an input type that accepts GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArray and GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayInput` via:
//
//	GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArray{ GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs{...} }
type GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayInput interface {
	pulumi.Input

	ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput() GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput
	ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutputWithContext(context.Context) GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput
}

type GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArray []GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigInput

func (GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig)(nil)).Elem()
}

func (i GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArray) ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput() GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput {
	return i.ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArray) ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput)
}

type GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig)(nil)).Elem()
}

func (o GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput() GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput) IgnoreLocalPersistentVolumes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig) bool {
		return v.IgnoreLocalPersistentVolumes
	}).(pulumi.BoolOutput)
}

type GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig)(nil)).Elem()
}

func (o GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput) ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput() GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput) ToGetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput) Index(i pulumi.IntInput) GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig {
		return vs[0].([]GetRebalancingScheduleLaunchConfigurationAggressiveModeConfig)[vs[1].(int)]
	}).(GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput)
}

type GetRebalancingScheduleLaunchConfigurationExecutionCondition struct {
	AchievedSavingsPercentage float64 `pulumi:"achievedSavingsPercentage"`
	Enabled                   bool    `pulumi:"enabled"`
}

// GetRebalancingScheduleLaunchConfigurationExecutionConditionInput is an input type that accepts GetRebalancingScheduleLaunchConfigurationExecutionConditionArgs and GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleLaunchConfigurationExecutionConditionInput` via:
//
//	GetRebalancingScheduleLaunchConfigurationExecutionConditionArgs{...}
type GetRebalancingScheduleLaunchConfigurationExecutionConditionInput interface {
	pulumi.Input

	ToGetRebalancingScheduleLaunchConfigurationExecutionConditionOutput() GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput
	ToGetRebalancingScheduleLaunchConfigurationExecutionConditionOutputWithContext(context.Context) GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput
}

type GetRebalancingScheduleLaunchConfigurationExecutionConditionArgs struct {
	AchievedSavingsPercentage pulumi.Float64Input `pulumi:"achievedSavingsPercentage"`
	Enabled                   pulumi.BoolInput    `pulumi:"enabled"`
}

func (GetRebalancingScheduleLaunchConfigurationExecutionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationExecutionCondition)(nil)).Elem()
}

func (i GetRebalancingScheduleLaunchConfigurationExecutionConditionArgs) ToGetRebalancingScheduleLaunchConfigurationExecutionConditionOutput() GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput {
	return i.ToGetRebalancingScheduleLaunchConfigurationExecutionConditionOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleLaunchConfigurationExecutionConditionArgs) ToGetRebalancingScheduleLaunchConfigurationExecutionConditionOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput)
}

// GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayInput is an input type that accepts GetRebalancingScheduleLaunchConfigurationExecutionConditionArray and GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayInput` via:
//
//	GetRebalancingScheduleLaunchConfigurationExecutionConditionArray{ GetRebalancingScheduleLaunchConfigurationExecutionConditionArgs{...} }
type GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayInput interface {
	pulumi.Input

	ToGetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput() GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput
	ToGetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutputWithContext(context.Context) GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput
}

type GetRebalancingScheduleLaunchConfigurationExecutionConditionArray []GetRebalancingScheduleLaunchConfigurationExecutionConditionInput

func (GetRebalancingScheduleLaunchConfigurationExecutionConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleLaunchConfigurationExecutionCondition)(nil)).Elem()
}

func (i GetRebalancingScheduleLaunchConfigurationExecutionConditionArray) ToGetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput() GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput {
	return i.ToGetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleLaunchConfigurationExecutionConditionArray) ToGetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput)
}

type GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationExecutionCondition)(nil)).Elem()
}

func (o GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput) ToGetRebalancingScheduleLaunchConfigurationExecutionConditionOutput() GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput) ToGetRebalancingScheduleLaunchConfigurationExecutionConditionOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput) AchievedSavingsPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfigurationExecutionCondition) float64 {
		return v.AchievedSavingsPercentage
	}).(pulumi.Float64Output)
}

func (o GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRebalancingScheduleLaunchConfigurationExecutionCondition) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleLaunchConfigurationExecutionCondition)(nil)).Elem()
}

func (o GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput) ToGetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput() GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput) ToGetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput {
	return o
}

func (o GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput) Index(i pulumi.IntInput) GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRebalancingScheduleLaunchConfigurationExecutionCondition {
		return vs[0].([]GetRebalancingScheduleLaunchConfigurationExecutionCondition)[vs[1].(int)]
	}).(GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput)
}

type GetRebalancingScheduleSchedule struct {
	Cron string `pulumi:"cron"`
}

// GetRebalancingScheduleScheduleInput is an input type that accepts GetRebalancingScheduleScheduleArgs and GetRebalancingScheduleScheduleOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleScheduleInput` via:
//
//	GetRebalancingScheduleScheduleArgs{...}
type GetRebalancingScheduleScheduleInput interface {
	pulumi.Input

	ToGetRebalancingScheduleScheduleOutput() GetRebalancingScheduleScheduleOutput
	ToGetRebalancingScheduleScheduleOutputWithContext(context.Context) GetRebalancingScheduleScheduleOutput
}

type GetRebalancingScheduleScheduleArgs struct {
	Cron pulumi.StringInput `pulumi:"cron"`
}

func (GetRebalancingScheduleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleSchedule)(nil)).Elem()
}

func (i GetRebalancingScheduleScheduleArgs) ToGetRebalancingScheduleScheduleOutput() GetRebalancingScheduleScheduleOutput {
	return i.ToGetRebalancingScheduleScheduleOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleScheduleArgs) ToGetRebalancingScheduleScheduleOutputWithContext(ctx context.Context) GetRebalancingScheduleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleScheduleOutput)
}

// GetRebalancingScheduleScheduleArrayInput is an input type that accepts GetRebalancingScheduleScheduleArray and GetRebalancingScheduleScheduleArrayOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleScheduleArrayInput` via:
//
//	GetRebalancingScheduleScheduleArray{ GetRebalancingScheduleScheduleArgs{...} }
type GetRebalancingScheduleScheduleArrayInput interface {
	pulumi.Input

	ToGetRebalancingScheduleScheduleArrayOutput() GetRebalancingScheduleScheduleArrayOutput
	ToGetRebalancingScheduleScheduleArrayOutputWithContext(context.Context) GetRebalancingScheduleScheduleArrayOutput
}

type GetRebalancingScheduleScheduleArray []GetRebalancingScheduleScheduleInput

func (GetRebalancingScheduleScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleSchedule)(nil)).Elem()
}

func (i GetRebalancingScheduleScheduleArray) ToGetRebalancingScheduleScheduleArrayOutput() GetRebalancingScheduleScheduleArrayOutput {
	return i.ToGetRebalancingScheduleScheduleArrayOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleScheduleArray) ToGetRebalancingScheduleScheduleArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleScheduleArrayOutput)
}

type GetRebalancingScheduleScheduleOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleSchedule)(nil)).Elem()
}

func (o GetRebalancingScheduleScheduleOutput) ToGetRebalancingScheduleScheduleOutput() GetRebalancingScheduleScheduleOutput {
	return o
}

func (o GetRebalancingScheduleScheduleOutput) ToGetRebalancingScheduleScheduleOutputWithContext(ctx context.Context) GetRebalancingScheduleScheduleOutput {
	return o
}

func (o GetRebalancingScheduleScheduleOutput) Cron() pulumi.StringOutput {
	return o.ApplyT(func(v GetRebalancingScheduleSchedule) string { return v.Cron }).(pulumi.StringOutput)
}

type GetRebalancingScheduleScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleSchedule)(nil)).Elem()
}

func (o GetRebalancingScheduleScheduleArrayOutput) ToGetRebalancingScheduleScheduleArrayOutput() GetRebalancingScheduleScheduleArrayOutput {
	return o
}

func (o GetRebalancingScheduleScheduleArrayOutput) ToGetRebalancingScheduleScheduleArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleScheduleArrayOutput {
	return o
}

func (o GetRebalancingScheduleScheduleArrayOutput) Index(i pulumi.IntInput) GetRebalancingScheduleScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRebalancingScheduleSchedule {
		return vs[0].([]GetRebalancingScheduleSchedule)[vs[1].(int)]
	}).(GetRebalancingScheduleScheduleOutput)
}

type GetRebalancingScheduleTriggerCondition struct {
	IgnoreSavings     bool    `pulumi:"ignoreSavings"`
	SavingsPercentage float64 `pulumi:"savingsPercentage"`
}

// GetRebalancingScheduleTriggerConditionInput is an input type that accepts GetRebalancingScheduleTriggerConditionArgs and GetRebalancingScheduleTriggerConditionOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleTriggerConditionInput` via:
//
//	GetRebalancingScheduleTriggerConditionArgs{...}
type GetRebalancingScheduleTriggerConditionInput interface {
	pulumi.Input

	ToGetRebalancingScheduleTriggerConditionOutput() GetRebalancingScheduleTriggerConditionOutput
	ToGetRebalancingScheduleTriggerConditionOutputWithContext(context.Context) GetRebalancingScheduleTriggerConditionOutput
}

type GetRebalancingScheduleTriggerConditionArgs struct {
	IgnoreSavings     pulumi.BoolInput    `pulumi:"ignoreSavings"`
	SavingsPercentage pulumi.Float64Input `pulumi:"savingsPercentage"`
}

func (GetRebalancingScheduleTriggerConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleTriggerCondition)(nil)).Elem()
}

func (i GetRebalancingScheduleTriggerConditionArgs) ToGetRebalancingScheduleTriggerConditionOutput() GetRebalancingScheduleTriggerConditionOutput {
	return i.ToGetRebalancingScheduleTriggerConditionOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleTriggerConditionArgs) ToGetRebalancingScheduleTriggerConditionOutputWithContext(ctx context.Context) GetRebalancingScheduleTriggerConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleTriggerConditionOutput)
}

// GetRebalancingScheduleTriggerConditionArrayInput is an input type that accepts GetRebalancingScheduleTriggerConditionArray and GetRebalancingScheduleTriggerConditionArrayOutput values.
// You can construct a concrete instance of `GetRebalancingScheduleTriggerConditionArrayInput` via:
//
//	GetRebalancingScheduleTriggerConditionArray{ GetRebalancingScheduleTriggerConditionArgs{...} }
type GetRebalancingScheduleTriggerConditionArrayInput interface {
	pulumi.Input

	ToGetRebalancingScheduleTriggerConditionArrayOutput() GetRebalancingScheduleTriggerConditionArrayOutput
	ToGetRebalancingScheduleTriggerConditionArrayOutputWithContext(context.Context) GetRebalancingScheduleTriggerConditionArrayOutput
}

type GetRebalancingScheduleTriggerConditionArray []GetRebalancingScheduleTriggerConditionInput

func (GetRebalancingScheduleTriggerConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleTriggerCondition)(nil)).Elem()
}

func (i GetRebalancingScheduleTriggerConditionArray) ToGetRebalancingScheduleTriggerConditionArrayOutput() GetRebalancingScheduleTriggerConditionArrayOutput {
	return i.ToGetRebalancingScheduleTriggerConditionArrayOutputWithContext(context.Background())
}

func (i GetRebalancingScheduleTriggerConditionArray) ToGetRebalancingScheduleTriggerConditionArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleTriggerConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRebalancingScheduleTriggerConditionArrayOutput)
}

type GetRebalancingScheduleTriggerConditionOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleTriggerConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRebalancingScheduleTriggerCondition)(nil)).Elem()
}

func (o GetRebalancingScheduleTriggerConditionOutput) ToGetRebalancingScheduleTriggerConditionOutput() GetRebalancingScheduleTriggerConditionOutput {
	return o
}

func (o GetRebalancingScheduleTriggerConditionOutput) ToGetRebalancingScheduleTriggerConditionOutputWithContext(ctx context.Context) GetRebalancingScheduleTriggerConditionOutput {
	return o
}

func (o GetRebalancingScheduleTriggerConditionOutput) IgnoreSavings() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRebalancingScheduleTriggerCondition) bool { return v.IgnoreSavings }).(pulumi.BoolOutput)
}

func (o GetRebalancingScheduleTriggerConditionOutput) SavingsPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetRebalancingScheduleTriggerCondition) float64 { return v.SavingsPercentage }).(pulumi.Float64Output)
}

type GetRebalancingScheduleTriggerConditionArrayOutput struct{ *pulumi.OutputState }

func (GetRebalancingScheduleTriggerConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRebalancingScheduleTriggerCondition)(nil)).Elem()
}

func (o GetRebalancingScheduleTriggerConditionArrayOutput) ToGetRebalancingScheduleTriggerConditionArrayOutput() GetRebalancingScheduleTriggerConditionArrayOutput {
	return o
}

func (o GetRebalancingScheduleTriggerConditionArrayOutput) ToGetRebalancingScheduleTriggerConditionArrayOutputWithContext(ctx context.Context) GetRebalancingScheduleTriggerConditionArrayOutput {
	return o
}

func (o GetRebalancingScheduleTriggerConditionArrayOutput) Index(i pulumi.IntInput) GetRebalancingScheduleTriggerConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRebalancingScheduleTriggerCondition {
		return vs[0].([]GetRebalancingScheduleTriggerCondition)[vs[1].(int)]
	}).(GetRebalancingScheduleTriggerConditionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AksClusterHttpProxyConfigInput)(nil)).Elem(), AksClusterHttpProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AksClusterHttpProxyConfigPtrInput)(nil)).Elem(), AksClusterHttpProxyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AksClusterTimeoutsInput)(nil)).Elem(), AksClusterTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AksClusterTimeoutsPtrInput)(nil)).Elem(), AksClusterTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsInput)(nil)).Elem(), AutoscalerAutoscalerSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsClusterLimitsInput)(nil)).Elem(), AutoscalerAutoscalerSettingsClusterLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsClusterLimitsPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsClusterLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsClusterLimitsCpuInput)(nil)).Elem(), AutoscalerAutoscalerSettingsClusterLimitsCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsClusterLimitsCpuPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsClusterLimitsCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerInput)(nil)).Elem(), AutoscalerAutoscalerSettingsNodeDownscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsNodeDownscalerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesInput)(nil)).Elem(), AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerEvictorInput)(nil)).Elem(), AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsNodeDownscalerEvictorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesInput)(nil)).Elem(), AutoscalerAutoscalerSettingsSpotInstancesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsSpotInstancesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsInput)(nil)).Elem(), AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsInput)(nil)).Elem(), AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrInput)(nil)).Elem(), AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerTimeoutsInput)(nil)).Elem(), AutoscalerTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoscalerTimeoutsPtrInput)(nil)).Elem(), AutoscalerTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsAzureReservationInput)(nil)).Elem(), CommitmentsAzureReservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsAzureReservationArrayInput)(nil)).Elem(), CommitmentsAzureReservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsAzureReservationAssignmentInput)(nil)).Elem(), CommitmentsAzureReservationAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsAzureReservationAssignmentArrayInput)(nil)).Elem(), CommitmentsAzureReservationAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsCommitmentConfigInput)(nil)).Elem(), CommitmentsCommitmentConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsCommitmentConfigArrayInput)(nil)).Elem(), CommitmentsCommitmentConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsCommitmentConfigAssignmentInput)(nil)).Elem(), CommitmentsCommitmentConfigAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsCommitmentConfigAssignmentArrayInput)(nil)).Elem(), CommitmentsCommitmentConfigAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsCommitmentConfigMatcherInput)(nil)).Elem(), CommitmentsCommitmentConfigMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsGcpCudInput)(nil)).Elem(), CommitmentsGcpCudArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsGcpCudArrayInput)(nil)).Elem(), CommitmentsGcpCudArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsGcpCudAssignmentInput)(nil)).Elem(), CommitmentsGcpCudAssignmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsGcpCudAssignmentArrayInput)(nil)).Elem(), CommitmentsGcpCudAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsTimeoutsInput)(nil)).Elem(), CommitmentsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CommitmentsTimeoutsPtrInput)(nil)).Elem(), CommitmentsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EksClusterTimeoutsInput)(nil)).Elem(), EksClusterTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EksClusterTimeoutsPtrInput)(nil)).Elem(), EksClusterTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigArrayInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayInput)(nil)).Elem(), EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigTimeoutsInput)(nil)).Elem(), EvictorAdvancedConfigTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EvictorAdvancedConfigTimeoutsPtrInput)(nil)).Elem(), EvictorAdvancedConfigTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterIdTimeoutsInput)(nil)).Elem(), GkeClusterIdTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterIdTimeoutsPtrInput)(nil)).Elem(), GkeClusterIdTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterTimeoutsInput)(nil)).Elem(), GkeClusterTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GkeClusterTimeoutsPtrInput)(nil)).Elem(), GkeClusterTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksInput)(nil)).Elem(), NodeConfigurationAksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksPtrInput)(nil)).Elem(), NodeConfigurationAksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksEphemeralOsDiskInput)(nil)).Elem(), NodeConfigurationAksEphemeralOsDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksEphemeralOsDiskPtrInput)(nil)).Elem(), NodeConfigurationAksEphemeralOsDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerArrayInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerIpBasedBackendPoolInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerIpBasedBackendPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerIpBasedBackendPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerNicBasedBackendPoolInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerNicBasedBackendPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayInput)(nil)).Elem(), NodeConfigurationAksLoadbalancerNicBasedBackendPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationDefaultTimeoutsInput)(nil)).Elem(), NodeConfigurationDefaultTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationDefaultTimeoutsPtrInput)(nil)).Elem(), NodeConfigurationDefaultTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationEksInput)(nil)).Elem(), NodeConfigurationEksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationEksPtrInput)(nil)).Elem(), NodeConfigurationEksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationEksTargetGroupInput)(nil)).Elem(), NodeConfigurationEksTargetGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationEksTargetGroupArrayInput)(nil)).Elem(), NodeConfigurationEksTargetGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeInput)(nil)).Elem(), NodeConfigurationGkeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkePtrInput)(nil)).Elem(), NodeConfigurationGkeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerArrayInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerTargetBackendPoolInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerTargetBackendPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerTargetBackendPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayInput)(nil)).Elem(), NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationKopsInput)(nil)).Elem(), NodeConfigurationKopsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationKopsPtrInput)(nil)).Elem(), NodeConfigurationKopsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationTimeoutsInput)(nil)).Elem(), NodeConfigurationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeConfigurationTimeoutsPtrInput)(nil)).Elem(), NodeConfigurationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsInput)(nil)).Elem(), NodeTemplateConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsPtrInput)(nil)).Elem(), NodeTemplateConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsCustomPriorityInput)(nil)).Elem(), NodeTemplateConstraintsCustomPriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsCustomPriorityArrayInput)(nil)).Elem(), NodeTemplateConstraintsCustomPriorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityInput)(nil)).Elem(), NodeTemplateConstraintsDedicatedNodeAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityArrayInput)(nil)).Elem(), NodeTemplateConstraintsDedicatedNodeAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityAffinityInput)(nil)).Elem(), NodeTemplateConstraintsDedicatedNodeAffinityAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayInput)(nil)).Elem(), NodeTemplateConstraintsDedicatedNodeAffinityAffinityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsGpuInput)(nil)).Elem(), NodeTemplateConstraintsGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsGpuPtrInput)(nil)).Elem(), NodeTemplateConstraintsGpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsInstanceFamiliesInput)(nil)).Elem(), NodeTemplateConstraintsInstanceFamiliesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsInstanceFamiliesPtrInput)(nil)).Elem(), NodeTemplateConstraintsInstanceFamiliesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsResourceLimitsInput)(nil)).Elem(), NodeTemplateConstraintsResourceLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateConstraintsResourceLimitsPtrInput)(nil)).Elem(), NodeTemplateConstraintsResourceLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateCustomTaintInput)(nil)).Elem(), NodeTemplateCustomTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateCustomTaintArrayInput)(nil)).Elem(), NodeTemplateCustomTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateTimeoutsInput)(nil)).Elem(), NodeTemplateTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeTemplateTimeoutsPtrInput)(nil)).Elem(), NodeTemplateTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupMemberInput)(nil)).Elem(), OrganizationGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupMemberArrayInput)(nil)).Elem(), OrganizationGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupMemberMemberInput)(nil)).Elem(), OrganizationGroupMemberMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupMemberMemberArrayInput)(nil)).Elem(), OrganizationGroupMemberMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupTimeoutsInput)(nil)).Elem(), OrganizationGroupTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationGroupTimeoutsPtrInput)(nil)).Elem(), OrganizationGroupTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationMembersTimeoutsInput)(nil)).Elem(), OrganizationMembersTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationMembersTimeoutsPtrInput)(nil)).Elem(), OrganizationMembersTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingJobTimeoutsInput)(nil)).Elem(), RebalancingJobTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingJobTimeoutsPtrInput)(nil)).Elem(), RebalancingJobTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleLaunchConfigurationInput)(nil)).Elem(), RebalancingScheduleLaunchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleLaunchConfigurationPtrInput)(nil)).Elem(), RebalancingScheduleLaunchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleLaunchConfigurationAggressiveModeConfigInput)(nil)).Elem(), RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrInput)(nil)).Elem(), RebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleLaunchConfigurationExecutionConditionsInput)(nil)).Elem(), RebalancingScheduleLaunchConfigurationExecutionConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleLaunchConfigurationExecutionConditionsPtrInput)(nil)).Elem(), RebalancingScheduleLaunchConfigurationExecutionConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleScheduleInput)(nil)).Elem(), RebalancingScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleSchedulePtrInput)(nil)).Elem(), RebalancingScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleTimeoutsInput)(nil)).Elem(), RebalancingScheduleTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleTimeoutsPtrInput)(nil)).Elem(), RebalancingScheduleTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleTriggerConditionsInput)(nil)).Elem(), RebalancingScheduleTriggerConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RebalancingScheduleTriggerConditionsPtrInput)(nil)).Elem(), RebalancingScheduleTriggerConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationsReservationInput)(nil)).Elem(), ReservationsReservationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationsReservationArrayInput)(nil)).Elem(), ReservationsReservationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationsTimeoutsInput)(nil)).Elem(), ReservationsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservationsTimeoutsPtrInput)(nil)).Elem(), ReservationsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleBindingsScopeInput)(nil)).Elem(), RoleBindingsScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleBindingsScopePtrInput)(nil)).Elem(), RoleBindingsScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleBindingsSubjectInput)(nil)).Elem(), RoleBindingsSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleBindingsSubjectArrayInput)(nil)).Elem(), RoleBindingsSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleBindingsSubjectSubjectInput)(nil)).Elem(), RoleBindingsSubjectSubjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleBindingsSubjectSubjectArrayInput)(nil)).Elem(), RoleBindingsSubjectSubjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleBindingsTimeoutsInput)(nil)).Elem(), RoleBindingsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleBindingsTimeoutsPtrInput)(nil)).Elem(), RoleBindingsTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountAuthorInput)(nil)).Elem(), ServiceAccountAuthorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountAuthorArrayInput)(nil)).Elem(), ServiceAccountAuthorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountKeyTimeoutsInput)(nil)).Elem(), ServiceAccountKeyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountKeyTimeoutsPtrInput)(nil)).Elem(), ServiceAccountKeyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountTimeoutsInput)(nil)).Elem(), ServiceAccountTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountTimeoutsPtrInput)(nil)).Elem(), ServiceAccountTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoConnectionAadInput)(nil)).Elem(), SsoConnectionAadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoConnectionAadPtrInput)(nil)).Elem(), SsoConnectionAadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoConnectionOktaInput)(nil)).Elem(), SsoConnectionOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoConnectionOktaPtrInput)(nil)).Elem(), SsoConnectionOktaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoConnectionTimeoutsInput)(nil)).Elem(), SsoConnectionTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SsoConnectionTimeoutsPtrInput)(nil)).Elem(), SsoConnectionTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyAntiAffinityInput)(nil)).Elem(), WorkloadScalingPolicyAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyAntiAffinityPtrInput)(nil)).Elem(), WorkloadScalingPolicyAntiAffinityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyCpuInput)(nil)).Elem(), WorkloadScalingPolicyCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyCpuPtrInput)(nil)).Elem(), WorkloadScalingPolicyCpuArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyCpuApplyThresholdStrategyInput)(nil)).Elem(), WorkloadScalingPolicyCpuApplyThresholdStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyCpuApplyThresholdStrategyPtrInput)(nil)).Elem(), WorkloadScalingPolicyCpuApplyThresholdStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyCpuLimitInput)(nil)).Elem(), WorkloadScalingPolicyCpuLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyCpuLimitPtrInput)(nil)).Elem(), WorkloadScalingPolicyCpuLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyDownscalingInput)(nil)).Elem(), WorkloadScalingPolicyDownscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyDownscalingPtrInput)(nil)).Elem(), WorkloadScalingPolicyDownscalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyMemoryInput)(nil)).Elem(), WorkloadScalingPolicyMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyMemoryPtrInput)(nil)).Elem(), WorkloadScalingPolicyMemoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyMemoryApplyThresholdStrategyInput)(nil)).Elem(), WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrInput)(nil)).Elem(), WorkloadScalingPolicyMemoryApplyThresholdStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyMemoryEventInput)(nil)).Elem(), WorkloadScalingPolicyMemoryEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyMemoryEventPtrInput)(nil)).Elem(), WorkloadScalingPolicyMemoryEventArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyMemoryLimitInput)(nil)).Elem(), WorkloadScalingPolicyMemoryLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyMemoryLimitPtrInput)(nil)).Elem(), WorkloadScalingPolicyMemoryLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyStartupInput)(nil)).Elem(), WorkloadScalingPolicyStartupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyStartupPtrInput)(nil)).Elem(), WorkloadScalingPolicyStartupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyTimeoutsInput)(nil)).Elem(), WorkloadScalingPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadScalingPolicyTimeoutsPtrInput)(nil)).Elem(), WorkloadScalingPolicyTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationInput)(nil)).Elem(), GetRebalancingScheduleLaunchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationArrayInput)(nil)).Elem(), GetRebalancingScheduleLaunchConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigInput)(nil)).Elem(), GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayInput)(nil)).Elem(), GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationExecutionConditionInput)(nil)).Elem(), GetRebalancingScheduleLaunchConfigurationExecutionConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayInput)(nil)).Elem(), GetRebalancingScheduleLaunchConfigurationExecutionConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleScheduleInput)(nil)).Elem(), GetRebalancingScheduleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleScheduleArrayInput)(nil)).Elem(), GetRebalancingScheduleScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleTriggerConditionInput)(nil)).Elem(), GetRebalancingScheduleTriggerConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRebalancingScheduleTriggerConditionArrayInput)(nil)).Elem(), GetRebalancingScheduleTriggerConditionArray{})
	pulumi.RegisterOutputType(AksClusterHttpProxyConfigOutput{})
	pulumi.RegisterOutputType(AksClusterHttpProxyConfigPtrOutput{})
	pulumi.RegisterOutputType(AksClusterTimeoutsOutput{})
	pulumi.RegisterOutputType(AksClusterTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsClusterLimitsOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsClusterLimitsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsClusterLimitsCpuOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsClusterLimitsCpuPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsNodeDownscalerOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsNodeDownscalerPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsNodeDownscalerEmptyNodesPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsNodeDownscalerEvictorOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsNodeDownscalerEvictorPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsSpotInstancesOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsSpotInstancesPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsSpotInstancesSpotBackupsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsSpotInstancesSpotInterruptionPredictionsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsHeadroomSpotPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsNodeConstraintsPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerOutput{})
	pulumi.RegisterOutputType(AutoscalerAutoscalerSettingsUnschedulablePodsPodPinnerPtrOutput{})
	pulumi.RegisterOutputType(AutoscalerTimeoutsOutput{})
	pulumi.RegisterOutputType(AutoscalerTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(CommitmentsAzureReservationOutput{})
	pulumi.RegisterOutputType(CommitmentsAzureReservationArrayOutput{})
	pulumi.RegisterOutputType(CommitmentsAzureReservationAssignmentOutput{})
	pulumi.RegisterOutputType(CommitmentsAzureReservationAssignmentArrayOutput{})
	pulumi.RegisterOutputType(CommitmentsCommitmentConfigOutput{})
	pulumi.RegisterOutputType(CommitmentsCommitmentConfigArrayOutput{})
	pulumi.RegisterOutputType(CommitmentsCommitmentConfigAssignmentOutput{})
	pulumi.RegisterOutputType(CommitmentsCommitmentConfigAssignmentArrayOutput{})
	pulumi.RegisterOutputType(CommitmentsCommitmentConfigMatcherOutput{})
	pulumi.RegisterOutputType(CommitmentsGcpCudOutput{})
	pulumi.RegisterOutputType(CommitmentsGcpCudArrayOutput{})
	pulumi.RegisterOutputType(CommitmentsGcpCudAssignmentOutput{})
	pulumi.RegisterOutputType(CommitmentsGcpCudAssignmentArrayOutput{})
	pulumi.RegisterOutputType(CommitmentsTimeoutsOutput{})
	pulumi.RegisterOutputType(CommitmentsTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(EksClusterTimeoutsOutput{})
	pulumi.RegisterOutputType(EksClusterTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigArrayOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorArrayOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigNodeSelectorMatchExpressionArrayOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorArrayOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigEvictorAdvancedConfigPodSelectorMatchExpressionArrayOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigTimeoutsOutput{})
	pulumi.RegisterOutputType(EvictorAdvancedConfigTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GkeClusterIdTimeoutsOutput{})
	pulumi.RegisterOutputType(GkeClusterIdTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GkeClusterTimeoutsOutput{})
	pulumi.RegisterOutputType(GkeClusterTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksEphemeralOsDiskOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksEphemeralOsDiskPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerIpBasedBackendPoolOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerIpBasedBackendPoolArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerNicBasedBackendPoolOutput{})
	pulumi.RegisterOutputType(NodeConfigurationAksLoadbalancerNicBasedBackendPoolArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationDefaultTimeoutsOutput{})
	pulumi.RegisterOutputType(NodeConfigurationDefaultTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationEksOutput{})
	pulumi.RegisterOutputType(NodeConfigurationEksPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationEksTargetGroupOutput{})
	pulumi.RegisterOutputType(NodeConfigurationEksTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkePtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerTargetBackendPoolOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerTargetBackendPoolArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupOutput{})
	pulumi.RegisterOutputType(NodeConfigurationGkeLoadbalancerUnmanagedInstanceGroupArrayOutput{})
	pulumi.RegisterOutputType(NodeConfigurationKopsOutput{})
	pulumi.RegisterOutputType(NodeConfigurationKopsPtrOutput{})
	pulumi.RegisterOutputType(NodeConfigurationTimeoutsOutput{})
	pulumi.RegisterOutputType(NodeConfigurationTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsCustomPriorityOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsCustomPriorityArrayOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsDedicatedNodeAffinityOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsDedicatedNodeAffinityArrayOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsDedicatedNodeAffinityAffinityOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsDedicatedNodeAffinityAffinityArrayOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsGpuOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsGpuPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsInstanceFamiliesOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsInstanceFamiliesPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsResourceLimitsOutput{})
	pulumi.RegisterOutputType(NodeTemplateConstraintsResourceLimitsPtrOutput{})
	pulumi.RegisterOutputType(NodeTemplateCustomTaintOutput{})
	pulumi.RegisterOutputType(NodeTemplateCustomTaintArrayOutput{})
	pulumi.RegisterOutputType(NodeTemplateTimeoutsOutput{})
	pulumi.RegisterOutputType(NodeTemplateTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationGroupMemberOutput{})
	pulumi.RegisterOutputType(OrganizationGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(OrganizationGroupMemberMemberOutput{})
	pulumi.RegisterOutputType(OrganizationGroupMemberMemberArrayOutput{})
	pulumi.RegisterOutputType(OrganizationGroupTimeoutsOutput{})
	pulumi.RegisterOutputType(OrganizationGroupTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(OrganizationMembersTimeoutsOutput{})
	pulumi.RegisterOutputType(OrganizationMembersTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(RebalancingJobTimeoutsOutput{})
	pulumi.RegisterOutputType(RebalancingJobTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleLaunchConfigurationOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleLaunchConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleLaunchConfigurationAggressiveModeConfigPtrOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleLaunchConfigurationExecutionConditionsOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleLaunchConfigurationExecutionConditionsPtrOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleScheduleOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleSchedulePtrOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleTimeoutsOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleTriggerConditionsOutput{})
	pulumi.RegisterOutputType(RebalancingScheduleTriggerConditionsPtrOutput{})
	pulumi.RegisterOutputType(ReservationsReservationOutput{})
	pulumi.RegisterOutputType(ReservationsReservationArrayOutput{})
	pulumi.RegisterOutputType(ReservationsTimeoutsOutput{})
	pulumi.RegisterOutputType(ReservationsTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(RoleBindingsScopeOutput{})
	pulumi.RegisterOutputType(RoleBindingsScopePtrOutput{})
	pulumi.RegisterOutputType(RoleBindingsSubjectOutput{})
	pulumi.RegisterOutputType(RoleBindingsSubjectArrayOutput{})
	pulumi.RegisterOutputType(RoleBindingsSubjectSubjectOutput{})
	pulumi.RegisterOutputType(RoleBindingsSubjectSubjectArrayOutput{})
	pulumi.RegisterOutputType(RoleBindingsTimeoutsOutput{})
	pulumi.RegisterOutputType(RoleBindingsTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(ServiceAccountAuthorOutput{})
	pulumi.RegisterOutputType(ServiceAccountAuthorArrayOutput{})
	pulumi.RegisterOutputType(ServiceAccountKeyTimeoutsOutput{})
	pulumi.RegisterOutputType(ServiceAccountKeyTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(ServiceAccountTimeoutsOutput{})
	pulumi.RegisterOutputType(ServiceAccountTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(SsoConnectionAadOutput{})
	pulumi.RegisterOutputType(SsoConnectionAadPtrOutput{})
	pulumi.RegisterOutputType(SsoConnectionOktaOutput{})
	pulumi.RegisterOutputType(SsoConnectionOktaPtrOutput{})
	pulumi.RegisterOutputType(SsoConnectionTimeoutsOutput{})
	pulumi.RegisterOutputType(SsoConnectionTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyAntiAffinityOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyAntiAffinityPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyCpuOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyCpuPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyCpuApplyThresholdStrategyOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyCpuApplyThresholdStrategyPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyCpuLimitOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyCpuLimitPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyDownscalingOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyDownscalingPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyMemoryOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyMemoryPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyMemoryApplyThresholdStrategyOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyMemoryApplyThresholdStrategyPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyMemoryEventOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyMemoryEventPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyMemoryLimitOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyMemoryLimitPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyStartupOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyStartupPtrOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyTimeoutsOutput{})
	pulumi.RegisterOutputType(WorkloadScalingPolicyTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleLaunchConfigurationOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleLaunchConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleLaunchConfigurationAggressiveModeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleLaunchConfigurationExecutionConditionOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleLaunchConfigurationExecutionConditionArrayOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleScheduleOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleTriggerConditionOutput{})
	pulumi.RegisterOutputType(GetRebalancingScheduleTriggerConditionArrayOutput{})
}
